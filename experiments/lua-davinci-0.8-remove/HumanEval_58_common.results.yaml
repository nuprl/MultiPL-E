language: lua
name: HumanEval_58_common
results:
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local a = {}\n  local function add(v)\n    if not a[v] then\n\
    \      a[v] = true\n      return true\n    end\n  end\n  return setmetatable(table.filter(l1,\
    \ add), {__metatable = 'set'})\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpracz0ynk.lua:10:\
    \ attempt to call a nil value (field 'filter')\nstack traceback:\n\t/tmp/tmpracz0ynk.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpracz0ynk.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local res = {}\n  for _, v in ipairs(l1) do\n    if contains(l2,\
    \ v) then\n      table.insert(res, v)\n    end\n  end\n  table.sort(res)\n  return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpip0fuq30.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpip0fuq30.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpip0fuq30.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal l = {}\n\tlocal f = {}\n\tlocal lr = {}\n\tfor _, v\
    \ in ipairs(l1) do\n\t\tl[v] = true\n\tend\n\tfor _, v in ipairs(l2) do\n\t\t\
    if l[v] then\n\t\t\ttable.insert(lr, v)\n\t\t\tf[v] = true\n\t\tend\n\tend\n\t\
    for _, v in ipairs(l1) do\n\t\tif not f[v] then\n\t\t\ttable.insert(lr, v)\n\t\
    \tend\n\tend\n\treturn lr\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp02zc1195.lua:26:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653, 4, 3, 34, 2}\nstack traceback:\n\
    \t/tmp/tmp02zc1195.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local tmp = {}\n    for i, v in ipairs(l1) do\n        if\
    \ idx(l2, v) ~= nil then\n            tmp[#tmp+1] = v\n        end\n    end\n\
    \    if #tmp > 0 then\n        table.sort(tmp)\n        return tmp\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4o4vgvth.lua:5:\
    \ attempt to call a nil value (global 'idx')\nstack traceback:\n\t/tmp/tmp4o4vgvth.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp4o4vgvth.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  return unique(sorted_tables(l1, l2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyw_b7370.lua:3:\
    \ attempt to call a nil value (global 'sorted_tables')\nstack traceback:\n\t/tmp/tmpyw_b7370.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpyw_b7370.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    if #l1 < #l2 then\n        return common(l2, l1)\n    end\n\
    \    local res = {}\n    for _, v in ipairs(l1) do\n        for _, v2 in ipairs(l2)\
    \ do\n            if v == v2 then\n                table.insert(res, v)\n    \
    \        end\n        end\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5px2gf7j.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 653, 5, 5}\nstack traceback:\n\t/tmp/tmp5px2gf7j.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    if not (l1 and l2) then return {} end\n    local t = {}\n\
    \    for k, v in pairs(l1) do\n        if l2[k] then t[k] = v end\n    end\n \
    \   local u = {}\n    for k, v in pairs(t) do u[#u+1] = v end\n    table.sort(u)\n\
    \    return u\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpolacrq31.lua:17:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 34, 653}\nstack traceback:\n\t\
    /tmp/tmpolacrq31.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal h = {}\n\tfor _, v in ipairs(l1) do\n\t\tif elem(v,\
    \ l2) then\n\t\t\ttable.insert(h, v)\n\t\tend\n\tend\n\treturn h\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_lrg5enn.lua:5:\
    \ attempt to call a nil value (global 'elem')\nstack traceback:\n\t/tmp/tmp_lrg5enn.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp_lrg5enn.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    -- Order by length of list.\n    if #l1 > #l2 then\n   \
    \     l1, l2 = l2, l1\n    end\n    -- Determine common elements.\n    local t\
    \ = {}\n    for _, i in ipairs(l1) do\n        if utils.contains(l2, i) then\n\
    \            t[#t+1] = i\n        end\n    end\n    -- Return sorted list.\n \
    \   table.sort(t)\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg78ozq_e.lua:10:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmpg78ozq_e.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpg78ozq_e.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t1 = {}\n  local t2 = {}\n  for _, v in ipairs(l1) do\n\
    \    t1[v] = true\n  end\n  for _, v in ipairs(l2) do\n    t2[v] = true\n  end\n\
    \  local t = {}\n  for k, _ in pairs(t1) do\n    if t2[k] then\n      t[#t+1]\
    \ = k\n    end\n  end\n  return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgi5g82gu.lua:24:\
    \ expected: {2, 3}\nactual: {3, 2}\nstack traceback:\n\t/tmp/tmpgi5g82gu.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _,v in ipairs(l1) do\n        if contains(l2,\
    \ v) then\n            t[#t+1] = v\n        end\n    end\n    return t\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyn104u1j.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpyn104u1j.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpyn104u1j.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local seen, c = {}, {}\n  for _, v in ipairs(l1) do seen[v]\
    \ = true end\n  for _, v in ipairs(l2) do if seen[v] then c[#c+1] = v end end\n\
    \  sort(c)\n  return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphws4qmf1.lua:6:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmphws4qmf1.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmphws4qmf1.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal ret = {}\n\tfor k,v in pairs(l1) do\n\t\tif l2[k] then\n\
    \t\t\ttable.insert(ret, k)\n\t\tend\n\tend\n\treturn ret\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4qv_r2nd.lua:15:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 6, 7}\nstack traceback:\n\t/tmp/tmp4qv_r2nd.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal res = {}\n\tfor _, s in ipairs(l1) do\n\t\tfor _, t\
    \ in ipairs(l2) do\n\t\t\tif s == t then\n\t\t\t\tres[#res + 1] = s\n\t\t\tend\n\
    \t\tend\n\tend\n\ttable.sort(res)\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx4axclgx.lua:18:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpx4axclgx.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _, v in ipairs(l1) do\n        if\
    \ util.contains(l2, v) then\n            t[#t+1] = v\n        end\n    end\n \
    \   if #t > 0 then\n        table.sort(t)\n        return t\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp75_iqml3.lua:5:\
    \ attempt to index a nil value (global 'util')\nstack traceback:\n\t/tmp/tmp75_iqml3.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp75_iqml3.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local result = {}\n  for i = 1, #l1 do\n    for j = 1, #l2\
    \ do\n      if l1[i] == l2[j] then\n        result[#result + 1] = l1[i]\n    \
    \  end\n    end\n  end\n  table.sort(result)\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1o7zzq9w.lua:18:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp1o7zzq9w.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal r = {}\n\tfor i, v in ipairs(l1) do\n\t\tif i > #l2\
    \ then\n\t\t\tbreak\n\t\tend\n\t\tif v == l2[i] then\n\t\t\tr[#r + 1] = v\n\t\t\
    end\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmo85l2eq.lua:18:\
    \ expected: {1, 5, 653}\nactual: {}\nstack traceback:\n\t/tmp/tmpmo85l2eq.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local res = {}\n    for _, v in ipairs(l1) do\n        if\
    \ table.index(l2, v) then\n            table.insert_unique(res, v)\n        end\n\
    \    end\n    table.sort(res)\n    return res\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk71tzl32.lua:5:\
    \ attempt to call a nil value (field 'index')\nstack traceback:\n\t/tmp/tmpk71tzl32.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpk71tzl32.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  assert(type(l1) == \"table\" and type(l2) == \"table\")\n\
    \  local res = {}\n  for _, v in ipairs(l1) do\n    for _, v2 in ipairs(l2) do\n\
    \      if v == v2 then\n        if not contains(res, v) then\n          table.insert(res,\
    \ v)\n        end\n      end\n    end\n  end\n  table.sort(res)\n  return res\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpntosdxqn.lua:8:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpntosdxqn.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpntosdxqn.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local ret = {}\n  local i = 1\n  local x\n  while i <= #l1\
    \ do\n    if not x or x ~= l1[i] then\n      if find(l2, l1[i]) then\n       \
    \ ret[#ret + 1] = l1[i]\n      end\n      x = l1[i]\n    end\n    i = i + 1\n\
    \  end\n  return ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj_3_y70l.lua:8:\
    \ attempt to call a nil value (global 'find')\nstack traceback:\n\t/tmp/tmpj_3_y70l.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpj_3_y70l.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local l3 = {}\n    for i = 1, #l1 do\n        for j = 1,\
    \ #l2 do\n            if l1[i] == l2[j] then\n                l3[#l3 + 1] = l1[i]\n\
    \            end\n        end\n    end\n    return table.sort(l3)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnr_0m41_.lua:17:\
    \ expected: {1, 5, 653}\nactual: nil\nstack traceback:\n\t/tmp/tmpnr_0m41_.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal s2 = {}\n\tlocal r = {}\n\t\n\tfor _, v in ipairs(l2)\
    \ do\n\t\ts2[v] = true\n\tend\n\t\n\tfor _, v in ipairs(l1) do\n\t\tif s2[v] then\n\
    \t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\t\n\ttable.sort(r)\n\t\n\treturn r\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal c, n = {}, 0\n\tfor _, v in ipairs(l1) do\n\t\tif find(l2,\
    \ v) then\n\t\t\tn = n + 1\n\t\t\tc[n] = v\n\t\tend\n\tend\n\tsort(c)\n\treturn\
    \ c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8mw27a0h.lua:5:\
    \ attempt to call a nil value (global 'find')\nstack traceback:\n\t/tmp/tmp8mw27a0h.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp8mw27a0h.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal res = {}\n\tfor _, v in ipairs(l1) do\n\t\tif _M.contains(l2,\
    \ v) then\n\t\t\tres[#res+1] = v\n\t\tend\n\tend\n\tsort(res)\n\treturn unique(res)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwt_wnkgv.lua:5:\
    \ attempt to index a nil value (global '_M')\nstack traceback:\n\t/tmp/tmpwt_wnkgv.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpwt_wnkgv.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local common_elms = {}\n  for _, elm in ipairs(l1) do\n  \
    \  if has_element(l2, elm) then table.insert(common_elms, elm) end\n  end\n  return\
    \ unique(common_elms)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprv7pq78n.lua:5:\
    \ attempt to call a nil value (global 'has_element')\nstack traceback:\n\t/tmp/tmprv7pq78n.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmprv7pq78n.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local result = {}\n  local seen = {}\n  for i=1,#l1 do seen[l1[i]]\
    \ = true end\n  for i=1,#l2 do\n    if seen[l2[i]] then\n      result[#result+1]\
    \ = l2[i]\n    end\n  end\n  sort(result)\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb10hb62k.lua:11:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpb10hb62k.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpb10hb62k.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    if not l1 or not l2 then return end\n    local c = {}\n\
    \    for _,e in ipairs(l1) do\n        if contains(l2, e) then\n            table.insert(c,\
    \ e)\n        end\n    end\n    return unique(c)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0zt_nz5g.lua:6:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmp0zt_nz5g.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp0zt_nz5g.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local c = {}\n    for _, v in ipairs(l1) do\n        for\
    \ _, w in ipairs(l2) do\n            if v == w then table.insert(c, v) end\n \
    \       end\n    end\n    table.sort(c)\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwk7egbu8.lua:16:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpwk7egbu8.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local ht = {}\n    for _, v in ipairs(l1) do\n        ht[v]\
    \ = 1\n    end\n    for _, v in ipairs(l2) do\n        if ht[v] then\n       \
    \     ht[v] = 2\n        end\n    end\n    local out = {}\n    for k, v in pairs(ht)\
    \ do\n        if v == 2 then\n            table.insert(out, k)\n        end\n\
    \    end\n    table.sort(out)\n    return out\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif table.has_value(l2,\
    \ v) then\n\t\t\ttable.insert(t, v)\n\t\tend\n\tend\n\treturn table.unique(t)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoztrb6ju.lua:5:\
    \ attempt to call a nil value (field 'has_value')\nstack traceback:\n\t/tmp/tmpoztrb6ju.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoztrb6ju.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local m1 = {};\n  for _, l in ipairs(l1) do\n    m1[l] = true;\n\
    \  end\n  local m2 = {};\n  for _, l in ipairs(l2) do\n    if m1[l] then\n   \
    \   m2[l] = true;\n    end\n  end\n  local t = {};\n  for l in pairs(m2) do\n\
    \    t[#t+1] = l;\n  end\n  return table.sort(t);\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgsvivg0o.lua:23:\
    \ expected: {1, 5, 653}\nactual: nil\nstack traceback:\n\t/tmp/tmpgsvivg0o.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal keys = {}\n\tlocal ret = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tkeys[v] = 1\n\tend\n\tfor _, v in ipairs(l2) do\n\t\tif keys[v] then\n\
    \t\t\tret[#ret + 1] = v\n\t\tend\n\tend\n\ttable.sort(ret)\n\treturn ret\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3y4upca1.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp3y4upca1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\t-- insert elements from l1 and l2 into a table\n\tlocal t\
    \ = {}\n\tfor _, e in ipairs(l1) do\n\t\tt[e] = (t[e] or 0) + 1\n\tend\n\tfor\
    \ _, e in ipairs(l2) do\n\t\tt[e] = (t[e] or 0) + 1\n\tend\n\t-- return elements\
    \ that are in both lists\n\tlocal c = {}\n\tfor e, cnt in pairs(t) do\n\t\tif\
    \ cnt > 1 then\n\t\t\ttable.insert(c, e)\n\t\tend\n\tend\n\ttable.sort(c)\n\t\
    return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _,v in ipairs(l1) do\n    if bin.find(l2,\
    \ v) then t[#t+1] = v end\n  end\n  sort(t)\n  return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx7t4fl_e.lua:5:\
    \ attempt to index a nil value (global 'bin')\nstack traceback:\n\t/tmp/tmpx7t4fl_e.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpx7t4fl_e.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local s = {}\n  for i = 1, #l1 do\n    if index_of(l2, l1[i])\
    \ ~= nil then\n      insert(s, l1[i])\n    end\n  end\n  return unique(s)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4yw52ond.lua:5:\
    \ attempt to call a nil value (global 'index_of')\nstack traceback:\n\t/tmp/tmp4yw52ond.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp4yw52ond.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for _,v in ipairs(l1) do\n    if f(v, l2)\
    \ then\n      r[#r+1] = v\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkwes9_zh.lua:5:\
    \ attempt to call a nil value (global 'f')\nstack traceback:\n\t/tmp/tmpkwes9_zh.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpkwes9_zh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t1 = type(l1)\n    local t2 = type(l2)\n    if t1\
    \ ~= 'table' or t2 ~= 'table' then\n        return { }\n    end\n    local u =\
    \ {}\n    for _, v in ipairs(l1) do\n        if hasvalue(l2, v) then\n       \
    \     table.insert(u, v)\n        end\n    end\n    return sort(u)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppm3xsvbd.lua:10:\
    \ attempt to call a nil value (global 'hasvalue')\nstack traceback:\n\t/tmp/tmppm3xsvbd.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmppm3xsvbd.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  --sort elements\n  sort(l1)\n  sort(l2)\n  --return common\
    \ elements\n  local common = {}\n  local i1, i2 = 1, 1\n  while i1 <= #l1 and\
    \ i2 <= #l2 do\n    local v1, v2 = l1[i1], l2[i2]\n    if v1 == v2 then\n    \
    \  common[#common + 1] = v1\n      i1 = i1 + 1\n      i2 = i2 + 1\n    elseif\
    \ v1 < v2 then\n      i1 = i1 + 1\n    else\n      i2 = i2 + 1\n    end\n  end\n\
    \  return common\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1pe3wd15.lua:4:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmp1pe3wd15.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmp1pe3wd15.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local res = {}\n    for _, v in ipairs(l1) do\n        if\
    \ not tcontains(res, v) and tcontains(l2, v) then\n            tinsert(res, v)\n\
    \        end\n    end\n    return res\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv1n0r48j.lua:5:\
    \ attempt to call a nil value (global 'tcontains')\nstack traceback:\n\t/tmp/tmpv1n0r48j.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpv1n0r48j.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local c, o = {}\n    for _, i in ipairs(l1) do\n       \
    \ if not o[i] then\n            o[i] = true\n            c[#c+1] = i\n       \
    \ end\n    end\n    for _, i in ipairs(l2) do\n        if not o[i] then\n    \
    \        o[i] = true\n            c[#c+1] = i\n        end\n    end\n    sort(c)\n\
    \    return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpokixy8cp.lua:5:\
    \ attempt to index a nil value (local 'o')\nstack traceback:\n\t/tmp/tmpokixy8cp.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpokixy8cp.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal result = {}\n\tfor _, v in ipairs(l1) do\n\t\tfor _,\
    \ v2 in ipairs(l2) do\n\t\t\tif v == v2 then\n\t\t\t\tresult[#result + 1] = v\n\
    \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(result)\n\treturn result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\treturn sorted_unique(common_unsorted(l1, l2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc7a11m33.lua:3:\
    \ attempt to call a nil value (global 'common_unsorted')\nstack traceback:\n\t\
    /tmp/tmpc7a11m33.lua:3: in local 'candidate'\n\t/tmp/tmpc7a11m33.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal ret = {}\n\tlocal keys = {}\n\tfor _,val in ipairs(l1)\
    \ do\n\t\tif l2[val] then\n\t\t\tkeys[val] = true\n\t\tend\n\tend\n\tfor k,_ in\
    \ pairs(keys) do\n\t\ttable.insert(ret, k)\n\tend\n\ttable.sort(ret)\n\treturn\
    \ ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa6qlye5e.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5}\nstack traceback:\n\t/tmp/tmpa6qlye5e.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif in_table(v,\
    \ l2) then\n\t\t\tt[#t+1] = v\n\t\tend\n\tend\n\treturn sorted_unique(t)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6yjtgwlh.lua:5:\
    \ attempt to call a nil value (global 'in_table')\nstack traceback:\n\t/tmp/tmp6yjtgwlh.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp6yjtgwlh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  -- return ordered_set.union(l1, l2)\n  local i1, i2 = 1, 1\n\
    \  local results = {}\n  while i1 <= #l1 and i2 <= #l2 do\n    local a, b = l1[i1],\
    \ l2[i2]\n    if a == b then\n      table.insert(results, a)\n      i1 = i1 +\
    \ 1\n      i2 = i2 + 1\n    elseif a < b then\n      i1 = i1 + 1\n    else\n \
    \     i2 = i2 + 1\n    end\n  end\n  return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp07jg7rv3.lua:24:\
    \ expected: {1, 5, 653}\nactual: {653}\nstack traceback:\n\t/tmp/tmp07jg7rv3.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal l = {}\n\tlocal seen = {}\n\tlocal r = {}\n\tfor _,\
    \ i in ipairs(l1) do\n\t\tseen[i] = true\n\t\ttable.insert(l, i)\n\tend\n\tfor\
    \ _, i in ipairs(l2) do\n\t\tif seen[i] then\n\t\t\ttable.insert(r, i)\n\t\telse\n\
    \t\t\ttable.insert(l, i)\n\t\tend\n\tend\n\treturn r, l\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprdu5nrw9.lua:23:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmprdu5nrw9.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for k,v in pairs(l1) do\n    if l2[k] then\
    \ r[k] = true end\n  end\n  return key_sort(r)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqutnll4p.lua:7:\
    \ attempt to call a nil value (global 'key_sort')\nstack traceback:\n\t/tmp/tmpqutnll4p.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpqutnll4p.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local s = {}\n    local t = {}\n    for _, v in ipairs(l1)\
    \ do s[v] = true end\n    for _, v in ipairs(l2) do\n        if s[v] then t[#t+1]\
    \ = v end\n    end\n    table.sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp49g2keqv.lua:16:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp49g2keqv.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local l = {}\n    for i = 1, #l1 do\n        local v = l1[i]\n\
    \        if find(l2, v) and not find(l, v) then\n            l[#l + 1] = v\n \
    \       end\n    end\n    sort(l)\n    return l\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzb9h9njo.lua:6:\
    \ attempt to call a nil value (global 'find')\nstack traceback:\n\t/tmp/tmpzb9h9njo.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpzb9h9njo.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal res = {}\n\tlocal i1, i2 = 1, 1\n\tlocal n1, n2 = #l1,\
    \ #l2\n\twhile i1 <= n1 and i2 <= n2 do\n\t\tlocal v1, v2 = l1[i1], l2[i2]\n\t\
    \tif v1 == v2 then\n\t\t\tres[#res + 1] = v1\n\t\t\ti1 = i1 + 1\n\t\t\ti2 = i2\
    \ + 1\n\t\telseif v1 < v2 then\n\t\t\ti1 = i1 + 1\n\t\telse\n\t\t\ti2 = i2 + 1\n\
    \t\tend\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3l_2nvdb.lua:24:\
    \ expected: {1, 5, 653}\nactual: {653}\nstack traceback:\n\t/tmp/tmp3l_2nvdb.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _, x in ipairs(l1) do\n        if\
    \ utils.contains(l2, x) then\n            table.insert(t, x)\n        end\n  \
    \  end\n    return utils.uniq(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbik03jsh.lua:5:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmpbik03jsh.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpbik03jsh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local l3 = {}\n    for _, v in ipairs(l1) do\n        l3[v]\
    \ = true\n    end\n    for _, v in ipairs(l2) do\n        if l3[v] then\n    \
    \        l3[v] = nil\n            l3[#l3 + 1] = v\n        end\n    end\n    table.sort(l3)\n\
    \    return l3\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: 'E

    Tests with errors:

    ------------------

    1) test_humaneval

    attempt to compare number with nil

    stack traceback:


    Ran 1 tests in 0.000 seconds, 0 successes, 1 error

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    -- copy list\n    local l = {}\n    for k, v in pairs(l1)\
    \ do\n        l[k] = v\n    end\n    -- sort list\n    table.sort(l)\n    -- remove\
    \ elements of the other list\n    for _, v in ipairs(l2) do\n        local i =\
    \ table.binsearch(l, v)\n        if i ~= nil then\n            table.remove(l,\
    \ i)\n        end\n    end\n    -- return unique elements\n    return l\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppkgtgb77.lua:12:\
    \ attempt to call a nil value (field 'binsearch')\nstack traceback:\n\t/tmp/tmppkgtgb77.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmppkgtgb77.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local res = {}\n  for k, v in pairs(l1) do\n    if l2[k] ==\
    \ v then\n      res[k] = v\n    end\n  end\n  return sort(res)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprz6sqqi_.lua:9:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmprz6sqqi_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmprz6sqqi_.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  return sorted_unique(keys(indexes(l1, l2)))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphrp8anka.lua:3:\
    \ attempt to call a nil value (global 'indexes')\nstack traceback:\n\t/tmp/tmphrp8anka.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmphrp8anka.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal t1 = {}\n\tlocal t2 = {}\n\tlocal t = {}\n\tfor _,v\
    \ in ipairs(l1) do t1[v] = true end\n\tfor _,v in ipairs(l2) do t2[v] = true end\n\
    \tfor k,_ in pairs(t1) do if t2[k] then t[#t+1] = k end end\n\tlocal ret = {}\n\
    \tfor _,v in ipairs(t) do ret[#ret+1] = v end\n\ttable.sort(ret)\n\treturn ret\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal common = {}\n\tfor k, v in pairs(l1) do\n\t\tif l2[k]\
    \ then\n\t\t\tcommon[#common + 1] = v\n\t\tend\n\tend\n\ttable.sort(common)\n\t\
    return common\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoxxi0jpv.lua:16:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 34, 653}\nstack traceback:\n\t\
    /tmp/tmpoxxi0jpv.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal r, s = {}, {}\n\tfor _, v in ipairs(l1) do r[v] = true\
    \ end\n\tfor _, v in ipairs(l2) do if r[v] then s[#s+1] = v end end\n\treturn\
    \ sortedKeys(s)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3u6izy5t.lua:6:\
    \ attempt to call a nil value (global 'sortedKeys')\nstack traceback:\n\t/tmp/tmp3u6izy5t.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp3u6izy5t.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local ret = {}\n    for _, v in ipairs(l1) do\n        if\
    \ tb.search_unsorted(l2, v) then\n            if not tb.search_unsorted(ret, v)\
    \ then\n                tb.insert_sorted(ret, v)\n            end\n        end\n\
    \    end\n    return ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpaq69x0xy.lua:5:\
    \ attempt to index a nil value (global 'tb')\nstack traceback:\n\t/tmp/tmpaq69x0xy.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpaq69x0xy.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  local n = #l1\n  local n2 = #l2\n  local t2\
    \ = {}\n  local nt2 = 0\n  for i = 1, n do\n    local v = l1[i]\n    t[v] = (t[v]\
    \ or 0) + 1\n  end\n  for i = 1, n2 do\n    local v = l2[i]\n    local c = t[v]\n\
    \    if c and c > 0 then\n      t2[nt2 + 1] = v\n      nt2 = nt2 + 1\n      t[v]\
    \ = c - 1\n    end\n  end\n  sort(t2)\n  return t2\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl5ofwvt2.lua:21:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpl5ofwvt2.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpl5ofwvt2.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local res = {}\n    for _, a in ipairs(l1) do\n        for\
    \ _, b in ipairs(l2) do\n            if a == b then\n                table.insert(res,\
    \ a)\n            end\n        end\n    end\n    if #res > 0 then\n        table.sort(res)\n\
    \        return res\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpni31xjo5.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpni31xjo5.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  -- FIXME.\n  --local t = {}\n  --for i = 1,#l1 do\n  --  local\
    \ v = l1[i]\n  --  t[v] = v\n  --end\n  --local i = 1\n  --for j = 1,#l2 do\n\
    \  --  local v = l2[j]\n  --  if t[v] then\n  --    l1[i] = v\n  --    i = i +\
    \ 1\n  --  end\n  --end\n  --return l1\n  local l = {}\n  for i = 1,#l1 do\n \
    \   local v = l1[i]\n    if index_of(l2, v) then\n      l[#l+1] = v\n    end\n\
    \  end\n  return l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp1s6125r.lua:21:\
    \ attempt to call a nil value (global 'index_of')\nstack traceback:\n\t/tmp/tmpp1s6125r.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpp1s6125r.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\t-- convert to a set\n\tlocal s1 = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\ts1[v] = true\n\tend\n\tlocal s2 = {}\n\tfor _, v in ipairs(l2) do\n\t\
    \ts2[v] = true\n\tend\n\t-- get common elements from the union of the sets\n\t\
    local l = {}\n\tfor k, _ in pairs(s1) do\n\t\tif s2[k] then\n\t\t\ttable.insert(l,\
    \ k)\n\t\tend\n\tend\n\t-- sort by name\n\ttable.sort(l, function(a, b) return\
    \ a.name < b.name end)\n\treturn l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxhgss1md.lua:20:\
    \ attempt to index a number value (local 'a')\nstack traceback:\n\t/tmp/tmpxhgss1md.lua:20:\
    \ in function </tmp/tmpxhgss1md.lua:20>\n\t[C]: in function 'table.sort'\n\t/tmp/tmpxhgss1md.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpxhgss1md.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal p1, p2 = 1, 1\n\tlocal l3 = {}\n\tlocal i3 = 0\n\twhile\
    \ p1 <= #l1 and p2 <= #l2 do\n\t\tif l1[p1] == l2[p2] then\n\t\t\ti3 = i3 + 1\n\
    \t\t\tl3[i3] = l1[p1]\n\t\t\tp1 = p1 + 1\n\t\t\tp2 = p2 + 1\n\t\telseif l1[p1]\
    \ < l2[p2] then\n\t\t\tp1 = p1 + 1\n\t\telse\n\t\t\tp2 = p2 + 1\n\t\tend\n\tend\n\
    \treturn l3\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxkzwegir.lua:24:\
    \ expected: {1, 5, 653}\nactual: {653}\nstack traceback:\n\t/tmp/tmpxkzwegir.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal common = {}\n\tfor _, name in ipairs(l1) do\n\t\tif\
    \ utils.table.hasval(l2, name) then\n\t\t\ttable.insert(common, name)\n\t\tend\n\
    \tend\n\treturn utils.table.uniq(common)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjgbhz_jo.lua:5:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmpjgbhz_jo.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpjgbhz_jo.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local function same(l1, l2)\n    local function s(t) return\
    \ set(l1, t) end\n    return seq.zip(seq.map(s, l2))\n  end\n  return seq.unique(same(l1,\
    \ l2))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpboj7vjx6.lua:7:\
    \ attempt to index a nil value (global 'seq')\nstack traceback:\n\t/tmp/tmpboj7vjx6.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpboj7vjx6.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local common, pos = {}, 1\n  for _, v in ipairs(l1) do\n \
    \   if has_value(l2, v) then\n      common[pos] = v\n      pos = pos + 1\n   \
    \ end\n  end\n  return common\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmps3xbb6xu.lua:5:\
    \ attempt to call a nil value (global 'has_value')\nstack traceback:\n\t/tmp/tmps3xbb6xu.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmps3xbb6xu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local l3 = {}\n    for _, v in ipairs(l1) do\n        if\
    \ util.contains(l2, v) then\n            table.insert(l3, v)\n        end\n  \
    \  end\n    table.sort(l3)\n    return l3\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfgmm61jw.lua:5:\
    \ attempt to index a nil value (global 'util')\nstack traceback:\n\t/tmp/tmpfgmm61jw.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpfgmm61jw.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal temp = {}\n\tfor _, v in ipairs(l1) do\n\t\ttemp[v]\
    \ = (temp[v] or 0) + 1\n\tend\n\tlocal ret = {}\n\tfor _, v in ipairs(l2) do\n\
    \t\tif temp[v] then\n\t\t\ttemp[v] = temp[v] - 1\n\t\t\tif temp[v] == 0 then\n\
    \t\t\t\ttemp[v] = nil\n\t\t\tend\n\t\t\tret[#ret + 1] = v\n\t\tend\n\tend\n\t\
    table.sort(ret)\n\treturn ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local k, t = {}, {}\n    for i = 1, #l1 do k[l1[i]] = true\
    \ end\n    for i = 1, #l2 do if k[l2[i]] then t[#t+1] = l2[i] end end\n    return\
    \ sorted(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp32e_rpza.lua:6:\
    \ attempt to call a nil value (global 'sorted')\nstack traceback:\n\t/tmp/tmp32e_rpza.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp32e_rpza.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local o = {}\n  for _, v in ipairs(l1) do\n    if in_list(v,\
    \ l2) then o[#o+1] = v end\n  end\n  return o\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdo5vb9mh.lua:5:\
    \ attempt to call a nil value (global 'in_list')\nstack traceback:\n\t/tmp/tmpdo5vb9mh.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpdo5vb9mh.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal ret, cnt1, cnt2 = {}, #l1, #l2\n\tif cnt1 == 0 or cnt2\
    \ == 0 then return ret end\n\tif cnt1 == 1 then\n\t\tif cnt2 == 1 then\n\t\t\t\
    if l1[1] == l2[1] then ret[1] = l1[1] end\n\t\telse\n\t\t\tfor _, e in ipairs(l2)\
    \ do\n\t\t\t\tif l1[1] == e then\n\t\t\t\t\tret[1] = e\n\t\t\t\t\tbreak\n\t\t\t\
    \tend\n\t\t\tend\n\t\tend\n\telseif cnt2 == 1 then\n\t\tfor _, e in ipairs(l1)\
    \ do\n\t\t\tif l2[1] == e then\n\t\t\t\tret[1] = e\n\t\t\t\tbreak\n\t\t\tend\n\
    \t\tend\n\telse\n\t\tlocal sml, lrg, cnt = l1, l2, 0\n\t\tif cnt1 > cnt2 then\
    \ sml, lrg, cnt = l2, l1, cnt2 else cnt = cnt1 end\n\t\tfor _, e in ipairs(sml)\
    \ do\n\t\t\tfor _, e2 in ipairs(lrg) do\n\t\t\t\tif e == e2 then\n\t\t\t\t\tcnt\
    \ = cnt + 1\n\t\t\t\t\tret[cnt] = e\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\
    \t\tend\n\t\tif cnt > 1 then\n\t\t\tfor i = 2, cnt do\n\t\t\t\tlocal j = i\n\t\
    \t\t\twhile j > 1 and ret[j] < ret[j - 1] do\n\t\t\t\t\tret[j], ret[j - 1] = ret[j\
    \ - 1], ret[j]\n\t\t\t\t\tj = j - 1\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\n\t\
    return ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv1jty3lb.lua:38:\
    \ attempt to compare two nil values\nstack traceback:\n\t/tmp/tmpv1jty3lb.lua:38:\
    \ in local 'candidate'\n\t/tmp/tmpv1jty3lb.lua:51: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _, v in ipairs(l1) do\n    t[v] = true\n\
    \  end\n  local ret = {}\n  for _, v in ipairs(l2) do\n    if t[v] then\n    \
    \  table.insert(ret, v)\n    end\n  end\n  table.sort(ret)\n  return ret\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5zwnwgcy.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp5zwnwgcy.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal list = {}\n\tfor _, a in ipairs(l1) do\n\t\tif contains(l2,\
    \ a) then\n\t\t\tif not contains(list, a) then\n\t\t\t\ttable.insert(list, a)\n\
    \t\t\tend\n\t\tend\n\tend\n\treturn list\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf3shvwh9.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpf3shvwh9.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpf3shvwh9.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for i = 1, #l1 do\n    for j = 1, #l2 do\n\
    \      if l1[i] == l2[j] then\n        t[#t + 1] = l1[i]\n      end\n    end\n\
    \  end\n  if #t > 0 then\n    table.sort(t)\n    return t\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvcotitwr.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpvcotitwr.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local e,r = {},{}\n  for _,v in ipairs(l1) do e[v] = true\
    \ end\n  for _,v in ipairs(l2) do if e[v] then r[#r+1] = v end end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyp8darlf.lua:13:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpyp8darlf.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local c = {}\n  for _, v in ipairs(l1) do\n    for _, w in\
    \ ipairs(l2) do\n      if v == w then\n        table.insert(c, v)\n      end\n\
    \    end\n  end\n  return unique(c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpodr4nohq.lua:11:\
    \ attempt to call a nil value (global 'unique')\nstack traceback:\n\t/tmp/tmpodr4nohq.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpodr4nohq.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local ret = {}\n  if l1 and l2 then\n    local lookup = {}\n\
    \    for _, v in ipairs(l1) do\n      lookup[v] = (lookup[v] or 0) + 1\n    end\n\
    \    for _, v in ipairs(l2) do\n      if lookup[v] then\n        table.insert(ret,\
    \ v)\n        lookup[v] = nil\n      end\n    end\n  end\n  return ret\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp01jqbx06.lua:22:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 653}\nstack traceback:\n\t/tmp/tmp01jqbx06.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t1 = {}\n  local t2 = {}\n  local ret = {}\n  for _,\
    \ v in ipairs(l1) do\n    t1[v] = 1\n  end\n  for _, v in ipairs(l2) do\n    t2[v]\
    \ = 1\n  end\n  for k, _ in pairs(t1) do\n    if t2[k] then\n      table.insert(ret,\
    \ k)\n    end\n  end\n  table.sort(ret)\n  return ret\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal c1 = {};\n\tlocal c2 = {};\n\tlocal r = {};\n\tfor _,\
    \ v in ipairs(l1) do\n\t\tc1[v] = true;\n\tend\n\tfor _, v in ipairs(l2) do\n\t\
    \tc2[v] = true;\n\tend\n\tfor k, _ in pairs(c1) do\n\t\tif c2[k] then\n\t\t\t\
    r[#r + 1] = k;\n\t\tend\n\tend\n\treturn sort_unique(r);\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxesrp1s9.lua:17:\
    \ attempt to call a nil value (global 'sort_unique')\nstack traceback:\n\t/tmp/tmpxesrp1s9.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpxesrp1s9.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _,v in ipairs(l1) do\n        t[v]\
    \ = (t[v] or 0) + 1\n    end\n    for _,v in ipairs(l2) do\n        t[v] = (t[v]\
    \ or 0) + 1\n    end\n    local res = {}\n    for k,v in pairs(t) do\n       \
    \ if v > 1 then table.insert(res, k) end\n    end\n    table.sort(res)\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tif not (l1 and l2) then return {} end\n\tlocal a = {}\n\t\
    for v in l1:gmatch(\"([^,]+)\") do a[v] = true end\n\tlocal b = {}\n\tfor v in\
    \ l2:gmatch(\"([^,]+)\") do b[v] = true end\n\tlocal c = {}\n\tfor k in pairs(a)\
    \ do if b[k] then c[#c+1] = k end end\n\ttable.sort(c)\n\treturn c\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkqxeoxij.lua:5:\
    \ attempt to call a nil value (method 'gmatch')\nstack traceback:\n\t/tmp/tmpkqxeoxij.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpkqxeoxij.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local s = {}\n  for k, v in pairs(l1) do s[v] = true end\n\
    \  for k, v in pairs(l2) do s[v] = true end\n  local r = {}\n  for k, v in pairs(s)\
    \ do table.insert(r, k) end\n  table.sort(r)\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkn38d3af.lua:15:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 7, 9, 34, 121, 653}\nstack traceback:\n\
    \t/tmp/tmpkn38d3af.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local map, list = {}, {}\n  for _, v in ipairs(l1) do map[v]\
    \ = true end\n  for _, v in ipairs(l2) do if map[v] then list[#list+1] = v end\
    \ end\n  return list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpazyltsu_.lua:12:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmpazyltsu_.lua:12:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    local o = {}\n    for _,v in ipairs(l1)\
    \ do\n        t[v] = v\n    end\n    for _,v in ipairs(l2) do\n        if t[v]\
    \ then\n            o[#o+1] = v\n        end\n    end\n    return o\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe8q954c_.lua:19:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmpe8q954c_.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  local d = {}\n  local r = {}\n  local i\n\
    \  for i = 1, #l1 do\n    t[l1[i]] = l1[i]\n  end\n  for i = 1, #l2 do\n    if\
    \ t[l2[i]] then\n      t[l2[i]] = nil\n      d[#d + 1] = l2[i]\n    end\n  end\n\
    \  for _, v in pairs(d) do\n    r[#r + 1] = v\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx01_4juw.lua:25:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 653}\nstack traceback:\n\t/tmp/tmpx01_4juw.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal t = {}\n\tfor i = 1, #l1 do\n\t\tt[l1[i]] = true\n\t\
    end\n\tlocal r = {}\n\tfor i = 1, #l2 do\n\t\tif t[l2[i]] then\n\t\t\tr[#r + 1]\
    \ = l2[i]\n\t\tend\n\tend\n\tif #r == 0 then\n\t\treturn nil\n\tend\n\tsort(r)\n\
    \treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc_7nq0_1.lua:16:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpc_7nq0_1.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpc_7nq0_1.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local res = {}\n    for k, _ in pairs(l1) do\n        if\
    \ l2[k] then res[k] = true end\n    end\n    local i = 0\n    return function()\n\
    \        local k\n        repeat\n            i = i + 1\n            k = next(res,\
    \ k)\n        until k == nil or i == k\n        return k\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxwnsd1ph.lua:21:\
    \ expected: {1, 5, 653}\nactual: function: 0x55914597fab0\nstack traceback:\n\t\
    /tmp/tmpxwnsd1ph.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    return {\n        table.unpack(\n            table.keys(\n\
    \                table.intersection(\n                    table.count(l1),\n \
    \                   table.count(l2)\n                )\n            )\n      \
    \  )\n    }\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpek9glvlm.lua:7:\
    \ attempt to call a nil value (field 'count')\nstack traceback:\n\t/tmp/tmpek9glvlm.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpek9glvlm.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for i = 1, #l1 do\n    local e = l1[i]\n \
    \   if t[e] == nil then\n      t[e] = (binary_search(l2, e) and e) or nil\n  \
    \  end\n  end\n  local out = {}\n  for k, _ in pairs(t) do\n    table.insert(out,\
    \ k)\n  end\n  table.sort(out)\n  return out\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuio7bqob.lua:7:\
    \ attempt to call a nil value (global 'binary_search')\nstack traceback:\n\t/tmp/tmpuio7bqob.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpuio7bqob.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal common = {}\n\tfor _, v in ipairs(l1) do\n\t\tif not\
    \ in(v, common) and in(v, l2) then\n\t\t\ttable.insert(common, v)\n\t\tend\n\t\
    end\n\ttable.sort(common)\n\treturn common\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1zy_tru1.lua:5: unexpected symbol near ''in''

    '
  stdout: ''
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal common = {}\n\tfor _, v in ipairs(l1) do\n\t\tif has_value(l2,\
    \ v) then\n\t\t\ttable.insert(common, v)\n\t\tend\n\tend\n\ttable.sort(common)\n\
    \treturn common\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxwggb9mn.lua:5:\
    \ attempt to call a nil value (global 'has_value')\nstack traceback:\n\t/tmp/tmpxwggb9mn.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpxwggb9mn.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal r = {}\n\tfor i=1,#l1 do\n\t\tif contains(l2, l1[i])\
    \ then\n\t\t\tr[#r+1] = l1[i]\n\t\tend\n\tend\n\ttable.sort(r)\n\treturn r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp40iayqa9.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmp40iayqa9.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp40iayqa9.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local a1 = {}\n  local a2 = {}\n  for _, v in ipairs(l1) do\
    \ a1[v] = true end\n  for _, v in ipairs(l2) do a2[v] = true end\n  local r =\
    \ {}\n  for k in pairs(a1) do\n    if a2[k] then r[#r+1] = k end\n  end\n  table.sort(r)\n\
    \  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\treturn table.pack(table.keys(map(l1, l2)))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpckzpij7g.lua:3:\
    \ attempt to call a nil value (global 'map')\nstack traceback:\n\t/tmp/tmpckzpij7g.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpckzpij7g.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _, v in ipairs(l1) do\n    t[v] = true\n\
    \  end\n  local r = {}\n  for _, v in ipairs(l2) do\n    if t[v] then\n      r[#r+1]\
    \ = v\n    end\n  end\n  return Set(r)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa4j7itxy.lua:13:\
    \ attempt to call a nil value (global 'Set')\nstack traceback:\n\t/tmp/tmpa4j7itxy.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpa4j7itxy.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local out = {}\n  local t = {}\n  local i = 1\n  while l1[i]\
    \ and l2[i] do\n    if l1[i] == l2[i] then\n      t[l1[i]] = 1\n    else\n   \
    \   break\n    end\n    i = i + 1\n  end\n  for i,v in pairs(t) do\n    out[#out+1]\
    \ = i\n  end\n  table.sort(out)\n  return out\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk74ygryx.lua:24:\
    \ expected: {1, 5, 653}\nactual: {}\nstack traceback:\n\t/tmp/tmpk74ygryx.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for i,v in ipairs(l1) do if contains(l2, v)\
    \ then t[#t+1] = v end end\n  return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnoo_2oao.lua:4:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpnoo_2oao.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpnoo_2oao.lua:11: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local m = {}\n    local n = {}\n    for _, l in ipairs({l1,\
    \ l2}) do\n        for _, v in ipairs(l) do\n            if not m[v] then\n  \
    \              m[v] = true\n                n[#n+1] = v\n            end\n   \
    \     end\n    end\n    table.sort(n)\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmujzm80w.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 7, 9, 34, 121, 653}\nstack traceback:\n\
    \t/tmp/tmpmujzm80w.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal common = {}\n\tfor _, v in ipairs(l1) do\n\t\tif table.contains(l2,\
    \ v) then\n\t\t\ttable.insert(common, v)\n\t\tend\n\tend\n\tif #common > 0 then\n\
    \t\ttable.sort(common)\n\tend\n\treturn common\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcq6zks3_.lua:5:\
    \ attempt to call a nil value (field 'contains')\nstack traceback:\n\t/tmp/tmpcq6zks3_.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpcq6zks3_.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local new = {}\n    local unique = {}\n    for _, v in ipairs(l1)\
    \ do\n        new[v] = true\n    end\n    for _, v in ipairs(l2) do\n        if\
    \ new[v] then\n            unique[v] = true\n        end\n    end\n    local result\
    \ = {}\n    for k, _ in pairs(unique) do\n        table.insert(result, k)\n  \
    \  end\n    table.sort(result)\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _, v in ipairs(l1) do\n        t[v]\
    \ = true\n    end\n    local r = {}\n    for _, v in ipairs(l2) do\n        if\
    \ t[v] then\n            table.insert(r, v)\n        end\n    end\n    return\
    \ sort_unique(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9umtpe78.lua:13:\
    \ attempt to call a nil value (global 'sort_unique')\nstack traceback:\n\t/tmp/tmp9umtpe78.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp9umtpe78.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  return unique(sort(intersect(l1, l2)))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpssdy8iy0.lua:3:\
    \ attempt to call a nil value (global 'intersect')\nstack traceback:\n\t/tmp/tmpssdy8iy0.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpssdy8iy0.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal l = {}\n\tfor _, x in ipairs(l1) do\n\t\tif isin(x,\
    \ l2) then\n\t\t\ttable.insert(l, x)\n\t\tend\n\tend\n\ttable.sort(l)\n\treturn\
    \ l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeo4pds0w.lua:5:\
    \ attempt to call a nil value (global 'isin')\nstack traceback:\n\t/tmp/tmpeo4pds0w.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpeo4pds0w.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for k, v in pairs(l1) do\n    if l2[k] then\n\
    \      table.insert(r, v)\n    end\n  end\n  table.sort(r)\n  return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpswg6xz2x.lua:16:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 34, 653}\nstack traceback:\n\t\
    /tmp/tmpswg6xz2x.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for _, v in ipairs(l1) do\n    if x.in(v,\
    \ l2) then\n      x.insert_unique(r, v)\n    end\n  end\n  return x.sort(r)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpx0bhjoet.lua:5: <name> expected near ''in''

    '
  stdout: ''
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tif not l1 or not l2 then return {} end\n\tlocal l3 = {}\n\t\
    for _, e in ipairs(l1) do\n\t\tif contains(l2, e) then table.insert(l3, e) end\n\
    \tend\n\treturn sort(l3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo7rryrrz.lua:6:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpo7rryrrz.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpo7rryrrz.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    if not (l1 and l2) then return {} end\n    local ret = {}\n\
    \    for _, v in ipairs(l1) do\n        for _, v2 in ipairs(l2) do\n         \
    \   if v == v2 then\n                table.insert(ret, v)\n            end\n \
    \       end\n    end\n    table.sort(ret)\n    return ret\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp93bx7yq5.lua:19:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp93bx7yq5.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local a = {}\n    for i, v in ipairs(l1) do\n        if\
    \ contains(l2, v) then\n            a[#a+1] = v\n        end\n    end\n    sort(a)\n\
    \    return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpof5su7uy.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpof5su7uy.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpof5su7uy.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r, ri = {}, 1\n  for i = 1, #l1 do\n    for j = 1, #l2\
    \ do\n      if l1[i] == l2[j] then\n        r[ri] = l1[i]\n        ri = ri + 1\n\
    \        break\n      end\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0k3c64_p.lua:19:\
    \ expected: {1, 5, 653}\nactual: {1, 653, 5}\nstack traceback:\n\t/tmp/tmp0k3c64_p.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r, c = {}, {}\n  for _, v in ipairs(l1) do r[v] = true\
    \ end\n  for _, v in ipairs(l2) do c[v] = r[v] end\n  local l = {}\n  for k, v\
    \ in pairs(c) do if v then l[#l+1] = k end end\n  table.sort(l)\n  return l\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local common = {}\n  for _,v in ipairs(l1) do if index(l2,\
    \ v) then common[#common+1] = v end end\n  return sort(common)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6nzc7z_z.lua:4:\
    \ attempt to call a nil value (global 'index')\nstack traceback:\n\t/tmp/tmp6nzc7z_z.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmp6nzc7z_z.lua:11: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    if not l1 or not l2 then return end\n    local result =\
    \ {}\n    for _, v in ipairs(l1) do\n        if not result[v] and contains(l2,\
    \ v) then\n            table.insert(result, v)\n            result[v] = true\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm2_lwz9n.lua:6:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpm2_lwz9n.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpm2_lwz9n.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\treturn tset(intersect(l1, l2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdcjnshd6.lua:3:\
    \ attempt to call a nil value (global 'intersect')\nstack traceback:\n\t/tmp/tmpdcjnshd6.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpdcjnshd6.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local tbl = {}\n  local n = 0\n  local m = 0\n  local n1 =\
    \ #l1\n  local n2 = #l2\n  local i = 1\n  local j = 1\n  while (i <= n1) and (j\
    \ <= n2) do\n    local x1 = l1[i]\n    local x2 = l2[j]\n    if (x1 < x2) then\n\
    \      i = i + 1\n    elseif (x1 > x2) then\n      j = j + 1\n    else\n     \
    \ local x = l1[i]\n      n = n + 1\n      tbl[n] = x\n      i = i + 1\n      j\
    \ = j + 1\n      while (i <= n1) and (l1[i] == x) do\n        i = i + 1\n    \
    \  end\n      while (j <= n2) and (l2[j] == x) do\n        j = j + 1\n      end\n\
    \    end\n  end\n  return tbl\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpezgiebpi.lua:37:\
    \ expected: {1, 5, 653}\nactual: {653}\nstack traceback:\n\t/tmp/tmpezgiebpi.lua:37:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local l3 = {}\n  local l4 = {}\n  -- Insert l1 elements into\
    \ l3.\n  for _, l in ipairs(l1) do\n    table.insert(l3, l)\n  end\n  -- Insert\
    \ l2 elements into l4.\n  for _, l in ipairs(l2) do\n    table.insert(l4, l)\n\
    \  end\n  local l5 = {}\n  -- Search for common elements.\n  for _, l in ipairs(l3)\
    \ do\n    for i, l in ipairs(l4) do\n      if l == l3[i] then\n        table.insert(l5,\
    \ l)\n        table.remove(l4, i)\n        break\n      end\n    end\n  end\n\
    \  -- Return list of unique common elements.\n  return l5\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv7go7efq.lua:31:\
    \ expected: {1, 5, 653}\nactual: {}\nstack traceback:\n\t/tmp/tmpv7go7efq.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local result = {}\n  for _, v in ipairs(l1) do\n    if util.contains(l2,\
    \ v) then\n      util.insertSorted(result, v)\n    end\n  end\n  return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnazbtwjh.lua:5:\
    \ attempt to index a nil value (global 'util')\nstack traceback:\n\t/tmp/tmpnazbtwjh.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpnazbtwjh.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal seen = {}\n\tlocal function helper(k)\n\t\tif not seen[k]\
    \ then\n\t\t\tseen[k] = true\n\t\t\treturn k\n\t\tend\n\tend\n\tlocal r = {}\n\
    \tfor k in pairs(l1) do\n\t\tr[#r+1] = helper(k)\n\tend\n\tfor k in pairs(l2)\
    \ do\n\t\tr[#r+1] = helper(k)\n\tend\n\ttable.sort(r)\n\treturn r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1lz5r82u.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 6, 7}\nstack traceback:\n\t/tmp/tmp1lz5r82u.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tif not l1 or not l2 then return end\n\tlocal r = {}\n\tfor\
    \ _,v in ipairs(l1) do\n\t\tif inlist(l2, v) then r[#r+1] = v end\n\tend\n\treturn\
    \ sort(unique(r))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmao8diu1.lua:6:\
    \ attempt to call a nil value (global 'inlist')\nstack traceback:\n\t/tmp/tmpmao8diu1.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpmao8diu1.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal common, unique1, unique2 = {}, {}, {}\n\tlocal i, v\n\
    \tfor i, v in ipairs(l1) do\n\t\tcommon[v] = 0\n\t\tunique1[v] = 0\n\tend\n\t\
    for i, v in ipairs(l2) do\n\t\tif common[v] then\n\t\t\tcommon[v] = 1\n\t\telse\n\
    \t\t\tunique2[v] = 0\n\t\tend\n\tend\n\tlocal t = {}\n\tfor i, v in pairs(common)\
    \ do\n\t\tif v == 1 then\n\t\t\tt[#t+1] = i\n\t\tend\n\tend\n\treturn t\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwgj7j95s.lua:29:\
    \ expected: {2, 3}\nactual: {3, 2}\nstack traceback:\n\t/tmp/tmpwgj7j95s.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local s = {}\n  for i = 1, #l1 do\n    s[l1[i]] = true\n \
    \ end\n  for i = 1, #l2 do\n    s[l2[i]] = true\n  end\n  local res = {}\n  for\
    \ k in pairs(s) do\n    res[#res + 1] = k\n  end\n  table.sort(res)\n  return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqmoewt9w.lua:21:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 7, 9, 34, 121, 653}\nstack traceback:\n\
    \t/tmp/tmpqmoewt9w.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal k = {}\n\tfor i = 1, #l1 do\n\t\tk[l1[i]] = true\n\t\
    end\n\tlocal c = {}\n\tfor i = 1, #l2 do\n\t\tif k[l2[i]] then\n\t\t\tc[#c + 1]\
    \ = l2[i]\n\t\tend\n\tend\n\ttable.sort(c)\n\treturn c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa8tzg7ld.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpa8tzg7ld.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    return sorted_unique(set_common(l1, l2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz9y9gttl.lua:3:\
    \ attempt to call a nil value (global 'set_common')\nstack traceback:\n\t/tmp/tmpz9y9gttl.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpz9y9gttl.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local l = {}\n    for _, v in ipairs(l1) do\n        if\
    \ utils.array_has(l2, v) then\n            l[#l+1] = v\n        end\n    end\n\
    \    table.sort(l)\n    return l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvqk6j884.lua:5:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmpvqk6j884.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpvqk6j884.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821915
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  -- Get numbers in both lists.\n  local common = {}\n  for\
    \ _, n in ipairs(l1) do\n    if contains(l2, n) then\n      common[#common + 1]\
    \ = n\n    end\n  end\n  -- Sort in numerical order.\n  table.sort(common)\n \
    \ return common\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprtjxcf6s.lua:6:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmprtjxcf6s.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmprtjxcf6s.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _, v in ipairs(l1) do\n    if in_table(v,\
    \ l2) then\n      table.insert(t, v)\n    end\n  end\n  return sorted(unique(t))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw7ympw24.lua:5:\
    \ attempt to call a nil value (global 'in_table')\nstack traceback:\n\t/tmp/tmpw7ympw24.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpw7ympw24.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local r, s = {}, {}\n    for _, v in ipairs(l1) do s[v]\
    \ = true end\n    for _, v in ipairs(l2) do if s[v] then r[#r+1] = v end end\n\
    \    return unique(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdwg1t4jf.lua:6:\
    \ attempt to call a nil value (global 'unique')\nstack traceback:\n\t/tmp/tmpdwg1t4jf.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpdwg1t4jf.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local res = {}\n    local map = {}\n    for _, i in ipairs(l1)\
    \ do\n        map[i] = true\n    end\n    for _, i in ipairs(l2) do\n        if\
    \ map[i] then\n            table.insert(res, i)\n        end\n    end\n    table.sort(res)\n\
    \    return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_t0618ha.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp_t0618ha.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal t = {}\n\tfor _, x in ipairs(l1) do\n\t\tt[x] = true\n\
    \tend\n\tlocal r = {}\n\tfor _, x in ipairs(l2) do\n\t\tif t[x] then r[#r+1] =\
    \ x end\n\tend\n\ttable.sort(r)\n\treturn r\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi33vbk4w.lua:18:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpi33vbk4w.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal common, used = {}, {}\n\tfor i,v in ipairs(l1) do\n\t\
    \tif list_index(l2, v) then\n\t\t\tif not used[v] then\n\t\t\t\ttable.insert(common,\
    \ v)\n\t\t\t\tused[v] = true\n\t\t\tend\n\t\tend\n\tend\n\ttable.sort(common)\n\
    \treturn common\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1odf_6us.lua:5:\
    \ attempt to call a nil value (global 'list_index')\nstack traceback:\n\t/tmp/tmp1odf_6us.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp1odf_6us.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _, x in ipairs(l1) do\n    if not t[x]\
    \ and list.contains(l2, x) then\n      t[x] = true\n      table.insert(t, x)\n\
    \    end\n  end\n  table.sort(t)\n  return t\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoup7hafk.lua:5:\
    \ attempt to index a nil value (global 'list')\nstack traceback:\n\t/tmp/tmpoup7hafk.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoup7hafk.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _, v in ipairs(l1) do t[v] = 1 end\n \
    \ for _, v in ipairs(l2) do t[v] = t[v] == 1 and 2 or nil end\n  local l = {}\n\
    \  for k, v in pairs(t) do if v == 2 then l[#l+1] = k end end\n  table.sort(l)\n\
    \  return l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp53mfkmf0.lua:15:\
    \ expected: {1, 5, 653}\nactual: {1, 653}\nstack traceback:\n\t/tmp/tmp53mfkmf0.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _,v in ipairs(l1) do\n        for\
    \ _,v2 in ipairs(l2) do\n            if v == v2 then\n                t[#t+1]\
    \ = v\n            end\n        end\n    end\n    table.sort(t)\n    return t\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbdmqa6uz.lua:18:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpbdmqa6uz.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  if not l1 or not l2 then return {} end\n  local r = {}\n \
    \ for i = 1, #l1 do r[l1[i]] = true end\n  for i = 1, #l2 do r[l2[i]] = r[l2[i]]\
    \ and true or nil end\n  local c = {}\n  for i, v in pairs(r) do if v then table.insert(c,\
    \ i) end end\n  table.sort(c)\n  return c\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe56v4n0p.lua:16:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 34, 653}\nstack traceback:\n\t\
    /tmp/tmpe56v4n0p.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local rc = {}\n  local ri = 1\n  for i = 1, #l1 do\n    local\
    \ key = l1[i]\n    for j = 1, #l2 do\n      if l2[j] == key then\n        rc[ri]\
    \ = key\n        ri = ri + 1\n        break\n      end\n    end\n  end\n  return\
    \ rc\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsbgbucqz.lua:21:\
    \ expected: {1, 5, 653}\nactual: {1, 653, 5}\nstack traceback:\n\t/tmp/tmpsbgbucqz.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal c = {}\n\tlocal s = {}\n\tfor _, v in ipairs(l1) do\n\
    \t\tif l2[v] then\n\t\t\tc[v] = true\n\t\tend\n\tend\n\tfor k in pairs(c) do\n\
    \t\ts[#s+1] = k\n\tend\n\ttable.sort(s)\n\treturn s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvhex9x1a.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5}\nstack traceback:\n\t/tmp/tmpvhex9x1a.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  return sort(unique(l1)) & sort(unique(l2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjdeqdrp2.lua:3:\
    \ attempt to call a nil value (global 'unique')\nstack traceback:\n\t/tmp/tmpjdeqdrp2.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpjdeqdrp2.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local out = {}\n    for i = 1, #l1 do\n        if indexOf(l2,\
    \ l1[i]) > 0 then\n            out[#out + 1] = l1[i]\n        end\n    end\n \
    \   table.sort(out)\n    return out\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp__xmg2g2.lua:5:\
    \ attempt to call a nil value (global 'indexOf')\nstack traceback:\n\t/tmp/tmp__xmg2g2.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp__xmg2g2.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    -- First make the lists unique.\n    local u1 = unique(l1)\n\
    \    local u2 = unique(l2)\n    -- Then sort them.\n    table.sort(u1)\n    table.sort(u2)\n\
    \    -- Then intersect them.\n    local r = {}\n    local i1 = 1\n    local i2\
    \ = 1\n    while i1 <= #u1 and i2 <= #u2 do\n        if u1[i1] < u2[i2] then\n\
    \            i1 = i1 + 1\n        elseif u1[i1] > u2[i2] then\n            i2\
    \ = i2 + 1\n        else\n            table.insert(r, u1[i1])\n            i1\
    \ = i1 + 1\n            i2 = i2 + 1\n        end\n    end\n    return r\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpji4r9ajx.lua:4:\
    \ attempt to call a nil value (global 'unique')\nstack traceback:\n\t/tmp/tmpji4r9ajx.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpji4r9ajx.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for i = 1, #l1 do\n        local e = l1[i]\n\
    \        if contains(l2, e) then\n            insert_once(t, e)\n        end\n\
    \    end\n    return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmdihnwbb.lua:6:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpmdihnwbb.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpmdihnwbb.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for k, v in pairs(l1) do\n    if tablex.find(l2,\
    \ v) then\n      table.insert(t, v)\n    end\n  end\n  table.sort(t)\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnbzct7qu.lua:5:\
    \ attempt to index a nil value (global 'tablex')\nstack traceback:\n\t/tmp/tmpnbzct7qu.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpnbzct7qu.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for _, v in ipairs(l1) do\n    if isin(l2,\
    \ v) then\n      r[#r+1] = v\n    end\n  end\n  sort(r)\n  local i = 1\n  while\
    \ i < #r do\n    if r[i] == r[i+1] then\n      tremove(r, i)\n    else\n     \
    \ i = i + 1\n    end\n  end\n  return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp41rgu_nf.lua:5:\
    \ attempt to call a nil value (global 'isin')\nstack traceback:\n\t/tmp/tmp41rgu_nf.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp41rgu_nf.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local d = {}\n  for _,v in ipairs(l1) do\n    d[v] = true\n\
    \  end\n  local c = {}\n  for _,v in ipairs(l2) do\n    if d[v] then\n      table.insert(c,\
    \ v)\n    end\n  end\n  return unique(c)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7fbn_p9c.lua:13:\
    \ attempt to call a nil value (global 'unique')\nstack traceback:\n\t/tmp/tmp7fbn_p9c.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp7fbn_p9c.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local set = {}\n    local unique = {}\n    local idx = 1\n\
    \    for _, v in ipairs(l1) do\n        set[v] = idx\n        idx = idx + 1\n\
    \    end\n    for _, v in ipairs(l2) do\n        if set[v] then\n            unique[#unique\
    \ + 1] = v\n        end\n    end\n    table.sort(unique)\n    return unique\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptqkfoe3e.lua:22:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmptqkfoe3e.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local u1 = unique(l1)\n  local u2 = unique(l2)\n  local ret\
    \ = {}\n  for _, t in ipairs(u1) do\n    if contains(u2, t) then\n      table.insert(ret,\
    \ t)\n    end\n  end\n  return ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqgztyxm9.lua:3:\
    \ attempt to call a nil value (global 'unique')\nstack traceback:\n\t/tmp/tmpqgztyxm9.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpqgztyxm9.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  local i = 1\n  while l1[i] ~= nil and l2[i]\
    \ ~= nil do\n    if l1[i] == l2[i] then\n      t[#t+1] = l1[i]\n    end\n    i\
    \ = i + 1\n  end\n  return t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5xm3tmvv.lua:17:\
    \ expected: {1, 5, 653}\nactual: {}\nstack traceback:\n\t/tmp/tmp5xm3tmvv.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal ret = {}\n\tlocal seen = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tif not seen[v] then\n\t\t\tseen[v] = true\n\t\t\tret[#ret+1] = v\n\t\
    \tend\n\tend\n\tfor _, v in ipairs(l2) do\n\t\tif seen[v] then\n\t\t\tret[#ret+1]\
    \ = v\n\t\tend\n\tend\n\treturn sorted(ret)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpt7o5ntts.lua:16:\
    \ attempt to call a nil value (global 'sorted')\nstack traceback:\n\t/tmp/tmpt7o5ntts.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpt7o5ntts.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local result = {}\n    for i, key in ipairs(l1) do\n   \
    \     if utils.table.has_key(l2, key) then\n            table.insert(result, key)\n\
    \        end\n    end\n    return utils.table.unique(result)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj3f2_rqw.lua:5:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmpj3f2_rqw.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpj3f2_rqw.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local l3 = {}\n  local c = 0\n  for i = 1, #l1 do\n    local\
    \ l2i = l2[i]\n    if l2i and l1[i] == l2i then\n      c = c + 1\n      l3[c]\
    \ = l2i\n    end\n  end\n  return l3\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp21wq6mn8.lua:18:\
    \ expected: {1, 5, 653}\nactual: {}\nstack traceback:\n\t/tmp/tmp21wq6mn8.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for _, e in ipairs(l1) do\n    if contains(l2,\
    \ e) then r[#r+1] = e end\n  end\n  return sort_unique(r)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd76zc6g7.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpd76zc6g7.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpd76zc6g7.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local last = 1\n    for _, v in ipairs(l1) do\n        if\
    \ member(v, l2) then\n            l1[last] = v\n            last = last + 1\n\
    \        end\n    end\n    table.sort(l1, function(a, b) return a < b end)\n \
    \   return unique(l1, last)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvb2_szbr.lua:5:\
    \ attempt to call a nil value (global 'member')\nstack traceback:\n\t/tmp/tmpvb2_szbr.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpvb2_szbr.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal m1 = {}\n\tlocal result = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tm1[v] = true\n\tend\n\tfor _, v in ipairs(l2) do\n\t\tif m1[v] then\n\
    \t\t\ttable.insert(result, v)\n\t\tend\n\tend\n\treturn result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeg3whq11.lua:19:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmpeg3whq11.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _, v in ipairs(l1) do t[v] = true end\n\
    \  for _, v in ipairs(l2) do if t[v] then t[v] = nil else t[v] = true end end\n\
    \  local r = {}\n  for v in pairs(t) do r[#r+1] = v end\n  table.sort(r)\n  return\
    \ r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsto3_v37.lua:15:\
    \ expected: {1, 5, 653}\nactual: {2, 3, 4, 5, 7, 9, 34, 121}\nstack traceback:\n\
    \t/tmp/tmpsto3_v37.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local set = {}\n    local res = {}\n    for _, l in ipairs{l1,\
    \ l2} do\n        for _, v in ipairs(l) do\n            if not set[v] then\n \
    \               res[#res+1] = v\n                set[v] = true\n            end\n\
    \        end\n    end\n    table.sort(res)\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpceyrjf55.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 7, 9, 34, 121, 653}\nstack traceback:\n\
    \t/tmp/tmpceyrjf55.lua:20: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _,v in ipairs(l1) do\n    if l2[v] then\
    \ t[v] = true end\n  end\n  local ret = {}\n  for k in pairs(t) do ret[#ret+1]\
    \ = k end\n  table.sort(ret)\n  return ret\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdvady9ir.lua:16:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5}\nstack traceback:\n\t/tmp/tmpdvady9ir.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  if not (l1 and l2) then return end\n  local r, hash = {},\
    \ {}\n  for _, v in ipairs(l1) do hash[v] = true end\n  for _, v in ipairs(l2)\
    \ do\n    if hash[v] then\n      hash[v] = nil\n      r[#r+1] = v\n    end\n \
    \ end\n  table.sort(r)\n  return r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local c = {}\n  for _,v in ipairs(l1) do\n    if has_value(l2,\
    \ v) then table.insert(c, v) end\n  end\n  return sorted_unique(c)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpocnpa9fa.lua:5:\
    \ attempt to call a nil value (global 'has_value')\nstack traceback:\n\t/tmp/tmpocnpa9fa.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpocnpa9fa.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for _, v in ipairs(l1) do t[v] = true end\n\
    \  for _, v in ipairs(l2) do t[v] = true end\n  local l = {}\n  for k, _ in pairs(t)\
    \ do l[#l+1] = k end\n  table.sort(l)\n  return l\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8pcfqinx.lua:15:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 7, 9, 34, 121, 653}\nstack traceback:\n\
    \t/tmp/tmp8pcfqinx.lua:15: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local r = {}\n    for _, x in ipairs(l1) do\n        if\
    \ contain(l2, x) then\n            insert(r, x)\n        end\n    end\n    return\
    \ unique(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6pu5vavn.lua:5:\
    \ attempt to call a nil value (global 'contain')\nstack traceback:\n\t/tmp/tmp6pu5vavn.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp6pu5vavn.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tif #l1 < #l2 then\n\t\tlocal tmp = l1\n\t\tl1 = l2\n\t\tl2\
    \ = tmp\n\tend\n\tlocal n = {}\n\tfor _, v in ipairs(l1) do\n\t\tif util.contains(l2,\
    \ v) then\n\t\t\ttable.insert(n, v)\n\t\tend\n\tend\n\treturn n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0wyy324l.lua:10:\
    \ attempt to index a nil value (global 'util')\nstack traceback:\n\t/tmp/tmp0wyy324l.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp0wyy324l.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local res = {}\n  local pos = 1\n  local unique = {}\n  for\
    \ _, n in ipairs(l1) do\n    if not unique[n] then\n      unique[n] = true\n \
    \     res[pos] = n\n      pos = pos + 1\n    end\n  end\n  for _, n in ipairs(l2)\
    \ do\n    if not unique[n] then\n      unique[n] = true\n      res[pos] = n\n\
    \      pos = pos + 1\n    end\n  end\n  return sort_list(res)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp43s235n7.lua:20:\
    \ attempt to call a nil value (global 'sort_list')\nstack traceback:\n\t/tmp/tmp43s235n7.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp43s235n7.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local t = {}\n  for k1, v1 in pairs(l1) do\n    if l2[k1]\
    \ ~= nil then t[k1] = v1 end\n  end\n  return sort(keys(t))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2u5myd5.lua:7:\
    \ attempt to call a nil value (global 'keys')\nstack traceback:\n\t/tmp/tmpw2u5myd5.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpw2u5myd5.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for i = 1, #l1 do\n    for j = 1, #l2 do\n\
    \      if l1[i] == l2[j] then\n        r[#r + 1] = l1[i]\n      end\n    end\n\
    \  end\n  if #r > 0 then\n    table.sort(r)\n  end\n  return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdc29v25q.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpdc29v25q.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  if not l1 or not l2 then return {} end\n  local r = {}\n \
    \ for _, e in ipairs(l1) do if index(l2, e) then r[#r+1] = e end end\n  return\
    \ sort_uniq(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptcaldn03.lua:5:\
    \ attempt to call a nil value (global 'index')\nstack traceback:\n\t/tmp/tmptcaldn03.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmptcaldn03.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local s = {}\n  for _,v in ipairs(l1) do\n    if contains(l2,\
    \ v) then s[#s+1] = v end\n  end\n  return sorted(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpohj4b_9z.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpohj4b_9z.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpohj4b_9z.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _, i in ipairs(l1) do\n        if\
    \ l2[i] then t[#t+1] = i end\n    end\n    return sort_uniq(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpthidjvz0.lua:7:\
    \ attempt to call a nil value (global 'sort_uniq')\nstack traceback:\n\t/tmp/tmpthidjvz0.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpthidjvz0.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local l = {}\n  for _, e in ipairs(l1) do\n    if vim.tbl_contains(l2,\
    \ e) then\n      l[#l + 1] = e\n    end\n  end\n  return vim.tbl_sort(vim.tbl_unique(l))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkhjsc0np.lua:5:\
    \ attempt to index a nil value (global 'vim')\nstack traceback:\n\t/tmp/tmpkhjsc0np.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpkhjsc0np.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tif not (l1 and l2) then return {} end\n\tlocal res = {}\n\t\
    local pos1, pos2 = 1, 1\n\tlocal n1, n2 = #l1, #l2\n\twhile pos1 <= n1 and pos2\
    \ <= n2 do\n\t\tlocal v1, v2 = l1[pos1], l2[pos2]\n\t\tif v1 == v2 then\n\t\t\t\
    res[#res+1] = v1\n\t\t\tpos1 = pos1 + 1\n\t\t\tpos2 = pos2 + 1\n\t\telseif v1\
    \ < v2 then\n\t\t\tpos1 = pos1 + 1\n\t\telse\n\t\t\tpos2 = pos2 + 1\n\t\tend\n\
    \tend\n\treturn res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeyb8cad5.lua:25:\
    \ expected: {1, 5, 653}\nactual: {653}\nstack traceback:\n\t/tmp/tmpeyb8cad5.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local u = {}\n    for _, v in ipairs(l1) do\n        if\
    \ (contains(l2, v)) then\n            u[#u+1] = v\n        end\n    end\n    table.sort(u)\n\
    \    return u\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqtvhnysd.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpqtvhnysd.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpqtvhnysd.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _, e in ipairs(l1) do\n        if\
    \ not t[e] and in_list(l2, e) then\n            t[e] = true\n        end\n   \
    \ end\n    return sort_unique(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp31l5jkqj.lua:5:\
    \ attempt to call a nil value (global 'in_list')\nstack traceback:\n\t/tmp/tmp31l5jkqj.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp31l5jkqj.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local l3 = {}\n    for _, v in ipairs(l1) do\n        if\
    \ utils.contains(l2, v) then\n            table.insert(l3, v)\n        end\n \
    \   end\n    return sorted(l3)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp28w_28b5.lua:5:\
    \ attempt to index a nil value (global 'utils')\nstack traceback:\n\t/tmp/tmp28w_28b5.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp28w_28b5.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t1 = sort(l1)\n    local t2 = sort(l2)\n    local\
    \ result = {}\n    local i1, i2 = 1, 1\n    while t1[i1] and t2[i2] do\n     \
    \   if t1[i1] == t2[i2] then\n            table.insert(result, t1[i1])\n     \
    \       i1 = i1 + 1\n            i2 = i2 + 1\n        elseif t1[i1] < t2[i2] then\n\
    \            i1 = i1 + 1\n        else\n            i2 = i2 + 1\n        end\n\
    \    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgbo0qoqm.lua:3:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpgbo0qoqm.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpgbo0qoqm.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal com = {}\n\tfor _, s in ipairs(l1) do\n\t\tfor _, p\
    \ in ipairs(l2) do\n\t\t\tif s == p then\n\t\t\t\ttable.insert(com, s)\n\t\t\t\
    end\n\t\tend\n\tend\n\treturn sorted(com)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplo__jnyo.lua:11:\
    \ attempt to call a nil value (global 'sorted')\nstack traceback:\n\t/tmp/tmplo__jnyo.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmplo__jnyo.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local r1 = {}\n    local r2 = {}\n    for i, l in ipairs(l1)\
    \ do r1[l] = true end\n    for i, l in ipairs(l2) do\n        if r1[l] then r2[#r2+1]\
    \ = l end\n    end\n    sort(r2)\n    return r2\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxg92tih_.lua:9:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpxg92tih_.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpxg92tih_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    -- insert all elements of l1 into a set\n    local s = {}\n\
    \    for _, v in ipairs(l1) do\n        s[v] = true\n    end\n    -- insert all\
    \ elements of l2 into the set\n    for _, v in ipairs(l2) do\n        s[v] = true\n\
    \    end\n    -- extract all elements from the set\n    local result = {}\n  \
    \  for v in pairs(s) do\n        table.insert(result, v)\n    end\n    -- sort\
    \ the result\n    table.sort(result)\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpavfizyfp.lua:25:\
    \ expected: {1, 5, 653}\nactual: {1, 2, 3, 4, 5, 7, 9, 34, 121, 653}\nstack traceback:\n\
    \t/tmp/tmpavfizyfp.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local u = {}\n  for _, i in ipairs(l1) do\n    if table_contains(l2,\
    \ i) then\n      table.insert(u, i)\n    end\n  end\n  return sorted(u)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkwdi2wod.lua:5:\
    \ attempt to call a nil value (global 'table_contains')\nstack traceback:\n\t\
    /tmp/tmpkwdi2wod.lua:5: in local 'candidate'\n\t/tmp/tmpkwdi2wod.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local ret = {}\n    for _, e in ipairs(l1) do\n        if\
    \ list.contains(l2, e) then table.insert(ret, e) end\n    end\n    table.sort(ret)\n\
    \    return ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb9cl6e2s.lua:5:\
    \ attempt to index a nil value (global 'list')\nstack traceback:\n\t/tmp/tmpb9cl6e2s.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpb9cl6e2s.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    if type(l1) ~= \"table\" or type(l2) ~= \"table\" then\n\
    \        return nil\n    end\n    local l3 = {}\n    local i1, i2 = 1, 1\n   \
    \ while i1 <= #l1 and i2 <= #l2 do\n        if l1[i1] < l2[i2] then\n        \
    \    i1 = i1 + 1\n        elseif l1[i1] > l2[i2] then\n            i2 = i2 + 1\n\
    \        else\n            table.insert(l3, l1[i1])\n            i1 = i1 + 1\n\
    \            i2 = i2 + 1\n        end\n    end\n    return l3\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuvnsfrjs.lua:25:\
    \ expected: {1, 5, 653}\nactual: {653}\nstack traceback:\n\t/tmp/tmpuvnsfrjs.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local m = {}\n  for _, v in ipairs(l1) do\n    m[v] = true\n\
    \  end\n  local r = {}\n  for _, v in ipairs(l2) do\n    if m[v] then\n      r[#r+1]\
    \ = v\n    end\n  end\n  sort(r)\n  return r\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzpnbvfox.lua:13:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpzpnbvfox.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpzpnbvfox.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local common = {}\n    for _, v in ipairs(l1) do\n     \
    \   if contains(l2, v) then\n            table.insert(common, v)\n        end\n\
    \    end\n    return unique(common)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzgjsaog3.lua:5:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpzgjsaog3.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpzgjsaog3.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local r = {}\n    for k,v in pairs(l1) do\n        if l2[k]\
    \ then r[k] = v end\n    end\n    local ix = {}\n    for _,k in ipairs(r) do ix[k]\
    \ = true end\n    return sorted(ix)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpct7tn7fa.lua:9:\
    \ attempt to call a nil value (global 'sorted')\nstack traceback:\n\t/tmp/tmpct7tn7fa.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpct7tn7fa.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal res = {}\n\tfor _, v in ipairs(l1) do\n\t\tif has(l2,\
    \ v) then\n\t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\ttable.sort(res)\n\treturn\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpizwhm527.lua:5:\
    \ attempt to call a nil value (global 'has')\nstack traceback:\n\t/tmp/tmpizwhm527.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpizwhm527.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal ret = {}\n\tlocal map = {}\n\tfor _, v in ipairs(l1)\
    \ do\n\t\tmap[v] = (map[v] or 0) + 1\n\tend\n\tfor _, v in ipairs(l2) do\n\t\t\
    if map[v] and map[v] > 0 then\n\t\t\tmap[v] = map[v] - 1\n\t\t\tret[#ret + 1]\
    \ = v\n\t\tend\n\tend\n\treturn ret\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyucmvajw.lua:20:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 653}\nstack traceback:\n\t/tmp/tmpyucmvajw.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local set = {}\n  local result = {}\n  for _, v in ipairs(l1)\
    \ do\n    set[v] = true\n  end\n  for _, v in ipairs(l2) do\n    if set[v] then\n\
    \      table.insert(result, v)\n    end\n  end\n  table.sort(result)\n  return\
    \ result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpro28liup.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpro28liup.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local out = {}\n  for i = 1, #l1 do\n    local key = l1[i]\n\
    \    if l2[key] then\n      out[#out + 1] = key\n    end\n  end\n  return out\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgrbpbrm3.lua:16:\
    \ expected: {1, 5, 653}\nactual: {1, 4, 3, 2, 5}\nstack traceback:\n\t/tmp/tmpgrbpbrm3.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    if not (l1 and l2) then return {} end\n    local common\
    \ = {}\n    for _, v in ipairs(l1) do\n        if not common[v] and has_value(l2,\
    \ v) then\n            common[v] = true\n        end\n    end\n    local sorted\
    \ = {}\n    for k, _ in pairs(common) do table.insert(sorted, k) end\n    table.sort(sorted)\n\
    \    return sorted\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpra4qawne.lua:6:\
    \ attempt to call a nil value (global 'has_value')\nstack traceback:\n\t/tmp/tmpra4qawne.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpra4qawne.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local res = {}\n    for i=1,#l1 do\n        if index(l2,\
    \ l1[i]) then\n            res[#res+1] = l1[i]\n        end\n    end\n    return\
    \ sort(res)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp67hs3uv2.lua:5:\
    \ attempt to call a nil value (global 'index')\nstack traceback:\n\t/tmp/tmp67hs3uv2.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp67hs3uv2.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal r = {}\n\tlocal l = {}\n\tfor i = 1,#l1 do\n\t\tl[l1[i]]\
    \ = i\n\tend\n\tfor i = 1,#l2 do\n\t\tif l[l2[i]] then\n\t\t\ttable.insert(r,\
    \ l2[i])\n\t\tend\n\tend\n\treturn r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9p4n3sk_.lua:19:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmp9p4n3sk_.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local s, l = {}, {}\n  for _, v in ipairs(l1) do s[v] = true\
    \ end\n  for _, v in ipairs(l2) do if s[v] then table.insert(l, v) end end\n \
    \ return l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvlysz60o.lua:12:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmpvlysz60o.lua:12:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal t = {}\n\tfor _, v in ipairs(l1) do\n\t\tif _table.index_of(l2,\
    \ v) ~= -1 then\n\t\t\tt[#t + 1] = v\n\t\tend\n\tend\n\treturn table.sort(t)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2jawuzrd.lua:5:\
    \ attempt to index a nil value (global '_table')\nstack traceback:\n\t/tmp/tmp2jawuzrd.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2jawuzrd.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal res = {}\n\tfor _,k in ipairs(l1) do\n\t\tif is_in(k,\
    \ l2) then table.insert(res, k) end\n\tend\n\treturn res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgphxsezv.lua:5:\
    \ attempt to call a nil value (global 'is_in')\nstack traceback:\n\t/tmp/tmpgphxsezv.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpgphxsezv.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    return sorted(unique(l1), unique(l2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp46zvxr1w.lua:3:\
    \ attempt to call a nil value (global 'unique')\nstack traceback:\n\t/tmp/tmp46zvxr1w.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmp46zvxr1w.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local t = {}\n    for _,v in ipairs(l1) do\n        t[v]\
    \ = true\n    end\n    local l = {}\n    for _,v in ipairs(l2) do\n        if\
    \ t[v] then\n            table.insert(l, v)\n        end\n    end\n    table.sort(l)\n\
    \    return l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5},\
    \ {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5divi1zb.lua:20:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp5divi1zb.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal o, s = {}, {}\n\tfor i = 1, #l1 do o[l1[i]] = true end\n\
    \tfor i = 1, #l2 do if o[l2[i]] then s[#s+1] = l2[i] end end\n\treturn s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5eoaweu0.lua:12:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmp5eoaweu0.lua:12:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal r = {}\n\tfor _,v in ipairs(l1) do\n\t\tif lu.table_contains(l2,\
    \ v) then\n\t\t\ttable.insert(r, v)\n\t\tend\n\tend\n\treturn lu.table_unique(r)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3uusyqtc.lua:5:\
    \ attempt to call a nil value (field 'table_contains')\nstack traceback:\n\t/tmp/tmp3uusyqtc.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp3uusyqtc.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    local ret = {}\n    for _, v in ipairs(l1) do\n        if\
    \ table.get(l2, v) then\n            table.insert(ret, v)\n        end\n    end\n\
    \    return table.unique(ret)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4z6r2t8a.lua:5:\
    \ attempt to call a nil value (field 'get')\nstack traceback:\n\t/tmp/tmp4z6r2t8a.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp4z6r2t8a.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n    return sort_unique(intersect(l1, l2))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz70obd3h.lua:3:\
    \ attempt to call a nil value (global 'intersect')\nstack traceback:\n\t/tmp/tmpz70obd3h.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpz70obd3h.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n  local r = {}\n  for _, v in ipairs(l1) do\n    if util.contains(l2,\
    \ v) then\n      r[#r+1] = v\n    end\n  end\n  return util.unique(r)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5c70ezke.lua:5:\
    \ attempt to index a nil value (global 'util')\nstack traceback:\n\t/tmp/tmp5c70ezke.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp5c70ezke.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tif not l1 or not l2 then return {} end\n\tlocal r = {}\n\t\
    for _, v in ipairs(l1) do\n\t\tif setcontains(l2, v) then table.insert(r, v) end\n\
    \tend\n\treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg49vy3qm.lua:6:\
    \ attempt to call a nil value (global 'setcontains')\nstack traceback:\n\t/tmp/tmpg49vy3qm.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpg49vy3qm.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821916
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\nlocal function\
    \ common(l1, l2)\n\tlocal t1 = {}\n\tlocal t2 = {}\n\tlocal res = {}\n\tfor i,\
    \ v in ipairs(l1) do\n\t\tt1[v] = true\n\tend\n\tfor i, v in ipairs(l2) do\n\t\
    \tt2[v] = true\n\tend\n\tfor i, v in ipairs(l1) do\n\t\tif t2[v] then\n\t\t\t\
    table.insert(res, v)\n\t\tend\n\tend\n\ttable.sort(res)\n\treturn res\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821916

language: lua
name: HumanEval_98_count_upper
results:
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local c = 0\n  for i = 1, #s\
    \ do\n    if i % 2 == 0 and s:sub(i, i):match('[AEIOU]') then\n      c = c + 1\n\
    \    end\n  end\n  return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuzrhycta.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpuzrhycta.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local n = 0\n  for i = 1, #s\
    \ do\n    local c = s:sub(i, i)\n    if c:upper() == c and c:lower() ~= c then\n\
    \      n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd2utbgr3.lua:17:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmpd2utbgr3.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and (s:sub(i, i) == 'A' or s:sub(i, i) == 'E' or s:sub(i,\
    \ i) == 'I' or s:sub(i, i) == 'O' or s:sub(i, i) == 'U') then\n\t\t\tcount = count\
    \ + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzbs742mh.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpzbs742mh.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, string.len(s) do\n        if i % 2 == 0 and string.find(s, \"[AEIOUY]\"\
    , i, true) then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps_b4sl27.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmps_b4sl27.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):match('[AEIOU]') then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppdts9zgd.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmppdts9zgd.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return reduce(filter(range(0,#s,2),function(i)\
    \ return string.find(\"AEIOU\",s:sub(i,i)) ~= nil end),0,function(acc,i) return\
    \ acc + 1 end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpengdcyjd.lua:4:\
    \ attempt to call a nil value (global 'range')\nstack traceback:\n\t/tmp/tmpengdcyjd.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpengdcyjd.lua:10: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local vowels = \"AEIOU\"\n\
    \    local sum = 0\n    for i = 1, #s do\n        local si = s:sub(i, i)\n   \
    \     if vowels:find(si) then\n            if i % 2 == 0 then\n              \
    \  sum = sum + 1\n            end\n        end\n    end\n    return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiiezudob.lua:20:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpiiezudob.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i=1,\
    \ #s do\n        if i % 2 == 0 and string.find(\"AEIOU\", s:sub(i, i)) then\n\
    \            c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeyxrsz8p.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpeyxrsz8p.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz5bfzq8l.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpz5bfzq8l.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n      \
    \      c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcuz9j528.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpcuz9j528.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if s:sub(i, i):match('[AEIOU]') and i % 2 == 0 then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptp4rfr4m.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmptp4rfr4m.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if (i % 2 == 0) and (string.sub(s, i, i) == \"A\" or string.sub(s,\
    \ i, i) == \"E\" or string.sub(s, i, i) == \"I\" or string.sub(s, i, i) == \"\
    O\" or string.sub(s, i, i) == \"U\") then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy9olen45.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpy9olen45.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i=1,#s\
    \ do\n    if i%2==0 and s:sub(i,i):match(\"[AEIOU]\") then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nassert(count_upper(\"i\") == 0)\n\
    assert(count_upper(\"O\") == 1)\nassert(count_upper(\"EA\") == 1)\nassert(count_upper(\"\
    a\") == 0)\nassert(count_upper(\"ua\") == 0)\nassert(count_upper(\"IE\") == 1)\n\
    assert(count_upper(\"AeI\") == 1)\nassert(count_upper(\"AeIoU\") == 3)\nassert(count_upper(\"\
    AeIoUO\") == 4)\nassert(count_upper(\"AeIoUeO\") == 5)\nassert(count_upper(\"\
    EAieEOIeA\") == 5)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmptv85kiy8.lua:13: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmptv85kiy8.lua:13: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- Your code here.\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjxfl430w.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpjxfl430w.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and string.find(\"AEIOU\", s:sub(i, i)) then\n\
    \            c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5pgk568w.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp5pgk568w.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return s:gsub(\"%u\", function(c)\
    \ if c:byte() % 2 == 0 then return \"o\" end end):len()\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5hmvvl07.lua:10:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmp5hmvvl07.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if i % 2 == 0 and is_vowel(s:sub(i, i)) then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxxtp5w9t.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpxxtp5w9t.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpxxtp5w9t.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\treturn #s:gsub(\"(%u%l*)\",\n\
    \t\tfunction(c)\n\t\t\tif #c % 2 == 0 then\n\t\t\t\treturn c:gsub(\"[AEIOU]\"\
    , \"\"):len()\n\t\t\telse\n\t\t\t\treturn c\n\t\t\tend\n\t\tend)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiyf3ln3s.lua:17:\
    \ expected: 1, actual: 4\nstack traceback:\n\t/tmp/tmpiyf3ln3s.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal cnt = 0\n\tfor i = 1,\
    \ #s do\n\t\tif s:sub(i, i):match(\"[AEIOU]\") then\n\t\t\tcnt = cnt + 1\n\t\t\
    end\n\tend\n\treturn cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7r20_u54.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp7r20_u54.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- TODO\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxfbzl24b.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpxfbzl24b.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   return #s:gsub('([aeiouAEIOU])',\
    \ '')\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprj3n097d.lua:10:\
    \ expected: 1, actual: 4\nstack traceback:\n\t/tmp/tmprj3n097d.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local num = 0\n  for i = 1,\
    \ #s do\n    if s:sub(i, i):match('[AEIOU]') and i % 2 == 0 then\n      num =\
    \ num + 1\n    end\n  end\n  return num\nend\nprint(count_upper('hello world'))\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "0\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptredrz1n.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmptredrz1n.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    -- code goes here\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzuae4lpn.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpzuae4lpn.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and (s:sub(i, i) == 'A' or s:sub(i, i) ==\
    \ 'E' or s:sub(i, i) == 'I' or s:sub(i, i) == 'O' or s:sub(i, i) == 'U') then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpksx0307r.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpksx0307r.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\treturn\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpar3jhnt_.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpar3jhnt_.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    return #(s:gsub(\"([AEIOU])\"\
    , \"%1\")):gsub(\"([AEIOU])\", \"%1\")\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphi_b3yjx.lua:10:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmphi_b3yjx.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal sum = 0\n\tfor i = 1,#s\
    \ do\n\t\tif i % 2 == 0 and is_upper(s,i) then\n\t\t\tsum = sum + 1\n\t\tend\n\
    \tend\n\treturn sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0vzgqin7.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmp0vzgqin7.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp0vzgqin7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    if not s then return 0 end\n\
    \    return s:gsub(\"[AEIOU]\", \"U\"):gsub(\"[aeiou]\", \"u\"):gsub(\".\", \"\
    u\"):sub(2):sub(1, -2):gsub(\"u\", \"\").len\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw0cngx0d.lua:11:\
    \ expected: 1, actual: function: 0x55f05c624220\nstack traceback:\n\t/tmp/tmpw0cngx0d.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\t-- Your code here...\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbihw5h85.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpbihw5h85.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    count = 0\n    for i=1,#s\
    \ do\n        if string.match(s:sub(i,i), \"[aeiouAEIOU]\") and (i%2==0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx2qrbel1.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpx2qrbel1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsezkhdv3.lua:9:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpsezkhdv3.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if ((i % 2) == 0) and is_vowel(s:sub(i, i)) then\n          \
    \  c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyrfh34k7.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpyrfh34k7.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpyrfh34k7.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  if #s == 0 then return 0 end\n\
    \  local rest = s:sub(2)\n  if s:sub(1,1):match('[AEIOU]') and (#s % 2 == 0) then\n\
    \    return 1 + count_upper(rest)\n  else\n    return count_upper(rest)\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpentp11r3.lua:20:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpentp11r3.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- ...\nend\nassert(count_upper('AaEiIoOuU')\
    \ == 5)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp4ba194el.lua:6: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp4ba194el.lua:6: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if (i % 2 == 0) and (s:sub(i, i):match(\"[AEIOU]\")) then\n \
    \           c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjcaxbiwo.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpjcaxbiwo.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local sum = 0\n    for i,\
    \ x in ipairs(s) do\n        local ok = false\n        for _, y in ipairs(uppers)\
    \ do\n            if x == y then\n                ok = true\n                break\n\
    \            end\n        end\n        if ok and (i % 2 == 0) then\n         \
    \   sum = sum + 1\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpek8hs823.lua:23:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpek8hs823.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- hint: use the function is_upper()\
    \ defined above\n  local count = 0\n  --\n  -- YOUR CODE HERE\n  --\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp12ndpomd.lua:15:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp12ndpomd.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i=1,#s\
    \ do\n    if not (i%2==0) and s:match('[AEIOU]', i) then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi5d00p3w.lua:16:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmpi5d00p3w.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local t = 0\n    for i = 1,\
    \ #s do\n        if is_vowel(s:sub(i, i)) and i % 2 == 0 then\n            t =\
    \ t + 1\n        end\n    end\n    return t\nend\nassert(count_upper(\"\") ==\
    \ 0)\nassert(count_upper(\"a\") == 0)\nassert(count_upper(\"B\") == 1)\nassert(count_upper(\"\
    AAb\") == 1)\nassert(count_upper(\"AAAb\") == 2)\nassert(count_upper(\"AAAB\"\
    ) == 3)\nassert(count_upper(\"AAAbX\") == 2)\nassert(count_upper(\"AAAbXB\") ==\
    \ 3)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpm_xp04im.lua:6: attempt to call a nil value (global 'is_vowel')\n\
    stack traceback:\n\t/tmp/tmpm_xp04im.lua:6: in local 'count_upper'\n\t/tmp/tmpm_xp04im.lua:13:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local n = 0\n   for i=1,#s\
    \ do\n      if i%2 == 0 and s:sub(i,i):match(\"[AEIOU]\") then\n         n = n\
    \ + 1\n      end\n   end\n   return n\nend\ncount_upper(\"Ecole Polytechnique\"\
    )  --> 2\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj237mkcp.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpj237mkcp.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if (i % 2 == 0) and s:sub(i, i):match('[AEIOU]') then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1d59l6tg.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp1d59l6tg.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:sub(i, i):match(\"^[AEIOU]$\") then\n   \
    \         n = n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphzfxh7uj.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmphzfxh7uj.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if s:sub(i, i):match('[AEIOU]') then\n            if i %\
    \ 2 == 0 then\n                count = count + 1\n            end\n        end\n\
    \    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp12n9_s9t.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp12n9_s9t.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    local\
    \ n = string.len(s)\n    for i = 1, n do\n        local c = string.sub(s, i, i)\n\
    \        if c:match(\"[AEIOU]\") and i % 2 == 0 then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpff79l0o1.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpff79l0o1.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local n = 0\n   for i=1, #s\
    \ do\n      if i % 2 == 0 and s:sub(i,i):match(\"[AEIOU]\") then\n         n =\
    \ n + 1\n      end\n   end\n   return n\nend\nassert(count_upper(\"HAY STACK\"\
    ) == 0)\nassert(count_upper(\"I LIKE TURTLES\") == 4)\nassert(count_upper(\"\"\
    ) == 0)\nassert(count_upper(\"CHICKEN\") == 0)\nassert(count_upper(\"MADAM\")\
    \ == 3)\nassert(count_upper(\"ABRACADABRA\") == 4)\nassert(count_upper(\"TALISMAN\"\
    ) == 2)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpaqzfepiq.lua:12: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpaqzfepiq.lua:12: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local cnt = 0\n    for i =\
    \ 1, #s do\n        if i % 2 == 0 and s:sub(i, i):match(\"[AEIOU]\") then\n  \
    \          cnt = cnt + 1\n        end\n    end\n    return cnt\nend\nprint(count_upper(\"\
    HALLELUJAH\")) --> 3\nprint(count_upper(\"he he\")) --> 1\nprint(count_upper(\"\
    HELP I AM SURROUNDED BY CAPITALS\")) --> 12\nprint(count_upper(\"\")) --> 0\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "1\n0\n8\n0\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnf5vcd88.lua:20:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpnf5vcd88.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  s = s:gsub(\"%a\", function(x)\n\
    \    if x:find(\"[AEIOU]\") then\n      return x:upper()\n    end\n  end)\n  local\
    \ n = 0\n  for i = 2, #s, 2 do\n    if s:sub(i, i):find(\"[AEIOU]\") then\n  \
    \    n = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpufmca6op.lua:21:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpufmca6op.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if (i % 2 == 0) and (s:sub(i, i):find(\"[AEIOU]\")) then\n  \
    \          n = n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg2adz6o0.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpg2adz6o0.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local cnt = 0\n    for i=1,#s\
    \ do\n        if s:sub(i,i):match(\"[AEIOU]\") and i%2 == 0 then\n           \
    \ cnt = cnt + 1\n        end\n    end\n    return cnt\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphrrtoa3b.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmphrrtoa3b.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and is_upper(s, i) then\n\t\t\tcount = count + 1\n\t\
    \tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpepomwdlr.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpepomwdlr.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpepomwdlr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and s:sub(i, i):match('[AEIOU]') then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzpaz_4ie.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpzpaz_4ie.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal t = string.gmatch(s, \"\
    .\")\n\tlocal count = 0\n\tfor i, v in t do\n\t\tif i % 2 == 0 and string.find(v,\
    \ \"[AEIOU]\") then\n\t\t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpikzcuaz_.lua:7:\
    \ attempt to mod a 'string' with a 'number'\nstack traceback:\n\t/tmp/tmpikzcuaz_.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpikzcuaz_.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif is_vowel(s:sub(i, i)) and i % 2 == 0 then\n\t\t\tcount = count\
    \ + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwuysmn3a.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpwuysmn3a.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpwuysmn3a.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i=1,#s\
    \ do\n    if ((i % 2) == 0) and (string.find(s, '[AEIOU]', i, true)) then\n  \
    \    count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg0qbus09.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpg0qbus09.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return math.max(0, s:gsub(\"\
    [AEIOU]\", \"\") + 0)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu24o78zw.lua:4:\
    \ attempt to add a 'string' with a 'number'\nstack traceback:\n\t/tmp/tmpu24o78zw.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpu24o78zw.lua:10: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    local\
    \ upper_vowels = {['A'] = true, ['E'] = true, ['I'] = true, ['O'] = true, ['U']\
    \ = true}\n    for i, char in ipairs(s) do\n        if i % 2 == 0 and upper_vowels[char]\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeob6e2td.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpeob6e2td.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    --\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3lwn_2c8.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmp3lwn_2c8.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local c = 0\n  for i = 1, #s\
    \ do\n    local b = s:sub(i, i)\n    if (i % 2 == 0) and (b == 'A' or b == 'E'\
    \ or b == 'I' or b == 'O' or b == 'U') then\n      c = c + 1\n    end\n  end\n\
    \  return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzrdtib81.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpzrdtib81.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):match('[AEIOU]') then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppdts9zgd.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmppdts9zgd.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if (i % 2 == 0) and isupper(s, i) then\n            c = c + 1\n\
    \        end\n    end\n    return c\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqjstw35v.lua:6:\
    \ attempt to call a nil value (global 'isupper')\nstack traceback:\n\t/tmp/tmpqjstw35v.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpqjstw35v.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local acc = 0\n  for i = 1,\
    \ #s do\n    if i % 2 == 0 and s:sub(i, i):match(\"[AEIOU]\") then\n      acc\
    \ = acc + 1\n    end\n  end\n  return acc\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwokx1foe.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpwokx1foe.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local count = 0\n   for i=1,#s\
    \ do\n      if i%2==0 and string.match(s:sub(i,i), '[AEIOU]') then\n         count\
    \ = count + 1\n      end\n   end\n   return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj7k4hf08.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpj7k4hf08.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if s:sub(i, i):match('[AEIOU]') and i % 2 == 0 then\n       \
    \     c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcclnnpd1.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpcclnnpd1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and is_upper(s:sub(i, i)) then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqc4db8sa.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpqc4db8sa.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpqc4db8sa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkseqh2mq.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpkseqh2mq.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n      \
    \      n = n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqsjlpds_.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpqsjlpds_.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local counter = 0\n    for\
    \ i=1,#s do\n        if string.match(s, '[AEIOU]', i) then\n            counter\
    \ = counter + 1\n        end\n    end\n    return counter\nend\nprint('cou\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptbdye8nc.lua:12: unfinished string near ''''cou''

    '
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local c = 0\n  for i = 1, #s\
    \ do\n    local ch = s:sub(i, i)\n    if ch:find(\"[AEIOU]\") and (i % 2 == 0)\
    \ then\n      c = c + 1\n    end\n  end\n  return c\nend\nassert(count_upper(\"\
    ABCDEFGH\") == 2)\nassert(count_upper(\"XYZ\") == 0)\nassert(count_upper(\"aBCdefgh\"\
    ) == 2)\nassert(count_upper(\"xyz\") == 0)\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpi3cbu3i6.lua:13: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpi3cbu3i6.lua:13: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    -- body\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0lhhitt2.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmp0lhhitt2.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if s:sub(i, i):match(\"[AEIOU]\") then\n      if i % 2 == 0 then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend\nassert_equal(2,\
    \ count_upper(\"AAaou\"))\nassert_equal(1, count_upper(\"AAeou\"))\nassert_equal(0,\
    \ count_upper(\"AAaou\"))\nassert_equal(1, count_upper(\"AAEou\"))\nassert_equal(2,\
    \ count_upper(\"AAEOU\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp3l86m06f.lua:14: attempt to call a nil value (global 'assert_equal')\n\
    stack traceback:\n\t/tmp/tmp3l86m06f.lua:14: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1,#s do\n        if i % 2 == 0 and s:sub(i,i):find(\"[AEIOU]\") then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz1ijuk8x.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpz1ijuk8x.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local sum = 0\n    for i =\
    \ 1, #s do\n        if i % 2 == 0 and s:sub(i, i):match(\"[AEIOU]\") then\n  \
    \          sum = sum + 1\n        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2o6p16sn.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp2o6p16sn.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsezkhdv3.lua:9:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpsezkhdv3.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- ...\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplsn9tvkq.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmplsn9tvkq.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if i % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4k_c608h.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp4k_c608h.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsezkhdv3.lua:9:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpsezkhdv3.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:match('^%u$') then\n            n = n + 1\n\
    \        end\n    end\n    return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ykk8fhz.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp6ykk8fhz.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    local l =\
    \ utf8.len(s)\n    local i = 0\n    while i < l do\n        local b = utf8.byte(s,\
    \ i)\n        if i % 2 == 0 and b >= 65 and b <= 90 then c = c + 1 end\n     \
    \   i = i + 1\n    end\n    return c\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjgozt2ql.lua:8:\
    \ attempt to call a nil value (field 'byte')\nstack traceback:\n\t/tmp/tmpjgozt2ql.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpjgozt2ql.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    -- Complete this function\
    \ here\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdw7enxmb.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpdw7enxmb.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and is_upper(s, i) then\n            c = c + 1\n\
    \        end\n    end\n    return c\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgk1o_58d.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpgk1o_58d.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpgk1o_58d.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i,\
    \ c in string.gmatch(s, \"(%d-)(%a)\") do\n        if tonumber(i) % 2 == 0 and\
    \ c == string.upper(c) then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpio2bwls4.lua:6:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpio2bwls4.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpio2bwls4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkseqh2mq.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpkseqh2mq.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- ...\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplsn9tvkq.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmplsn9tvkq.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  local i =\
    \ 0\n  while i <= #s do\n    if s:sub(i, i):match('^[AEIOU]$') then\n      count\
    \ = count + 1\n    end\n    i = i + 2\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdot6m61p.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpdot6m61p.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local c = 0\n  for i = 1, #s\
    \ do\n    if i % 2 == 0 and s:sub(i, i):match(\"[AEIOU]\") then\n      c = c +\
    \ 1\n    end\n  end\n  return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnir_gyio.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpnir_gyio.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, string.len(s) do\n        if (i % 2 == 0) and (string.find(\"AEIOU\", string.sub(s,\
    \ i, i))) then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm77nr56r.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpm77nr56r.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   return select(2, (s:gsub('[AEIOU][^AEIOU]*',\
    \ '')))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr9jrscnu.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpr9jrscnu.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local result = 0\n   local\
    \ i = 0\n   for ch in s:gmatch(\".-\") do\n      i = i + 1\n      if i % 2 ==\
    \ 0 and ch:match(\"[AEIOU]\") then\n         result = result + 1\n      end\n\
    \   end\n   return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7d_hxed0.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp7d_hxed0.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    local\
    \ i = 0\n    for c in string.gmatch(s, '.') do\n        i = i + 1\n        if\
    \ string.find(VOWELS, c) and i % 2 == 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwi0tr2yu.lua:8:\
    \ bad argument #1 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmpwi0tr2yu.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpwi0tr2yu.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and s:sub(i, i):match(\"[AEIOU]\") then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend\nassert(count_upper(\"\") ==\
    \ 0)\nassert(count_upper(\"a\") == 0)\nassert(count_upper(\"e\") == 0)\nassert(count_upper(\"\
    i\") == 0)\nassert(count_upper(\"o\") == 0)\nassert(count_upper(\"u\") == 0)\n\
    assert(count_upper(\"A\") == 1)\nassert(count_upper(\"B\") == 0)\nassert(count_upper(\"\
    C\") == 1)\nassert(count_upper(\"D\") == 0)\nassert(count_upper(\"E\") == 1)\n\
    assert(count_upper(\"F\") == 0)\nassert(count_upper(\"G\") == 1)\nassert(count_upper(\"\
    H\") == 0)\nassert(count_upper(\"I\") == 1)\nassert(count_upper(\"J\") == 0)\n\
    assert(count_upper(\"K\") == 1)\nassert(count_upper(\"L\") == 0)\nassert(count_upper(\"\
    M\") == 1)\nassert(count_upper(\"N\") == 0)\nassert(count_upper(\"O\") == 1)\n\
    assert(count_upper(\"P\") == 0)\nassert(count_upper(\"Q\") == 1)\nassert(count_upper(\"\
    R\") == 0)\nassert(count_upper(\"S\") == 1)\nassert(count_upper(\"T\") == 0)\n\
    assert(count_upper(\"U\") == 1)\nassert(count_upper(\"V\") == 0)\nassert(count_upper(\"\
    W\") == 1)\nassert(count_upper(\"X\") == 0)\nassert(count_upper(\"Y\") == 1)\n\
    assert(count_upper(\"Z\") == 0)\nassert(count_upper(\"1\") == 0)\nassert(count_upper(\"\
    2\") == 0)\nassert(count_upper(\"3\") == 0)\nassert(count_upper(\"4\") == 0)\n\
    assert(count_upper(\"5\") == 0)\nassert(count\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyr_41hn0.lua:50: '')'' expected (to close ''('' at line 49)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if 'AEIOU'[s:sub(i, i)] then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpm_pygkk_.lua:6: ''then'' expected near ''[''

    '
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local cnt = 0\n  for i = 1,\
    \ #s do\n    if s:sub(i, i):find('[AEIOU]') then\n      if i % 2 == 0 then\n \
    \       cnt = cnt + 1\n      end\n    end\n  end\n  return cnt\nend\nprint(count_upper('eoEo'))\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "0\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7o973gfe.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp7o973gfe.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local count = 0\n   local odd\
    \ = false\n   for i = 1, #s do\n      if odd and is_vowel(s:sub(i, i)) and s:sub(i,\
    \ i) == s:sub(i, i):upper() then\n         count = count + 1\n      end\n    \
    \  odd = not odd\n   end\n   return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4vm9_2o5.lua:7:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmp4vm9_2o5.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp4vm9_2o5.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local ct = 0\n  for i = 1, #s\
    \ do\n    if i % 2 == 0 and string.find(s, \"[AEIOU]\", i, true) then\n      ct\
    \ = ct + 1\n    end\n  end\n  return ct\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9dzrpady.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp9dzrpady.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if i % 2 == 0 and vowel_upper[s:sub(i, i)] then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nassert(count_upper(\"\") == 0)\nassert(count_upper(\"\
    A\") == 0)\nassert(count_upper(\"B\") == 0)\nassert(count_upper(\"AB\") == 1)\n\
    assert(count_upper(\"ab\") == 0)\nassert(count_upper(\"aB\") == 1)\nassert(count_upper(\"\
    ABC\") == 1)\nassert(count_upper(\"aBC\") == 1)\nassert(count_upper(\"abC\") ==\
    \ 0)\nassert(count_upper(\"abc\") == 0)\nassert(count_upper(\"aBc\") == 1)\nassert(count_upper(\"\
    abC\") == 0)\nassert(count_upper(\"aBCd\") == 1)\nassert(count_upper(\"aBcD\"\
    ) == 2)\nassert(count_upper(\"abCD\") == 1)\nassert(count_upper(\"abcD\") == 0)\n\
    assert(count_upper(\"abCd\") == 0)\nassert(count_upper(\"aBcDd\") == 2)\nassert(count_upper(\"\
    aBcDD\") == 3)\nassert(count_upper(\"aBcde\") == 1)\nassert(count_upper(\"aBcDE\"\
    ) == 2)\nassert(count_upper(\"aBcDEf\") == 2)\nassert(count_upper(\"aBcDEF\")\
    \ == 3)\nassert(count_upper(\"aBcDEFg\") == 3)\nassert(count_upper(\"aBcDEFG\"\
    ) == 4)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp5y8vtv1x.lua:6: attempt to index a nil value (global 'vowel_upper')\n\
    stack traceback:\n\t/tmp/tmp5y8vtv1x.lua:6: in local 'count_upper'\n\t/tmp/tmp5y8vtv1x.lua:15:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local c = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:sub(i, i):match(\"[AEIOU]\") then\n     \
    \       c = c + 1\n        end\n    end\n    return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2o6aoer7.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp2o6aoer7.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 0
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local count = 0\n   local pos\
    \ = 0\n   for c in s:gmatch(\".\") do\n      if pos % 2 == 0 and (c == \"A\" or\
    \ c == \"E\" or c == \"I\" or c == \"O\" or c == \"U\") then\n         count =\
    \ count + 1\n      end\n      pos = pos + 1\n   end\n   return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for idx =\
    \ 1, #s do\n    local char = s:sub(idx, idx)\n    if char:match(\"[AEIOU]\") and\
    \ idx % 2 == 0 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbblfo7j9.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpbblfo7j9.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local count = 0\n   for i =\
    \ 1,#s do\n      if i % 2 == 0 and s:sub(i,i):match('[AEIOU]') then\n        \
    \ count = count + 1\n      end\n   end\n   return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuur4okz_.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpuur4okz_.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and is_upper(s, i) then\n\t\t\tcount = count + 1\n\t\
    \tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpepomwdlr.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpepomwdlr.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpepomwdlr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local cnt = 0\n    for i =\
    \ 1, #s do\n        if s:sub(i, i):find('[AEIOU]') and i % 2 == 0 then\n     \
    \       cnt = cnt + 1\n        end\n    end\n    return cnt\nend\nassert(count_upper('AeIoU')\
    \ == 2)\nassert(count_upper('aEiOu') == 2)\nassert(count_upper('aEioU') == 1)\n\
    assert(count_upper('aeIoU') == 1)\nassert(count_upper('aEiOu') == 2)\nassert(count_upper('aeiOu')\
    \ == 1)\nassert(count_upper('aeioU') == 0)\nassert(count_upper('aeiou') == 0)\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpyv_h6p8p.lua:12: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpyv_h6p8p.lua:12: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\t-- s:gmatch'%A' matches all\
    \ ASCII characters\n\t-- (for Unicode, use s:gmatch'%u' to match alphanumeric\
    \ characters).\n\t-- %A is the opposite of %a.\n\t-- The index is used to keep\
    \ track of the current character.\n\t-- %2 indicates the character should be matched\
    \ in odd indices.\n\tlocal count = 0\n\tfor _ in s:gmatch'%A' do\n\t\tcount =\
    \ count + 1\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt5zre2m6.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpt5zre2m6.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):find('[AEIOU]') then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpymravu4u.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpymravu4u.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    -- IMPLEMENT ME\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4py_ikmy.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmp4py_ikmy.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:match('^%u') then\n            n = n + 1\n\
    \        end\n    end\n    return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi66kfftx.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpi66kfftx.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and string.find(s:sub(i, i), \"[AEIOU]\") then\n\t\t\
    \tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp90jb1_u1.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp90jb1_u1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- your code goes here\nend\n\
    count_upper('aAsEdFKJ')\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi0wq87hj.lua:11:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpi0wq87hj.lua:11: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal n = 0\n\tfor i = 1, #s\
    \ do\n\t\tif i % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n\t\t\tn = n +\
    \ 1\n\t\tend\n\tend\n\treturn n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy97n5s8v.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpy97n5s8v.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local cnt = 0\n    local vowels\
    \ = {'A', 'E', 'I', 'O', 'U'}\n    for i = 1, #s do\n        if i % 2 == 0 and\
    \ contains(vowels, s:sub(i, i)) then\n            cnt = cnt + 1\n        end\n\
    \    end\n    return cnt\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpz0wfbuii.lua:7:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpz0wfbuii.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpz0wfbuii.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local sum = 0\n    for i,\
    \ c in ipairs(s) do\n        if i % 2 == 0 and (c == 'A' or c == 'E' or c == 'I'\
    \ or c == 'O' or c == 'U') then\n            sum = sum + 1\n        end\n    end\n\
    \    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw9xa7rai.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpw9xa7rai.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local c = 0\n  for i = 1, #s\
    \ do\n    local si = s:sub(i, i)\n    if i % 2 == 0 and si:find(\"[AEIOU]\") then\n\
    \      c = c + 1\n    end\n  end\n  return c\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl2gycjdt.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpl2gycjdt.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local k,n = 1,0\n  for i=1,#s\
    \ do\n    local c = string.sub(s,i,i)\n    if     k == 0 and string.find(c,\"\
    [AEIOU]\")  then n = n + 1\n    elseif k == 1 and string.find(c,\"[aeiou]\") \
    \ then n = n + 1\n    end\n    k = (k + 1) % 2\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa67s3pz3.lua:19:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpa67s3pz3.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    return 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp67w6i79k.lua:10:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp67w6i79k.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    return s:gsub('(%a)', function(s)\n\
    \        if (s:find('[AEIOU]') and s == s:upper()) then\n            return s\n\
    \        end\n    end):len()\nend\nprint('count_upper(s)', count_upper(s))\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmplvcxms9g.lua:4: attempt to index a nil value (local 's')\n\
    stack traceback:\n\t/tmp/tmplvcxms9g.lua:4: in local 'count_upper'\n\t/tmp/tmplvcxms9g.lua:10:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local uppers = 0\n    for\
    \ i,c in s:gmatch\"()(%a)\" do\n        if (i%2 == 0) and c:match\"%u\" then\n\
    \            uppers = uppers + 1\n        end\n    end\n    return uppers\nend\n\
    print(count_upper(\"HelLO\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "1\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvuq44ijl.lua:19:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpvuq44ijl.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local count = 0\n   for i =\
    \ 1, #s do\n      if i % 2 == 0 and s:sub(i, i):match('[AEIOU]') then\n      \
    \   count = count + 1\n      end\n   end\n   return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5jryhpcf.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp5jryhpcf.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    -- TODO: Write this function!\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0f4cyt85.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmp0f4cyt85.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- your code here\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdl5afni9.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpdl5afni9.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ string.len(s) do\n    local char = string.sub(s, i, i)\n    if i % 2 == 0 and\
    \ (char == 'A' or char == 'E' or char == 'I' or char == 'O' or char == 'U') then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7m5gbgva.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp7m5gbgva.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if i % 2 == 0 and string.find(vowels, string.sub(s, i, i)) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8c5ilr0t.lua:6:\
    \ bad argument #1 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmp8c5ilr0t.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp8c5ilr0t.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ string.len(s) do\n    if i % 2 == 0 and string.find(\"AEIOU\", string.sub(s,\
    \ i, i)) then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx18wpjc6.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpx18wpjc6.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for c in\
    \ s:gmatch(\"[AEIOU]\") do\n    count = count + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnikmnqlt.lua:16:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpnikmnqlt.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,#s\
    \ do\n    if i % 2 == 0 and s:sub(i,i):match('[AEIOU]') then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmee6_b3n.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpmee6_b3n.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and string.find(s, '[AEIOU]', i, true) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7h31473q.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp7h31473q.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif s:sub(i, i):find('^[AEIOU]$') then\n\t\t\tcount = count + 1\n\t\
    \tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt2y4txnr.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpt2y4txnr.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local count = 0\n   for i =\
    \ 1, #s do\n      if i % 2 == 0 and is_vowel(s:sub(i, i)) then\n         count\
    \ = count + 1\n      end\n   end\n   return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8zh3mhuc.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmp8zh3mhuc.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp8zh3mhuc.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if s:sub(i, i):match('^[AEIOU]$') and (i % 2 == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsh8ju30j.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpsh8ju30j.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if (i % 2 == 0) and is_upper(s:sub(i, i)) then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwcaptkl0.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpwcaptkl0.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpwcaptkl0.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and is_vowel(s:sub(i, i)) then\n            n =\
    \ n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx61g0cmn.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpx61g0cmn.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpx61g0cmn.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local n = 0\n   for i = 1,\
    \ #s do\n      if (i % 2 == 0) and s:match('[AEIOU]', i) then\n         n = n\
    \ + 1\n      end\n   end\n   return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq35z0tgc.lua:16:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpq35z0tgc.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i=1,#s\
    \ do\n    if (i % 2 == 0) and is_upper(s:sub(i,i)) then\n      count = count +\
    \ 1\n    end\n  end\n  return count\nend\nassert(count_upper(\"AAaAaA\") == 3)\n\
    assert(count_upper(\"abcd\") == 0)\nassert(count_upper(\"\") == 0)\nassert(count_upper(\"\
    aaaa\") == 0)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpl96frqiu.lua:6: attempt to call a nil value (global 'is_upper')\n\
    stack traceback:\n\t/tmp/tmpl96frqiu.lua:6: in local 'count_upper'\n\t/tmp/tmpl96frqiu.lua:12:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and is_upper(s, i) then\n\t\t\tcount = count + 1\n\t\
    \tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpepomwdlr.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpepomwdlr.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpepomwdlr.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif is_upper(s:sub(i, i)) and is_even(i) then\n\t\t\tcount = count\
    \ + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpamht4vep.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpamht4vep.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpamht4vep.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local count = 0\n   for i =\
    \ 1, #s do\n      if i % 2 == 0 and is_upper(s:sub(i, i)) then\n         count\
    \ = count + 1\n      end\n   end\n   return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp45umj5y_.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmp45umj5y_.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp45umj5y_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i=1,string.len(s)\
    \ do\n    local c = string.sub(s, i, i)\n    if i % 2 == 0 and string.find(\"\
    AEIOU\", c) then\n      count = count + 1\n    end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiud4cn5r.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpiud4cn5r.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:sub(i, i):find \"[AEIOU]\" then\n       \
    \     n = n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxe3p0ehh.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpxe3p0ehh.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz5bfzq8l.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpz5bfzq8l.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local res = 0\n    for i =\
    \ 1, #s do\n        if s:byte(i) < 97 then\n            res = res + 1\n      \
    \  end\n    end\n    return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9u4kfxy0.lua:16:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmp9u4kfxy0.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    -- count the number of uppercase\
    \ vowels in even indices.\n    local count = 0\n    local vowels = {a = true,\
    \ e = true, i = true, o = true, u = true}\n    for i, ch in ipairs(s) do\n   \
    \     if vowels[ch:lower()] and i % 2 == 0 then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpedo2hoab.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpedo2hoab.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local vowels = {\"A\", \"\
    E\", \"I\", \"O\", \"U\"}\n    local n = 0\n    for i = 1, #s do\n        local\
    \ ch = s:sub(i, i)\n        if i % 2 == 0 and ch:match(\"[AEIOU]\") then\n   \
    \         n = n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6f5lpr0.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpe6f5lpr0.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- ...\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplsn9tvkq.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmplsn9tvkq.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local vowel = {['A'] = true,\
    \ ['E'] = true, ['I'] = true, ['O'] = true, ['U'] = true}\n    local count = 0\n\
    \    for i = 1, #s do\n        if i % 2 == 0 and vowel[s:sub(i, i)] then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend\nprint(count_upper('I\
    \ Love Lua!'))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "0\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0xui9naj.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp0xui9naj.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return s:gsub(\"[AEIOUY]\",\
    \ function(c)\n    return (c:byte() - 64) % 2 == 0 and \"!\" or \"\"\n  end):len()\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbtne3nil.lua:12:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpbtne3nil.lua:12: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local n = 0\n  for i = 1, #s\
    \ do\n    if (i % 2 == 0) and is_upper(s, i) then\n      n = n + 1\n    end\n\
    \  end\n  return n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjnrelqjn.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpjnrelqjn.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpjnrelqjn.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local cnt = 0\n  for i = 1,#s\
    \ do\n    if s:sub(i,i):find('[AEIOU]') and i % 2 == 0 then\n      cnt = cnt +\
    \ 1\n    end\n  end\n  return cnt\nend\nassert(count_upper('aaAAbbBb') == 1)\n\
    assert(count_upper('aA') == 1)\nassert(count_upper('Aa') == 1)\nassert(count_upper('a')\
    \ == 0)\nassert(count_upper('A') == 1)\nassert(count_upper('B') == 0)\nassert(count_upper('Bb')\
    \ == 0)\nassert(count_upper('AB') == 1)\nassert(count_upper('BA') == 0)\nassert(count_upper('aB')\
    \ == 0)\nassert(count_upper('Bb') == 0)\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp6pot1s7y.lua:14: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp6pot1s7y.lua:14: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and string.find(\"AEIOU\", s:sub(i, i), 1,\
    \ true) then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxgakqa9q.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpxgakqa9q.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- ...\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplsn9tvkq.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmplsn9tvkq.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i=1,#s\
    \ do\n    if i%2==0 and (s:sub(i,i)=='A' or s:sub(i,i)=='E' or s:sub(i,i)=='I'\
    \ or s:sub(i,i)=='O' or s:sub(i,i)=='U') then\n      count = count + 1\n    end\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb79pfay9.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpb79pfay9.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local r = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:match('[AEIOU]', i) then\n            r =\
    \ r + 1\n        end\n    end\n    return r\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5yqs5jgm.lua:16:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmp5yqs5jgm.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local i = 0\n  local count =\
    \ 0\n  for letter in string.gmatch(s, \".\") do\n    i = i + 1\n    if (i % 2\
    \ == 0) and (letter == 'A' or letter == 'E' or letter == 'I' or letter == 'O'\
    \ or letter == 'U') then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprh2d1kwj.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmprh2d1kwj.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if (i % 2) == 0 and string.find(s:sub(i, i), '[AEIOU]') then\n  \
    \    count = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmj1bcvzy.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpmj1bcvzy.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    return #string.gsub(s, \"\
    %d+\", \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq3q7f3qr.lua:10:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpq3q7f3qr.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i, c\
    \ in ipairs(s) do\n        if i % 2 == 0 and string.match(c, \"[AEIOU]\") then\n\
    \            n = n + 1\n        end\n    end\n    return n\nend\nassert(count_upper(\"\
    ABCD\") == 1)\nassert(count_upper(\"aeIou\") == 2)\nassert(count_upper(\"aEiOu\"\
    ) == 4)\nassert(count_upper(\"aeiou\") == 0)\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp0874m542.lua:12: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmp0874m542.lua:12: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- your code here\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdl5afni9.lua:10:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpdl5afni9.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):find('[AEIOU]') then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpymravu4u.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpymravu4u.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if is_upper(s, i) and is_even(i) then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeid6n_9r.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpeid6n_9r.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpeid6n_9r.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local num = 0\n    for i =\
    \ 1, #s do\n        if i % 2 == 0 and is_upper(s, i) then\n            num = num\
    \ + 1\n        end\n    end\n    return num\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmped4puznj.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmped4puznj.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmped4puznj.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsezkhdv3.lua:9:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpsezkhdv3.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i=1,#s\
    \ do\n    if s:sub(i,i):match(\"^[AEIOU]$\") and (i%2)==0 then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nassert(count_upper(\"aBcDeFg\"\
    ) == 2)\nassert(count_upper(\"AAcDeFg\") == 2)\nassert(count_upper(\"aBCDeFg\"\
    ) == 3)\nassert(count_upper(\"AABCDeFg\") == 3)\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmppjga49tm.lua:12: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmppjga49tm.lua:12: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    return #s:gsub(\"[AEIOU]\"\
    , \"\"):gsub(\"[aeiou]\", \"\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9c4yuvpm.lua:10:\
    \ expected: 1, actual: 4\nstack traceback:\n\t/tmp/tmp9c4yuvpm.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local n = 0\n  for i = 1, #s\
    \ do\n    if i % 2 == 0 and string.find(\"AEIOU\", s:sub(i, i)) then\n      n\
    \ = n + 1\n    end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3oa1qk_9.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp3oa1qk_9.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local c = 0\n  for i = 1, #s\
    \ do\n    local c = s:sub(i, i)\n    if i % 2 == 0 and c:match(\"[AEIOU]\") then\n\
    \      c = c + 1\n    end\n  end\n  return c\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn0z6if3_.lua:17:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpn0z6if3_.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and is_upper(s:sub(i, i)) then\n         \
    \   count = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqc4db8sa.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmpqc4db8sa.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpqc4db8sa.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for k,\
    \ v in pairs(s) do\n        if k % 2 == 0 and isVowel(v) then\n            count\
    \ = count + 1\n        end\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdock00_s.lua:5:\
    \ bad argument #1 to 'for iterator' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmpdock00_s.lua:5: in local 'candidate'\n\t/tmp/tmpdock00_s.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local n = 0\n   for i = 1,\
    \ #s do\n      if i % 2 == 0 and s:sub(i, i):match(\"^[AEIOU]$\") then\n     \
    \    n = n + 1\n      end\n   end\n   return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkf4ecj07.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpkf4ecj07.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   return count(match(s, \"(%a)([AEIOU])(%a)\"\
    , 2))\nend\nprint(count_upper(\"The FLAG is yellow\")) --> 2\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpv7jn5syk.lua:4: attempt to call a nil value (global 'match')\n\
    stack traceback:\n\t/tmp/tmpv7jn5syk.lua:4: in local 'count_upper'\n\t/tmp/tmpv7jn5syk.lua:6:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return #s:gsub(\"[aeiou]\",\
    \ function(c)\n    if c:byte() >= 65 and c:byte() <= 90 then\n      return c\n\
    \    end\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgs1me65g.lua:14:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpgs1me65g.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  --[[\n  uppercase_vowels = [char\
    \ for char in s if char in \"AEIOU\" and char.isupper()]\n  return len(uppercase_vowels)\n\
    \  --]]\n  local uppers = {}\n  for i = 1, #s do\n    local char = s:sub(i, i)\n\
    \    if char:match(\"^[AEIOU]$\") and char == char:upper() then\n      table.insert(uppers,\
    \ char)\n    end\n  end\n  return #uppers\nend\nassert(count_upper(\"My Name Is\
    \ Amelie\") == 2)\nassert(count_upper(\"BANANA\") == 0)\nassert(count_upper(\"\
    ACADEMIC\") == 2)\nassert(count_upper(\"Coding Python\") == 2)\nassert(count_upper(\"\
    Python is a pretty cool language\") == 3)\nassert(count_upper(\"ThE liNuX cOmmand\
    \ LinE Is aWeSoMe\") == 5)\nassert(count_upper(\"The Quick Brown Fox\") == 2)\n\
    assert(count_upper(\"TAKING A DEEP LOOK AT THE DATA\") == 4)\nassert(count_upper(\"\
    QUICK BROWN FOX JUMPS OVER THE LAZY DOG\") == 9)\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpc4egbc92.lua:18: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpc4egbc92.lua:18: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif tonumber(i) % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n\t\
    \t\tcount = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppoinrcle.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmppoinrcle.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,#s\
    \ do\n    if (i % 2 == 0) and s:sub(i,i):match(\"[AEIOU]\") then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nassert(count_upper(\"Hi there!\"\
    ) == 0)\nassert(count_upper(\"HEY THERE YOU!\") == 5)\nassert(count_upper(\"hello\"\
    ) == 0)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmprj95qj6h.lua:13: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmprj95qj6h.lua:13: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  if s:find(\"[^AEIOU]\") then\n\
    \    return 0\n  end\n  local n = 0\n  for i = 1, #s, 2 do\n    if s:sub(i, i)\
    \ == s:sub(i, i):upper() then\n      n = n + 1\n    end\n  end\n  return n\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_fu76gmx.lua:19:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp_fu76gmx.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsezkhdv3.lua:9:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmpsezkhdv3.lua:9: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if is_upper(s:sub(i, i)) and is_even(i) then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp51nmp2tj.lua:6:\
    \ attempt to call a nil value (global 'is_upper')\nstack traceback:\n\t/tmp/tmp51nmp2tj.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp51nmp2tj.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if s:sub(i, i):match(\"[AEIOU]\") and i % 2 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz6if139p.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpz6if139p.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):match('[AEIOU]') then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppdts9zgd.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmppdts9zgd.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and 'AEIOU' :match(s:sub(i, i)) then\n\t\t\tcount =\
    \ count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpn9cq7i7s.lua:6: ''then'' expected near '':''

    '
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- Variable to hold the sum\
    \ of odd numbers.\n  local sum = 0\n  -- Iterate over the string using `#s`:\n\
    \  for i = 1, #s do\n    -- Modulo operator to know if the index is even.\n  \
    \  -- If true, check if the character is an uppercase vowel.\n    if i % 2 ==\
    \ 0 and is_upper_vowel(s:sub(i, i)) then\n      -- Increment the sum by 1.\n \
    \     sum = sum + 1\n    end\n  end\n  -- Return the result:\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwrft_qhm.lua:10:\
    \ attempt to call a nil value (global 'is_upper_vowel')\nstack traceback:\n\t\
    /tmp/tmpwrft_qhm.lua:10: in local 'candidate'\n\t/tmp/tmpwrft_qhm.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  return s:gsub('%f[aeiouAEIOU]',\
    \ ''):len()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnj5zmfib.lua:10:\
    \ expected: 1, actual: 6\nstack traceback:\n\t/tmp/tmpnj5zmfib.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1,#s do\n        if i % 2 == 0 and s:sub(i,i):find(\"[AEIOU]\") then\n   \
    \         count = count + 1\n        end\n    end\n    return count\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz1ijuk8x.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpz1ijuk8x.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, string.len(s) do\n        if string.match(s, \"[AEIOU]\", i) then\n   \
    \         if i % 2 == 0 then\n                count = count + 1\n            end\n\
    \        end\n    end\n    return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpamkvmclz.lua:18:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpamkvmclz.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and s:sub(i, i):match('[AEIOU]') then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppdts9zgd.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmppdts9zgd.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, string.len(s) do\n        if i % 2 == 0 and is_vowel(string.sub(s, i, i))\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyelzqwzp.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpyelzqwzp.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpyelzqwzp.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if i % 2 == 0 and s:sub(i, i):match(\"[AEIOU]\") then\n     \
    \       n = n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_6hh336f.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp_6hh336f.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  -- Assuming there are 26 possible\
    \ letters in the alphabet.\n  local numbers = {}\n  -- add all initial values\
    \ to the table.\n  for i = 65, 90 do\n    numbers[string.char(i)] = 0\n  end\n\
    \  -- Iterate over all the string and get even indices.\n  for i = 1, string.len(s),\
    \ 2 do\n    local c = string.char(s:byte(i))\n    if numbers[c] then\n      numbers[c]\
    \ = numbers[c] + 1\n    end\n  end\n  return numbers\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa9jyz1i9.lua:23:\
    \ expected: 1, actual: {\n    A=0,\n    B=0,\n    C=1,\n    D=0,\n    E=1,\n \
    \   F=0,\n    G=0,\n    H=0,\n    I=0,\n    J=0,\n    K=0,\n    L=0,\n    M=0,\n\
    \    N=0,\n    O=0,\n    P=0,\n    Q=0,\n    R=0,\n    S=0,\n    T=0,\n    U=0,\n\
    \    V=0,\n    W=0,\n    X=0,\n    Y=0,\n    Z=0\n}\nstack traceback:\n\t/tmp/tmpa9jyz1i9.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local c = 0\n  for i = 1, #s\
    \ do\n    if i % 2 == 0 and is_vowel(s:sub(i, i)) then\n      c = c + 1\n    end\n\
    \  end\n  return c\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpp8h3prg4.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpp8h3prg4.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpp8h3prg4.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if i % 2 == 0 and string.match(s, \"[AEIOU]\", i) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw0p2kuz6.lua:16:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmpw0p2kuz6.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    return count_if(s, function(x)\
    \ return is_vowel(x) and is_upper(x) end)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpva9id_em.lua:4:\
    \ attempt to call a nil value (global 'count_if')\nstack traceback:\n\t/tmp/tmpva9id_em.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpva9id_em.lua:10: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local n = 0\n  for i = 1, #s\
    \ do\n    if i % 2 == 0 and s:sub(i, i):match(\"^[AEIOU]$\") then\n      n = n\
    \ + 1\n    end\n  end\n  return n\nend\nassert(count_upper(\"CAT\") == 0)\nassert(count_upper(\"\
    caT\") == 1)\nassert(count_upper(\"cAt\") == 0)\nassert(count_upper(\"cAT\") ==\
    \ 1)\nassert(count_upper(\"CaT\") == 1)\nassert(count_upper(\"Cat\") == 0)\nassert(count_upper(\"\
    CA\") == 0)\nassert(count_upper(\"cA\") == 1)\nassert(count_upper(\"Ca\") == 0)\n\
    assert(count_upper(\"CAt\") == 1)\nassert(count_upper(\"CAt\") == 1)\nassert(count_upper(\"\
    CATt\") == 1)\nassert(count_upper(\"CATt\") == 1)\nassert(count_upper(\"cATt\"\
    ) == 0)\nassert(count_upper(\"\") == 0)\nassert(count_upper(\"c\") == 0)\nassert(count_upper(\"\
    C\") == 0)\nassert(count_upper(\"CATATUCA\") == 4)\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpwhfnemrs.lua:12: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpwhfnemrs.lua:12: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if (i % 2 == 0) and (s:sub(i, i):find(\"[AEIOU]\") ~= nil)\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgf8giljg.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpgf8giljg.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif i % 2 == 0 and s:sub(i, i):find(\"[AEIOU]\") then\n\t\t\tcount\
    \ = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_11xafz7.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp_11xafz7.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local count = 0\n    for i\
    \ = 1, #s do\n        if s:sub(i, i):match(\"[AEIOU]\") then\n            if i\
    \ % 2 == 0 then\n                count = count + 1\n            end\n        end\n\
    \    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n \
    \   lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzm9w9z99.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpzm9w9z99.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif s:sub(i, i):match('[AEIOU]') then\n\t\t\tif i % 2 == 0 then\n\t\
    \t\t\tcount = count + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp08to280z.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp08to280z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    if s == \"\" then\n      \
    \  return 0\n    elseif string.find(s, '^[aeiouAEIOU]') ~= nil then\n        return\
    \ 1 + count_upper(string.sub(s, 2))\n    else\n        return count_upper(string.sub(s,\
    \ 2))\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7o3dcy3i.lua:16:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmp7o3dcy3i.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n\tlocal count = 0\n\tfor i = 1,\
    \ #s do\n\t\tif (i % 2) == 0 and s:sub(i, i):match(\"^[AEIOU]$\") then\n\t\t\t\
    count = count + 1\n\t\tend\n\tend\n\treturn count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuuoxkrc0.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpuuoxkrc0.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local c = 0\n   for i=1, #s\
    \ do\n      if (i % 2 == 0) and (s:sub(i,i):upper() == s:sub(i,i)) then\n    \
    \     c = c + 1\n      end\n   end\n   return c\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjas2elou.lua:18:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpjas2elou.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n    local n = 0\n    for i = 1,\
    \ #s do\n        if (i % 2) == 0 and s:sub(i, i):find(\"^[AEIOU]$\") then\n  \
    \          n = n + 1\n        end\n    end\n    return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_x2ev1ci.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmp_x2ev1ci.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if i % 2 == 0 and s:sub(i, i):find('[AEIOU]') then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqqxq3wok.lua:16:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpqqxq3wok.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n  local count = 0\n  for i = 1,\
    \ #s do\n    if (i % 2 == 0) and is_upper(s:sub(i, i)) then\n      count = count\
    \ + 1\n    end\n  end\n  return count\nend\nprint(count_upper(\"abcdefg\"))\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_upper\n\
    \    lu.assertEquals(candidate('aBCdEf'), 1)\n    lu.assertEquals(candidate('abcdefg'),\
    \ 0)\n    lu.assertEquals(candidate('dBBE'), 0)\n    lu.assertEquals(candidate('B'),\
    \ 0)\n    lu.assertEquals(candidate('U'), 1)\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('EEEE'), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpg5fltw0m.lua:6: attempt to call a nil value (global 'is_upper')\n\
    stack traceback:\n\t/tmp/tmpg5fltw0m.lua:6: in local 'count_upper'\n\t/tmp/tmpg5fltw0m.lua:12:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   local n = 0\n   for i = 1,\
    \ #s do\n      if i % 2 == 0 and is_vowel(s:sub(i, i)) then\n         n = n +\
    \ 1\n      end\n   end\n   return n\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgupq1y2z.lua:6:\
    \ attempt to call a nil value (global 'is_vowel')\nstack traceback:\n\t/tmp/tmpgupq1y2z.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpgupq1y2z.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821794
- exit_code: 1
  program: "-- Given a string s, count the number of uppercase vowels in even indices.\n\
    -- For example:\nlocal function count_upper(s)\n   return count_matching(s, function(c)\
    \ return c == string.upper(c) end)\nend\nassert(count_upper(\"Hello\") == 2)\n\
    assert(count_upper(\"World\") == 1)\nassert(count_upper(\"Hola\") == 0)\nassert(count_upper(\"\
    H\") == 1)\nassert(count_upper(\"HELLO\") == 5)\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = count_upper\n    lu.assertEquals(candidate('aBCdEf'),\
    \ 1)\n    lu.assertEquals(candidate('abcdefg'), 0)\n    lu.assertEquals(candidate('dBBE'),\
    \ 0)\n    lu.assertEquals(candidate('B'), 0)\n    lu.assertEquals(candidate('U'),\
    \ 1)\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('EEEE'),\
    \ 2)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpzr3ghm89.lua:4: attempt to call a nil value (global 'count_matching')\n\
    stack traceback:\n\t/tmp/tmpzr3ghm89.lua:4: in local 'count_upper'\n\t/tmp/tmpzr3ghm89.lua:6:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659821794

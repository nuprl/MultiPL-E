name: HumanEval_121_solution
language: lua
prompt: "-- Given a non-empty list of integers, return the sum of all of the odd elements\
  \ that are in even positions.\n-- Examples\n-- >>> solution([5, 8, 7, 1]) \n-- 12\n\
  -- >>> solution([3, 3, 3, 3, 3]) \n-- 9\nlocal function solution(lst)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solution\n\
  \    lu.assertEquals(candidate({5, 8, 7, 1}), 12)\n    lu.assertEquals(candidate({3,\
  \ 3, 3, 3, 3}), 9)\n    lu.assertEquals(candidate({30, 13, 24, 321}), 0)\n    lu.assertEquals(candidate({5,\
  \ 9}), 5)\n    lu.assertEquals(candidate({2, 4, 8}), 0)\n    lu.assertEquals(candidate({30,\
  \ 13, 23, 32}), 23)\n    lu.assertEquals(candidate({3, 13, 2, 9}), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local ret = 0\n  for i = 1, #lst do\n    if i % 2 == 0 and lst[i]\
    \ % 2 == 1 then\n      ret = ret + lst[i]\n    end\n  end\n  return ret\nend",
  "  return (function()\n    local _accum_0 = 0\n    local _len_0 = 1\n    for _index_0\
    \ = 1, #lst do\n      local i = lst[_index_0]\n      if _index_0 % 2 == 0 then\n\
    \        _accum_0 = _accum_0 + i\n      end\n      _len_0 = _len_0 + 1\n    end\n\
    \    return _accum_0\n  end)()\nend\nreturn {\n  solution = solution\n}", "  local\
    \ sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", "  return sum(filter(odds,\
    \ evenPositions(lst)))\nend", "  return foldl(\n    function(acc, v, k)\n    \
    \  if k % 2 == 0 and v % 2 == 1 then\n        return acc + v\n      else\n   \
    \     return acc\n      end\n    end,\n    0,\n    lst\n  )\nend", "    local\
    \ sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 1 and i % 2 == 0 then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \   local sum = 0\n    for i, v in ipairs(lst) do\n        if (i % 2 == 0) and\
    \ (v % 2 == 1) then\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2\
    \ == 1 and i % 2 == 0 then\n            sum = sum + lst[i]\n        end\n    end\n\
    \    return sum\nend", "  local s = 0\n  for i = 1, #lst, 2 do\n    if (i % 2\
    \ == 0) then\n      s = s + lst[i]\n    end\n  end\n  return s\nend", "  local\
    \ sum = 0\n  for i, value in ipairs(lst) do\n    if ((i % 2) == 0) and ((value\
    \ % 2) ~= 0) then\n      sum = sum + value\n    end\n  end\n  return sum\nend",
  "    local sum = 0\n    for i = 1, #lst do\n        if (i % 2 ~= 0) and (lst[i]\
    \ % 2 == 0) then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "    return (reduce(lst, function(a, b) return a + b end, 0))\nend",
  "    local result = 0\n    for k, v in ipairs(lst) do\n        if (k % 2 == 0) and\
    \ (v % 2 == 1) then\n            result = result + v\n        end\n    end\n \
    \   return result\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n\
    \        if v % 2 == 1 and i % 2 == 0 then\n            sum = sum + v\n      \
    \  end\n    end\n    return sum\nend", "    local sum = 0\n    for i, n in ipairs(lst)\
    \ do\n        if i % 2 == 0 and n % 2 == 1 then\n            sum = sum + n\n \
    \       end\n    end\n    return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst)\
    \ do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "  local result = 0\n  for i = 1, #lst do\n    if i % 2 ==\
    \ 0 and lst[i] % 2 == 1 then\n      result = result + lst[i]\n    end\n  end\n\
    \  return result\nend\nreturn solution", "  local function even_idx(i) return\
    \ (i % 2) == 0 end\n  local function odd_value(x) return (x % 2) == 1 end\n  local\
    \ t = {}\n  for i, v in ipairs(lst) do\n    if even_idx(i) and odd_value(v) then\n\
    \      table.insert(t, v)\n    end\n  end\n  return table.reduce(t, add)\nend",
  "  return 0\nend", "    local sum = 0\n    for k, v in ipairs(lst) do\n        if\
    \ k % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n        end\n   \
    \ end\n    return sum\nend", "  local value = 0\n  for i = 1, #lst do\n    if\
    \ lst[i] % 2 == 1 and i % 2 == 0 then\n      value = value + lst[i]\n    end\n\
    \  end\n  return value\nend", "  return sum(filter(odd, select(even, lst)))\n\
    end", "  -- #1\n  -- local acc = 0\n  -- for i,v in ipairs(lst) do\n  --   if\
    \ i % 2 == 0 and v % 2 == 1 then\n  --     acc = acc + v\n  --   end\n  -- end\n\
    \  -- return acc", "    -- Iterate through the list\n    local sum = 0\n    for\
    \ i,v in ipairs(lst) do\n        -- Check for odd elements in even positions\n\
    \        if i % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n      \
    \  end\n    end\n    return sum\nend", "    local sum = 0\n    for i, x in ipairs(lst)\
    \ do\n        if i % 2 == 0 and x % 2 == 1 then\n            sum = sum + x\n \
    \       end\n    end\n    return sum\nend", "    local sum = 0\n    for i = 1,\
    \ #lst do\n        if i % 2 == 0 and lst[i] % 2 == 1 then\n            sum = sum\
    \ + lst[i]\n        end\n    end\n    return sum\nend", "  local sum = 0\n  for\
    \ i,v in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for i, v in\
    \ ipairs(lst) do\n        if i % 2 == 0 and v % 2 == 1 then\n            sum =\
    \ sum + v\n        end\n    end\n    return sum\nend", "  if lst == nil then\n\
    \    return nil\n  end\n  local result = 0\n  for i, n in ipairs(lst) do\n   \
    \ if n % 2 == 1 and i % 2 == 0 then\n      result = result + n\n    end\n  end\n\
    \  return result\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if\
    \ i % 2 == 0 and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "    if type(lst) ~= \"table\" then\n        return nil\n    end\n\
    \    local ret = 0\n    for idx, val in ipairs(lst) do\n        if (idx % 2 ==\
    \ 0) and (val % 2 == 1) then\n            ret = ret + val\n        end\n    end\n\
    \    return ret\nend", "   local ans = 0\n   for index, val in ipairs(lst) do\n\
    \      if index % 2 == 0 and val % 2 == 1 then\n         ans = ans + val\n   \
    \   end\n   end\n   return ans\nend", "  local res = 0\n  for i, v in ipairs(lst)\
    \ do\n    if v % 2 == 1 and i % 2 == 0 then res = res + v end\n  end\n  return\
    \ res\nend", "    local sum = 0\n    for i = 1, #lst do\n        if i % 2 == 0\
    \ and lst[i] % 2 == 1 then\n            sum = sum + lst[i]\n        end\n    end\n\
    \    return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if\
    \ i % 2 == 0 and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "    if type(lst) ~= \"table\" then return nil end\n    local sum\
    \ = 0\n    for i, el in ipairs(lst) do\n        if type(el) == \"number\" and\
    \ el % 2 == 1 and i % 2 == 0 then sum = sum + el end\n    end\n    return sum\n\
    end", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 1 and i % 2\
    \ == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", " \
    \ local res = 0\n  for k, v in ipairs(lst) do\n    if ((k % 2 == 0) and (v % 2\
    \ ~= 0)) then\n      res = res + v\n    end\n  end\n  return res\nend", "    return\
    \ nil\nend", "  local sum = 0\n  for i = 1, #lst do\n    if (i % 2 == 0) and (lst[i]\
    \ % 2 == 1) then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "    local result = 0\n    for i = 1, #lst do\n        if i % 2 == 0 and lst[i]\
    \ % 2 == 1 then\n            result = result + lst[i]\n        end\n    end\n\
    \    return result\nend", "\treturn __\nend", "  local result = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then\n      result = result +\
    \ lst[i]\n    end\n  end\n  return result\nend", "    local sum = 0\n    for i\
    \ = 1, #lst do\n        if lst[i] % 2 == 1 and i % 2 == 0 then\n            sum\
    \ = sum + lst[i]\n        end\n    end\n    return sum\nend", "    local sum =\
    \ 0\n    for i, val in ipairs(lst) do\n        if math.fmod(i, 2) == 0 and math.fmod(val,\
    \ 2) == 1 then\n            sum = sum + val\n        end\n    end\n    return\
    \ sum\nend", "    local count = 0\n    for index, number in ipairs(lst) do\n \
    \       if (index % 2 ~= 0) and (number % 2 == 0) then\n            count = count\
    \ + number\n        end\n    end\n    return count\nend", "  local sum = 0\n \
    \ for i = 1, #lst do\n    if (lst[i] % 2 ~= 0) and (i % 2 == 0) then\n      sum\
    \ = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for\
    \ i, v in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend\nreturn solution", "  local tot = 0\n\
    \  for k, v in ipairs(lst) do\n    if k % 2 == 0 and v % 2 == 1 then\n      tot\
    \ = tot + v\n    end\n  end\n  return tot\nend", "    local res = 0\n    for i,\
    \ v in ipairs(lst) do\n        if i % 2 == 0 and v % 2 == 1 then\n           \
    \ res = res + v\n        end\n    end\n    return res\nend", "    local sum =\
    \ 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 0 and v % 2 == 1 then\n\
    \            sum = sum + v\n        end\n    end\n    return sum\nend", "\t--\
    \ Create a placeholder for the result.\n\tlocal result = 0\n\t\n\t-- Iterate over\
    \ the list with indices,\n\t-- and add to the result the odd number at even position.\n\
    \tfor i, x in ipairs(lst) do\n\t\tif i % 2 == 0 and x % 2 == 1 then\n\t\t\tresult\
    \ = result + x\n\t\tend\n\tend\n\t\n\t-- Return the result.\n\treturn result\n\
    end", "    local s = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 0 and\
    \ v % 2 == 1 then\n            s = s + v\n        end\n    end\n    return s\n\
    end", "    local res = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 1 and\
    \ i % 2 == 0 then\n            res = res + lst[i]\n        end\n    end\n    return\
    \ res\nend", "    local result = 0\n    for i = 1, #lst do\n        if i % 2 ==\
    \ 0 and lst[i] % 2 == 1 then\n            result = result + lst[i]\n        end\n\
    \    end\n    return result\nend", "    local sum = 0\n    for i = 1, #lst do\n\
    \        if lst[i] % 2 == 1 and i % 2 == 0 then\n            sum = sum + lst[i]\n\
    \        end\n    end\n    return sum\nend", "  local sum = 0\n  for k, v in ipairs(lst)\
    \ do\n    if (k % 2 == 0) and (v % 2 == 1) then\n      sum = sum + v\n    end\n\
    \  end\n  return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n \
    \   if (i % 2 == 0) and (v % 2 == 1) then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2\
    \ == 1 and i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0\
    \ and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "  local result = 0\n  for i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1\
    \ then\n      result = result + lst[i]\n    end\n  end\n  return result\nend",
  "  return sum(filter(function(n) return n % 2 == 1 end, filter(is_even, lst)))\n\
    end", "    local sum = 0\n    for i, x in ipairs(lst) do\n        if i % 2 ==\
    \ 0 and x % 2 == 1 then\n            sum = sum + x\n        end\n    end\n   \
    \ return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i %\
    \ 2 == 0 and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return sum\n\
    end", "  local sum = 0\n  for i,v in ipairs(lst) do\n    if (i % 2 == 0) and (v\
    \ % 2 == 1) then sum = sum + v end\n  end\n  return sum\nend", "  local sum =\
    \ 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n   \
    \   sum = sum + v\n    end\n  end\n  return sum\nend", "   local sum = 0\n   for\
    \ i, v in ipairs(lst) do\n      if (i % 2 == 0) and (v % 2 == 1) then\n      \
    \   sum = sum + v\n      end\n   end\n   return sum\nend", "  local odd_sum =\
    \ 0\n  for i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then\n      odd_sum\
    \ = odd_sum + lst[i]\n    end\n  end\n  return odd_sum\nend", "    local sum =\
    \ 0\n    for idx, val in ipairs(lst) do\n        if (val % 2 ~= 0) and (idx %\
    \ 2 == 0) then\n            sum = sum + val\n        end\n    end\n    return\
    \ sum\nend", "  local res = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 1 and\
    \ i % 2 == 0 then\n      res = res + lst[i]\n    end\n  end\n  return res\nend",
  "    local sum = 0\n    for i,v in ipairs(lst) do\n        if i % 2 == 0 and v %\
    \ 2 == 1 then\n            sum = sum + v\n        end\n    end\n    return sum\n\
    end", "    local sum = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 1 and\
    \ i % 2 == 0 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "    local result = 0\n    for i = 1, #lst do\n        if lst[i]\
    \ % 2 == 1 and i % 2 == 0 then\n            result = result + lst[i]\n       \
    \ end\n    end\n    return result\nend", "  local r = 0\n  for i,v in ipairs(lst)\
    \ do\n    if (i % 2 == 0) and (v % 2 == 1) then\n      r = r + v\n    end\n  end\n\
    \  return r\nend", "    local sum = 0\n    for k, v in ipairs(lst) do\n      \
    \  if k % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "  return sum(filter(lst, isOdd, isEven))\nend",
  "  local count = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0 and v % 2 ==\
    \ 1 then count = count + v end\n  end\n  return count\nend", '    local result
    = 0', "    -- set up initial conditions\n    local sum = 0\n    local index =\
    \ 0\n    -- loop through lst\n    for i, v in ipairs(lst) do\n        -- if this\
    \ is an even index\n        if (index % 2 == 0) then\n            -- and v is\
    \ odd\n            if (v % 2 == 1) then\n                -- add it to the sum\n\
    \                sum = sum + v\n            end\n        end\n        -- increment\
    \ the index\n        index = index + 1\n    end\n    -- return the sum\n    return\
    \ sum\nend", "    sum = 0\n    for k, v in pairs(lst) do\n        if (k % 2 ==\
    \ 0) and (v % 2 ~= 0) then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "  local res = 0\n  for i, v in ipairs(lst) do\n    if\
    \ ((i%2) == 0) and ((v%2) == 1) then\n      res = res + v\n    end\n  end\n  return\
    \ res\nend", "  local accumulator = 0\n  for i = 1, #lst do\n    if i % 2 == 0\
    \ and lst[i] % 2 == 1 then\n      accumulator = accumulator + lst[i]\n    end\n\
    \  end\n  return accumulator\nend", "  local sum = 0\n  for i, v in ipairs(lst)\
    \ do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "\t\n\tlocal res = 0", "  local answer = 0\n  for i,v in\
    \ ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      answer = answer\
    \ + v\n    end\n  end\n  return answer\nend", "  local ans = 0\n  for i,v in ipairs(lst)\
    \ do\n    if (i % 2 == 0) and (v % 2 == 1) then\n      ans = ans + v\n    end\n\
    \  end\n  return ans\nend", "   local sum = 0\n   for i, v in ipairs(lst) do\n\
    \      if i % 2 == 0 and v % 2 == 1 then\n         sum = sum + v\n      end\n\
    \   end\n   return sum\nend", "    local count = 0\n    for i, v in ipairs(lst)\
    \ do\n        if (i % 2 == 0) and (v % 2 == 1) then\n            count = count\
    \ + v\n        end\n    end\n    return count\nend", "  local r = 0\n  for i =\
    \ 1, #lst, 2 do\n    r = r + (lst[i] % 2 == 1 and lst[i] or 0)\n  end\n  return\
    \ r\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0 and\
    \ v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", " \
    \ local sum = 0\n  for i, v in ipairs(lst) do\n    if v % 2 == 1 and i % 2 ==\
    \ 0 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "    return\
    \ sum(filter(function(x) return is_odd(x) end,\n                     filter(function(x)\
    \ return is_even(x) end,\n                          index(lst))))\nend", "   \
    \ if #lst == 0 then return 0 end\n    local sum = 0\n    for k, v in ipairs(lst)\
    \ do\n        if k % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n \
    \       end\n    end\n    return sum\nend", "    sum = 0\n    i = 1\n    while\
    \ i <= #lst do\n        if lst[i] % 2 == 1 and i % 2 == 0 then\n            sum\
    \ = sum + lst[i]\n        end\n        i = i + 1\n    end\n    return sum\nend",
  "  local sum = 0\n  for i, v in ipairs(lst) do\n    if (i % 2 == 0) and (v % 2 ==\
    \ 1) then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  -- TODO:\
    \ implement solution\nend", "    return sum(map(function(e, k) return (k % 2 ==\
    \ 0 and e % 2 == 1) and e or 0 end, lst))\nend", "  local sum = 0\n  for i = 1,\
    \ #lst do\n    if (i % 2 == 0) and (lst[i] % 2 == 1) then\n      sum = sum + lst[i]\n\
    \    end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #lst do\n\
    \    if i % 2 == 0 and lst[i] % 2 == 1 then\n      sum = sum + lst[i]\n    end\n\
    \  end\n  return sum\nend", "  return reduce(function(a, b) return a + b end,\
    \ filter(function(a) return a % 2 == 1 end, filter(function(a, b) return b % 2\
    \ == 0 end, ipairs(lst))))\nend", "    local res = 0\n    for i, v in ipairs(lst)\
    \ do\n        if v % 2 == 1 and i % 2 == 0 then\n            res = res + v\n \
    \       end\n    end\n    return res\nend", "  local sum = 0\n  for i = 1, #lst\
    \ do\n    if i % 2 == 0 and lst[i] % 2 == 1 then sum = sum + lst[i] end\n  end\n\
    \  return sum\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i\
    \ % 2 == 0 and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "\tlocal result = 0\n\tfor i, v in ipairs(lst) do\n\t\tif (i % 2\
    \ == 0) and (v % 2 == 1) then\n\t\t\tresult = result + v\n\t\tend\n\tend\n\treturn\
    \ result\nend", "    local sum = 0\n    for i, n in ipairs(lst) do\n        if\
    \ i % 2 == 0 and n % 2 == 1 then\n            sum = sum + n\n        end\n   \
    \ end\n    return sum\nend", "  return sum(grep(lst, {[2] = true}, function(i)\
    \ return i % 2 ~= 0 end))\nend", "    return nil\nend\nreturn solution", "  --\
    \ <TODO>\nend", "  local x = 0\n  for i,v in ipairs(lst) do\n    if i % 2 == 0\
    \ and v % 2 == 1 then\n      x = x + v\n    end\n  end\n  return x\nend", "  \
    \  local odd = lst[2]\n    for i = 4, #lst, 2 do\n        odd = odd + lst[i]\n\
    \    end\n    return odd\nend", "  local res = 0\n  for i, v in ipairs(lst) do\n\
    \    if v % 2 == 1 and i % 2 == 0 then\n      res = res + v\n    end\n  end\n\
    \  return res\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if v\
    \ % 2 == 1 and i % 2 == 0 then\n      sum = sum + v\n    end\n  end\n  return\
    \ sum\nend", "    return sum_even_odd_positions(lst, true)\nend", "\tlocal sum\
    \ = 0\n\tfor i = 1, #lst do\n\t\tif (i % 2 == 0) and (lst[i] % 2 == 1) then\n\t\
    \t\tsum = sum + lst[i]\n\t\tend\n\tend\n\treturn sum\nend", "    local sum = 0\n\
    \    for i = 1, #lst do\n        if (i % 2 == 0) and (lst[i] % 2 == 1) then\n\
    \            sum = sum + lst[i]\n        end\n    end\n    return sum\nend", " \
    \   local sum = 0\n    for i,v in ipairs(lst) do\n        if (i % 2 == 0) and\
    \ (v % 2 == 1) then\n            sum = sum + v\n        end\n    end\n    return\
    \ sum\nend\nreturn solution", "\t-- Body of your function here\nend", "  local\
    \ sum = 0\n  for i = 1, #lst do\n    if (lst[i] % 2 == 1) and (i % 2 == 0) then\n\
    \      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "    return sum(filter(lst,\
    \ function(x) return x % 2 == 1 end))\nend", "  local sum = 0\n  for i,v in ipairs(lst)\
    \ do\n    if(v % 2 == 1 and i % 2 == 0) then\n      sum = sum + v\n    end\n \
    \ end\n  return sum\nend", '    local result = 0', "  local sum = 0\n  for i,\
    \ val in ipairs(lst) do\n    if i % 2 == 0 and val % 2 == 1 then\n      sum =\
    \ sum + val\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i, v\
    \ in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum = sum +\
    \ v\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for index, value\
    \ in ipairs(lst) do\n    if math.fmod(index, 2) == 0 and math.fmod(value, 2) ==\
    \ 1 then\n      sum = sum + value\n    end\n  end\n  return sum\nend", "  -- body\n\
    \  local res = 0\n  for i, v in ipairs(lst) do\n    if (i % 2 == 0) and (v % 2\
    \ == 1) then\n      res = res + v\n    end\n  end\n  return res\nend", "  local\
    \ sum = 0\n  for i, e in ipairs(lst) do\n    if e % 2 == 1 and i % 2 == 0 then\n\
    \      sum = sum + e\n    end\n  end\n  return sum\nend", "  local sum = 0\n \
    \ for i, v in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum\
    \ = sum + v\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1,\
    \ #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then sum = sum + lst[i] end\n\
    \  end\n  return sum\nend", "  -- Type your solution here\nend", "  local sum\
    \ = 0\n  for i, v in ipairs(lst) do\n    if v % 2 == 1 and i % 2 == 0 then\n \
    \     sum = sum + v\n    end\n  end\n  return sum\nend", "  local sum = 0\n  for\
    \ i, v in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum = sum\
    \ + v\n    end\n  end\n  return sum\nend", "    local new_list = {}\n    for i\
    \ = 1, #lst do\n        if (i % 2 == 0) and (lst[i] % 2 ~= 0) then\n         \
    \   table.insert(new_list, lst[i])\n        end\n    end\n    local result = 0\n\
    \    for i = 1, #new_list do\n        result = result + new_list[i]\n    end\n\
    \    return result\nend", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i]\
    \ % 2 == 1 and i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "    local total = 0\n    for k, v in ipairs(lst) do\n        if\
    \ k % 2 == 0 and v % 2 == 1 then\n            total = total + v\n        end\n\
    \    end\n    return total\nend", "  local sum = 0\n  for i, v in ipairs(lst)\
    \ do\n    if v % 2 == 1 and i % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "\tlocal sum = 0\n\tfor i, v in ipairs(lst) do\n\t\tif i\
    \ % 2 == 0 and v % 2 == 1 then\n\t\t\tsum = sum + v\n\t\tend\n\tend\n\treturn\
    \ sum\nend", "    local res = 0\n    for i, v in ipairs(lst) do\n        if i\
    \ % 2 == 0 and v % 2 == 1 then\n            res = res + v\n        end\n    end\n\
    \    return res\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n  \
    \      if v % 2 == 1 and i % 2 == 0 then\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "    local result = 0\n    for i, v in ipairs(lst)\
    \ do\n        if (i % 2 == 0) and (v % 2 == 1) then\n            result = result\
    \ + v\n        end\n    end\n    return result\nend", "  local sum = 0\n  for\
    \ i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend", "  local res = 0\n  for i = 1,\
    \ #lst do\n    if (i % 2 == 0) and (lst[i] % 2 == 1) then\n      res = res + lst[i]\n\
    \    end\n  end\n  return res\nend", "  return sum(filter(lst, odd, even))\nend",
  "  local result = 0\n  for i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1\
    \ then\n      result = result + lst[i]\n    end\n  end\n  return result\nend",
  "    return accumulate(add, 0, select(even, filter(odd, enumerate(lst))))\nend",
  "    local odd_sum = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 0 and\
    \ v % 2 == 1 then\n            odd_sum = odd_sum + v\n        end\n    end\n \
    \   return odd_sum\nend", "    return table.reduce(lst, function(acc, x, i)\n\
    \        if i % 2 == 0 and x % 2 == 1 then\n            return acc + x\n     \
    \   else\n            return acc\n        end\n    end, 0)\nend", "  local sum\
    \ = 0\n  for k, v in ipairs(lst) do\n    if k % 2 == 0 and v % 2 == 1 then\n \
    \     sum = sum + v\n    end\n  end\n  return sum\nend", "  local res = 0\n  for\
    \ i = 1, #lst do\n    if lst[i] % 2 == 1 and i % 2 == 0 then\n      res = res\
    \ + lst[i]\n    end\n  end\n  return res\nend", "  local sum = 0\n  for i,v in\
    \ ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      sum = sum + v\n\
    \    end\n  end\n  return sum\nend", "    return red(odd, even, 0, lst)\nend",
  "    local sum = 0\n    for i, v in ipairs(lst) do\n        if (i % 2 == 0) and\
    \ (v % 2 == 1) then sum = sum + v end\n    end\n    return sum\nend", "    return\
    \ sum(filter(filter_odd, filter_even_positions(lst)))\nend", "  local sum = 0\n\
    \  for i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then\n      sum =\
    \ sum + lst[i]\n    end\n  end\n  return sum\nend", "    local sum = 0\n    for\
    \ i,v in ipairs(lst) do\n        if i % 2 == 0 and v % 2 == 1 then\n         \
    \   sum = sum + v\n        end\n    end\n    return sum\nend", "  local sum =\
    \ 0\n  for k, v in ipairs(lst) do\n    if k % 2 == 0 and v % 2 == 1 then\n   \
    \   sum = sum + v\n    end\n  end\n  return sum\nend", "\tlocal result = 0\n\t\
    for k, v in ipairs(lst) do\n\t\tif k % 2 == 0 and v % 2 == 1 then\n\t\t\tresult\
    \ = result + v\n\t\tend\n\tend\n\treturn result\nend", "  local sum = 0\n  for\
    \ i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend", "  return sum(filter(snd, filter(odd,\
    \ zip(lst, enumFromTo(1, #lst)))))\nend", "  local even = {}\n  local odd = {}\n\
    \  for i, n in ipairs(lst) do\n    if n % 2 == 0 then even[#even + 1] = n else\
    \ odd[#odd + 1] = n end\n  end\n  return sumOf(even) + sumOf(odd)\nend", "   \
    \ local res = 0\n    for i, v in ipairs(lst) do\n        if i % 2 == 0 and v %\
    \ 2 == 1 then\n            res = res + v\n        end\n    end\n    return res\n\
    end", "    local odd_numbers = {}\n    local i = 1\n    while i <= #lst do\n \
    \       if lst[i] % 2 == 1 then\n            table.insert(odd_numbers, lst[i])\n\
    \        end\n        i = i + 2\n    end\n    return sum(odd_numbers)\nend", " \
    \ local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then\n\
    \      sum = sum + lst[i]\n    end\n  end\n  return sum\nend", "  local sum =\
    \ 0\n  for i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then sum = sum\
    \ + lst[i] end\n  end\n  return sum\nend", "  return sum(select_odd_at_even_positions(lst))\n\
    end", "    local sum = 0\n    for i = 1, #lst do\n        if i % 2 == 0 and lst[i]\
    \ % 2 == 1 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "    local result = 0\n    for i, num in ipairs(lst) do\n       \
    \ if i % 2 == 0 and num % 2 == 1 then\n            result = result + num\n   \
    \     end\n    end\n    return result\nend", "    local sum = 0\n    for k, v\
    \ in ipairs(lst) do\n        if k % 2 == 0 and v % 2 == 1 then\n            sum\
    \ = sum + v\n        end\n    end\n    return sum\nend", "    local res = 0\n\
    \    for i = 1, #lst do\n        if lst[i] % 2 == 1 and i % 2 == 0 then\n    \
    \        res = res + lst[i]\n        end\n    end\n    return res\nend", "  local\
    \ sum = 0\n  for i,v in ipairs(lst) do\n    if (i % 2 == 0) and (v % 2 == 1) then\n\
    \      sum = sum + v\n    end\n  end\n  return sum\nend", '  local sum = 0', " \
    \ local s = 0\n  for i = 1, #lst, 2 do\n    if lst[i] % 2 == 1 then\n      s =\
    \ s + lst[i]\n    end\n  end\n  return s\nend", "    -- Write your code here\n\
    \    local ret = 0\n    for i = 1, #lst do\n        if lst[i] % 2 == 1 and i %\
    \ 2 == 0 then\n            ret = ret + lst[i]\n        end\n    end\n    return\
    \ ret\nend", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0\
    \ and v % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return sum\nend",
  "  local total = 0\n  for i, v in ipairs(lst) do\n    if math.fmod(i, 2) == 0 and\
    \ math.fmod(v, 2) == 1 then\n      total = total + v\n    end\n  end\n  return\
    \ total\nend", "\tlocal res, tmp = 0, 0\n\tfor i, v in ipairs(lst) do\n\t\tif\
    \ v % 2 == 1 and i % 2 == 0 then\n\t\t\tres = res + v\n\t\tend\n\tend\n\treturn\
    \ res\nend", "    -- body\n    local sum = 0\n    for i = 1, #lst do\n       \
    \ if (lst[i] % 2 ~= 0) and (i % 2 == 0) then\n            sum = sum + lst[i]\n\
    \        end\n    end\n    return sum\nend", "    local sum = 0\n    for i, v\
    \ in ipairs(lst) do\n        if (v % 2 == 1) and (i % 2 == 0) then\n         \
    \   sum = sum + v\n        end\n    end\n    return sum\nend", "  local ans =\
    \ 0\n  for i, v in ipairs(lst) do\n    if (v % 2 ~= 0) and (i % 2 == 0) then ans\
    \ = ans + v end\n  end\n  return ans\nend", "\tlocal sum = 0\n\tfor i = 1, #lst\
    \ do\n\t\tif lst[i] % 2 == 1 and i % 2 == 0 then\n\t\t\tsum = sum + lst[i]\n\t\
    \tend\n\tend\n\treturn sum\nend", "  local odds = 0\n  for i,v in ipairs(lst)\
    \ do\n    if i % 2 == 0 and v % 2 == 1 then odds = odds + v end\n  end\n  return\
    \ odds\nend", "  local sum = 0\n  for i = 1, #lst do\n    if (i % 2 == 0) and\
    \ (lst[i] % 2 == 1) then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\n\
    end", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0 and v\
    \ % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  \
    \  local sum = 0\n    for i = 1, #lst do\n        if i % 2 == 0 and lst[i] % 2\
    \ == 1 then\n            sum = sum + lst[i]\n        end\n    end\n    return\
    \ sum\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i\
    \ % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "    -- solution([5, 8, 7, 1])\n    -- (5, 8, 7, 1)\n \
    \   -- (5, 8, 7, 1)\n    -- (5, 8, 7, 1)\n    -- (5, 8, 7, 1)\n    -- (5, 8, 7,\
    \ 1)\n    -- 12\n    return (((lst[2] + lst[4]) + lst[6]) + lst[8]) + lst[10]\n\
    end", "  local sum = 0\n  for i, v in ipairs(lst) do\n    if i % 2 == 0 and v\
    \ % 2 == 1 then\n      sum = sum + v\n    end\n  end\n  return sum\nend", "  local\
    \ sum = 0\n  for i = 1, #lst do\n    if (i % 2 == 0) and (lst[i] % 2 == 1) then\
    \ sum = sum + lst[i] end\n  end\n  return sum\nend", "  local rtn = 0\n  for i,v\
    \ in ipairs(lst) do\n    if i % 2 == 0 and v % 2 == 1 then\n      rtn = rtn +\
    \ v\n    end\n  end\n  return rtn\nend", "  local sum = 0\n  for i, v in ipairs(lst)\
    \ do\n    if v % 2 == 1 and i % 2 == 0 then\n      sum = sum + v\n    end\n  end\n\
    \  return sum\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n    \
    \    if i % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n        end\n\
    \    end\n    return sum\nend", "  local res = 0\n  for i = 1, #lst do\n    if\
    \ i % 2 == 0 and lst[i] % 2 == 1 then\n      res = res + lst[i]\n    end\n  end\n\
    \  return res\nend", "  local sum = 0\n  for i = 1, #lst do\n    if i % 2 == 0\
    \ and lst[i] % 2 == 1 then\n      sum = sum + lst[i]\n    end\n  end\n  return\
    \ sum\nend", "    local sum = 0\n    for i, v in ipairs(lst) do\n        if i\
    \ % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n        end\n    end\n\
    \    return sum\nend", "    local res = 0\n    for i, v in ipairs(lst) do\n  \
    \      if i % 2 == 0 and v % 2 == 1 then\n            res = res + v\n        end\n\
    \    end\n    return res\nend", "    local sum = 0\n    for k, v in ipairs(lst)\
    \ do\n        if k % 2 == 0 and v % 2 == 1 then\n            sum = sum + v\n \
    \       end\n    end\n    return sum\nend", "  local sum = 0\n  for i,v in ipairs(lst)\
    \ do\n    if (i % 2 == 0) and (v % 2 == 1) then sum = sum + v end\n  end\n  return\
    \ sum\nend", "  local sum = 0\n  for i = 1, #lst do\n    if lst[i] % 2 == 1 and\
    \ i % 2 == 0 then\n      sum = sum + lst[i]\n    end\n  end\n  return sum\nend",
  "  local result = 0\n  for k, v in ipairs(lst) do\n    if k % 2 == 0 and v % 2 ==\
    \ 1 then\n      result = result + v\n    end\n  end\n  return result\nend", " \
    \ local res = 0\n  for i, j in ipairs(lst) do\n    if i % 2 == 0 and j % 2 ~=\
    \ 0 then res = res + j end\n  end\n  return res\nend", "  local sum = 0\n  for\
    \ i = 1, #lst do\n    if i % 2 == 0 and lst[i] % 2 == 1 then\n      sum = sum\
    \ + lst[i]\n    end\n  end\n  return sum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

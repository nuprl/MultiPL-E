name: HumanEval_8_sum_product
language: lua
prompt: "-- For a given list of integers, return a tuple consisting of a sum and a\
  \ product of all the integers in a list.\n-- Empty sum should be equal to 0 and\
  \ empty product should be equal to 1.\nlocal function sum_product(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sum_product\n\
  \    lu.assertEquals(candidate({}), {0, 1})\n    lu.assertEquals(candidate({1, 1,\
  \ 1}), {3, 1})\n    lu.assertEquals(candidate({100, 0}), {100, 0})\n    lu.assertEquals(candidate({3,\
  \ 5, 7}), {15, 105})\n    lu.assertEquals(candidate({10}), {10, 10})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local sum = 0\n    local product = 1\n    for _, val in ipairs(numbers)\
    \ do\n        sum = sum + val\n        product = product * val\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for i, number\
    \ in ipairs(numbers) do\n        sum = sum + number\n        product = product\
    \ * number\n    end\n    return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for i, n in ipairs(numbers) do\n    sum = sum + n\n    product\
    \ = product * n\n  end\n  return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _, v in ipairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend\nprint(\"Sum = \" .. sum_product({1,2,3,4}))",
  "   local sum = 0\n   local product = 1\n   for _, number in ipairs(numbers) do\n\
    \      sum = sum + number\n      product = product * number\n   end\n   return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, val\
    \ in ipairs(numbers) do\n        sum = sum + val\n        product = product *\
    \ val\n    end\n    return sum, product\nend\nprint(\"\\n--- Sum product ---\"\
    )\nprint(sum_product({-1, 2, 3, 4}))", "  if #numbers == 0 then\n    return 0,\
    \ 1\n  end", "  if #numbers == 0 then\n    return 0, 1\n  end", "   -- TODO: implement\
    \ me\nend", "    local sum = 0\n    local product = 1\n    for _, num in ipairs(numbers)\
    \ do\n        sum = sum + num\n        product = product * num\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for i, number in\
    \ ipairs(numbers) do\n    sum = sum + number\n    product = product * number\n\
    \  end\n  return sum, product\nend", "  local sum = 0\n  local product = 1\n \
    \ for _, number in ipairs(numbers) do\n    sum = sum + number\n    product = product\
    \ * number\n  end\n  return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n    product\
    \ = product * number\n  end\n  return sum, product\nend", "    local sum = 0\n\
    \    local product = 1\n    for _, v in ipairs(numbers) do\n        sum = sum\
    \ + v\n        product = product * v\n    end\n    return sum, product\nend",
  "    if (#numbers == 0) then\n        return 0, 1\n    end", "    local sum = 0\n\
    \    local product = 1\n    for k, v in pairs(numbers) do\n        sum = sum +\
    \ v\n        product = product * v\n    end\n    return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "\tlocal sum = 0\n\tlocal product = 1\n\t\n\t\
    for i, v in ipairs(numbers) do\n\t\tsum = sum + v\n\t\tproduct = product * v\n\
    \tend\n\t\n\treturn sum, product\nend", "  local sum = 0\n  local product = 1\n\
    \  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product *\
    \ numbers[i]\n  end\n  return sum, product\nend", "   -- your code here\n   local\
    \ s = 0\n   local p = 1\n   for _, v in ipairs(numbers) do\n      s = s + v\n\
    \      p = p * v\n   end\n   return s, p\nend", "  local sum = 0\n  local product\
    \ = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product\
    \ * numbers[i]\n  end\n  return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for i,v in ipairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend", "\tlocal sum = 0\n\tlocal\
    \ product = 1\n\tfor _, n in ipairs(numbers) do\n\t\tsum = sum + n\n\t\tproduct\
    \ = product * n\n\tend\n\treturn sum, product\nend\nassert(sum_product{0, 1, 2,\
    \ 3, 4, 5} == 15, 40320)\nassert(sum_product{} == 0, 1)", "    local sum = 0\n\
    \    local product = 1\n    for _, num in ipairs(numbers) do\n        sum = sum\
    \ + num\n        product = product * num\n    end\n    return sum, product\nend",
  "    -- TODO: Implement me!\n    return sum(numbers), product(numbers)\nend", " \
    \   -- TODO: Add your code here\nend", "    local sum = 0\n    local product =\
    \ 1\n    for _, v in ipairs(numbers) do\n        sum = sum + v\n        product\
    \ = product * v\n    end\n    return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for k, v in pairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for i = 1, #numbers do\n        sum = sum + numbers[i]\n  \
    \      product = product * numbers[i]\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "  local sum = 0\n  local product = 1\n  for i\
    \ = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product * numbers[i]\n\
    \  end\n  return sum, product\nend", "  local sum = 0\n  local product = 1\n \
    \ for _, number in ipairs(numbers) do\n    sum = sum + number\n    product = product\
    \ * number\n  end\n  return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for i = 1, #numbers do\n        sum = sum + numbers[i]\n  \
    \      product = product * numbers[i]\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, number in ipairs(numbers) do\n        sum = sum + number\n        product\
    \ = product * number\n    end\n    return sum, product\nend\nassert(sum_product({})\
    \ == 0, \"empty sum should be equal to 0\")\nassert(sum_product({}) == 1, \"empty\
    \ product should be equal to 1\")\nassert(sum_product({1, 2, 3}) == 6, \"sum should\
    \ be equal to 6\")\nassert(sum_product({1, 2, 3}) == 6, \"product should be equal\
    \ to 6\")", "  local sum = 0\n  local product = 1\n  for i, v in ipairs(numbers)\
    \ do\n    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "\tlocal sum = 0\n\tlocal product = 1\n\tfor i, n in ipairs(numbers) do\n\
    \t\tsum = sum + n\n\t\tproduct = product * n\n\tend\n\treturn sum, product\nend",
  "  local sum = 0\n  local product = 1\n  for _, v in ipairs(numbers) do\n    sum\
    \ = sum + v\n    product = product * v\n  end\n  return sum, product\nend", "\t\
    local s, p = 0, 1\n\tfor _, v in ipairs(numbers) do\n\t\ts = s + v\n\t\tp = p\
    \ * v\n\tend\n\treturn s, p\nend", "  local sum = 0\n  local product = 1\n  for\
    \ _, v in ipairs(numbers) do\n    sum = sum + v\n    product = product * v\n \
    \ end\n  return sum, product\nend", "    local sum = 0\n    local product = 1\n\
    \    for i, number in ipairs(numbers) do\n        sum = sum + number\n       \
    \ product = product * number\n    end\n    return sum, product\nend", "  local\
    \ sum = 0\n  local product = 1\n  for _, num in ipairs(numbers) do\n    sum =\
    \ sum + num\n    product = product * num\n  end\n  return sum, product\nend",
  "  local sum = 0\n  local product = 1\n  for _, num in ipairs(numbers) do\n    sum\
    \ = sum + num\n    product = product * num\n  end\n  return sum, product\nend",
  "  local sum = 0\n  local product = 1\n  for _,v in ipairs(numbers) do\n    sum\
    \ = sum + v\n    product = product * v\n  end\n  return sum, product\nend", " \
    \ local sum = 0\n  local product = 1\n  for i, v in ipairs(numbers) do\n    sum\
    \ = sum + v\n    product = product * v\n  end\n  return sum, product\nend", " \
    \   local s = 0\n    local p = 1\n    for i, n in ipairs(numbers) do\n       \
    \ s = s + n\n        p = p * n\n    end\n    return s, p\nend", "  local sum =\
    \ 0\n  local product = 1\n  for _, v in ipairs(numbers) do\n    sum = sum + v\n\
    \    product = product * v\n  end\n  return sum, product\nend", "    if #numbers\
    \ == 0 then\n        return 0, 1\n    end", "  local sum = 0\n  local product\
    \ = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n    product\
    \ = product * number\n  end\n  return sum, product\nend", "    local sum = 0\n\
    \    local product = 1\n    for i, num in ipairs(numbers) do\n        sum = sum\
    \ + num\n        product = product * num\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for i, x in ipairs(numbers) do\n\
    \        sum = sum + x\n        product = product * x\n    end\n    return sum,\
    \ product\nend", "    local sum = 0\n    local product = 1\n    for _, number\
    \ in ipairs(numbers) do\n        sum = sum + number\n        product = product\
    \ * number\n    end\n    return sum, product\nend", "    -- your code here\n \
    \   local sum = 0\n    local product = 1\n    for _,n in ipairs(numbers) do\n\
    \        sum = sum + n\n        product = product * n\n    end\n    return sum,\
    \ product\nend", "  local sum = 0\n  local product = 1\n  for _, number in ipairs(numbers)\
    \ do\n    sum = sum + number\n    product = product * number\n  end\n  return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for _, num in ipairs(numbers)\
    \ do\n    sum = sum + num\n    product = product * num\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for i = 1, #numbers\
    \ do\n    sum = sum + numbers[i]\n    product = product * numbers[i]\n  end\n\
    \  return sum, product\nend", "  local sum = 0\n  local product = 1\n  for _,\
    \ number in ipairs(numbers) do\n    sum = sum + number\n    product = product\
    \ * number\n  end\n  return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n    product\
    \ = product * number\n  end\n  return sum, product\nend", "  local sum = 0\n \
    \ local product = 1\n  for k, v in pairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product\
    \ = product * n\n  end\n  return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, v in ipairs(numbers) do\n        sum = sum + v\n   \
    \     product = product * v\n    end\n    return sum, product\nend", "    local\
    \ sum = 0\n    local product = 1\n    for i = 1, #numbers do\n        sum = sum\
    \ + numbers[i]\n        product = product * numbers[i]\n    end\n    return sum,\
    \ product\nend", "    local sum = 0\n    local product = 1\n    for _, n in ipairs(numbers)\
    \ do\n        sum = sum + n\n        product = product * n\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for i = 1,\
    \ #numbers do\n        sum = sum + numbers[i]\n        product = product * numbers[i]\n\
    \    end\n    return sum, product\nend", "  local sum = 0\n  local product = 1\n\
    \  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product *\
    \ numbers[i]\n  end\n  return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, v in ipairs(numbers) do\n        sum = sum + v\n   \
    \     product = product * v\n    end\n    return sum, product\nend", "  local\
    \ function reducer(a, b)\n    return {\n      sum = a.sum + b,\n      product\
    \ = a.product * b\n    }\n  end", "    local sum = 0\n    local product = 1\n\
    \    for _, n in ipairs(numbers) do\n        sum = sum + n\n        product =\
    \ product * n\n    end\n    return sum, product\nend", "    if #numbers == 0 then\n\
    \        return 0, 1\n    end", "\treturn sum(numbers), product(numbers)\nend",
  "    local sum = 0\n    local product = 1\n    for _, v in ipairs(numbers) do\n\
    \        sum = sum + v\n        product = product * v\n    end\n    return sum,\
    \ product\nend\nassert(sum_product{1, 2, 3, 4, 5} == 15, 60)\nassert(sum_product{5,\
    \ 5, 5, 5, 5} == 25, 3125)\nassert(sum_product{} == 0, 1)", "    -- Write your\
    \ code here\n    local sum = 0\n    local product = 1\n    for _, v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "\tlocal sum = 0\n\tlocal product = 1\n\tfor _,v in ipairs(numbers)\
    \ do\n\t\tsum = sum + v\n\t\tproduct = product * v\n\tend\n\treturn sum, product\n\
    end", "\treturn (reduce(function(a, b) return a + b end, 0, numbers)), (reduce(function(a,\
    \ b) return a * b end, 1, numbers))\nend", "  local sum = 0\n  local product =\
    \ 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n    product\
    \ = product * number\n  end\n  return sum, product\nend", "  local sum = 0\n \
    \ local product = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n   \
    \ product = product * n\n  end\n  return sum, product\nend", "    local sum =\
    \ 0\n    local product = 1\n    for _, i in ipairs(numbers) do\n        sum =\
    \ sum + i\n        product = product * i\n    end\n    return sum, product\nend\n\
    assert(sum_product{} == 0, 1)\nassert(sum_product{1} == 1, 1)\nassert(sum_product{2,\
    \ 3} == 5, 6)\nassert(sum_product{1, 2, 3, 4, 5} == 15, 120)", "    -- TODO: Implement\n\
    \    local sum, product = 0, 1\n    for _, x in ipairs(numbers) do\n        sum\
    \ = sum + x\n        product = product * x\n    end\n    return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers) do\n\
    \    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "   -- body\n   local sum = 0\n   local product = 1\n  \
    \ for _, n in ipairs(numbers) do\n      sum = sum + n\n      product = product\
    \ * n\n   end\n   return sum, product\nend", "  local product = 1\n  local sum\
    \ = 0\n  for _, i in ipairs(numbers) do\n    product = product * i\n    sum =\
    \ sum + i\n  end\n  return sum, product\nend", "   local sum = 0\n   local product\
    \ = 1\n   for i, n in ipairs(numbers) do\n      sum = sum + n\n      product =\
    \ product * n\n   end\n   return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for k, v in pairs(numbers) do\n        sum = sum + v\n    \
    \    product = product * v\n    end\n    return sum, product\nend", "\tlocal sum\
    \ = 0\n\tlocal product = 1\n\tfor _, n in ipairs(numbers) do\n\t\tsum = sum +\
    \ n\n\t\tproduct = product * n\n\tend\n\treturn sum, product\nend", "    local\
    \ sum = 0\n    local product = 1\n    for _, number in ipairs(numbers) do\n  \
    \      sum = sum + number\n        product = product * number\n    end\n    return\
    \ sum, product\nend", "  if #numbers == 0 then\n    return 0, 1\n  end", "   \
    \ local sum = 0\n    local product = 1\n    for _, v in ipairs(numbers) do\n \
    \       sum = sum + v\n        product = product * v\n    end\n    return sum,\
    \ product\nend", "    if (#numbers < 1) then\n        return 0, 1\n    end", " \
    \ local sum = 0\n  local product = 1\n  for i = 1, #numbers do\n    sum = sum\
    \ + numbers[i]\n    product = product * numbers[i]\n  end\n  return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for k,v in pairs(numbers) do\n\
    \    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "\tlocal sum = 0\n\tlocal product = 1\n\tfor _, number in ipairs(numbers)\
    \ do\n\t\tsum = sum + number\n\t\tproduct = product * number\n\tend\n\treturn\
    \ sum, product\nend", "    local s = 0\n    local p = 1\n    for _, n in ipairs(numbers)\
    \ do\n        s = s + n\n        p = p * n\n    end\n    return s, p\nend", " \
    \ local sum = 0\n  local product = 1\n  for _, v in ipairs(numbers) do\n    sum\
    \ = sum + v\n    product = product * v\n  end\n  return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "  local sum = 0\n  local product = 1\n  for i,\
    \ number in ipairs(numbers) do\n    sum = sum + number\n    product = product\
    \ * number\n  end\n  return sum, product\nend", "    -- Implement this function.\n\
    \    local sum = 0\n    local product = 1\n    for _, i in ipairs(numbers) do\n\
    \        sum = sum + i\n        product = product * i\n    end\n    return sum,\
    \ product\nend", "    local sum = 0\n    local product = 1\n    for _, number\
    \ in ipairs(numbers) do\n        sum = sum + number\n        product = product\
    \ * number\n    end\n    return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _,v in ipairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend", "\tlocal sum = 0\n\tlocal\
    \ product = 1\n\tfor _, n in ipairs(numbers) do\n\t\tsum = sum + n\n\t\tproduct\
    \ = product * n\n\tend\n\treturn sum, product\nend", "\tlocal result = {0, 1}\n\
    \tfor _, num in ipairs(numbers) do\n\t\tresult[1] = result[1] + num\n\t\tresult[2]\
    \ = result[2] * num\n\tend\n\treturn unpack(result)\nend", "  local sum = 0\n\
    \  local product = 1\n  for i, v in ipairs(numbers) do\n    sum = sum + v\n  \
    \  product = product * v\n  end\n  return sum, product\nend", "    if #numbers\
    \ == 0 then\n        return 0, 1\n    end", "    local sum = 0\n    local product\
    \ = 1\n    for i = 1, #numbers do\n        sum = sum + numbers[i]\n        product\
    \ = product * numbers[i]\n    end\n    return sum, product\nend", "  local sum\
    \ = 0\n  local product = 1\n  for _, value in ipairs(numbers) do\n    sum = sum\
    \ + value\n    product = product * value\n  end\n  return sum, product\nend",
  "\tif not numbers then return 0, 1 end\n\tlocal sum, product = 0, 1\n\tfor _, n\
    \ in ipairs(numbers) do\n\t\tsum = sum + n\n\t\tproduct = product * n\n\tend\n\
    \treturn sum, product\nend", "    local sum = 0\n    local product = 1\n    for\
    \ _, v in ipairs(numbers) do\n        sum = sum + v\n        product = product\
    \ * v\n    end\n    return sum, product\nend", "\tif #numbers == 0 then\n\t\t\
    return 0, 1\n\tend", "    -- TODO: Implement this function\n    local sum = 0\n\
    \    local product = 1\n    for _, x in ipairs(numbers) do\n        sum = sum\
    \ + x\n        product = product * x\n    end\n    return sum, product\nend",
  "  local product = 1\n  local sum = 0\n  for _, num in ipairs(numbers) do\n    product\
    \ = product * num\n    sum = sum + num\n  end\n  return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, num in ipairs(numbers) do\n        sum = sum + num\n        product\
    \ = product * num\n    end\n    return sum, product\nend", "  if #numbers == 0\
    \ then\n    return 0, 1\n  end", "  local sum = 0\n  local product = 1\n  for\
    \ _, number in ipairs(numbers) do\n    sum = sum + number\n    product = product\
    \ * number\n  end\n  return sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, v in ipairs(numbers) do\n        sum = sum + v\n   \
    \     product = product * v\n    end\n    return sum, product\nend", "\tlocal\
    \ sum = 0\n\tlocal product = 1\n\t\n\tif #numbers > 0 then\n\t\tfor _, v in ipairs(numbers)\
    \ do\n\t\t\tsum = sum + v\n\t\t\tproduct = product * v\n\t\tend\n\tend\n\t\n\t\
    return sum, product\nend", "    local sum = 0\n    local product = 1\n    for\
    \ _, n in ipairs(numbers) do\n        sum = sum + n\n        product = product\
    \ * n\n    end\n    return sum, product\nend", "  local sum = 0\n  local product\
    \ = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product = product\
    \ * n\n  end\n  return sum, product\nend", "  if #numbers == 0 then\n    return\
    \ 0, 1\n  end", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers)\
    \ do\n    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for k, v in pairs(numbers)\
    \ do\n    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "    local product = 1\n    local sum = 0\n    for _, v in ipairs(numbers)\
    \ do\n        product = product * v\n        sum = sum + v\n    end\n    return\
    \ sum, product\nend", "  if not numbers then return nil end\n  local sum = 0\n\
    \  local product = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n\
    \    product = product * number\n  end\n  return sum, product\nend", "    local\
    \ sum = 0\n    local product = 1\n    for i = 1, #numbers do\n        sum = sum\
    \ + numbers[i]\n        product = product * numbers[i]\n    end\n    return sum,\
    \ product\nend", "    if not numbers or #numbers == 0 then\n        return 0,\
    \ 1\n    end", "\tlocal sum = 0\n\tlocal product = 1\n\tfor _, v in ipairs(numbers)\
    \ do\n\t\tsum = sum + v\n\t\tproduct = product * v\n\tend\n\treturn sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, num in ipairs(numbers) do\n\
    \    sum = sum + num\n    product = product * num\n  end\n  return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, number in ipairs(numbers)\
    \ do\n    sum = sum + number\n    product = product * number\n  end\n  return\
    \ sum, product\nend", "\tlocal sum = 0\n\tlocal product = 1\n\tfor k, v in pairs(numbers)\
    \ do\n\t\tsum = sum + v\n\t\tproduct = product * v\n\tend\n\treturn sum, product\n\
    end", "  local function list_foldl(f, init, list)\n    for _, x in ipairs(list)\
    \ do\n      init = f(init, x)\n    end\n    return init\n  end", "    local sum\
    \ = 0\n    local product = 1\n    for _, n in ipairs(numbers) do\n        sum\
    \ = sum + n\n        product = product * n\n    end\n    return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, v in ipairs(numbers) do\n\
    \    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "    if #numbers == 0 then\n        return 0, 1\n    end", "\tlocal sum\
    \ = 0\n\tlocal product = 1\n\tfor i,n in ipairs(numbers) do\n\t\tsum = sum + n\n\
    \t\tproduct = product * n\n\tend\n\treturn sum, product\nend", "    if #numbers\
    \ == 0 then\n        return 0, 1\n    end", "  local sum = 0\n  local product\
    \ = 1\n  for _, number in ipairs(numbers) do\n    sum = sum + number\n    product\
    \ = product * number\n  end\n  return sum, product\nend", "    local sum = 0\n\
    \    local product = 1\n    for _, n in ipairs(numbers) do\n        sum = sum\
    \ + n\n        product = product * n\n    end\n    return sum, product\nend",
  "    local s = 0\n    local p = 1\n    for _, num in ipairs(numbers) do\n      \
    \  s = s + num\n        p = p * num\n    end\n    return s, p\nend", "\tlocal\
    \ sum = 0\n\tlocal product = 1\n\t\n\tfor _, n in ipairs(numbers) do\n\t\tsum\
    \ = sum + n\n\t\tproduct = product * n\n\tend\n\t\n\treturn sum, product\nend",
  "  local sum = 0\n  local product = 1\n  for _, v in ipairs(numbers) do\n    sum\
    \ = sum + v\n    product = product * v\n  end\n  return sum, product\nend", " \
    \   local sum = 0\n    local product = 1\n    for _, v in ipairs(numbers) do\n\
    \        sum = sum + v\n        product = product * v\n    end\n    return sum,\
    \ product\nend", "    local s = 0\n    local p = 1\n    for _, n in ipairs(numbers)\
    \ do\n        s = s + n\n        p = p * n\n    end\n    return s, p\nend", " \
    \   local sum = 0\n    local product = 1\n    for i, v in ipairs(numbers) do\n\
    \        sum = sum + v\n        product = product * v\n    end\n    return sum,\
    \ product\nend", "    local sum = 0\n    local product = 1\n    for _, value in\
    \ ipairs(numbers) do\n        sum = sum + value\n        product = product * value\n\
    \    end\n    return sum, product\nend", "  local sum = 0\n  local product = 1\n\
    \  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product = product *\
    \ n\n  end\n  return sum, product\nend", "  local sum = 0\n  local product = 1\n\
    \  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product = product *\
    \ n\n  end\n  return sum, product\nend", "    local sum = 0\n    local product\
    \ = 1\n    for _, num in ipairs(numbers) do\n        sum = sum + num\n       \
    \ product = product * num\n    end\n    return sum, product\nend", "    if #numbers\
    \ == 0 then\n        return 0, 1\n    end", "  local sum = 0\n  local product\
    \ = 1\n  for i = 1, #numbers do\n    sum = sum + numbers[i]\n    product = product\
    \ * numbers[i]\n  end\n  return sum, product\nend", "    local result = {sum =\
    \ 0, product = 1}\n    for _,v in ipairs(numbers) do\n        result.sum = result.sum\
    \ + v\n        result.product = result.product * v\n    end\n    return result\n\
    end", "\tlocal sum = 0\n\tlocal product = 1\n\tfor _, n in ipairs(numbers) do\n\
    \t\tsum = sum + n\n\t\tproduct = product * n\n\tend\n\treturn sum, product\nend",
  "\tlocal sum = 0\n\tlocal product = 1\n\tfor _,n in ipairs(numbers) do\n\t\tsum\
    \ = sum + n\n\t\tproduct = product * n\n\tend\n\treturn sum, product\nend", " \
    \ local sum = 0\n  local product = 1\n  for _, num in ipairs(numbers) do\n   \
    \ sum = sum + num\n    product = product * num\n  end\n  return sum, product\n\
    end", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers) do\n\
    \    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "    -- body\n    local sum = 0\n    local product = 1\n    for _, n in\
    \ ipairs(numbers) do\n        sum = sum + n\n        product = product * n\n \
    \   end\n    return sum, product\nend", "    -- Use an anonymous function for\
    \ the product.\n    return accumulate(numbers, 0, function(a, b) return a + b\
    \ end),\n    accumulate(numbers, 1, function(a, b) return a * b end)\nend", " \
    \   local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, num in ipairs(numbers) do\n        sum = sum + num\n        product\
    \ = product * num\n    end\n    return sum, product\nend", "    local sum = 0\n\
    \    local product = 1\n    for i,number in ipairs(numbers) do\n        sum =\
    \ sum + number\n        product = product * number\n    end\n    return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i = 1, #numbers do\n\
    \        sum = sum + numbers[i]\n        product = product * numbers[i]\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for _, v in ipairs(numbers) do\n        sum = sum + v\n        product = product\
    \ * v\n    end\n    return sum, product\nend", "    local sum = 0\n    local product\
    \ = 1\n    for i, v in ipairs(numbers) do\n        sum = sum + v\n        product\
    \ = product * v\n    end\n    return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _, n in ipairs(numbers) do\n    sum = sum + n\n    product\
    \ = product * n\n  end\n  return sum, product\nend", "\tlocal sum = 0\n\tlocal\
    \ product = 1\n\tfor _, v in ipairs(numbers) do\n\t\tsum = sum + v\n\t\tproduct\
    \ = product * v\n\tend\n\treturn sum, product\nend", "    local sum = 0\n    local\
    \ product = 1\n    for i = 1, #numbers do\n        sum = sum + numbers[i]\n  \
    \      product = product * numbers[i]\n    end\n    return sum, product\nend",
  "    local sum = 0\n    local product = 1\n    for i, v in ipairs(numbers) do\n\
    \        sum = sum + v\n        product = product * v\n    end\n    return sum,\
    \ product\nend", "  local sum = 0\n  local product = 1\n  for _, n in ipairs(numbers)\
    \ do\n    sum = sum + n\n    product = product * n\n  end\n  return sum, product\n\
    end", "\tlocal sum = 0\n\tlocal product = 1\n\tfor _, num in ipairs(numbers) do\n\
    \t\tsum = sum + num\n\t\tproduct = product * num\n\tend\n\treturn sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "  return 0, 1\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _,v in ipairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for i, v in ipairs(numbers) do\n    sum = sum + v\n    product\
    \ = product * v\n  end\n  return sum, product\nend", "    local s = 0\n    local\
    \ p = 1\n    for _, n in ipairs(numbers) do\n        s = s + n\n        p = p\
    \ * n\n    end\n    return s, p\nend", "    local sum = 0\n    local product =\
    \ 1\n    for _, v in ipairs(numbers) do\n        sum = sum + v\n        product\
    \ = product * v\n    end\n    return sum, product\nend", "  local sum = 0\n  local\
    \ product = 1\n  for _, value in ipairs(numbers) do\n    sum = sum + value\n \
    \   product = product * value\n  end\n  return sum, product\nend", "    local\
    \ s = 0\n    local p = 1\n    for _,n in ipairs(numbers) do\n        s = s + n\n\
    \        p = p * n\n    end\n    return s, p\nend", "    local sum = 0\n    local\
    \ product = 1\n    for _, n in ipairs(numbers) do\n        sum = sum + n\n   \
    \     product = product * n\n    end\n    return sum, product\nend", "    -- ...\n\
    end", "    -- TODO\nend", "  local product = 1\n  local sum = 0\n  for _, n in\
    \ ipairs(numbers) do\n    product = product * n\n    sum = sum + n\n  end\n  return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for i, num in ipairs(numbers)\
    \ do\n    sum = sum + num\n    product = product * num\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers)\
    \ do\n        sum = sum + number\n        product = product * number\n    end\n\
    \    return sum, product\nend", "    local sum = 0\n    local product = 1\n  \
    \  for i = 1, #numbers do\n        sum = sum + numbers[i]\n        product = product\
    \ * numbers[i]\n    end\n    return sum, product\nend", "    local sum = 0\n \
    \   local product = 1\n    for _, n in ipairs(numbers) do\n        sum = sum +\
    \ n\n        product = product * n\n    end\n    return sum, product\nend", "\t\
    if #numbers < 1 then\n\t\treturn 0, 1\n\tend\n\tlocal total = 0\n\tlocal product\
    \ = 1\n\tfor i = 1, #numbers do\n\t\ttotal = total + numbers[i]\n\t\tproduct =\
    \ product * numbers[i]\n\tend\n\treturn total, product\nend", "    local sum =\
    \ 0\n    local product = 1\n    for _, number in ipairs(numbers) do\n        sum\
    \ = sum + number\n        product = product * number\n    end\n    return sum,\
    \ product\nend", "  local sum = 0\n  local product = 1\n  for _, v in ipairs(numbers)\
    \ do\n    sum = sum + v\n    product = product * v\n  end\n  return sum, product\n\
    end", "    local sum = 0\n    local product = 1\n    for i, num in ipairs(numbers)\
    \ do\n        sum = sum + num\n        product = product * num\n    end\n    return\
    \ sum, product\nend", "    local sum = 0\n    local product = 1\n    for _, num\
    \ in ipairs(numbers) do\n        sum = sum + num\n        product = product *\
    \ num\n    end\n    return sum, product\nend", "    local result = { 0, 1 }\n\
    \    for _, n in ipairs(numbers) do\n        result[1] = result[1] + n\n     \
    \   result[2] = result[2] * n\n    end\n    return unpack(result)\nend", "   \
    \ local sum = 0\n    local product = 1\n    for _, number in ipairs(numbers) do\n\
    \        sum = sum + number\n        product = product * number\n    end\n   \
    \ return sum, product\nend", "  return { sum = numbers:foldl(0, function(a,b)\
    \ return a+b end), product = numbers:foldl(1, function(a,b) return a*b end) }\n\
    end", "    local sum = 0\n    local product = 1\n    for i,v in ipairs(numbers)\
    \ do\n        sum = sum + v\n        product = product * v\n    end\n    return\
    \ sum, product\nend", "  local s = 0\n  local p = 1\n  for _, v in ipairs(numbers)\
    \ do\n    s = s + v\n    p = p * v\n  end\n  return s, p\nend", "    local sum\
    \ = 0\n    local product = 1\n    for _, number in ipairs(numbers) do\n      \
    \  sum = sum + number\n        product = product * number\n    end\n    return\
    \ sum, product\nend", "  local sum = 0\n  local product = 1\n  for _, number in\
    \ ipairs(numbers) do\n    sum = sum + number\n    product = product * number\n\
    \  end\n  return sum, product\nend", "\tlocal sum = 0\n\tlocal product = 1\n\t\
    for _,v in ipairs(numbers) do\n\t\tsum = sum + v\n\t\tproduct = product * v\n\t\
    end\n\treturn sum, product\nend", "    local sum = 0\n    local product = 1\n\
    \    for i = 1, #numbers do\n        sum = sum + numbers[i]\n        product =\
    \ product * numbers[i]\n    end\n    return sum, product\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

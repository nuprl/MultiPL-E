language: lua
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if #l == 0 then\n    return nil\n  end\n  local m = l[1]\n  for i=2,#l do\n\
    \    if l[i] > m then\n      m = l[i]\n    end\n  end\n  return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\
    \tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  assert(type(l) == \"table\", \"table expected as argument\")\n  if #l == 0\
    \ then\n    return\n  end\n  local max = l[1]\n  for i = 2, #l do\n    if l[i]\
    \ > max then\n      max = l[i]\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    return _.reduce(l, math.max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwv6edthm.lua:3:\
    \ attempt to index a nil value (global '_')\nstack traceback:\n\t/tmp/tmpwv6edthm.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpwv6edthm.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if not l then return nil end\n  if #l == 0 then return nil end\n  local max_elem\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] > max_elem then\n      max_elem = l[i]\n\
    \    end\n  end\n  return max_elem\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = nil\n\tfor i,v in ipairs(l) do\n\t\tif not max or v > max then\n\
    \t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max_element = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max_element then\n\
    \t\t\tmax_element = l[i]\n\t\tend\n\tend\n\treturn max_element\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal s = #l\n\tif (s == 0) then\n\t\treturn 0\n\tend\n\tlocal m = l[1]\n\t\
    for i = 2, s do\n\t\tif (l[i] > m) then\n\t\t\tm = l[i]\n\t\tend\n\tend\n\treturn\
    \ m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = nil\n    for i,v in ipairs(l) do\n        if not m or v > m then\n\
    \            m = v\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = l[1]\n    for _, v in ipairs(l) do\n        if v > m then\n   \
    \         m = v\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = l[1]\n    for _, v in ipairs(l) do\n        if v > m then\n   \
    \         m = v\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i=2,#l do\n\t\tmax = math.max(max, l[i])\n\tend\n\t\
    return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = nil\n  for k, v in pairs(l) do\n    if max == nil or v > max then\n\
    \      max = v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local n = 0\n  for i, v in ipairs(l) do\n    if v > n then\n      n = v\n \
    \   end\n  end\n  return n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if not l then return nil end\n  local a = nil\n  for i, j in pairs(l) do\n\
    \    if a == nil or j > a then a = j end\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max\n\tfor _,v in ipairs(l) do\n\t\tif not max or v > max then\n\t\t\t\
    max = v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max_ = l[1]\n\tfor _, v in ipairs(l) do\n\t\tif v > max_ then\n\t\t\t\
    max_ = v\n\t\tend\n\tend\n\treturn max_\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = l[1]\n\tfor _,v in ipairs(l) do\n\t\tif m < v then\n\t\t\tm = v\n\t\
    \tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = -math.huge\n  for _, v in ipairs(l) do\n    if v > max then\n \
    \     max = v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = nil\n  for _, v in ipairs(l) do\n    if (not m) or v > m then\n \
    \     m = v\n    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max_v = nil\n    for k, v in pairs(l) do\n        if max_v == nil or\
    \ max_v < v then\n            max_v = v\n        end\n    end\n    return max_v\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = l[1]\n\tfor _, v in ipairs(l) do\n\t\tif v > m then\n\t\t\tm = v\n\
    \t\tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local maxe = nil\n    for _, value in ipairs(l) do\n        if maxe == nil\
    \ or value > maxe then\n            maxe = value\n        end\n    end\n    return\
    \ maxe\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local mx = nil\n    for _, v in ipairs(l) do\n        if mx == nil or v >\
    \ mx then\n            mx = v\n        end\n    end\n    return mx\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i = 2, #l do\n    max = math.max(max, l[i])\n  end\n\
    \  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = 0\n  for _,v in ipairs(l) do\n    if v > max then\n      max =\
    \ v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = #l\n  for i = 1, #l do\n    if l[i] > m then\n      m = l[i]\n  \
    \  end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max_val, max_el = nil, nil\n    for el, val in pairs(l) do\n      \
    \  if max_val == nil or val > max_val then\n            max_val, max_el = val,\
    \ el\n        end\n    end\n    return max_el\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwsp1c5r8.lua:16:\
    \ expected: 124, actual: 9\nstack traceback:\n\t/tmp/tmpwsp1c5r8.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = 0\n\tfor _, v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax =\
    \ v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max_n = - math.huge\n\tfor _, n in ipairs(l) do\n\t\tif n > max_n then\n\
    \t\t\tmax_n = n\n\t\tend\n\tend\n\treturn max_n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor _, val in ipairs(l) do\n\t\tif val > max then\n\t\t\t\
    max = val\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if #l == 0 then return nil end\n  local max = l[1]\n  for i=2,#l do\n    if\
    \ l[i] > max then max = l[i] end\n  end\n  return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max_elem = nil\n  for i,elem in ipairs(l) do\n    if max_elem == nil\
    \ or elem > max_elem then\n      max_elem = elem\n    end\n  end\n  return max_elem\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = nil\n\tfor k, v in pairs(l) do\n\t\tif not max or (v > max) then\n\
    \t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    return foldl(math.max, l[1], rest(l))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp424jg9bi.lua:3:\
    \ attempt to call a nil value (global 'rest')\nstack traceback:\n\t/tmp/tmp424jg9bi.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmp424jg9bi.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for _, v in ipairs(l) do\n    if v > max then\n      max\
    \ = v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = nil\n    for _,e in ipairs(l) do\n        if not m or e > m then\n\
    \            m = e\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max_element = l[1]\n    for i = 2, #l do\n        max_element = math.max(max_element,\
    \ l[i])\n    end\n    return max_element\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = 0\n    for i = 1,#l do\n        max = math.max(max, l[i])\n \
    \   end\n    return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \treturn (function(x, y) return x > y end)(unpack(l))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphzphgrem.lua:3:\
    \ attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmphzphgrem.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmphzphgrem.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local n = -math.huge\n  for i,v in ipairs(l) do\n    if v > n then n = v end\n\
    \  end\n  return n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = nil\n  for i,v in ipairs(l) do\n    if not m or v > m then\n    \
    \  m = v\n    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \treturn max(unpack(l))\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprcxmssm4.lua:3:\
    \ attempt to call a nil value (global 'unpack')\nstack traceback:\n\t/tmp/tmprcxmssm4.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmprcxmssm4.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i=2,#l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = math.mininteger\n    for _, v in ipairs(l) do\n        if v > m\
    \ then\n            m = v\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if (not l) or (#l == 0) then\n    return nil\n  end\n  local max = l[1]\n \
    \ for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n    end\n  end\n\
    \  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local n = #l\n    local v = l[1]\n    for i = 2, n do\n        if l[i] >\
    \ v then\n            v = l[i]\n        end\n    end\n    return v\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max\n\tfor i, v in ipairs(l) do\n\t\tif max == nil or v > max then\n\t\
    \t\tmax = v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = l[1]\n    for _, i in ipairs(l) do\n        if i > m then\n   \
    \         m = i\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tif #l < 1 then return nil end\n\tlocal idx = 1\n\tfor i = 2, #l do\n\t\tif l[i]\
    \ > l[idx] then\n\t\t\tidx = i\n\t\tend\n\tend\n\treturn l[idx]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = nil\n    for i, el in ipairs(l) do\n        if m == nil or el >\
    \ m then\n            m = el\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = nil\n  for i,v in ipairs(l) do\n    if max == nil or max < v then\n\
    \      max = v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i = 2, #l do\n    if l[i] > m then\n      m = l[i]\n\
    \    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal v = nil\n\tfor _,val in ipairs(l) do\n\t\tif v==nil or val>v then\n\t\t\
    \tv = val\n\t\tend\n\tend\n\treturn v\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = nil\n  for _, v in ipairs(l) do\n    if m == nil or v > m then\n\
    \      m = v\n    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max_value = l[1]\n    for i=2,#l do\n        if l[i] > max_value then\n\
    \            max_value = l[i]\n        end\n    end\n    return max_value\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local mx = l[1]\n    for i = 2, #l do\n        mx = math.max(mx, l[i])\n\
    \    end\n    return mx\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max_val = l[1]\n\tfor i=2,#l do\n\t\tif l[i] > max_val then\n\t\t\tmax_val\
    \ = l[i]\n\t\tend\n\tend\n\treturn max_val\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if #l == 0 then\n    return nil\n  end\n  local max = l[1]\n  for i=2,#l do\n\
    \    if l[i] > max then\n      max = l[i]\n    end\n  end\n  return max\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal res = nil\n\tlocal i = 1\n\twhile l[i] do\n\t\tif res == nil or l[i] >\
    \ res then\n\t\t\tres = l[i]\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max_element = l[1]\n\tfor _, element in ipairs(l) do\n\t\tif element >\
    \ max_element then\n\t\t\tmax_element = element\n\t\tend\n\tend\n\treturn max_element\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i=2,#l do\n    m = math.max(m, l[i])\n  end\n  return\
    \ m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i=2,#l do\n    m = math.max(m, l[i])\n  end\n  return\
    \ m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    assert(is_vector(l))\n    local m = l[1]\n    for i=2,#l do\n        if l[i]\
    \ > m then\n            m = l[i]\n        end\n    end\n    return m\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5vkbfoww.lua:3:\
    \ attempt to call a nil value (global 'is_vector')\nstack traceback:\n\t/tmp/tmp5vkbfoww.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmp5vkbfoww.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  return table.reduce(l, function(a, b) return math.max(a, b) end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeiyjcbww.lua:3:\
    \ attempt to call a nil value (field 'reduce')\nstack traceback:\n\t/tmp/tmpeiyjcbww.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpeiyjcbww.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \treturn l[#l]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmg04_v9s.lua:10:\
    \ expected: 124, actual: -10\nstack traceback:\n\t/tmp/tmpmg04_v9s.lua:10: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max_v = l[1]\n    for i = 2, #l do\n        if l[i] > max_v then\n\
    \            max_v = l[i]\n        end\n    end\n    return max_v\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = -math.huge\n\tfor _,v in ipairs(l) do\n\t\tif v > m then\n\t\t\tm\
    \ = v\n\t\tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal a = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > a then\n\t\t\ta = l[i]\n\t\
    \tend\n\tend\n\treturn a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if not is_list(l) then\n        return nil\n    end\n    local max = l[1]\n\
    \    for i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n  \
    \      end\n    end\n    return max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfdalgn3y.lua:3:\
    \ attempt to call a nil value (global 'is_list')\nstack traceback:\n\t/tmp/tmpfdalgn3y.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpfdalgn3y.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max_i = 1\n  local max_v = l[max_i]\n  for i = 2, #l do\n    if l[i]\
    \ > max_v then\n      max_i = i\n      max_v = l[max_i]\n    end\n  end\n  return\
    \ max_i, max_v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq5k6px03.lua:18:\
    \ expected: 124, actual: 9\nstack traceback:\n\t/tmp/tmpq5k6px03.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = nil\n\tfor i, v in ipairs(l) do\n\t\tif m == nil or v > m then\n\t\
    \t\tm = v\n\t\tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local maximum = nil\n  for _, v in ipairs(l) do\n    if maximum == nil or v\
    \ > maximum then\n      maximum = v\n    end\n  end\n  return maximum\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = 0\n  for k,v in pairs(l) do\n    if v > m then\n      m = v\n   \
    \ end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local s = l[1]\n    for _, x in ipairs(l) do\n        if x > s then\n   \
    \         s = x\n        end\n    end\n    return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if #l == 0 then\n    return nil\n  end\n  local max = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] > max then\n      max = l[i]\n    end\n  end\n  return max\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i=2,#l do\n        if l[i] > max then\n       \
    \     max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tif #l == 0 then return nil end\n\tlocal max = l[1]\n\tfor i=2,#l do\n\t\tif\
    \ l[i] > max then max = l[i] end\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i=2,#l do\n        if l[i] > max then\n       \
    \     max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local mx = l[1]\n    for i = 2, #l do\n        if l[i] > mx then\n      \
    \      mx = l[i]\n        end\n    end\n    return mx\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local result = nil\n    for i, e in ipairs(l) do\n        if not result or\
    \ e > result then\n            result = e\n        end\n    end\n    return result\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if #l == 0 then return nil end\n  local max_el = l[1]\n  for i = 2, #l do\n\
    \    if l[i] > max_el then max_el = l[i] end\n  end\n  return max_el\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = 0\n\tfor _, n in ipairs(l) do\n\t\tif n > max then\n\t\t\tmax =\
    \ n\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if not is_table(l) then return nil end\n  local max = nil\n  for _, v in ipairs(l)\
    \ do\n    if max == nil or v > max then max = v end\n  end\n  return max\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3w77t9m5.lua:3:\
    \ attempt to call a nil value (global 'is_table')\nstack traceback:\n\t/tmp/tmp3w77t9m5.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmp3w77t9m5.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local lmax = nil\n    for _, v in ipairs(l) do\n        if lmax == nil or\
    \ v > lmax then\n            lmax = v\n        end\n    end\n    return lmax\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if #l == 0 then\n        return nil\n    end\n    local m = l[1]\n    for\
    \ i=2,#l do\n        if l[i] > m then\n            m = l[i]\n        end\n   \
    \ end\n    return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i = 2, #l do\n    if l[i] > m then\n      m = l[i]\n\
    \    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = nil\n    for _, i in ipairs(l) do\n        if not max or i >\
    \ max then\n            max = i\n        end\n    end\n    return max\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = l[1]\n\tfor i=2,#l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\t\
    end\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = nil\n\tfor _, e in ipairs(l) do\n\t\tif max == nil or e > max then\n\
    \t\t\tmax = e\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  return get_element(l, l.n)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp00rf2_d3.lua:3:\
    \ attempt to call a nil value (global 'get_element')\nstack traceback:\n\t/tmp/tmp00rf2_d3.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmp00rf2_d3.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i=2,#l do\n        if l[i] > max then\n       \
    \     max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = 0\n\tfor _, v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax =\
    \ v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if #l == 0 then\n        return nil\n    end\n    local m = l[1]\n    for\
    \ i = 2, #l do\n        if l[i] > m then\n            m = l[i]\n        end\n\
    \    end\n    return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local largest = l[1]\n    for _, v in ipairs(l) do\n        if largest <\
    \ v then\n            largest = v\n        end\n    end\n    return largest\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if #l == 0 then\n        return nil\n    end\n    local max_elem = l[1]\n\
    \    for i = 2, #l do\n        max_elem = math.max(max_elem, l[i])\n    end\n\
    \    return max_elem\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i=2,#l do m = math.max(m, l[i]) end\n  return m\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    assert(is.non_empty_table(l))\n    local res = -math.huge\n    for _,v in\
    \ ipairs(l) do\n        if is.number(v) and v > res then\n            res = v\n\
    \        end\n    end\n    return res\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpktm77mo5.lua:3:\
    \ attempt to index a nil value (global 'is')\nstack traceback:\n\t/tmp/tmpktm77mo5.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpktm77mo5.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = -math.huge\n\tfor _, v in ipairs(l) do\n\t\tif v > m then\n\t\t\t\
    m = v\n\t\tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\
    \tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = -math.huge\n  for _, v in ipairs(l) do\n    if v > m then\n     \
    \ m = v\n    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local mi = 1\n  local mv = l[mi]\n  for i = 2, #l do\n    if l[i] > mv then\n\
    \      mi = i\n      mv = l[mi]\n    end\n  end\n  return mv, mi\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tif l == nil then\n\t\treturn nil\n\tend\n\tlocal m = l[1]\n\tfor i = 2, #l do\n\
    \t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = 0\n  for i = 1,#l do\n    if l[i] > m then\n      m = l[i]\n    end\n\
    \  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = nil\n    for i,e in ipairs(l) do\n        if not m or e > m then\n\
    \            m = e\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if not l then return nil end\n  local a = l[1]\n  for i = 2, #l do\n    if\
    \ l[i] > a then a = l[i] end\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max\n\tfor _, e in ipairs(l) do\n\t\tif not max or e > max then\n\t\t\t\
    max = e\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if not l then return nil end\n  local maximum = l[1]\n  for i = 2, #l do\n\
    \    maximum = math.max(maximum, l[i])\n  end\n  return maximum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = 0\n  for _, v in ipairs(l) do\n    if v > max then\n      max =\
    \ v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    return foldl(math.max, l[1], l)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq4_xr6jp.lua:3:\
    \ attempt to call a nil value (global 'foldl')\nstack traceback:\n\t/tmp/tmpq4_xr6jp.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpq4_xr6jp.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  assert(#l > 0)\n  local maxval = l[1]\n  for i = 2, #l do\n    if l[i] > maxval\
    \ then\n      maxval = l[i]\n    end\n  end\n  return maxval\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = nil\n    for _, v in ipairs(l) do\n        if max == nil or v\
    \ > max then\n            max = v\n        end\n    end\n    return max\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = 0\n  for k, v in pairs(l) do\n    if v > max then\n      max =\
    \ v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = 0\n    for i = 1, #l do\n        if l[i] > m then\n           \
    \ m = l[i]\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = l[1]\n\tfor i=2,#l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\t\
    end\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = nil\n\tfor _, v in ipairs(l) do\n\t\tif not m or v > m then\n\t\t\t\
    m = v\n\t\tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tassert(#l > 0)\n\tlocal m = -math.huge\n\tfor _,v in ipairs(l) do\n\t\tif v\
    \ > m then m = v end\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = 0\n\tfor _, v in ipairs(l) do\n\t\tif v > m then\n\t\t\tm = v\n\t\t\
    end\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for _, i in ipairs(l) do\n    if i > max then\n      max\
    \ = i\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = nil\n    for i, v in ipairs(l) do\n        if v ~= nil and max\
    \ == nil or v > max then\n            max = v\n        end\n    end\n    return\
    \ max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if #l == 0 then\n        return\n    end\n    local idx = 1\n    for i =\
    \ 2, #l do\n        if l[i] > l[idx] then\n            idx = i\n        end\n\
    \    end\n    return l[idx]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local i, e = 1, nil\n    for _, x in ipairs(l) do\n        if (not e) or\
    \ (x > e) then\n            i, e = _, x\n        end\n    end\n    return i, e\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj9wua8lx.lua:16:\
    \ expected: 124, actual: 9\nstack traceback:\n\t/tmp/tmpj9wua8lx.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821674
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    return reduce(l, function(x, y) return (x > y) and x or y end)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0h0rv304.lua:3:\
    \ attempt to call a nil value (global 'reduce')\nstack traceback:\n\t/tmp/tmp0h0rv304.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmp0h0rv304.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local maximum = l[1]\n    for _, value in ipairs(l) do\n        if value\
    \ > maximum then\n            maximum = value\n        end\n    end\n    return\
    \ maximum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local mx = l[1]\n  for _, v in ipairs(l) do\n    if v > mx then\n      mx =\
    \ v\n    end\n  end\n  return mx\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max\n    for _, v in ipairs(l) do\n        if not max or v > max then\n\
    \            max = v\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = nil\n  for i = 1, #l do\n    if m == nil or l[i] > m then\n     \
    \ m = l[i]\n    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i=2,#l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = nil\n    for _, v in ipairs(l) do\n        if max == nil or v\
    \ > max then\n            max = v\n        end\n    end\n    return max\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    return l[#l]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp56a5o2ze.lua:10:\
    \ expected: 124, actual: -10\nstack traceback:\n\t/tmp/tmp56a5o2ze.lua:10: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local x = l[1]\n  for i = 2, #l do\n    if l[i] > x then\n      x = l[i]\n\
    \    end\n  end\n  return x\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  assert(#l > 0)\n  local m = l[1]\n  for i = 2, #l do\n    if l[i] > m then\n\
    \      m = l[i]\n    end\n  end\n  return m\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i = 2, #l do\n        if l[i] > max then\n    \
    \        max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local mx = nil\n    for _, el in ipairs(l) do\n        if mx == nil or el\
    \ > mx then\n            mx = el\n        end\n    end\n    return mx\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local v = l[1]\n  for i=2,#l do\n    if l[i] > v then\n      v = l[i]\n   \
    \ end\n  end\n  return v\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = -math.huge\n  for _, v in ipairs(l) do\n    if v > max then\n \
    \     max = v\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal ret = nil\n\tfor _,v in ipairs(l) do\n\t\tif ret == nil or v > ret then\n\
    \t\t\tret = v\n\t\tend\n\tend\n\treturn ret\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if #l == 0 then\n        return nil\n    end\n    local max = l[1]\n    for\
    \ i = 2, #l do\n        if l[i] > max then\n            max = l[i]\n        end\n\
    \    end\n    return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = nil\n\tfor _, v in ipairs(l) do\n\t\tif m == nil or v > m then\n\t\
    \t\tm = v\n\t\tend\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = math.mininteger\n\tfor i,v in ipairs(l) do\n\t\tif v > max then\n\
    \t\t\tmax = v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal maximum\n\tfor _,v in ipairs(l) do\n\t\tif not maximum or v > maximum\
    \ then\n\t\t\tmaximum = v\n\t\tend\n\tend\n\treturn maximum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local i = l[1]\n    for _, x in ipairs(l) do\n        if x > i then\n   \
    \         i = x\n        end\n    end\n    return i\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tassert(type(l) == \"table\", \"list must be a table\")\n\tlocal max = l[1]\n\
    \tfor _, v in ipairs(l) do\n\t\tif v > max then\n\t\t\tmax = v\n\t\tend\n\tend\n\
    \treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = nil\n  for i = 1, #l do\n    if max == nil or l[i] > max then\n\
    \      max = l[i]\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i = 2, #l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if #l == 0 then\n    return\n  end\n  local max = l[1]\n  for i = 2, #l do\n\
    \    if l[i] > max then\n      max = l[i]\n    end\n  end\n  return max\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = l[1]\n    for _, v in ipairs(l) do\n        if v > m then\n   \
    \         m = v\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if type(l) ~= \"table\" then return nil end\n  local n = l[1]\n  for i=2,#l\
    \ do\n    if l[i] > n then n = l[i] end\n  end\n  return n\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i=2,#l do\n    if l[i] > m then\n      m = l[i]\n   \
    \ end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if not next(l) then return nil end\n    local max_el = l[1]\n    for _, v\
    \ in ipairs(l) do\n        if v > max_el then max_el = v end\n    end\n    return\
    \ max_el\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = 0\n  for _, v in ipairs(l) do\n    if v > m then\n      m = v\n \
    \   end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max = l[1]\n\tfor i=2,#l do\n\t\tif l[i] > max then\n\t\t\tmax = l[i]\n\
    \t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local cmp_max = function(a, b) return a > b end\n    return max_element_by(l,\
    \ cmp_max)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoqlaz2y_.lua:4:\
    \ attempt to call a nil value (global 'max_element_by')\nstack traceback:\n\t\
    /tmp/tmpoqlaz2y_.lua:4: in local 'candidate'\n\t/tmp/tmpoqlaz2y_.lua:10: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal m = l[1]\n\tfor i=2,#l do\n\t\tif l[i] > m then\n\t\t\tm = l[i]\n\t\t\
    end\n\tend\n\treturn m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local maximum = nil\n    for _, value in ipairs(l) do\n        if maximum\
    \ == nil or value > maximum then\n            maximum = value\n        end\n \
    \   end\n    return maximum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max_val = 0\n    for _, v in ipairs(l) do\n        if v > max_val then\n\
    \            max_val = v\n        end\n    end\n    return max_val\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local len = #l\n    if len == 0 then\n        return nil\n    end\n    local\
    \ max = l[1]\n    for i = 2, len do\n        if l[i] > max then\n            max\
    \ = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local result = l[1]\n    for i = 2, #l do\n        if l[i] > result then\n\
    \            result = l[i]\n        end\n    end\n    return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if not l then return nil end\n    local max = l[1]\n    for i = 2, #l do\n\
    \        if l[i] > max then\n            max = l[i]\n        end\n    end\n  \
    \  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  if not l then return end\n  local max_elem = l[1]\n  for i = 2, #l do\n   \
    \ if l[i] > max_elem then\n      max_elem = l[i]\n    end\n  end\n  return max_elem\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = nil\n    for _, x in ipairs(l) do\n        if not max or x >\
    \ max then\n            max = x\n        end\n    end\n    return max\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i=2,#l do\n    if l[i] > m then\n      m = l[i]\n   \
    \ end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 1
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    return reduce(l, function(a, b) return a > b and a or b end)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsv2s_jp1.lua:3:\
    \ attempt to call a nil value (global 'reduce')\nstack traceback:\n\t/tmp/tmpsv2s_jp1.lua:3:\
    \ in local 'candidate'\n\t/tmp/tmpsv2s_jp1.lua:9: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max_el = l[1]\n  for i=2,#l do\n    if l[i] > max_el then\n      max_el\
    \ = l[i]\n    end\n  end\n  return max_el\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  assert(#l > 0)\n  local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n\
    \      max = l[i]\n    end\n  end\n  return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local m = l[1]\n  for i = 2, #l do\n    if l[i] > m then\n      m = l[i]\n\
    \    end\n  end\n  return m\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max=l[1]\n\tfor i=2,#l do\n\t\tif l[i]>max then\n\t\t\tmax=l[i]\n\t\t\
    end\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local mx = l[1]\n    for i=2,#l do\n        if l[i] > mx then\n         \
    \   mx = l[i]\n        end\n    end\n    return mx\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i=2,#l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \tlocal max\n\tfor _, v in ipairs(l) do\n\t\tif not max or max < v then\n\t\t\t\
    max = v\n\t\tend\n\tend\n\treturn max\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = 0\n    for i = 1, #l do\n        if l[i] > max then\n       \
    \     max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max_v = l[1]\n  for _, v in ipairs(l) do\n    if v > max_v then\n   \
    \   max_v = v\n    end\n  end\n  return max_v\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local m = l[1]\n    for i = 2, #l do\n        if l[i] > m then\n        \
    \    m = l[i]\n        end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    if #l == 0 then return nil end\n    local m = l[1]\n    for i=2,#l do\n \
    \       if l[i] > m then m = l[i] end\n    end\n    return m\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for _,v in ipairs(l) do\n    if v > max then max = v end\n\
    \  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = nil\n    for _,v in ipairs(l) do\n        if max == nil or v\
    \ > max then\n            max = v\n        end\n    end\n    return max\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local res = nil\n    for k, v in pairs(l) do\n        if res == nil or v\
    \ > res then\n            res = v\n        end\n    end\n    return res\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = max_element\n\
    \    lu.assertEquals(candidate({1, 2, 3}), 3)\n    lu.assertEquals(candidate({5,\
    \ 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821674
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \  local max = l[1]\n  for i = 2, #l do\n    if l[i] > max then\n      max = l[i]\n\
    \    end\n  end\n  return max\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = max_element\n    lu.assertEquals(candidate({1, 2, 3}), 3)\n\
    \    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1, -10}), 124)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673
- exit_code: 0
  program: "-- Return maximum element in the list.\nlocal function max_element(l)\n\
    \    local max = l[1]\n    for i=2,#l do\n        if l[i] > max then\n       \
    \     max = l[i]\n        end\n    end\n    return max\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = max_element\n    lu.assertEquals(candidate({1,\
    \ 2, 3}), 3)\n    lu.assertEquals(candidate({5, 3, -5, 2, -3, 3, 9, 0, 124, 1,\
    \ -10}), 124)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659821673

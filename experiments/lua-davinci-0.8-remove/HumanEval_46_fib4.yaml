name: HumanEval_46_fib4
language: lua
prompt: "-- The Fib4 number sequence is a sequence similar to the Fibbonacci sequnece\
  \ that's defined as follows:\n-- fib4(0) -> 0\n-- fib4(1) -> 0\n-- fib4(2) -> 2\n\
  -- fib4(3) -> 0\n-- fib4(n) -> fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4).\n\
  -- Please write a function to efficiently compute the n-th element of the fib4 number\
  \ sequence.  Do not use recursion.\nlocal function fib4(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib4\n\
  \    lu.assertEquals(candidate(5), 4)\n    lu.assertEquals(candidate(8), 28)\n \
  \   lu.assertEquals(candidate(10), 104)\n    lu.assertEquals(candidate(12), 386)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if n == 0 then\n        return 0\n    elseif n == 1 then\n    \
    \    return 0\n    elseif n == 2 then\n        return 2\n    elseif n == 3 then\n\
    \        return 0\n    else\n        local arr = {0, 0, 2, 0}\n        for i =\
    \ 4, n, 1 do\n            arr[1] = arr[2]\n            arr[2] = arr[3]\n     \
    \       arr[3] = arr[4]\n            arr[4] = arr[1] + arr[2] + arr[3] + arr[4]\n\
    \        end\n        return arr[4]\n    end\nend", "  assert(type(n) == \"number\"\
    , \"n must be a number.\")\n  assert(n >= 0, \"n must be non-negative.\")\n  --\
    \ Your code here!\nend", "  -- TODO: IMPLEMENT ME\nend", "  -- TODO: implement\
    \ me\nend", "\tif n < 0 then\n\t\terror(\"fib4 must be called with non-negative\
    \ number\")\n\tend\n\tlocal a, b, c, d = 0, 0, 2, 0\n\tif n == 0 then\n\t\treturn\
    \ a\n\telseif n == 1 then\n\t\treturn b\n\telseif n == 2 then\n\t\treturn c\n\t\
    elseif n == 3 then\n\t\treturn d\n\tend\n\tfor i = 4, n do\n\t\ta, b, c, d = b,\
    \ c, d, a + b + c + d\n\tend\n\treturn d\nend", "\tlocal n1, n2, n3, n4 = 0, 0,\
    \ 2, 0\n\tfor i = 2, n do\n\t\tn1, n2, n3, n4 = n2, n3, n4, n2 + n3 + n4\n\tend\n\
    \treturn n4\nend", end, "\tlocal x, y, z, u = 0, 0, 2, 0\n\tfor i = 2, n do\n\t\
    \tx, y, z, u = y, z, u, x + y + z + u\n\tend\n\treturn u\nend", "    if n == 0\
    \ then\n        return 0\n    elseif n == 1 then\n        return 0\n    elseif\
    \ n == 2 then\n        return 2\n    elseif n == 3 then\n        return 0\n  \
    \  else\n        local a, b, c, d = 0, 0, 2, 0\n        for i = 4, n do\n    \
    \        local tmp = a + b + c + d\n            a = b\n            b = c\n   \
    \         c = d\n            d = tmp\n        end\n        return a + b + c +\
    \ d\n    end\nend", "  if n == 0 then return 0 end\n  if n == 1 then return 0\
    \ end\n  if n == 2 then return 2 end\n  if n == 3 then return 0 end\n  local x\
    \ = 0\n  local y = 0\n  local z = 2\n  local w = 0\n  local i = 4\n  while i <=\
    \ n do\n    local a = x + y + z + w\n    x = y\n    y = z\n    z = w\n    w =\
    \ a\n    i = i + 1\n  end\n  return x + y + z + w\nend", "  -- write code here.\n\
    end", end, "    local fibPrevPrevPrev = 0\n    local fibPrevPrev = 0\n    local\
    \ fibPrev = 0\n    local fib = 0\n    if n == 0 then\n        return 0\n    elseif\
    \ n == 1 then\n        return 0\n    elseif n == 2 then\n        return 2\n  \
    \  elseif n == 3 then\n        return 0\n    else\n        local i = 4\n     \
    \   while i <= n do\n            fibPrevPrevPrev = fibPrevPrev\n            fibPrevPrev\
    \ = fibPrev\n            fibPrev = fib\n            fib = fibPrevPrevPrev + fibPrevPrev\
    \ + fibPrev + fib\n            i = i + 1\n        end\n        return fib\n  \
    \  end\nend", "  -- Write your code here.\nend", "    local a, b, c, d = 0, 0,\
    \ 2, 0\n    if n == 0 then return a end\n    if n == 1 then return b end\n   \
    \ if n == 2 then return c end\n    if n == 3 then return d end\n    for i = 4,\
    \ n do\n        a, b, c, d = b, c, d, a + b + c + d\n    end\n    return d\nend",
  "    local a, b, c, d = 0, 0, 2, 0\n    if n < 4 then\n        return fib4(n)\n\
    \    end\n    for i = 3, n do\n        a, b, c, d = b, c, d, a + b + c + d\n \
    \   end\n    return d\nend", "    local a = 0\n    local b = 0\n    local c =\
    \ 2\n    local d = 0\n    local e = 0\n    for i = 4, n do\n        e = a + b\
    \ + c + d\n        a = b\n        b = c\n        c = d\n        d = e\n    end\n\
    \    return e\nend", "  if n == 0 then return 0 end\n  if n == 1 then return 0\
    \ end\n  if n == 2 then return 2 end\n  if n == 3 then return 0 end\n  local p,\
    \ c, pp, ppp = 0, 2, 0, 0\n  for i = 4, n do\n    ppp, pp, p, c = pp, p, c, c\
    \ + p + pp + ppp\n  end\n  return c\nend\nassert(fib4(0) == 0)\nassert(fib4(1)\
    \ == 0)\nassert(fib4(2) == 2)\nassert(fib4(3) == 0)\nassert(fib4(4) == 4)\nassert(fib4(5)\
    \ == 12)\nassert(fib4(6) == 24)\nassert(fib4(7) == 48)\nassert(fib4(8) == 92)\n\
    assert(fib4(9) == 176)\nassert(fib4(10) == 336)", "    local fib4Cache = { 0,\
    \ 0, 2, 0 }\n    for i = 4, n do\n        fib4Cache[i] = fib4Cache[i-1] + fib4Cache[i-2]\
    \ + fib4Cache[i-3] + fib4Cache[i-4]\n    end\n    return fib4Cache[n]\nend\nassert(fib4(1)\
    \ == 0)\nassert(fib4(2) == 2)\nassert(fib4(3) == 0)\nassert(fib4(4) == 2)\nassert(fib4(5)\
    \ == 4)\nassert(fib4(6) == 6)\nassert(fib4(7) == 10)\nassert(fib4(8) == 16)\n\
    assert(fib4(9) == 26)\nassert(fib4(10) == 42)\nassert(fib4(11) == 68)\nassert(fib4(20)\
    \ == 1240)\nassert(fib4(40) == 12440)\nassert(fib4(50) == 675720)\nassert(fib4(60)\
    \ == 3696720)\nassert(fib4(70) == 20375120)\nassert(fib4(80) == 113401120)\nassert(fib4(90)\
    \ == 627422480)\nassert(fib4(100) == 3480985600)", "    local i1, i2, i3, i4 =\
    \ 0, 0, 2, 0\n    for i = 3, n do\n        i1, i2, i3, i4 = i2, i3, i4, i1 + i2\
    \ + i3 + i4\n    end\n    return i4\nend", "\tlocal f0, f1, f2, f3 = 0, 0, 2,\
    \ 0\n\tlocal i = 3\n\twhile i <= n do\n\t\tf3 = f2 + f1 + f0\n\t\tf0 = f1\n\t\t\
    f1 = f2\n\t\tf2 = f3\n\t\ti = i + 1\n\tend\n\treturn f3\nend", "\t-- TODO implement\
    \ this function\nend", "\tlocal fn = 0\n\tlocal f1 = 0\n\tlocal f2 = 0\n\tlocal\
    \ f3 = 0\n\tlocal f4 = 0\n\tlocal i = 3\n\twhile i <= n do\n\t\tfn = f1 + f2 +\
    \ f3 + f4\n\t\tf1 = f2\n\t\tf2 = f3\n\t\tf3 = f4\n\t\tf4 = fn\n\t\ti = i + 1\n\
    \tend\n\treturn fn\nend", "    local fib_last1 = 0\n    local fib_last2 = 0\n\
    \    local fib_last3 = 2\n    local fib_last4 = 0\n    local i = 2\n    while\
    \ i < n do\n        fib_last4 = fib_last3 + fib_last2 + fib_last1\n        fib_last1\
    \ = fib_last2\n        fib_last2 = fib_last3\n        fib_last3 = fib_last4\n\
    \        i = i + 1\n    end\n    return fib_last4\nend", "\tif n == 0 then return\
    \ 0 end\n\tif n == 1 then return 0 end\n\tif n == 2 then return 2 end\n\tif n\
    \ == 3 then return 0 end\n\t\n\tlocal x1 = 0\n\tlocal x2 = 0\n\tlocal x3 = 2\n\
    \tlocal x4 = 0\n\t\n\tfor i = 4, n do\n\t\tlocal x = x1 + x2 + x3 + x4\n\t\tx1\
    \ = x2\n\t\tx2 = x3\n\t\tx3 = x4\n\t\tx4 = x\n\tend\n\t\n\treturn x1 + x2 + x3\
    \ + x4\nend", "    local a, b, c, d = 0, 0, 2, 0\n    if n < 4 then\n        return\
    \ fibs[n]\n    end\n    while n > 4 do\n        a, b, c, d = b, c, d, a + b +\
    \ c + d\n        n = n - 1\n    end\n    return d\nend", "\tif n <= 3 then\n\t\
    \treturn 0\n\telseif n == 4 then\n\t\treturn 2\n\tend\n\tlocal a, b, c, d = 0,\
    \ 0, 0, 2\n\tfor i = 5, n do\n\t\ta, b, c, d = b, c, d, d + a + b + c\n\tend\n\
    \treturn d\nend", "\tlocal f1, f2, f3, f4 = 0, 0, 2, 0\n\tlocal last = 3\n\twhile\
    \ n > last do\n\t\tf1, f2, f3, f4 = f2, f3, f4, f1 + f2 + f3 + f4\n\t\tlast =\
    \ last + 1\n\tend\n\treturn f4\nend", "    if n == 0 then\n        return 0\n\
    \    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n        return\
    \ 2\n    elseif n == 3 then\n        return 0\n    else\n        local prev_prev_prev_prev\
    \ = 0\n        local prev_prev_prev = 0\n        local prev_prev = 2\n       \
    \ local prev = 0\n        local n_th = 0\n        local i = 4\n        while i\
    \ <= n do\n            n_th = prev_prev_prev_prev + prev_prev_prev + prev_prev\
    \ + prev\n            prev_prev_prev_prev = prev_prev_prev\n            prev_prev_prev\
    \ = prev_prev\n            prev_prev = prev\n            prev = n_th\n       \
    \     i = i + 1\n        end\n        return n_th\n    end\nend", "\tlocal n1,\
    \ n2, n3, n4 = 0, 0, 2, 0", "  -- the first four elements of the fib4 sequence\
    \ are given\n  local n1, n2, n3, n4 = 0, 0, 2, 0\n  -- if the input is less than\
    \ or equal to 3 we can return the corresponding number\n  if n <= 3 then\n   \
    \ return n4\n  end\n  for i = 4, n do\n    -- make sure we are not overflowing\
    \ the number bounds\n    local new_n1 = n1 % (2^31)\n    local new_n2 = n2 % (2^31)\n\
    \    local new_n3 = n3 % (2^31)\n    local new_n4 = n4 % (2^31)\n    -- calculate\
    \ the next four elements in the sequence\n    n1 = new_n2\n    n2 = new_n3\n \
    \   n3 = new_n4\n    n4 = new_n1 + new_n2 + new_n3 + new_n4\n  end\n  return n4\n\
    end", "  if n <= 0 then\n    return 0\n  end\n  local f0 = 0\n  local f1 = 0\n\
    \  local f2 = 2\n  local f3 = 0\n  local fn = 0\n  for i = 4, n do\n    fn = f0\
    \ + f1 + f2 + f3\n    f0 = f1\n    f1 = f2\n    f2 = f3\n    f3 = fn\n  end\n\
    \  return fn\nend", "\tlocal n0, n1, n2, n3 = 0, 0, 2, 0\n\tfor i = 4, n do\n\t\
    \tn0, n1, n2, n3 = n1, n2, n3, n0 + n1 + n2 + n3\n\tend\n\treturn n3\nend", " \
    \   if n == 0 then\n        return 0\n    elseif n == 1 then\n        return 0\n\
    \    elseif n == 2 then\n        return 2\n    elseif n == 3 then\n        return\
    \ 0\n    else\n        local a = 0\n        local b = 0\n        local c = 2\n\
    \        local d = 0\n        for i = 4, n do\n            d = a + b + c\n   \
    \         a = b\n            b = c\n            c = d\n        end\n        return\
    \ d\n    end\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n\
    \        return 0\n    elseif n == 2 then\n        return 2\n    elseif n == 3\
    \ then\n        return 0\n    else\n        local f1 = 0\n        local f2 = 0\n\
    \        local f3 = 2\n        local f4 = 0\n        local fn\n        for i =\
    \ 4, n do\n            fn = f1 + f2 + f3 + f4\n            f1 = f2\n         \
    \   f2 = f3\n            f3 = f4\n            f4 = fn\n        end\n        return\
    \ fn\n    end\nend", "  if n <= 2 then\n    return 2\n  elseif n == 3 then\n \
    \   return 0\n  end\n  local a, b, c, d = 0, 0, 2, 0\n  for i = 4, n do\n    a,\
    \ b, c, d = b, c, d, a + b + c + d\n  end\n  return d\nend", "  if (n == 0) then\n\
    \    return 0\n  elseif (n == 1) then\n    return 0\n  elseif (n == 2) then\n\
    \    return 2\n  elseif (n == 3) then\n    return 0\n  else\n    return fib4(n-1)\
    \ + fib4(n-2) + fib4(n-3) + fib4(n-4)\n  end\nend", "  local a, b, c, d = 0, 0,\
    \ 2, 0\n  local i = 3\n  while i <= n do\n    a, b, c, d = b, c, d, a + b + c\
    \ + d\n    i = i + 1\n  end\n  return d\nend", '  local n_1, n_2, n_3, n_4 = 0,
    0, 2, 0', "  local a, b, c, d = 0, 0, 2, 0\n  for i = 1, n do\n    a, b, c, d\
    \ = b, c, d, a + b + c + d\n  end\n  return a\nend", "  if n < 4 then\n    return\
    \ 2 ^ (n - 1)\n  end\n  local a, b, c, d = 1, 0, 0, 0\n  for i = 4, n do\n   \
    \ a, b, c, d = b, c, d, a + b + c + d\n  end\n  return d\nend", end, "    -- Implemented\
    \ according to the algorithm shown in the solution.\n    local a = 0\n    local\
    \ b = 0\n    local c = 2\n    local d = 0\n    local e = 0\n    local f = 0\n\
    \    local g = 0\n    local h = 0\n    local m = 0\n    local s = 1\n    local\
    \ t = 0\n    local x = 0\n    local z = 0\n    while (n > 0) do\n        if (n\
    \ % 2 == 1) then\n            t = d*a + e*b + f*c + g*d\n            m = d*b +\
    \ e*c + f*d + g*e\n            s = d*c + e*d + f*e + g*f\n            z = d*d\
    \ + e*e + f*f + g*g\n            a = m\n            b = s\n            c = z\n\
    \        end\n        t = d*a + e*b + f*c + g*d\n        m = d*b + e*c + f*d +\
    \ g*e\n        s = d*c + e*d + f*e + g*f\n        z = d*d + e*e + f*f + g*g\n\
    \        d = m\n        e = s\n        f = z\n        g = t\n        n = math.floor(n\
    \ / 2)\n    end\n    return a\nend", "  local n1, n2, n3, n4 = 0, 0, 2, 0\n  if\
    \ n == 0 then return n1 end\n  if n == 1 then return n2 end\n  if n == 2 then\
    \ return n3 end\n  if n == 3 then return n4 end\n  for i = 4, n do\n    n1, n2,\
    \ n3, n4 = n2, n3, n4, n1 + n2 + n3 + n4\n  end\n  return n4\nend", "    local\
    \ a, b, c, d = 0, 0, 2, 0\n    for i = 1, n do\n        a, b, c, d = b, c, d,\
    \ a + b + c + d\n    end\n    return a\nend", "    if n < 0 then\n        return\
    \ 0\n    end\n    if n < 2 then\n        return 0\n    end\n    if n == 2 then\n\
    \        return 2\n    end\n    if n == 3 then\n        return 0\n    end\n  \
    \  local n0 = 0\n    local n1 = 0\n    local n2 = 2\n    local n3 = 0\n    local\
    \ ret = 0\n    for i = 4, n, 1 do\n        ret = n0 + n1 + n2 + n3\n        n0\
    \ = n1\n        n1 = n2\n        n2 = n3\n        n3 = ret\n    end\n    return\
    \ ret\nend", "    -- TODO: Implement\nend", "    if n <= 0 then\n        return\
    \ 0\n    end\n    if n == 1 then\n        return 0\n    end\n    if n == 2 then\n\
    \        return 2\n    end\n    if n == 3 then\n        return 0\n    end\n  \
    \  local a, b, c, d = 0, 0, 2, 0\n    for i = 3, n do\n        a, b, c, d = b,\
    \ c, d, a + b + c + d\n    end\n    return d\nend", "  local function fib4_loop(a,\
    \ b, c, d, i)\n    if i == n then\n      return d\n    else\n      return fib4_loop(b,\
    \ c, d, a + b + c + d, i + 1)\n    end\n  end\n  return fib4_loop(0, 0, 2, 0,\
    \ 3)\nend\nassert(fib4(0) == 0)\nassert(fib4(1) == 0)\nassert(fib4(2) == 2)\n\
    assert(fib4(3) == 0)\nassert(fib4(4) == 2)\nassert(fib4(5) == 6)\nassert(fib4(6)\
    \ == 8)\nassert(fib4(7) == 20)\nassert(fib4(8) == 44)\nassert(fib4(9) == 94)\n\
    assert(fib4(10) == 200)\nassert(fib4(11) == 426)\nassert(fib4(12) == 904)\nassert(fib4(13)\
    \ == 1872)\nassert(fib4(14) == 3816)\nassert(fib4(15) == 7784)\nassert(fib4(16)\
    \ == 15872)\nassert(fib4(17) == 31964)\nassert(fib4(18) == 63620)\nassert(fib4(19)\
    \ == 127208)\nassert(fib4(20) == 253476)", "    local f0, f1, f2, f3 = 0, 0, 2,\
    \ 0\n    for i = 4, n do\n        f0, f1, f2, f3 = f1, f2, f3, f0 + f1 + f2 +\
    \ f3\n    end\n    return f3\nend", "  local function iter(a, b, c, d, x)\n  \
    \  if n == 0 then return a end\n    if n == 1 then return b end\n    if n == 2\
    \ then return c end\n    if n == 3 then return d end\n    return iter(b, c, d,\
    \ a + b + c + d, x - 1)\n  end\n  return iter(0, 0, 2, 0, n)\nend", "    local\
    \ first, second, third, fourth = 0, 0, 2, 0\n    if n == 0 then\n        return\
    \ first\n    elseif n == 1 then\n        return second\n    elseif n == 2 then\n\
    \        return third\n    elseif n == 3 then\n        return fourth\n    end\n\
    \    for i = 4, n do\n        first, second, third, fourth = second, third, fourth,\
    \ first + second + third + fourth\n    end\n    return fourth\nend", "    local\
    \ a, b, c, d = 0, 0, 2, 0\n    for i = 2, n do\n        a, b, c, d = b, c, d,\
    \ b + c + d\n    end\n    return d\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n      \
    \  return 2\n    elseif n == 3 then\n        return 0\n    else\n        local\
    \ f4, f3, f2, f1 = 0, 0, 2, 0\n        for i = 4, n do\n            f4 = f3 +\
    \ f2 + f1 + f4\n            f1 = f2\n            f2 = f3\n            f3 = f4\n\
    \        end\n        return f4\n    end\nend", "  local a, b, c, d = 0, 0, 2,\
    \ 0\n  for i = 3, n do\n    a, b, c, d = b, c, d, (a + b + c + d)\n  end\n  return\
    \ d\nend", "  assert(n >= 0, \"n must be greater than or equal to 0\")\n  local\
    \ prev_prev_prev_prev = 0\n  local prev_prev_prev = 0\n  local prev_prev = 0\n\
    \  local prev = 0\n  local current = 2\n  for _ = 3, n do\n    prev_prev_prev_prev\
    \ = prev_prev_prev\n    prev_prev_prev = prev_prev\n    prev_prev = prev\n   \
    \ prev = current\n    current = prev_prev_prev_prev + prev_prev_prev + prev_prev\
    \ + prev\n  end\n  return current\nend", "    return fib4_2(n)\nend", "   return\
    \ n\nend", "    return 0\nend", "    assert(n >= 0, \"n must be positive\")\n\
    \    local n2, n3, n4, n5, n6 = 0, 0, 2, 0, 0\n    for i = 3, n do\n        n6\
    \ = n2 + n3 + n4 + n5\n        n2, n3, n4, n5 = n3, n4, n5, n6\n    end\n    return\
    \ n6\nend", "    local a, b, c, d = 0, 0, 2, 0\n    for i = 2, n do\n        d\
    \ = a + b + c + d\n        a = b\n        b = c\n        c = d\n    end\n    return\
    \ d\nend", "\tlocal fib1 = 0\n\tlocal fib2 = 0\n\tlocal fib3 = 2\n\tlocal fib4\
    \ = 0\n\tlocal tmp = 0\n\tlocal i = 3\n\twhile i < n do\n\t\ttmp = fib1 + fib2\
    \ + fib3 + fib4\n\t\tfib1 = fib2\n\t\tfib2 = fib3\n\t\tfib3 = fib4\n\t\tfib4 =\
    \ tmp\n\t\ti = i + 1\n\tend\n\treturn fib1 + fib2 + fib3 + fib4\nend", "  local\
    \ fib4 = {0, 0, 2, 0}\n  for i = 4, n do\n    fib4[i] = fib4[i-1] + fib4[i-2]\
    \ + fib4[i-3] + fib4[i-4]\n  end\n  return fib4[n]\nend", "   assert(n > 0)\n\
    \   local fib1, fib2, fib3, fib4 = 0, 0, 2, 0\n   for i = 4, n do\n      fib1,\
    \ fib2, fib3, fib4 = fib2, fib3, fib4, fib1 + fib2 + fib3 + fib4\n   end\n   return\
    \ fib4\nend", "  local f0, f1, f2, f3 = 0, 0, 2, 0\n  if n == 0 then return f0\
    \ end\n  if n == 1 then return f1 end\n  if n == 2 then return f2 end\n  if n\
    \ == 3 then return f3 end\n  local i = 4\n  while i <= n do\n    local f4 = f3\
    \ + f2 + f1 + f0\n    f0 = f1\n    f1 = f2\n    f2 = f3\n    f3 = f4\n    i =\
    \ i + 1\n  end\n  return f3\nend\nprint(fib4(0))\nprint(fib4(1))\nprint(fib4(2))\n\
    print(fib4(3))\nprint(fib4(4))\nprint(fib4(5))\nprint(fib4(6))\nprint(fib4(7))\n\
    print(fib4(8))\nprint(fib4(9))\nprint(fib4(10))\nprint(fib4(11))\nprint(fib4(12))\n\
    print(fib4(13))\nprint(fib4(14))\nprint(fib4(15))\nprint(fib4(16))\nprint(fib4(17))\n\
    print(fib4(18))\nprint(fib4(19))\nprint(fib4(20))\nprint(fib4(21))\nprint(fib4(22))\n\
    print(fib4(23))\nprint(fib4(24))\nprint(fib4(25))\nprint(fib4(26))\nprint(fib4(27))\n\
    print(fib4(28))\nprint(fib4(29))\nprint(fib4(30))\nprint(fib4(31))\nprint(fib4(32))\n\
    print(fib4(33))\nprint(fib4(34))\nprint(fib4(35))\nprint(fib4(36))\nprint(fib4(37))\n\
    print(fib4(38))\nprint(fib4(39))\nprint(fib4(40))\nprint", "  local a = 0\n  local\
    \ b = 0\n  local c = 2\n  local d = 0\n  local i = 3\n  while i <= n do\n    d\
    \ = a + b + c\n    a = b\n    b = c\n    c = d\n    i = i + 1\n  end\n  return\
    \ d\nend", "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n  if\
    \ n == 2 then return 2 end\n  if n == 3 then return 0 end\n  local a = 0\n  local\
    \ b = 0\n  local c = 2\n  local d = 0\n  local i = 4\n  while i <= n do\n    d\
    \ = a + b + c\n    a = b\n    b = c\n    c = d\n    i = i + 1\n  end\n  return\
    \ d\nend\nprint(fib4(5))\nprint(fib4(10))\nprint(fib4(20))", "    local a = 0\n\
    \    local b = 0\n    local c = 2\n    local d = 0\n    for i = 4, n, 1 do\n \
    \       d = a + b + c\n        a = b\n        b = c\n        c = d\n    end\n\
    \    return d\nend", "    if n < 0 then return nil end\n    local f0, f1, f2,\
    \ f3 = 0, 0, 2, 0\n    for i = 3, n do\n        f0, f1, f2, f3 = f1, f2, f3, f0\
    \ + f1 + f2 + f3\n    end\n    return f3\nend", "    if n <= 0 then\n        return\
    \ 0\n    end\n    if n == 1 then\n        return 0\n    end\n    if n == 2 then\n\
    \        return 2\n    end\n    if n == 3 then\n        return 0\n    end\n  \
    \  local i = 4\n    local num1 = 0\n    local num2 = 2\n    local num3 = 0\n \
    \   local num4 = 0\n    local fib4 = 0\n    while i <= n do\n        fib4 = num1\
    \ + num2 + num3 + num4\n        num1 = num2\n        num2 = num3\n        num3\
    \ = num4\n        num4 = fib4\n        i = i + 1\n    end\n    return fib4\nend",
  "\tlocal n0, n1, n2, n3 = 0, 0, 2, 0\n\tlocal i = 3\n\twhile i <= n do\n\t\tn0,\
    \ n1, n2, n3 = n1, n2, n3, n0 + n1 + n2 + n3\n\t\ti = i + 1\n\tend\n\treturn n3\n\
    end", "\tlocal fib4_1, fib4_2, fib4_3, fib4_4 = 0, 0, 2, 0\n\tlocal fib_n = fib4_1\n\
    \tfor i = 2, n do\n\t\tfib_n = fib4_1 + fib4_2 + fib4_3 + fib4_4\n\t\tfib4_1,\
    \ fib4_2, fib4_3, fib4_4 = fib4_2, fib4_3, fib4_4, fib_n\n\tend\n\treturn fib_n\n\
    end", "  local last4 = {0, 0, 2, 0}\n  for i = 5, n do\n    last4[1], last4[2],\
    \ last4[3], last4[4] = last4[2], last4[3], last4[4], last4[1] + last4[2] + last4[3]\
    \ + last4[4]\n  end\n  return last4[n%4]\nend", "  -- fill in this function\n\
    end", "  local a, b, c, d = 0, 0, 2, 0\n  if n == 0 then return a end\n  if n\
    \ == 1 then return b end\n  if n == 2 then return c end\n  if n == 3 then return\
    \ d end\n  for i = 4, n do\n    a, b, c, d = b, c, d, a + b + c + d\n  end\n \
    \ return d\nend\nassert(fib4(0) == 0)\nassert(fib4(1) == 0)\nassert(fib4(2) ==\
    \ 2)\nassert(fib4(3) == 0)\nassert(fib4(4) == 2)\nassert(fib4(5) == 4)\nassert(fib4(6)\
    \ == 6)\nassert(fib4(7) == 10)\nassert(fib4(8) == 16)\nassert(fib4(9) == 26)\n\
    assert(fib4(10) == 42)\nassert(fib4(11) == 68)\nassert(fib4(12) == 110)\nassert(fib4(13)\
    \ == 178)\nassert(fib4(14) == 288)\nassert(fib4(15) == 466)\nassert(fib4(16) ==\
    \ 754)\nassert(fib4(17) == 1220)\nassert(fib4(18) == 1974)\nassert(fib4(19) ==\
    \ 3194)\nassert(fib4(20) == 5168)\nassert(fib4(21) == 8362)\nassert(fib4(22) ==\
    \ 13530)\nassert(fib4(23) == 21892)\nassert(fib4(24) == 35422)\nassert(fib4(25)\
    \ == 57314)\nassert(fib4(26) == 92736)\nassert(fib4(27) == 150050)\nassert(fib4(28)\
    \ == 242786)\nassert(fib4(29) == 392836)\nassert(fib4(30) == 635622)\nassert(fib4(31)\
    \ == 1028458)\nassert(fib4(", "\tif n < 3 then\n\t\treturn n\n\tend\n\tif n ==\
    \ 3 then\n\t\treturn 0\n\tend\n\tlocal n1, n2, n3, n4 = 0, 2, 0, 3\n\tlocal n5\n\
    \tfor i = 5, n do\n\t\tn5 = n1 + n2 + n3 + n4\n\t\tn1 = n2\n\t\tn2 = n3\n\t\t\
    n3 = n4\n\t\tn4 = n5\n\tend\n\treturn n5\nend", "  local a, b, c, d = 0, 0, 2,\
    \ 0\n  for i = 4, n do\n    a, b, c, d = b, c, d, (b + c + d)\n  end\n  return\
    \ d\nend", "    --\n    -- Enter your code here.\n    --\n    local n1, n2, n3,\
    \ n4 = 0,0,2,0\n    if n < 1 then\n        return n1\n    elseif n == 1 then\n\
    \        return n2\n    elseif n == 2 then\n        return n3\n    elseif n ==\
    \ 3 then\n        return n4\n    end\n    local i = 3\n    while i < n do\n  \
    \      n1, n2, n3, n4 = n2, n3, n4, n1 + n2 + n3 + n4\n        i = i + 1\n   \
    \ end\n    return n4\nend", "  if n < 0 then return nil end\n  local a, b, c,\
    \ d = 0, 0, 2, 0\n  for i = 3, n do\n    a, b, c, d = b, c, d, a + b + c + d\n\
    \  end\n  return d\nend", "\tlocal a, b, c, d = 0, 0, 2, 0\n\tfor i = 4, n do\n\
    \t\ta, b, c, d = b, c, d, a + b + c + d\n\tend\n\treturn d\nend", end, "    if\
    \ n < 4 then\n        return 2 - n\n    end\n    local n_minus_one = 0\n    local\
    \ n_minus_two = 0\n    local n_minus_three = 2\n    local n_minus_four = 0\n \
    \   local result = 0\n    for i = 4, n do\n        result = n_minus_one + n_minus_two\
    \ + n_minus_three + n_minus_four\n        n_minus_four = n_minus_three\n     \
    \   n_minus_three = n_minus_two\n        n_minus_two = n_minus_one\n        n_minus_one\
    \ = result\n    end\n    return result\nend", "    if n == 0 then\n        return\
    \ 0\n    elseif n == 1 then\n        return 0\n    elseif n == 2 then\n      \
    \  return 2\n    elseif n == 3 then\n        return 0\n    else\n        local\
    \ a = 0\n        local b = 0\n        local c = 2\n        local d = 0\n     \
    \   for i = 4, n do\n            d = a + b + c\n            a = b\n          \
    \  b = c\n            c = d\n        end\n        return d\n    end\nend", " \
    \ if n < 0 then return end\n  if n == 0 then return 0 end\n  if n == 1 then return\
    \ 0 end\n  if n == 2 then return 2 end\n  if n == 3 then return 0 end\n  local\
    \ a, b, c, d = 0, 0, 2, 0\n  for i = 4, n do\n    a, b, c, d = b, c, d, a + b\
    \ + c + d\n  end\n  return d\nend", "\tlocal f0, f1, f2, f3 = 0, 0, 2, 0\n\tlocal\
    \ result = 0\n\t\n\t-- Use an iterative algorithm for n > 3.\n\tfor i = 3, n,\
    \ 1 do\n\t\tresult = f0 + f1 + f2 + f3\n\t\tf0 = f1\n\t\tf1 = f2\n\t\tf2 = f3\n\
    \t\tf3 = result\n\tend\n\t\n\t-- Use a combination of the iterative algorithm\
    \ and pre-computed values for n = 0 to 3.\n\tif (n == 0) then result = 0\n\telseif\
    \ (n == 1) then result = 0\n\telseif (n == 2) then result = 2\n\telseif (n ==\
    \ 3) then result = 0\n\tend\n\t\n\treturn result\nend", "\tif n == 0 then return\
    \ 0 end\n\tif n == 1 then return 0 end\n\tif n == 2 then return 2 end\n\tif n\
    \ == 3 then return 0 end\n\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 2\n\tlocal\
    \ d = 0\n\tfor i = 4, n do\n\t\ta = b\n\t\tb = c\n\t\tc = d\n\t\td = a + b + c\n\
    \tend\n\treturn d\nend", "  local fn_2, fn_1, fn, fn_3 = 0, 0, 2, 0\n  local curr\
    \ = 3\n  while curr <= n do\n    fn_3 = fn_2\n    fn_2 = fn_1\n    fn_1 = fn\n\
    \    fn = fn_1 + fn_2 + fn_3 + fn_2\n    curr = curr + 1\n  end\n  return fn\n\
    end", "    local a = 0\n    local b = 0\n    local c = 2\n    local d = 0\n  \
    \  local tmp = 0\n    if n == 0 then\n        return 0\n    elseif n == 1 then\n\
    \        return 0\n    elseif n == 2 then\n        return 2\n    elseif n == 3\
    \ then\n        return 0\n    else\n        for i = 4, n do\n            tmp =\
    \ a + b + c + d\n            a = b\n            b = c\n            c = d\n   \
    \         d = tmp\n        end\n        return d\n    end\nend", "  local a =\
    \ 0\n  local b = 0\n  local c = 2\n  local d = 0\n  for i = 3, n do\n    a, b,\
    \ c, d = b, c, d, a + b + c + d\n  end\n  return d\nend", "  assert(type(n) ==\
    \ \"number\", \"The given number is not a number\")\n  assert(n % 1 == 0, \"The\
    \ given number is not an integer\")\n  assert(n >= 0, \"The given number is not\
    \ an non-negative integer\")\n  local table = {0, 0, 2, 0}\n  for i = 4, n do\n\
    \    table[i] = table[i-1] + table[i-2] + table[i-3] + table[i-4]\n  end\n  return\
    \ table[n]\nend", "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n\
    \  if n == 2 then return 2 end\n  if n == 3 then return 0 end\n  local a = 0\n\
    \  local b = 0\n  local c = 2\n  local d = 0\n  for _ = 4, n do\n    d = a + b\
    \ + c\n    a = b\n    b = c\n    c = d\n  end\n  return d\nend", "  -- Code here\n\
    end", "\tif n <= 3 then\n\t\treturn [0, 0, 2, 0][n]\n\tend\n\tlocal f1, f2, f3,\
    \ f4 = 0, 0, 2, 0\n\tfor i = 3, n do\n\t\tf1, f2, f3, f4 = f2, f3, f4, f1 + f2\
    \ + f3 + f4\n\tend\n\treturn f4\nend", "\tif n == 0 then return 0 end\n\tif n\
    \ == 1 then return 0 end\n\tif n == 2 then return 2 end\n\tif n == 3 then return\
    \ 0 end\n\tlocal n1, n2, n3, n4 = 0, 0, 2, 0\n\tfor _ = 4, n do\n\t\tn1, n2, n3,\
    \ n4 = n2, n3, n4, n1 + n2 + n3 + n4\n\tend\n\treturn n4\nend", "  local prev\
    \ = {0, 0, 2, 0}\n  local cur = {0, 0, 2, 0}\n  local next = {0, 0, 2, 0}\n  local\
    \ result\n  for i = 4, n do\n    result = prev[1] + prev[2] + prev[3] + prev[4]\n\
    \    prev = cur\n    cur = next\n    next = {cur[1], cur[2], cur[3], result}\n\
    \  end\n  return result\nend", "    return 1\nend", "  if n < 3 then\n    return\
    \ n * 2\n  end\n  local fib1, fib2, fib3, fib4 = 0, 0, 2, 0\n  for i = 4, n do\n\
    \    fib4 = fib1 + fib2 + fib3 + fib4\n    fib1, fib2, fib3 = fib2, fib3, fib4\n\
    \  end\n  return fib4\nend", "  -- your code here\n  local v = {0, 0, 2, 0}\n\
    \  for i = 4, n do\n    v[i%4+1] = v[1] + v[2] + v[3] + v[4]\n  end\n  return\
    \ v[n%4+1]\nend", "    if (n == 0) then\n        return 0\n    elseif (n == 1)\
    \ then\n        return 0\n    elseif (n == 2) then\n        return 2\n    elseif\
    \ (n == 3) then\n        return 0\n    else\n        local fib = {0, 0, 2, 0}\n\
    \        for i = 4, n, 1 do\n            fib[1] = fib[2]\n            fib[2] =\
    \ fib[3]\n            fib[3] = fib[4]\n            fib[4] = fib[1] + fib[2] +\
    \ fib[3]\n        end\n        return fib[4]\n    end\nend", "  return 0\nend\n\
    assert(fib4(0) == 0)\nassert(fib4(1) == 0)\nassert(fib4(2) == 2)\nassert(fib4(3)\
    \ == 0)\nassert(fib4(4) == 2)\nassert(fib4(5) == 2)\nassert(fib4(6) == 2)\nassert(fib4(7)\
    \ == 4)\nassert(fib4(8) == 4)\nassert(fib4(9) == 8)\nassert(fib4(10) == 8)\nassert(fib4(11)\
    \ == 12)\nassert(fib4(12) == 12)\nassert(fib4(13) == 16)\nassert(fib4(14) == 16)\n\
    assert(fib4(15) == 20)\nassert(fib4(16) == 20)\nassert(fib4(17) == 24)\nassert(fib4(18)\
    \ == 24)\nassert(fib4(19) == 28)\nassert(fib4(20) == 28)\nassert(fib4(21) == 36)\n\
    assert(fib4(22) == 36)\nassert(fib4(23) == 44)\nassert(fib4(24) == 44)\nassert(fib4(25)\
    \ == 56)\nassert(fib4(26) == 56)\nassert(fib4(27) == 68)\nassert(fib4(28) == 68)\n\
    assert(fib4(29) == 80)\nassert(fib4(30) == 80)\nassert(fib4(31) == 100)\nassert(fib4(32)\
    \ == 100)\nassert(fib4(33) == 120)\nassert(fib4(34) == 120)\nassert(fib4(35) ==\
    \ 140)\nassert(fib4(36) == 140)\nassert(fib4(37) == 168)\nassert(fib4(38) == 168)\n\
    assert(fib4(39) == 196)\nassert(fib4(40) == 196)\nassert(fib4(41) == 232)\nassert",
  "  -- TODO: implement this function\nend", "\tlocal n0, n1, n2, n3 = 0, 0, 2, 0",
  "  local dp = {0, 0, 2, 0}\n  for i = 4, n do\n    dp[i%4+1] = dp[(i-1)%4+1] + dp[(i-2)%4+1]\
    \ + dp[(i-3)%4+1] + dp[(i-4)%4+1]\n  end\n  return dp[n%4+1]\nend", "    -- YOUR\
    \ CODE HERE\nend", "    local a, b, c, d = 0, 0, 2, 0\n    for i = 3, n do\n \
    \       d = a + b + c + d\n        a = b\n        b = c\n        c = d\n    end\n\
    \    return d\nend", '  -- Assume that n >= 0', "  -- fib4(0) -> 0\n  if n ==\
    \ 0 then\n    return 0\n  end", "\tassert(n >= 0, \"fib4(n): n must be >= 0\"\
    )\n\tif n == 0 then return 0 end\n\tif n == 1 then return 0 end\n\tif n == 2 then\
    \ return 2 end\n\tif n == 3 then return 0 end\n\tlocal f1, f2, f3, f4 = 0, 0,\
    \ 2, 0\n\tfor i = 4, n do\n\t\tf1, f2, f3, f4 = f2, f3, f4, f1 + f2 + f3 + f4\n\
    \tend\n\treturn f4\nend\nassert(fib4(0) == 0)\nassert(fib4(1) == 0)\nassert(fib4(2)\
    \ == 2)\nassert(fib4(3) == 0)\nassert(fib4(4) == 2)\nassert(fib4(5) == 4)\nassert(fib4(6)\
    \ == 8)\nassert(fib4(7) == 14)\nassert(fib4(8) == 24)\nassert(fib4(9) == 40)\n\
    assert(fib4(10) == 66)\nassert(fib4(11) == 106)\nassert(fib4(12) == 172)\nassert(fib4(13)\
    \ == 277)\nassert(fib4(14) == 449)\nassert(fib4(15) == 726)\nassert(fib4(16) ==\
    \ 1175)\nassert(fib4(17) == 1896)\nassert(fib4(18) == 3072)\nassert(fib4(19) ==\
    \ 4968)\nassert(fib4(20) == 8005)\nassert(fib4(21) == 12872)\nassert(fib4(22)\
    \ == 20777)\nassert(fib4(23) == 33349)\nassert(fib4(24) == 53926)\nassert(fib4(25)\
    \ == 87275)\nassert(fib4(26) == 140201)\nassert(fib4(27) == 227426)\nassert(fib4(28)\
    \ == 366677)\nassert(fib4(29) ==", "\t--TODO\nend", "    if n < 4 then\n     \
    \   return {0, 0, 2, 0}[n+1]\n    end\n    local fn2, fn1, fn = 0, 0, 2\n    for\
    \ i = 4, n do\n        fn2, fn1, fn = fn1, fn, fn + fn1 + fn2\n    end\n    return\
    \ fn\nend", "    local a = 0\n    local b = 0\n    local c = 2\n    local d =\
    \ 0\n    local i\n    for i = 4, n do\n        d = a + b + c\n        a = b\n\
    \        b = c\n        c = d\n    end\n    return d\nend", "    -- ...\nend",
  "    if n <= 1 then\n        return 0\n    elseif n == 2 then\n        return 2\n\
    \    elseif n == 3 then\n        return 0\n    end", "  assert(n >= 0)\n  local\
    \ nums = { 0, 0, 2, 0 }\n  for i = 4, n do\n    nums[4] = nums[1] + nums[2] +\
    \ nums[3] + nums[4]\n    table.remove(nums, 1)\n  end\n  return nums[4]\nend",
  "    local last, last2, last3, last4 = 0, 0, 0, 0\n    local current = 0\n    for\
    \ i = 0, n do\n        if i == 0 then\n            current = 0\n        elseif\
    \ i == 1 then\n            current = 0\n        elseif i == 2 then\n         \
    \   current = 2\n        elseif i == 3 then\n            current = 0\n       \
    \ else\n            current = last + last2 + last3 + last4\n        end\n    \
    \    last4 = last3\n        last3 = last2\n        last2 = last\n        last\
    \ = current\n    end\n    return current\nend", "  local t = {0, 0, 2, 0}\n  if\
    \ n > 3 then\n    for i = 4, n do\n      t[i % 4 + 1] = t[1] + t[2] + t[3] + t[4]\n\
    \    end\n  end\n  return t[(n - 1) % 4 + 1]\nend", "\tlocal a, b, c, d = 0, 0,\
    \ 2, 0\n\tlocal i = 3\n\twhile i <= n do\n\t\ta, b, c, d = b, c, d, a + b + c\
    \ + d\n\t\ti = i + 1\n\tend\n\treturn d\nend", "    local fourNum = {0, 0, 2,\
    \ 0}\n    for i = 3, n do\n        local next = fourNum[1] + fourNum[2] + fourNum[3]\
    \ + fourNum[4]\n        fourNum[1] = fourNum[2]\n        fourNum[2] = fourNum[3]\n\
    \        fourNum[3] = fourNum[4]\n        fourNum[4] = next\n    end\n    return\
    \ fourNum[4]\nend", "    -- dp solution would be the best\n    local dp = {0,\
    \ 0, 2, 0}\n    local size = 4\n    while size <= n do\n        dp[size] = dp[size-1]\
    \ + dp[size-2] + dp[size-3] + dp[size-4]\n        size = size + 1\n    end\n \
    \   return dp[n]\nend", "  -- TODO!\nend", "  if n == 0 then return 0 end\n  if\
    \ n == 1 then return 0 end\n  if n == 2 then return 2 end\n  if n == 3 then return\
    \ 0 end\n  local a, b, c, d = 0, 0, 2, 0\n  for i = 4, n do\n    a, b, c, d =\
    \ b, c, d, a + b + c + d\n  end\n  return d\nend", "\t-- YOUR IMPLEMENTATION GOES\
    \ HERE\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n\
    \        return 0\n    elseif n == 2 then\n        return 2\n    elseif n == 3\
    \ then\n        return 0\n    else\n        local a = 0\n        local b = 0\n\
    \        local c = 2\n        local d = 0\n        local i = 4\n        while\
    \ i <= n do\n            a = b + c + d\n            b = c\n            c = d\n\
    \            d = a\n            i = i + 1\n        end\n        return a\n   \
    \ end\nend", "  assert(n >= 0)\n  local a, b, c, d = 0, 0, 2, 0\n  for i = 3,\
    \ n do\n    a, b, c, d = b, c, d, a + b + c + d\n  end\n  return d\nend", "\t\
    if n == 0 then return 0 end\n\tif n == 1 then return 0 end\n\tif n == 2 then return\
    \ 2 end\n\tif n == 3 then return 0 end\n\tif n == 4 then return 4 end\n\tif n\
    \ == 5 then return 8 end\n\tif n == 6 then return 12 end\n\tif n == 7 then return\
    \ 20 end\n\tif n == 8 then return 24 end\n\tif n == 9 then return 40 end\n\tif\
    \ n == 10 then return 44 end\n\tif n == 11 then return 68 end\n\tif n == 12 then\
    \ return 72 end\n\tif n == 13 then return 116 end\n\tif n == 14 then return 120\
    \ end\n\tif n == 15 then return 192 end\n\tif n == 16 then return 196 end\n\t\
    if n == 17 then return 308 end\n\tif n == 18 then return 312 end\n\tif n == 19\
    \ then return 500 end\n\tif n == 20 then return 504 end\n\tif n == 21 then return\
    \ 812 end\n\tif n == 22 then return 816 end\n\tif n == 23 then return 1316 end\n\
    \tif n == 24 then return 1320 end\n\tif n == 25 then return 2132 end\n\tif n ==\
    \ 26 then return 2136 end\n\tif n == 27 then return 3448 end\n\tif n == 28 then\
    \ return 3452 end\n\tif n == 29 then return 5660 end\n\tif n == 30 then return\
    \ 5664 end\n\tif n == 31 then return 9124 end\n\tif n == 32 then return 9128 end\n\
    \tif n == 33 then return 14732 end\n\tif n == 34 then return 14736 end\n\tif n\
    \ == 35 then return 23668 end\n\tif n == 36 then return 23672 end\n\tif n == 37\
    \ then return 38400 end\n\tif n == 38 then return 38404 end\n\tif n == 39 then\
    \ return 62100 end\n\tif n == 40 then return 62104 end\n\tif n == 41 then return\
    \ 100500 end\n\tif n == 42 then return 100504 end\n\tif n == 43 then return 162992\
    \ end\n\tif n == 44 then return 162996 end\n\tif n == 45 then return 263492 end\n\
    \tif n == 46 then return 263496 end\n\tif n == 47 then return 426480", "   --\
    \ TODO: please write your solution here.\n   if n == 0 then\n      return 0\n\
    \   elseif n == 1 then\n      return 0\n   elseif n == 2 then\n      return 2\n\
    \   elseif n == 3 then\n      return 0\n   elseif n == 4 then\n      return 2\n\
    \   else\n      return fib4(n-1) + fib4(n-2) + fib4(n-3) + fib4(n-4)\n   end\n\
    end", "\tlocal a, b, c, d = 0, 0, 2, 0\n\tfor i = 3, n do\n\t\ta, b, c, d = b,\
    \ c, d, a + b + c + d\n\tend\n\treturn d\nend", "  -- Your code here\nend", " \
    \   if n < 4 then\n        return 0\n    end\n    local f1, f2, f3, f4 = 0, 0,\
    \ 2, 0\n    for i = 4, n do\n        f4 = f1 + f2 + f3 + f4\n        f1 = f2\n\
    \        f2 = f3\n        f3 = f4\n    end\n    return f4\nend", "  -- Your code\
    \ here.\nend", "    -- Your code here.\nend", "  local a, b, c, d = 0, 0, 2, 0\n\
    \  for i = 4, n do\n    a, b, c, d = b, c, d, a + b + c + d\n  end\n  return d\n\
    end", "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n  if n ==\
    \ 2 then return 2 end\n  if n == 3 then return 0 end\n  local a = 0\n  local b\
    \ = 0\n  local c = 2\n  local d = 0\n  local e = 0\n  local i = 4\n  while i <=\
    \ n do\n    e = a + b + c + d\n    a = b\n    b = c\n    c = d\n    d = e\n  \
    \  i = i + 1\n  end\n  return e\nend\nassert(fib4(0) == 0)\nassert(fib4(1) ==\
    \ 0)\nassert(fib4(2) == 2)\nassert(fib4(3) == 0)\nassert(fib4(4) == 2)\nassert(fib4(5)\
    \ == 4)\nassert(fib4(6) == 6)\nassert(fib4(7) == 6)\nassert(fib4(8) == 10)\nassert(fib4(9)\
    \ == 16)\nassert(fib4(10) == 20)\nassert(fib4(11) == 26)\nassert(fib4(12) == 36)\n\
    assert(fib4(13) == 52)\nassert(fib4(14) == 74)\nassert(fib4(15) == 104)\nassert(fib4(16)\
    \ == 150)\nassert(fib4(17) == 212)\nassert(fib4(18) == 302)\nassert(fib4(19) ==\
    \ 430)\nassert(fib4(20) == 616)\nassert(fib4(21) == 886)\nassert(fib4(22) == 1272)\n\
    assert(fib4(23) == 1826)\nassert(fib4(24) == 2634)\nassert(fib4(25) == 3796)\n\
    assert(fib4(26) == 5534)\nassert(fib4(27) == 8030)\nassert(fib4(28) == 11704)\n\
    assert(fib4(29) == 17136)\nassert(fib4(30) == 2498", "    local f1, f2, f3, f4\
    \ = 0, 0, 2, 0\n    local i = 3\n    while i <= n do\n        f1, f2, f3, f4 =\
    \ f2, f3, f4, f1 + f2 + f3 + f4\n        i = i + 1\n    end\n    return f4\nend",
  "   if n < 4 then\n      return n % 2\n   end\n   local a, b, c, d = 1, 1, 1, 0\n\
    \   local i = 4\n   while i <= n do\n      a, b, c, d = b, c, d, a + b + c + d\n\
    \      i = i + 1\n   end\n   return d\nend", "\tif n == 0 then return 0 end\n\t\
    if n == 1 then return 0 end\n\tif n == 2 then return 2 end\n\tif n == 3 then return\
    \ 0 end\n\t--[[\n\tfib4(0) -> 0\n\tfib4(1) -> 0\n\tfib4(2) -> 2\n\tfib4(3) ->\
    \ 0\n\tfib4(4) -> 2\n\tfib4(5) -> 2\n\tfib4(6) -> 4\n\tfib4(7) -> 2\n\tfib4(8)\
    \ -> 6\n\tfib4(9) -> 2\n\tfib4(10) -> 8\n\tfib4(11) -> 2\n\tfib4(12) -> 10\n\t\
    fib4(13) -> 2\n\tfib4(14) -> 12\n\tfib4(15) -> 2\n\tfib4(16) -> 14\n\tfib4(17)\
    \ -> 2\n\tfib4(18) -> 16\n\tfib4(19) -> 2\n\tfib4(20) -> 18\n\tfib4(21) -> 2\n\
    \tfib4(22) -> 20\n\tfib4(23) -> 2\n\tfib4(24) -> 22\n\tfib4(25) -> 2\n\tfib4(26)\
    \ -> 24\n\tfib4(27) -> 2\n\tfib4(28) -> 26\n\tfib4(29) -> 2\n\tfib4(30) -> 28\n\
    \tfib4(31) -> 2\n\tfib4(32) -> 30\n\tfib4(33) -> 2\n\tfib4(34) -> 32\n\tfib4(35)\
    \ -> 2\n\tfib4(36) -> 34\n\tfib4(37) -> 2\n\tfib4(38) -> 36\n\tfib4(39) -> 2\n\
    \tfib4(40) -> 38\n\tfib4(41) -> 2\n\tfib4(42) -> 40\n\tfib4(43) -> 2\n\tfib4(44)\
    \ -> 42\n\tfib4(45) -> 2\n\tfib4(46)", "  -- I actually did this one\n  error(\"\
    Not implemented\")\nend", "\tif n == 0 then return 0 end\n\tif n == 1 then return\
    \ 0 end\n\tif n == 2 then return 2 end\n\tif n == 3 then return 0 end\n\tif n\
    \ == 4 then return 2 end\n\tlocal a, b, c, d = 0, 0, 2, 0\n\tfor i = 4, n do\n\
    \t\ta, b, c, d = b, c, d, a + b + c + d\n\tend\n\treturn d\nend", "  local a,\
    \ b, c, d = 0, 0, 2, 0\n  for i = 3, n do\n    a, b, c, d = b, c, d, a + b + c\
    \ + d\n  end\n  return d\nend", "\tif n < 4 then\n\t\treturn (2 - n) * (2 - n)\n\
    \tend\n\t\n\tlocal prev = {0, 0, 2, 0}\n\tlocal cur = {0, 0, 2, 0}\n\t\n\tfor\
    \ i = 4, n do\n\t\tlocal temp = cur[1]\n\t\tcur[1] = cur[2]\n\t\tcur[2] = cur[3]\n\
    \t\tcur[3] = cur[4]\n\t\tcur[4] = prev[1] + prev[2] + prev[3] + prev[4]\n\t\t\
    prev[1] = temp\n\tend\n\t\n\treturn cur[4]\nend", "    return 0\nend", '  -- your
    code goes here', "  if n < 2 then\n    return 0\n  elseif n == 2 then\n    return\
    \ 2\n  end\n  local a, b, c, d = 0, 0, 2, 0\n  for _ = 3, n do\n    d = a + b\
    \ + c + d\n    a, b, c = b, c, d\n  end\n  return d\nend", "  -- YOUR CODE HERE\n\
    \  return -1\nend", "\tif n == 0 then return 0 end\n\tif n == 1 then return 0\
    \ end\n\tif n == 2 then return 2 end\n\tif n == 3 then return 0 end\n\t\n\t--\
    \ We will use the fib4 number sequence in an array and a temporary varaible to\
    \ hold the sum.\n\tlocal seq = {0, 0, 2, 0}\n\tlocal sum = 0\n\tfor i = 4, n do\n\
    \t\tsum = seq[1] + seq[2] + seq[3] + seq[4]\n\t\ttable.remove(seq, 1)\n\t\ttable.insert(seq,\
    \ sum)\n\tend\n\treturn seq[4]\nend\nprint(fib4(10)) -- Should be 516\nprint(fib4(100))\
    \ -- Should be 336965337417626794893845824\nprint(fib4(1000)) -- Should be 92234145012738179038907747016865799120692604577578668879559868385594267926413282413547447039742810914972168793836702466408040890562179011023114152796349377350051734974899016810479249609750049182267686982000595077142864279732131081277232903993837904481812290445809420896471721539774933280827532838359872121996918963121116611264549858089433312739576833027690861735112988788977998870860570066974839662267404648900091548210077642762126427003857114329646915997437509408101421563103897682079192801\n\
    euler.time_it(function() print(fib4(1000)) end) -- Should take less than 5 milliseconds",
  "  -- TODO\nend", "  return fib4[n]\nend", "  local t = {0, 0, 2, 0}\n  if n <=\
    \ #t then\n    return t[n]\n  end\n  for i = #t+1, n do\n    t[i] = t[i-1] + t[i-2]\
    \ + t[i-3] + t[i-4]\n  end\n  return t[n]\nend", "\tif n < 3 then\n\t\treturn\
    \ 2*n\n\tend\n\tlocal n2, n3, n4, n5 = 0, 0, 2, 2\n\tfor i = 4, n do\n\t\tn2,\
    \ n3, n4, n5 = n3, n4, n5, n2+n3+n4+n5\n\tend\n\treturn n5\nend", "    local cache\
    \ = { 0, 0, 2, 0 }\n    for i = 4, n do\n        local val = cache[1] + cache[2]\
    \ + cache[3] + cache[4]\n        cache[1] = cache[2]\n        cache[2] = cache[3]\n\
    \        cache[3] = cache[4]\n        cache[4] = val\n    end\n    return cache[4]\n\
    end", "\tif n == 0 then return 0 end\n\tif n == 1 then return 0 end\n\tif n ==\
    \ 2 then return 2 end\n\tif n == 3 then return 0 end\n\tlocal a, b, c, d = 0,\
    \ 0, 2, 0\n\tfor i = 4, n do\n\t\ta, b, c, d = b, c, d, a + b + c + d\n\tend\n\
    \treturn d\nend", "  -- TODO: write me\nend", "\tlocal a = 0\n\tlocal b = 0\n\t\
    local c = 2\n\tlocal d = 0\n\tfor k = 4, n do\n\t\td = a + b + c\n\t\ta = b\n\t\
    \tb = c\n\t\tc = d\n\tend\n\treturn d\nend\nassert(fib4(0) == 0)\nassert(fib4(1)\
    \ == 0)\nassert(fib4(2) == 2)\nassert(fib4(3) == 0)\nassert(fib4(4) == 2)\nassert(fib4(5)\
    \ == 4)\nassert(fib4(6) == 6)\nassert(fib4(7) == 10)\nassert(fib4(8) == 16)\n\
    assert(fib4(9) == 26)\nassert(fib4(10) == 42)\nassert(fib4(11) == 68)\nassert(fib4(12)\
    \ == 110)\nassert(fib4(13) == 178)\nassert(fib4(14) == 288)\nassert(fib4(15) ==\
    \ 466)\nassert(fib4(16) == 754)\nassert(fib4(17) == 1220)\nassert(fib4(18) ==\
    \ 1974)\nassert(fib4(19) == 3194)\nassert(fib4(20) == 5168)\nassert(fib4(21) ==\
    \ 8362)\nassert(fib4(22) == 13530)\nassert(fib4(23) == 21892)\nassert(fib4(24)\
    \ == 35222)\nassert(fib4(25) == 57110)", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 0\n  end\n\
    \  if n == 2 then\n    return 2\n  end\n  if n == 3 then\n    return 0\n  end\n\
    \  local a = 0\n  local b = 0\n  local c = 2\n  local d = 0\n  local i = 4\n \
    \ while i <= n do\n    d = c + b + a\n    a = b\n    b = c\n    c = d\n    i =\
    \ i + 1\n  end\n  return d\nend", "  if n < 0 then return 0 end\n  local f0, f1,\
    \ f2, f3 = 0, 0, 2, 0\n  for i = 3, n do\n    f0, f1, f2, f3 = f1, f2, f3, f0\
    \ + f1 + f2 + f3\n  end\n  return f3\nend", "\tlocal fib = { 0, 0, 2, 0 }\n\t\
    for i = 4, n do\n\t\tfib[i % 4 + 1] = fib[i % 4] + fib[(i + 1) % 4] + fib[(i +\
    \ 2) % 4] + fib[(i + 3) % 4]\n\tend\n\treturn fib[n % 4 + 1]\nend\nassert(fib4(0)\
    \ == 0)\nassert(fib4(1) == 0)\nassert(fib4(2) == 2)\nassert(fib4(3) == 0)\nassert(fib4(4)\
    \ == 6)\nassert(fib4(5) == 8)\nassert(fib4(6) == 22)\nassert(fib4(7) == 24)\n\
    assert(fib4(8) == 70)\nassert(fib4(9) == 72)\nassert(fib4(10) == 214)\nassert(fib4(11)\
    \ == 216)\nassert(fib4(12) == 642)\nassert(fib4(13) == 644)\nassert(fib4(14) ==\
    \ 1938)\nassert(fib4(15) == 1940)\nassert(fib4(16) == 5816)\nassert(fib4(17) ==\
    \ 5818)\nassert(fib4(18) == 17450)\nassert(fib4(19) == 17452)\nassert(fib4(20)\
    \ == 52338)\nassert(fib4(21) == 52340)\nassert(fib4(22) == 157006)\nassert(fib4(23)\
    \ == 157008)\nassert(fib4(24) == 471022)\nassert(fib4(25) == 471024)\nassert(fib4(26)\
    \ == 1413070)\nassert(fib4(27) == 1413072)\nassert(fib4(28) == 4239216)\nassert(fib4(29)\
    \ == 4239218)\nassert(fib4(30) == 12707650)\nassert(fib4(31) == 12707652)\nassert(fib4(",
  "\tassert(n>=0, \"n must be >= 0\")\n\tif n == 0 then return 0 end\n\tif n == 1\
    \ then return 0 end\n\tif n == 2 then return 2 end\n\tif n == 3 then return 0\
    \ end\n\tlocal prev4, prev3, prev2, prev1 = 0, 2, 0, 0\n\tfor i=4,n do\n\t\tlocal\
    \ t = prev4 + prev3 + prev2 + prev1\n\t\tprev4, prev3, prev2, prev1 = prev3, prev2,\
    \ prev1, t\n\tend\n\treturn prev1\nend", "\tlocal n1, n2, n3, n4 = 0, 0, 2, 0\n\
    \tif n < 3 then\n\t\treturn 2\n\tend\n\tfor i = 3, n do\n\t\tn1, n2, n3, n4 =\
    \ n2, n3, n4, n1 + n2 + n3 + n4\n\tend\n\treturn n4\nend", "  local x,y,z,w =\
    \ 0,0,2,0\n  for i=3,n do\n    x,y,z,w = y,z,w,x+y+z+w\n  end\n  return w\nend\n\
    assert(fib4(0) == 0)\nassert(fib4(1) == 0)\nassert(fib4(2) == 2)\nassert(fib4(3)\
    \ == 0)\nassert(fib4(4) == 2)\nassert(fib4(5) == 2)\nassert(fib4(6) == 6)\nassert(fib4(7)\
    \ == 6)\nassert(fib4(8) == 8)\nassert(fib4(9) == 8)\nassert(fib4(10) == 16)\n\
    assert(fib4(11) == 20)\nassert(fib4(12) == 30)\nassert(fib4(13) == 48)\nassert(fib4(14)\
    \ == 76)\nassert(fib4(15) == 120)\nassert(fib4(16) == 188)\nassert(fib4(17) ==\
    \ 296)\nassert(fib4(18) == 464)\nassert(fib4(19) == 728)\nassert(fib4(20) == 1152)\n\
    assert(fib4(21) == 1816)\nassert(fib4(22) == 2864)\nassert(fib4(23) == 4560)\n\
    assert(fib4(24) == 7288)\nassert(fib4(25) == 11624)\nassert(fib4(26) == 18568)\n\
    assert(fib4(27) == 29776)\nassert(fib4(28) == 47392)\nassert(fib4(29) == 76032)\n\
    assert(fib4(30) == 121760)\nassert(fib4(31) == 194744)\nassert(fib4(32) == 313456)\n\
    assert(fib4(33) == 508208)\nassert(fib4(34) == 820864)\nassert(fib4(35) == 1328608",
  "    if (n <= 0) then\n        return 0\n    end\n    if (n == 1) then\n       \
    \ return 0\n    end\n    if (n == 2) then\n        return 2\n    end\n    if (n\
    \ == 3) then\n        return 0\n    end\n    local a, b, c, d = 0, 0, 2, 0\n \
    \   for i = 3, n do\n        local e = d + c + b + a\n        a = b\n        b\
    \ = c\n        c = d\n        d = e\n    end\n    return d\nend", end, "  local\
    \ a, b, c, d = 0, 0, 2, 0\n  for i = 4, n do\n    d = a + b + c + d\n    a = b\n\
    \    b = c\n    c = d\n  end\n  return d\nend", "\tlocal first, second, third,\
    \ fourth = 0, 0, 2, 0\n\tfor i = 1, n do\n\t\tfirst, second, third, fourth = second,\
    \ third, fourth, first + second + third + fourth\n\tend\n\treturn first\nend",
  "  local function seq(a, b, c, d, n)\n    if n == 0 then\n      return a\n    else\n\
    \      return seq(b, c, d, a + b + c + d, n - 1)\n    end\n  end\n  return seq(0,\
    \ 0, 2, 0, n)\nend", "   -- INSERT YOUR CODE HERE\nend", "    local fibs = {0,\
    \ 0, 2, 0}\n    for i = 4, n do\n        fibs[i % 4 + 1] = fibs[i % 4 + 1 - 1]\
    \ + fibs[i % 4 + 1 - 2] + fibs[i % 4 + 1 - 3] + fibs[i % 4 + 1 - 4]\n    end\n\
    \    return fibs[n % 4 + 1]\nend\nprint(\"fib4(5) = \" .. fib4(5))\nprint(\"fib4(10)\
    \ = \" .. fib4(10))\nprint(\"fib4(15) = \" .. fib4(15))\nprint(\"fib4(20) = \"\
    \ .. fib4(20))\nprint(\"fib4(25) = \" .. fib4(25))", "    -- for all values of\
    \ n less than 3, return fib4(n)\n    if n < 3 then\n        return n\n    end\n\
    \    -- for all values of n greater than or equal to 3, get the previous 4 values,\
    \ starting at n\n    local v1, v2, v3, v4 = 0, 0, 2, 0\n    for i = 4, n do\n\
    \        -- re-assign values for the next iteration\n        v1, v2, v3, v4 =\
    \ v2, v3, v4, v1 + v2 + v3 + v4\n    end\n    return v4\nend", "   if n < 2 then\n\
    \      return 0\n   elseif n == 2 then\n      return 2\n   end", "  local a, b,\
    \ c, d = 0, 0, 2, 0\n  for i = 1, n do\n    a, b, c, d = b, c, d, a + b + c +\
    \ d\n  end\n  return a\nend", "\tlocal a, b, c, d = 0, 0, 2, 0\n\tfor i = 4, n\
    \ do\n\t\ta, b, c, d = b, c, d, a + b + c + d\n\tend\n\treturn d\nend", "\tif\
    \ n < 4 then\n\t\treturn fibs4[n]\n\tend\n\tlocal f_2, f_1, f0, f1 = fibs4[1],\
    \ fibs4[2], fibs4[3], fibs4[4]\n\tfor i = 4, n do\n\t\tf_2, f_1, f0, f1 = f_1,\
    \ f0, f1, f_2 + f_1 + f0 + f1\n\tend\n\treturn f1\nend", end, "    return 0\n\
    end", "\tlocal f1, f2, f3, f4 = 0, 0, 2, 0\n\tlocal f = 0\n\tfor i = 1, n do\n\
    \t\tf = f1 + f2 + f3 + f4\n\t\tf1, f2, f3, f4 = f2, f3, f4, f\n\tend\n\treturn\
    \ f\nend", "    if n == 0 then\n        return 0\n    elseif n == 1 then\n   \
    \     return 0\n    elseif n == 2 then\n        return 2\n    elseif n == 3 then\n\
    \        return 0\n    else\n        local n1 = 0\n        local n2 = 0\n    \
    \    local n3 = 2\n        local n4 = 0\n        local result = 0\n        for\
    \ i = 4, n do\n            result = n1 + n2 + n3 + n4\n            n1 = n2\n \
    \           n2 = n3\n            n3 = n4\n            n4 = result\n        end\n\
    \        return result\n    end\nend", "\tassert(type(n) == \"number\" and n >=\
    \ 0, \"fib4 requires a non-negative integer\")\n\tif n == 0 then return 0 end\n\
    \tif n == 1 then return 0 end\n\tif n == 2 then return 2 end\n\tif n == 3 then\
    \ return 0 end\n\tlocal last = { 0, 0, 2, 0 }\n\tfor i = 4, n do\n\t\tlast[4]\
    \ = last[1] + last[2] + last[3] + last[4]\n\t\ttable.remove(last, 1)\n\tend\n\t\
    return last[4]\nend", "\t-- sum of fib4 0..3 is 2\n\tlocal n2, n3, n4, sum = 0,\
    \ 0, 2, 2\n\tfor i = 4, n do\n\t\tn2, n3, n4, sum = n3, n4, sum, sum + n2 + n3\
    \ + n4\n\tend\n\treturn sum\nend", "    local n_th = 0\n    local n_1th = 0\n\
    \    local n_2th = 0\n    local n_3th = 0\n    local n_4th = 0\n    local i =\
    \ 0\n    while (i < n) do\n        i = i + 1\n        n_4th = n_3th\n        n_3th\
    \ = n_2th\n        n_2th = n_1th\n        n_1th = n_th\n        n_th = n_1th +\
    \ n_2th + n_3th + n_4th\n    end\n    return n_th\nend\nassert(fib4(0) == 0)\n\
    assert(fib4(1) == 0)\nassert(fib4(2) == 2)\nassert(fib4(3) == 0)\nassert(fib4(4)\
    \ == 2)\nassert(fib4(5) == 4)\nassert(fib4(6) == 8)\nassert(fib4(7) == 14)\nassert(fib4(8)\
    \ == 24)\nassert(fib4(9) == 42)\nassert(fib4(10) == 70)\nassert(fib4(11) == 116)\n\
    assert(fib4(12) == 190)", end, end, "    -- TODO: implement this function\nend",
  "    -- body\nend", "\tlocal a = 0\n\tlocal b = 0\n\tlocal c = 2\n\tlocal d = 0\n\
    \tfor _ = 1, n-3 do\n\t\td = a + b + c\n\t\ta = b\n\t\tb = c\n\t\tc = d\n\tend\n\
    \treturn d\nend", "  local a, b, c, d = 0, 0, 2, 0\n  local i = 3\n  while i <=\
    \ n do\n    a, b, c, d = b, c, d, a + b + c + d\n    i = i + 1\n  end\n  return\
    \ d\nend", "\tif n < 0 then return nil end\n\tif n == 0 then return 0 end\n\t\
    if n == 1 then return 0 end\n\tif n == 2 then return 2 end\n\tif n == 3 then return\
    \ 0 end\n\tlocal f, f1, f2, f3, f4 = 0, 0, 2, 0, 0\n\tfor i = 4, n do\n\t\tf =\
    \ f1 + f2 + f3 + f4\n\t\tf1, f2, f3, f4 = f2, f3, f4, f\n\tend\n\treturn f\nend",
  "\tif n < 0 then\n\t\treturn 0\n\tend\n\tif n == 0 then\n\t\treturn 0\n\tend\n\t\
    if n == 1 then\n\t\treturn 0\n\tend\n\tif n == 2 then\n\t\treturn 2\n\tend\n\t\
    if n == 3 then\n\t\treturn 0\n\tend\n\tlocal t0 = 0\n\tlocal t1 = 0\n\tlocal t2\
    \ = 2\n\tlocal t3 = 0\n\tlocal t4 = 0\n\tfor i = 0, n - 4 do\n\t\tt4 = t0 + t1\
    \ + t2 + t3\n\t\tt0 = t1\n\t\tt1 = t2\n\t\tt2 = t3\n\t\tt3 = t4\n\tend\n\treturn\
    \ t4\nend", "\t-- your code here\n\tlocal a, b, c, d = 0, 0, 2, 0\n\tfor i = 2,\
    \ n do\n\t\td = a + b + c + d\n\t\ta = b\n\t\tb = c\n\t\tc = d\n\tend\n\treturn\
    \ d\nend", "\t-- FILL IN CODE HERE\nend", "  if n == 0 then return 0 end\n  if\
    \ n == 1 then return 0 end\n  if n == 2 then return 2 end\n  if n == 3 then return\
    \ 0 end\n  local a, b, c, d = 0, 0, 2, 0\n  for i = 4, n do\n    a, b, c, d =\
    \ b, c, d, a + b + c + d\n  end\n  return d\nend", "\tlocal a = 0\n\tlocal b =\
    \ 0\n\tlocal c = 2\n\tlocal d = 0\n\tfor i = 3, n do\n\t\td = a + b + c\n\t\t\
    a = b\n\t\tb = c\n\t\tc = d\n\tend\n\treturn d\nend", "\tassert(n>=0)\n\tlocal\
    \ a = 0\n\tlocal b = 0\n\tlocal c = 2\n\tlocal d = 0\n\tfor i=3,n do\n\t\td =\
    \ a + b + c + d\n\t\ta = b\n\t\tb = c\n\t\tc = d\n\tend\n\treturn a + b + c +\
    \ d\nend", "    local a, b, c, d = 0, 0, 2, 0\n    for i = 4, n do\n        a,\
    \ b, c, d = b, c, d, a + b + c + d\n    end\n    return d\nend", "\tlocal function\
    \ fib4(n, a, b, c, d)\n\t\tif n == 0 then return a end\n\t\tif n == 1 then return\
    \ b end\n\t\tif n == 2 then return c end\n\t\tif n == 3 then return d end\n\t\t\
    return fib4(n-1, b, c, d, a+b+c+d)\n\tend\n\treturn fib4(n, 0, 0, 2, 0)\nend",
  "    if n <= 0 then\n        return 0\n    end\n    if n == 1 then\n        return\
    \ 0\n    end\n    if n == 2 then\n        return 2\n    end\n    if n == 3 then\n\
    \        return 0\n    end\n    local first, second, third, fourth = 0, 0, 2,\
    \ 0\n    for i = 4, n do\n        local cur = first + second + third + fourth\n\
    \        first = second\n        second = third\n        third = fourth\n    \
    \    fourth = cur\n    end\n    return first + second + third + fourth\nend",
  "  if n == 0 then return 0 end\n  if n == 1 then return 0 end\n  if n == 2 then\
    \ return 2 end\n  if n == 3 then return 0 end\n  local p4 = 0\n  local p3 = 0\n\
    \  local p2 = 2\n  local p1 = 0\n  local nextfib = 0\n  for i = 4, n do\n    nextfib\
    \ = p1 + p2 + p3 + p4\n    p4 = p3\n    p3 = p2\n    p2 = p1\n    p1 = nextfib\n\
    \  end\n  return nextfib\nend", "    if n == 0 then\n        return 0\n    elseif\
    \ n == 1 then\n        return 0\n    elseif n == 2 then\n        return 2\n  \
    \  elseif n == 3 then\n        return 0\n    else\n        local a, b, c, d =\
    \ 0, 0, 2, 0\n        for i = 4, n do\n            a, b, c, d = b, c, d, a + b\
    \ + c + d\n        end\n        return d\n    end\nend", "\tassert(n >= 0, 'fib4(n)\
    \ requires n >= 0')\n\tlocal a, b, c, d = 0, 0, 2, 0\n\tfor i = 1, n do\n\t\t\
    a, b, c, d = b, c, d, a + b + c + d\n\tend\n\treturn a\nend", "\tif n < 0 then\
    \ return nil end\n\tif n == 0 then return 0 end\n\tif n == 1 then return 0 end\n\
    \tif n == 2 then return 2 end\n\tif n == 3 then return 0 end\n\tlocal a, b, c,\
    \ d = 0, 0, 2, 0\n\tfor i = 4, n do\n\t\ta, b, c, d = b, c, d, a + b + c + d\n\
    \tend\n\treturn d\nend", "  -- TODO: Please complete this function.\nend", " \
    \   if n <= 0 then\n        return 0\n    end\n    local a, b, c, d = 0, 0, 2,\
    \ 0\n    for i = 2, n do\n        a, b, c, d = b, c, d, a + b + c + d\n    end\n\
    \    return d\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

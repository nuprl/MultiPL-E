name: HumanEval_132_is_nested
language: lua
prompt: "-- Create a function that takes a string as input which contains only square\
  \ brackets.\n-- The function should return True if and only if there is a valid\
  \ subsequence of brackets \n-- where at least one bracket in the subsequence is\
  \ nested.\nlocal function is_nested(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_nested\n\
  \    lu.assertEquals(candidate('[[]]'), true)\n    lu.assertEquals(candidate('[]]]]]]][[[[[]'),\
  \ false)\n    lu.assertEquals(candidate('[][]'), false)\n    lu.assertEquals(candidate('[]'),\
  \ false)\n    lu.assertEquals(candidate('[[[[]]]]'), true)\n    lu.assertEquals(candidate('[]]]]]]]]]]'),\
  \ false)\n    lu.assertEquals(candidate('[][][[]]'), true)\n    lu.assertEquals(candidate('[[]'),\
  \ false)\n    lu.assertEquals(candidate('[]]'), false)\n    lu.assertEquals(candidate('[[]][['),\
  \ true)\n    lu.assertEquals(candidate('[[][]]'), true)\n    lu.assertEquals(candidate(''),\
  \ false)\n    lu.assertEquals(candidate('[[[[[[[['), false)\n    lu.assertEquals(candidate(']]]]]]]]'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local open_brackets = {\n        ['('] = true,\n        [')'] =\
    \ true,\n        ['['] = true,\n        [']'] = true,\n        ['{'] = true,\n\
    \        ['}'] = true,\n        ['<'] = true,\n        ['>'] = true,\n       \
    \ ['&'] = true,\n        ['|'] = true,\n        ['^'] = true,\n        ['~'] =\
    \ true,\n        ['?'] = true,\n        ['.'] = true,\n    }\n    local close_brackets\
    \ = {\n        ['('] = false,\n        [')'] = false,\n        ['['] = false,\n\
    \        [']'] = false,\n        ['{'] = false,\n        ['}'] = false,\n    \
    \    ['<'] = false,\n        ['>'] = false,\n        ['&'] = false,\n        ['|']\
    \ = false,\n        ['^'] = false,\n        ['~'] = false,\n        ['?'] = false,\n\
    \        ['.'] = false,\n    }\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_stack = {}\n    local close_brackets_stack = {}\n\
    \    for i = 1, #string do\n        if open_brackets[string[i]] then\n       \
    \     open_brackets_count = open_brackets_count + 1\n            open_brackets_stack[open_brackets_count]\
    \ = string[i]\n        elseif close_brackets[string[i]] then\n            close_brackets_count\
    \ = close_brackets_count + 1\n            close_brackets_stack[close_brackets_count]\
    \ = string[i]\n        elseif open_brackets_count > 0 and close_brackets_count\
    \ == 0 then\n            close_brackets_count = open_brackets_count\n        \
    \    close_brackets_stack = open_brackets_stack\n            open_brackets_count\
    \ = 0\n            open_brackets_stack = {}\n        end\n    end\n    return\
    \ close_brackets_count == open_brackets_count\nend", "  local open_brackets =\
    \ string.gsub(string, \"[\", \"\")\n  local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n  local open_brackets_count = string.len(open_brackets)\n  local\
    \ close_brackets_count = string.len(close_brackets)\n  local open_brackets_index\
    \ = open_brackets_count - 1\n  local close_brackets_index = open_brackets_count\
    \ - 1\n  local open_brackets_index_count = 0\n  local close_brackets_index_count\
    \ = 0\n  local open_brackets_index_list = []\n  local close_brackets_index_list\
    \ = []\n  local open_brackets_index_list_count = 0\n  local close_brackets_index_list_count\
    \ = 0\n  local open_brackets_index_list_list = []\n  local close_brackets_index_list_list\
    \ = []\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_count\
    \ = 0\n  local open_brackets_index_list_list_count = 0\n  local close_brackets_index_list_list_",
  "    local brackets = string.gsub(string, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = ", "  local open_brackets = {\n    [\"{\"] = 1\n  , [\"]\"} = 1\n\
    \  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"\
    } = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"}\
    \ = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  , [\"]\"} = 1\n  ,\
    \ [\"]\"} = 1\n  ", "    local open_brackets = {}\n    local close_brackets =\
    \ {}\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_index2 = 0\n    local close_brackets_index2 = 0\n    local open_brackets_index3\
    \ = 0\n    local close_brackets_index3 = 0\n    local open_brackets_index4 = 0\n\
    \    local close_brackets_index4 = 0\n    local open_brackets_index5 = 0\n   \
    \ local close_brackets_index5 = 0\n    local open_brackets_index6 = 0\n    local\
    \ close_brackets_index6 = 0\n    local open_brackets_index7 = 0\n    local close_brackets_index7\
    \ = 0\n    local open_brackets_index8 = 0\n    local close_brackets_index8 = 0\n\
    \    local open_brackets_index9 = 0\n    local close_brackets_index9 = 0\n   \
    \ local open_brackets_index10 = 0\n    local close_brackets_index10 = 0\n    local\
    \ open_brackets_index11 = 0\n    local close_brackets_index11 = 0\n    local open_brackets_index12\
    \ = 0\n    local close_brackets_index12 = 0\n    local open_brackets_index13 =\
    \ 0\n    local close_brackets_index13 = 0\n    local open_brackets_index14 = 0\n\
    \    local close_brackets_index14 = 0\n    local open_brackets_index15 = 0\n \
    \   local close_brackets_index15 = 0\n    local open_brackets_index16 = 0\n  \
    \  local close_brackets_index16 = 0\n    local open_brackets_index17 = 0\n   \
    \ local close_brackets_index17 = 0\n    local open_brackets_index18 = 0\n    local\
    \ close_brackets_index18 = 0\n    local open_brackets_index19 = 0\n    local close_brackets_index19\
    \ = 0\n    local open_brackets_index20 = 0\n    local close_brackets_index20 =\
    \ 0\n    local open_brackets_index21 = 0\n    local close_brackets_index21 = 0\n\
    \    local open_brackets_index22 = 0\n    local close_brackets_", "    local brackets\
    \ = {\n        ['('] = true,\n        [')'] = true,\n        ['['] = true,\n \
    \       [']'] = true,\n        ['{'] = true,\n        ['}'] = true,\n    }\n \
    \   local open_brackets = #string - #string % 2\n    for i = 1, open_brackets\
    \ do\n        if brackets[string[i]] then\n            return true\n        end\n\
    \    end\n    return false\nend", "\tlocal brackets = {\n\t\t[\"{\"]  = true,\n\
    \t\t[\"}\"]  = true,\n\t\t[\"[\"]  = true,\n\t\t[\"]\"]  = true,\n\t\t[\"(\"]\
    \  = true,\n\t\t[\"](\" = true\n\t}", "  local brackets = {\n    ['('] = true,\n\
    \    [')'] = true,\n    ['['] = true,\n    [']'] = true,\n    ['{'] = true,\n\
    \    ['}'] = true,\n    ['<'] = true,\n    ['>'] = true,\n    ['+'] = true,\n\
    \    ['-'] = true,\n    ['*'] = true,\n    ['/'] = true,\n    ['%'] = true,\n\
    \    ['^'] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.'] = true,\n    [','] = true,\n    [';'] = true,\n    [':'] = true,\n\
    \    ['|'] = true,\n    ['~'] = true,\n    ['?'] = true,\n    ['!'] = true,\n\
    \    ['='] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.'] = true,\n    [','] = true,\n    [';'] = true,\n    [':'] = true,\n\
    \    ['|'] = true,\n    ['~'] = true,\n    ['?'] = true,\n    ['!'] = true,\n\
    \    ['='] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.'] = true,\n    [','] = true,\n    [';'] = true,\n    [':'] = true,\n\
    \    ['|'] = true,\n    ['~'] = true,\n    ['?'] = true,\n    ['!'] = true,\n\
    \    ['='] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.'] = true,\n    [','] = true,\n    [';'] = true,\n    [':'] = true,\n\
    \    ['|'] = true,\n    ['~'] = true,\n    ['?'] = true,\n    ['!'] = true,\n\
    \    ['='] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.'] = true,\n    [','] = true,\n    [';'] = true,\n    [':'] = true,\n\
    \    ['|'] = true,\n    ['~'] = true,\n    ['?'] = true,\n    ['!'] = true,\n\
    \    ['='] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.'] = true,\n    [','] = true,\n    [';'] = true,\n    [':'] = true,\n\
    \    ['|'] = true,\n    ['~'] = true,\n    ['?'] = true,\n    ['!'] = true,\n\
    \    ['='] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.'] = true,\n    [','] = true,\n    [';'] = true,\n    [':'] = true,\n\
    \    ['|'] = true,\n    ['~'] = true,\n    ['?'] = true,\n    ['!'] = true,\n\
    \    ['='] = true,\n    ['|'] = true,\n    ['&'] = true,\n    ['?'] = true,\n\
    \    ['.", "    local open_brackets = {\n        [\"(\"] = true,\n        [\"\
    )\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"\
    ] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] =\
    \ true,\n        [\"[<\"] = true,\n        [\">>\"] = true,\n        [\"[>\"]\
    \ = true,\n        [\"{<\"] = true,\n        [\"}>\"] = true,\n        [\"{>\"\
    ] = true,\n    }\n    local close_brackets = {\n        [\"(\"] = true,\n    \
    \    [\")\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n     \
    \   [\"{\"] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n      \
    \  [\">\"] = true,\n        [\"[<\"] = true,\n        [\">>\"] = true,\n     \
    \   [\"[>\"] = true,\n        [\"{<\"] = true,\n        [\"}>\"] = true,\n   \
    \     [\"{>\"] = true,\n    }\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_stack = {}\n    local close_brackets_stack = {}\n\
    \    for i = 1, #string do\n        if open_brackets[string[i]] then\n       \
    \     open_brackets_count = open_brackets_count + 1\n            open_brackets_stack[open_brackets_count]\
    \ = string[i]\n        elseif close_brackets[string[i]] then\n            close_brackets_count\
    \ = close_brackets_count + 1\n            close_brackets_stack[close_brackets_count]\
    \ = string[i]\n        elseif open_brackets_count > 0 and close_brackets_count\
    \ > 0 then\n            local open_brackets_count = open_brackets_count - 1\n\
    \            local close_brackets_count = close_brackets_count - 1\n         \
    \   if open_brackets_count <= 0 and close_brackets_count <= 0 then\n         \
    \       return true\n            end\n        end\n    end\n    return false\n\
    end", "   local brackets = {\n      [\"[\"]=true,\n      [\"{\"]=true,\n     \
    \ [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n      [\"+\"]=true,\n\
    \      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n\
    \      [\"+\"]=true,\n      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n\
    \      [\"[\"]=true,\n      [\"+\"]=true,\n      [\"-\"]=true,\n      [\"(\"]=true,\n\
    \      [\"<\"]=true,\n      [\"[\"]=true,\n      [\"+\"]=true,\n      [\"-\"]=true,\n\
    \      [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n      [\"+\"]=true,\n\
    \      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n\
    \      [\"+\"]=true,\n      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n\
    \      [\"[\"]=true,\n      [\"+\"]=true,\n      [\"-\"]=true,\n      [\"(\"]=true,\n\
    \      [\"<\"]=true,\n      [\"[\"]=true,\n      [\"+\"]=true,\n      [\"-\"]=true,\n\
    \      [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n      [\"+\"]=true,\n\
    \      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n\
    \      [\"+\"]=true,\n      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n\
    \      [\"[\"]=true,\n      [\"+\"]=true,\n      [\"-\"]=true,\n      [\"(\"]=true,\n\
    \      [\"<\"]=true,\n      [\"[\"]=true,\n      [\"+\"]=true,\n      [\"-\"]=true,\n\
    \      [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n      [\"+\"]=true,\n\
    \      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n      [\"[\"]=true,\n\
    \      [\"+\"]=true,\n      [\"-\"]=true,\n      [\"(\"]=true,\n      [\"<\"]=true,\n\
    \      [\"[\"]=true,\n      [\"+\"]=true,\n      [\"-\"]=", "    local brackets\
    \ = {\n        [\"(\"] = true,\n        [\")\"] = true,\n        [\"[\"] = true,\n\
    \        [\"]\"] = true,\n        [\"{\"] = true,\n        [\"}\"] = true,\n \
    \       [\"<\"] = true,\n        [\">\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"]\"] = true,\n        [\"[\"] = true,\n        [\"(\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        ", "    local brackets\
    \ = {\n        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"{\"]=true,\n \
    \       [\"}\"]=true,\n        [\"(\"]=true,\n        [\")\"]=true,\n        [\"\
    [\"]=true,\n        [\"]\"]=true,\n        [\"[\"]=true,\n        [\"(\"]=true,\n\
    \        [\"[\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n    }\n\
    \    local opening_brackets = {\n        [\"(\"]=true,\n        [\"[\"]=true,\n\
    \        [\"{\"]=true,\n        [\"[\"]=true,\n    }\n    local closing_brackets\
    \ = {\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"]=true,\n \
    \       [\"[\"]=true,\n        [\"}\"]=true,\n    }\n    local opening_closing_brackets\
    \ = {\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"]=true,\n \
    \       [\"[\"]=true,\n        [\"}\"]=true,\n        [\"}\"]=true,\n    }\n \
    \   local opening_closing_brackets_count = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_count_min = 0\n    local opening_closing_brackets_count_max\
    \ = 0\n    local opening_closing_brackets_", "\tlocal brackets = string.gsub(string,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = ", "    local\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets =\
    \ string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count_plus_1\
    \ = open_brackets_count + 1\n    local close_brackets_count_plus_1 = close_brackets_count\
    \ + 1\n    local open_brackets_count_minus_1 = open_brackets_count - 1\n    local\
    \ close_brackets_count_minus_1 = close_brackets_count - 1\n    local open_brackets_count_minus_1_plus_1\
    \ = open_brackets_count_minus_1 + 1\n    local close_brackets_count_minus_1_plus_1\
    \ = close_brackets_count_minus_1 + 1\n    local open_brackets_count_minus_1_minus_1\
    \ = open_brackets_count_minus_1 - 1\n    local close_brackets_count_minus_1_minus_1\
    \ = close_brackets_count_minus_1 - 1\n    local open_brackets_count_minus_1_minus_1_plus_1\
    \ = open_brackets_count_minus_1_minus_1 + 1\n    local close_brackets_count_minus_1_minus_1_plus_1\
    \ = close_brackets_count_minus_1_minus_1 + 1\n    local open_brackets_count_minus_1_minus_1_minus_1\
    \ = open_brackets_count_minus_1_minus_1 - 1\n    local close_brackets_count_minus_1_minus_1_minus_1\
    \ = close_brackets_count_minus_1_minus_1 - 1\n    local open_brackets_count_minus_1_minus_1_minus_1_plus_1\
    \ = open_brackets_count_minus_1_minus_1_minus_1 + 1\n    local close_brackets_count_minus_1_minus_1_minus_1_plus_1\
    \ = close_brackets_count_minus_1_minus_1_minus_1_plus_1 + 1\n    local open_brackets_count_minus_1_minus_1_minus_1_minus_1\
    \ = open_brackets_count_minus_1_minus_1_minus_1 - 1\n    local close_brackets_count_minus_1_minus_1_minus_1_minus_1\
    \ = close_brackets_count_minus_1_minus_1_minus_1_minus_1 + 1\n    local open_bra",
  "    local brackets = {\n        ['('] = true,\n        [')'] = true,\n        ['{']\
    \ = true,\n        ['}'] = true,\n        ['['] = true,\n        [']'] = true,\n\
    \        ['<'] = true,\n        ['>'] = true,\n        ['+'] = true,\n       \
    \ ['-'] = true,\n        ['*'] = true,\n        ['/'] = true,\n        ['%'] =\
    \ true,\n        ['^'] = true,\n        ['&'] = true,\n        ['|'] = true,\n\
    \        ['?'] = true,\n        ['.'] = true,\n        [' '] = true,\n       \
    \ ['\\n'] = true,\n        ['\\t'] = true,\n        ['\\r'] = true,\n        ['\
    \ '] = true,\n    }\n    local open_brackets = {}\n    local close_brackets =\
    \ {}\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    local open_brackets_index = 0\n    local close_brackets_index = 0\n    for\
    \ i = 1, #string do\n        if brackets[string[i]] then\n            if open_brackets[open_brackets_index]\
    \ then\n                close_brackets[close_brackets_index] = true\n        \
    \        close_brackets_index = close_brackets_index + 1\n            else\n \
    \               open_brackets[open_brackets_index] = true\n                open_brackets_index\
    \ = open_brackets_index + 1\n            end\n        elseif open_brackets[open_brackets_index]\
    \ then\n            close_brackets[close_brackets_index] = true\n            close_brackets_index\
    \ = close_brackets_index + 1\n        elseif close_brackets[close_brackets_index]\
    \ then\n            open_brackets[open_brackets_index] = true\n            open_brackets_index\
    \ = open_brackets_index + 1\n        end\n    end\n    return open_brackets_count\
    \ == close_brackets_count\nend", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_count_plus_one = open_brackets_count\
    \ + 1\n    local close_brackets_count_plus_one = close_brackets_count + 1\n  \
    \  local open_brackets_count_minus_one = open_brackets_count - 1\n    local close_brackets_count_minus_one\
    \ = close_brackets_count - 1\n    local open_brackets_count_minus_one_plus_one\
    \ = open_brackets_count_minus_one + 1\n    local close_brackets_count_minus_one_plus_one\
    \ = close_brackets_count_minus_one + 1\n    local open_brackets_count_minus_one_minus_one\
    \ = open_brackets_count_minus_one - 1\n    local close_brackets_count_minus_one_minus_one\
    \ = close_brackets_count_minus_one - 1\n    local open_brackets_count_minus_one_minus_one_plus_one\
    \ = open_brackets_count_minus_one_minus_one + 1\n    local close_brackets_count_minus_one_minus_one_plus_one\
    \ = close_brackets_count_minus_one_minus_one + 1\n    local open_brackets_count_minus_one_minus_one_minus_one\
    \ = open_brackets_count_minus_one_minus_one - 1\n    local close_brackets_count_minus_one_minus_one_minus_one\
    \ = close_brackets_count_minus_one_minus_one - 1\n    local open_brackets_count_minus_one_minus_one_minus_one_plus_one\
    \ = open_brackets_count_minus_one_minus_one_minus_one + 1\n    local close_brackets_count_minus_one_minus_one_minus_one_plus_one\
    \ = close_brackets_count_minus_one_minus_one_minus_one + 1\n    local open_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = open_brackets_count_minus_one_minus_one_minus_one - 1\n    local close_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = close_brackets_count_minus_one_minus_", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_count_diff = open_brackets_count\
    \ - close_brackets_count\n    local close_brackets_count_diff = close_brackets_count\
    \ - open_brackets_count\n    local open_brackets_count_diff_2 = open_brackets_count\
    \ - close_brackets_count * 2\n    local close_brackets_count_diff_2 = close_brackets_count\
    \ * 2 - open_brackets_count\n    local open_brackets_count_diff_3 = open_brackets_count\
    \ - close_brackets_count * 3\n    local close_brackets_count_diff_3 = close_brackets_count\
    \ * 3 - open_brackets_count\n    local open_brackets_count_diff_4 = open_brackets_count\
    \ - close_brackets_count * 4\n    local close_brackets_count_diff_4 = close_brackets_count\
    \ * 4 - open_brackets_count\n    local open_brackets_count_diff_5 = open_brackets_count\
    \ - close_brackets_count * 5\n    local close_brackets_count_diff_5 = close_brackets_count\
    \ * 5 - open_brackets_count\n    local open_brackets_count_diff_6 = open_brackets_count\
    \ - close_brackets_count * 6\n    local close_brackets_count_diff_6 = close_brackets_count\
    \ * 6 - open_brackets_count\n    local open_brackets_count_diff_7 = open_brackets_count\
    \ - close_brackets_count * 7\n    local close_brackets_count_diff_7 = close_brackets_count\
    \ * 7 - open_brackets_count\n    local open_brackets_count_diff_8 = open_brackets_count\
    \ - close_brackets_count * 8\n    local close_brackets_count_diff_8 = close_brackets_count\
    \ * 8 - open_brackets_count\n    local open_brackets_count_diff_9 = open_brackets_count\
    \ - close_brackets_count * 9\n    local close_brackets_count_diff_9 = close_brackets_count\
    \ * 9 - open_brackets_count\n    ", "    local brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = ", "   \
    \ local brackets = string.gsub(string, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = ", "    local open_brackets = {\n        [\"(\"] = true,\n      \
    \  [\")\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n       \
    \ [\"{\"] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n        [\"\
    >\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"[\"\
    ] = true,\n        [\"(\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = ",
  "  -- Create a stack to keep track of brackets\n  local stack = {}\n  -- Iterate\
    \ through each character in the string\n  for i = 1, #string do\n    -- If the\
    \ character is a left bracket, push it to the stack\n    if string[i] == \"[\"\
    \ then\n      table.insert(stack, string[i])\n    -- If the character is a right\
    \ bracket, pop it from the stack\n    elseif string[i] == \"]\" then\n      --\
    \ If the stack is empty, then the string is not nested\n      if #stack == 0 then\n\
    \        return false\n      -- Otherwise, if the stack is not empty, then the\
    \ string is not nested\n      else\n        -- Pop the top element from the stack\n\
    \        stack[#stack] = nil\n      end\n    end\n  end\n  -- If the stack is\
    \ not empty, then the string is not nested\n  return #stack == 0\nend", "    local\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets =\
    \ string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count\
    \ = open_brackets_count + close_brackets_count\n    return open_brackets_count\
    \ % 2 == 1\nend", "    local brackets = {\n        [\"[\"]=true,\n        [\"\
    ]\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n        [\"(\"]=true,\n\
    \        [\")\"]=true,\n        [\"[\"]=true,\n        [\"]\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"\
    ]=true,\n        [\"}\"]=true,\n        [\"<\"]=true,\n        [\"=\"]=true,\n\
    \        [\">\"]=true,\n        [\"~\"]=true,\n        [\"^\"]=true,\n       \
    \ [\"%\"]=true,\n        [\"*\"]=true,\n        [\"+\"]=true,\n        [\"-\"\
    ]=true,\n        [\"|\"]=true,\n        [\"&\"]=true,\n        [\"!\"]=true,\n\
    \        [\"=\"]=true,\n        [\"<\"]=true,\n        [\"=\"]=true,\n       \
    \ [\">\"]=true,\n        [\"~\"]=true,\n        [\"^\"]=true,\n        [\"%\"\
    ]=true,\n        [\"*\"]=true,\n        [\"+\"]=true,\n        [\"-\"]=true,\n\
    \        [\"|\"]=true,\n        [\"&\"]=true,\n        [\"!\"]=true,\n       \
    \ [\"=\"]=true,\n        [\"<\"]=true,\n        [\"=\"]=true,\n        [\">\"\
    ]=true,\n        [\"~\"]=true,\n        [\"^\"]=true,\n        [\"%\"]=true,\n\
    \        [\"*\"]=true,\n        [\"+\"]=true,\n        [\"-\"]=true,\n       \
    \ [\"|\"]=true,\n        [\"&\"]=true,\n        [\"!\"]=true,\n        [\"=\"\
    ]=true,\n        [\"<\"]=true,\n        [\"=\"]=true,\n        [\">\"]=true,\n\
    \        [\"~\"]=true,\n        [\"^\"]=true,\n        [\"%\"]=true,\n       \
    \ [\"*\"]=true,\n        [\"+\"]=true,\n        [\"-\"]=true,\n        [\"|\"\
    ]=true,\n        [\"&\"]=true,\n        [\"!\"]=true,\n        [\"=\"]=true,\n\
    \        [\"<\"]=true,\n        [\"=\"]=true,\n        [\">\"]=true,\n       \
    \ [\"~\"]=true,\n        [\"^\"]=true,\n        [\"%\"]=true,\n        [\"*\"\
    ]=true,\n        [\"+\"]=true,\n        [\"-\"]=true,\n        [\"|\"]=true,",
  "    local open_brackets = {'[', '{', '('}\n    local close_brackets = {']', '}',\
    \ '}'} -- Note that this list does not include ']' because it is \n          \
    \                                      -- not nested.\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n\
    \    local close_brackets_index = 0\n    local open_brackets_index_count = 0\n\
    \    local close_brackets_index_count = 0\n    local open_brackets_index_index\
    \ = 0\n    local close_brackets_index_index = 0\n    local open_brackets_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_brackets_index_index_index_count = 0\n    local open_brackets_index_index_index_index\
    \ = 0\n    local close_bra", "    local open_brackets = string.gsub(string, \"\
    [\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n    local\
    \ open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = close_brackets_count - 1\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count_max\
    \ = 0\n    local close_brackets_index_count_max = 0\n    local open_brackets_index_count_min\
    \ = 0\n    local close_brackets_index_count_min = 0\n    local open_brackets_index_count_min_index\
    \ = 0\n    local close_brackets_index_count_min_index = 0\n    local open_brackets_index_count_max_index\
    \ = 0\n    local close_brackets_index_count_max_index = 0\n    local open_brackets_index_count_min_index\
    \ = 0\n    local close_brackets_index_count_min_index = 0\n    local open_brackets_index_count_max_index\
    \ = 0\n    local close_brackets_index_count_max_index = 0\n    local open_brackets_index_count_min_index\
    \ = 0\n    local close_brackets_index_count_min_index = 0\n    local open_brackets_index_count_max_index\
    \ = 0\n    local close_brackets_index_count_max_index = 0\n    local open_brackets_index_count_min_index\
    \ = 0\n    local close_brackets_index_count_min_index = 0\n    local open_brackets_index_count_max_index\
    \ = 0\n    local close_brackets_index_count_max_index = 0\n    local open_brackets_index_count_min_index\
    \ = 0\n    local close_brackets_index_count_min_index = 0\n    local open_brackets_index_count_max_index\
    \ = 0\n    local close_brackets_index_count_max_index = 0\n    local open_brackets_index_count_min_index\
    \ = 0\n    local close_brackets_index_count_min_index = 0\n    local open_brackets_index_count_max_index\
    \ = 0\n    local close_brackets_index_count_max_index = 0\n    local open_brackets_index_count_min_index\
    \ = 0\n    local close_brackets_index_count_min_index = 0\n    local open_brackets_index_count_max_index\
    \ = 0", "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local\
    \ close_brackets = string.gsub(string, \"]\", \"\")\n    local open_brackets_count\
    \ = string.len(open_brackets)\n    local close_brackets_count = string.len(close_brackets)\n\
    \    local open_brackets_count_plus_1 = open_brackets_count + 1\n    local close_brackets_count_plus_1\
    \ = close_brackets_count + 1\n    local open_brackets_count_minus_1 = open_brackets_count\
    \ - 1\n    local close_brackets_count_minus_1 = close_brackets_count - 1\n   \
    \ local open_brackets_count_minus_2 = open_brackets_count - 2\n    local close_brackets_count_minus_2\
    \ = close_brackets_count - 2\n    local open_brackets_count_minus_3 = open_brackets_count\
    \ - 3\n    local close_brackets_count_minus_3 = close_brackets_count - 3\n   \
    \ local open_brackets_count_minus_4 = open_brackets_count - 4\n    local close_brackets_count_minus_4\
    \ = close_brackets_count - 4\n    local open_brackets_count_minus_5 = open_brackets_count\
    \ - 5\n    local close_brackets_count_minus_5 = close_brackets_count - 5\n   \
    \ local open_brackets_count_minus_6 = open_brackets_count - 6\n    local close_brackets_count_minus_6\
    \ = close_brackets_count - 6\n    local open_brackets_count_minus_7 = open_brackets_count\
    \ - 7\n    local close_brackets_count_minus_7 = close_brackets_count - 7\n   \
    \ local open_brackets_count_minus_8 = open_brackets_count - 8\n    local close_brackets_count_minus_8\
    \ = close_brackets_count - 8\n    local open_brackets_count_minus_9 = open_brackets_count\
    \ - 9\n    local close_brackets_count_minus_9 = close_brackets_count - 9\n   \
    \ local open_brackets_count_minus_10 = open_brackets_count - 10\n    local close_brackets_count_minus_10\
    \ = close_brackets_count - 10\n    local open_brackets_count_minus_11 = open_brackets_",
  "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    return open_brackets ~= close_brackets\n\
    end", "\tlocal brackets = {\n\t\t[\"[\"]=true,\n\t\t[\"]\"]=true,\n\t\t[\"{\"\
    ]=true,\n\t\t[\"}\"]=true,\n\t\t[\"(\"]=true,\n\t\t[\")\"]=true,\n\t\t[\"[\"]=true,\n\
    \t\t[\"]\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"{\"]=true,\n\t\t[\"}\"]=true,\n\t\
    \t[\"(\"]=true,\n\t\t[\")\"]=true,\n\t}\n\tlocal opening_brackets = #string >\
    \ 0\n\tlocal closing_brackets = #string > 0 and string[#string] == \")\"\n\tlocal\
    \ open_brackets = #string > 0 and string[#string] == \"]\"\n\tlocal close_brackets\
    \ = #string > 0 and string[#string] == \"}\"\n\tlocal opening_curly = #string\
    \ > 0 and string[#string] == \"]\"\n\tlocal close_curly = #string > 0 and string[#string]\
    \ == \"}\"\n\tlocal opening_square = #string > 0 and string[#string] == \"]\"\n\
    \tlocal close_square = #string > 0 and string[#string] == \"}\"\n\tlocal opening_curly_square\
    \ = #string > 0 and string[#string] == \"]\"\n\tlocal closed_curly_square = #string\
    \ > 0 and string[#string] == \"}\"\n\tlocal opening_curly_curly = #string > 0\
    \ and string[#string] == \"]\"\n\tlocal closed_curly_curly = #string > 0 and string[#string]\
    \ == \"}\"\n\tlocal opening_square_square = #string > 0 and string[#string] ==\
    \ \"]\"\n\tlocal closed_square_square = #string > 0 and string[#string] == \"\
    }\"\n\tlocal opening_curly_curly_square = #string > 0 and string[#string] == \"\
    ]\"\n\tlocal closed_curly_curly_square = #string > 0 and string[#string] == \"\
    }\"\n\tlocal opening_square_curly_square = #string > 0 and string[#string] ==\
    \ \"]\"\n\tlocal closed_square_curly_square = #string > 0 and string[#string]\
    \ == \"}\"\n\tlocal opening_curly_curly_curly_square = #string > 0 and string[#string]\
    \ == \"]\"\n\tlocal closed_curly_curly_curly_square = #string > 0 and string[#string]\
    \ == \"}\"\n\tlocal opening_square_square_square = #string > 0 and string[#string]\
    \ == \"]\"\n\t", "    local brackets = {\n        [\"(\"] = true,\n        [\"\
    )\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"\
    ] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] =\
    \ true,\n        [\"+\"] = true,\n        [\"-\"] = true,\n        [\"*\"] = true,\n\
    \        [\"/\"] = true,\n        [\"%\"] = true,\n        [\"^\"] = true,\n \
    \       [\"~\"] = true,\n        [\"=\"] = true,\n        [\"|\"] = true,\n  \
    \      [\"&\"] = true,\n        [\"!\"] = true,\n        [\"?\"] = true,\n   \
    \     [\".\"] = true,\n    }\n    local open_brackets = false\n    local close_brackets\
    \ = false\n    local open_brackets_count = 0\n    local close_brackets_count =\
    \ 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n \
    \   local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_bracket", "  local open_brackets = string.gsub(string, \"\
    [\", \"\")\n  local close_brackets = string.gsub(string, \"]\", \"\")\n  local\
    \ open_brackets_count = string.len(open_brackets)\n  local close_brackets_count\
    \ = string.len(close_brackets)\n  local open_brackets_count_plus_1 = open_brackets_count\
    \ + 1\n  local close_brackets_count_plus_1 = close_brackets_count + 1\n  local\
    \ open_brackets_count_minus_1 = open_brackets_count - 1\n  local close_brackets_count_minus_1\
    \ = close_brackets_count - 1\n  local open_brackets_count_minus_1_plus_1 = open_brackets_count_minus_1\
    \ + 1\n  local close_brackets_count_minus_1_plus_1 = close_brackets_count_minus_1\
    \ + 1\n  local open_brackets_count_minus_1_minus_1 = open_brackets_count_minus_1\
    \ - 1\n  local close_brackets_count_minus_1_minus_1 = close_brackets_count_minus_1\
    \ - 1\n  local open_brackets_count_minus_1_minus_1_plus_1 = open_brackets_count_minus_1_minus_1\
    \ + 1\n  local close_brackets_count_minus_1_minus_1_plus_1 = close_brackets_count_minus_1_minus_1\
    \ + 1\n  local open_brackets_count_minus_1_minus_1_minus_1 = open_brackets_count_minus_1_minus_1\
    \ - 1\n  local close_brackets_count_minus_1_minus_1_minus_1 = close_brackets_count_minus_1_minus_1\
    \ - 1\n  local open_brackets_count_minus_1_minus_1_minus_1_plus_1 = open_brackets_count_minus_1_minus_1_minus_1\
    \ + 1\n  local close_brackets_count_minus_1_minus_1_minus_1_plus_1 = close_brackets_count_minus_1_minus_1_minus_1_plus_1\
    \ + 1\n  local open_brackets_count_minus_1_minus_1_minus_1_minus_1_plus_1 = open_brackets_count_minus_1_minus_1_minus_1_minus_1_plus_1\
    \ - 1\n  local close_brackets_count_minus_1_minus_1_minus_1_minus_1_plus_1 = close_brackets_count_minus_1_minus_1_minus_1_min",
  "  local open_brackets = string.gsub(string, \"[\", \"\")\n  local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n  local open_brackets_count = string.len(open_brackets)\n\
    \  local close_brackets_count = string.len(close_brackets)\n  local open_brackets_count_plus_1\
    \ = open_brackets_count + 1\n  local close_brackets_count_plus_1 = close_brackets_count\
    \ + 1\n  local open_brackets_count_minus_1 = open_brackets_count - 1\n  local\
    \ close_brackets_count_minus_1 = close_brackets_count - 1\n  local open_brackets_count_minus_2\
    \ = open_brackets_count - 2\n  local close_brackets_count_minus_2 = close_brackets_count\
    \ - 2\n  local open_brackets_count_minus_3 = open_brackets_count - 3\n  local\
    \ close_brackets_count_minus_3 = close_brackets_count - 3\n  local open_brackets_count_minus_4\
    \ = open_brackets_count - 4\n  local close_brackets_count_minus_4 = close_brackets_count\
    \ - 4\n  local open_brackets_count_minus_5 = open_brackets_count - 5\n  local\
    \ close_brackets_count_minus_5 = close_brackets_count - 5\n  local open_brackets_count_minus_6\
    \ = open_brackets_count - 6\n  local close_brackets_count_minus_6 = close_brackets_count\
    \ - 6\n  local open_brackets_count_minus_7 = open_brackets_count - 7\n  local\
    \ close_brackets_count_minus_7 = close_brackets_count - 7\n  local open_brackets_count_minus_8\
    \ = open_brackets_count - 8\n  local close_brackets_count_minus_8 = close_brackets_count\
    \ - 8\n  local open_brackets_count_minus_9 = open_brackets_count - 9\n  local\
    \ close_brackets_count_minus_9 = close_brackets_count - 9\n  local open_brackets_count_minus_10\
    \ = open_brackets_count - 10\n  local close_brackets_count_minus_10 = close_brackets_count\
    \ - 10\n  local open_brackets_count_minus_11 = open_brackets_", "    local brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = ", "    local open_brackets = {\n        ['{'] = true,\n        ['}']\
    \ = true,\n        ['('] = true,\n        [')'] = true,\n        ['['] = true,\n\
    \        [']'] = true,\n        ['<'] = true,\n        ['>'] = true,\n       \
    \ ['+'] = true,\n        ['-'] = true,\n        ['*'] = true,\n        ['/'] =\
    \ true,\n        ['%'] = true,\n        ['^'] = true,\n        ['&'] = true,\n\
    \        ['|'] = true,\n        ['?'] = true,\n        [':'] = true,\n       \
    \ [';'] = true,\n        [' '] = true,\n    }\n    local close_brackets = {\n\
    \        ['{'] = true,\n        ['}'] = true,\n        ['('] = true,\n       \
    \ [')'] = true,\n        ['['] = true,\n        [']'] = true,\n        ['<'] =\
    \ true,\n        ['>'] = true,\n        ['+'] = true,\n        ['-'] = true,\n\
    \        ['*'] = true,\n        ['/'] = true,\n        ['%'] = true,\n       \
    \ ['^'] = true,\n        ['&'] = true,\n        ['|'] = true,\n        ['?'] =\
    \ true,\n        [':'] = true,\n        [';'] = true,\n        [' '] = true,\n\
    \    }\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    local open_brackets_stack = {}\n    local close_brackets_stack = {}\n   \
    \ for i = 1, #string do\n        if open_brackets[string[i]] then\n          \
    \  open_brackets_count = open_brackets_count + 1\n            open_brackets_stack[#open_brackets_stack\
    \ + 1] = string[i]\n        elseif close_brackets[string[i]] then\n          \
    \  close_brackets_count = close_brackets_count + 1\n            close_brackets_stack[#close_brackets_stack\
    \ + 1] = string[i]\n        elseif open_brackets_count > 0 and close_brackets_count\
    \ == 0 then\n            if open_brackets_stack[#open_brackets_stack + 1] == close_brackets_stack[#close_brackets_stack\
    \ + 1] then\n                return true\n            end\n        end\n    end\n\
    \    return false\nend", "    local brackets = {\n        ['('] = true,\n    \
    \    [')'] = true,\n        ['['] = true,\n        [']'] = true,\n        ['{']\
    \ = true,\n        ['}'] = true,\n        ['<'] = true,\n        ['>'] = true,\n\
    \        ['+'] = true,\n        ['-'] = true,\n        ['*'] = true,\n       \
    \ ['/'] = true,\n        ['%'] = true,\n        ['^'] = true,\n        ['&'] =\
    \ true,\n        ['|'] = true,\n        ['='] = true,\n        ['!'] = true,\n\
    \        ['?'] = true,\n        [':'] = true,\n        [';'] = true,\n       \
    \ ['.'] = true,\n        [','] = true,\n        [':'] = true,\n        [';'] =\
    \ true,\n        ['('] = true,\n        [')'] = true,\n        ['['] = true,\n\
    \        [']'] = true,\n        ['{'] = true,\n        ['}'] = true,\n       \
    \ ['<'] = true,\n        ['>'] = true,\n        ['+'] = true,\n        ['-'] =\
    \ true,\n        ['*'] = true,\n        ['/'] = true,\n        ['%'] = true,\n\
    \        ['^'] = true,\n        ['&'] = true,\n        ['|'] = true,\n       \
    \ ['='] = true,\n        ['!'] = true,\n        ['?'] = true,\n        [':'] =\
    \ true,\n        [';'] = true,\n        ['.'] = true,\n        [','] = true,\n\
    \        [':'] = true,\n        [';'] = true,\n    }\n    local open_brackets\
    \ = {}\n    local close_brackets = {}\n    for i = 1, #string do\n        if brackets[string[i]]\
    \ then\n            table.insert(open_brackets, string[i])\n        else\n   \
    \         table.insert(close_brackets, string[i])\n        end\n    end\n    local\
    \ open_brackets_count = #open_brackets\n    local close_brackets_count = #close_brackets\n\
    \    if open_brackets_count > close_brackets_count then\n        return true\n\
    \    elseif open_brackets_count < close_brackets_count then\n        return false\n\
    \    else\n        for i = 1, close_brackets_count do\n            if open_brackets[i]\
    \ == close_brackets[i] then\n                local open_brackets_index = open_brackets_count\
    \ - i\n                local close_brackets_index = close_brackets_count - i\n\
    \                local open_brackets_string = table.concat(open_brackets, open_brackets_index,\
    \ open_brackets_count - open_brackets_index)\n                local close_brackets_string\
    \ = table.concat(close_brackets, close_brackets_index, close_brackets_count -\
    \ close_bra", "  local brackets = {\n    [\"[\"]=true,\n    [\"{\"]=true,\n  \
    \  [\"(\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n    [\"<\"]=true,\n    [\"=\"]=true,\n  \
    \  [\"<\"]=true,\n    [\"=\"]=true,\n", "    local open_brackets = {\n       \
    \ ['('] = true,\n        [')'] = true,\n        ['['] = true,\n        [']'] =\
    \ true,\n        ['{'] = true,\n        ['}'] = true,\n    }\n    local close_brackets\
    \ = {\n        ['('] = true,\n        [')'] = true,\n        ['['] = true,\n \
    \       [']'] = true,\n        ['{'] = true,\n        ['}'] = true,\n    }\n \
    \   local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_stack\
    \ = {}\n    local close_brackets_stack = {}\n    local open_brackets_stack_index\
    \ = 0\n    local close_brackets_stack_index = 0\n    local open_brackets_stack_string\
    \ = ''\n    local close_brackets_stack_string = ''\n    for i = 1, #string do\n\
    \        if open_brackets[string[i]] then\n            open_brackets_stack[open_brackets_stack_index]\
    \ = string[i]\n            open_brackets_stack_string = open_brackets_stack_string\
    \ .. string[i]\n            open_brackets_index = open_brackets_stack_index\n\
    \            open_brackets_stack_index = open_brackets_stack_index + 1\n     \
    \   elseif close_brackets[string[i]] then\n            close_brackets_stack[close_brackets_stack_index]\
    \ = string[i]\n            close_brackets_stack_string = close_brackets_stack_string\
    \ .. string[i]\n            close_brackets_index = close_brackets_stack_index\n\
    \            close_brackets_stack_index = close_brackets_stack_index + 1\n   \
    \     elseif open_brackets_stack_index > 0 then\n            open_brackets_stack_index\
    \ = open_brackets_stack_index - 1\n        elseif close_brackets_stack_index >\
    \ 0 then\n            close_brackets_stack_index = close_brackets_stack_index\
    \ - 1\n        elseif open_brackets_stack_index == 0 and close_brackets_stack_index\
    \ == 0 then\n            if open_brackets_stack_index > 0 and close_brackets_stack_index\
    \ > 0 then\n                if open_brackets_stack[open_brackets_stack_index]\
    \ == close_brackets_stack[close_brackets_stack_index] then\n                 \
    \   open_brackets_count = open_brackets_count + 1\n                else\n    \
    \                close_bra", "    local brackets = {\n        ['('] = true,\n\
    \        [')'] = true,\n        ['['] = true,\n        [']'] = true,\n       \
    \ ['{'] = true,\n        ['}'] = true,\n        ['<'] = true,\n        ['>'] =\
    \ true,\n        ['+'] = true,\n        ['-'] = true,\n        ['*'] = true,\n\
    \        ['/'] = true,\n        ['%'] = true,\n        ['^'] = true,\n       \
    \ ['&'] = true,\n        ['|'] = true,\n        ['='] = true,\n        ['!'] =\
    \ true,\n        ['?'] = true,\n        ['.'] = true,\n    }\n    local open_brackets\
    \ = false\n    local close_brackets = false\n    local open_brackets_count = 0\n\
    \    local close_brackets_count = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_index_count = 0\n    local\
    \ close_brackets_index_count = 0\n    local open_brackets_index_index = 0\n  \
    \  local close_brackets_index_index = 0\n    local open_brackets_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open", "    local\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets =\
    \ string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_index\
    \ = open_brackets_count - 1\n    local close_brackets_index = close_brackets_count\
    \ - 1\n    local open_brackets_index_in_string = 0\n    local close_brackets_index_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local close_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ open_brackets_index_in_string_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local close_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ open_brackets_index_in_string_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local close_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ open_brackets_index_in_string_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local ", "    local brackets = {\n        ['('] = true,\n        [')']\
    \ = true,\n        ['{'] = true,\n        ['}'] = true,\n        ['['] = true,\n\
    \        [']'] = true,\n        ['<'] = true,\n        ['>'] = true,\n       \
    \ ['+'] = true,\n        ['-'] = true,\n        ['*'] = true,\n        ['/'] =\
    \ true,\n        ['%'] = true,\n        ['^'] = true,\n        ['&'] = true,\n\
    \        ['|'] = true,\n        ['?'] = true,\n        ['.'] = true,\n       \
    \ [' '] = true,\n    }\n    local open_brackets = false\n    local close_brackets\
    \ = false\n    local open_brackets_count = 0\n    local close_brackets_count =\
    \ 0\n    local open_brackets_stack = {}\n    local close_brackets_stack = {}\n\
    \    local open_brackets_stack_index = 0\n    local close_brackets_stack_index\
    \ = 0\n    local open_brackets_stack_index2 = 0\n    local close_brackets_stack_index2\
    \ = 0\n    for i = 1, #string do\n        if brackets[string[i]] then\n      \
    \      if open_brackets == false then\n                open_brackets = true\n\
    \                open_brackets_stack[open_brackets_stack_index] = string[i]\n\
    \                open_brackets_stack_index = open_brackets_stack_index + 1\n \
    \           else\n                if open_brackets_stack[open_brackets_stack_index]\
    \ == string[i] then\n                    open_brackets_stack_index = open_brackets_stack_index\
    \ + 1\n                else\n                    if open_brackets_stack_index\
    \ == #open_brackets_stack then\n                        open_brackets = false\n\
    \                    else\n                        open_brackets_stack[open_brackets_stack_index]\
    \ = string[i]\n                        open_brackets_stack_index = open_brackets_stack_index\
    \ + 1\n                    end\n                end\n            end\n       \
    \ else\n            if close_brackets == false then\n                close_brackets\
    \ = true\n                close_brackets_stack[close_brackets_stack_index] = string[i]\n\
    \                close_brackets_stack_index = close_brackets_stack_index + 1\n\
    \            else\n                if close_brackets_stack[close_brackets_stack_index]\
    \ == string[i] then\n                    close_brackets_stack_index = close_brackets_stack_index\
    \ + 1\n                else\n                    if close_brackets_stack_index\
    \ == #close_brackets_stack then\n                        close_brackets = false",
  "    local brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n     \
    \   [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n      \
    \  [\"[<\"] = true,\n        [\">>\"] = true,\n        [\"[>\"] = true,\n    \
    \    [\"{<\"] = true,\n        [\"}>\"] = true,\n        [\"{>\"] = true,\n  \
    \  }\n    local open_brackets = false\n    local close_brackets = false\n    local\
    \ open_brackets_count = 0\n    local close_brackets_count = 0\n    for i = 1,\
    \ #string do\n        if brackets[string[i]] then\n            if open_brackets\
    \ == false then\n                open_brackets = true\n                open_brackets_count\
    \ = open_brackets_count + 1\n            elseif open_brackets_count > 1 then\n\
    \                return false\n            end\n        elseif open_brackets ==\
    \ true then\n            if close_brackets == false then\n                close_brackets\
    \ = true\n                close_brackets_count = close_brackets_count + 1\n  \
    \          elseif close_brackets_count > 1 then\n                return false\n\
    \            end\n        end\n    end\n    return true\nend", "    local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    return open_brackets ~= close_brackets\nend", '    local brackets
    = {[["("]]=true,[["["]]=true,[["{"]]=true,[["[".."]"]]=true,[["[".."[".."]"]]=true,[["[".."{".."]"]]=true,[["[".."[".."{".."]"]]=true,[["[".."{".."[".."]"]]=true,[["[".."[".."[".."]"]]=true,[["[".."[".."{".."[".."]"]]=true,[["[".."[".."[".."{".."]"]]=true,[["[".."[".."[".."{".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."]"]]=true,[["[".."[".."[".."{".."[".."[".."[".."]"]]=true,[["[".."[".."[".."',
  "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count_plus_one\
    \ = open_brackets_count + 1\n    local close_brackets_count_plus_one = close_brackets_count\
    \ + 1\n    local open_brackets_count_minus_one = open_brackets_count - 1\n   \
    \ local close_brackets_count_minus_one = close_brackets_count - 1\n    local open_brackets_count_minus_one_plus_one\
    \ = open_brackets_count_minus_one + 1\n    local close_brackets_count_minus_one_plus_one\
    \ = close_brackets_count_minus_one + 1\n    local open_brackets_count_minus_one_minus_one\
    \ = open_brackets_count_minus_one - 1\n    local close_brackets_count_minus_one_minus_one\
    \ = close_brackets_count_minus_one - 1\n    local open_brackets_count_minus_one_minus_one_plus_one\
    \ = open_brackets_count_minus_one_minus_one + 1\n    local close_brackets_count_minus_one_minus_one_plus_one\
    \ = close_brackets_count_minus_one_minus_one + 1\n    local open_brackets_count_minus_one_minus_one_minus_one\
    \ = open_brackets_count_minus_one_minus_one - 1\n    local close_brackets_count_minus_one_minus_one_minus_one\
    \ = close_brackets_count_minus_one_minus_one - 1\n    local open_brackets_count_minus_one_minus_one_minus_one_plus_one\
    \ = open_brackets_count_minus_one_minus_one_minus_one + 1\n    local close_brackets_count_minus_one_minus_one_minus_one_plus_one\
    \ = close_brackets_count_minus_one_minus_one_minus_one + 1\n    local open_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = open_brackets_count_minus_one_minus_one_minus_one - 1\n    local close_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = close_brackets_count_minus_one_minus_", "    local brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(bra",
  "    local open_brackets = {\n        ['('] = true,\n        [')'] = true,\n   \
    \     ['['] = true,\n        [']'] = true,\n        ['{'] = true,\n        ['}']\
    \ = true,\n    }\n    local close_brackets = {\n        ['('] = false,\n     \
    \   [')'] = false,\n        ['['] = false,\n        [']'] = false,\n        ['{']\
    \ = false,\n        ['}'] = false,\n    }\n    local open_brackets_count = 0\n\
    \    local close_brackets_count = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_stack = {}\n    local close_brackets_stack\
    \ = {}\n    for i = 1, #string do\n        if open_brackets[string[i]] then\n\
    \            open_brackets_count = open_brackets_count + 1\n            open_brackets_stack[open_brackets_index]\
    \ = string[i]\n            open_brackets_index = open_brackets_index + 1\n   \
    \     elseif close_brackets[string[i]] then\n            close_brackets_count\
    \ = close_brackets_count + 1\n            close_brackets_stack[close_brackets_index]\
    \ = string[i]\n            close_brackets_index = close_brackets_index + 1\n \
    \       elseif open_brackets_count > 0 and close_brackets_count == 0 then\n  \
    \          if open_brackets_stack[open_brackets_index] == close_brackets_stack[close_brackets_index]\
    \ then\n                return true\n            end\n        end\n    end\n \
    \   return false\nend", "    local open_brackets = string.gsub(string, \"[\",\
    \ \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n    local\
    \ open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    \n    if open_brackets_count ~= close_brackets_count\
    \ then\n        return false\n    end\n    \n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = close_brackets_count - 1\n    \n    local\
    \ open_brackets_index_in_string = open_brackets_index\n    local close_brackets_index_in_string\
    \ = close_brackets_index\n    \n    while open_brackets_index_in_string > 0 do\n\
    \        if open_brackets[open_brackets_index_in_string] ~= close_brackets[close_brackets_index_in_string]\
    \ then\n            return false\n        end\n        \n        open_brackets_index_in_string\
    \ = open_brackets_index_in_string - 1\n        close_brackets_index_in_string\
    \ = close_brackets_index_in_string - 1\n    end\n    \n    return true\nend",
  "    local brackets = {'[', ']'}\n    local open_brackets = {'[', '{', '('}\n  \
    \  local close_brackets = {']', '}', ')'}\n    local open_brackets_count = 0\n\
    \    local close_brackets_count = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_index_count = 0\n    local\
    \ close_brackets_index_count = 0\n    local open_brackets_index_count = 0\n  \
    \  local close_brackets_index_count = 0\n    local open_brackets_index_count =\
    \ 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_", "    local open_brackets = {'[', '{',\
    \ '('}\n    local close_brackets = {']', '}', '}'} \n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n\
    \    local close_brackets_index = 0\n    local open_brackets_index_count = 0\n\
    \    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_bracket", "  \
    \  local open_brackets = {\n        ['('] = true,\n        [')'] = true,\n   \
    \     ['{'] = true,\n        ['}'] = true,\n        ['['] = true,\n        [']']\
    \ = true,\n    }\n    local close_brackets = {\n        ['('] = true,\n      \
    \  [')'] = true,\n        ['{'] = true,\n        ['}'] = true,\n        ['[']\
    \ = true,\n        [']'] = true,\n    }\n    local open_brackets_count = 0\n \
    \   local close_brackets_count = 0\n    for i = 1, #string do\n        if open_brackets[string[i]]\
    \ then\n            open_brackets_count = open_brackets_count + 1\n        elseif\
    \ close_brackets[string[i]] then\n            close_brackets_count = close_brackets_count\
    \ + 1\n        else\n            return false\n        end\n    end\n    if open_brackets_count\
    \ ~= close_brackets_count then\n        return false\n    end\n    return true\n\
    end", "  -- Create a stack to keep track of brackets.\n  local stack = {}\n  --\
    \ Iterate through each character in the string.\n  for i = 1, #string do\n   \
    \ -- If the character is a left bracket, push it onto the stack.\n    if string[i]\
    \ == '[' then\n      table.insert(stack, string[i])\n    -- If the character is\
    \ a right bracket, pop it from the stack.\n    elseif string[i] == ']' then\n\
    \      if #stack > 0 then\n        stack = stack:pop()\n      else\n        return\
    \ false\n      end\n    end\n  end\n  return #stack == 0\nend", "  local brackets\
    \ = {\n    ['('] = true,\n    [')'] = true,\n    ['{'] = true,\n    ['}'] = true,\n\
    \    ['['] = true,\n    [']'] = true,\n    ['<'] = true,\n    ['>'] = true,\n\
    \    ['+'] = true,\n    ['-'] = true,\n    ['*'] = true,\n    ['/'] = true,\n\
    \    ['%'] = true,\n    ['^'] = true,\n    ['&'] = true,\n    ['|'] = true,\n\
    \    ['='] = true,\n    ['?'] = true,\n    ['!'] = true,\n    ['|='] = true,\n\
    \    ['&='] = true,\n    ['^='] = true,\n    ['%='] = true,\n    ['+='] = true,\n\
    \    ['-='] = true,\n    ['*='] = true,\n    ['/='] = true,\n    ['%='] = true,\n\
    \    ['^='] = true,\n    ['&='] = true,\n    ['|='] = true,\n    ['?='] = true,\n\
    \    ['!='] = true,\n    ['<-'] = true,\n    ['->'] = true,\n    ['<->'] = true,\n\
    \    ['<=>'] = true,\n    ['<-='] = true,\n    ['->='] = true,\n    ['<=>='] =\
    \ true,\n    ['<-=>'] = true,\n    ['<=>=>'] = true,\n    ['<=>=>='] = true,\n\
    \    ['<-=>='] = true,\n    ['->=>'] = true,\n    ['<-=>=>'] = true,\n    ['<=>=>=']\
    \ = true,\n    ['<=>=>=>'] = true,\n    ['<=>=>=>='] = true,\n    ['<-=>=>=']\
    \ = true,\n    ['->=>='] = true,\n    ['<-=>=>=>'] = true,\n    ['<=>=>=>='] =\
    \ true,\n    ['<=>=>=>=>'] = true,\n    ['<=>=>=>='] = true,\n    ['<=>=>=>=>']\
    \ = true,\n    ['<=>=>=>=>='] = true,\n    ['<-=>=>=>='] = true,\n    ['->=>=>=']\
    \ = true,\n    ['<-=>=>=>=>'] = true,\n    ['<=>=>=>=>='] = true,\n    ['<=>=>=>=>=>']\
    \ = true,\n    ['<=>=>=>=>='] = true,\n    ['<=>=>=>=>=>'] = true,\n    ['<=>=>=>=>=>=']\
    \ = true,\n    ['<=>=>=>=>=>=>'] = true,\n    ['<=>=>=>=>=>='] = true,\n    ['<=>=>=>=>=>=>']\
    \ = true,\n    ['<=>=>=>=>=>=>'] = true,\n    ['<=>=>=>=>=>=>'] = true,\n    ['<=>=>=>=>=>=>']\
    \ = true,\n    ['", "    local brackets = {\n        [\"[\"]=true,\n        [\"\
    ]\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n        [\"(\"]=true,\n\
    \        [\")\"]=true,\n        [\"[\"]=true,\n        [\"]\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"\
    ]=true,\n        [\"}\"]=true,\n    }\n    local stack = {}\n    local open_brackets\
    \ = false\n    local close_brackets = false\n    local open_brackets_count = 0\n\
    \    local close_brackets_count = 0\n    for i,c in ipairs(string) do\n      \
    \  if brackets[c] then\n            open_brackets = open_brackets or open_brackets_count\
    \ > 0\n            close_brackets = close_brackets or close_brackets_count > 0\n\
    \            open_brackets_count = open_brackets_count + 1\n            close_brackets_count\
    \ = close_brackets_count + 1\n            stack[#stack+1] = c\n        else\n\
    \            open_brackets = open_brackets or open_brackets_count > 0\n      \
    \      close_brackets = close_brackets or close_brackets_count > 0\n         \
    \   open_brackets_count = open_brackets_count + 1\n            close_brackets_count\
    \ = close_brackets_count + 1\n            stack[#stack+1] = nil\n        end\n\
    \    end\n    open_brackets = open_brackets or open_brackets_count > 0\n    close_brackets\
    \ = close_brackets or close_brackets_count > 0\n    open_brackets_count = open_brackets_count\
    \ + 1\n    close_brackets_count = close_brackets_count + 1\n    stack[#stack+1]\
    \ = nil\n    return open_brackets and close_brackets\nend", "    local brackets\
    \ = {\n        [\"(\"] = true,\n        [\")\"] = true,\n        [\"[\"] = true,\n\
    \        [\"]\"] = true,\n        [\"{\"] = true,\n        [\"}\"] = true,\n \
    \       [\"<\"] = true,\n        [\">\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"]\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n   \
    \ }\n    local open_brackets = nil\n    local close_brackets = nil\n    local\
    \ open_brackets_count = 0\n    local close_brackets_count = 0\n    for i = 1,\
    \ #string do\n        if brackets[string[i]] then\n            if open_brackets\
    \ == nil then\n                open_brackets = string[i]\n                open_brackets_count\
    \ = open_brackets_count+1\n            elseif open_brackets ~= string[i] then\n\
    \                close_brackets = string[i]\n                close_brackets_count\
    \ = close_brackets_count+1\n            end\n        else\n            if open_brackets\
    \ ~= nil then\n                close_brackets = nil\n                close_brackets_count\
    \ = 0\n                open_brackets = nil\n                open_brackets_count\
    \ = 0\n            end\n        end\n    end\n    if open_brackets_count ~= close_brackets_count\
    \ then\n        return false\n    else\n        return true\n    end\nend", " \
    \ -- The function should return True if and only if there is a valid subsequence\
    \ of brackets \n  -- where at least one bracket in the subsequence is nested.\n\
    \  return string.find(string, \"[[\") ~= nil and\n         string.find(string,\
    \ \"]]\") ~= nil\nend", "    local brackets = {\n        [\"[\"] = 1\n       \
    \ ,[\"{\"] = 1\n        ,[\"(\"] = 1\n        ,[\"<\"] = 1\n        ,[\">\"] =\
    \ 1\n        ,[\"[\"] = 1\n        ,[\"]\"] = 1\n        ,[\"}\"] = 1\n      \
    \  ,[\"<=\"] = 1\n        ,[\">=\"] = 1\n        ,[\"==\"] = 1\n        ,[\"~=\"\
    ] = 1\n        ,[\"!=\"] = 1\n        ,[\"<-\"] = 1\n        ,[\"->\"] = 1\n \
    \       ,[\".\"] = 1\n        ,[\"..\"] = 1\n        ,[\"..<\"] = 1\n        ,[\"\
    ..>\"] = 1\n        ,[\"..=\"] = 1\n        ,[\"..<-\"] = 1\n        ,[\"..->\"\
    ] = 1\n        ,[\"..->>\"] = 1\n        ,[\"..->=\"] = 1\n        ,[\"..<-<\"\
    ] = 1\n        ,[\"..<-=\"] = 1\n        ,[\"..<-<-\"] = 1\n        ,[\"..<-<-=\"\
    ] = 1\n        ,[\"..<->\"] = 1\n        ,[\"..<->>\"] = 1\n        ,[\"..<->=\"\
    ] = 1\n        ,[\"..<-<->\"] = 1\n        ,[\"..<-<->=\"] = 1\n        ,[\"..<->->\"\
    ] = 1\n        ,[\"..<->->>\"] = 1\n        ,[\"..<->->=\"] = 1\n        ,[\"\
    ..<-<->->\"] = 1\n        ,[\"..<-<->->=\"] = 1\n        ,[\"..<->->->\"] = 1\n\
    \        ,[\"..<->->->>\"] = 1\n        ,[\"..<->->->=\"] = 1\n        ,[\"..<-<->->->\"\
    ] = 1\n        ,[\"..<-<->->->=\"] = 1\n        ,[\"..<->->->->\"] = 1\n     \
    \   ,[\"..<->->->->>\"] = 1\n        ,[\"..<->->->->=\"] = 1\n        ,[\"..<-<->->->->\"\
    ] = 1\n        ,[\"..<-<->->->->=\"] = 1\n        ,[\"..<->->->->->\"] = 1\n \
    \       ,[\"..<->->->->->>\"] = 1\n        ,[\"..<->->->->=\"] = 1\n        ,[\"\
    ..<-<->->->->\"] = 1\n        ,[\"..<-<->->->", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = close_brackets_count - 1\n    local open_brackets_index2\
    \ = open_brackets_count - 2\n    local close_brackets_index2 = close_brackets_count\
    \ - 2\n    local open_brackets_index3 = open_brackets_count - 3\n    local close_brackets_index3\
    \ = close_brackets_count - 3\n    local open_brackets_index4 = open_brackets_count\
    \ - 4\n    local close_brackets_index4 = close_brackets_count - 4\n    local open_brackets_index5\
    \ = open_brackets_count - 5\n    local close_brackets_index5 = close_brackets_count\
    \ - 5\n    local open_brackets_index6 = open_brackets_count - 6\n    local close_brackets_index6\
    \ = close_brackets_count - 6\n    local open_brackets_index7 = open_brackets_count\
    \ - 7\n    local close_brackets_index7 = close_brackets_count - 7\n    local open_brackets_index8\
    \ = open_brackets_count - 8\n    local close_brackets_index8 = close_brackets_count\
    \ - 8\n    local open_brackets_index9 = open_brackets_count - 9\n    local close_brackets_index9\
    \ = close_brackets_count - 9\n    local open_brackets_index10 = open_brackets_count\
    \ - 10\n    local close_brackets_index10 = close_brackets_count - 10\n    local\
    \ open_brackets_index11 = open_brackets_count - 11\n    local close_brackets_index11\
    \ = close_brackets_count - 11\n    local open_brackets_index12 = open_brackets_count\
    \ - 12\n    local close_brackets_index12 = close_brackets_count - 12\n    local\
    \ open_brackets_index13 = open_brackets_count - 13\n    local close", "    local\
    \ open_brackets = {\n        ['('] = true,\n        [')'] = true,\n        ['[']\
    \ = true,\n        [']'] = true,\n        ['{'] = true,\n        ['}'] = true,\n\
    \        ['<'] = true,\n        ['>'] = true,\n        ['+'] = true,\n       \
    \ ['-'] = true,\n        ['*'] = true,\n        ['/'] = true,\n        ['%'] =\
    \ true,\n        ['^'] = true,\n        ['&'] = true,\n        ['|'] = true,\n\
    \        ['='] = true,\n        ['!'] = true,\n        ['?'] = true,\n       \
    \ ['.'] = true,\n        [','] = true,\n        [';'] = true,\n        [':'] =\
    \ true,\n        ['?'] = true,\n        ['!'] = true,\n        ['?'] = true,\n\
    \        ['.'] = true,\n        [','] = true,\n        [';'] = true,\n       \
    \ [':'] = true,\n        ['?'] = true,\n        ['!'] = true,\n        ['?'] =\
    \ true,\n        ['.'] = true,\n        [','] = true,\n        [';'] = true,\n\
    \        [':'] = true,\n        ['?'] = true,\n        ['!'] = true,\n       \
    \ ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n        [';'] =\
    \ true,\n        [':'] = true,\n        ['?'] = true,\n        ['!'] = true,\n\
    \        ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n       \
    \ [';'] = true,\n        [':'] = true,\n        ['?'] = true,\n        ['!'] =\
    \ true,\n        ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n\
    \        [';'] = true,\n        [':'] = true,\n        ['?'] = true,\n       \
    \ ['!'] = true,\n        ['?'] = true,\n        ['.'] = true,\n        [','] =\
    \ true,\n        [';'] = true,\n        [':'] = true,\n        ['?'] = true,\n\
    \        ['!'] = true,\n        ['?'] = true,\n        ['.'] = true,\n       \
    \ [','] = true,\n        [';'] = true,\n        [':'] = true,\n        ['?'] =\
    \ true,\n        ['!'] = true,\n        ['?'] = true,\n        ['.'] = true,\n\
    \        [','] = true,\n        [';'] = true,\n        [':'] = true,\n       \
    \ ['?'] = true,\n        ['!'] = true,\n        ['?'] = true,\n        ['.'] =\
    \ true,\n        [','] = true,\n        [';'] = true,\n        [':'] = true,\n\
    \        ['?'] = true,\n        ['!'] = true,\n        ['?'] = true,\n       \
    \ ['.'] = true,\n        [','] = true,\n        [';'] = true,\n        [':'] =\
    \ true,\n        ['?'] = true,\n        ['!'] = true,\n        ['?'] = true,\n\
    \        ['.'] = true,\n        [','] = true,\n        [';'] = true,\n       \
    \ [':'] = true,\n        ['?'] = true,", "    local open_brackets = {'[', '{',\
    \ '('}\n    local close_brackets = {']', '}', '}'} -- Make sure to include the\
    \ last bracket in the set.\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_", " \
    \   local brackets = {\n        [\"[\"]=true,\n        [\"]\"]=true,\n       \
    \ [\"{\"]=true,\n        [\"}\"]=true,\n        [\"(\"]=true,\n        [\")\"\
    ]=true,\n        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"[\"]=true,\n\
    \        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"]=true,\n       \
    \ [\"}\"]=true,\n        [\"[\"]=true,\n        [\"(\"]=true,\n        [\"=\"\
    ]=true,\n        [\"<\"]=true,\n        [\">\"]=true,\n        [\"<=\"]=true,\n\
    \        [\">=\"]=true,\n        [\"==\"]=true,\n        [\"!=\"]=true,\n    \
    \    [\"&&\"]=true,\n        [\"||\"]=true,\n        [\"=\"]=true,\n        [\"\
    !=\"]=true,\n        [\"<\"]=true,\n        [\">\"]=true,\n        [\"<=\"]=true,\n\
    \        [\">=\"]=true,\n        [\"==\"]=true,\n        [\"!=\"]=true,\n    \
    \    [\"&&\"]=true,\n        [\"||\"]=true,\n        [\"=\"]=true,\n        [\"\
    !=\"]=true,\n        [\"<\"]=true,\n        [\">\"]=true,\n        [\"<=\"]=true,\n\
    \        [\">=\"]=true,\n        [\"==\"]=true,\n        [\"!=\"]=true,\n    \
    \    [\"&&\"]=true,\n        [\"||\"]=true,\n        [\"=\"]=true,\n        [\"\
    !=\"]=true,\n        [\"<\"]=true,\n        [\">\"]=true,\n        [\"<=\"]=true,\n\
    \        [\">=\"]=true,\n        [\"==\"]=true,\n        [\"!=\"]=true,\n    \
    \    [\"&&\"]=true,\n        [\"||\"]=true,\n        [\"=\"]=true,\n        [\"\
    !=\"]=true,\n        [\"<\"]=true,\n        [\">\"]=true,\n        [\"<=\"]=true,\n\
    \        [\">=\"]=true,\n        [\"==\"]=true,\n        [\"!=\"]=true,\n    \
    \    [\"&&\"]=true,\n        [\"||\"]=true,\n        [\"=\"]=true,\n        [\"\
    !=\"]=true,\n        [\"<\"]=true,\n        [\">\"]=true,\n        [\"<=\"]=true,\n\
    \        [\">=\"]=true,\n        [\"==\"]=true,\n        [\"!=\"]=true,\n    \
    \    [\"&&\"]=true,\n        [\"||\"]=true,\n        [\"=\"]=true,\n        [\"\
    !=\"]=true,\n        [\"<\"]=true,\n        [\">\"]", "    local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n  \
    \  local close_brackets_count = string.len(close_brackets)\n    \n    if open_brackets_count\
    \ ~= close_brackets_count then\n        return false\n    end\n    \n    local\
    \ open_brackets_index = string.find(open_brackets, \"[\")\n    local close_brackets_index\
    \ = string.find(close_brackets, \"]\")\n    \n    if open_brackets_index == nil\
    \ or close_brackets_index == nil then\n        return false\n    end\n    \n \
    \   local open_brackets_index_next = string.find(open_brackets, \"]\", open_brackets_index\
    \ + 1)\n    local close_brackets_index_next = string.find(close_brackets, \"]\"\
    , close_brackets_index + 1)\n    \n    if open_brackets_index_next ~= nil and\
    \ close_brackets_index_next ~= nil then\n        return false\n    end\n    \n\
    \    return true\nend", "  local brackets = string.gsub(string, \"[\", \"\")\n\
    \  local brackets_count = string.len(brackets)\n  local open_brackets = 0\n  local\
    \ close_brackets = 0\n  local open_brackets_stack = { brackets }\n  local close_brackets_stack\
    \ = { brackets }\n  local open_brackets_count = brackets_count\n  local close_brackets_count\
    \ = brackets_count\n  local open_brackets_index = 1\n  local close_brackets_index\
    \ = 1\n  local open_brackets_stack_index = 1\n  local close_brackets_stack_index\
    \ = 1\n  local open_brackets_stack_string = brackets\n  local close_brackets_stack_string\
    \ = brackets\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack_string_index\
    \ = 1\n  local open_brackets_stack_string_count = 1\n  local close_brackets_stack_string_count\
    \ = 1\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack_string_index\
    \ = 1\n  local open_brackets_stack_string_count = 1\n  local close_brackets_stack_string_count\
    \ = 1\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack_string_index\
    \ = 1\n  local open_brackets_stack_string_count = 1\n  local close_brackets_stack_string_count\
    \ = 1\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack_string_index\
    \ = 1\n  local open_brackets_stack_string_count = 1\n  local close_brackets_stack_string_count\
    \ = 1\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack_string_index\
    \ = 1\n  local open_brackets_stack_string_count = 1\n  local close_brackets_stack_string_count\
    \ = 1\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack_string_index\
    \ = 1\n  local open_brackets_stack_string_count = 1\n  local close_brackets_stack_string_count\
    \ = 1\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack_string_index\
    \ = 1\n  local open_brackets_stack_string_count = 1\n  local close_brackets_stack_string_count\
    \ = 1\n  local open_brackets_stack_string_index = 1\n  local close_brackets_stack",
  "   -- Create a stack to keep track of brackets.\n   local stack = {}\n   -- Iterate\
    \ over the string.\n   for i = 1, #string do\n      -- If the current character\
    \ is a left bracket, push it to the stack.\n      if string[i] == '[' then\n \
    \        table.insert(stack, string[i])\n      -- If the current character is\
    \ a right bracket, pop it from the stack.\n      elseif string[i] == ']' then\n\
    \         -- If the stack is empty, return false.\n         if #stack == 0 then\n\
    \            return false\n         -- Otherwise, pop the top element from the\
    \ stack and compare it with the current character.\n         elseif stack[#stack]\
    \ == string[i] then\n            stack[#stack] = nil\n         -- If the stack\
    \ is not empty, return false.\n         else\n            return false\n     \
    \    end\n      -- If the current character is not a left bracket or right bracket,\
    \ return false.\n      else\n         return false\n      end\n   end\n   -- If\
    \ the stack is not empty, return false.\n   return #stack == 0\nend", "    local\
    \ brackets = {'[', ']'}\n    local open_brackets = string.gsub(string, '[', '',\
    \ 1)\n    local close_brackets = string.gsub(string, ']', '', 1)\n    local open_brackets\
    \ = open_brackets:gsub('%w+', '')\n    local close_brackets = close_brackets:gsub('%w+',\
    \ '')\n    local open_brackets = open_brackets:gsub('%w+', '')\n    local close_brackets\
    \ = close_brackets:gsub('%w+', '')\n    local open_brackets = open_brackets:gsub('%w+',\
    \ '')\n    local close_brackets = close_brackets:gsub('%w+', '')\n    local open_brackets\
    \ = open_brackets:gsub('%w+', '')\n    local close_brackets = close_brackets:gsub('%w+',\
    \ '')\n    local open_brackets = open_brackets:gsub('%w+', '')\n    local close_brackets\
    \ = close_brackets:gsub('%w+', '')\n    local open_brackets = open_brackets:gsub('%w+',\
    \ '')\n    local close_brackets = close_brackets:gsub('%w+', '')\n    local open_brackets\
    \ = open_brackets:gsub('%w+', '')\n    local close_brackets = close_brackets:gsub('%w+',\
    \ '')\n    local open_brackets = open_brackets:gsub('%w+', '')\n    local close_brackets\
    \ = close_brackets:gsub('%w+', '')\n    local open_brackets = open_brackets:gsub('%w+',\
    \ '')\n    local close_brackets = close_brackets:gsub('%w+', '')\n    local open_brackets\
    \ = open_brackets:gsub('%w+', '')\n    local close_brackets = close_brackets:gsub('%w+',\
    \ '')\n    local open_brackets = open_brackets:gsub('%w+', '')\n    local close_brackets\
    \ = close_brackets:gsub('%w+', '')\n    local open_brackets = open_brackets:gsub('%w+',\
    \ '')\n    local close_brackets = close_brackets:gsub('%w+', '')\n    local open_brackets\
    \ = open_brackets:gsub('", "    local open_brackets = {\n        [\"(\"] = true,\n\
    \        [\")\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n \
    \       [\"{\"] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n  \
    \      [\">\"] = true,\n        [\"+\"] = true,\n        [\"-\"] = true,\n   \
    \     [\"*\"] = true,\n        [\"/\"] = true,\n        [\"%\"] = true,\n    \
    \    [\"^\"] = true,\n        [\"~\"] = true,\n        [\"&\"] = true,\n     \
    \   [\"|\"] = true,\n        [\"=\"] = true,\n        [\"!\"] = true,\n      \
    \  [\"?\"] = true,\n        [\"<-\"] = true,\n        [\"->\"] = true,\n     \
    \   [\"<->\"] = true,\n        [\"<-<-\"] = true,\n        [\"<-<->\"] = true,\n\
    \        [\"<-><-\"] = true,\n        [\"<-><->\"] = true,\n        [\"<->->\"\
    ] = true,\n        [\"<-<->->\"] = true,\n        [\"<-<-<-\"] = true,\n     \
    \   [\"<-<-<->\"] = true,\n        [\"<-<->->\"] = true,\n        [\"<->->\"]\
    \ = true,\n        [\"<->->->\"] = true,\n        [\"<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-",
  "    local open_brackets = {'[', '('}\n    local close_brackets = {']', ')'}\n \
    \   local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_string\
    \ = ''\n    local close_brackets_string = ''\n    local open_brackets_count =\
    \ 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n \
    \   local close_brackets_index = 0\n    local open_brackets_string = ''\n    local\
    \ close_brackets_string = ''\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_string = ''\n    local close_brackets_string = ''\n \
    \   local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_string\
    \ = ''\n    local close_brackets_string = ''\n    local open_brackets_count =\
    \ 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n \
    \   local close_brackets_index = 0\n    local open_brackets_string = ''\n    local\
    \ close_brackets_string = ''\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_string = ''\n    local close_brackets_string = ''\n \
    \   local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_string\
    \ = ''\n    local close_brackets_string = ''\n    local open_brackets_count =\
    \ 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n \
    \   local close_brackets_index = 0\n    local open_brackets_string = ''\n    local\
    \ close_brackets_string = ''\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_bracket", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets = string.gsub(open_brackets, \"{\", \"\")\n    local\
    \ close_brackets = string.gsub(close_brackets, \"}\", \"\")\n    local open_brackets\
    \ = string.gsub(open_brackets, \"(\", \"\")\n    local close_brackets = string.gsub(close_brackets,\
    \ \")\", \"\")\n    local open_brackets = string.gsub(open_brackets, \"[\", \"\
    \")\n    local close_brackets = string.gsub(close_brackets, \"]\", \"\")\n   \
    \ local open_brackets = string.gsub(open_brackets, \"{\", \"\")\n    local close_brackets\
    \ = string.gsub(close_brackets, \"}\", \"\")\n    local open_brackets = string.gsub(open_brackets,\
    \ \"(\", \"\")\n    local close_brackets = string.gsub(close_brackets, \")\",\
    \ \"\")\n    local open_brackets = string.gsub(open_brackets, \"[\", \"\")\n \
    \   local close_brackets = string.gsub(close_brackets, \"]\", \"\")\n    local\
    \ open_brackets = string.gsub(open_brackets, \"{\", \"\")\n    local close_brackets\
    \ = string.gsub(close_brackets, \"}\", \"\")\n    local open_brackets = string.gsub(open_brackets,\
    \ \"(\", \"\")\n    local close_brackets = string.gsub(close_brackets, \")\",\
    \ \"\")\n    local open_brackets = string.gsub(open_brackets, \"[\", \"\")\n \
    \   local close_brackets = string.gsub(close_brackets, \"]\", \"\")\n    local\
    \ open_brackets = string.gsub(open_brackets, \"{\", \"\")\n    local close_brackets\
    \ = string.gsub(close_brackets, \"}\", \"\")\n    local open_brackets = string.gsub(open_brackets,\
    \ \"(\", \"\")\n    local close_brackets = string.gsub(close_brackets, \")\",\
    \ \"\")\n    local open_brackets = string.gsub(open_brackets, \"[\", \"\")\n \
    \   local close_brackets = string.gsub(close_brackets, \"]\", \"\")\n    local\
    \ open_brackets = string.gsub(open_brackets, \"{\", \"\")\n    local close_brackets\
    \ = string.gsub(close_brackets, \"}\", \"\")\n    local open_brackets = string.gsub(",
  "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_index\
    \ = open_brackets_count - 1\n    local close_brackets_index = open_brackets_count\
    \ - 1\n    local open_brackets_index2 = open_brackets_count - 1\n    local close_brackets_index2\
    \ = open_brackets_count - 1\n    local open_brackets_index3 = open_brackets_count\
    \ - 1\n    local close_brackets_index3 = open_brackets_count - 1\n    local open_brackets_index4\
    \ = open_brackets_count - 1\n    local close_brackets_index4 = open_brackets_count\
    \ - 1\n    local open_brackets_index5 = open_brackets_count - 1\n    local close_brackets_index5\
    \ = open_brackets_count - 1\n    local open_brackets_index6 = open_brackets_count\
    \ - 1\n    local close_brackets_index6 = open_brackets_count - 1\n    local open_brackets_index7\
    \ = open_brackets_count - 1\n    local close_brackets_index7 = open_brackets_count\
    \ - 1\n    local open_brackets_index8 = open_brackets_count - 1\n    local close_brackets_index8\
    \ = open_brackets_count - 1\n    local open_brackets_index9 = open_brackets_count\
    \ - 1\n    local close_brackets_index9 = open_brackets_count - 1\n    local open_brackets_index10\
    \ = open_brackets_count - 1\n    local close_brackets_index10 = open_brackets_count\
    \ - 1\n    local open_brackets_index11 = open_brackets_count - 1\n    local close_brackets_index11\
    \ = open_brackets_count - 1\n    local open_brackets_index12 = open_brackets_count\
    \ - 1\n    local close_brackets_index12 = open_brackets_count - 1\n    local open_brackets_index13\
    \ = open_brackets_count - 1\n    local close_brackets_index13 = open_brackets_count\
    \ - 1\n    local open_brackets_index", "   local brackets = string.gsub(string,\
    \ \"[\", \"\")\n   local brackets = string.gsub(brackets, \"]\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n   local brackets = string.gsub(brackets, \"(\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n   local brackets = string.gsub(brackets, \"}\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n   local brackets = string.gsub(brackets, \"(\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n   local brackets = string.gsub(brackets, \"]\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n   local brackets = string.gsub(brackets, \"[\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n   local brackets = string.gsub(brackets, \"}\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n   local brackets = string.gsub(brackets, \"[\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n   local brackets = string.gsub(brackets, \"}\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n   local brackets = string.gsub(brackets, \"{\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n   local brackets = string.gsub(brackets, \"]\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n   local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n   local brackets = string.gsub(brackets, \"(\", \"\")\n   local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n   local brackets = string.g",
  "    local brackets = string.gsub(string, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = ", "    local brackets = {\n        ['('] = true,\n        [')']\
    \ = true,\n        ['['] = true,\n        [']'] = true,\n        ['{'] = true,\n\
    \        ['}'] = true,\n        ['<'] = true,\n        ['>'] = true,\n       \
    \ ['+'] = true,\n        ['-'] = true,\n        ['*'] = true,\n        ['/'] =\
    \ true,\n        ['%'] = true,\n        ['^'] = true,\n        ['&'] = true,\n\
    \        ['|'] = true,\n        ['~'] = true,\n        ['?'] = true,\n       \
    \ ['.'] = true,\n    }\n    local open_brackets = false\n    local close_brackets\
    \ = false\n    local open_brackets_count = 0\n    local close_brackets_count =\
    \ 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n \
    \   local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n\
    \    local close_brackets_index = 0\n    local open_brackets_count = 0\n    local\
    \ close_brackets_count = 0\n    local open_brackets_index = 0\n    local close_brackets_index\
    \ = 0\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_count = 0\n    local close_brackets_count = 0\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_count = 0\n\
    \    local close_brackets_count = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n\
    \    local close_brackets_index = 0\n    local open_brackets_count = 0\n    local\
    \ close", "\tlocal brackets = {\n\t\t[\"[\"]=true,\n\t\t[\"{\"]=true,\n\t\t[\"\
    (\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"\\\"\"]=true,\n\t\t[\"\
    '\"]=true,\n\t\t[\"`\"]=true,\n\t\t[\"=\"]=true,\n\t\t[\";\"]=true,\n\t\t[\"=\"\
    ]=true,\n\t\t[\"+\"]=true,\n\t\t[\"-\"]=true,\n\t\t[\"*\"]=true,\n\t\t[\"/\"]=true,\n\
    \t\t[\"%\"]=true,\n\t\t[\"^\"]=true,\n\t\t[\"~\"]=true,\n\t\t[\"&\"]=true,\n\t\
    \t[\"|\"]=true,\n\t\t[\"<=\"]=true,\n\t\t[\">=\"]=true,\n\t\t[\"==\"]=true,\n\t\
    \t[\"!=\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\">\"]=true,\n\t\t[\"<=\"]=true,\n\t\
    \t[\">=\"]=true,\n\t\t[\"=\"]=true,\n\t\t[\"!\"]=true,\n\t\t[\"?\"]=true,\n\t\t\
    [\"(\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\">\"]=true,\n\t\t[\"\
    <=\"]=true,\n\t\t[\">=\"]=true,\n\t\t[\"=\"]=true,\n\t\t[\"!\"]=true,\n\t\t[\"\
    ?\"]=true,\n\t\t[\"(\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\">\"\
    ]=true,\n\t\t[\"<=\"]=true,\n\t\t[\">=\"]=true,\n\t\t[\"=\"]=true,\n\t\t[\"!\"\
    ]=true,\n\t\t[\"?\"]=true,\n\t\t[\"(\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\
    \t\t[\">\"]=true,\n\t\t[\"<=\"]=true,\n\t\t[\">=\"]=true,\n\t\t[\"=\"]=true,\n\
    \t\t[\"!\"]=true,\n\t\t[\"?\"]=true,\n\t\t[\"(\"]=true,\n\t\t[\"[\"]=true,\n\t\
    \t[\"<\"]=true,\n\t\t[\">\"]=true,\n\t\t[\"<=\"]=true,\n\t\t[\">=\"]=true,\n\t\
    \t[\"=\"]=true,\n\t\t[\"!\"]=true,\n\t\t[\"?\"]=true,\n\t\t[\"(\"]=true,\n\t\t\
    [\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\">\"]=true,\n\t\t[\"<=\"]=true,\n\t\t\
    [\">=\"]=true,\n\t\t[\"=\"]=true,\n\t\t[\"!\"]=true,\n\t\t[\"?\"]", "    local\
    \ open_brackets = {\n        [\"[\"] = 1\n        ,[\"{\"] = 1\n        ,[\"(\"\
    ] = 1\n    }\n    local close_brackets = {\n        [\"]\"] = 1\n        ,[\"\
    }\"] = 1\n        ,[\")\"] = 1\n    }\n    local open_brackets_count = 0\n   \
    \ local close_brackets_count = 0\n    for i = 1, #string do\n        if open_brackets[string[i]]\
    \ then\n            open_brackets_count = open_brackets_count + 1\n        elseif\
    \ close_brackets[string[i]] then\n            close_brackets_count = close_brackets_count\
    \ + 1\n        elseif open_brackets_count > close_brackets_count then\n      \
    \      return true\n        end\n    end\n    return false\nend", "    local brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = ", "    local brackets = {\n        [\"[\"]=true,\n        [\"]\"\
    ]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n        [\"(\"]=true,\n\
    \        [\")\"]=true,\n        [\"[\"]=true,\n        [\"]\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"\
    ]=true,\n        [\"}\"]=true,\n    }\n    local nesting = 0\n    for i = 1, #string\
    \ do\n        if brackets[string[i]] then\n            nesting = nesting + 1\n\
    \        else\n            nesting = nesting - 1\n            if nesting == 0\
    \ then\n                return true\n            end\n        end\n    end\n \
    \   return false\nend", "    local open_brackets = {\n        ['{'] = true,\n\
    \        ['}'] = true,\n        ['('] = true,\n        [')'] = true,\n       \
    \ ['['] = true,\n        [']'] = true,\n        ['<'] = true,\n        ['>'] =\
    \ true,\n        ['+'] = true,\n        ['-'] = true,\n        ['*'] = true,\n\
    \        ['/'] = true,\n        ['%'] = true,\n        ['^'] = true,\n       \
    \ ['&'] = true,\n        ['|'] = true,\n        ['~'] = true,\n        ['?'] =\
    \ true,\n        [':'] = true,\n        [';'] = true,\n    }\n    local close_brackets\
    \ = {\n        ['{'] = true,\n        ['}'] = true,\n        ['('] = true,\n \
    \       [')'] = true,\n        ['['] = true,\n        [']'] = true,\n        ['<']\
    \ = true,\n        ['>'] = true,\n        ['+'] = true,\n        ['-'] = true,\n\
    \        ['*'] = true,\n        ['/'] = true,\n        ['%'] = true,\n       \
    \ ['^'] = true,\n        ['&'] = true,\n        ['|'] = true,\n        ['~'] =\
    \ true,\n        ['?'] = true,\n        [':'] = true,\n        [';'] = true,\n\
    \    }\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    for i = 1, #string do\n        if open_brackets[string[i]] then\n       \
    \     open_brackets_count = open_brackets_count + 1\n        elseif close_brackets[string[i]]\
    \ then\n            close_brackets_count = close_brackets_count + 1\n        end\n\
    \    end\n    if open_brackets_count > close_brackets_count then\n        return\
    \ true\n    else\n        return false\n    end\nend", "\tlocal brackets = string.gsub(string,\
    \ \"[\", \"\")\n\tlocal brackets_count = string.len(brackets)\n\t\n\tif brackets_count\
    \ > 1 then\n\t\treturn false\n\telse\n\t\treturn true\n\tend\nend", "    local\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets =\
    \ string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_index\
    \ = open_brackets_count - 1\n    local close_brackets_index = close_brackets_count\
    \ - 1\n    local open_brackets_index2 = open_brackets_count - 2\n    local close_brackets_index2\
    \ = close_brackets_count - 2\n    local open_brackets_index3 = open_brackets_count\
    \ - 3\n    local close_brackets_index3 = close_brackets_count - 3\n    local open_brackets_index4\
    \ = open_brackets_count - 4\n    local close_brackets_index4 = close_brackets_count\
    \ - 4\n    local open_brackets_index5 = open_brackets_count - 5\n    local close_brackets_index5\
    \ = close_brackets_count - 5\n    local open_brackets_index6 = open_brackets_count\
    \ - 6\n    local close_brackets_index6 = close_brackets_count - 6\n    local open_brackets_index7\
    \ = open_brackets_count - 7\n    local close_brackets_index7 = close_brackets_count\
    \ - 7\n    local open_brackets_index8 = open_brackets_count - 8\n    local close_brackets_index8\
    \ = close_brackets_count - 8\n    local open_brackets_index9 = open_brackets_count\
    \ - 9\n    local close_brackets_index9 = close_brackets_count - 9\n    local open_brackets_index10\
    \ = open_brackets_count - 10\n    local close_brackets_index10 = close_brackets_count\
    \ - 10\n    local open_brackets_index11 = open_brackets_count - 11\n    local\
    \ close_brackets_index11 = close_brackets_count - 11\n    local open_brackets_index12\
    \ = open_brackets_count - 12\n    local close_brackets_index12 = close_brackets_count\
    \ - 12\n    local open_brackets_index13 = open_brackets_count - 13\n    local\
    \ close", "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local\
    \ close_brackets = string.gsub(string, \"]\", \"\")\n    local open_brackets_count\
    \ = string.len(open_brackets)\n    local close_brackets_count = string.len(close_brackets)\n\
    \    local open_brackets_count_plus_one = open_brackets_count + 1\n    local close_brackets_count_plus_one\
    \ = close_brackets_count + 1\n    local open_brackets_count_minus_one = open_brackets_count\
    \ - 1\n    local close_brackets_count_minus_one = close_brackets_count - 1\n \
    \   local open_brackets_count_minus_one_plus_one = open_brackets_count_minus_one\
    \ + 1\n    local close_brackets_count_minus_one_plus_one = close_brackets_count_minus_one\
    \ + 1\n    local open_brackets_count_minus_one_minus_one = open_brackets_count_minus_one\
    \ - 1\n    local close_brackets_count_minus_one_minus_one = close_brackets_count_minus_one\
    \ - 1\n    local open_brackets_count_minus_one_minus_one_plus_one = open_brackets_count_minus_one_minus_one\
    \ + 1\n    local close_brackets_count_minus_one_minus_one_plus_one = close_brackets_count_minus_one_minus_one\
    \ + 1\n    local open_brackets_count_minus_one_minus_one_minus_one = open_brackets_count_minus_one_minus_one\
    \ - 1\n    local close_brackets_count_minus_one_minus_one_minus_one = close_brackets_count_minus_one_minus_one\
    \ - 1\n    local open_brackets_count_minus_one_minus_one_minus_one_plus_one =\
    \ open_brackets_count_minus_one_minus_one_minus_one + 1\n    local close_brackets_count_minus_one_minus_one_minus_one_plus_one\
    \ = close_brackets_count_minus_one_minus_one_minus_one + 1\n    local open_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = open_brackets_count_minus_one_minus_one_minus_one - 1\n    local close_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = close_brackets_count_minus_one_minus_", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    \n    if open_brackets_count ~= close_brackets_count\
    \ then\n        return false\n    end\n    \n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = close_brackets_count - 1\n    \n    while\
    \ open_brackets_index > 0 and close_brackets_index > 0 do\n        if open_brackets[open_brackets_index]\
    \ ~= close_brackets[close_brackets_index] then\n            return false\n   \
    \     end\n        \n        open_brackets_index = open_brackets_index - 1\n \
    \       close_brackets_index = close_brackets_index - 1\n    end\n    \n    return\
    \ true\nend", "    local open_brackets = string.gsub(string, \"[\", \"\")\n  \
    \  local close_brackets = string.gsub(string, \"]\", \"\")\n    local open_brackets_count\
    \ = string.len(open_brackets)\n    local close_brackets_count = string.len(close_brackets)\n\
    \    local open_brackets_count_plus_1 = open_brackets_count + 1\n    local close_brackets_count_plus_1\
    \ = close_brackets_count + 1\n    local open_brackets_count_minus_1 = open_brackets_count\
    \ - 1\n    local close_brackets_count_minus_1 = close_brackets_count - 1\n   \
    \ local open_brackets_count_minus_2 = open_brackets_count - 2\n    local close_brackets_count_minus_2\
    \ = close_brackets_count - 2\n    local open_brackets_count_minus_3 = open_brackets_count\
    \ - 3\n    local close_brackets_count_minus_3 = close_brackets_count - 3\n   \
    \ local open_brackets_count_minus_4 = open_brackets_count - 4\n    local close_brackets_count_minus_4\
    \ = close_brackets_count - 4\n    local open_brackets_count_minus_5 = open_brackets_count\
    \ - 5\n    local close_brackets_count_minus_5 = close_brackets_count - 5\n   \
    \ local open_brackets_count_minus_6 = open_brackets_count - 6\n    local close_brackets_count_minus_6\
    \ = close_brackets_count - 6\n    local open_brackets_count_minus_7 = open_brackets_count\
    \ - 7\n    local close_brackets_count_minus_7 = close_brackets_count - 7\n   \
    \ local open_brackets_count_minus_8 = open_brackets_count - 8\n    local close_brackets_count_minus_8\
    \ = close_brackets_count - 8\n    local open_brackets_count_minus_9 = open_brackets_count\
    \ - 9\n    local close_brackets_count_minus_9 = close_brackets_count - 9\n   \
    \ local open_brackets_count_minus_10 = open_brackets_count - 10\n    local close_brackets_count_minus_10\
    \ = close_brackets_count - 10\n    local open_brackets_count_minus_11 = open_brackets_",
  "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    return open_brackets ~= close_brackets\n\
    end", "    local brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n\
    \        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n \
    \       [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n  \
    \      [\"+\"] = true,\n        [\"-\"] = true,\n        [\"*\"] = true,\n   \
    \     [\"/\"] = true,\n        [\"%\"] = true,\n        [\"^\"] = true,\n    \
    \    [\"%\"] = true,\n        [\"=\"] = true,\n        [\"!\"] = true,\n     \
    \   [\"&\"] = true,\n        [\"|\"] = true,\n        [\"~\"] = true,\n      \
    \  [\"?\"] = true,\n        [\".\"] = true,\n    }\n    local open_brackets =\
    \ {}\n    local close_brackets = {}\n    local open_brackets_count = 0\n    local\
    \ close_brackets_count = 0\n    for i = 1, #string do\n        if brackets[string[i]]\
    \ then\n            open_brackets[open_brackets_count] = string[i]\n         \
    \   open_brackets_count = open_brackets_count + 1\n        elseif open_brackets_count\
    \ > 0 then\n            close_brackets[close_brackets_count] = string[i]\n   \
    \         close_brackets_count = close_brackets_count + 1\n        end\n    end\n\
    \    if open_brackets_count ~= close_brackets_count then\n        return false\n\
    \    end\n    local open_brackets_stack = {}\n    local close_brackets_stack =\
    \ {}\n    for i = 1, open_brackets_count do\n        open_brackets_stack[#open_brackets_stack\
    \ + 1] = open_brackets[i]\n    end\n    for i = 1, close_brackets_count do\n \
    \       close_brackets_stack[#close_brackets_stack + 1] = close_brackets[i]\n\
    \    end\n    local open_brackets_stack_size = #open_brackets_stack\n    local\
    \ close_brackets_stack_size = #close_brackets_stack\n    local open_brackets_stack_index\
    \ = 1\n    local close_brackets_stack_index = 1\n    while open_brackets_stack_index\
    \ <= open_brackets_stack_size do\n        local open_bracket = open_brackets_stack[open_brackets_stack_index]\n\
    \        local close_bracket = close_brackets_stack[close_brackets_stack_index]\n\
    \        if open_brackets_stack_index == open_brackets_stack_size then\n     \
    \       ", "\tlocal brackets = {\n\t\t[\"[\"]=true,\n\t\t[\"{\"]=true,\n\t\t[\"\
    (\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"(\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"\
    ]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\
    \t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\
    \t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t\
    [\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"\
    [\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"\
    ]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\
    \t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\
    \t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t\
    [\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"\
    <\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"\
    ]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\
    \t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\
    \t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t\
    [\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"\
    [\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"\
    ]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\
    \t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n\t\t[\"<\"]=true,\n\t\t[\"[\"]=true,\n",
  "   local brackets = {\n      [\"(\"] = true,\n      [\"[\"] = true,\n      [\"\
    )\"] = true,\n      [\"]\"] = true,\n      [\"{\"] = true,\n      [\"}\"] = true,\n\
    \      [\"<\"] = true,\n      [\">\"] = true,\n      [\"=\"] = true,\n      [\"\
    ~\"] = true,\n      [\"^\"] = true,\n      [\"%\"] = true,\n      [\"*\"] = true,\n\
    \      [\"+\"] = true,\n      [\"-\"] = true,\n      [\".\"] = true,\n      [\"\
    /\"] = true,\n      [\"%\"] = true,\n      [\"&\"] = true,\n      [\"|\"] = true,\n\
    \      [\"^\"] = true,\n      [\"~\"] = true,\n      [\"=\"] = true,\n      [\"\
    <\"] = true,\n      [\">\"] = true,\n      [\"!\"] = true,\n      [\"?\"] = true,\n\
    \      [\"(\"] = true,\n      [\"[\"] = true,\n      [\")\"] = true,\n      [\"\
    {\"] = true,\n      [\"}\"] = true,\n      [\"<\"] = true,\n      [\">\"] = true,\n\
    \      [\"=\"] = true,\n      [\"~\"] = true,\n      [\"^\"] = true,\n      [\"\
    %\"] = true,\n      [\"*\"] = true,\n      [\"+\"] = true,\n      [\"-\"] = true,\n\
    \      [\".\"] = true,\n      [\"/\"] = true,\n      [\"%\"] = true,\n      [\"\
    &\"] = true,\n      [\"|\"] = true,\n      [\"^\"] = true,\n      [\"~\"] = true,\n\
    \      [\"=\"] = true,\n      [\"<\"] = true,\n      [\">\"] = true,\n      [\"\
    !\"] = true,\n      [\"?\"] = true,\n      [\"(\"] = true,\n      [\"[\"] = true,\n\
    \      [\")\"] = true,\n      [\"{\"] = true,\n      [\"}\"] = true,\n      [\"\
    <\"] = true,\n      [\">\"] = true,\n      [\"=\"] = true,\n      [\"~\"] = true,\n\
    \      [\"^\"] = true,\n      [\"%\"] = true,\n      [\"*\"] = true,\n      [\"\
    +\"] = true,\n      [\"-\"] = true,\n      [\".\"] = true,\n      [\"/\"] = true,\n\
    \      [\"%\"] = true,\n      [\"&\"] = true,\n      [\"|\"] = true,\n      [\"\
    ^\"] = true,\n      [\"~\"] = true,\n      [\"=\"] = true,\n      [\"<\"] = true,\n\
    \      [\">\"] = true,\n      [\"!\"] = true,\n      [\"?\"] = true,\n      [\"\
    (\"] = true,\n      [\"[\"] = true,\n      [\")\"] = true,\n      [\"{\"] = true,\n\
    \      [\"}\"] = true,\n      [\"<\"] = true,\n      [\">\"] = true,\n      [\"",
  "  local brackets = string.gsub(string, \"[\", \"\")\n  local open_brackets = string.gsub(string,\
    \ \"{\", \"\")\n  local close_brackets = string.gsub(string, \"}\", \"\")\n  local\
    \ open_brackets_count = string.gsub(open_brackets, \"[\", \"\")\n  local close_brackets_count\
    \ = string.gsub(close_brackets, \"}\", \"\")\n  return brackets == open_brackets_count\
    \ and close_brackets == close_brackets_count\nend", "    local open_brackets =\
    \ string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n  \
    \  local close_brackets_count = string.len(close_brackets)\n    local open_brackets_index\
    \ = open_brackets_count - 1\n    local close_brackets_index = open_brackets_count\
    \ - 1\n    local open_brackets_index2 = open_brackets_count - 1\n    local close_brackets_index2\
    \ = open_brackets_count - 1\n    local open_brackets_index3 = open_brackets_count\
    \ - 1\n    local close_brackets_index3 = open_brackets_count - 1\n    local open_brackets_index4\
    \ = open_brackets_count - 1\n    local close_brackets_index4 = open_brackets_count\
    \ - 1\n    local open_brackets_index5 = open_brackets_count - 1\n    local close_brackets_index5\
    \ = open_brackets_count - 1\n    local open_brackets_index6 = open_brackets_count\
    \ - 1\n    local close_brackets_index6 = open_brackets_count - 1\n    local open_brackets_index7\
    \ = open_brackets_count - 1\n    local close_brackets_index7 = open_brackets_count\
    \ - 1\n    local open_brackets_index8 = open_brackets_count - 1\n    local close_brackets_index8\
    \ = open_brackets_count - 1\n    local open_brackets_index9 = open_brackets_count\
    \ - 1\n    local close_brackets_index9 = open_brackets_count - 1\n    local open_brackets_index10\
    \ = open_brackets_count - 1\n    local close_brackets_index10 = open_brackets_count\
    \ - 1\n    local open_brackets_index11 = open_brackets_count - 1\n    local close_brackets_index11\
    \ = open_brackets_count - 1\n    local open_brackets_index12 = open_brackets_count\
    \ - 1\n    local close_brackets_index12 = open_brackets_count - 1\n    local open_brackets_index13\
    \ = open_brackets_count - 1\n    local close_brackets_index13 = open_brackets_count\
    \ - 1\n    local open_brackets_index", "    local brackets = {\n        ['(']\
    \ = true,\n        [')'] = true,\n        ['['] = true,\n        [']'] = true,\n\
    \        ['{'] = true,\n        ['}'] = true,\n    }\n    local open_brackets\
    \ = false\n    local close_brackets = false\n    local open_brackets_count = 0\n\
    \    local close_brackets_count = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    for i = 1, #string do\n        if brackets[string[i]]\
    \ then\n            if open_brackets == false then\n                open_brackets\
    \ = true\n                open_brackets_index = i\n            else\n        \
    \        close_brackets = true\n                close_brackets_index = i\n   \
    \         end\n            open_brackets_count = open_brackets_count + 1\n   \
    \     else\n            if open_brackets == true then\n                open_brackets\
    \ = false\n                open_brackets_count = open_brackets_count - 1\n   \
    \         elseif close_brackets == true then\n                close_brackets =\
    \ false\n                close_brackets_count = close_brackets_count - 1\n   \
    \         end\n        end\n    end\n    if open_brackets_count > close_brackets_count\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   local open_brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n\
    \        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n \
    \       [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n  \
    \      [\"[<\"] = true,\n        [\">>\"] = true,\n        [\"[>\"] = true,\n\
    \        [\"{<\"] = true,\n        [\"}>\"] = true,\n        [\"{>\"] = true,\n\
    \        [\"<{\"] = true,\n        [\"}>{\"] = true,\n        [\"<[\"] = true,\n\
    \        [\">]\"] = true,\n        [\"[<]\"] = true,\n        [\">>]\"] = true,\n\
    \        [\"[>]\"] = true,\n        [\"{<]\"] = true,\n        [\"}>]\"] = true,\n\
    \        [\"{>]\"] = true,\n        [\"<{\"]=true,\n        [\"}>{\"]=true,\n\
    \        [\"<[\"]=true,\n        [\">]\"]=true,\n        [\"[<]\"]=true,\n   \
    \     [\">>]\"]=true,\n        [\"[>]\"]=true,\n        [\"{<]\"]=true,\n    \
    \    [\"}>]\"]=true,\n        [\"{>]\"]=true,\n        [\"<{\"]=true,\n      \
    \  [\"}>{\"]=true,\n        [\"<[\"]=true,\n        [\">]\"]=true,\n        [\"\
    [<]\"]=true,\n        [\">>]\"]=true,\n        [\"[>]\"]=true,\n        [\"{<]\"\
    ]=true,\n        [\"}>]\"]=true,\n        [\"{>]\"]=true,\n        [\"<{\"]=true,\n\
    \        [\"}>{\"]=true,\n        [\"<[\"]=true,\n        [\">]\"]=true,\n   \
    \     [\"[<]\"]=true,\n        [\">>]\"]=true,\n        [\"[>]\"]=true,\n    \
    \    [\"{<]\"]=true,\n        [\"}>]\"]=true,\n        [\"{>]\"]=true,\n     \
    \   [\"<{\"]=true,\n        [\"}>{\"]=true,\n        [\"<[\"]=true,\n        [\"\
    >]\"]=true,\n        [\"[<]\"]=true,\n        [\">>]\"]=true,\n        [\"[>]\"\
    ]=true,\n        [\"{<]\"]=true,\n        [\"}>]\"]=true,\n        [\"{>]\"]=true,\n\
    \        [\"<{\"]=true,\n        ", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_count_nested = 0\n   \
    \ local close_brackets_count_nested = 0\n    local open_brackets_count_nested2\
    \ = 0\n    local close_brackets_count_nested2 = 0\n    local open_brackets_count_nested3\
    \ = 0\n    local close_brackets_count_nested3 = 0\n    local open_brackets_count_nested4\
    \ = 0\n    local close_brackets_count_nested4 = 0\n    local open_brackets_count_nested5\
    \ = 0\n    local close_brackets_count_nested5 = 0\n    local open_brackets_count_nested6\
    \ = 0\n    local close_brackets_count_nested6 = 0\n    local open_brackets_count_nested7\
    \ = 0\n    local close_brackets_count_nested7 = 0\n    local open_brackets_count_nested8\
    \ = 0\n    local close_brackets_count_nested8 = 0\n    local open_brackets_count_nested9\
    \ = 0\n    local close_brackets_count_nested9 = 0\n    local open_brackets_count_nested10\
    \ = 0\n    local close_brackets_count_nested10 = 0\n    local open_brackets_count_nested11\
    \ = 0\n    local close_brackets_count_nested11 = 0\n    local open_brackets_count_nested12\
    \ = 0\n    local close_brackets_count_nested12 = 0\n    local open_brackets_count_nested13\
    \ = 0\n    local close_brackets_count_nested13 = 0\n    local open_brackets_count_nested14\
    \ = 0\n    local close_brackets_count_nested14 = 0\n    local open_brackets_count_nested15\
    \ = 0\n    local close_brackets_count_nested15 = 0\n    local open_brackets_count_nested16\
    \ = 0\n    local close_brackets_count_nested16 = 0\n    local open_brackets_count_nested17\
    \ = 0\n    local close_brackets_count_nested17 = 0\n    local open_brackets_count_nested18\
    \ = 0\n    local close_brackets_count_nested18 = 0\n    local open_brackets_count_nested19\
    \ = 0\n    local close_brackets_count_", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_count_plus_one = open_brackets_count\
    \ + 1\n    local close_brackets_count_plus_one = close_brackets_count + 1\n  \
    \  local open_brackets_count_minus_one = open_brackets_count - 1\n    local close_brackets_count_minus_one\
    \ = close_brackets_count - 1\n    local open_brackets_count_minus_one_plus_one\
    \ = open_brackets_count_minus_one + 1\n    local close_brackets_count_minus_one_plus_one\
    \ = close_brackets_count_minus_one + 1\n    local open_brackets_count_minus_one_minus_one\
    \ = open_brackets_count_minus_one - 1\n    local close_brackets_count_minus_one_minus_one\
    \ = close_brackets_count_minus_one - 1\n    local open_brackets_count_minus_one_minus_one_plus_one\
    \ = open_brackets_count_minus_one_minus_one + 1\n    local close_brackets_count_minus_one_minus_one_plus_one\
    \ = close_brackets_count_minus_one_minus_one + 1\n    local open_brackets_count_minus_one_minus_one_minus_one\
    \ = open_brackets_count_minus_one_minus_one - 1\n    local close_brackets_count_minus_one_minus_one_minus_one\
    \ = close_brackets_count_minus_one_minus_one - 1\n    local open_brackets_count_minus_one_minus_one_minus_one_plus_one\
    \ = open_brackets_count_minus_one_minus_one_minus_one + 1\n    local close_brackets_count_minus_one_minus_one_minus_one_plus_one\
    \ = close_brackets_count_minus_one_minus_one_minus_one + 1\n    local open_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = open_brackets_count_minus_one_minus_one_minus_one - 1\n    local close_brackets_count_minus_one_minus_one_minus_one_minus_one\
    \ = close_brackets_count_minus_one_minus_", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = open_brackets_count - 1\n    local open_brackets_index2\
    \ = open_brackets_count - 1\n    local close_brackets_index2 = close_brackets_count\
    \ - 1\n    local open_brackets_index3 = open_brackets_count - 1\n    local close_brackets_index3\
    \ = close_brackets_count - 1\n    local open_brackets_index4 = open_brackets_count\
    \ - 1\n    local close_brackets_index4 = close_brackets_count - 1\n    local open_brackets_index5\
    \ = open_brackets_count - 1\n    local close_brackets_index5 = close_brackets_count\
    \ - 1\n    local open_brackets_index6 = open_brackets_count - 1\n    local close_brackets_index6\
    \ = close_brackets_count - 1\n    local open_brackets_index7 = open_brackets_count\
    \ - 1\n    local close_brackets_index7 = close_brackets_count - 1\n    local open_brackets_index8\
    \ = open_brackets_count - 1\n    local close_brackets_index8 = close_brackets_count\
    \ - 1\n    local open_brackets_index9 = open_brackets_count - 1\n    local close_brackets_index9\
    \ = close_brackets_count - 1\n    local open_brackets_index10 = open_brackets_count\
    \ - 1\n    local close_brackets_index10 = close_brackets_count - 1\n    local\
    \ open_brackets_index11 = open_brackets_count - 1\n    local close_brackets_index11\
    \ = close_brackets_count - 1\n    local open_brackets_index12 = open_brackets_count\
    \ - 1\n    local close_brackets_index12 = close_brackets_count - 1\n    local\
    \ open_brackets_index13 = open_brackets_count - 1\n    local close_brackets_index13\
    \ = close_brackets_count - 1\n    local open_brackets_index", "    local open_brackets\
    \ = {\n        [\"(\"] = true,\n        [\")\"] = true,\n        [\"[\"] = true,\n\
    \        [\"]\"] = true,\n        [\"{\"] = true,\n        [\"}\"] = true,\n \
    \       [\"<\"] = true,\n        [\">\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"]\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = ", "    local open_brackets = {}\n   \
    \ local close_brackets = {}\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count_max = 0\n    local close_brackets_index_count_max\
    \ = 0\n    local open_brackets_index_count_min = 0\n    local close_brackets_index_count_min\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n    local open_brackets_index_count_max_index = 0\n    local close_brackets_index_count_max_index\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n    local open_brackets_index_count_max_index = 0\n    local close_brackets_index_count_max_index\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n    local open_brackets_index_count_max_index = 0\n    local close_brackets_index_count_max_index\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n    local open_brackets_index_count_max_index = 0\n    local close_brackets_index_count_max_index\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n    local open_brackets_index_count_max_index = 0\n    local close_brackets_index_count_max_index\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n    local open_brackets_index_count_max_index = 0\n    local close_brackets_index_count_max_index\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n    local open_brackets_index_count_max_index = 0\n    local close_brackets_index_count_max_index\
    \ = 0\n    local open_brackets_index_count_min_index = 0\n    local close_brackets_index_count_min_index\
    \ = 0\n", "   local brackets = {\n      [\"(\"] = true,\n      [\")\"] = true,\n\
    \      [\"[\"] = true,\n      [\"]\"] = true,\n      [\"{\"] = true,\n      [\"\
    }\"] = true,\n      [\"<\"] = true,\n      [\">\"] = true,\n      [\"+\"] = true,\n\
    \      [\"-\"] = true,\n      [\"*\"] = true,\n      [\"/\"] = true,\n      [\"\
    %\"] = true,\n      [\"^\"] = true,\n      [\"=\"] = true,\n      [\"==\"] = true,\n\
    \      [\"~\"] = true,\n      [\"?\"] = true,\n      [\":\"] = true,\n      [\"\
    |\"] = true,\n      [\"&\"] = true,\n      [\"!\"] = true,\n      [\"<=\"] = true,\n\
    \      [\">=\"] = true,\n      [\"<=>\"] = true,\n      [\"~=\"] = true,\n   \
    \   [\"<<\"] = true,\n      [\">>\"] = true,\n      [\">>>\"] = true,\n      [\"\
    <-\"] = true,\n      [\"->\"] = true,\n      [\"..\"] = true,\n      [\"..<\"\
    ] = true,\n      [\".>\"] = true,\n      [\".>>\"] = true,\n      [\".->\"] =\
    \ true,\n      [\".<-\"] = true,\n      [\".->>\"] = true,\n      [\".<-<\"] =\
    \ true,\n      [\".<-<-\"] = true,\n      [\".-><\"] = true,\n      [\".->>\"\
    ] = true,\n      [\".->>>\"] = true,\n      [\".->->\"] = true,\n      [\".->->>\"\
    ] = true,\n      [\".->->->\"] = true,\n      [\".->->->>\"] = true,\n      [\"\
    .->->->->\"] = true,\n      [\".->->->->>\"] = true,\n      [\".->->->->>\"] =\
    \ true,\n      [\".->->->->>\"] = true,\n      [\".->->->->>\"] = true,\n    \
    \  [\".->->->->>\"] = true,\n      [\".->->->->>\"] = true,\n      [\".->->->->>\"\
    ] = true,\n      [\".->->->->>\"] = true,\n      [\".->->->->>\"] = true,\n  \
    \    [\".->->->->>\"] = true,\n      [\".->->->->>\"] = true,\n      [\".->->->->>\"\
    ] = true,\n      [\".->->->->>\"] = true,\n      [\".->->->->>\"] = true,\n  \
    \    [\".->->->->>\"] = true,\n      [\".->->->->>\"] = true,\n      [\".->->",
  "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local is_nested\
    \ = open_brackets_count > close_brackets_count\n    return is_nested\nend", " \
    \   local brackets = {\n        \"(\",\n        \")\",\n        \"[\",\n     \
    \   \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n \
    \       \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n        \"(\"\
    ,\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"\
    }\",\n        \"<\",\n        \">\",\n        \"(\",\n        \")\",\n       \
    \ \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n   \
    \     \">\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n\
    \        \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n        \"(\"\
    ,\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"\
    }\",\n        \"<\",\n        \">\",\n        \"(\",\n        \")\",\n       \
    \ \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n   \
    \     \">\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n\
    \        \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n        \"(\"\
    ,\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"\
    }\",\n        \"<\",\n        \">\",\n        \"(\",\n        \")\",\n       \
    \ \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n   \
    \     \">\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n\
    \        \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n        \"(\"\
    ,\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"\
    }\",\n        \"<\",\n        \">\",\n        \"(\",\n        \")\",\n       \
    \ \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n   \
    \     \">\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n\
    \        \"{\",\n        \"}\",\n        \"<\",\n        \">\",\n        \"(\"\
    ,\n        \")\",\n        \"[\",\n        \"]\",\n        \"{\",\n        \"\
    }\",\n        \"<\",\n        \">\",\n        \"(\",\n        \")\",\n       \
    \ \"[\",\n        \"]\",\n        \"{\",\n        \"}\",\n        \"<\",\n   \
    \     \">\",\n        \"(\",\n        \")\",\n        \"[\",\n        \"]\",\n\
    \        \"{\",\n        \"}\",\n        \"<\",\n", "    local brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = ", "  local\
    \ brackets = {}\n  local open_brackets = 0\n  local close_brackets = 0\n  for\
    \ i = 1, #string do\n    if string[i] == '[' then\n      open_brackets = open_brackets\
    \ + 1\n      brackets[#brackets + 1] = i\n    elseif string[i] == ']' then\n \
    \     close_brackets = close_brackets + 1\n      if open_brackets == close_brackets\
    \ then\n        brackets[#brackets + 1] = i\n      end\n    end\n  end\n  for\
    \ i = 1, #brackets do\n    local open = brackets[i]\n    local close = brackets[i\
    \ + 1]\n    if open < close then\n      return false\n    end\n  end\n  return\
    \ true\nend", "    local brackets = {\n        [\"[\"]=true,\n        [\"]\"]=true,\n\
    \        [\"{\"]=true,\n        [\"}\"]=true,\n        [\"(\"]=true,\n       \
    \ [\")\"]=true,\n        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"[\"\
    ]=true,\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"]=true,\n\
    \        [\"}\"]=true,\n    }\n    for i = 1, #string do\n        if brackets[string[i]]\
    \ then\n            return true\n        end\n    end\n    return false\nend",
  "  -- Create a stack of brackets.\n  local stack = {}\n  -- Iterate over the string\
    \ and push brackets onto the stack.\n  for i = 1, #string do\n    if string[i]\
    \ == '[' then\n      table.insert(stack, string[i])\n    elseif string[i] == ']'\
    \ then\n      -- If the stack is empty then we found a nested bracket.\n     \
    \ if #stack == 0 then\n        return true\n      else\n        -- Pop the top\
    \ bracket off the stack.\n        local top = stack[#stack]\n        -- If the\
    \ top bracket is another bracket then we found a nested bracket.\n        if top\
    \ == '[' then\n          return true\n        else\n          -- If the top bracket\
    \ is not a bracket then we found a non-nested bracket.\n          return false\n\
    \        end\n      end\n    end\n  end\nend", "    local brackets = {\n     \
    \   [\"[\"]=true,\n        [\"]\"]=true,\n        [\"{\"]=true,\n        [\"}\"\
    ]=true,\n        [\"(\"]=true,\n        [\")\"]=true,\n        [\"[\"]=true,\n\
    \        [\"]\"]=true,\n        [\"[\"]=true,\n        [\"(\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n    }\n    local\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets =\
    \ string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.gsub(string,\
    \ \"(\", \"\")\n    local close_brackets_count = string.gsub(string, \")\", \"\
    \")\n    local open_brackets_count_2 = string.gsub(string, \"{\", \"\")\n    local\
    \ close_brackets_count_2 = string.gsub(string, \"}\", \"\")\n    local open_brackets_count_3\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets_count_3 = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count_4 = string.gsub(string, \"{\", \"\
    \")\n    local close_brackets_count_4 = string.gsub(string, \"}\", \"\")\n   \
    \ local open_brackets_count_5 = string.gsub(string, \"[\", \"\")\n    local close_brackets_count_5\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count_6 = string.gsub(string,\
    \ \"{\", \"\")\n    local close_brackets_count_6 = string.gsub(string, \"}\",\
    \ \"\")\n    local open_brackets_count_7 = string.gsub(string, \"[\", \"\")\n\
    \    local close_brackets_count_7 = string.gsub(string, \"]\", \"\")\n    local\
    \ open_brackets_count_8 = string.gsub(string, \"{\", \"\")\n    local close_brackets_count_8\
    \ = string.gsub(string, \"}\", \"\")\n    local open_brackets_count_9 = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets_count_9 = string.gsub(string, \"]\",\
    \ \"\")\n    local open_brackets_count_10 = string.gsub(string, \"{\", \"\")\n\
    \    local close_brackets_count_10 = string.gsub(string, \"}\", \"\")\n    local\
    \ open_brackets_count_11 = string.gsub(string, \"[\", \"\")\n    local close_brackets_count_11\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count_12 = string.gsub(string,\
    \ \"{\", \"\")\n    local ", "  -- Create a stack to keep track of brackets.\n\
    \  local stack = {}\n  -- Iterate over the string.\n  for i = 1, #string do\n\
    \    -- If the current character is a left bracket, push it on the stack.\n  \
    \  if string[i] == '[' then\n      table.insert(stack, string[i])\n    -- If the\
    \ current character is a right bracket, pop it from the stack.\n    elseif string[i]\
    \ == ']' then\n      local top = stack[#stack]\n      table.remove(stack, #stack)\n\
    \      if top == '[' then\n        return true\n      elseif top == ']' then\n\
    \        return false\n      end\n    end\n  end\n  return false\nend", "    local\
    \ brackets = {\n        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"{\"]=true,\n\
    \        [\"}\"]=true,\n        [\"(\"]=true,\n        [\")\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"]\"]=true,\n        [\"[\"]=true,\n        [\"(\"\
    ]=true,\n        [\"[\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n\
    \    }\n    for i = 1, #string do\n        if brackets[string[i]] then\n     \
    \       return true\n        end\n    end\n    return false\nend", "    local\
    \ open_brackets = {}\n    local close_brackets = {}\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n\
    \    local close_brackets_index = 0\n    local open_brackets_length = 0\n    local\
    \ close_brackets_length = 0\n    local open_brackets_string = \"\"\n    local\
    \ close_brackets_string = \"\"\n    local open_brackets_index = 0\n    local close_brackets_index\
    \ = 0\n    local open_brackets_length = 0\n    local close_brackets_length = 0\n\
    \    local open_brackets_string = \"\"\n    local close_brackets_string = \"\"\
    \n    local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_string\
    \ = \"\"\n    local close_brackets_string = \"\"\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length = 0\n    local open_brackets_string = \"\"\n\
    \    local close_brackets_string = \"\"\n    local open_brackets_index = 0\n \
    \   local close_brackets_index = 0\n    local open_brackets_length = 0\n    local\
    \ close_brackets_length = 0\n    local open_brackets_string = \"\"\n    local\
    \ close_brackets_string = \"\"\n    local open_brackets_index = 0\n    local close_brackets_index\
    \ = 0\n    local open_brackets_length = 0\n    local close_brackets_length = 0\n\
    \    local open_brackets_string = \"\"\n    local close_brackets_string = \"\"\
    \n    local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_string\
    \ = \"\"\n    local close_brackets_string = \"\"\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length = 0\n    local open_brackets_string = \"\"\n\
    \    local close_brackets_string", "    local brackets = string.gsub(string, \"\
    [\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = ", "\tlocal\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n\tlocal close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n\tlocal open_brackets_count = string.len(open_brackets)\n\tlocal\
    \ close_brackets_count = string.len(close_brackets)\n\t\n\tif open_brackets_count\
    \ ~= close_brackets_count then\n\t\treturn false\n\tend\n\t\n\tlocal open_brackets_index\
    \ = open_brackets_count - 1\n\tlocal close_brackets_index = close_brackets_count\
    \ - 1\n\t\n\twhile open_brackets_index > 0 do\n\t\tlocal open_bracket = open_brackets[open_brackets_index]\n\
    \t\tlocal close_bracket = close_brackets[close_brackets_index]\n\t\t\n\t\tif open_bracket\
    \ ~= close_bracket then\n\t\t\treturn false\n\t\tend\n\t\t\n\t\topen_brackets_index\
    \ = open_brackets_index - 1\n\t\tclose_brackets_index = close_brackets_index -\
    \ 1\n\tend\n\t\n\treturn true\nend", "    local brackets = {\n        [\"[\"]=true,\n\
    \        [\"]\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n       \
    \ [\"(\"]=true,\n        [\")\"]=true,\n        [\"[\"]=true,\n        [\"]\"\
    ]=true,\n        [\"[\"]=true,\n        [\"(\"]=true,\n        [\"[\"]=true,\n\
    \        [\"{\"]=true,\n        [\"}\"]=true,\n    }\n    local open_brackets\
    \ = {\n        [\"[\"]=true,\n        [\"{\"]=true,\n        [\"(\"]=true,\n \
    \   }\n    local close_brackets = {\n        [\"[\"]=true,\n        [\"}\"]=true,\n\
    \        [\"(\"]=true,\n    }\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_stack = {}\n    local close_brackets_stack = {}\n\
    \    for i = 1, #string do\n        if brackets[string[i]] then\n            if\
    \ open_brackets[string[i]] then\n                open_brackets_count = open_brackets_count\
    \ + 1\n                open_brackets_stack[open_brackets_count] = string[i]\n\
    \            elseif close_brackets[string[i]] then\n                close_brackets_count\
    \ = close_brackets_count + 1\n                close_brackets_stack[close_brackets_count]\
    \ = string[i]\n            end\n        elseif open_brackets_stack[open_brackets_count]\
    \ then\n            if close_brackets_stack[close_brackets_count] then\n     \
    \           if open_brackets_stack[open_brackets_count] == close_brackets_stack[close_brackets_count]\
    \ then\n                    return true\n                end\n            end\n\
    \        end\n    end\n    return false\nend", "    local brackets = {\n     \
    \   [\"(\"] = true,\n        [\")\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"]\"] = true,\n        [\"{\"] = true,\n        [\"}\"] = true,\n       \
    \ [\"<\"] = true,\n        [\">\"] = true,\n        [\"<=\"] = true,\n       \
    \ [\">=\"] = true,\n        [\"==\"] = true,\n        [\"~=\"] = true,\n     \
    \   [\"!=\"] = true,\n        [\"=\"] = true,\n        [\"&&\"] = true,\n    \
    \    [\"||\"] = true,\n        [\"<-\"] = true,\n        [\"->\"] = true,\n  \
    \      [\"<->\"] = true,\n        [\"..\"] = true,\n        [\"..<\"] = true,\n\
    \        [\"..>\"] = true,\n        [\"..<=\"] = true,\n        [\"..>=\"] = true,\n\
    \        [\"..==\"] = true,\n        [\"..~=\"] = true,\n        [\"..!=\"] =\
    \ true,\n        [\"..=\"] = true,\n        [\"..&&\"] = true,\n        [\"..||\"\
    ] = true,\n        [\"..<-\"] = true,\n        [\"..->\"] = true,\n        [\"\
    ..<->\"] = true,\n        [\"....\"] = true,\n        [\"....<\"] = true,\n  \
    \      [\"....>\"] = true,\n        [\"....<=\"] = true,\n        [\"....>=\"\
    ] = true,\n        [\"....==\"] = true,\n        [\"....~=\"] = true,\n      \
    \  [\"....!=\"] = true,\n        [\"....=\"] = true,\n        [\"....&&\"] = true,\n\
    \        [\"....||\"] = true,\n        [\"....<-\"] = true,\n        [\"....->\"\
    ] = true,\n        [\"....<->\"] = true,\n        [\"......\"] = true,\n     \
    \   [\"......<\"] = true,\n        [\"......>\"] = true,\n        [\"......<=\"\
    ] = true,\n        [\"......>=\"] = true,\n        [\"......==\"] = true,\n  \
    \      [\"......~=\"] = true,\n        [\"......!=\"] = true,\n        [\"......=\"\
    ] = true,\n        [\"......&&\"] = true,\n        [\"......||\"] = true,\n  \
    \      [\"......<-\"] = true,\n        [\"......->\"] = true,\n        [\"......<->\"\
    ] = true,\n        [\"........\"] = true,\n        [\"........<\"] = true,\n \
    \       [\"........>\"] = true,\n        [\"........<=\"] = true,\n", "    local\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets =\
    \ string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local is_nested\
    \ = open_brackets_count > close_brackets_count\n    return is_nested\nend", " \
    \ local open_brackets = string.gsub(string, \"[\", \"\")\n  local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n  local open_brackets_count = string.len(open_brackets)\n\
    \  local close_brackets_count = string.len(close_brackets)\n  local open_brackets_index\
    \ = open_brackets_count - 1\n  local close_brackets_index = close_brackets_count\
    \ - 1\n  local open_brackets_index2 = open_brackets_count - 2\n  local close_brackets_index2\
    \ = close_brackets_count - 2\n  local open_brackets_index3 = open_brackets_count\
    \ - 3\n  local close_brackets_index3 = close_brackets_count - 3\n  local open_brackets_index4\
    \ = open_brackets_count - 4\n  local close_brackets_index4 = close_brackets_count\
    \ - 4\n  local open_brackets_index5 = open_brackets_count - 5\n  local close_brackets_index5\
    \ = close_brackets_count - 5\n  local open_brackets_index6 = open_brackets_count\
    \ - 6\n  local close_brackets_index6 = close_brackets_count - 6\n  local open_brackets_index7\
    \ = open_brackets_count - 7\n  local close_brackets_index7 = close_brackets_count\
    \ - 7\n  local open_brackets_index8 = open_brackets_count - 8\n  local close_brackets_index8\
    \ = close_brackets_count - 8\n  local open_brackets_index9 = open_brackets_count\
    \ - 9\n  local close_brackets_index9 = close_brackets_count - 9\n  local open_brackets_index10\
    \ = open_brackets_count - 10\n  local close_brackets_index10 = close_brackets_count\
    \ - 10\n  local open_brackets_index11 = open_brackets_count - 11\n  local close_brackets_index11\
    \ = close_brackets_count - 11\n  local open_brackets_index12 = open_brackets_count\
    \ - 12\n  local close_brackets_index12 = close_brackets_count - 12\n  local open_brackets_index13\
    \ = open_brackets_count - 13\n  local close", "    local brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = ", "\tlocal\
    \ brackets = string.gsub(string, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \")\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n\tlocal brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \")\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n\tlocal brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \")\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n\tlocal brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \")\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n\tlocal brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \")\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n\tlocal brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \")\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n\tlocal brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal\
    \ brackets = ", "\tlocal brackets = string.gsub(string, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n\tlocal brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \")\", \"\")\n\tlocal brackets = ", "  local brackets = string.gsub(string,\
    \ \"[\", \"\")\n  local brackets_count = string.len(brackets)\n  local open_brackets\
    \ = 0\n  local close_brackets = 0\n  local open_brackets_count = 0\n  local close_brackets_count\
    \ = 0\n  for i = 1, brackets_count do\n    if brackets[i] == \"[\" then\n    \
    \  open_brackets = open_brackets + 1\n      open_brackets_count = open_brackets_count\
    \ + 1\n    elseif brackets[i] == \"]\" then\n      close_brackets = close_brackets\
    \ + 1\n      close_brackets_count = close_brackets_count + 1\n    end\n  end\n\
    \  if open_brackets_count ~= close_brackets_count then\n    return false\n  end\n\
    \  if open_brackets == close_brackets then\n    return true\n  end\n  return false\n\
    end", "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count_nested\
    \ = 0\n    local close_brackets_count_nested = 0\n    local open_brackets_count_nested2\
    \ = 0\n    local close_brackets_count_nested2 = 0\n    local open_brackets_count_nested3\
    \ = 0\n    local close_brackets_count_nested3 = 0\n    local open_brackets_count_nested4\
    \ = 0\n    local close_brackets_count_nested4 = 0\n    local open_brackets_count_nested5\
    \ = 0\n    local close_brackets_count_nested5 = 0\n    local open_brackets_count_nested6\
    \ = 0\n    local close_brackets_count_nested6 = 0\n    local open_brackets_count_nested7\
    \ = 0\n    local close_brackets_count_nested7 = 0\n    local open_brackets_count_nested8\
    \ = 0\n    local close_brackets_count_nested8 = 0\n    local open_brackets_count_nested9\
    \ = 0\n    local close_brackets_count_nested9 = 0\n    local open_brackets_count_nested10\
    \ = 0\n    local close_brackets_count_nested10 = 0\n    local open_brackets_count_nested11\
    \ = 0\n    local close_brackets_count_nested11 = 0\n    local open_brackets_count_nested12\
    \ = 0\n    local close_brackets_count_nested12 = 0\n    local open_brackets_count_nested13\
    \ = 0\n    local close_brackets_count_nested13 = 0\n    local open_brackets_count_nested14\
    \ = 0\n    local close_brackets_count_nested14 = 0\n    local open_brackets_count_nested15\
    \ = 0\n    local close_brackets_count_nested15 = 0\n    local open_brackets_count_nested16\
    \ = 0\n    local close_brackets_count_nested16 = 0\n    local open_brackets_count_nested17\
    \ = 0\n    local close_brackets_count_nested17 = 0\n    local open_brackets_count_nested18\
    \ = 0\n    local close_brackets_count_nested18 = 0\n    local open_brackets_count_nested19\
    \ = 0\n    local close_brackets_count_", '    local open_brackets = {[["("]]=true,[["["]]=true,[["{"]]=true,[["[".."]"]]=true,[["["..".."]"]]=true,[["[".."..".."]"]]=true,[["["..".."..".."]"]]=true,[["[".."..".."..".."]"]]=true,[["["..".."..".."..".."]"]=true,[["[".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."]"]=true,[["[".."..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."..".."]"]=true,[["[".."..".."..".."..".."..".."..".."]"]=true,[["[".."..".."..".."..".."..".."..".."]"]=true,[["[".."..".."..".."..".."..".."..".."]"]=true,[["[".."..".."..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."..".."..".."]"]=true,[["["..".."..".."..".."..".."..".."..".."]"]=true,[["["..".."..".."',
  "\tlocal brackets = string.gsub(string, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = ", "    local brackets = {\n        [\"(\"] = true,\n        [\"\
    )\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"\
    ] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] =\
    \ true,\n        [\"[<\"] = true,\n        [\">>\"] = true,\n        [\"[>\"]\
    \ = true,\n        [\"{<\"] = true,\n        [\"}>\"] = true,\n        [\"{>\"\
    ] = true,\n    }\n    local open_brackets = #string - #string % 2\n    local close_brackets\
    \ = #string - #string % 2\n    for i = 1, open_brackets do\n        if brackets[string[i]]\
    \ then\n            close_brackets = close_brackets - 1\n        else\n      \
    \      return false\n        end\n    end\n    if close_brackets > 0 then\n  \
    \      return false\n    end\n    return true\nend", "    local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n  \
    \  local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count_plus_1\
    \ = open_brackets_count + 1\n    local close_brackets_count_plus_1 = close_brackets_count\
    \ + 1\n    local open_brackets_count_minus_1 = open_brackets_count - 1\n    local\
    \ close_brackets_count_minus_1 = close_brackets_count - 1\n    local open_brackets_count_minus_2\
    \ = open_brackets_count - 2\n    local close_brackets_count_minus_2 = close_brackets_count\
    \ - 2\n    local open_brackets_count_minus_3 = open_brackets_count - 3\n    local\
    \ close_brackets_count_minus_3 = close_brackets_count - 3\n    local open_brackets_count_minus_4\
    \ = open_brackets_count - 4\n    local close_brackets_count_minus_4 = close_brackets_count\
    \ - 4\n    local open_brackets_count_minus_5 = open_brackets_count - 5\n    local\
    \ close_brackets_count_minus_5 = close_brackets_count - 5\n    local open_brackets_count_minus_6\
    \ = open_brackets_count - 6\n    local close_brackets_count_minus_6 = close_brackets_count\
    \ - 6\n    local open_brackets_count_minus_7 = open_brackets_count - 7\n    local\
    \ close_brackets_count_minus_7 = close_brackets_count - 7\n    local open_brackets_count_minus_8\
    \ = open_brackets_count - 8\n    local close_brackets_count_minus_8 = close_brackets_count\
    \ - 8\n    local open_brackets_count_minus_9 = open_brackets_count - 9\n    local\
    \ close_brackets_count_minus_9 = close_brackets_count - 9\n    local open_brackets_count_minus_10\
    \ = open_brackets_count - 10\n    local close_brackets_count_minus_10 = close_brackets_count\
    \ - 10\n    local open_brackets_count_minus_11 = open_brackets_", "    local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n  \
    \  local close_brackets_count = string.len(close_brackets)\n    local open_brackets_index\
    \ = open_brackets_count - 1\n    local close_brackets_index = close_brackets_count\
    \ - 1\n    local open_brackets_index_in_string = 0\n    local close_brackets_index_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local close_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ open_brackets_index_in_string_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local close_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ open_brackets_index_in_string_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local close_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ open_brackets_index_in_string_in_string_in_string = 0\n    local close_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local open_brackets_index_in_string_in_string_in_string = 0\n    local\
    \ close_brackets_index_in_string_in_string_in_string = 0\n    local open_brackets_index_in_string_in_string_in_string\
    \ = 0\n    local ", "    local brackets = string.gsub(string, \"[\", \"\")\n \
    \   local brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets =\
    \ string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = ", "   \
    \ local brackets = string.gsub(string, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = ", "    local open_brackets = string.gsub(string, \"[\", \"\")\n\
    \    local close_brackets = string.gsub(string, \"]\", \"\")\n    local open_brackets_count\
    \ = string.len(open_brackets)\n    local close_brackets_count = string.len(close_brackets)\n\
    \    local open_brackets_index = open_brackets_count - 1\n    local close_brackets_index\
    \ = open_brackets_count - 1\n    local open_brackets_index2 = open_brackets_count\
    \ - 1\n    local close_brackets_index2 = open_brackets_count - 1\n    local open_brackets_index3\
    \ = open_brackets_count - 1\n    local close_brackets_index3 = open_brackets_count\
    \ - 1\n    local open_brackets_index4 = open_brackets_count - 1\n    local close_brackets_index4\
    \ = open_brackets_count - 1\n    local open_brackets_index5 = open_brackets_count\
    \ - 1\n    local close_brackets_index5 = open_brackets_count - 1\n    local open_brackets_index6\
    \ = open_brackets_count - 1\n    local close_brackets_index6 = open_brackets_count\
    \ - 1\n    local open_brackets_index7 = open_brackets_count - 1\n    local close_brackets_index7\
    \ = open_brackets_count - 1\n    local open_brackets_index8 = open_brackets_count\
    \ - 1\n    local close_brackets_index8 = open_brackets_count - 1\n    local open_brackets_index9\
    \ = open_brackets_count - 1\n    local close_brackets_index9 = open_brackets_count\
    \ - 1\n    local open_brackets_index10 = open_brackets_count - 1\n    local close_brackets_index10\
    \ = open_brackets_count - 1\n    local open_brackets_index11 = open_brackets_count\
    \ - 1\n    local close_brackets_index11 = open_brackets_count - 1\n    local open_brackets_index12\
    \ = open_brackets_count - 1\n    local close_brackets_index12 = open_brackets_count\
    \ - 1\n    local open_brackets_index13 = open_brackets_count - 1\n    local close_brackets_index13\
    \ = open_brackets_count - 1\n    local open_brackets_index", "    local open_brackets\
    \ = {'[', '{', '('}\n    local close_brackets = {']', '}', '}'} -- This list should\
    \ contain all brackets \n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local ", "  --\
    \ Create a stack to keep track of brackets.\n  local stack = {}\n  -- Iterate\
    \ over the string.\n  for i = 1, #string do\n    -- If the current character is\
    \ a left bracket, push it to the stack.\n    if string[i] == '[' then\n      table.insert(stack,\
    \ string[i])\n    -- If the current character is a right bracket, pop the stack\
    \ until a left bracket is encountered.\n    elseif string[i] == ']' then\n   \
    \   while stack[#stack] and stack[#stack] ~= '[' do\n        stack[#stack] = nil\n\
    \      end\n      -- If the stack is empty, return true.\n      if #stack == 0\
    \ then\n        return true\n      -- Otherwise, if the stack is not empty, return\
    \ false.\n      else\n        return false\n      end\n    end\n  end\nend", " \
    \ local brackets = {\n    [\"(\"] = \")\",\n    [\"[\"] = \"]\",\n    [\"{\"]\
    \ = \"}\",\n  }\n  for bracket, open in pairs(brackets) do\n    local close =\
    \ brackets[bracket]\n    if string.find(string, open) ~= nil then\n      if string.find(string,\
    \ close) ~= nil then\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  local brackets = {[\"]=\", [\"]\", \"[\", \"]\"}\n  local opening_brackets\
    \ = {[\"]=\", [\"]\", \"[\", \"]\"}\n  local closing_brackets = {[\"]=\", [\"\
    ]\", \"[\", \"]\"}\n  local opening_closing_brackets = {[\"]=\", [\"]\", \"[\"\
    , \"]\"}\n  local opening_closing_brackets_count = 0\n  local opening_closing_brackets_count_max\
    \ = 0\n  local opening_closing_brackets_count_min = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min_index\
    \ = 0\n  local opening_closing_brackets_count_max_index = 0\n  local opening_closing_brackets_count_min",
  "    local open_brackets = {\n        ['('] = true,\n        [')'] = true,\n   \
    \     ['{'] = true,\n        ['}'] = true,\n        ['['] = true,\n        [']']\
    \ = true,\n        ['<'] = true,\n        ['>'] = true,\n        ['+'] = true,\n\
    \        ['-'] = true,\n        ['*'] = true,\n        ['/'] = true,\n       \
    \ ['%'] = true,\n        ['^'] = true,\n        ['|'] = true,\n        ['&'] =\
    \ true,\n        ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n\
    \        [';'] = true,\n        [':'] = true,\n        ['~'] = true,\n       \
    \ ['?'] = true,\n        ['!'] = true,\n        ['='] = true,\n        ['|'] =\
    \ true,\n        ['&'] = true,\n        ['?'] = true,\n        ['.'] = true,\n\
    \        [','] = true,\n        [';'] = true,\n        [':'] = true,\n       \
    \ ['~'] = true,\n        ['?'] = true,\n        ['!'] = true,\n        ['='] =\
    \ true,\n        ['|'] = true,\n        ['&'] = true,\n        ['?'] = true,\n\
    \        ['.'] = true,\n        [','] = true,\n        [';'] = true,\n       \
    \ [':'] = true,\n        ['~'] = true,\n        ['?'] = true,\n        ['!'] =\
    \ true,\n        ['='] = true,\n        ['|'] = true,\n        ['&'] = true,\n\
    \        ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n       \
    \ [';'] = true,\n        [':'] = true,\n        ['~'] = true,\n        ['?'] =\
    \ true,\n        ['!'] = true,\n        ['='] = true,\n        ['|'] = true,\n\
    \        ['&'] = true,\n        ['?'] = true,\n        ['.'] = true,\n       \
    \ [','] = true,\n        [';'] = true,\n        [':'] = true,\n        ['~'] =\
    \ true,\n        ['?'] = true,\n        ['!'] = true,\n        ['='] = true,\n\
    \        ['|'] = true,\n        ['&'] = true,\n        ['?'] = true,\n       \
    \ ['.'] = true,\n        [','] = true,\n        [';'] = true,\n        [':'] =\
    \ true,\n        ['~'] = true,\n        ['?'] = true,\n        ['!'] = true,\n\
    \        ['='] = true,\n        ['|'] = true,\n        ['&'] = true,\n       \
    \ ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n        [';'] =\
    \ true,\n        [':'] = true,\n        ['~'] = true,\n        ['?'] = true,\n\
    \        ['!'] = true,\n        ['='] = true,\n        ['|'] = true,\n       \
    \ ['&'] = true,\n        ['?'] = true,\n        ['.'] = true,\n        [','] =\
    \ true,\n        [';'] = true,\n        [':'] = true,\n        ['~'] = true,\n\
    \        ['?'] = true,\n        ['!'] = true,", "    local open_brackets = {\n\
    \        ['('] = true,\n        [')'] = true,\n        ['{'] = true,\n       \
    \ ['}'] = true,\n        ['['] = true,\n        [']'] = true,\n    }\n    local\
    \ close_brackets = {\n        ['('] = true,\n        [')'] = true,\n        ['{']\
    \ = true,\n        ['}'] = true,\n        ['['] = true,\n        [']'] = true,\n\
    \    }\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    for i = 1, #string do\n        if open_brackets[string[i]] then\n       \
    \     open_brackets_count = open_brackets_count + 1\n        elseif close_brackets[string[i]]\
    \ then\n            close_brackets_count = close_brackets_count + 1\n        elseif\
    \ open_brackets_count > close_brackets_count then\n            return true\n \
    \       end\n    end\n    return false\nend", "  local brackets = string.gsub(string,\
    \ \"[\", \"\")\n  local open_brackets = string.gsub(string, \"(\", \"\")\n  local\
    \ close_brackets = string.gsub(string, \")\", \"\")\n  local open_brackets_count\
    \ = string.gsub(open_brackets, \"[\", \"\")\n  local close_brackets_count = string.gsub(close_brackets,\
    \ \"]\", \"\")\n  local open_brackets_count_max = string.len(open_brackets)\n\
    \  local close_brackets_count_max = string.len(close_brackets)\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_brackets) - open_brackets_count_max\n  local close_brackets_count_min\
    \ = string.len(close_brackets) - close_brackets_count_max\n  local open_brackets_count_min\
    \ = string.len(open_b", "    local open_brackets = {\n        [\"(\"] = true,\n\
    \        [\")\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n \
    \       [\"{\"] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n  \
    \      [\">\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"{\"] = true,\n        [\"}\"] = true,\n    \
    \    [\"<\"] = true,\n        [\">\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"]\"] = true,\n    }\n    local close_brackets = {\n        [\"(\"] = true,\n\
    \        [\")\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n \
    \       [\"{\"] = true,\n        [\"}\"] = true,\n        [\"<\"] = true,\n  \
    \      [\">\"] = true,\n        [\"[\"] = true,\n        [\"]\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"{\"] = true,\n        [\"}\"] = true,\n    \
    \    [\"<\"] = true,\n        [\">\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"]\"] = true,\n    }\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_stack = {}\n    local close_brackets_stack = {}\n\
    \    for i = 1, #string do\n        if open_brackets[string[i]] then\n       \
    \     open_brackets_count = open_brackets_count + 1\n            open_brackets_stack[#open_brackets_stack\
    \ + 1] = string[i]\n        elseif close_brackets[string[i]] then\n          \
    \  close_brackets_count = close_brackets_count + 1\n            close_brackets_stack[#close_brackets_stack\
    \ + 1] = string[i]\n        elseif open_brackets_count == close_brackets_count\
    \ then\n            local open_brackets_str = table.concat(open_brackets_stack)\n\
    \            local close_brackets_str = table.concat(close_brackets_stack)\n \
    \           if open_brackets_str == close_brackets_str then\n                return\
    \ true\n            end\n        end\n    end\n    return false\nend", "    local\
    \ open_brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n       \
    \ [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n        [\"\
    [<\"] = true,\n        [\">>\"] = true,\n        [\"[>\"] = true,\n        [\"\
    {<\"] = true,\n        [\"}>\"] = true,\n        [\"{>\"] = true,\n    }\n   \
    \ local close_brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n\
    \        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n \
    \       [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n  \
    \      [\"[<\"] = true,\n        [\">>\"] = true,\n        [\"[>\"] = true,\n\
    \        [\"{<\"] = true,\n        [\"}>\"] = true,\n        [\"{>\"] = true,\n\
    \    }\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    for i = 1, #string do\n        if open_brackets[string[i]] then\n       \
    \     open_brackets_count = open_brackets_count + 1\n        elseif close_brackets[string[i]]\
    \ then\n            close_brackets_count = close_brackets_count + 1\n        end\n\
    \    end\n    return open_brackets_count >= close_brackets_count\nend", "    local\
    \ open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets =\
    \ string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count\
    \ = open_brackets_count + close_brackets_count\n    local close_brackets_count\
    \ = close_brackets_count - open_brackets_count\n    local open_brackets_count\
    \ = open_brackets_count + 1\n    local close_brackets_count = close_brackets_count\
    \ - 1\n    local open_brackets_count = open_brackets_count + 1\n    local close_brackets_count\
    \ = close_brackets_count - 1\n    local open_brackets_count = open_brackets_count\
    \ + 1\n    local close_brackets_count = close_brackets_count - 1\n    local open_brackets_count\
    \ = open_brackets_count + 1\n    local close_brackets_count = close_brackets_count\
    \ - 1\n    local open_brackets_count = open_brackets_count + 1\n    local close_brackets_count\
    \ = close_brackets_count - 1\n    local open_brackets_count = open_brackets_count\
    \ + 1\n    local close_brackets_count = close_brackets_count - 1\n    local open_brackets_count\
    \ = open_brackets_count + 1\n    local close_brackets_count = close_brackets_count\
    \ - 1\n    local open_brackets_count = open_brackets_count + 1\n    local close_brackets_count\
    \ = close_brackets_count - 1\n    local open_brackets_count = open_brackets_count\
    \ + 1\n    local close_brackets_count = close_brackets_count - 1\n    local open_brackets_count\
    \ = open_brackets_count + 1\n    local close_brackets_count = close_brackets_count\
    \ - 1\n    local open_brackets_count = open_brackets_count + 1\n    local close_brackets_count\
    \ = close_brackets_count - 1\n    local open_brackets_count = open_brackets_count\
    \ + 1\n    local close_brackets_count = close_brackets_count - 1\n    local open_brackets_count\
    \ = open_brackets_count + 1\n    local close_brackets_count = ", "  -- Create\
    \ a stack to keep track of brackets\n  local stack = {}\n  -- Iterate over the\
    \ string and push brackets onto the stack\n  for i = 1, #string do\n    if string[i]\
    \ == '[' then\n      table.insert(stack, string[i])\n    elseif string[i] == ']'\
    \ then\n      -- If the stack is empty then we found a nested bracket\n      if\
    \ #stack == 0 then\n        return true\n      end\n      -- Pop the top bracket\
    \ off the stack\n      local top = stack[#stack]\n      -- If the top bracket\
    \ is another bracket then we found a nested bracket\n      if string[top] == '['\
    \ then\n        return true\n      end\n      -- Pop the top bracket off the stack\n\
    \      stack[#stack] = nil\n    end\n  end\n  return false\nend", "    local brackets\
    \ = {\n        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"{\"]=true,\n \
    \       [\"}\"]=true,\n        [\"(\"]=true,\n        [\")\"]=true,\n        [\"\
    [\"]=true,\n        [\"]\"]=true,\n        [\"[\"]=true,\n        [\"(\"]=true,\n\
    \        [\"[\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=", "\t-- The function should return True if and only if there is a valid\
    \ subsequence of brackets \n\t-- where at least one bracket in the subsequence\
    \ is nested.\n\t-- The function should return False otherwise.\n\t-- The function\
    \ should return False if and only if there are no valid subsequences of brackets.\n\
    \t-- The function should return True otherwise.\n\t-- The function should return\
    \ True only if the string contains at least one bracket.\n\t-- The function should\
    \ return False otherwise.\n\t-- The function should return False if and only if\
    \ there are no valid subsequences of brackets.\n\t-- The function should return\
    \ True otherwise.\n\t-- The function should return True only if the string contains\
    \ at least one bracket.\n\t-- The function should return False otherwise.\n\t\
    -- The function should return False if and only if there are no valid subsequences\
    \ of brackets.\n\t-- The function should return True otherwise.\n\t-- The function\
    \ should return True only if the string contains at least one bracket.\n\t-- The\
    \ function should return False otherwise.\n\t-- The function should return False\
    \ if and only if there are no valid subsequences of brackets.\n\t-- The function\
    \ should return True otherwise.\n\t-- The function should return True only if\
    \ the string contains at least one bracket.\n\t-- The function should return False\
    \ otherwise.\n\t-- The function should return False if and only if there are no\
    \ valid subsequences of brackets.\n\t-- The function should return True otherwise.\n\
    \t-- The function should return True only if the string contains at least one\
    \ bracket.\n\t-- The function should return False otherwise.\n\t-- The function\
    \ should return False if and only if there are no valid subsequences of brackets.\n\
    \t-- The function should return True otherwise.\n\t-- The function should return\
    \ True only if the string contains at least one bracket.\n\t-- The function should\
    \ return False otherwise.\n\t-- The function should return False if and only if\
    \ there are no valid subsequences of brackets.\n\t-- The function should return\
    \ True otherwise.\n\t-- The function should return True only if the string contains\
    \ at least one bracket.\n\t-- The function should return False otherwise.\n\t\
    -- The function should return False if and only if there are no valid subsequences\
    \ of brackets.\n\t-- The function should return True otherwise.\n\t-- The function\
    \ should return True only if the string contains at least one bracket.\n\t-- The\
    \ function should return False otherwise.\n\t-- The function should return False\
    \ if and only if there are no valid subsequences of brackets.\n\t-- The function\
    \ should return True otherwise.\n\t-- The function should return True only if\
    \ the string contains at least one bracket.\n\t-- The function should return False\
    \ otherwise.\n\t-- The function should return False if and only if there are no\
    \ valid subsequences of ", "    local open_brackets = string.gsub(string, \"[\"\
    , \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n    local\
    \ open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = open_brackets_count - 1\n    local open_brackets_index2\
    \ = open_brackets_count - 1\n    local close_brackets_index2 = close_brackets_count\
    \ - 1\n    local open_brackets_index3 = open_brackets_count - 1\n    local close_brackets_index3\
    \ = close_brackets_count - 1\n    local open_brackets_index4 = open_brackets_count\
    \ - 1\n    local close_brackets_index4 = close_brackets_count - 1\n    local open_brackets_index5\
    \ = open_brackets_count - 1\n    local close_brackets_index5 = close_brackets_count\
    \ - 1\n    local open_brackets_index6 = open_brackets_count - 1\n    local close_brackets_index6\
    \ = close_brackets_count - 1\n    local open_brackets_index7 = open_brackets_count\
    \ - 1\n    local close_brackets_index7 = close_brackets_count - 1\n    local open_brackets_index8\
    \ = open_brackets_count - 1\n    local close_brackets_index8 = close_brackets_count\
    \ - 1\n    local open_brackets_index9 = open_brackets_count - 1\n    local close_brackets_index9\
    \ = close_brackets_count - 1\n    local open_brackets_index10 = open_brackets_count\
    \ - 1\n    local close_brackets_index10 = close_brackets_count - 1\n    local\
    \ open_brackets_index11 = open_brackets_count - 1\n    local close_brackets_index11\
    \ = close_brackets_count - 1\n    local open_brackets_index12 = open_brackets_count\
    \ - 1\n    local close_brackets_index12 = close_brackets_count - 1\n    local\
    \ open_brackets_index13 = open_brackets_count - 1\n    local close_brackets_index13\
    \ = close_brackets_count - 1\n    local open_brackets_index", "  local brackets\
    \ = string.gsub(string, \"[\", \"\")\n  local open_brackets = string.gsub(string,\
    \ \"(\", \"\")\n  local close_brackets = string.gsub(string, \")\", \"\")\n  return\
    \ brackets == open_brackets ~= close_brackets\nend", "    local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n  \
    \  local close_brackets_count = string.len(close_brackets)\n    local open_brackets_index\
    \ = open_brackets_count - 1\n    local close_brackets_index = open_brackets_count\
    \ - 1\n    local open_brackets_index2 = open_brackets_count - 1\n    local close_brackets_index2\
    \ = close_brackets_count - 1\n    local open_brackets_index3 = open_brackets_count\
    \ - 1\n    local close_brackets_index3 = close_brackets_count - 1\n    local open_brackets_index4\
    \ = open_brackets_count - 1\n    local close_brackets_index4 = close_brackets_count\
    \ - 1\n    local open_brackets_index5 = open_brackets_count - 1\n    local close_brackets_index5\
    \ = close_brackets_count - 1\n    local open_brackets_index6 = open_brackets_count\
    \ - 1\n    local close_brackets_index6 = close_brackets_count - 1\n    local open_brackets_index7\
    \ = open_brackets_count - 1\n    local close_brackets_index7 = close_brackets_count\
    \ - 1\n    local open_brackets_index8 = open_brackets_count - 1\n    local close_brackets_index8\
    \ = close_brackets_count - 1\n    local open_brackets_index9 = open_brackets_count\
    \ - 1\n    local close_brackets_index9 = close_brackets_count - 1\n    local open_brackets_index10\
    \ = open_brackets_count - 1\n    local close_brackets_index10 = close_brackets_count\
    \ - 1\n    local open_brackets_index11 = open_brackets_count - 1\n    local close_brackets_index11\
    \ = close_brackets_count - 1\n    local open_brackets_index12 = open_brackets_count\
    \ - 1\n    local close_brackets_index12 = close_brackets_count - 1\n    local\
    \ open_brackets_index13 = open_brackets_count - 1\n    local close_brackets_index13\
    \ = close_brackets_count - 1\n    local open_brackets_index", "\tlocal brackets\
    \ = {\n\t\t[\"(\"] = true,\n\t\t[\")\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"\
    ]\"] = true,\n\t\t[\"{\"] = true,\n\t\t[\"}\"] = true,\n\t\t[\"<\"] = true,\n\t\
    \t[\">\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"]\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"]\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"(\"] = true,\n\t\t[\"(\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"[\"] = true,\n\
    \t\t[\"[\"] = true,\n\t\t[\"[\"", "   -- Create a stack to keep track of brackets.\n\
    \   local stack = {}\n   -- Iterate over the string.\n   for i = 1, #string do\n\
    \      -- If the current character is a left bracket, push it onto the stack.\n\
    \      if string[i] == '[' then\n         table.insert(stack, string[i])\n   \
    \   -- If the current character is a right bracket, pop it from the stack.\n \
    \     elseif string[i] == ']' then\n         -- If the stack is empty, return\
    \ False.\n         if #stack == 0 then\n            return false\n         --\
    \ If the stack is not empty, return True if and only if there is a valid subsequence\
    \ of brackets \n         -- where at least one bracket in the subsequence is nested.\n\
    \         else\n            -- If the top element in the stack is a left bracket,\
    \ pop it from the stack.\n            if stack[#stack] == '[' then\n         \
    \      stack[#stack] = nil\n            -- If the top element in the stack is\
    \ a right bracket, push it onto the stack.\n            elseif stack[#stack] ==\
    \ ']' then\n               table.insert(stack, '[')\n            -- If the top\
    \ element in the stack is not a left or right bracket, return False.\n       \
    \     else\n               return false\n            end\n         end\n     \
    \ -- If the current character is not a left or right bracket, return False.\n\
    \      else\n         return false\n      end\n   end\n   -- If the stack is empty,\
    \ return False.\n   if #stack == 0 then\n      return false\n   -- If the stack\
    \ is not empty, return True if and only if there is a valid subsequence of brackets\
    \ \n   -- where at least one bracket in the subsequence is nested.\n   else\n\
    \      -- If the top element in the stack is a left bracket, pop it from the stack.\n\
    \      if stack[#stack] == '[' then\n         stack[#stack] = nil\n      -- If\
    \ the top element in the stack is a right bracket, push it onto the stack.\n \
    \     elseif stack[#stack] == ']' then\n         table.insert(stack, '[')\n  \
    \    -- If the top element in the stack is not a left or right bracket, return\
    \ False.\n      else\n         return false\n      end\n   end\nend", "    local\
    \ brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n        [\"\
    [\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n        [\"}\"\
    ] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n        [\"+\"] =\
    \ true,\n        [\"-\"] = true,\n        [\"*\"] = true,\n        [\"/\"] = true,\n\
    \        [\"%\"] = true,\n        [\"^\"] = true,\n        [\"~\"] = true,\n \
    \       [\"&\"] = true,\n        [\"|\"] = true,\n        [\"=\"] = true,\n  \
    \      [\"!\"] = true,\n        [\"<=\"] = true,\n        [\">=\"] = true,\n \
    \       [\"==\"] = true,\n        [\"~=\"] = true,\n        [\"<=>\"] = true,\n\
    \        [\"<-\"] = true,\n        [\"->\"] = true,\n        [\"<->\"] = true,\n\
    \        [\"<-<-\"] = true,\n        [\"<-<->\"] = true,\n        [\"<->>\"] =\
    \ true,\n        [\"<->->\"] = true,\n        [\"<-<-<-\"] = true,\n        [\"\
    <-<-<->\"] = true,\n        [\"<-<->>\"] = true,\n        [\"<-<->->\"] = true,\n\
    \        [\"<->->\"] = true,\n        [\"<->->>\"] = true,\n        [\"<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-<-",
  "  -- Create a stack of brackets.\n  local stack = {}\n  -- Iterate through the\
    \ string and add brackets to the stack.\n  for i = 1, #string do\n    if string[i]\
    \ == '[' then\n      table.insert(stack, string[i])\n    elseif string[i] == ']'\
    \ then\n      -- If the stack is empty or if the stack is non-empty,\n      --\
    \ then there is a nested bracket.\n      if #stack == 0 or stack[#stack] == ']'\
    \ then\n        return true\n      end\n      -- Pop the top bracket from the\
    \ stack.\n      stack[#stack] = nil\n    end\n  end\n  return false\nend", " \
    \   local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_index\
    \ = open_brackets_count - 1\n    local close_brackets_index = close_brackets_count\
    \ - 1\n    local open_brackets_index2 = open_brackets_count - 2\n    local close_brackets_index2\
    \ = close_brackets_count - 2\n    local open_brackets_index3 = open_brackets_count\
    \ - 3\n    local close_brackets_index3 = close_brackets_count - 3\n    local open_brackets_index4\
    \ = open_brackets_count - 4\n    local close_brackets_index4 = close_brackets_count\
    \ - 4\n    local open_brackets_index5 = open_brackets_count - 5\n    local close_brackets_index5\
    \ = close_brackets_count - 5\n    local open_brackets_index6 = open_brackets_count\
    \ - 6\n    local close_brackets_index6 = close_brackets_count - 6\n    local open_brackets_index7\
    \ = open_brackets_count - 7\n    local close_brackets_index7 = close_brackets_count\
    \ - 7\n    local open_brackets_index8 = open_brackets_count - 8\n    local close_brackets_index8\
    \ = close_brackets_count - 8\n    local open_brackets_index9 = open_brackets_count\
    \ - 9\n    local close_brackets_index9 = close_brackets_count - 9\n    local open_brackets_index10\
    \ = open_brackets_count - 10\n    local close_brackets_index10 = close_brackets_count\
    \ - 10\n    local open_brackets_index11 = open_brackets_count - 11\n    local\
    \ close_brackets_index11 = close_brackets_count - 11\n    local open_brackets_index12\
    \ = open_brackets_count - 12\n    local close_brackets_index12 = close_brackets_count\
    \ - 12\n    local open_brackets_index13 = open_brackets_count - 13\n    local\
    \ close", "    local brackets = string.gsub(string, \"[\", \"\")\n    local brackets\
    \ = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(bra", "    local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n  \
    \  local close_brackets_count = string.len(close_brackets)\n    \n    if open_brackets_count\
    \ ~= close_brackets_count then\n        return false\n    end\n    \n    local\
    \ open_brackets_index = open_brackets_count - 1\n    local close_brackets_index\
    \ = close_brackets_count - 1\n    \n    while open_brackets_index > 0 and close_brackets_index\
    \ > 0 do\n        if open_brackets[open_brackets_index] == close_brackets[close_brackets_index]\
    \ then\n            open_brackets_index = open_brackets_index - 1\n          \
    \  close_brackets_index = close_brackets_index - 1\n        else\n           \
    \ return false\n        end\n    end\n    \n    return true\nend", "  -- Create\
    \ a stack to keep track of brackets.\n  local stack = {}\n  -- Iterate over the\
    \ string.\n  for i = 1, #string do\n    -- If the current character is a left\
    \ bracket, push it onto the stack.\n    if string[i] == '[' then\n      table.insert(stack,\
    \ string[i])\n    -- If the current character is a right bracket, pop it from\
    \ the stack.\n    elseif string[i] == ']' then\n      -- If the stack is empty,\
    \ return False.\n      if #stack == 0 then\n        return false\n      -- Otherwise,\
    \ if the stack is not empty, return True.\n      else\n        -- If the top of\
    \ the stack is a left bracket, pop it from the stack.\n        if stack[#stack]\
    \ == '[' then\n          stack[#stack] = nil\n          -- If the top of the stack\
    \ is a right bracket, return False.\n        elseif stack[#stack] == ']' then\n\
    \          return false\n        end\n      end\n    end\n  end\n  -- If the stack\
    \ is not empty, return False.\n  return #stack == 0\nend", "\tlocal brackets =\
    \ string.gsub(string, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets, \"\
    ]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets\
    \ = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n\tlocal brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = ", "    local open_brackets = string.gsub(string, \"[\", \"\")\n\
    \    local close_brackets = string.gsub(string, \"]\", \"\")\n    local open_brackets_count\
    \ = string.len(open_brackets)\n    local close_brackets_count = string.len(close_brackets)\n\
    \    local is_nested = open_brackets_count > close_brackets_count\n    return\
    \ is_nested\nend", "    local brackets = {\n        [\"[\"]=true,\n        [\"\
    ]\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n        [\"(\"]=true,\n\
    \        [\")\"]=true,\n        [\"[\"]=true,\n        [\"]\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"(\"]=true,\n        [\"[\"]=true,\n        [\"{\"\
    ]=true,\n        [\"}\"]=true,\n        [\"[\"]=true,\n        [\"(\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n\
    \        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"]=true,\n        [\"[\"\
    ]=true,\n        [\"[\"]=true,\n        [\"[\"]=", "  local brackets = string.gsub(string,\
    \ \"[\", \"\")\n  local brackets_count = string.len(brackets)\n  local open_brackets\
    \ = 0\n  local close_brackets = 0\n  local open_brackets_count = 0\n  local close_brackets_count\
    \ = 0\n  for i = 1, string.len(string) - 1 do\n    if string.sub(brackets, i,\
    \ i + 1) ~= \"]\" then\n      open_brackets = open_brackets + 1\n      open_brackets_count\
    \ = open_brackets_count + 1\n    else\n      close_brackets = close_brackets +\
    \ 1\n      close_brackets_count = close_brackets_count + 1\n    end\n    if open_brackets_count\
    \ == brackets_count then\n      return true\n    end\n  end\n  return false\n\
    end", "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local close_brackets\
    \ = string.gsub(string, \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n\
    \    local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count_plus_one\
    \ = open_brackets_count + 1\n    local close_brackets_count_plus_one = close_brackets_count\
    \ + 1\n    local open_brackets_count_minus_one = open_brackets_count - 1\n   \
    \ local close_brackets_count_minus_one = close_brackets_count - 1\n    local open_brackets_count_minus_two\
    \ = open_brackets_count - 2\n    local close_brackets_count_minus_two = close_brackets_count\
    \ - 2\n    local open_brackets_count_minus_three = open_brackets_count - 3\n \
    \   local close_brackets_count_minus_three = close_brackets_count - 3\n    local\
    \ open_brackets_count_minus_four = open_brackets_count - 4\n    local close_brackets_count_minus_four\
    \ = close_brackets_count - 4\n    local open_brackets_count_minus_five = open_brackets_count\
    \ - 5\n    local close_brackets_count_minus_five = close_brackets_count - 5\n\
    \    local open_brackets_count_minus_six = open_brackets_count - 6\n    local\
    \ close_brackets_count_minus_six = close_brackets_count - 6\n    local open_brackets_count_minus_seven\
    \ = open_brackets_count - 7\n    local close_brackets_count_minus_seven = close_brackets_count\
    \ - 7\n    local open_brackets_count_minus_eight = open_brackets_count - 8\n \
    \   local close_brackets_count_minus_eight = close_brackets_count - 8\n    local\
    \ open_brackets_count_minus_nine = open_brackets_count - 9\n    local close_brackets_count_minus_nine\
    \ = close_brackets_count - 9\n    local open_brackets_count_minus_ten = open_brackets_count\
    \ - 10\n    local close_brackets_", "  local brackets = string.gsub(string, \"\
    [\", \"\")\n  local brackets = string.gsub(brackets, \"]\", \"\")\n  local brackets\
    \ = string.gsub(brackets, \"(\", \"\")\n  local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n  return brackets ~= \"\"\nend", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = open_brackets_count - 1\n    local open_brackets_index2\
    \ = open_brackets_count - 1\n    local close_brackets_index2 = close_brackets_count\
    \ - 1\n    local open_brackets_index3 = open_brackets_count - 1\n    local close_brackets_index3\
    \ = close_brackets_count - 1\n    local open_brackets_index4 = open_brackets_count\
    \ - 1\n    local close_brackets_index4 = close_brackets_count - 1\n    local open_brackets_index5\
    \ = open_brackets_count - 1\n    local close_brackets_index5 = close_brackets_count\
    \ - 1\n    local open_brackets_index6 = open_brackets_count - 1\n    local close_brackets_index6\
    \ = close_brackets_count - 1\n    local open_brackets_index7 = open_brackets_count\
    \ - 1\n    local close_brackets_index7 = close_brackets_count - 1\n    local open_brackets_index8\
    \ = open_brackets_count - 1\n    local close_brackets_index8 = close_brackets_count\
    \ - 1\n    local open_brackets_index9 = open_brackets_count - 1\n    local close_brackets_index9\
    \ = close_brackets_count - 1\n    local open_brackets_index10 = open_brackets_count\
    \ - 1\n    local close_brackets_index10 = close_brackets_count - 1\n    local\
    \ open_brackets_index11 = open_brackets_count - 1\n    local close_brackets_index11\
    \ = close_brackets_count - 1\n    local open_brackets_index12 = open_brackets_count\
    \ - 1\n    local close_brackets_index12 = close_brackets_count - 1\n    local\
    \ open_brackets_index13 = open_brackets_count - 1\n    local close_brackets_index13\
    \ = close_brackets_count - 1\n    local open_brackets_index", "  -- Create a stack\
    \ of brackets.\n  local stack = {}\n  -- Iterate over the string and push brackets\
    \ to the stack.\n  for i = 1, #string do\n    if string[i] == '[' then\n     \
    \ table.insert(stack, string[i])\n    elseif string[i] == ']' then\n      -- If\
    \ the stack is empty then we found a nested bracket.\n      if #stack == 0 then\n\
    \        return true\n      else\n        -- Pop the top bracket from the stack.\n\
    \        local top = stack[#stack]\n        -- If the top bracket is ] then we\
    \ found a nested bracket.\n        if top == '[' then\n          return true\n\
    \        else\n          -- If the top bracket is anything else then we found\
    \ a non-nested bracket.\n          return false\n        end\n      end\n    end\n\
    \  end\nend", "    local open_brackets = {\n        ['('] = true,\n        [')']\
    \ = true,\n        ['{'] = true,\n        ['}'] = true,\n        ['['] = true,\n\
    \        [']'] = true,\n    }\n    local close_brackets = {\n        ['('] = true,\n\
    \        [')'] = true,\n        ['{'] = true,\n        ['}'] = true,\n       \
    \ ['['] = true,\n        [']'] = true,\n    }\n    local open_brackets_count =\
    \ 0\n    local close_brackets_count = 0\n    local open_brackets_stack = {}\n\
    \    local close_brackets_stack = {}\n    local open_brackets_stack_count = 0\n\
    \    local close_brackets_stack_count = 0\n    local open_brackets_stack_string\
    \ = ''\n    local close_brackets_stack_string = ''\n    local open_brackets_stack_string_count\
    \ = 0\n    local close_brackets_stack_string_count = 0\n    local open_brackets_stack_string_index\
    \ = 0\n    local close_brackets_stack_string_index = 0\n    local open_brackets_stack_string_index2\
    \ = 0\n    local close_brackets_stack_string_index2 = 0\n    for i = 1, #string\
    \ do\n        if open_brackets[string[i]] then\n            open_brackets_stack[open_brackets_stack_count]\
    \ = string[i]\n            open_brackets_count = open_brackets_count + 1\n   \
    \         open_brackets_stack_string = open_brackets_stack_string .. string[i]\n\
    \            open_brackets_stack_string_count = open_brackets_stack_count + 1\n\
    \            if open_brackets_stack_count > 1 then\n                open_brackets_stack_string_index2\
    \ = open_brackets_stack_string_index\n                open_brackets_stack_string_index2\
    \ = open_brackets_stack_string_index2 + 1\n                open_brackets_stack_string\
    \ = open_brackets_stack_string_index .. open_brackets_stack_string .. open_brackets_stack_string_index2\n\
    \            end\n        elseif close_brackets[string[i]] then\n            close_brackets_stack[close_brackets_stack_count]\
    \ = string[i]\n            close_brackets_count = close_brackets_count + 1\n \
    \           close_brackets_stack_string = close_brackets_stack_string .. string[i]\n\
    \            close_brackets_stack_string_count = close_brackets_stack_count +\
    \ 1\n            if close_brackets_stack_count ", "    local open_brackets = {\n\
    \        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"{\"]=true,\n       \
    \ [\"}\"]=true,\n        [\"(\"]=true,\n        [\")\"]=true,\n    }\n    local\
    \ close_brackets = {\n        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"\
    {\"]=true,\n        [\"}\"]=true,\n        [\"(\"]=true,\n        [\")\"]=true,\n\
    \    }\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    for i,c in ipairs(string) do\n        if open_brackets[c] then\n        \
    \    open_brackets_count = open_brackets_count+1\n        elseif close_brackets[c]\
    \ then\n            close_brackets_count = close_brackets_count+1\n        end\n\
    \    end\n    if open_brackets_count > close_brackets_count then\n        return\
    \ true\n    else\n        return false\n    end\nend", "    local brackets = {\n\
    \        [\"[\"] = 1\n        ,[\"{\"] = 1\n        ,[\"(\"] = 1\n        ,[\"\
    <\"] = 1\n        ,[\">\"] = 1\n        ,[\"[\"] = 1\n        ,[\"]\"] = 1\n \
    \       ,[\"}\"] = 1\n    }\n    local opening_brackets = brackets[string.sub(1,1)]\n\
    \    local closing_brackets = brackets[string.sub(string.len(string),1)]\n   \
    \ local opening_brackets_count = 0\n    local closing_brackets_count = 0\n   \
    \ for i = 1, string.len(string) do\n        if brackets[string[i]] then\n    \
    \        opening_brackets_count = opening_brackets_count + 1\n        elseif brackets[string.sub(i,1)]\
    \ then\n            closing_brackets_count = closing_brackets_count + 1\n    \
    \    end\n    end\n    return opening_brackets_count > closing_brackets_count\n\
    end", "  local brackets = {\n    [\"[\"]=true,\n    [\"{\"]=true,\n    [\"(\"\
    ]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"<=\"]=true,\n    [\">=\"\
    ]=true,\n    [\"==\"]=true,\n    [\"!=\"]=true,\n    [\"&&\"]=true,\n    [\"||\"\
    ]=true,\n    [\"=\"]=true,\n    [\"+\"]=true,\n    [\"-\"]=true,\n    [\"*\"]=true,\n\
    \    [\"/\"]=true,\n    [\"%\"]=true,\n    [\"^\"]=true,\n    [\"~\"]=true,\n\
    \    [\"&\"]=true,\n    [\"|\"]=true,\n    [\"<-\"]=true,\n    [\"->\"]=true,\n\
    \    [\"=>\"]=true,\n    [\"..\"]=true,\n    [\"...\"]=true,\n    [\".\"]=true,\n\
    \    [\"..\"]=true,\n    [\"...\"]=true,\n    [\"=\"]=true,\n    [\"+\"]=true,\n\
    \    [\"-\"]=true,\n    [\"*\"]=true,\n    [\"/\"]=true,\n    [\"%\"]=true,\n\
    \    [\"^\"]=true,\n    [\"~\"]=true,\n    [\"&\"]=true,\n    [\"|\"]=true,\n\
    \    [\"<-\"]=true,\n    [\"->\"]=true,\n    [\"=>\"]=true,\n    [\"..\"]=true,\n\
    \    [\"...\"]=true,\n    [\".\"]=true,\n    [\"..\"]=true,\n    [\"...\"]=true,\n\
    \    [\"=\"]=true,\n    [\"+\"]=true,\n    [\"-\"]=true,\n    [\"*\"]=true,\n\
    \    [\"/\"]=true,\n    [\"%\"]=true,\n    [\"^\"]=true,\n    [\"~\"]=true,\n\
    \    [\"&\"]=true,\n    [\"|\"]=true,\n    [\"<-\"]=true,\n    [\"->\"]=true,\n\
    \    [\"=>\"]=true,\n    [\"..\"]=true,\n    [\"...\"]=true,\n    [\".\"]=true,\n\
    \    [\"..\"]=true,\n    [\"...\"]=true,\n    [\"=\"]=true,\n    [\"+\"]=true,\n\
    \    [\"-\"]=true,\n    [\"*\"]=true,\n    [\"/\"]=true,\n    [\"%\"]=true,\n\
    \    [\"^\"]=true,\n    [\"~\"]=true,\n    [\"&\"]=true,\n    [\"|\"]=true,\n\
    \    [\"<-\"]=true,\n    [\"->\"]=true,\n    [\"=>\"]=true,\n    [\"..\"]=true,\n\
    \    [\"...\"]=true,\n    [\".\"]=true,\n    [\"..\"]=true,\n    [\"...\"]=true,\n\
    \    [\"=\"]=true,\n    [\"+\"]=true,\n", "    local open_brackets = {'[', '{',\
    \ '('}\n    local close_brackets = {']', '}', '}'} -- This list must be in order\
    \ of opening brackets\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_brackets_index_index_index_count = 0\n    local close_brackets_index_index_count\
    \ = 0\n    local open_b", "    local brackets = {\n        [\"[\"]=true,\n   \
    \     [\"]\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n        [\"\
    (\"]=true,\n        [\")\"]=true,\n    }\n    local open_brackets = #string -\
    \ #string % 2\n    local close_brackets = #string - #string % 2\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    for i = 1, open_brackets do\n \
    \       if brackets[string[i]] then\n            open_brackets_count = open_brackets_count\
    \ + 1\n        else\n            close_brackets_count = close_brackets_count +\
    \ 1\n        end\n    end\n    return open_brackets_count > close_brackets_count\n\
    end", "    local open_brackets = {\n        ['('] = true,\n        [')'] = true,\n\
    \        ['['] = true,\n        [']'] = true,\n        ['{'] = true,\n       \
    \ ['}'] = true,\n        ['<'] = true,\n        ['>'] = true,\n        ['+'] =\
    \ true,\n        ['-'] = true,\n        ['*'] = true,\n        ['/'] = true,\n\
    \        ['%'] = true,\n        ['^'] = true,\n        ['|'] = true,\n       \
    \ ['&'] = true,\n        ['?'] = true,\n        ['.'] = true,\n        [','] =\
    \ true,\n        [';'] = true,\n        [':'] = true,\n        ['~'] = true,\n\
    \        ['?'] = true,\n        ['!'] = true,\n        ['='] = true,\n       \
    \ ['|'] = true,\n        ['&'] = true,\n        ['?'] = true,\n        ['.'] =\
    \ true,\n        [','] = true,\n        [';'] = true,\n        [':'] = true,\n\
    \        ['~'] = true,\n        ['?'] = true,\n        ['!'] = true,\n       \
    \ ['='] = true,\n        ['|'] = true,\n        ['&'] = true,\n        ['?'] =\
    \ true,\n        ['.'] = true,\n        [','] = true,\n        [';'] = true,\n\
    \        [':'] = true,\n        ['~'] = true,\n        ['?'] = true,\n       \
    \ ['!'] = true,\n        ['='] = true,\n        ['|'] = true,\n        ['&'] =\
    \ true,\n        ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n\
    \        [';'] = true,\n        [':'] = true,\n        ['~'] = true,\n       \
    \ ['?'] = true,\n        ['!'] = true,\n        ['='] = true,\n        ['|'] =\
    \ true,\n        ['&'] = true,\n        ['?'] = true,\n        ['.'] = true,\n\
    \        [','] = true,\n        [';'] = true,\n        [':'] = true,\n       \
    \ ['~'] = true,\n        ['?'] = true,\n        ['!'] = true,\n        ['='] =\
    \ true,\n        ['|'] = true,\n        ['&'] = true,\n        ['?'] = true,\n\
    \        ['.'] = true,\n        [','] = true,\n        [';'] = true,\n       \
    \ [':'] = true,\n        ['~'] = true,\n        ['?'] = true,\n        ['!'] =\
    \ true,\n        ['='] = true,\n        ['|'] = true,\n        ['&'] = true,\n\
    \        ['?'] = true,\n        ['.'] = true,\n        [','] = true,\n       \
    \ [';'] = true,\n        [':'] = true,\n        ['~'] = true,\n        ['?'] =\
    \ true,\n        ['!'] = true,\n        ['='] = true,\n        ['|'] = true,\n\
    \        ['&'] = true,\n        ['?'] = true,\n        ['.'] = true,\n       \
    \ [','] = true,\n        [';'] = true,\n        [':'] = true,\n        ['~'] =\
    \ true,\n        ['?'] = true,\n        ['!'] = true,", "    local brackets =\
    \ {\n        ['('] = true,\n        [')'] = true,\n        ['['] = true,\n   \
    \     [']'] = true,\n        ['{'] = true,\n        ['}'] = true,\n        ['<']\
    \ = true,\n        ['>'] = true,\n        ['+'] = true,\n        ['-'] = true,\n\
    \        ['*'] = true,\n        ['/'] = true,\n        ['%'] = true,\n       \
    \ ['^'] = true,\n        ['&'] = true,\n        ['|'] = true,\n        ['?'] =\
    \ true,\n        [':'] = true,\n        [';'] = true,\n        [' '] = true,\n\
    \    }\n    local open_brackets = false\n    local close_brackets = false\n  \
    \  local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_index\
    \ = 0\n    local close_brackets_index_index = 0\n    local open_brackets_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open_brackets_index_index_index\
    \ = 0\n    local close_brackets_index_index_index = 0\n    local open_brackets_index_index_index_count\
    \ = 0\n    local close_brackets_index_index_count = 0\n    local open", "    local\
    \ brackets = {\n        [\"[\"]=true,\n        [\"]\"]=true,\n        [\"{\"]=true,\n\
    \        [\"}\"]=true,\n        [\"(\"]=true,\n        [\")\"]=true,\n       \
    \ [\"[\"]=true,\n        [\"]\"]=true,\n        [\"[\"]=true,\n        [\"(\"\
    ]=true,\n        [\"[\"]=true,\n        [\"{\"]=true,\n        [\"}\"]=true,\n\
    \    }\n    local open_brackets = #string\n    for i = 1, open_brackets do\n \
    \       if brackets[string[i]] then\n            open_brackets = open_brackets\
    \ - 1\n        else\n            return false\n        end\n    end\n    return\
    \ open_brackets == 0\nend", "    local open_brackets = string.gsub(string, \"\
    [\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n    local\
    \ open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_count_plus_1 = open_brackets_count\
    \ + 1\n    local close_brackets_count_plus_1 = close_brackets_count + 1\n    local\
    \ open_brackets_count_minus_1 = open_brackets_count - 1\n    local close_brackets_count_minus_1\
    \ = close_brackets_count - 1\n    local open_brackets_count_minus_2 = open_brackets_count\
    \ - 2\n    local close_brackets_count_minus_2 = close_brackets_count - 2\n   \
    \ local open_brackets_count_minus_3 = open_brackets_count - 3\n    local close_brackets_count_minus_3\
    \ = close_brackets_count - 3\n    local open_brackets_count_minus_4 = open_brackets_count\
    \ - 4\n    local close_brackets_count_minus_4 = close_brackets_count - 4\n   \
    \ local open_brackets_count_minus_5 = open_brackets_count - 5\n    local close_brackets_count_minus_5\
    \ = close_brackets_count - 5\n    local open_brackets_count_minus_6 = open_brackets_count\
    \ - 6\n    local close_brackets_count_minus_6 = close_brackets_count - 6\n   \
    \ local open_brackets_count_minus_7 = open_brackets_count - 7\n    local close_brackets_count_minus_7\
    \ = close_brackets_count - 7\n    local open_brackets_count_minus_8 = open_brackets_count\
    \ - 8\n    local close_brackets_count_minus_8 = close_brackets_count - 8\n   \
    \ local open_brackets_count_minus_9 = open_brackets_count - 9\n    local close_brackets_count_minus_9\
    \ = close_brackets_count - 9\n    local open_brackets_count_minus_10 = open_brackets_count\
    \ - 10\n    local close_brackets_count_minus_10 = close_brackets_count - 10\n\
    \    local open_brackets_count_minus_11 = open_brackets_", "\tlocal brackets =\
    \ {\n\t\t[\"(\"] = true,\n\t\t[\")\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"]\"\
    ] = true,\n\t\t[\"{\"] = true,\n\t\t[\"}\"] = true,\n\t\t[\"<\"] = true,\n\t\t\
    [\">\"] = true,\n\t\t[\"[<\"] = true,\n\t\t[\">>\"] = true,\n\t\t[\"[>\"] = true,\n\
    \t\t[\"{<\"] = true,\n\t\t[\"}>\"] = true,\n\t\t[\"{>\"] = true,\n\t\t[\"<{\"\
    ] = true,\n\t\t[\"}>{\"] = true,\n\t\t[\"<[\"] = true,\n\t\t[\">]\"] = true,\n\
    \t\t[\"[<\"] = true,\n\t\t[\">]>\"] = true,\n\t\t[\"[>]\"] = true,\n\t\t[\"{<]\"\
    ] = true,\n\t\t[\"}>]\"] = true,\n\t\t[\"{>]\"] = true,\n\t\t[\"<{<\"] = true,\n\
    \t\t[\"}>{<\"] = true,\n\t\t[\"<[<\"] = true,\n\t\t[\">]>\"] = true,\n\t\t[\"\
    [<]>\"] = true,\n\t\t[\"{<]>\"] = true,\n\t\t[\"}>]>\"] = true,\n\t\t[\"{>]>\"\
    ] = true,\n\t\t[\"<{<]>\"] = true,\n\t\t[\"}>{<]>\"] = true,\n\t\t[\"<[<]>\"]\
    \ = true,\n\t\t[\">]>]\"] = true,\n\t\t[\"[<]>]\"] = true,\n\t\t[\"{<]>]\"] =\
    \ true,\n\t\t[\"}>]>]\"] = true,\n\t\t[\"{>]>]\"] = true,\n\t\t[\"<{<]>]\"] =\
    \ true,\n\t\t[\"}>{<]>]\"] = true,\n\t\t[\"<[<]>]\"] = true,\n\t\t[\">]>]]\"]\
    \ = true,\n\t\t[\"[<]>]]\"] = true,\n\t\t[\"{<]>]]\"] = true,\n\t\t[\"}>]>]]\"\
    ] = true,\n\t\t[\"{>]>]]\"] = true,\n\t\t[\"<{<]>]]\"] = true,\n\t\t[\"}>{<]>]]\"\
    ] = true,\n\t\t[\"<[<]>]]\"] = true,\n\t\t[\">]>]]]\"] = true,\n\t\t[\"[<]>]]]\"\
    ] = true,\n\t\t[\"{<]>]]]\"] = true,\n\t\t[\"}>]>]]]\"] = true,\n\t\t[\"{>]>]]]\"\
    ] = true,\n\t\t[\"<{<]>]]]\"] = true,\n\t\t[\"}>{<]>]]]\"] = true,\n\t\t[\"<[<]>]]",
  "    local open_brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n\
    \        [\"[\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n \
    \       [\"}\"] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"]\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n     \
    \   [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n      \
    \  [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n       \
    \ [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"\
    [\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"\
    ] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] =\
    \ true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n\
    \        [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n \
    \       [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n  \
    \      [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n   \
    \     [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = true,\n    \
    \    [\"[\"] = true,\n        [\"[\"] = true,\n        [\"[\"] = ", "  local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n  local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n  local open_brackets_count = string.len(open_brackets)\n  local\
    \ close_brackets_count = string.len(close_brackets)\n  return open_brackets_count\
    \ > close_brackets_count\nend", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    \n    if open_brackets_count ~= close_brackets_count\
    \ then\n        return false\n    end\n    \n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = close_brackets_count - 1\n    \n    while\
    \ open_brackets_index > 0 and close_brackets_index > 0 do\n        if open_brackets[open_brackets_index]\
    \ ~= close_brackets[close_brackets_index] then\n            return false\n   \
    \     end\n        \n        open_brackets_index = open_brackets_index - 1\n \
    \       close_brackets_index = close_brackets_index - 1\n    end\n    \n    return\
    \ true\nend", "\t-- Create a stack of brackets\n\tlocal stack = {}\n\t-- Iterate\
    \ over the string and add brackets to the stack\n\tfor i = 1, #string do\n\t\t\
    if string[i] == '[' then\n\t\t\ttable.insert(stack, string[i])\n\t\telseif string[i]\
    \ == ']' then\n\t\t\t-- If the stack is empty then there is no valid subsequence\n\
    \t\t\tif #stack == 0 then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t-- Pop the top\
    \ bracket from the stack\n\t\t\tlocal top = stack[#stack]\n\t\t\t-- If the top\
    \ bracket is another bracket then there is no valid subsequence\n\t\t\tif top\
    \ == '[' then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top bracket is\
    \ another bracket then there is no valid subsequence\n\t\t\tif top == ']' then\n\
    \t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top bracket is another bracket\
    \ then there is no valid subsequence\n\t\t\tif top == '{' then\n\t\t\t\treturn\
    \ false\n\t\t\tend\n\t\t\t-- If the top bracket is another bracket then there\
    \ is no valid subsequence\n\t\t\tif top == '}' then\n\t\t\t\treturn false\n\t\t\
    \tend\n\t\t\t-- If the top bracket is another bracket then there is no valid subsequence\n\
    \t\t\tif top == '(' then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top\
    \ bracket is another bracket then there is no valid subsequence\n\t\t\tif top\
    \ == ')' then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top bracket is\
    \ another bracket then there is no valid subsequence\n\t\t\tif top == '<' then\n\
    \t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top bracket is another bracket\
    \ then there is no valid subsequence\n\t\t\tif top == '>' then\n\t\t\t\treturn\
    \ false\n\t\t\tend\n\t\t\t-- If the top bracket is another bracket then there\
    \ is no valid subsequence\n\t\t\tif top == '=' then\n\t\t\t\treturn false\n\t\t\
    \tend\n\t\t\t-- If the top bracket is another bracket then there is no valid subsequence\n\
    \t\t\tif top == '!' then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top\
    \ bracket is another bracket then there is no valid subsequence\n\t\t\tif top\
    \ == '%' then\n\t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top bracket is\
    \ another bracket then there is no valid subsequence\n\t\t\tif top == '&' then\n\
    \t\t\t\treturn false\n\t\t\tend\n\t\t\t-- If the top bracket is another bracket\
    \ then there is no valid subsequence\n\t\t\tif top == '|' then\n\t\t\t\treturn\
    \ false\n\t\t\tend\n\t\t\t-- If the top bracket is another bracket then there\
    \ is no valid subsequence\n\t\t\tif top == '+' then\n\t\t\t\treturn false\n\t\t\
    \tend\n\t\t\t-- If the top bracket is another bracket ", "  local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n  local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n  local open_brackets_count = string.len(open_brackets)\n  local\
    \ close_brackets_count = string.len(close_brackets)\n  local open_brackets_index\
    \ = open_brackets_count - 1\n  local close_brackets_index = close_brackets_count\
    \ - 1\n  local open_brackets_index_in_string = open_brackets_index - 1\n  local\
    \ close_brackets_index_in_string = close_brackets_index - 1\n  local open_brackets_index_in_string_in_string\
    \ = open_brackets_index_in_string - 1\n  local close_brackets_index_in_string_in_string\
    \ = close_brackets_index_in_string - 1\n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_string \n  local open_brackets_index_in_string_in_string\
    \ \n  local close_brackets_index_in_string_in_", "\tlocal open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n\tlocal close_brackets = string.gsub(string, \"]\", \"\")\n\t\
    local open_brackets_count = string.len(open_brackets)\n\tlocal close_brackets_count\
    \ = string.len(close_brackets)\n\tlocal open_brackets_index = string.find(open_brackets,\
    \ \"[\")\n\tlocal close_brackets_index = string.find(close_brackets, \"]\")\n\t\
    local open_brackets_index_count = string.len(open_brackets_index)\n\tlocal close_brackets_index_count\
    \ = string.len(close_brackets_index)\n\tlocal open_brackets_index_count_minus_1\
    \ = open_brackets_index_count - 1\n\tlocal close_brackets_index_count_minus_1\
    \ = close_brackets_index_count - 1\n\tlocal open_brackets_index_count_minus_2\
    \ = open_brackets_index_count - 2\n\tlocal close_brackets_index_count_minus_2\
    \ = close_brackets_index_count - 2\n\tlocal open_brackets_index_count_minus_3\
    \ = open_brackets_index_count - 3\n\tlocal close_brackets_index_count_minus_3\
    \ = close_brackets_index_count - 3\n\tlocal open_brackets_index_count_minus_4\
    \ = open_brackets_index_count - 4\n\tlocal close_brackets_index_count_minus_4\
    \ = close_brackets_index_count - 4\n\tlocal open_brackets_index_count_minus_5\
    \ = open_brackets_index_count - 5\n\tlocal close_brackets_index_count_minus_5\
    \ = close_brackets_index_count - 5\n\tlocal open_brackets_index_count_minus_6\
    \ = open_brackets_index_count - 6\n\tlocal close_brackets_index_count_minus_6\
    \ = close_brackets_index_count - 6\n\tlocal open_brackets_index_count_minus_7\
    \ = open_brackets_index_count - 7\n\tlocal close_brackets_index_count_minus_7\
    \ = close_brackets_index_count - 7\n\tlocal open_brackets_index_count_minus_8\
    \ = open_brackets_index_count - 8\n\tlocal close_brackets_index_count_minus_8\
    \ = close_brackets_index_count - 8\n\tlocal open_brackets_index_count_minus_9\
    \ = open_brackets_index_count - 9\n\tlocal close_bracket", "    local brackets\
    \ = {'[', ']'}\n    local open_brackets = {'(','[','{'}\n    local close_brackets\
    \ = {')',']','}'} \n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_index_count\
    \ = 0\n    local open_brackets_index_count = 0\n    local close_brackets_", " \
    \   local open_brackets = {\n        ['('] = true,\n        [')'] = true,\n  \
    \      ['['] = true,\n        [']'] = true,\n        ['{'] = true,\n        ['}']\
    \ = true,\n        ['<'] = true,\n        ['>'] = true,\n        ['&'] = true,\n\
    \        ['|'] = true,\n        ['^'] = true,\n        ['~'] = true,\n       \
    \ ['?'] = true,\n    }\n    local close_brackets = {\n        ['('] = false,\n\
    \        [')'] = false,\n        ['['] = false,\n        [']'] = false,\n    \
    \    ['{'] = false,\n        ['}'] = false,\n        ['<'] = false,\n        ['>']\
    \ = false,\n        ['&'] = false,\n        ['|'] = false,\n        ['^'] = false,\n\
    \        ['~'] = false,\n        ['?'] = false,\n    }\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    for i = 1, #string do\n       \
    \ if open_brackets[string[i]] then\n            open_brackets_count = open_brackets_count\
    \ + 1\n        elseif close_brackets[string[i]] then\n            close_brackets_count\
    \ = close_brackets_count + 1\n        end\n    end\n    return open_brackets_count\
    \ > close_brackets_count\nend", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = close_brackets_count - 1\n    local open_brackets_index2\
    \ = open_brackets_count - 2\n    local close_brackets_index2 = close_brackets_count\
    \ - 2\n    local open_brackets_index3 = open_brackets_count - 3\n    local close_brackets_index3\
    \ = close_brackets_count - 3\n    local open_brackets_index4 = open_brackets_count\
    \ - 4\n    local close_brackets_index4 = close_brackets_count - 4\n    local open_brackets_index5\
    \ = open_brackets_count - 5\n    local close_brackets_index5 = close_brackets_count\
    \ - 5\n    local open_brackets_index6 = open_brackets_count - 6\n    local close_brackets_index6\
    \ = close_brackets_count - 6\n    local open_brackets_index7 = open_brackets_count\
    \ - 7\n    local close_brackets_index7 = close_brackets_count - 7\n    local open_brackets_index8\
    \ = open_brackets_count - 8\n    local close_brackets_index8 = close_brackets_count\
    \ - 8\n    local open_brackets_index9 = open_brackets_count - 9\n    local close_brackets_index9\
    \ = close_brackets_count - 9\n    local open_brackets_index10 = open_brackets_count\
    \ - 10\n    local close_brackets_index10 = close_brackets_count - 10\n    local\
    \ open_brackets_index11 = open_brackets_count - 11\n    local close_brackets_index11\
    \ = close_brackets_count - 11\n    local open_brackets_index12 = open_brackets_count\
    \ - 12\n    local close_brackets_index12 = close_brackets_count - 12\n    local\
    \ open_brackets_index13 = open_brackets_count - 13\n    local close", "\tlocal\
    \ brackets = string.gsub(string, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n\tlocal brackets = string.gsub(brackets, \"{\", \"\")\n\tlocal\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n\tlocal brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n\tlocal brackets = string.gsub(brackets, \")\", \"\")\n\tlocal\
    \ brackets = ", "    local brackets = string.gsub(string, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"<\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \">\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.gsub(brackets, \"(\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \")\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"{\", \"\")\n    local brackets = string.gsub(brackets, \"}\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"<\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \">\", \"\")\n    local brackets = string.gsub(brackets, \"[\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"]\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"(\", \"\")\n    local brackets = string.gsub(brackets, \")\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"{\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"}\", \"\")\n    local brackets = string.gsub(brackets, \"<\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \">\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"[\", \"\")\n    local brackets = string.gsub(brackets, \"]\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"(\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \")\", \"\")\n    local brackets = string.gsub(brackets, \"{\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"}\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"<\", \"\")\n    local brackets = string.gsub(brackets, \">\", \"\")\n    local\
    \ brackets = string.gsub(brackets, \"[\", \"\")\n    local brackets = string.gsub(brackets,\
    \ \"]\", \"\")\n    local brackets = string.g", "    local open_brackets = {\n\
    \        ['('] = true,\n        [')'] = true,\n        ['['] = true,\n       \
    \ [']'] = true,\n        ['{'] = true,\n        ['}'] = true,\n        ['<'] =\
    \ true,\n        ['>'] = true,\n        ['&'] = true,\n        ['|'] = true,\n\
    \        ['^'] = true,\n        ['~'] = true,\n        ['?'] = true,\n       \
    \ ['.'] = true,\n    }\n    local close_brackets = {\n        ['('] = false,\n\
    \        [')'] = false,\n        ['['] = false,\n        [']'] = false,\n    \
    \    ['{'] = false,\n        ['}'] = false,\n        ['<'] = false,\n        ['>']\
    \ = false,\n        ['&'] = false,\n        ['|'] = false,\n        ['^'] = false,\n\
    \        ['~'] = false,\n        ['?'] = false,\n        ['.'] = false,\n    }\n\
    \    local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_stack = {}\n    local close_brackets_stack = {}\n    for i = 1,\
    \ #string do\n        if open_brackets[string[i]] then\n            open_brackets_count\
    \ = open_brackets_count + 1\n            open_brackets_stack[open_brackets_count]\
    \ = string[i]\n        elseif close_brackets[string[i]] then\n            close_brackets_count\
    \ = close_brackets_count + 1\n            close_brackets_stack[close_brackets_count]\
    \ = string[i]\n        elseif open_brackets_count > 0 and close_brackets_count\
    \ == 0 then\n            close_brackets_count = open_brackets_count\n        \
    \    close_brackets_stack[close_brackets_count] = string[i]\n        end\n   \
    \ end\n    if open_brackets_count > 0 and close_brackets_count == 0 then\n   \
    \     return true\n    else\n        return false\n    end\nend", "   -- Create\
    \ a stack to keep track of brackets\n   local stack = {}\n   -- Iterate over each\
    \ character in the string\n   for i = 1, #string do\n      -- If the character\
    \ is a left bracket, push it onto the stack\n      if string[i] == \"[\" then\n\
    \         table.insert(stack, string[i])\n      -- If the character is a right\
    \ bracket, pop it from the stack\n      elseif string[i] == \"]\" then\n     \
    \    stack[#stack] = stack[#stack] ~= \"]\" and stack[#stack] or nil\n      --\
    \ If the character is a comma, pop all left brackets from the stack\n      elseif\
    \ string[i] == \",\" then\n         for j = #stack, 1, -1 do\n            stack[j]\
    \ = stack[j] ~= \"]\" and stack[j] or nil\n         end\n      -- If the character\
    \ is a space, ignore it\n      elseif string[i] == \" \" then\n      end\n   end\n\
    \   -- If the stack is empty, return false\n   return #stack == 0\nend", "   \
    \ local open_brackets = {\n        [\"[\"] = 1\n        ,[\"{\"] = 1\n       \
    \ ,[\"(\"] = 1\n    }\n    local close_brackets = {\n        [\"]\"] = 1\n   \
    \     ,[\"}\"] = 1\n        ,[\")\"] = 1\n    }\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    for i = 1, #string do\n       \
    \ if open_brackets[string[i]] then\n            open_brackets_count = open_brackets_count\
    \ + 1\n        elseif close_brackets[string[i]] then\n            close_brackets_count\
    \ = close_brackets_count + 1\n        elseif open_brackets_count > close_brackets_count\
    \ then\n            return true\n        end\n    end\n    return false\nend",
  "    local open_brackets = {}\n    local close_brackets = {}\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n\
    \    local close_brackets_index = 0\n    local open_brackets_length = 0\n    local\
    \ close_brackets_length = 0\n    local open_brackets_index = 0\n    local close_brackets_index\
    \ = 0\n    local open_brackets_length = 0\n    local close_brackets_length = 0\n\
    \    local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_length = 0\n    local close_brackets_length\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_length = 0\n    local close_brackets_length = 0\n   \
    \ local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_length = 0\n    local close_brackets_length\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_length = 0\n    local close_brackets_length = 0\n   \
    \ local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = close_brackets_count - 1\n    local open_brackets_index2\
    \ = open_brackets_count - 2\n    local close_brackets_index2 = close_brackets_count\
    \ - 2\n    local open_brackets_index3 = open_brackets_count - 3\n    local close_brackets_index3\
    \ = close_brackets_count - 3\n    local open_brackets_index4 = open_brackets_count\
    \ - 4\n    local close_brackets_index4 = close_brackets_count - 4\n    local open_brackets_index5\
    \ = open_brackets_count - 5\n    local close_brackets_index5 = close_brackets_count\
    \ - 5\n    local open_brackets_index6 = open_brackets_count - 6\n    local close_brackets_index6\
    \ = close_brackets_count - 6\n    local open_brackets_index7 = open_brackets_count\
    \ - 7\n    local close_brackets_index7 = close_brackets_count - 7\n    local open_brackets_index8\
    \ = open_brackets_count - 8\n    local close_brackets_index8 = close_brackets_count\
    \ - 8\n    local open_brackets_index9 = open_brackets_count - 9\n    local close_brackets_index9\
    \ = close_brackets_count - 9\n    local open_brackets_index10 = open_brackets_count\
    \ - 10\n    local close_brackets_index10 = close_brackets_count - 10\n    local\
    \ open_brackets_index11 = open_brackets_count - 11\n    local close_brackets_index11\
    \ = close_brackets_count - 11\n    local open_brackets_index12 = open_brackets_count\
    \ - 12\n    local close_brackets_index12 = close_brackets_count - 12\n    local\
    \ open_brackets_index13 = open_brackets_count - 13\n    local close", "    local\
    \ brackets = {\n        [\"(\"] = true,\n        [\")\"] = true,\n        [\"\
    [\"] = true,\n        [\"]\"] = true,\n        [\"{\"] = true,\n        [\"}\"\
    ] = true,\n        [\"<\"] = true,\n        [\">\"] = true,\n        [\"[<\"]\
    \ = true,\n        [\">>\"] = true,\n        [\"[>\"] = true,\n        [\"{<\"\
    ] = true,\n        [\"}>\"] = true,\n    }\n    local open_brackets = false\n\
    \    local close_brackets = false\n    local open_brackets_count = 0\n    local\
    \ close_brackets_count = 0\n    local open_brackets_position = 0\n    local close_brackets_position\
    \ = 0\n    local open_brackets_positions = {}\n    local close_brackets_positions\
    \ = {}\n    local open_brackets_positions_count = 0\n    local close_brackets_positions_count\
    \ = 0\n    local open_brackets_positions_position = 0\n    local close_brackets_positions_position\
    \ = 0\n    local open_brackets_positions_positions = {}\n    local close_brackets_positions_positions\
    \ = {}\n    local open_brackets_positions_positions_count = 0\n    local close_brackets_positions_positions_count\
    \ = 0\n    local open_brackets_positions_positions_position = 0\n    local close_brackets_positions_positions_position\
    \ = 0\n    local open_brackets_positions_positions_positions = {}\n    local close_brackets_positions_positions_positions\
    \ = {}\n    local open_brackets_positions_positions_positions_count = 0\n    local\
    \ close_brackets_positions_positions_positions_count = 0\n    local open_brackets_positions_positions_positions_position\
    \ = 0\n    local close_brackets_positions_positions_position = 0\n    local open_brackets_positions_positions_positions_positions\
    \ = {}\n    local close_brackets_positions_positions_positions_positions = {}\n\
    \    local open_brackets_positions_positions_positions_positions_count = 0\n \
    \   local close_brackets_positions_positions_positions_positions_count = 0\n \
    \   local open_brackets_positions_positions_positions_positions_position = 0\n\
    \    local close_brackets_positions_positions_positions_position = 0\n    local\
    \ open_brackets_positions_positions_positions_positions_positions = {}\n    local\
    \ close_brackets_positions_positions_positions_positions_positions = {}\n    local\
    \ open", "    local open_brackets = {\n        [\"{\"] = 1\n        [\"}\"] =\
    \ 1\n        [\"[\"] = 1\n        [\"]\"] = 1\n    }\n    local close_brackets\
    \ = {\n        [\"{\"] = 1\n        [\"}\"] = 1\n        [\"[\"] = 1\n       \
    \ [\"]\"] = 1\n    }\n    local open_brackets_count = 0\n    local close_brackets_count\
    \ = 0\n    local open_brackets_stack = {}\n    local close_brackets_stack = {}\n\
    \    local open_brackets_stack_index = 0\n    local close_brackets_stack_index\
    \ = 0\n    for i = 1, #string do\n        if open_brackets[string[i]] ~= nil then\n\
    \            open_brackets_count = open_brackets_count + 1\n            open_brackets_stack[open_brackets_stack_index]\
    \ = string[i]\n            open_brackets_stack_index = open_brackets_stack_index\
    \ + 1\n        elseif close_brackets[string[i]] ~= nil then\n            close_brackets_count\
    \ = close_brackets_count + 1\n            close_brackets_stack[close_brackets_stack_index]\
    \ = string[i]\n            close_brackets_stack_index = close_brackets_stack_index\
    \ + 1\n        elseif open_brackets_count == close_brackets_count then\n     \
    \       if open_brackets_stack_index > 0 then\n                open_brackets_stack[open_brackets_stack_index]\
    \ = nil\n                open_brackets_stack_index = open_brackets_stack_index\
    \ - 1\n            end\n            if close_brackets_stack_index > 0 then\n \
    \               close_brackets_stack[close_brackets_stack_index] = nil\n     \
    \           close_brackets_stack_index = close_brackets_stack_index - 1\n    \
    \        end\n            if open_brackets_stack_index == 0 and close_brackets_stack_index\
    \ == 0 then\n                return true\n            end\n        end\n    end\n\
    \    return false\nend", "    local open_brackets = {\n        ['('] = true,\n\
    \        [')'] = true,\n        ['{'] = true,\n        ['}'] = true,\n       \
    \ ['['] = true,\n        [']'] = true,\n        ['<'] = true,\n        ['>'] =\
    \ true,\n        ['+'] = true,\n        ['-'] = true,\n        ['*'] = true,\n\
    \        ['/'] = true,\n        ['%'] = true,\n        ['^'] = true,\n       \
    \ ['&'] = true,\n        ['|'] = true,\n        ['?'] = true,\n        [':'] =\
    \ true,\n        [';'] = true,\n        [' '] = true,\n    }\n    local close_brackets\
    \ = {\n        ['('] = true,\n        [')'] = true,\n        ['{'] = true,\n \
    \       ['}'] = true,\n        ['['] = true,\n        [']'] = true,\n        ['<']\
    \ = true,\n        ['>'] = true,\n        ['+'] = true,\n        ['-'] = true,\n\
    \        ['*'] = true,\n        ['/'] = true,\n        ['%'] = true,\n       \
    \ ['^'] = true,\n        ['&'] = true,\n        ['|'] = true,\n        ['?'] =\
    \ true,\n        [':'] = true,\n        [';'] = true,\n        [' '] = true,\n\
    \    }\n    local open_brackets_count = 0\n    local close_brackets_count = 0\n\
    \    for i = 1, #string do\n        if open_brackets[string[i]] then\n       \
    \     open_brackets_count = open_brackets_count + 1\n        elseif close_brackets[string[i]]\
    \ then\n            close_brackets_count = close_brackets_count + 1\n        end\n\
    \    end\n    if open_brackets_count > close_brackets_count then\n        return\
    \ true\n    else\n        return false\n    end\nend", "  -- Create a stack to\
    \ keep track of brackets\n  local stack = {}\n  -- Iterate over the string and\
    \ keep track of brackets\n  for i, c in ipairs(string) do\n    if c == '[' then\n\
    \      table.insert(stack, c)\n    elseif c == ']' then\n      -- If the stack\
    \ is empty then we found a nested bracket\n      if #stack == 0 then\n       \
    \ return true\n      else\n        -- Pop the top bracket from the stack\n   \
    \     stack[#stack] = nil\n      end\n    end\n  end\n  return false\nend", " \
    \   local open_brackets = {\n        ['('] = true,\n        [')'] = true,\n  \
    \      ['['] = true,\n        [']'] = true,\n        ['{'] = true,\n        ['}']\
    \ = true,\n    }\n    local close_brackets = {\n        ['('] = false,\n     \
    \   [')'] = false,\n        ['['] = false,\n        [']'] = false,\n        ['{']\
    \ = false,\n        ['}'] = false,\n    }\n    local open_brackets_count = 0\n\
    \    local close_brackets_count = 0\n    local open_brackets_stack = {}\n    local\
    \ close_brackets_stack = {}\n    for i = 1, #string do\n        if open_brackets[string[i]]\
    \ then\n            open_brackets_count = open_brackets_count + 1\n          \
    \  open_brackets_stack[open_brackets_count] = string[i]\n        elseif close_brackets[string[i]]\
    \ then\n            close_brackets_count = close_brackets_count + 1\n        \
    \    close_brackets_stack[close_brackets_count] = string[i]\n        elseif open_brackets_count\
    \ > 0 and close_brackets_count == 0 then\n            close_brackets_count = open_brackets_count\n\
    \            close_brackets_stack = open_brackets_stack\n            open_brackets_count\
    \ = 0\n            open_brackets_stack = {}\n        end\n    end\n    return\
    \ close_brackets_count > 0\nend", "    local open_brackets = {\n        [\"[\"\
    ]=true,\n        [\"{\"]=true,\n        [\"(\"]=true,\n        [\"<\"]=true,\n\
    \        [\"[\"]=true,\n        [\"\\\"\"]=true,\n        [\"'\"]=true,\n    \
    \    [\"`\"]=true,\n        [\"=\"]=true,\n        [\";\"]=true,\n        [\"\
    =\"]=true,\n        [\"<\"]=true,\n        [\"[\"]=true,\n        [\"\\\"\"]=true,\n\
    \        [\"'\"]=true,\n        [\"`\"]=true,\n        [\"=\"]=true,\n       \
    \ [\";\"]=true,\n        [\"=\"]=true,\n        [\"<\"]=true,\n        [\"[\"\
    ]=true,\n        [\"\\\"\"]=true,\n        [\"'\"]=true,\n        [\"`\"]=true,\n\
    \        [\"=\"]=true,\n        [\";\"]=true,\n        [\"=\"]=true,\n       \
    \ [\"<\"]=true,\n        [\"[\"]=true,\n        [\"\\\"\"]=true,\n        [\"\
    '\"]=true,\n        [\"`\"]=true,\n        [\"=\"]=true,\n        [\";\"]=true,\n\
    \        [\"=\"]=true,\n        [\"<\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"\\\"\"]=true,\n        [\"'\"]=true,\n        [\"`\"]=true,\n        [\"\
    =\"]=true,\n        [\";\"]=true,\n        [\"=\"]=true,\n        [\"<\"]=true,\n\
    \        [\"[\"]=true,\n        [\"\\\"\"]=true,\n        [\"'\"]=true,\n    \
    \    [\"`\"]=true,\n        [\"=\"]=true,\n        [\";\"]=true,\n        [\"\
    =\"]=true,\n        [\"<\"]=true,\n        [\"[\"]=true,\n        [\"\\\"\"]=true,\n\
    \        [\"'\"]=true,\n        [\"`\"]=true,\n        [\"=\"]=true,\n       \
    \ [\";\"]=true,\n        [\"=\"]=true,\n        [\"<\"]=true,\n        [\"[\"\
    ]=true,\n        [\"\\\"\"]=true,\n        [\"'\"]=true,\n        [\"`\"]=true,\n\
    \        [\"=\"]=true,\n        [\";\"]=true,\n        [\"=\"]=true,\n       \
    \ [\"<\"]=true,\n        [\"[\"]=true,\n        [\"\\\"\"]=true,\n        [\"\
    '\"]=true,\n        [\"`\"]=true,\n        [\"=\"]=true,\n        [\";\"]=true,\n\
    \        [\"=\"]=true,\n        [\"<\"]=true,\n        [\"[\"]=true,\n       \
    \ [\"\\\"\"", "    local open_brackets = {}\n    local close_brackets = {}\n \
    \   local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_index = 0\n    local close_brackets_index = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_count = 0\n    local open_brackets_index_count\
    \ = 0\n    local close_brackets_index_", "    local brackets = {\n        [\"\
    (\"] = true,\n        [\")\"] = true,\n        [\"[\"] = true,\n        [\"]\"\
    ] = true,\n        [\"{\"] = true,\n        [\"}\"] = true,\n        [\"<\"] =\
    \ true,\n        [\">\"] = true,\n        [\"+\"] = true,\n        [\"-\"] = true,\n\
    \        [\"*\"] = true,\n        [\"/\"] = true,\n        [\"%\"] = true,\n \
    \       [\"^\"] = true,\n        [\"%\"] = true,\n        [\"=\"] = true,\n  \
    \      [\"|\"] = true,\n        [\"&\"] = true,\n        [\"!\"] = true,\n   \
    \     [\"~\"] = true,\n        [\"?\"] = true,\n        [\"<\"] = true,\n    \
    \    [\"=\"] = true,\n        [\"+\"] = true,\n        [\"-\"] = true,\n     \
    \   [\"*\"] = true,\n        [\"/\"] = true,\n        [\"%\"] = true,\n      \
    \  [\"^\"] = true,\n        [\"%\"] = true,\n        [\"=\"] = true,\n       \
    \ [\"|\"] = true,\n        [\"&\"] = true,\n        [\"!\"] = true,\n        [\"\
    ~\"] = true,\n        [\"?\"] = true,\n        [\"<\"] = true,\n        [\"=\"\
    ] = true,\n        [\"+\"] = true,\n        [\"-\"] = true,\n        [\"*\"] =\
    \ true,\n        [\"/\"] = true,\n        [\"%\"] = true,\n        [\"^\"] = true,\n\
    \        [\"%\"] = true,\n        [\"=\"] = true,\n        [\"|\"] = true,\n \
    \       [\"&\"] = true,\n        [\"!\"] = true,\n        [\"~\"] = true,\n  \
    \      [\"?\"] = true,\n        [\"<\"] = true,\n        [\"=\"] = true,\n   \
    \     [\"+\"] = true,\n        [\"-\"] = true,\n        [\"*\"] = true,\n    \
    \    [\"/\"] = true,\n        [\"%\"] = true,\n        [\"^\"] = true,\n     \
    \   [\"%\"] = true,\n        [\"=\"] = true,\n        [\"|\"] = true,\n      \
    \  [\"&\"] = true,\n        [\"!\"] = true,\n        [\"~\"] = true,\n       \
    \ [\"?\"] = true,\n        [\"<\"] = true,\n        [\"=\"] = true,\n        [\"\
    +\"] = true,\n        [\"-\"] = true,\n        [\"*\"] = true,\n        [\"/\"\
    ] = true,\n        [\"%\"] = true,\n        [\"^\"] = true,\n        [\"%\"] =\
    \ true,\n        [\"=\"] = true,\n        [\"|\"] = true,\n        [\"&\"] = true,\n\
    \        [\"!\"] = true,\n        [\"~\"] = true,\n        [\"?\"] = true,\n \
    \       [\"<\"] = true,\n        [\"=\"] = true,\n        [\"+\"] = true,\n  \
    \      [\"-\"] = true,\n", "    local open_brackets = string.gsub(string, \"[\"\
    , \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n    local\
    \ open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_count_nested = 0\n   \
    \ local close_brackets_count_nested = 0\n    local open_brackets_count_nested2\
    \ = 0\n    local close_brackets_count_nested2 = 0\n    for i = 1, string.len(string)\
    \ do\n        if open_brackets[i] == \"[\" then\n            open_brackets_count_nested\
    \ = open_brackets_count_nested + 1\n            if open_brackets_count_nested\
    \ == open_brackets_count then\n                open_brackets_count_nested2 = 0\n\
    \            end\n        elseif close_brackets[i] == \"]\" then\n           \
    \ close_brackets_count_nested = close_brackets_count_nested + 1\n            if\
    \ close_brackets_count_nested == close_brackets_count then\n                close_brackets_count_nested2\
    \ = 0\n            end\n        elseif open_brackets[i] == \"{\" then\n      \
    \      open_brackets_count_nested2 = open_brackets_count_nested2 + 1\n       \
    \     if open_brackets_count_nested2 == open_brackets_count_nested then\n    \
    \            open_brackets_count_nested = 0\n            end\n        elseif close_brackets[i]\
    \ == \"}\" then\n            close_brackets_count_nested2 = close_brackets_count_nested2\
    \ + 1\n            if close_brackets_count_nested2 == close_brackets_count_nested\
    \ then\n                close_brackets_count_nested = 0\n            end\n   \
    \     end\n    end\n    return open_brackets_count_nested == close_brackets_count_nested\
    \ and open_brackets_count_nested2 == close_brackets_count_nested2\nend", "   \
    \ local brackets = {\n        ['('] = true,\n        [')'] = true,\n        ['[']\
    \ = true,\n        [']'] = true,\n        ['{'] = true,\n        ['}'] = true,\n\
    \    }\n    local open_brackets = false\n    local close_brackets = false\n  \
    \  local open_brackets_count = 0\n    local close_brackets_count = 0\n    local\
    \ open_brackets_position = 0\n    local close_brackets_position = 0\n    for i\
    \ = 1, #string do\n        if brackets[string[i]] then\n            if open_brackets\
    \ == false then\n                open_brackets = true\n                open_brackets_count\
    \ = open_brackets_count + 1\n                open_brackets_position = i\n    \
    \        else\n                close_brackets = true\n                close_brackets_count\
    \ = close_brackets_count + 1\n                close_brackets_position = i\n  \
    \          end\n        elseif open_brackets then\n            if close_brackets\
    \ == false then\n                close_brackets = true\n                close_brackets_count\
    \ = close_brackets_count + 1\n                close_brackets_position = i\n  \
    \          else\n                open_brackets = false\n                open_brackets_count\
    \ = open_brackets_count - 1\n                open_brackets_position = i\n    \
    \        end\n        elseif close_brackets then\n            if open_brackets\
    \ == false then\n                open_brackets = true\n                open_brackets_count\
    \ = open_brackets_count + 1\n                open_brackets_position = i\n    \
    \        else\n                close_brackets = false\n                close_brackets_count\
    \ = close_brackets_count - 1\n                close_brackets_position = i\n  \
    \          end\n        end\n    end\n    return open_brackets_count > 0 and close_brackets_count\
    \ > 0\nend", "    local open_brackets = string.gsub(string, \"[\", \"\")\n   \
    \ local close_brackets = string.gsub(string, \"]\", \"\")\n    local open_brackets_count\
    \ = string.len(open_brackets)\n    local close_brackets_count = string.len(close_brackets)\n\
    \    local open_brackets_index = open_brackets_count - 1\n    local close_brackets_index\
    \ = close_brackets_count - 1\n    local open_brackets_index2 = open_brackets_count\
    \ - 2\n    local close_brackets_index2 = close_brackets_count - 2\n    local open_brackets_index3\
    \ = open_brackets_count - 3\n    local close_brackets_index3 = close_brackets_count\
    \ - 3\n    local open_brackets_index4 = open_brackets_count - 4\n    local close_brackets_index4\
    \ = close_brackets_count - 4\n    local open_brackets_index5 = open_brackets_count\
    \ - 5\n    local close_brackets_index5 = close_brackets_count - 5\n    local open_brackets_index6\
    \ = open_brackets_count - 6\n    local close_brackets_index6 = close_brackets_count\
    \ - 6\n    local open_brackets_index7 = open_brackets_count - 7\n    local close_brackets_index7\
    \ = close_brackets_count - 7\n    local open_brackets_index8 = open_brackets_count\
    \ - 8\n    local close_brackets_index8 = close_brackets_count - 8\n    local open_brackets_index9\
    \ = open_brackets_count - 9\n    local close_brackets_index9 = close_brackets_count\
    \ - 9\n    local open_brackets_index10 = open_brackets_count - 10\n    local close_brackets_index10\
    \ = close_brackets_count - 10\n    local open_brackets_index11 = open_brackets_count\
    \ - 11\n    local close_brackets_index11 = close_brackets_count - 11\n    local\
    \ open_brackets_index12 = open_brackets_count - 12\n    local close_brackets_index12\
    \ = close_brackets_count - 12\n    local open_brackets_index13 = open_brackets_count\
    \ - 13\n    local close", '    local brackets = {[["("]]=true,[["["]]=true,[["{"]]=true,[["[".."]"]]=true,[["[".."[".."]"]]=true,[["[".."{".."]"]]=true,[["[".."[".."[".."]"]]=true,[["[".."{".."[".."[".."]"]]=true,[["[".."{".."{".."[".."]"]]=true,[["[".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."]"]]=true,[["[".."{".."{".."{".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{".."{".."{".."[".."[".."]"]]=true,[["[".."{"..',
  "  local brackets = {\n    [\"[\"]=true,\n    [\"{\"]=true,\n    [\"(\"]=true,\n\
    \    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"{\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n\
    \    [\"(\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"{\"]=true,\n\
    \    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n\
    \    [\"(\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"[\"]=true,\n\
    \    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n\
    \    [\"(\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"[\"]=true,\n\
    \    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n\
    \    [\"(\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"[\"]=true,\n\
    \    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n\
    \    [\"(\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"[\"]=true,\n\
    \    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n\
    \    [\"(\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n    [\"[\"]=true,\n\
    \    [\"<\"]=true,\n    [\">\"]=true,\n    [\"(\"]=true,\n    [\"<\"]=true,\n\
    \    [\">\"]=true,\n    [\"[\"]=true,\n    [\"<\"]=true,\n    [\">\"]=true,\n\
    \    [\"", "    local open_brackets = string.gsub(string, \"[\", \"\")\n    local\
    \ close_brackets = string.gsub(string, \"]\", \"\")\n    local open_brackets =\
    \ open_brackets:gsub(\"%w+\", \"\")\n    local close_brackets = close_brackets:gsub(\"\
    %w+\", \"\")\n    local open_brackets = open_brackets:gsub(\"%w+\", \"\")\n  \
    \  local close_brackets = close_brackets:gsub(\"%w+\", \"\")\n    local open_brackets\
    \ = open_brackets:gsub(\"%w+\", \"\")\n    local close_brackets = close_brackets:gsub(\"\
    %w+\", \"\")\n    local open_brackets = open_brackets:gsub(\"%w+\", \"\")\n  \
    \  local close_brackets = close_brackets:gsub(\"%w+\", \"\")\n    local open_brackets\
    \ = open_brackets:gsub(\"%w+\", \"\")\n    local close_brackets = close_brackets:gsub(\"\
    %w+\", \"\")\n    local open_brackets = open_brackets:gsub(\"%w+\", \"\")\n  \
    \  local close_brackets = close_brackets:gsub(\"%w+\", \"\")\n    local open_brackets\
    \ = open_brackets:gsub(\"%w+\", \"\")\n    local close_brackets = close_brackets:gsub(\"\
    %w+\", \"\")\n    local open_brackets = open_brackets:gsub(\"%w+\", \"\")\n  \
    \  local close_brackets = close_brackets:gsub(\"%w+\", \"\")\n    local open_brackets\
    \ = open_brackets:gsub(\"%w+\", \"\")\n    local close_brackets = close_brackets:gsub(\"\
    %w+\", \"\")\n    local open_brackets = open_brackets:gsub(\"%w+\", \"\")\n  \
    \  local close_brackets = close_brackets:gsub(\"%w+\", \"\")\n    local open_brackets\
    \ = open_brackets:gsub(\"%w+\", \"\")\n    local close_brackets = close_brackets:gsub(\"\
    %w+\", \"\")\n    local open_brackets = open_brackets:gsub(\"%w+\", \"\")\n  \
    \  local close_brackets = close_brackets:gsub(\"%w+\", \"\")\n    local open_brackets\
    \ = open_brackets:gsub(\"%w+\", \"\")\n    local close_brackets = ", "    local\
    \ open_brackets = {}\n    local close_brackets = {}\n    local open_brackets_count\
    \ = 0\n    local close_brackets_count = 0\n    local open_brackets_index = 0\n\
    \    local close_brackets_index = 0\n    local open_brackets_length = 0\n    local\
    \ close_brackets_length = 0\n    local open_brackets_index = 0\n    local close_brackets_index\
    \ = 0\n    local open_brackets_length = 0\n    local close_brackets_length = 0\n\
    \    local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_length = 0\n    local close_brackets_length\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_length = 0\n    local close_brackets_length = 0\n   \
    \ local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length = 0\n    local open_brackets_index = 0\n    local\
    \ close_brackets_index = 0\n    local open_brackets_length = 0\n    local close_brackets_length\
    \ = 0\n    local open_brackets_index = 0\n    local close_brackets_index = 0\n\
    \    local open_brackets_length = 0\n    local close_brackets_length = 0\n   \
    \ local open_brackets_index = 0\n    local close_brackets_index = 0\n    local\
    \ open_brackets_length = 0\n    local close_brackets_length = 0\n    local open_brackets_index\
    \ = 0\n    local close_brackets_index = 0\n    local open_brackets_length = 0\n\
    \    local close_brackets_length", "\tlocal brackets = {\n\t\t[\"(\"] = true,\n\
    \t\t[\")\"] = true,\n\t\t[\"[\"] = true,\n\t\t[\"]\"] = true,\n\t\t[\"{\"] = true,\n\
    \t\t[\"}\"] = true,\n\t\t[\"<\"] = true,\n\t\t[\">\"] = true,\n\t\t[\"+\"] = true,\n\
    \t\t[\"-\"] = true,\n\t\t[\"*\"] = true,\n\t\t[\"/\"] = true,\n\t\t[\"%\"] = true,\n\
    \t\t[\"^\"] = true,\n\t\t[\"~\"] = true,\n\t\t[\"&\"] = true,\n\t\t[\"|\"] = true,\n\
    \t\t[\"?\"] = true,\n\t\t[\"=\"] = true,\n\t\t[\"!\"] = true,\n\t\t[\"<=\"] =\
    \ true,\n\t\t[\">=\"] = true,\n\t\t[\"==\"] = true,\n\t\t[\"~=\"] = true,\n\t\t\
    [\"<~\"] = true,\n\t\t[\"!~\"] = true,\n\t\t[\"~>\"] = true,\n\t\t[\"<~>\"] =\
    \ true,\n\t\t[\"<<\"] = true,\n\t\t[\">>\"] = true,\n\t\t[\"<<<\"] = true,\n\t\
    \t[\"<:\"] = true,\n\t\t[\">:\"] = true,\n\t\t[\"<:>\"] = true,\n\t\t[\"<:<\"\
    ] = true,\n\t\t[\":>\"] = true,\n\t\t[\":<\"] = true,\n\t\t[\":>:\"] = true,\n\
    \t\t[\":<:\"] = true,\n\t\t[\":>:<\"] = true,\n\t\t[\":<:<\"] = true,\n\t\t[\"\
    :<:<:\"] = true,\n\t\t[\":<:<:>\"] = true,\n\t\t[\":<:<:>:\"] = true,\n\t\t[\"\
    :<:<:>:<\"] = true,\n\t\t[\":<:<:>:<:\"] = true,\n\t\t[\":<:<:>:<:>\"] = true,\n\
    \t\t[\":<:<:>:<:>:\"] = true,\n\t\t[\":<:<:>:<:>:<\"] = true,\n\t\t[\":<:<:>:<:>:<:\"\
    ] = true,\n\t\t[\":<:<:>:<:>:<:>\"] = true,\n\t\t[\":<:<:>:<:>:<:>:\"] = true,\n\
    \t\t[\":<:<:>:<:>:<:>:<\"] = true,\n\t\t[\":<:<:>:<:>:<:>:<:\"] = true,\n\t\t\
    [\":<:<:>:<:>:<:>:<:>\"] = true,\n\t\t[\"", "    local open_brackets = string.gsub(string,\
    \ \"[\", \"\")\n    local close_brackets = string.gsub(string, \"]\", \"\")\n\
    \    local open_brackets_count = string.len(open_brackets)\n    local close_brackets_count\
    \ = string.len(close_brackets)\n    local open_brackets_index = open_brackets_count\
    \ - 1\n    local close_brackets_index = open_brackets_count - 1\n    local open_brackets_index2\
    \ = open_brackets_count - 1\n    local close_brackets_index2 = close_brackets_count\
    \ - 1\n    local open_brackets_index3 = open_brackets_count - 1\n    local close_brackets_index3\
    \ = close_brackets_count - 1\n    local open_brackets_index4 = open_brackets_count\
    \ - 1\n    local close_brackets_index4 = close_brackets_count - 1\n    local open_brackets_index5\
    \ = open_brackets_count - 1\n    local close_brackets_index5 = close_brackets_count\
    \ - 1\n    local open_brackets_index6 = open_brackets_count - 1\n    local close_brackets_index6\
    \ = close_brackets_count - 1\n    local open_brackets_index7 = open_brackets_count\
    \ - 1\n    local close_brackets_index7 = close_brackets_count - 1\n    local open_brackets_index8\
    \ = open_brackets_count - 1\n    local close_brackets_index8 = close_brackets_count\
    \ - 1\n    local open_brackets_index9 = open_brackets_count - 1\n    local close_brackets_index9\
    \ = close_brackets_count - 1\n    local open_brackets_index10 = open_brackets_count\
    \ - 1\n    local close_brackets_index10 = close_brackets_count - 1\n    local\
    \ open_brackets_index11 = open_brackets_count - 1\n    local close_brackets_index11\
    \ = close_brackets_count - 1\n    local open_brackets_index12 = open_brackets_count\
    \ - 1\n    local close_brackets_index12 = close_brackets_count - 1\n    local\
    \ open_brackets_index13 = open_brackets_count - 1\n    local close_brackets_index13\
    \ = close_brackets_count - 1\n    local open_brackets_index", "    local open_brackets\
    \ = string.gsub(string, \"[\", \"\")\n    local close_brackets = string.gsub(string,\
    \ \"]\", \"\")\n    local open_brackets_count = string.len(open_brackets)\n  \
    \  local close_brackets_count = string.len(close_brackets)\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count-1 -- Remove the last bracket\n    local open_brackets_count\
    \ = open_brackets_count-1 -- Remove the first bracket\n    local close_brackets_count\
    \ = close_brackets_count"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

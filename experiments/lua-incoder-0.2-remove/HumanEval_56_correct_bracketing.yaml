name: HumanEval_56_correct_bracketing
language: lua
prompt: "-- brackets is a string of \"<\" and \">\".\n-- return True if every opening\
  \ bracket has a corresponding closing bracket.\nlocal function correct_bracketing(brackets)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = correct_bracketing\n\
  \    lu.assertEquals(candidate('<>'), true)\n    lu.assertEquals(candidate('<<><>>'),\
  \ true)\n    lu.assertEquals(candidate('<><><<><>><>'), true)\n    lu.assertEquals(candidate('<><><<<><><>><>><<><><<>>>'),\
  \ true)\n    lu.assertEquals(candidate('<<<><>>>>'), false)\n    lu.assertEquals(candidate('><<>'),\
  \ false)\n    lu.assertEquals(candidate('<'), false)\n    lu.assertEquals(candidate('<<<<'),\
  \ false)\n    lu.assertEquals(candidate('>'), false)\n    lu.assertEquals(candidate('<<>'),\
  \ false)\n    lu.assertEquals(candidate('<><><<><>><>><<>'), false)\n    lu.assertEquals(candidate('<><><<><>><>>><>'),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local opening_brackets = {}\n  for i = 1, #brackets do\n    local\
    \ opening = brackets[i]\n    local closing = brackets[i+1]\n    if opening ~=\
    \ \">\" and opening ~= \"(\" then\n      return false\n    end\n    if opening\
    \ == \"(\" and closing == \")\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"(\" and closing == \"[\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"(\" and closing == \"{\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"(\" and closing == \"}\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"[\" and closing == \"]\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"[\" and closing == \"}\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"{\" and closing == \"}\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"{\" and closing == \"}\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"}\" and closing == \"}\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    elseif opening == \"}\" and closing == \"}\" then\n      opening_brackets[#opening_brackets+1]\
    \ = opening\n    end\n  end\n  for i = 1, #opening_brackets do\n    local opening\
    \ = opening_brackets[i]\n    local closing = brackets[i+1]\n    if opening ~=\
    \ closing then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ opening = brackets:match(\"<([%w%p]*)\")\n  local closing = brackets:match(\"\
    >([%w%p]*)\")\n  local opening_count = #opening - 1\n  local closing_count = #closing\
    \ - 1\n  local opening_open = opening:sub(1, opening_count)\n  local opening_close\
    \ = opening:sub(opening_count + 1, opening_count + opening_open)\n  local closing_open\
    \ = closing:sub(1, closing_count)\n  local closing_close = closing:sub(closing_count\
    \ + 1, closing_count + closing_open)\n  return opening_open == closing_close and\
    \ opening_close == closing_open\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i+1]\
    \ ~= opening_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<(%w+):>\", \"%1\")\n  local closing_brackets = brackets:gsub(\"\
    <(%w+):>\", \"%2\")\n  return opening_brackets:len() == closing_brackets:len()\
    \ and\n         opening_brackets:all() == \"(\" and closing_brackets:all() ==\
    \ \")\"\nend", "  local opening_brackets = {}\n  local closing_brackets = {}\n\
    \  for i = 1, #brackets do\n    local opening = brackets[i]\n    if opening ==\
    \ \"<\" then\n      table.insert(opening_brackets, i)\n    elseif opening == \"\
    >\" then\n      table.insert(closing_brackets, i)\n    end\n  end\n  for i = 1,\
    \ #opening_brackets do\n    local opening = brackets[opening_brackets[i]]\n  \
    \  local closing = brackets[closing_brackets[i]]\n    if opening ~= closing then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"%%%1%%%2\")\n  local closing_brackets = brackets:gsub(\"\
    %%%1%%%2\", \"<\")\n  return opening_brackets ~= closing_brackets\nend", "  local\
    \ opening_brackets = {}\n  for i = 1, #brackets do\n    if brackets[i] == '<'\
    \ then\n      table.insert(opening_brackets, i)\n    end\n  end\n  for i = #opening_brackets,\
    \ 1, -1 do\n    if brackets[opening_brackets[i]] ~= '<' then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    >\")\n  local closing_brackets_index = closing_brackets:find(\"<\")\n  local opening_brackets_index2\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index2 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index3 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index3 = closing_brackets:find(\">\")\n  local opening_brackets_index4\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index4 = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index5 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index5 = closing_brackets:find(\">\")\n  local opening_brackets_index6\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index6 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index7 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index7 = closing_brackets:find(\">\")\n  local opening_brackets_index8\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index8 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index9 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index9 = closing_brackets:find(\">\")\n  local opening_brackets_index10\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index10 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index11 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index11 = closing_brackets:find(\">\")\n  local opening_brackets_index12\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\">\")\n  local closing_brackets_index = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index2 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index2 = closing_brackets:find(\">\")\n  local opening_brackets_index3\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index3 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index4 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index4 = closing_brackets:find(\">\")\n  local opening_brackets_index5\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index5 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index6 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index6 = closing_brackets:find(\">\")\n  local opening_brackets_index7\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index7 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index8 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index8 = closing_brackets:find(\">\")\n  local opening_brackets_index9\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index9 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index10 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index10 = closing_brackets:find(\">\")\n  local opening_brackets_index11\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index11 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index12 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_", "  local opening_brackets = {}\n  for i = 1, #brackets do\n\
    \    local opening_bracket = brackets[i]\n    if opening_bracket == \"<\" then\n\
    \      opening_brackets[i] = \"<\"\n    elseif opening_bracket == \">\" then\n\
    \      opening_brackets[i] = \">\"\n    else\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"<(%w+)>\", \"\
    %1\")\n  local closing_brackets = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return\
    \ opening_brackets == closing_brackets\nend", "  local opening_brackets = brackets:gsub(\"\
    %b()\", \"\")\n  local closing_brackets = brackets:gsub(\"%b()\", \"%b()\")\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) ~= closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]+\", \"\")\n  for i = 1, #opening_brackets do\n    if\
    \ opening_brackets[i] ~= opening_brackets[i+1] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"<\",\
    \ \"%%%1\")\n  local closing_brackets = brackets:gsub(\">\", \"%%%2\")\n  return\
    \ opening_brackets:len() == closing_brackets:len() and\n         opening_brackets:sub(1,\
    \ 1) == closing_brackets:sub(1, 1)\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    >\")\n  local closing_brackets_index = closing_brackets:find(\"<\")\n  local opening_brackets_index_count\
    \ = opening_brackets_index\n  local closing_brackets_index_count = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening",
  "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2)\n  return\
    \ opening:find(closing:sub(1,1)) == nil\nend", "  local opening_brackets = brackets:gsub(\"\
    <(%w+)>\", \"%1\")\n  local closing_brackets = brackets:gsub(\"%(%w+)>\", \"%1\"\
    )\n  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_brackets =\
    \ \"\"\n  local closing_brackets_brackets = \"\"\n  local opening_brackets_brackets_count\
    \ = 0\n  local closing_brackets_brackets_count = 0\n  local opening_brackets_brackets_index\
    \ = 1\n  local closing_brackets_brackets_index = 1\n  local opening_brackets_brackets_brackets\
    \ = \"\"\n  local closing_brackets_brackets_brackets = \"\"\n  local opening_brackets_brackets_brackets_count\
    \ = 0\n  local closing_brackets_brackets_brackets_count = 0\n  local opening_brackets_brackets_brackets_index\
    \ = 1\n  local closing_brackets_brackets_brackets_index = 1\n  local opening_brackets_brackets_brackets_brackets\
    \ = \"\"\n  local closing_brackets_brackets_brackets_brackets = \"\"\n  local\
    \ opening_brackets_brackets_brackets_brackets_count = 0\n  local closing_brackets_brackets_brackets_brackets_count\
    \ = 0\n  local opening_brackets_brackets_brackets_brackets_index = 1\n  local\
    \ closing_brackets_brackets_brackets_index = 1\n  local opening_brackets_brackets_brackets_brackets_brackets\
    \ = \"\"\n  local closing_brackets_brackets_brackets_brackets_brackets = \"\"\n\
    \  local opening_brackets_brackets_brackets_brackets_brackets_count = 0\n  local\
    \ closing_brackets_brackets_brackets_brackets_brackets_count = 0\n  local opening_brackets_brackets_brackets_brackets_brackets_index\
    \ = 1\n  local closing_brackets_brackets_brackets_brackets_index = 1\n  local\
    \ opening_brackets_brackets_brackets_brackets_brackets_brackets = \"\"\n  local\
    \ closing_brackets_brackets_brackets_brackets_brackets_brackets = \"\"\n  local\
    \ opening_brackets_brackets_brackets_brackets_brackets_brackets_count = 0\n  local\
    \ closing_brackets_brackets_brackets_", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return opening ~=\
    \ closing and opening ~= '<' and opening ~= '>'\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"[\")\n  local closing_brackets_index = closing_brackets:find(\"\
    ]\")\n  local opening_brackets_index_count = opening_brackets_index\n  local closing_brackets_index_count\
    \ = closing_brackets_index", "  local opening_brackets = {}\n  for _, bracket\
    \ in pairs(brackets) do\n    local opening_bracket = bracket:sub(1, 1)\n    local\
    \ closing_bracket = bracket:sub(2, 2)\n    if opening_bracket ~= closing_bracket\
    \ then\n      return false\n    end\n    table.insert(opening_brackets, opening_bracket)\n\
    \  end\n  for i = #opening_brackets, 1, -1 do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "   for i = 1,\
    \ #brackets do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"(\" then\n         return false\n\
    \      end\n      if closing ~= \")\" and closing ~= \"]\" then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local opening_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets_count\
    \ - 1\n  local closing_brackets_index = opening_brackets_count - 1\n  local opening_brackets_index2\
    \ = opening_brackets_count - 1\n  local closing_brackets_index2 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index3 = opening_brackets_count - 1\n  local closing_brackets_index3\
    \ = opening_brackets_count - 1\n  local opening_brackets_index4 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index4 = opening_brackets_count - 1\n  local opening_brackets_index5\
    \ = opening_brackets_count - 1\n  local closing_brackets_index5 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index6 = opening_brackets_count - 1\n  local closing_brackets_index6\
    \ = opening_brackets_count - 1\n  local opening_brackets_index7 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index7 = opening_brackets_count - 1\n  local opening_brackets_index8\
    \ = opening_brackets_count - 1\n  local closing_brackets_index8 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index9 = opening_brackets_count - 1\n  local closing_brackets_index9\
    \ = opening_brackets_count - 1\n  local opening_brackets_index10 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index10 = opening_brackets_count - 1\n  local\
    \ opening_brackets_index11 = opening_brackets_count - 1\n  local closing_brackets_index11\
    \ = opening_brackets_count - 1\n  local opening_brackets_index12 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index12 = opening_brackets_count - 1\n  ", " \
    \ local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ local opening_brackets_index = opening_brackets_index - 1\n  local closing_brackets_index\
    \ = closing_brackets_index - 1\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_index\
    \ = opening_brackets_index\n  local closing_brackets_index = closing_brackets_index\n\
    \  local opening_bracket = opening_bracket\n  local closing_bracket = closing_bracket\n\
    \  local opening_brackets_count = opening_brackets_count\n  local closing_brackets_count\
    \ = closing_brackets_count\n  local opening_brackets_index = opening_brackets_index\n\
    \  local closing_brackets_index = closing_brackets_index\n  local opening_bracket\
    \ = opening_bracket\n  local closing_bracket = closing_bracket\n  local opening_brackets_count\
    \ = opening_brackets_count\n  local closing_brackets_count = closing_brackets_count\n\
    \  local opening_brackets_index = opening_brackets_index\n  local closing_brackets_index\
    \ = closing_brackets_index\n  local opening_bracket = opening_bracket\n  local\
    \ closing_bracket = closing_bracket\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_index\
    \ = opening_brackets_index\n  local closing_brackets_index = closing_brackets_index\n\
    \  local open", "  local opening_brackets = brackets:gsub(\"^<\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"^>\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^<\", \"\")\n  local closing_brackets_count\
    \ = closing_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^>\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count:gsub(\"^<\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count:gsub(\"^>\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count_correct:gsub(\"^<\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count_correct:gsub(\"^>\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count_correct:gsub(\"^<\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count_correct:gsub(\"^>\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count_correct:gsub(\"^<\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count_correct:gsub(\"^>\", \"\")\n  local opening_brackets_count_correct\
    \ = opening_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  local closing_brackets_count_correct\
    \ = closing_brackets_count_correct:gsub(\"[^<>]+\", \"\")\n  ", "  local opening_brackets\
    \ = brackets:gsub(\"^<+\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    ^>+$\", \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"[^<>]+\"\
    , \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"[^<>]+\", \"\
    \")\n  return opening_brackets_count == closing_brackets_count\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_char = opening_brackets[1]\n\
    \  local closing_brackets_char = closing_brackets[1]\n  while opening_brackets_index\
    \ < opening_brackets_count do\n    if opening_brackets_char == opening_brackets[opening_brackets_index]\
    \ then\n      opening_brackets_index = opening_brackets_index + 1\n      opening_brackets_char\
    \ = opening_brackets[opening_brackets_index]\n    else\n      return false\n \
    \   end\n  end\n  while closing_brackets_index < closing_brackets_count do\n \
    \   if closing_brackets_char == closing_brackets[closing_brackets_index] then\n\
    \      closing_brackets_index = closing_brackets_index + 1\n      closing_brackets_char\
    \ = closing_brackets[closing_brackets_index]\n    else\n      return false\n \
    \   end\n  end\n  return opening_brackets_char == closing_brackets_char\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_index2 = 0\n\
    \  local closing_brackets_index2 = 0\n  local opening_brackets_index3 = 0\n  local\
    \ closing_brackets_index3 = 0\n  local opening_brackets_index4 = 0\n  local closing_brackets_index4\
    \ = 0\n  local opening_brackets_index5 = 0\n  local closing_brackets_index5 =\
    \ 0\n  local opening_brackets_index6 = 0\n  local closing_brackets_index6 = 0\n\
    \  local opening_brackets_index7 = 0\n  local closing_brackets_index7 = 0\n  local\
    \ opening_brackets_index8 = 0\n  local closing_brackets_index8 = 0\n  local opening_brackets_index9\
    \ = 0\n  local closing_brackets_index9 = 0\n  local opening_brackets_index10 =\
    \ 0\n  local closing_brackets_index10 = 0\n  local opening_brackets_index11 =\
    \ 0\n  local closing_brackets_index11 = 0\n  local opening_brackets_index12 =\
    \ 0\n  local closing_brackets_index12 = 0\n  local opening_brackets_index13 =\
    \ 0\n  local closing_brackets_index13 = 0\n  local opening_brackets_index14 =\
    \ 0\n  local closing_brackets_index14 = 0\n  local opening_brackets_index15 =\
    \ 0\n  local closing_brackets_index15 = 0\n  local opening_brackets_index16 =\
    \ 0\n  local closing_brackets_index16 = 0\n  local opening_brackets_index17 =\
    \ 0\n  local closing_brackets_index17 = 0\n  local opening_brackets_index18 =\
    \ 0\n  local closing_brackets_index18 = 0\n  local opening_brackets_index19 =\
    \ 0\n  local closing_brackets_index19 = 0\n  local opening_brackets_", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\">\")\n  local closing_brackets_index = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index = opening_brackets_index or 0\n  local closing_brackets_index\
    \ = closing_brackets_index or 0\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_index\
    \ = opening_brackets_index\n  local closing_brackets_index = closing_brackets_index\n\
    \  local opening_brackets_count = opening_brackets_count\n  local closing_brackets_count\
    \ = closing_brackets_count\n  local opening_brackets_index = opening_brackets_index\n\
    \  local closing_brackets_index = closing_brackets_index\n  local opening_brackets_count\
    \ = opening_brackets_count\n  local closing_brackets_count = closing_brackets_count\n\
    \  local opening_brackets_index = opening_brackets_index\n  local closing_brackets_index\
    \ = closing_brackets_index\n  local opening_brackets_count = opening_brackets_count\n\
    \  local closing_brackets_count = closing_brackets_count\n  local opening_brackets_index\
    \ = opening_brackets_index\n  local closing_brackets_index = closing_brackets_index\n\
    \  local opening_brackets_count = opening_brackets_count\n  local closing_brackets_count\
    \ = closing_brackets_count\n  local opening_brackets_index = opening_brackets_index\n\
    \  local closing_brackets_index = closing_brackets_index\n  local opening_brackets_count\
    \ = opening_brackets_count\n  local closing_brackets_count = closing_brackets_count\n\
    \  local opening_brackets_index = opening_brackets_index\n  local closing_brackets_index\
    \ = closing_brackets_index", "  local opening = brackets:match(\"<([%w%p]+)\"\
    )\n  local closing = brackets:match(\">([%w%p]+)\")\n  local opening_count = #opening\
    \ - 1\n  local closing_count = #closing - 1\n  for i = 1, opening_count do\n \
    \   if opening[i] ~= closing[i] then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"<\", \"\"):gsub(\"[\"\
    , \"\"):gsub(\"]\", \"\")\n  local closing_brackets = brackets:gsub(\"]\", \"\"\
    ):gsub(\"]\", \"\"):gsub(\"[\", \"\")\n  for i = 1, #opening_brackets do\n   \
    \ if opening_brackets[i] ~= closing_brackets[i] then\n      return false\n   \
    \ end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets:find(\"\
    [\")\n  local closing_brackets_index = closing_brackets:find(\"]\")", "  local\
    \ opening_brackets = {}\n  for _, bracket in ipairs(brackets) do\n    opening_brackets[bracket]\
    \ = true\n  end\n  for _, bracket in ipairs(brackets) do\n    if not opening_brackets[bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "   for i = 1,\
    \ #brackets do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"(\" then\n         return false\n\
    \      end\n      if closing ~= \")\" and closing ~= \"]\" then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local opening_brackets =\
    \ brackets:gsub(\"^<%([%w%)]+)%>$\", \"%%%1\")\n  local closing_brackets = brackets:gsub(\"\
    ^%%%1%>$\", \"<%([%w%)]+)%>\")\n  return opening_brackets == closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub(\"<\", \"\"):gsub(\"]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"]\", \"\"):gsub(\"<\", \"\")\n \
    \ for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  local opening_brackets_table\
    \ = { }\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    opening_brackets_table[opening_bracket] = true\n  end\n  local closing_brackets_table\
    \ = { }\n  for i = 1, closing_brackets_count do\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    closing_brackets_table[closing_bracket] = true\n  end\n  for opening_bracket,\
    \ closing_bracket in pairs(opening_brackets_table) do\n    if not closing_brackets_table[closing_bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"\"):gsub(\"]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    ]\", \"\"):gsub(\"<\", \"\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) == closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ while opening_brackets_index > 0 do\n    opening_bracket = opening_brackets:sub(1,\
    \ opening_brackets_index - 1)\n    opening_brackets_index = opening_brackets_index\
    \ - 1\n    opening_brackets_count = opening_brackets_count - 1\n    if opening_brackets_count\
    \ < 0 then\n      return false\n    end\n  end\n  while closing_brackets_index\
    \ > 0 do\n    closing_bracket = closing_brackets:sub(1, closing_brackets_index\
    \ - 1)\n    closing_brackets_index = closing_brackets_index - 1\n    closing_brackets_count\
    \ = closing_brackets_count - 1\n    if closing_brackets_count < 0 then\n     \
    \ return false\n    end\n  end\n  if opening_bracket ~= closing_bracket then\n\
    \    return false\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    <\", \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"[^<]+\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    [^>]+\", \"\")\n  return opening_brackets_count == closing_brackets_count\nend",
  "  local opening_brackets = brackets:gsub(\"<(%w+)>\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]+\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_char\n  local\
    \ closing_brackets_char\n  local opening_brackets_char_length\n  local closing_brackets_char_length\n\
    \  local opening_brackets_char_length_index\n  local closing_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index\n\
    \  local opening_brackets_char_length_index\n  local opening_brackets_char_length_index",
  "  local opening_brackets = brackets:gsub(\"<\", \"%%%1%%%2\"):gsub(\"%1%%%2\",\
    \ \">\")\n  return opening_brackets:sub(1, #opening_brackets) == opening_brackets\n\
    end", "  local opening_brackets = brackets:gsub(\"^<\", \"\"):gsub(\"^>\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"^>\", \"\"):gsub(\"^<\", \"\")\n\
    \  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local opening = opening_brackets[i]\n\
    \    local closing = closing_brackets[i]\n    if opening ~= closing then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets = brackets:gsub(\"\
    %%%1\", \">\")\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\">\")\n  local closing_brackets_index = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index2 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index2 = closing_brackets:find(\">\")\n  local opening_brackets_index3\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index3 = closing_brackets:find(\"\
    >\")\n  local opening_brackets_index4 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index4 = closing_brackets:find(\"<\")\n  local opening_brackets_index5\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index5 = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index6 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index6 = closing_brackets:find(\"<\")\n  local opening_brackets_index7\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index7 = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index8 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index8 = closing_brackets:find(\"<\")\n  local opening_brackets_index9\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index9 = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index10 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_index10 = closing_brackets:find(\"<\")\n  local opening_brackets_index11\
    \ = opening_brackets:find(\"<\")\n  local closing_brackets_index11 = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index12 = opening_brackets:find(\"<\")\n  local\
    \ closing_brackets_", "  local opening_brackets = brackets:gsub(\"<\", \"%%%1\"\
    ):gsub(\"%%(%1$)\", \"%%%1\")\n  local closing_brackets = brackets:gsub(\"%%(%1$)\"\
    , \"<\")\n  return opening_brackets:len() == closing_brackets:len()\nend", " \
    \ local opening_brackets = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%>\", \"%%%2\")\n  local opening = opening_brackets:gsub(\"\
    %%%1\", \"<\")\n  local closing = closing_brackets:gsub(\"%%%2\", \">\")\n  return\
    \ opening:len() == closing:len() and opening:sub(1, opening:len()) == closing\n\
    end", "  local opening_brackets = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%%%1\", \"<\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2)\n\
    \  local opening_count = brackets:sub(1,2):len()\n  local opening_count = opening_count\
    \ - 1\n  local opening_pos = 1\n  local opening_end_pos = 1\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n\
    \  local opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local\
    \ opening_end_pos_count = 0\n  local opening_end_pos_count = 0\n  local opening_end_pos_count\
    \ = 0", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  for i = 1,\
    \ #opening_brackets do\n    if opening_brackets[i] ~= opening_brackets[i+1] then\n\
    \      return false\n    end\n  end\n  return true\nend", "   for i = 1, #brackets\
    \ do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"(\" then\n         return false\n\
    \      end\n      if closing ~= \")\" and closing ~= \"]\" then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local opening_brackets =\
    \ {}\n  for i = 1, #brackets do\n    local opening_bracket = brackets[i]\n   \
    \ local closing_bracket = brackets[i+1]\n    if opening_bracket ~= closing_bracket\
    \ then\n      return false\n    end\n    opening_brackets[#opening_brackets+1]\
    \ = opening_bracket\n  end\n  return #opening_brackets == #brackets\nend", " \
    \ local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_pairs\
    \ = opening_brackets:gsub(\"(%a+)\", \"%1\")\n  local closing_brackets_pairs =\
    \ closing_brackets:gsub(\"(%a+)\", \"%1\")\n  local opening_brackets_pairs_count\
    \ = opening_brackets_pairs:len()\n  local closing_brackets_pairs_count = closing_brackets_pairs:len()\n\
    \  local opening_brackets_pairs_pairs = opening_brackets_pairs:gsub(\"(%a+)\"\
    , \"%1\")\n  local closing_brackets_pairs_pairs = closing_brackets_pairs:gsub(\"\
    (%a+)\", \"%1\")\n  local opening_brackets_pairs_pairs_count = opening_brackets_pairs_pairs:len()\n\
    \  local closing_brackets_pairs_pairs_count = closing_brackets_pairs_pairs:len()\n\
    \  local opening_brackets_pairs_pairs_pairs = opening_brackets_pairs_pairs:gsub(\"\
    (%a+)\", \"%1\")\n  local closing_brackets_pairs_pairs_pairs = closing_brackets_pairs_pairs:gsub(\"\
    (%a+)\", \"%1\")\n  local opening_brackets_pairs_pairs_pairs_count = opening_brackets_pairs_pairs_pairs:len()\n\
    \  local closing_brackets_pairs_pairs_pairs_count = closing_brackets_pairs_pairs_pairs:len()\n\
    \  local opening_brackets_pairs_pairs_pairs_pairs = opening_brackets_pairs_pairs_pairs:gsub(\"\
    (%a+)\", \"%1\")\n  local closing_brackets_pairs_pairs_pairs_pairs = closing_brackets_pairs_pairs_pairs_pairs:gsub(\"\
    (%a+)\", \"%1\")\n  local opening_brackets_pairs_pairs_pairs_pairs_count = opening_brackets_pairs_pairs_pairs_pairs_pairs:len()\n\
    \  local closing_brackets_pairs_pairs_pairs_pairs_count = closing_brackets_pairs_pairs_pairs_pairs_pairs:len()\n\
    \  local opening_brackets_pairs_pairs_pairs_pairs_pairs = opening_bra", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]+\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"<>\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) ~= closing_brackets:sub(1, 1) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ local opening_brackets_open = opening_bracket:sub(1, 1)\n  local closing_brackets_open\
    \ = closing_bracket:sub(1, 1)\n  local opening_brackets_close = opening_bracket:sub(1,\
    \ 2)\n  local closing_brackets_close = closing_bracket:sub(1, 2)\n  local opening_brackets_closed\
    \ = opening_brackets_close == \"/\"\n  local closing_brackets_closed = closing_brackets_close\
    \ == \"/\"\n  local opening_brackets_opened = opening_brackets_open == \"/\"\n\
    \  local closing_brackets_opened = closing_brackets_open == \"/\"\n  local opening_brackets_open\
    \ = opening_brackets_open ~= closing_brackets_open\n  local opening_brackets_closed\
    \ = opening_brackets_closed ~= closing_brackets_closed\n  local opening_brackets_opened\
    \ = opening_brackets_opened ~= closing_brackets_opened\n  local opening_brackets_close\
    \ = opening_brackets_close ~= closing_brackets_close\n  local opening_brackets_open\
    \ = opening_brackets_open ~= closing_brackets_open\n  local opening_brackets_closed\
    \ = opening_brackets_closed ~= closing_brackets_closed\n  local opening_brackets_opened\
    \ = opening_brackets_opened ~= closing_brackets_opened\n  local opening_brackets_close\
    \ = opening_brackets_close ~= closing_brackets_close\n  local opening_b", "  \
    \ for i = 1, #brackets do\n      if brackets[i] == '<' then\n         if brackets[i+1]\
    \ == '>' then\n            return true\n         else\n            return false\n\
    \         end\n      end\n   end\n   return false\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    local opening_bracket =\
    \ opening_brackets[i]\n    local closing_bracket = closing_brackets[i]\n    if\
    \ opening_bracket ~= closing_bracket then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets:find(\"[\")\n  local closing_brackets_index\
    \ = closing_brackets:find(\"]\")\n  local opening_brackets_index_count = opening_brackets_index\n\
    \  local closing_brackets_index_count = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_b", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  return opening:find(closing:gsub(\"[<>]\"\
    ,\"%1\")) == nil\nend", "   for i = 1, #brackets do\n      local opening = brackets[i]\n\
    \      local closing = brackets[i+1]\n      if opening ~= \">\" and opening ~=\
    \ \"(\" then\n         return false\n      end\n      if closing ~= \")\" and\
    \ closing ~= \"]\" then\n         return false\n      end\n   end\n   return true\n\
    end", "  local opening_brackets = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%>\", \"%%%2\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"^<+\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"^>+\", \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    [^<>]+\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"[^<>]+\"\
    , \"\")\n  return opening_brackets_count == closing_brackets_count\nend", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(1, i)\n    local closing_bracket\
    \ = closing_brackets:sub(1, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~=\
    \ closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"\"):gsub(\"]\", \"\"):gsub(\"]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"]\", \"\"):gsub(\"<\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_count_correct = opening_brackets_count == opening_brackets_count\
    \ + 1\n  local closing_brackets_count_correct = closing_brackets_count == closing_brackets_count\
    \ + 1\n  return opening_brackets_count_correct and closing_brackets_count_correct\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ closing_brackets_index)\n    if opening_bracket ~= closing_bracket then\n  \
    \    return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    closing_brackets_index = closing_brackets_index + 1\n  end\n  return\
    \ true\nend", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening ~= closing and opening ~= \"<\" and opening ~= \">\"\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ local opening_brackets_count = opening_brackets_count\n  local closing_brackets_count\
    \ = closing_brackets_count\n  local opening_brackets_index = opening_brackets_count\
    \ - 1\n  local closing_brackets_index = opening_brackets_count - 1\n  local opening_bracket\
    \ = opening_brackets:sub(1, opening_brackets_index)\n  local closing_bracket =\
    \ closing_brackets:sub(1, closing_brackets_index)\n  local opening_brackets_count\
    \ = opening_brackets_count\n  local closing_brackets_count = closing_brackets_count\n\
    \  local opening_brackets_index = opening_brackets_count - 1\n  local closing_brackets_index\
    \ = opening_brackets_count - 1\n  local opening_bracket = opening_brackets:sub(1,\
    \ opening_brackets_index)\n  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n\
    \  local opening_brackets_count = opening_brackets_count\n  local closing_brackets_count\
    \ = closing_brackets_count\n  local opening_brackets_index = opening_brackets_count\
    \ - 1\n  local closing_brackets_index = opening_brackets_count - 1\n  local opening_bracket\
    \ = opening_brackets:sub(1, opening_brackets_index)\n  local closing_bracket =\
    \ closing_brackets:sub(1, closing_brackets_index)\n  local opening_brackets_count\
    \ = opening_brackets_count\n  local closing_brackets_count = closing_brackets_count\n\
    \  local open", "  local opening_brackets = brackets:gsub(\"<(%w+)>\", \"%1\"\
    )\n  local closing_brackets = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return opening_brackets\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets_count - 1\n  local closing_brackets_index\
    \ = opening_brackets_count - 1\n  local opening_bracket = opening_brackets:sub(1,\
    \ opening_brackets_index)\n  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n\
    \  local opening_brackets_index = opening_brackets_index - 1\n  local closing_brackets_index\
    \ = closing_brackets_index - 1\n  while opening_brackets_index >= 0 do\n    if\
    \ opening_bracket:sub(1, opening_brackets_index) ~= closing_bracket:sub(1, closing_brackets_index)\
    \ then\n      return false\n    end\n    opening_brackets_index = opening_brackets_index\
    \ - 1\n    closing_brackets_index = closing_brackets_index - 1\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = 1\n  local closing_brackets_index = 1\n  while\
    \ opening_brackets_index < opening_brackets_count do\n    local opening_bracket\
    \ = opening_brackets:sub(opening_brackets_index, 1)\n    local closing_bracket\
    \ = closing_brackets:sub(closing_brackets_index, 1)\n    if opening_bracket ~=\
    \ closing_bracket then\n      return false\n    end\n    opening_brackets_index\
    \ = opening_brackets_index + 1\n    closing_brackets_index = closing_brackets_index\
    \ + 1\n  end\n  return true\nend", "  local opening_brackets = {}\n  for i = 1,\
    \ #brackets do\n    local opening_bracket = brackets[i]\n    if opening_bracket\
    \ == \"<\" then\n      opening_brackets[i] = \">\"\n    elseif opening_bracket\
    \ == \">\" then\n      opening_brackets[i] = \"<\"\n    else\n      return false\n\
    \    end\n  end\n  return true\nend", "   for i = 1, #brackets do\n      if brackets[i]\
    \ == '<' then\n         if brackets[i+1] == '>' then\n            return true\n\
    \         else\n            return false\n         end\n      end\n   end\n  \
    \ return false\nend", "  local opening_brackets = brackets:gsub(\"%b()\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"%b()\", \"%b()\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2,2)\n  return opening:sub(1,1) == '<' and closing:sub(1,1)\
    \ == '>'\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets:find(\"[\")\n  local closing_brackets_index\
    \ = closing_brackets:find(\"]\")\n  local opening_brackets_index_count = opening_brackets_index\n\
    \  local closing_brackets_index_count = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_b", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"^<+\", \"\"):gsub(\"^>+$\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"^<+$\", \"\"):gsub(\"^>+\", \"\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub(\"\
    ^<\", \"\")\n  local closing_brackets = brackets:gsub(\"^>\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  local closing_brackets_count\
    \ = closing_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  local opening_brackets_count\
    \ = tonumber(opening_brackets_count)\n  local closing_brackets_count = tonumber(closing_brackets_count)\n\
    \  if opening_brackets_count ~= closing_brackets_count then\n    return false\n\
    \  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"<\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\">\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  if opening_brackets_count ~= closing_brackets:len() then\n    return false\n\
    \  end\n  local opening_brackets_table = opening_brackets:gsub(\"{\", \"\"):gsub(\"\
    }\", \"\"):gsub(\",\", \"\"):gsub(\";\", \"\"):gsub(\"(\", \"\"):gsub(\")\", \"\
    \")\n  local closing_brackets_table = closing_brackets:gsub(\"{\", \"\"):gsub(\"\
    }\", \"\"):gsub(\",\", \"\"):gsub(\";\", \"\"):gsub(\"(\", \"\"):gsub(\")\", \"\
    \")\n  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets_table:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets_table:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"%b()\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"%b()\", \"%b()\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    %b()\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"%b()\"\
    , \"\")\n  local opening_brackets_count_correct = opening_brackets_count == opening_brackets_count\n\
    \  local closing_brackets_count_correct = closing_brackets_count == closing_brackets_count\n\
    \  return opening_brackets_count_correct and closing_brackets_count_correct\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_bracket =\
    \ opening_brackets[1]\n  local closing_brackets_bracket = closing_brackets[1]",
  "  local opening_brackets = brackets:gsub(\"<\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\">\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ local opening_brackets_next = opening_brackets_index - 1\n  local closing_brackets_next\
    \ = opening_brackets_index - 1\n  local opening_brackets_prev = opening_brackets_index\
    \ - 1\n  local closing_brackets_prev = opening_brackets_index - 1\n  local opening_brackets_next_prev\
    \ = opening_brackets_index - 1\n  local closing_brackets_next_prev = opening_brackets_index\
    \ - 1\n  local opening_brackets_prev_next = opening_brackets_index - 1\n  local\
    \ closing_brackets_prev_next = opening_brackets_index - 1\n  local opening_brackets_next_next_prev\
    \ = opening_brackets_index - 1\n  local closing_brackets_next_next_prev = opening_brackets_index\
    \ - 1\n  local opening_brackets_prev_next_next = opening_brackets_index - 1\n\
    \  local closing_brackets_prev_next_next = opening_brackets_index - 1\n  local\
    \ opening_brackets_next_prev_next = opening_brackets_index - 1\n  local closing_brackets_next_prev_next\
    \ = opening_brackets_index - 1\n  local opening_brackets_prev_next_next_prev =\
    \ opening_brackets_index - 1\n  local closing_brackets_prev_next_next_prev = opening_brackets_index\
    \ - 1\n  local opening_brackets_next_prev_next_next = opening_brackets_index -\
    \ 1\n  local closing_brackets_next_prev_next_next = opening_brackets_index - 1\n\
    \  local opening_brackets_prev_next_next_next_prev = opening_brackets_index -\
    \ 1\n  local closing_b", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\
    \")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_table = { }\n  local closing_brackets_table = { }\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    opening_brackets_table[opening_bracket] = true\n  end\n  for i = 1,\
    \ closing_brackets_count do\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    closing_brackets_table[closing_bracket] = true\n  end\n  for opening_bracket,\
    \ closing_bracket in pairs(opening_brackets_table) do\n    if not closing_brackets_table[closing_bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= opening_brackets[i+1] then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local opening_brackets = brackets:gsub(\"%b()\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"%b()\", \"%b()\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"%b()\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    %b()\", \"\")\n  return opening_brackets_count == closing_brackets_count\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_table\
    \ = { }\n  local closing_brackets_table = { }\n  for i = 1, opening_brackets_count\
    \ do\n    opening_brackets_table[opening_brackets:sub(i, i)] = true\n  end\n \
    \ for i = 1, closing_brackets_count do\n    closing_brackets_table[closing_brackets:sub(i,\
    \ i)] = true\n  end\n  for i = 1, opening_brackets_count do\n    if not opening_brackets_table[i]\
    \ then\n      return false\n    end\n  end\n  for i = 1, closing_brackets_count\
    \ do\n    if not closing_brackets_table[i] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i:sub(1, i)]\
    \ ~= opening_brackets[i:sub(i + 1)] then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"<\", \"\"):gsub(\"]\", \"\"\
    )\n  local closing_brackets = brackets:gsub(\"]\", \"\"):gsub(\"<\", \"\")\n \
    \ for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"[\")\n  local closing_brackets_index = closing_brackets:find(\"\
    ]\")\n  local opening_brackets_index_count = opening_brackets_index\n  local closing_brackets_index_count\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_brackets_index\n  local closing_brackets_index_count_min = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening_b", "  local opening_brackets = brackets:gsub(\"^<\", \"\"):gsub(\"\
    ^>\", \"\")\n  local closing_brackets = brackets:gsub(\"^>\", \"\"):gsub(\"^<\"\
    , \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~= closing_brackets[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening\
    \ = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n  return opening:find(\"\
    >\") == -1 and opening:find(\"<\") == -1 and\n         closing:find(\">\") ==\
    \ -1 and closing:find(\"<\") == -1\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = 1\n  local closing_brackets_index\
    \ = 1\n  while opening_brackets_index < opening_brackets_count do\n    local opening_bracket\
    \ = opening_brackets:sub(opening_brackets_index, opening_brackets_index)\n   \
    \ local closing_bracket = closing_brackets:sub(closing_brackets_index, closing_brackets_index)\n\
    \    if opening_bracket ~= closing_bracket then\n      return false\n    end\n\
    \    opening_brackets_index = opening_brackets_index + 1\n    closing_brackets_index\
    \ = closing_brackets_index + 1\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"^<\", \"\")\n  local closing_brackets = brackets:gsub(\"^>\"\
    , \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"[^<>]+\", \"\
    \")\n  local closing_brackets_count = closing_brackets:gsub(\"[^<>]+\", \"\")\n\
    \  return opening_brackets_count == closing_brackets_count\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"\"):gsub(\"]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    ]\", \"\"):gsub(\"<\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i]\
    \ ~= closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"%b()\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"%b()\", \"%b()\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    %b()\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"%b()\"\
    , \"\")\n  return opening_brackets_count == closing_brackets_count\nend", "  local\
    \ opening_brackets = brackets:gsub(\"^<+\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"^>+$\", \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    [^<>]+\", \"\"):gsub(\"^<+\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    [^<>]+\", \"\"):gsub(\"^>+$\", \"\")\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_bracket =\
    \ opening_brackets:sub(1, 1)\n  local closing_brackets_bracket = closing_brackets:sub(1,\
    \ 1)\n  while opening_brackets_index < opening_brackets_count do\n    if opening_brackets_bracket\
    \ ~= closing_brackets_bracket then\n      return false\n    end\n    opening_brackets_index\
    \ = opening_brackets_index + 1\n    opening_brackets_bracket = opening_brackets:sub(1,\
    \ 1)\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]+\", \"%1\")\n  local closing_brackets = brackets:gsub(\"[<>]+\", \"%2\")\n\
    \  return opening_brackets:len() == closing_brackets:len()\nend", "   for i =\
    \ 1, #brackets do\n      local opening = brackets[i]\n      local closing = brackets[i+1]\n\
    \      if opening ~= \">\" and opening ~= \"(\" then\n         return false\n\
    \      end\n      if closing ~= \")\" and closing ~= \"]\" then\n         return\
    \ false\n      end\n   end\n   return true\nend", "  local opening_brackets =\
    \ brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets = brackets:gsub(\"\
    %%%1\", \"<\")\n  return opening_brackets:len() == closing_brackets:len()\nend",
  "  local opening_brackets = brackets:gsub(\"<\", \"%%%1\"):gsub(\"%%(%1$)\", \"\
    %%%1\")\n  local closing_brackets = brackets:gsub(\"%%(%1$)\", \"<\")\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2)\n  local opening_bracket = opening:lower()\n\
    \  local closing_bracket = closing:lower()\n  local opening_count = brackets:find(opening_bracket)\n\
    \  local closing_count = brackets:find(closing_bracket)\n  local opening_found\
    \ = false\n  local closing_found = false\n  local opening_found2 = false\n  local\
    \ closing_found2 = false\n  local opening_found3 = false\n  local closing_found3\
    \ = false\n  local opening_found4 = false\n  local closing_found4 = false\n  local\
    \ opening_found5 = false\n  local closing_found5 = false\n  local opening_found6\
    \ = false\n  local closing_found6 = false\n  local opening_found7 = false\n  local\
    \ closing_found7 = false\n  local opening_found8 = false\n  local closing_found8\
    \ = false\n  local opening_found9 = false\n  local closing_found9 = false\n  local\
    \ opening_found10 = false\n  local closing_found10 = false\n  local opening_found11\
    \ = false\n  local closing_found11 = false\n  local opening_found12 = false\n\
    \  local closing_found12 = false\n  local opening_found13 = false\n  local closing_found13\
    \ = false\n  local opening_found14 = false\n  local closing_found14 = false\n\
    \  local opening_found15 = false\n  local closing_found15 = false\n  local opening_found16\
    \ = false\n  local closing_found16 = false\n  local opening_found17 = false\n\
    \  local closing_found17 = false\n  local opening_found18 = false\n  local closing_found18\
    \ = false\n  local opening_found19 = false\n  local closing_found19 = false\n\
    \  local opening_found20 = false\n  local closing_found20 = false\n  local opening_found21\
    \ = false\n  local closing_found21 = false\n  local opening_found22 = false\n\
    \  local closing_found22 = false\n  local opening_found23 = false\n  local closing_found23\
    \ = false\n  local opening_found24 = false\n  local closing_found24 = false\n\
    \  local opening_found25 = false\n  local closing_found25 = false\n  local opening_found26\
    \ = false\n  local closing_found26 = false\n  local opening_found27 = false\n\
    \  local closing_found27 = false\n  local opening_found28 = false\n  ", "  local\
    \ opening_brackets = brackets:gsub(\"<(%w+)(%w+)>\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"<(%w+)(%w+)>\", \"%2\")\n  return opening_brackets == closing_brackets\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"[\")\n  local closing_brackets_index = closing_brackets:find(\"\
    ]\")\n  local opening_brackets_index_count = opening_brackets_index\n  if opening_brackets_index\
    \ == nil then\n    opening_brackets_index = opening_brackets_count\n  end\n  if\
    \ closing_brackets_index == nil then\n    closing_brackets_index = closing_brackets_count\n\
    \  end\n  local opening_brackets_index_count = opening_brackets_index\n  if opening_brackets_index_count\
    \ == 0 then\n    opening_brackets_index_count = opening_brackets_count\n  end\n\
    \  local closing_brackets_index_count = closing_brackets_index\n  if closing_brackets_index_count\
    \ == 0 then\n    closing_brackets_index_count = closing_brackets_count\n  end\n\
    \  local opening_brackets_index_count = opening_brackets_index_count\n  if opening_brackets_index_count\
    \ == 0 then\n    opening_brackets_index_count = opening_brackets_count\n  end\n\
    \  local closing_brackets_index_count = closing_brackets_index_count\n  if closing_brackets_index_count\
    \ == 0 then\n    closing_brackets_index_count = closing_brackets_count\n  end\n\
    \  local opening_brackets_index_count = opening_brackets_index_count\n  if opening_brackets_index_count\
    \ == 0 then\n    opening_brackets_index_count = opening_brackets_count\n  end\n\
    \  local closing_brackets_index_count = closing_brackets_index_count\n  if closing_brackets_index_count\
    \ == 0 then\n    closing_brackets_index_count = closing_brackets_count\n  end\n\
    \  local opening_brackets_index_count = opening_brackets_index_count\n  if opening_brackets_index_count\
    \ == 0 then\n    opening_brackets_index_count = opening_brackets_count\n  end\n\
    \  local closing_bracket", "  local opening_brackets = brackets:gsub(\"<(%w+)>\"\
    , \"%1\")\n  local closing_brackets = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\"[\")\n  local closing_brackets_index = closing_brackets:find(\"\
    ]\")\n  local opening_brackets_index2 = opening_brackets:find(\"{\")\n  local\
    \ closing_brackets_index2 = closing_brackets:find(\"}\")\n  local opening_brackets_index3\
    \ = opening_brackets:find(\"(\")\n  local closing_brackets_index3 = closing_brackets:find(\"\
    )\")\n  local opening_brackets_index4 = opening_brackets:find(\"%\")\n  local\
    \ closing_brackets_index4 = closing_brackets:find(\"%\")\n  local opening_brackets_index5\
    \ = opening_brackets:find(\"+\")\n  local closing_brackets_index5 = closing_brackets:find(\"\
    +\")\n  local opening_brackets_index6 = opening_brackets:find(\"?\")\n  local\
    \ closing_brackets_index6 = closing_brackets:find(\"?\")\n  local opening_brackets_index7\
    \ = opening_brackets:find(\":\")\n  local closing_brackets_index7 = closing_brackets:find(\"\
    :\")\n  local opening_brackets_index8 = opening_brackets:find(\"*\")\n  local\
    \ closing_brackets_index8 = closing_brackets:find(\"*\")\n  local opening_brackets_index9\
    \ = opening_brackets:find(\"+\")\n  local closing_brackets_index9 = closing_brackets:find(\"\
    +\")\n  local opening_brackets_index10 = opening_brackets:find(\"?\")\n  local\
    \ closing_brackets_index10 = closing_brackets:find(\"?\")\n  local opening_brackets_index11\
    \ = opening_brackets:find(\":\")\n  local closing_brackets_index11 = closing_brackets:find(\"\
    :\")\n  local opening_brackets_index12 = opening_brackets:find(\"*\")\n  local\
    \ closing_brackets_index12 = closing_brackets:find(\"*\")\n  local opening_brackets_",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"<>\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  local opening_brackets_table\
    \ = opening_brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets_table:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets_table:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets_table:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    <>\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ local opening_brackets_index = opening_brackets_index - 1\n  local closing_brackets_index\
    \ = closing_brackets_index - 1\n  while opening_brackets_index >= 0 do\n    if\
    \ opening_brackets[opening_brackets_index] == opening_bracket then\n      opening_brackets_index\
    \ = opening_brackets_index - 1\n    elseif opening_brackets[opening_brackets_index]\
    \ == closing_bracket then\n      opening_brackets_index = opening_brackets_index\
    \ - 1\n      closing_brackets_index = closing_brackets_index - 1\n    else\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) == closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<(%w+)>\", \"%1\")\n  local closing_brackets = brackets:gsub(\"\
    %(%w+)>\", \"%1\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening = brackets:match(\"<([%w_]+)>\")\n  local closing = brackets:match(\"\
    ([%w_]+)>\")\n  local opening_count = opening:gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"\
    %w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"%w+\"):gsub(\"", "  local\
    \ opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets =\
    \ brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_open = false\n\
    \  local closing_brackets_open = false\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    if opening_brackets[opening_brackets_index] ~= closing_brackets[closing_brackets_index]\
    \ then\n      opening_brackets_open = false\n      closing_brackets_open = false\n\
    \      break\n    end\n    opening_brackets_index = opening_brackets_index + 1\n\
    \    closing_brackets_index = closing_brackets_index + 1\n    if opening_brackets_index\
    \ == opening_brackets_count then\n      opening_brackets_open = true\n    end\n\
    \    if closing_brackets_index == closing_brackets_count then\n      closing_brackets_open\
    \ = true\n    end\n  end\n  return opening_brackets_open and closing_brackets_open\n\
    end", "   for i = 1, #brackets do\n      local opening = brackets[i]\n      local\
    \ closing = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"(\" then\n\
    \         return false\n      end\n      if closing ~= \")\" and closing ~= \"\
    ]\" then\n         return false\n      end\n   end\n   return true\nend", "  local\
    \ opening_brackets = brackets:gsub(\"%b()\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%b()\", \"%2\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_brackets_index2 = opening_brackets_count - 1\n  local closing_brackets_index2\
    \ = opening_brackets_count - 1\n  local opening_brackets_index3 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index3 = opening_brackets_count - 1\n  local opening_brackets_index4\
    \ = opening_brackets_count - 1\n  local closing_brackets_index4 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index5 = opening_brackets_count - 1\n  local closing_brackets_index5\
    \ = opening_brackets_count - 1\n  local opening_brackets_index6 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index6 = opening_brackets_count - 1\n  local opening_brackets_index7\
    \ = opening_brackets_count - 1\n  local closing_brackets_index7 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index8 = opening_brackets_count - 1\n  local closing_brackets_index8\
    \ = opening_brackets_count - 1\n  local opening_brackets_index9 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index9 = opening_brackets_count - 1\n  local opening_brackets_index10\
    \ = opening_brackets_count - 1\n  local closing_brackets_index10 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index11 = opening_brackets_count - 1\n  local\
    \ closing_brackets_index11 = opening_brackets_count - 1\n  local opening_brackets_index12\
    \ = opening_brackets_count - 1\n  local closing_brackets_index12 = opening_brackets_count\
    \ - 1\n  ", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  if opening_brackets_count ~= closing_brackets:len()\
    \ then\n    return false\n  end\n  local opening_brackets_table = { }\n  for i\
    \ = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    local closing_bracket = closing_brackets:sub(i, i)\n    if opening_bracket\
    \ ~= closing_bracket then\n      opening_brackets_table[opening_bracket] = true\n\
    \    end\n  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket\
    \ = opening_brackets:sub(i, i)\n    if not opening_brackets_table[opening_bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ while opening_brackets_index > 0 do\n    opening_brackets_index = opening_brackets_index\
    \ - 1\n    opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \    if opening_bracket ~= closing_bracket then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"<\",\
    \ \"%%%1\"):gsub(\"%%(%1$)\", \"%%%1\")\n  local closing_brackets = brackets:gsub(\"\
    %>\", \"%%%1\"):gsub(\"%%(%1$)\", \"%%%1\")\n  return opening_brackets:find(closing_brackets)\
    \ == nil\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  for\
    \ i = 1, #opening_brackets do\n    if opening_brackets[i] ~= opening_brackets[i+1]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets = brackets:gsub(\"\
    %>\", \"%%%2\")\n  local opening_brackets_count = opening_brackets:gsub(\"%%%1\"\
    , \"%1\"):gsub(\"%%%2\", \"%2\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    %%%1\", \"%1\"):gsub(\"%%%2\", \"%2\")\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub(\"<(%w+)>\", \"%1\")\n  local\
    \ closing_brackets = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "   for i = 1, #brackets do\n      if brackets[i]\
    \ == '<' then\n         if brackets[i+1] == '>' then\n            return true\n\
    \         else\n            return false\n         end\n      end\n   end\n  \
    \ return false\nend", "  local opening_brackets = brackets:gsub(\"<\", \"[\")\n\
    \  local closing_brackets = brackets:gsub(\">\", \"]\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2,2)\n  return opening:find(closing) == nil\nend", " \
    \ local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(1, i)\n    local closing_bracket\
    \ = closing_brackets:sub(1, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "   for i = 1, #brackets\
    \ do\n      if brackets[i] == '<' then\n         if brackets[i+1] == '>' then\n\
    \            return true\n         end\n      end\n   end\n   return false\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_brackets_index2 = opening_brackets_count - 1\n  local closing_brackets_index2\
    \ = opening_brackets_count - 1\n  local opening_brackets_index3 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index3 = opening_brackets_count - 1\n  local opening_brackets_index4\
    \ = opening_brackets_count - 1\n  local closing_brackets_index4 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index5 = opening_brackets_count - 1\n  local closing_brackets_index5\
    \ = opening_brackets_count - 1\n  local opening_brackets_index6 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index6 = opening_brackets_count - 1\n  local opening_brackets_index7\
    \ = opening_brackets_count - 1\n  local closing_brackets_index7 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index8 = opening_brackets_count - 1\n  local closing_brackets_index8\
    \ = opening_brackets_count - 1\n  local opening_brackets_index9 = opening_brackets_count\
    \ - 1\n  local closing_brackets_index9 = opening_brackets_count - 1\n  local opening_brackets_index10\
    \ = opening_brackets_count - 1\n  local closing_brackets_index10 = opening_brackets_count\
    \ - 1\n  local opening_brackets_index11 = opening_brackets_count - 1\n  local\
    \ closing_brackets_index11 = opening_brackets_count - 1\n  local opening_brackets_index12\
    \ = opening_brackets_count - 1\n  local closing_brackets_index12 = opening_brackets_count\
    \ - 1\n  ", "  local opening_brackets = brackets:gsub(\"^<+\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"^>+\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"[^<>]+\", \"\")\n  local closing_brackets_count =\
    \ closing_brackets:gsub(\"[^<>]+\", \"\")\n  local opening_brackets_count = tonumber(opening_brackets_count)\n\
    \  local closing_brackets_count = tonumber(closing_brackets_count)\n  if opening_brackets_count\
    \ ~= closing_brackets_count then\n    return false\n  end\n  -- If brackets are\
    \ balanced, then return true.\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub(\"^<(%w+)>$\", \"%1\")\n  local\
    \ closing_brackets = brackets:gsub(\"^%(%w+)<\", \"%1\")\n  return opening_brackets\
    \ ~= closing_brackets\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  if opening_brackets_count ~= closing_brackets:len()\
    \ then\n    return false\n  end\n  local opening_brackets_table = { }\n  for i\
    \ = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    opening_brackets_table[opening_bracket] = true\n  end\n  for i = 1,\
    \ closing_brackets_count do\n    local closing_bracket = closing_brackets:sub(i,\
    \ i)\n    if not opening_brackets_table[closing_bracket] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets_count\
    \ - 1\n  local closing_brackets_index = opening_brackets_count - 1\n  local opening_bracket\
    \ = opening_brackets:sub(1, opening_brackets_index)\n  local closing_bracket =\
    \ closing_brackets:sub(1, closing_brackets_index)\n  local opening_brackets_open\
    \ = opening_bracket:sub(1, 1)\n  local closing_brackets_open = closing_bracket:sub(1,\
    \ 1)\n  local opening_brackets_closed = opening_bracket:sub(1, 2)\n  local closing_brackets_closed\
    \ = closing_bracket:sub(1, 2)\n  local opening_brackets_closed_count = opening_brackets_closed:len()\n\
    \  local closing_brackets_closed_count = closing_brackets_closed:len()\n  local\
    \ opening_brackets_closed_index = opening_brackets_closed_count - 1\n  local closing_brackets_closed_index\
    \ = opening_brackets_closed_count - 1\n  local opening_brackets_closed_open =\
    \ opening_brackets_closed:sub(1, opening_brackets_closed_index)\n  local closing_brackets_closed_open\
    \ = closing_brackets_closed:sub(1, closing_brackets_closed_index)\n  local opening_brackets_closed_closed\
    \ = opening_brackets_closed:sub(2, opening_brackets_closed_index)\n  local closing_brackets_closed_closed\
    \ = closing_brackets_closed:sub(2, closing_brackets_closed_index)\n  local opening_brackets_closed_closed_count\
    \ = opening_brackets_closed_closed:len()\n  local closing_brackets_closed_closed_count\
    \ = closing_brackets_closed_closed:len()\n  local opening_brackets_closed_closed_index\
    \ = opening_brackets_closed_closed_count - 1\n  local closing_bracket", "   for\
    \ i = 1, #brackets do\n      local opening = brackets[i]\n      local closing\
    \ = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"(\" then\n     \
    \    return false\n      end\n      if closing ~= \")\" and closing ~= \"]\" then\n\
    \         return false\n      end\n   end\n   return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets:find(\">\")\n  local closing_brackets_index = closing_brackets:find(\"\
    <\")\n  local opening_brackets_index_count = opening_brackets_index\n  local closing_brackets_index_count\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_max = opening_brackets_index\n\
    \  local closing_brackets_index_count_max = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_min = opening_brackets_index\n  local closing_brackets_index_count_min\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_max\
    \ = opening_brackets_index\n  local closing_brackets_index_count_max = closing_brackets_index\n\
    \  local opening_brackets_index_count_max = opening_brackets_index\n  local closing_brackets_index_count_max\
    \ = closing_brackets_index\n  local opening_brackets_index_count_min = opening_brackets_index\n\
    \  local closing_brackets_index_count_min = closing_brackets_index\n  local opening_brackets_index_count_min\
    \ = opening", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"%%%1\")\n\
    \  local closing_brackets = brackets:gsub(\"%%%1[<>]+\", \"[<>]\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i:sub(1,\
    \ i)] ~= opening_brackets[i:sub(i + 1, i)] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"<(%w+)>\"\
    , \"%1\")\n  local closing_brackets = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return\
    \ opening_brackets:len() == closing_brackets:len()\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets = brackets:gsub(\"\
    >\", \"%%%2\")\n  local opening_brackets_count = opening_brackets:gsub(\"%%%1\"\
    , \"%1\"):gsub(\"%%%2\", \"%2\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    %%%1\", \"%1\"):gsub(\"%%%2\", \"%2\")\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub(\"^<+\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"^>+$\", \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    [^<>]+\", \"\"):gsub(\"^<+\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    [^<>]+\", \"\"):gsub(\"^>+$\", \"\")\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub(\"^<\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"^>\", \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    [^<>]+\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"[^<>]+\"\
    , \"\")\n  return opening_brackets_count == closing_brackets_count\nend", "  local\
    \ opening_brackets = brackets:gsub(\"<\", \"%%%1\"):gsub(\"%%(%1$)\", \"%%%1\"\
    )\n  local closing_brackets = brackets:gsub(\"%%(%1$)\", \"%>%1\")\n  return opening_brackets:len()\
    \ == closing_brackets:len() and\n         opening_brackets:sub(1, -1) == closing_brackets:sub(1,\
    \ -1)\nend", "  local opening_brackets = brackets:gsub(\"[<>]+\", \"%1\")\n  local\
    \ closing_brackets = brackets:gsub(\"%[<>]+\", \"[<>]\")\n  return opening_brackets:len()\
    \ == closing_brackets:len()\nend", "  local opening_brackets = brackets:gsub(\"\
    <(%w+)(%w+)>\", \"%1%2\")\n  local closing_brackets = brackets:gsub(\"<(%w+)%w+(%w+)>\"\
    , \"%1%2\")\n  return opening_brackets == closing_brackets\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  while opening_brackets_index >= 0 do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ 1)\n    local closing_bracket = closing_brackets:sub(closing_brackets_index,\
    \ 1)\n    if opening_bracket ~= closing_bracket then\n      return false\n   \
    \ end\n    opening_brackets_index = opening_brackets_index - 1\n    closing_brackets_index\
    \ = closing_brackets_index - 1\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    <>\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets[opening_brackets_index]\n  local\
    \ closing_bracket = closing_brackets[closing_brackets_index]\n  while opening_brackets_index\
    \ > 0 do\n    opening_bracket = opening_brackets[opening_brackets_index]\n   \
    \ closing_bracket = closing_brackets[closing_brackets_index]\n    if opening_bracket\
    \ ~= closing_bracket then\n      return false\n    end\n    opening_brackets_index\
    \ = opening_brackets_index - 1\n    closing_brackets_index = closing_brackets_index\
    \ - 1\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  for i = 1, #opening_brackets do\n    if opening_brackets[i] ~=\
    \ opening_brackets[i+1] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%%%1\", \">\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  while opening_brackets_index >= 0 do\n    if opening_brackets[opening_brackets_index]\
    \ ~= closing_brackets[closing_brackets_index] then\n      return false\n    end\n\
    \    opening_brackets_index = opening_brackets_index - 1\n    closing_brackets_index\
    \ = closing_brackets_index - 1\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    if opening_brackets:sub(i, i) ~= closing_brackets:sub(i, i) then\n \
    \     return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_table\
    \ = { }\n  local closing_brackets_table = { }\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    opening_brackets_table[opening_bracket]\
    \ = true\n  end\n  for i = 1, closing_brackets_count do\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    closing_brackets_table[closing_bracket] =\
    \ true\n  end\n  for opening_bracket, closing_bracket in pairs(opening_brackets_table)\
    \ do\n    if not closing_brackets_table[closing_bracket] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ opening_brackets_count = opening_brackets:len()\n  local closing_brackets_count\
    \ = closing_brackets:len()\n  local opening_brackets_index = opening_brackets_count\
    \ - 1\n  local closing_brackets_index = opening_brackets_count - 1\n  local opening_bracket\
    \ = opening_brackets:sub(1, opening_brackets_index)\n  local closing_bracket =\
    \ closing_brackets:sub(1, closing_brackets_index)\n  local opening_brackets_open\
    \ = opening_brackets:sub(1, opening_brackets_index)\n  local closing_brackets_open\
    \ = closing_brackets:sub(1, closing_brackets_index)\n  local opening_brackets_closed\
    \ = opening_brackets:sub(1, opening_brackets_index)\n  local closing_brackets_closed\
    \ = closing_brackets:sub(1, closing_brackets_index)\n  local opening_brackets_closed_count\
    \ = opening_brackets_closed:len()\n  local closing_brackets_closed_count = closing_brackets_closed:len()\n\
    \  local opening_brackets_closed_index = opening_brackets_closed_count - 1\n \
    \ local closing_brackets_closed_index = opening_brackets_closed_count - 1\n  local\
    \ opening_brackets_open_index = opening_brackets_open - 1\n  local closing_brackets_open_index\
    \ = closing_brackets_open - 1\n  local opening_brackets_open = opening_brackets:sub(1,\
    \ opening_brackets_open_index)\n  local closing_brackets_open = closing_brackets:sub(1,\
    \ closing_brackets_open_index)\n  local opening_brackets_closed_count = opening_brackets_closed_count:len()\n\
    \  local closing_brackets_closed_count = closing_brackets_closed_count:len()\n\
    \  local opening_brackets_closed_index = opening_brackets_closed_count - 1\n \
    \ local closing_brackets_closed_index = opening_brackets_closed_count - 1\n  local\
    \ opening_bra", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening:sub(1,1) ~= closing:sub(1,1)\nend", "  local opening = brackets:sub(1,1)\n\
    \  local closing = brackets:sub(2,2)\n  return opening:find(closing)\nend", " \
    \ local opening_brackets = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%%%1\", \"<\")\n  return opening_brackets == closing_brackets\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2)\n\
    \  local opening_count = brackets:sub(1,1):len()\n  local closed_count = brackets:sub(2):len()\n\
    \  for i = 1, opening_count do\n    if brackets:sub(i+1, i+2) ~= opening then\n\
    \      return false\n    end\n  end\n  for i = 1, closed_count do\n    if brackets:sub(i+1,\
    \ i+2) ~= closing then\n      return false\n    end\n  end\n  return true\nend",
  "  local opening_brackets = brackets:gsub(\"<(%w+)>\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_char = opening_brackets[1]\n\
    \  local closing_brackets_char = closing_brackets[1]\n  while opening_brackets_index\
    \ < opening_brackets_count do\n    if opening_brackets_char == closing_brackets_char\
    \ then\n      opening_brackets_index = opening_brackets_index + 1\n      closing_brackets_index\
    \ = closing_brackets_index + 1\n      opening_brackets_char = opening_brackets[opening_brackets_index]\n\
    \      closing_brackets_char = closing_brackets[closing_brackets_index]\n    else\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_table\
    \ = { }\n  local closing_brackets_table = { }\n  for i = 1, opening_brackets_count\
    \ do\n    opening_brackets_table[opening_brackets:sub(i, i)] = true\n  end\n \
    \ for i = 1, closing_brackets_count do\n    closing_brackets_table[closing_brackets:sub(i,\
    \ i)] = true\n  end\n  for i = 1, opening_brackets_count do\n    if not opening_brackets_table[i]\
    \ then\n      return false\n    end\n  end\n  for i = 1, closing_brackets_count\
    \ do\n    if not closing_brackets_table[i] then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"<\",\
    \ \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"[^<>]+\", \"\")\n  local closing_brackets_count =\
    \ closing_brackets:gsub(\"[^<>]+\", \"\")\n  return opening_brackets_count ==\
    \ closing_brackets_count\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_map = { }\n  local closing_brackets_map = { }\n  for\
    \ i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(i,\
    \ i)\n    opening_brackets_map[opening_bracket] = true\n  end\n  for i = 1, closing_brackets_count\
    \ do\n    local closing_bracket = closing_brackets:sub(i, i)\n    closing_brackets_map[closing_bracket]\
    \ = true\n  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket\
    \ = opening_brackets:sub(i, i)\n    if not opening_brackets_map[opening_bracket]\
    \ then\n      return false\n    end\n  end\n  for i = 1, closing_brackets_count\
    \ do\n    local closing_bracket = closing_brackets:sub(i, i)\n    if not closing_brackets_map[closing_bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<\", \"%%%1\"):gsub(\"%%%1\", \">\")\n  local closing_brackets\
    \ = brackets:gsub(\"%%%1\", \">\"):gsub(\"<\", \"%%%1\")\n  return opening_brackets\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub(\"[<>]\"\
    , \"\")\n  local closing_brackets = brackets:gsub(\"<>\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    local opening_bracket = opening_brackets:sub(1,\
    \ i)\n    local closing_bracket = closing_brackets:sub(1, i)\n    if not (opening_bracket\
    \ == closing_bracket) then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"^<+\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"^>+\", \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    [^<>]+\", \"\"):gsub(\"^<+\", \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    [^<>]+\", \"\"):gsub(\"^>+\", \"\")\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub(\"<(%w+)(%w+)>\", \"%2\")\n  local\
    \ closing_brackets = brackets:gsub(\"<(%w+)(%w+)>\", \"%3\")\n  return opening_brackets\
    \ == closing_brackets\nend", "  local opening_brackets = brackets:gsub(\"<\",\
    \ \"%%%1\")\n  local closing_brackets = brackets:gsub(\"%>\", \"%%%2\")\n  local\
    \ opening_brackets_count = opening_brackets:gsub(\"%%%1\", \"%1\"):gsub(\"%%%2\"\
    , \"%2\")\n  local closing_brackets_count = closing_brackets:gsub(\"%%%1\", \"\
    %1\"):gsub(\"%%%2\", \"%2\")\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_table\
    \ = { }\n  local closing_brackets_table = { }\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(i, i)\n    opening_brackets_table[opening_bracket]\
    \ = true\n  end\n  for i = 1, closing_brackets_count do\n    local closing_bracket\
    \ = closing_brackets:sub(i, i)\n    closing_brackets_table[closing_bracket] =\
    \ true\n  end\n  for i = 1, opening_brackets_count do\n    local opening_bracket\
    \ = opening_brackets:sub(i, i)\n    if not opening_brackets_table[opening_bracket]\
    \ then\n      return false\n    end\n  end\n  for i = 1, closing_brackets_count\
    \ do\n    local closing_bracket = closing_brackets:sub(i, i)\n    if not closing_brackets_table[closing_bracket]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = {}\n  for i = 1, #brackets do\n    local opening_bracket = brackets[i]\n \
    \   if opening_bracket == \"<\" then\n      opening_brackets[i] = \"<\"\n    elseif\
    \ opening_bracket == \">\" then\n      opening_brackets[i] = \">\"\n    end\n\
    \  end\n  local closed_brackets = {}\n  for i = 1, #brackets do\n    local opening_bracket\
    \ = brackets[i]\n    if opening_bracket == \"<\" then\n      closed_brackets[i]\
    \ = \">\"\n    elseif opening_bracket == \">\" then\n      closed_brackets[i]\
    \ = \"<\"\n    end\n  end\n  for i = 1, #brackets do\n    local opening_bracket\
    \ = brackets[i]\n    if opening_bracket == \"<\" then\n      local closing_bracket\
    \ = closed_brackets[i]\n      if closing_bracket ~= nil then\n        return false\n\
    \      end\n    end\n  end\n  return true\nend", "  local opening_brackets = brackets:gsub(\"\
    <\", \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  local closing_brackets_count\
    \ = closing_brackets:gsub(\"[^<>]+\", \"\"):gsub(\"^\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets_count:gsub(\"^\", \"\")\n  local closing_brackets_count =\
    \ closing_brackets_count:gsub(\"^\", \"\")\n  local opening_brackets_count = opening_brackets_count:gsub(\"\
    %\", \"\")\n  local closing_brackets_count = closing_brackets_count:gsub(\"%\"\
    , \"\")\n  local opening_brackets_count = opening_brackets_count:gsub(\"%\", \"\
    \")\n  local closing_brackets_count = closing_brackets_count:gsub(\"%\", \"\"\
    )\n  local opening_brackets_count = opening_brackets_count:gsub(\"%\", \"\")\n\
    \  local closing_brackets_count = closing_brackets_count:gsub(\"%\", \"\")\n \
    \ local opening_brackets_count = opening_brackets_count:gsub(\"%\", \"\")\n  local\
    \ closing_brackets_count = closing_brackets_count:gsub(\"%\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets_count:gsub(\"%\", \"\")\n  local closing_brackets_count =\
    \ closing_brackets_count:gsub(\"%\", \"\")\n  local opening_brackets_count = opening_brackets_count:gsub(\"\
    %\", \"\")\n  local closing_brackets_count = closing_brackets_count:gsub(\"%\"\
    , \"\")\n  local opening_brackets_count = opening_brackets_count:gsub(\"%\", \"\
    \")\n  local closing_brackets_count = closing_brackets_count:gsub(\"%\", \"\"\
    )\n  local opening_brackets_count = opening_brackets_count:gsub(\"%\", \"\")\n\
    \  local closing_brackets_count = closing_brackets_count:gsub(\"%\", \"\")\n \
    \ local opening_brackets_count = opening_brackets_count:gsub(\"%\", \"\")\n  local\
    \ closing_brackets_count = closing_brackets_count:gsub(\"%\", \"\")\n  local opening_bracket",
  "  local opening_brackets = brackets:gsub(\"<\", \"[%1]\")\n  local closing_brackets\
    \ = brackets:gsub(\"]\", \"%1]\")\n  return opening_brackets:find(closing_brackets)\
    \ == 0\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local\
    \ closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets_count - 1\n  local closing_brackets_index\
    \ = opening_brackets_count - 1\n  local opening_bracket = opening_brackets:sub(1,\
    \ opening_brackets_index)\n  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n\
    \  local opening_brackets_open = opening_bracket:sub(1, 1)\n  local closing_brackets_open\
    \ = closing_bracket:sub(1, 1)\n  local opening_brackets_close = opening_bracket:sub(2,\
    \ 1)\n  local closing_brackets_close = closing_bracket:sub(2, 1)\n  local opening_brackets_closed\
    \ = opening_brackets_close == \"<\"\n  local closing_brackets_closed = closing_brackets_close\
    \ == \">\"\n  local opening_brackets_opened = opening_brackets_open == \"<\"\n\
    \  local closing_brackets_opened = closing_brackets_open == \">\"\n  local opening_brackets_closed_or_opened\
    \ = opening_brackets_closed or opening_brackets_opened\n  local closing_brackets_closed_or_opened\
    \ = closing_brackets_closed or closing_brackets_opened\n  local opening_brackets_opened_or_closed\
    \ = opening_brackets_opened or closing_brackets_opened_or_opened\n  local opening_brackets_opened_or_closed_or_unclosed\
    \ = opening_brackets_opened_or_closed or closing_brackets_opened_or_closed or\
    \ opening_brackets_closed_or_opened\n  local opening_brackets_opened_or_closed_or_unclosed_or_unopened\
    \ = opening_brackets_opened_or_closed_or_unclosed or closing_brackets_opened_or_closed_or_unopened\
    \ or opening_brackets_closed_or_unopened\n  local opening_brackets_opened_", " \
    \ local opening_brackets = brackets:gsub(\"<(%w+)>\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"%(%w+)>\", \"%1\")\n  return opening_brackets:len() == closing_brackets:len()\n\
    end", "  local opening_brackets = brackets:gsub(\"<\", \"%%%1\"):gsub(\"%%%1\"\
    , \"%1\"):gsub(\"%1>\", \"%%%1\"):gsub(\"%%%1\", \"%1\")\n  local closing_brackets\
    \ = brackets:gsub(\"</\", \"%%%1\"):gsub(\"%%%1\", \"%1\"):gsub(\"%1%>\", \"%%%1\"\
    ):gsub(\"%%%1\", \"%1\")\n  return opening_brackets == closing_brackets\nend",
  "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  local opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n \
    \ local opening_brackets_open = opening_bracket:sub(1, 1)\n  local closing_brackets_open\
    \ = closing_bracket:sub(1, 1)\n  local opening_brackets_closed = opening_bracket:sub(2,\
    \ 1)\n  local closing_brackets_closed = closing_bracket:sub(2, 1)\n  local opening_brackets_closed_count\
    \ = opening_brackets_closed + 1\n  local closing_brackets_closed_count = closing_brackets_closed\
    \ + 1\n  local opening_brackets_open_count = opening_brackets_open + 1\n  local\
    \ closing_brackets_open_count = closing_brackets_open + 1\n  local opening_brackets_open_count\
    \ = opening_brackets_open_count - 1\n  local closing_brackets_open_count = closing_brackets_open_count\
    \ - 1\n  local opening_brackets_closed_count = opening_brackets_closed_count -\
    \ 1\n  local closing_brackets_closed_count = closing_brackets_closed_count - 1\n\
    \  local opening_brackets_open_count = opening_brackets_open_count - 1\n  local\
    \ closing_brackets_open_count = closing_brackets_open_count - 1\n  local opening_brackets_closed_count\
    \ = opening_brackets_closed_count - 1\n  local closing_brackets_closed_count =\
    \ closing_brackets_closed_count - 1\n  local opening_brackets_open_count = opening_brackets_open_count\
    \ - 1\n  local closing_brackets_open_count = closing_brackets_open_count - 1\n\
    \  local opening_brackets_close", "  local opening = brackets:sub(1,1)\n  local\
    \ closing = brackets:sub(2)\n  for i = 1, #opening do\n    if opening[i] ~= closing[i]\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"<(%w+)>\", \"%1\")\n  local closing_brackets = brackets:gsub(\"\
    %(%w+)>\", \"%1\")\n  return opening_brackets == closing_brackets\nend", "  local\
    \ opening_brackets = brackets:gsub(\"<\", \"%%%1\")\n  local closing_brackets\
    \ = brackets:gsub(\">\", \"%%%2\")\n  local opening_brackets_count = opening_brackets:gsub(\"\
    %%%1\", \"%1\"):gsub(\"%%%2\", \"%2\")\n  local closing_brackets_count = closing_brackets:gsub(\"\
    %%%1\", \"%1\"):gsub(\"%%%2\", \"%2\")\n  return opening_brackets_count == closing_brackets_count\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2,2)\n\
    \  return opening == \"<\" and closing == \">\"\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]+\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]+$\", \"\")\n  local opening_brackets_count = opening_brackets:gsub(\"[^<>]+\"\
    , \"\")\n  local closing_brackets_count = closing_brackets:gsub(\"[^<>]+\", \"\
    \")\n  return opening_brackets_count == closing_brackets_count\nend", "   for\
    \ i = 1, #brackets do\n      local opening = brackets[i]\n      local closing\
    \ = brackets[i+1]\n      if opening ~= \">\" and opening ~= \"(\" then\n     \
    \    return false\n      end\n      if closing ~= \")\" and closing ~= \"]\" then\n\
    \         return false\n      end\n   end\n   return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  for i = 1, opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(1, i)\n    local closing_bracket\
    \ = closing_brackets:sub(1, i)\n    if opening_bracket ~= closing_bracket then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    [<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_count_correct\
    \ = opening_brackets_count == opening_brackets_count + 1\n  local closing_brackets_count_correct\
    \ = closing_brackets_count == closing_brackets_count + 1\n  return opening_brackets_count_correct\
    \ and closing_brackets_count_correct\nend", "  local opening_brackets = brackets:gsub(\"\
    <\", \"\")\n  local closing_brackets = brackets:gsub(\">\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  for i = 1, opening_brackets_count do\n    if opening_brackets[i:len() - 1]\
    \ == closing_brackets[i] then\n      return false\n    end\n  end\n  return true\n\
    end", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n\
    \  local closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = 1\n  local closing_brackets_index = 1\n  local opening_brackets_open = false\n\
    \  local closing_brackets_open = false\n  local opening_brackets_closed = false\n\
    \  local closing_brackets_closed = false\n  while opening_brackets_index < opening_brackets_count\
    \ do\n    local opening_bracket = opening_brackets:sub(opening_brackets_index,\
    \ opening_brackets_index)\n    opening_brackets_index = opening_brackets_index\
    \ + 1\n    if opening_bracket == \"<\" then\n      opening_brackets_open = true\n\
    \      opening_brackets_closed = false\n      opening_brackets_index = opening_brackets_index\
    \ + 1\n    elseif opening_bracket == \">\" then\n      opening_brackets_open =\
    \ false\n      opening_brackets_closed = true\n      opening_brackets_index =\
    \ opening_brackets_index + 1\n    elseif opening_brackets_open then\n      opening_brackets_index\
    \ = opening_brackets_index + 1\n    else\n      opening_brackets_index = opening_brackets_index\
    \ + 1\n    end\n    while closing_brackets_index < closing_brackets_count do\n\
    \      local closing_bracket = closing_brackets:sub(closing_brackets_index, closing_brackets_index)\n\
    \      closing_brackets_index = closing_brackets_index + 1\n      if closing_bracket\
    \ == \"<\" then\n        closing_brackets_open = true\n        closing_brackets_closed\
    \ = false\n        closing_brackets_index = closing_brackets_index + 1\n     \
    \ elseif closing_bracket == \">\" then\n        closing_brackets_open = false\n\
    \        closing_brackets_closed = true\n        closing_brackets_index = closing_brackets_index\
    \ + 1\n      elseif closing_brackets_open then\n        closing_brackets_index\
    \ = closing", "  local opening = brackets:match(\"<([%w%p]+)\")\n  local closing\
    \ = brackets:match(\">([%w%p]+)\")\n  local opening_count = #opening\n  if opening_count\
    \ == 0 then\n    return false\n  end\n  local closing_count = #closing\n  if closing_count\
    \ == 0 then\n    return false\n  end\n  local opening_open = opening[1]\n  local\
    \ opening_close = closing[1]\n  local closing_open = opening_close\n  local closing_close\
    \ = opening_open\n  for i = 2, #opening do\n    local opening_open = opening[i]\n\
    \    local opening_close = closing[i]\n    if opening_open ~= opening_close then\n\
    \      return false\n    end\n    closing_open = opening_close\n  end\n  return\
    \ true\nend", "   for i = 1, #brackets do\n      local opening = brackets[i]\n\
    \      local closing = brackets[i+1]\n      if opening ~= \">\" and opening ~=\
    \ \"(\" then\n         return false\n      end\n      if closing ~= \")\" and\
    \ closing ~= \"]\" then\n         return false\n      end\n   end\n   return true\n\
    end", "  local opening = brackets:sub(1,1)\n  local closing = brackets:sub(2)\n\
    \  local opening_brackets = opening:gsub(\"[<>]\", \"\")\n  local closing_brackets\
    \ = closing:gsub(\"[<>]\", \"\")\n  local opening_count = opening_brackets:len()\n\
    \  local closing_count = closing_brackets:len()\n  local opening_ok = opening_count\
    \ > 0\n  local closing_ok = closing_count > 0\n  local ok = opening_ok and closing_ok\n\
    \  return ok\nend", "  local opening_brackets = brackets:gsub(\"[<>]\", \"\")\n\
    \  local closing_brackets = brackets:gsub(\"[<>]\", \"\")\n  local opening_brackets_count\
    \ = opening_brackets:len()\n  local closing_brackets_count = closing_brackets:len()\n\
    \  local opening_brackets_index = opening_brackets_count - 1\n  local closing_brackets_index\
    \ = opening_brackets_count - 1\n  local opening_bracket = opening_brackets:sub(1,\
    \ opening_brackets_index)\n  local closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n\
    \  while opening_brackets_index > 0 do\n    if opening_bracket:sub(1, opening_brackets_index)\
    \ == closing_bracket:sub(1, closing_brackets_index) then\n      opening_brackets_index\
    \ = opening_brackets_index - 1\n      closing_brackets_index = closing_brackets_index\
    \ - 1\n      opening_bracket = opening_brackets:sub(1, opening_brackets_index)\n\
    \      closing_bracket = closing_brackets:sub(1, closing_brackets_index)\n   \
    \ else\n      return false\n    end\n  end\n  return true\nend", "  local opening_brackets\
    \ = brackets:gsub(\"[<>]\", \"\")\n  local closing_brackets = brackets:gsub(\"\
    <>\", \"\")\n  local opening_brackets_count = opening_brackets:len()\n  local\
    \ closing_brackets_count = closing_brackets:len()\n  local opening_brackets_index\
    \ = opening_brackets_count - 1\n  local closing_brackets_index = opening_brackets_count\
    \ - 1\n  while opening_brackets_index >= 0 do\n    if opening_brackets[opening_brackets_index]\
    \ ~= closing_brackets[closing_brackets_index] then\n      return false\n    end\n\
    \    opening_brackets_index = opening_brackets_index - 1\n    closing_brackets_index\
    \ = closing_brackets_index - 1\n  end\n  return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

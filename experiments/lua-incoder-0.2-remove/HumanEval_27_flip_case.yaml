name: HumanEval_27_flip_case
language: lua
prompt: "-- For a given string, flip lowercase characters to uppercase and uppercase\
  \ to lowercase.\nlocal function flip_case(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
  \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
  \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local new_string = string\n  new_string = new_string:gsub(\"%l\"\
    , \"%Lu\")\n  new_string = new_string:gsub(\"%Ll\", \"%lU\")\n  new_string = new_string:gsub(\"\
    %Lu\", \"%l\")\n  new_string = new_string:gsub(\"%lU\", \"%Lu\")\n  return new_string\n\
    end", "  local new_string = string\n  new_string = new_string:gsub(\"a\", \"A\"\
    )\n  new_string = new_string:gsub(\"b\", \"B\")\n  new_string = new_string:gsub(\"\
    c\", \"C\")\n  new_string = new_string:gsub(\"d\", \"D\")\n  new_string = new_string:gsub(\"\
    e\", \"E\")\n  new_string = new_string:gsub(\"f\", \"F\")\n  new_string = new_string:gsub(\"\
    g\", \"G\")\n  new_string = new_string:gsub(\"h\", \"H\")\n  new_string = new_string:gsub(\"\
    i\", \"I\")\n  new_string = new_string:gsub(\"j\", \"J\")\n  new_string = new_string:gsub(\"\
    k\", \"K\")\n  new_string = new_string:gsub(\"l\", \"L\")\n  new_string = new_string:gsub(\"\
    m\", \"M\")\n  new_string = new_string:gsub(\"n\", \"N\")\n  new_string = new_string:gsub(\"\
    o\", \"O\")\n  new_string = new_string:gsub(\"p\", \"P\")\n  new_string = new_string:gsub(\"\
    q\", \"Q\")\n  new_string = new_string:gsub(\"r\", \"R\")\n  new_string = new_string:gsub(\"\
    s\", \"S\")\n  new_string = new_string:gsub(\"t\", \"T\")\n  new_string = new_string:gsub(\"\
    u\", \"U\")\n  new_string = new_string:gsub(\"v\", \"V\")\n  new_string = new_string:gsub(\"\
    w\", \"W\")\n  new_string = new_string:gsub(\"x\", \"X\")\n  new_string = new_string:gsub(\"\
    y\", \"Y\")\n  new_string = new_string:gsub(\"z\", \"Z\")\n  new_string = new_string:gsub(\"\
    0\", \"0\")\n  new_string = new_string:gsub(\"1\", \"1\")\n  new_string = new_string:gsub(\"\
    2\", \"2\")\n  new_string = new_string:gsub(\"3\", \"3\")\n  new_string = new_string:gsub(\"\
    4\", \"4\")\n  new_string = new_string:gsub(\"5\", \"5\")\n  new_string = new_string:gsub(\"\
    6\", \"6\")\n  new_string = new_string:gsub(\"7\", \"7\")\n  new_string = new_string:gsub(\"\
    8\", \"8\")\n  new_string = new_string:gsub(\"9\", \"9\")\n  new_string = new_string:gsub(\"\
    _\", \"_\")\n  new_string = new_string:gsub(\"$\", \"$\")\n  new_string = new_string:gsub(\"\
    %\", \"%\")\n  new_string = new_string:gsub(\"&\", \"&\")\n  new_string = new_string:gsub(\"",
  "  local result = {}\n  for _, c in ipairs(string) do\n    result[string.lower(c)]\
    \ = string.upper(c)\n  end\n  return table.concat(result)\nend", "    local result\
    \ = {}\n    for _, c in ipairs(string) do\n        result[string.upper(c)] = string.lower(c)\n\
    \    end\n    return result\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    result[#result + 1] = c:upper()\n  end\n  return table.concat(result)\n\
    end", "    local new_string = \"\"\n    for i = 1, #string do\n        local char\
    \ = string.sub(i, i)\n        if char >= \"a\" and char <= \"z\" then\n      \
    \      char = char - \"a\"\n        elseif char >= \"A\" and char <= \"Z\" then\n\
    \            char = char - \"A\"\n        else\n            char = char\n    \
    \    end\n        new_string = new_string .. char\n    end\n    return new_string\n\
    end", "    local result = {}\n    for _, char in ipairs(string) do\n        local\
    \ new_char = char:lower()\n        if new_char == char then\n            new_char\
    \ = char:upper()\n        end\n        result[#result + 1] = new_char\n    end\n\
    \    return table.concat(result)\nend", "  local new_string = \"\"\n  for i =\
    \ 1, #string do\n    local c = string.sub(i, i)\n    if c:lower() == c:upper()\
    \ then\n      new_string = new_string .. c:upper()\n    else\n      new_string\
    \ = new_string .. c:lower()\n    end\n  end\n  return new_string\nend", "  local\
    \ new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n\
    \    if char >= \"a\" and char <= \"z\" then\n      char = string.sub(string.sub(string,\
    \ i), i)\n    end\n    new_string = new_string .. char\n  end\n  return new_string\n\
    end", "  local new_string = string\n  new_string = new_string:gsub(\"a\", \"A\"\
    )\n  new_string = new_string:gsub(\"b\", \"B\")\n  new_string = new_string:gsub(\"\
    c\", \"C\")\n  new_string = new_string:gsub(\"d\", \"D\")\n  new_string = new_string:gsub(\"\
    e\", \"E\")\n  new_string = new_string:gsub(\"f\", \"F\")\n  new_string = new_string:gsub(\"\
    g\", \"G\")\n  new_string = new_string:gsub(\"h\", \"H\")\n  new_string = new_string:gsub(\"\
    i\", \"I\")\n  new_string = new_string:gsub(\"j\", \"J\")\n  new_string = new_string:gsub(\"\
    k\", \"K\")\n  new_string = new_string:gsub(\"l\", \"L\")\n  new_string = new_string:gsub(\"\
    m\", \"M\")\n  new_string = new_string:gsub(\"n\", \"N\")\n  new_string = new_string:gsub(\"\
    o\", \"O\")\n  new_string = new_string:gsub(\"p\", \"P\")\n  new_string = new_string:gsub(\"\
    q\", \"Q\")\n  new_string = new_string:gsub(\"r\", \"R\")\n  new_string = new_string:gsub(\"\
    s\", \"S\")\n  new_string = new_string:gsub(\"t\", \"T\")\n  new_string = new_string:gsub(\"\
    u\", \"U\")\n  new_string = new_string:gsub(\"v\", \"V\")\n  new_string = new_string:gsub(\"\
    w\", \"W\")\n  new_string = new_string:gsub(\"x\", \"X\")\n  new_string = new_string:gsub(\"\
    y\", \"Y\")\n  new_string = new_string:gsub(\"z\", \"Z\")\n  new_string = new_string:gsub(\"\
    0\", \"0\")\n  new_string = new_string:gsub(\"1\", \"1\")\n  new_string = new_string:gsub(\"\
    2\", \"2\")\n  new_string = new_string:gsub(\"3\", \"3\")\n  new_string = new_string:gsub(\"\
    4\", \"4\")\n  new_string = new_string:gsub(\"5\", \"5\")\n  new_string = new_string:gsub(\"\
    6\", \"6\")\n  new_string = new_string:gsub(\"7\", \"7\")\n  new_string = new_string:gsub(\"\
    8\", \"8\")\n  new_string = new_string:gsub(\"9\", \"9\")\n  return new_string\n\
    end", "    local result = \"\"\n    for i = 1, #string do\n        local c = string.sub(i,\
    \ i)\n        if c ~= nil then\n            if c == \"a\" then\n             \
    \   c = \"A\"\n            elseif c == \"A\" then\n                c = \"a\"\n\
    \            end\n        end\n        result = result .. c\n    end\n    return\
    \ result\nend", "  local result = string\n  result:gsub(\"%l\", function (c)\n\
    \    return string.char(tonumber(c)) or c\n  end)\n  result:gsub(\"%U\", function\
    \ (c)\n    return string.char(tonumber(c)) or c\n  end)\n  return result\nend",
  "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= \"a\" and char <= \"z\" then\n            char = string.sub(string.sub(i,\
    \ 1, i), 2, 2)\n        end\n        new_string = new_string .. char\n    end\n\
    \    return new_string\nend", "    local result = {}\n    for _, character in\
    \ ipairs(string) do\n        local new_character = character:lower()\n       \
    \ if new_character ~= character then\n            result[#result + 1] = new_character\n\
    \        end\n    end\n    return table.concat(result)\nend", "  local result\
    \ = string\n  local length = #string\n  for i = 1, length do\n    local char =\
    \ string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n      result = string.sub(i,\
    \ i) + string.sub(i, i+1) == 'A' and string.sub(i, i+1) == 'a' or string.sub(i,\
    \ i) + string.sub(i, i+1) == 'a' and string.sub(i, i+1) == 'A'\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for _, c in ipairs(string) do\n\
    \    local lower = string.lower(c)\n    local upper = string.upper(c)\n    result[#result\
    \ + 1] = lower .. upper\n  end\n  return table.concat(result)\nend", "  local\
    \ new_string = \"\"\n  for i = 1, #string do\n    local c = string.sub(i, i)\n\
    \    if c ~= nil then\n      if c >= \"a\" and c <= \"z\" then\n        c = string.sub(i,\
    \ i - 1)\n      elseif c >= \"A\" and c <= \"Z\" then\n        c = string.sub(i,\
    \ i - 1)\n      end\n    end\n    new_string = new_string .. c\n  end\n  return\
    \ new_string\nend", "  local new_string = \"\"\n  for i = 1, #string do\n    local\
    \ char = string.sub(i, i)\n    if char >= \"a\" and char <= \"z\" then\n     \
    \ char = char - \"a\"\n    elseif char >= \"A\" and char <= \"Z\" then\n     \
    \ char = char - \"A\"\n    end\n    new_string = new_string .. char\n  end\n \
    \ return new_string\nend", "  local new_string = string\n  new_string = new_string:gsub(\"\
    A\", \"a\")\n  new_string = new_string:gsub(\"b\", \"B\")\n  new_string = new_string:gsub(\"\
    c\", \"C\")\n  new_string = new_string:gsub(\"d\", \"D\")\n  new_string = new_string:gsub(\"\
    e\", \"E\")\n  new_string = new_string:gsub(\"f\", \"F\")\n  new_string = new_string:gsub(\"\
    g\", \"G\")\n  new_string = new_string:gsub(\"h\", \"H\")\n  new_string = new_string:gsub(\"\
    i\", \"I\")\n  new_string = new_string:gsub(\"j\", \"J\")\n  new_string = new_string:gsub(\"\
    k\", \"K\")\n  new_string = new_string:gsub(\"l\", \"L\")\n  new_string = new_string:gsub(\"\
    m\", \"M\")\n  new_string = new_string:gsub(\"n\", \"N\")\n  new_string = new_string:gsub(\"\
    o\", \"O\")\n  new_string = new_string:gsub(\"p\", \"P\")\n  new_string = new_string:gsub(\"\
    q\", \"Q\")\n  new_string = new_string:gsub(\"r\", \"R\")\n  new_string = new_string:gsub(\"\
    s\", \"S\")\n  new_string = new_string:gsub(\"t\", \"T\")\n  new_string = new_string:gsub(\"\
    u\", \"U\")\n  new_string = new_string:gsub(\"v\", \"V\")\n  new_string = new_string:gsub(\"\
    w\", \"W\")\n  new_string = new_string:gsub(\"x\", \"X\")\n  new_string = new_string:gsub(\"\
    y\", \"Y\")\n  new_string = new_string:gsub(\"z\", \"Z\")\n  new_string = new_string:gsub(\"\
    0\", \"0\")\n  new_string = new_string:gsub(\"1\", \"1\")\n  new_string = new_string:gsub(\"\
    2\", \"2\")\n  new_string = new_string:gsub(\"3\", \"3\")\n  new_string = new_string:gsub(\"\
    4\", \"4\")\n  new_string = new_string:gsub(\"5\", \"5\")\n  new_string = new_string:gsub(\"\
    6\", \"6\")\n  new_string = new_string:gsub(\"7\", \"7\")\n  new_string = new_string:gsub(\"\
    8\", \"8\")\n  new_string = new_string:gsub(\"9\", \"9\")\n  return new_string\n\
    end", "    local new_string = \"\"\n    for i = 1, #string do\n        if string.sub(i,\
    \ 1, 1) == string.sub(i, 2, 1) then\n            new_string = new_string .. string.sub(i,\
    \ 2, 1)\n        elseif string.sub(i, 1, 1) == string.sub(i, 3, 1) then\n    \
    \        new_string = new_string .. string.sub(i, 3, 1)\n        else\n      \
    \      new_string = new_string .. string.sub(i, 1, 1) .. string.sub(i, 2, 1) ..\
    \ string.sub(i, 3, 1)\n        end\n    end\n    return new_string\nend", "  \
    \  local result = \"\"\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= \"a\" and char <= \"z\" then\n            char = char\
    \ - \"a\"\n        elseif char >= \"A\" and char <= \"Z\" then\n            char\
    \ = char - \"A\"\n        else\n            char = char\n        end\n       \
    \ result = result .. char\n    end\n    return result\nend", "  local new_string\
    \ = string\n  -- Iterate through each character in the string.\n  for i = 1, #string\
    \ do\n    -- If the character is lowercase, flip it to uppercase.\n    if string.byte(i,\
    \ string.byte(i, 1, #string)) then\n      new_string = new_string .. string.byte(i,\
    \ string.byte(i, #string, #string))\n    end\n    -- If the character is uppercase,\
    \ flip it to lowercase.\n    if string.byte(i, string.byte(i, #string, #string))\
    \ then\n      new_string = new_string .. string.byte(i, string.byte(i, 1, #string))\n\
    \    end\n  end\n  return new_string\nend", "  local result = {}\n  for _, c in\
    \ ipairs(string) do\n    local lower = tostring(c):lower()\n    local upper =\
    \ tostring(c):upper()\n    table.insert(result, upper .. lower)\n  end\n  return\
    \ table.concat(result)\nend", "  local new_string = \"\"\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= \"a\" and char <= \"z\"\
    \ then\n      char = string.sub(string.sub(i, 1, i), -1)\n    end\n    new_string\
    \ = new_string .. char\n  end\n  return new_string\nend", "  local result = {}\n\
    \  for _, char in ipairs(string) do\n    local lower = char:lower()\n    local\
    \ upper = char:upper()\n    result[#result + 1] = lower .. upper\n  end\n  return\
    \ table.concat(result)\nend", "  local new_string = \"\"\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    if char >= \"a\" and char <= \"z\"\
    \ then\n      char = string.sub(string.sub(i, 1, i), -1)\n    end\n    new_string\
    \ = new_string .. char\n  end\n  return new_string\nend", "    local result =\
    \ {}\n    for _, c in ipairs(string) do\n        result[#result + 1] = c .. tostring((string.upper(c)\
    \ .. string.lower(c)))\n    end\n    return table.concat(result)\nend", "    local\
    \ new_string = string\n    for i = 1, #string do\n        if string.sub(i, 1,\
    \ 1) == \"a\" then\n            new_string = string.sub(new_string, 1, i-1) +\
    \ string.sub(new_string, i+1, #new_string)\n        end\n        if string.sub(i,\
    \ 1, 1) == \"A\" then\n            new_string = string.sub(new_string, 1, i-1)\
    \ + string.sub(new_string, i+1, #new_string)\n        end\n    end\n    return\
    \ new_string\nend", "  local result = string\n  local length = #string\n  for\
    \ i = 1, length do\n    local char = string.sub(i, i)\n    if char >= 'a' and\
    \ char <= 'z' then\n      result = string.sub(i, i - 1) .. string.sub(string.sub(i,\
    \ i + 1), 1, string.len(string.sub(i, i + 1)) - 2)\n    end\n  end\n  return result\n\
    end", "    local result = string\n    for i = 1, #string do\n        local c =\
    \ string.sub(i, i)\n        if c == 'a' then\n            c = 'A'\n        end\n\
    \        if c == 'A' then\n            c = 'a'\n        end\n        if c ~= string.sub(i,\
    \ i) then\n            result = result .. c\n        end\n    end\n    return\
    \ result\nend", "  local result = string\n  for i = 1, #string do\n    local c\
    \ = string.sub(string, i, i)\n    if c == \"a\" then\n      result = string.sub(string,\
    \ i, i):upper()\n    elseif c == \"A\" then\n      result = string.sub(string,\
    \ i, i):lower()\n    end\n  end\n  return result\nend", "  local result = {}\n\
    \  for _, c in ipairs(string) do\n    local lower = string.lower(c)\n    local\
    \ upper = string.upper(c)\n    result[#result + 1] = lower .. upper\n  end\n \
    \ return table.concat(result)\nend", "    local result = string\n    for i = 1,\
    \ #string do\n        local c = string.sub(i, i)\n        if c == \"a\" then\n\
    \            c = \"A\"\n        end\n        if c == \"A\" then\n            c\
    \ = \"a\"\n        end\n        if c ~= string.lower(c) then\n            result\
    \ = result .. string.sub(i, i)\n        end\n    end\n    return result\nend",
  "  local result = {}\n  for _, character in ipairs(string) do\n    local upper =\
    \ character and character >= \"a\" and character <= \"z\"\n    local lower = character\
    \ and character >= \"A\" and character <= \"Z\"\n    if upper and lower then\n\
    \      character = character - \"a\" + \"A\"\n    end\n    result[#result + 1]\
    \ = character\n  end\n  return table.concat(result)\nend", "  local new_string\
    \ = string\n  local last_char_index = #new_string\n  for i = 1, #string do\n \
    \   local char = string.sub(new_string, i, i)\n    if char == string.upper(char)\
    \ then\n      char = string.lower(char)\n    end\n    if char == string.lower(char)\
    \ then\n      char = string.upper(char)\n    end\n    new_string = new_string\
    \ .. char\n  end\n  return new_string, last_char_index\nend", "  local new_string\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char\
    \ >= \"a\" and char <= \"z\" then\n      char = char - \"a\"\n    end\n    if\
    \ char >= \"A\" and char <= \"Z\" then\n      char = char - \"A\"\n    end\n \
    \   new_string = new_string .. char\n  end\n  return new_string\nend", "  local\
    \ new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n\
    \    if char >= \"a\" and char <= \"z\" then\n      new_string = new_string ..\
    \ string.sub(string, i, i) .. string.sub(char, 1, string.len(char) - 2)\n    elseif\
    \ char >= \"A\" and char <= \"Z\" then\n      new_string = new_string .. string.sub(string,\
    \ i, i) .. string.sub(string.upper(char), 1, string.len(char) - 2)\n    else\n\
    \      new_string = new_string .. char\n    end\n  end\n  return new_string\n\
    end", "    local new_string = \"\"\n    for i = 1, #string do\n        local char\
    \ = string.sub(i, i)\n        if char >= \"a\" and char <= \"z\" then\n      \
    \      char = char - \"a\"\n        end\n        if char >= \"A\" and char <=\
    \ \"Z\" then\n            char = char - \"A\"\n        end\n        new_string\
    \ = new_string .. char\n    end\n    return new_string\nend", "  local result\
    \ = {}\n  for _, character in ipairs(string) do\n    local new_character = character:lower()\n\
    \    if new_character ~= character then\n      result[#result + 1] = new_character\n\
    \    end\n  end\n  return table.concat(result)\nend", "  local result = {}\n \
    \ for _, c in ipairs(string) do\n    result[#result + 1] = c:upper()\n  end\n\
    \  return table.concat(result)\nend", "  local new_string = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.sub(string, i, i)\n\
    \    if string.match(\"^[%w]\", c) then\n      new_string = new_string .. string.upper(c)\n\
    \    else\n      new_string = new_string .. string.lower(c)\n    end\n  end\n\
    \  -- Uppercase letters.\n  for i = #string, 1, -1 do\n    local c = string.sub(string,\
    \ i, i)\n    if string.match(\"^[%w]\", c) then\n      new_string = new_string\
    \ .. string.lower(c)\n    else\n      new_string = new_string .. string.upper(c)\n\
    \    end\n  end\n  return new_string\nend", "  local new_string = string\n  new_string\
    \ = new_string:gsub(\"a\", \"A\")\n  new_string = new_string:gsub(\"b\", \"B\"\
    )\n  new_string = new_string:gsub(\"c\", \"C\")\n  new_string = new_string:gsub(\"\
    d\", \"D\")\n  new_string = new_string:gsub(\"e\", \"E\")\n  new_string = new_string:gsub(\"\
    f\", \"F\")\n  new_string = new_string:gsub(\"g\", \"G\")\n  new_string = new_string:gsub(\"\
    h\", \"H\")\n  new_string = new_string:gsub(\"i\", \"I\")\n  new_string = new_string:gsub(\"\
    j\", \"J\")\n  new_string = new_string:gsub(\"k\", \"K\")\n  new_string = new_string:gsub(\"\
    l\", \"L\")\n  new_string = new_string:gsub(\"m\", \"M\")\n  new_string = new_string:gsub(\"\
    n\", \"N\")\n  new_string = new_string:gsub(\"o\", \"O\")\n  new_string = new_string:gsub(\"\
    p\", \"P\")\n  new_string = new_string:gsub(\"q\", \"Q\")\n  new_string = new_string:gsub(\"\
    r\", \"R\")\n  new_string = new_string:gsub(\"s\", \"S\")\n  new_string = new_string:gsub(\"\
    t\", \"T\")\n  new_string = new_string:gsub(\"u\", \"U\")\n  new_string = new_string:gsub(\"\
    v\", \"V\")\n  new_string = new_string:gsub(\"w\", \"W\")\n  new_string = new_string:gsub(\"\
    x\", \"X\")\n  new_string = new_string:gsub(\"y\", \"Y\")\n  new_string = new_string:gsub(\"\
    z\", \"Z\")\n  new_string = new_string:gsub(\"0\", \"0\")\n  new_string = new_string:gsub(\"\
    1\", \"1\")\n  new_string = new_string:gsub(\"2\", \"2\")\n  new_string = new_string:gsub(\"\
    3\", \"3\")\n  new_string = new_string:gsub(\"4\", \"4\")\n  new_string = new_string:gsub(\"\
    5\", \"5\")\n  new_string = new_string:gsub(\"6\", \"6\")\n  new_string = new_string:gsub(\"\
    7\", \"7\")\n  new_string = new_string:gsub(\"8\", \"8\")\n  new_string = new_string:gsub(\"\
    9\", \"9\")\n  return new_string\nend", "  local new_string = \"\"\n  for i =\
    \ 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"a\" and char\
    \ <= \"z\" then\n      char = string.sub(i, i - 1)\n    end\n    new_string =\
    \ new_string .. char\n  end\n  return new_string\nend", "  local result = \"\"\
    \n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"\
    a\" and char <= \"z\" then\n      char = char - \"a\"\n    elseif char >= \"A\"\
    \ and char <= \"Z\" then\n      char = char - \"A\"\n    end\n    result = result\
    \ .. char\n  end\n  return result\nend", "  local result = string\n  result:gsub(\"\
    a\", \"A\")\n  result:gsub(\"b\", \"B\")\n  result:gsub(\"c\", \"C\")\n  result:gsub(\"\
    d\", \"D\")\n  result:gsub(\"e\", \"E\")\n  result:gsub(\"f\", \"F\")\n  result:gsub(\"\
    g\", \"G\")\n  result:gsub(\"h\", \"H\")\n  result:gsub(\"i\", \"I\")\n  result:gsub(\"\
    j\", \"J\")\n  result:gsub(\"k\", \"K\")\n  result:gsub(\"l\", \"L\")\n  result:gsub(\"\
    m\", \"M\")\n  result:gsub(\"n\", \"N\")\n  result:gsub(\"o\", \"O\")\n  result:gsub(\"\
    p\", \"P\")\n  result:gsub(\"q\", \"Q\")\n  result:gsub(\"r\", \"R\")\n  result:gsub(\"\
    s\", \"S\")\n  result:gsub(\"t\", \"T\")\n  result:gsub(\"u\", \"U\")\n  result:gsub(\"\
    v\", \"V\")\n  result:gsub(\"w\", \"W\")\n  result:gsub(\"x\", \"X\")\n  result:gsub(\"\
    y\", \"Y\")\n  result:gsub(\"z\", \"Z\")\n  result:gsub(\"A\", \"a\")\n  result:gsub(\"\
    B\", \"b\")\n  result:gsub(\"C\", \"c\")\n  result:gsub(\"D\", \"d\")\n  result:gsub(\"\
    E\", \"e\")\n  result:gsub(\"F\", \"f\")\n  result:gsub(\"G\", \"g\")\n  result:gsub(\"\
    H\", \"h\")\n  result:gsub(\"I\", \"i\")\n  result:gsub(\"J\", \"j\")\n  result:gsub(\"\
    K\", \"k\")\n  result:gsub(\"L\", \"l\")\n  result:gsub(\"M\", \"m\")\n  result:gsub(\"\
    N\", \"n\")\n  result:gsub(\"O\", \"o\")\n  result:gsub(\"P\", \"p\")\n  result:gsub(\"\
    Q\", \"q\")\n  result:gsub(\"R\", \"r\")\n  result:gsub(\"S\", \"s\")\n  result:gsub(\"\
    T\", \"t\")\n  result:gsub(\"U\", \"u\")\n  result:gsub(\"V\", \"v\")\n  result:gsub(\"\
    W\", \"w\")\n  result:gsub(\"X\", \"x\")\n  result:gsub(\"Y\", \"y\")\n  result:gsub(\"\
    Z\", \"z\")\n  return result\nend", "  local new_string = string\n  local length\
    \ = string.len()\n  for i = 1, length do\n    local char = string.sub(i, i)\n\
    \    if char >= 'a' and char <= 'z' then\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i - 1, i - 1), 1, i - 1)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i, i + 1), 1, i + 1)\n    elseif char >= 'A' and char <= 'Z' then\n      new_string\
    \ = new_string .. string.sub(string.sub(new_string, i - 1, i - 1), 1, i - 1)\n\
    \      new_string = new_string .. string.sub(string.sub(new_string, i, i + 1),\
    \ 1, i + 1)\n    else\n      new_string = new_string .. char\n    end\n  end\n\
    \  return new_string\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    local lower = string.lower(c)\n    local upper = string.upper(c)\n \
    \   result[#result + 1] = lower .. upper\n  end\n  return table.concat(result)\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c:lower() ~= c then\n      new_string = new_string .. c:upper()\n\
    \    else\n      new_string = new_string .. c:lower()\n    end\n  end\n  return\
    \ new_string\nend", "  local result = string\n  local upper = string.upper\n \
    \ local lower = string.lower\n  for i = 1, #string do\n    local c = string.sub(string,\
    \ i, i)\n    if c == lower then\n      result = upper(result)\n    elseif c ==\
    \ upper then\n      result = lower(result)\n    end\n  end\n  return result\n\
    end", "  local new_string = string\n  local length = #string\n  for i = 1, length\
    \ do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      new_string = new_string .. string.sub(string.sub(new_string, i, i), i,\
    \ i) .. string.sub(new_string, i + 1, i + 1)\n      i = i + 1\n    end\n  end\n\
    \  return new_string\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    local upper = string.upper(c)\n    local lower = string.lower(c)\n \
    \   result[#result + 1] = upper .. lower\n  end\n  return table.concat(result)\n\
    end", "    local new_string = string\n    for i = 1, #string do\n        if string.sub(i,\
    \ 1, 1) == \"a\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"A\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"e\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"E\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"i\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"I\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"o\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"O\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"u\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"U\" then\n            new_string = string.sub(i, 1, 1) .. string.sub(i,\
    \ 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n        else\n        \
    \    new_string = string.sub(i, 1, 1) .. string.sub(i, 2, 1) .. string.sub(i,\
    \ 3, 1) .. string.sub(i, 4, 1)\n        end\n    end\n    return new_string\n\
    end", "  local new_string = string\n  new_string = new_string:gsub(\"([a-z])\"\
    , function(c) return c:lower() end)\n  new_string = new_string:gsub(\"([A-Z])\"\
    , function(c) return c:upper() end)\n  return new_string\nend", "  local result\
    \ = {}\n  for _, char in ipairs(string) do\n    local new_char = char:upper()\n\
    \    if new_char:lower() == new_char then\n      new_char = new_char:lower()\n\
    \    end\n    result[#result + 1] = new_char\n  end\n  return table.concat(result)\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    local upper = char >= \"a\" and char <= \"z\"\n    local lower = char\
    \ >= \"A\" and char <= \"Z\"\n    if upper and lower then\n      new_string =\
    \ new_string .. string.sub(string, i - 1, i)\n      new_string = new_string ..\
    \ string.sub(string, i, i + 1)\n      new_string = new_string .. string.sub(string,\
    \ i + 1, i + 2)\n    elseif upper then\n      new_string = new_string .. string.sub(string,\
    \ i - 1, i)\n      new_string = new_string .. string.sub(string, i, i + 1)\n \
    \     new_string = new_string .. string.sub(string, i + 1, i + 1)\n    elseif\
    \ lower then\n      new_string = new_string .. string.sub(string, i - 1, i)\n\
    \      new_string = new_string .. string.sub(string, i, i + 1)\n      new_string\
    \ = new_string .. string.sub(string, i + 1, i + 2)\n    else\n      new_string\
    \ = new_string .. string.sub(string, i - 1, i)\n    end\n  end\n  return new_string\n\
    end", "  local result = {}\n  for _, c in ipairs(string) do\n    local upper =\
    \ string.upper(c)\n    local lower = string.lower(c)\n    result[#result + 1]\
    \ = upper .. lower\n  end\n  return table.concat(result)\nend", "  local result\
    \ = {}\n  for _, character in ipairs(string) do\n    local lower_character = character:lower()\n\
    \    local upper_character = character:upper()\n    result[#result + 1] = upper_character\n\
    \    result[#result + 1] = lower_character\n  end\n  return table.concat(result)\n\
    end", "    local result = {}\n    for _, character in ipairs(string) do\n    \
    \    local new_character = character:upper()\n        if new_character ~= character\
    \ then\n            result[#result + 1] = new_character\n        end\n    end\n\
    \    return table.concat(result)\nend", "  local new_string = string\n  new_string\
    \ = new_string:gsub(\"([a-z])\", function(c) return c:lower() end)\n  new_string\
    \ = new_string:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return new_string\n\
    end", "    local new_string = \"\"\n    for i = 1, #string do\n        local char\
    \ = string.sub(i, i)\n        if char >= \"a\" and char <= \"z\" then\n      \
    \      char = string.sub(i, i) + string.sub(i, i + 1)\n        end\n        new_string\
    \ = new_string .. char\n    end\n    return new_string\nend", "    local new_string\
    \ = \"\"\n    for i = 1, #string do\n        if string.sub(i, 1, 1) == \"a\" then\n\
    \            new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"A\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"b\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    B\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"c\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"C\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"d\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"D\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    e\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"E\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"f\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"F\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"g\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    G\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"h\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"H\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"i\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"I\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    j\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"J\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"k\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"K\" then\n            new_string = new_string .. ", "  local result\
    \ = {}\n  for _, character in ipairs(string) do\n    local lower = character:lower()\n\
    \    local upper = character:upper()\n    result[#result + 1] = lower .. upper\n\
    \  end\n  return table.concat(result)\nend", "  local result = {}\n  for _, character\
    \ in ipairs(string) do\n    local lower = character:lower()\n    local upper =\
    \ character:upper()\n    result[#result + 1] = lower .. upper\n  end\n  return\
    \ table.concat(result)\nend", "  local result = {}\n  for i = 1, #string do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      char = string.sub(string.sub(char, 1, 1), 1, 1) + 'A'\n    elseif char\
    \ >= 'A' and char <= 'Z' then\n      char = string.sub(string.sub(char, 1, 1),\
    \ 1, 1) + 'a'\n    end\n    result[i] = char\n  end\n  return table.concat(result)\n\
    end", "  local result = {}\n  for _, c in ipairs(string) do\n    local lower =\
    \ string.lower(c)\n    local upper = string.upper(c)\n    result[#result + 1]\
    \ = lower .. upper\n  end\n  return table.concat(result, \"-\")\nend", "  local\
    \ new_string = string\n  local length = #string\n  for i = 1, length do\n    local\
    \ c = string.sub(i, i)\n    if c:lower() == c:upper() then\n      new_string =\
    \ new_string .. string.sub(i, i - 1)\n      new_string = new_string .. string.sub(i,\
    \ i + 1)\n    end\n  end\n  return new_string\nend", "  local result = {}\n  for\
    \ _, character in ipairs(string) do\n    local new_character = character\n   \
    \ if character == character then\n      new_character = toupper(character)\n \
    \   end\n    result[#result + 1] = new_character\n  end\n  return table.concat(result)\n\
    end", "  local new_string = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local c = string.sub(i, j)\n    if c == \"a\" then\n      new_string = new_string\
    \ .. \"A\"\n    elseif c == \"A\" then\n      new_string = new_string .. \"a\"\
    \n    elseif c == \"0\" then\n      new_string = new_string .. \"0\"\n    elseif\
    \ c == \"1\" then\n      new_string = new_string .. \"1\"\n    elseif c == \"\
    2\" then\n      new_string = new_string .. \"2\"\n    elseif c == \"3\" then\n\
    \      new_string = new_string .. \"3\"\n    elseif c == \"4\" then\n      new_string\
    \ = new_string .. \"4\"\n    elseif c == \"5\" then\n      new_string = new_string\
    \ .. \"5\"\n    elseif c == \"6\" then\n      new_string = new_string .. \"6\"\
    \n    elseif c == \"7\" then\n      new_string = new_string .. \"7\"\n    elseif\
    \ c == \"8\" then\n      new_string = new_string .. \"8\"\n    elseif c == \"\
    9\" then\n      new_string = new_string .. \"9\"\n    elseif c == \"-\" then\n\
    \      new_string = new_string .. \"-\"\n    elseif c == \"_\" then\n      new_string\
    \ = new_string .. \"_\"\n    elseif c == \"+\" then\n      new_string = new_string\
    \ .. \"+\"\n    elseif c == \"/\" then\n      new_string = new_string .. \"/\"\
    \n    elseif c == \"%\" then\n      new_string = new_string .. \"%\"\n    elseif\
    \ c == \"&\" then\n      new_string = new_string .. \"&\"\n    elseif c == \"\
    |\" then\n      new_string = new_string .. \"|\"\n    elseif c == \"~\" then\n\
    \      new_string = new_string .. \"~\"\n    elseif c == \"^\" then\n      new_string\
    \ = new_string .. \"^\"\n    elseif c == \"*\" then\n      new_string = new_string\
    \ .. \"*\"\n    elseif c == \"(\" then\n      new_string = new_string .. \"(\"\
    \n    elseif c == \")\" then\n      new_string = new_string .. \")\"\n    elseif\
    \ c == \"{\" then\n      new_string = new_string .. \"{\"\n    elseif c == \"\
    }\" then\n      new_string = new_string .. \"}\"\n    elseif c == \"[\" then\n\
    \      new_string = new_string .. \"[\"\n    elseif c == \"]\" then\n      new_string\
    \ = new_string .. \"]\"\n    elseif c == \"<\" ", "  local result = \"\"\n  for\
    \ i = 1, #string do\n    local c = string.sub(i, i)\n    if c == \"a\" then\n\
    \      c = \"A\"\n    else if c == \"A\" then\n      c = \"a\"\n    end\n    result\
    \ = result .. c\n  end\n  return result\nend", "  local new_string = string\n\
    \  -- Lowercase letters.\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if string.sub(c, 1) == \"a\" then\n      new_string = new_string ..\
    \ string.sub(c, 2)\n    elseif string.sub(c, 1) == \"A\" then\n      new_string\
    \ = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"b\" then\n\
    \      new_string = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1)\
    \ == \"B\" then\n      new_string = new_string .. string.sub(c, 2)\n    elseif\
    \ string.sub(c, 1) == \"c\" then\n      new_string = new_string .. string.sub(c,\
    \ 2)\n    elseif string.sub(c, 1) == \"C\" then\n      new_string = new_string\
    \ .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"d\" then\n      new_string\
    \ = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"D\" then\n\
    \      new_string = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1)\
    \ == \"e\" then\n      new_string = new_string .. string.sub(c, 2)\n    elseif\
    \ string.sub(c, 1) == \"E\" then\n      new_string = new_string .. string.sub(c,\
    \ 2)\n    elseif string.sub(c, 1) == \"f\" then\n      new_string = new_string\
    \ .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"G\" then\n      new_string\
    \ = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"h\" then\n\
    \      new_string = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1)\
    \ == \"H\" then\n      new_string = new_string .. string.sub(c, 2)\n    elseif\
    \ string.sub(c, 1) == \"i\" then\n      new_string = new_string .. string.sub(c,\
    \ 2)\n    elseif string.sub(c, 1) == \"I\" then\n      new_string = new_string\
    \ .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"j\" then\n      new_string\
    \ = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"J\" then\n\
    \      new_string = new_string .. string.sub(c, 2)\n    elseif string.sub(c, 1)\
    \ == \"k\" then\n      new_string = new_string .. string.sub(c, 2)\n    elseif\
    \ string.sub(c, 1) == \"K\" then\n      new_string = new_string .. string.sub(c,\
    \ 2)\n    elseif string.sub(c, 1) == \"l\" then\n      new_string = new_string\
    \ .. string.sub(c, 2)\n    elseif string.sub(c, 1) == \"L\" then\n      new_string\
    \ = new_string .. string.sub(c, 2)\n    else", "  local new_string = string\n\
    \  local capitals = false\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char == \"a\" then\n      capitals = not capitals\n    end\n    if\
    \ capitals then\n      new_string = new_string .. string.sub(string, i, i)\n \
    \   end\n  end\n  return new_string\nend", "  local new_string = \"\"\n  for i\
    \ = 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"a\" and\
    \ char <= \"z\" then\n      new_string = new_string .. string.sub(string.sub(i,\
    \ 1, i), 2, 1) .. string.sub(i, 2)\n    elseif char >= \"A\" and char <= \"Z\"\
    \ then\n      new_string = new_string .. string.sub(string.sub(i, 1, i), 2, 1)\
    \ .. string.sub(i, 2)\n    elseif char >= \"0\" and char <= \"9\" then\n     \
    \ new_string = new_string .. string.sub(string.sub(i, 1, i), 2, 1) .. string.sub(i,\
    \ 2)\n    else\n      new_string = new_string .. char\n    end\n  end\n  return\
    \ new_string\nend", "    local result = {}\n    for _, character in ipairs(string)\
    \ do\n        local new_character = character\n        if new_character >= 'a'\
    \ and new_character <= 'z' then\n            new_character = new_character - 'a'\n\
    \        end\n        if new_character >= 'A' and new_character <= 'Z' then\n\
    \            new_character = new_character - 'A'\n        end\n        result[#result\
    \ + 1] = new_character\n    end\n    return table.concat(result, '') -- Join all\
    \ the characters together into a string.\nend", "    local new_string = \"\"\n\
    \    for i = 1, #string do\n        if string.sub(i, 1, 1) == \"a\" then\n   \
    \         new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == \"A\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == \"b\" then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"\
    B\" then\n            new_string = new_string .. string.sub(i, 2, #string) ..\
    \ string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"c\" then\n    \
    \        new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == \"C\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == \"d\" then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"\
    D\" then\n            new_string = new_string .. string.sub(i, 2, #string) ..\
    \ string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"e\" then\n    \
    \        new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == \"E\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == \"f\" then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"\
    F\" then\n            new_string = new_string .. string.sub(i, 2, #string) ..\
    \ string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"g\" then\n    \
    \        new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == \"G\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == \"h\" then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"\
    H\" then\n            new_string = new_string .. string.sub(i, 2, #string) ..\
    \ string.sub(i, 1, 2)\n        elseif string.sub", "  local new_string = string\n\
    \  -- Flip all lowercase letters to uppercase\n  for i = 1, #string do\n    if\
    \ string.sub(i, 1, 1) == \"a\" then\n      new_string = string.sub(i, 1, 1) ..\
    \ string.sub(i, 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n    end\n\
    \  end\n  -- Flip all uppercase letters to lowercase\n  for i = 1, #string do\n\
    \    if string.sub(i, 1, 1) == \"A\" then\n      new_string = string.sub(i, 1,\
    \ 1) .. string.sub(i, 2, 1) .. string.sub(i, 3, 1) .. string.sub(i, 4, 1)\n  \
    \  end\n  end\n  return new_string\nend", "  local new_string = \"\"\n  for i\
    \ = 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"a\" and\
    \ char <= \"z\" then\n      new_string = new_string .. string.sub(string, i, i)\
    \ .. string.sub(string, i, i + 1)\n      i = i + 1\n    end\n    if char >= \"\
    A\" and char <= \"Z\" then\n      new_string = new_string .. string.sub(string,\
    \ i, i) .. string.sub(string, i, i + 1)\n      i = i + 1\n    end\n  end\n  return\
    \ new_string\nend", "  local new_string = \"\"\n  for i = 1, #string do\n    local\
    \ char = string.sub(i, i)\n    if char >= \"a\" and char <= \"z\" then\n     \
    \ char = string.sub(string.sub(string, 1, i), 2)\n    end\n    new_string = new_string\
    \ .. char\n  end\n  return new_string\nend", "    local result = \"\"\n    for\
    \ i = 1, #string do\n        local char = string.sub(i, i)\n        if char >=\
    \ \"a\" and char <= \"z\" then\n            char = string.sub(string.sub(string,\
    \ i, i), i, i)\n        end\n        result = result .. char\n    end\n    return\
    \ result\nend", "  local result = string\n  result:gsub(\"([a-z])\", function\
    \ (c) return c:lower() .. c:upper() end)\n  result:gsub(\"([A-Z])\", function\
    \ (c) return c:upper() .. c:lower() end)\n  return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #string do\n        local char = string.sub(i, i)\n \
    \       if char >= \"a\" and char <= \"z\" then\n            char = string.sub(string.sub(string,\
    \ 1, i), -1)\n        end\n        if char >= \"A\" and char <= \"Z\" then\n \
    \           char = string.sub(string.sub(string, 1, i), -1)\n        end\n   \
    \     result = result .. char\n    end\n    return result\nend", "  local new_string\
    \ = string\n  new_string = string.gsub(new_string, \"a\", \"A\")\n  new_string\
    \ = string.gsub(new_string, \"b\", \"B\")\n  new_string = string.gsub(new_string,\
    \ \"c\", \"C\")\n  new_string = string.gsub(new_string, \"d\", \"D\")\n  new_string\
    \ = string.gsub(new_string, \"e\", \"E\")\n  new_string = string.gsub(new_string,\
    \ \"f\", \"F\")\n  new_string = string.gsub(new_string, \"g\", \"G\")\n  new_string\
    \ = string.gsub(new_string, \"h\", \"H\")\n  new_string = string.gsub(new_string,\
    \ \"i\", \"I\")\n  new_string = string.gsub(new_string, \"j\", \"J\")\n  new_string\
    \ = string.gsub(new_string, \"k\", \"K\")\n  new_string = string.gsub(new_string,\
    \ \"l\", \"L\")\n  new_string = string.gsub(new_string, \"m\", \"M\")\n  new_string\
    \ = string.gsub(new_string, \"n\", \"N\")\n  new_string = string.gsub(new_string,\
    \ \"o\", \"O\")\n  new_string = string.gsub(new_string, \"p\", \"P\")\n  new_string\
    \ = string.gsub(new_string, \"q\", \"Q\")\n  new_string = string.gsub(new_string,\
    \ \"r\", \"R\")\n  new_string = string.gsub(new_string, \"s\", \"S\")\n  new_string\
    \ = string.gsub(new_string, \"t\", \"T\")\n  new_string = string.gsub(new_string,\
    \ \"u\", \"U\")\n  new_string = string.gsub(new_string, \"v\", \"V\")\n  new_string\
    \ = string.gsub(new_string, \"w\", \"W\")\n  new_string = string.gsub(new_string,\
    \ \"x\", \"X\")\n  new_string = string.gsub(new_string, \"y\", \"Y\")\n  new_string\
    \ = string.gsub(new_string, \"z\", \"Z\")\n  new_string = string.gsub(new_string,\
    \ \"0\", \"0\")\n  new_string = string.gsub(new_string, \"1\", \"1\")\n  new_string\
    \ = string.gsub(new_string, \"2\", \"2\")\n  new_string = string.gsub(new_string,\
    \ \"3\", \"3\")\n  new_string = string.gsub(new_string, \"4\", \"4\")\n  new_string\
    \ = string.gsub(new_string, \"5\", \"5\")\n  new_string = string.gsub(new_string,\
    \ \"6\", \"6\")\n  new_string = string.gsub(new_string, \"7\", \"7\")\n  new_string\
    \ = string.gsub(new_string, \"8\", \"8\")\n  new_string = string.gsub(new_string,\
    \ \"9\", \"9\")\n  return new_string\nend", "  local result = {}\n  for _, character\
    \ in ipairs(string) do\n    result[string.upper(character)] = character\n    result[string.lower(character)]\
    \ = character\n  end\n  return table.concat(result)\nend", "  local new_string\
    \ = string\n  local pos = 1\n  while pos <= #string do\n    local char = string.sub(string,\
    \ pos, pos)\n    local new_char = string.sub(string, pos, pos + 1)\n    if char\
    \ == new_char then\n      new_string = string.sub(string, 1, pos - 1) .. string.sub(string,\
    \ pos + 1)\n    else\n      new_string = string.sub(string, 1, pos) .. new_char\
    \ .. string.sub(string, pos + 1)\n    end\n    pos = pos + 1\n  end\n  return\
    \ new_string\nend", "    local new_string = string\n    for i = 1, #string do\n\
    \        local char = string.sub(i, i)\n        if char >= 'a' and char <= 'z'\
    \ then\n            new_string = string.sub(new_string, 1, i-1) .. string.sub(new_string,\
    \ i+1, i)\n        end\n    end\n    return new_string\nend", "  local new_string\
    \ = string\n  local length = string.len()\n  for i = 1, length do\n    local char\
    \ = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n      new_string\
    \ = new_string .. string.sub(string.sub(new_string, i, i), i, i) .. string.sub(new_string,\
    \ i + 1, i + 1)\n    elseif char >= 'A' and char <= 'Z' then\n      new_string\
    \ = new_string .. string.sub(string.sub(new_string, i, i), i, i) .. string.sub(new_string,\
    \ i + 1, i + 1)\n    else\n      new_string = new_string .. char\n    end\n  end\n\
    \  return new_string\nend", "    local result = {}\n    for _, char in ipairs(string)\
    \ do\n        local new_char = char:lower()\n        if new_char == char then\n\
    \            new_char = char:upper()\n        end\n        result[#result + 1]\
    \ = new_char\n    end\n    return table.concat(result, \"\")\nend", "  local new_string\
    \ = string\n  local length = #string\n  for i = 1, length do\n    local char =\
    \ string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n      new_string\
    \ = new_string .. string.sub(string.sub(new_string, i - 1, i), i - 1, i)\n   \
    \   new_string = new_string .. string.sub(string.sub(new_string, i, i + 1), i,\
    \ i + 1)\n      new_string = new_string .. string.sub(string.sub(new_string, i\
    \ + 1, i + 2), i + 1, i + 2)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 2, i + 3), i + 1, i + 3)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 3, i + 4), i + 1, i + 4)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 4, i + 5), i + 1, i + 5)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 5, i + 6), i + 1, i + 6)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 6, i + 7), i + 1, i + 7)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 7, i + 8), i + 1, i + 8)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 8, i + 9), i + 1, i + 9)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 9, i + 10), i + 1, i + 10)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 10, i + 11), i + 1, i + 11)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 11, i + 12), i + 1, i + 12)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 12, i + 13), i + 1, i + 13)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 13, i + 14), i + 1, i + 14)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 14, i + 15), i + 1, i + 15)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 15, i + 16), i + 1, i + 16)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 16, i + 17), i + 1, i + 17)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 17, i + 18), i + 1, i + 18)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 18, i + 19), i + 1, i + 19)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 19, i + 20), i + 1, i + 20)\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i + 20, i + 21), i + 1, i + 21)\n      new_", "  local result = {}\n  for i\
    \ = 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"a\" and\
    \ char <= \"z\" then\n      char = string.sub(i, i - 1)\n    end\n    result[#result\
    \ + 1] = char\n  end\n  return table.concat(result)\nend", "  local new_string\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char\
    \ >= \"a\" and char <= \"z\" then\n      char = string.sub(string.sub(i, 1, i),\
    \ -1)\n    end\n    new_string = new_string .. char\n  end\n  return new_string\n\
    end", "  local result = {}\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    local upper = string.byte(\"A\", string.byte(\"a\", c))\n    local lower\
    \ = string.byte(\"a\", string.byte(\"A\", c))\n    result[i] = string.char(upper,\
    \ lower)\n  end\n  return table.concat(result)\nend", "    local new_string =\
    \ string\n    for i = 1, #string do\n        local char = string.sub(i, i)\n \
    \       if char >= 'a' and char <= 'z' then\n            char = 'A'\n        elseif\
    \ char >= 'A' and char <= 'Z' then\n            char = 'a'\n        end\n    \
    \    new_string = new_string .. char\n    end\n    return new_string\nend", " \
    \ local result = string\n  result:gsub(\"([a-z])\", function(c) return c:lower()\
    \ end)\n  result:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #string do\n    local char\
    \ = string.sub(i, i)\n    local upper = char >= \"a\" and char <= \"z\"\n    local\
    \ lower = char >= \"A\" and char <= \"Z\"\n    if upper and lower then\n     \
    \ char = string.sub(i, i - 1)\n    end\n    if upper then\n      char = string.sub(i\
    \ - 1, i)\n      char = string.sub(i - 1, i - 1) + char\n    end\n    if lower\
    \ then\n      char = string.sub(i, i + 1)\n      char = char + string.sub(i -\
    \ 1, i)\n    end\n    result = result .. char\n  end\n  return result\nend", " \
    \   local result = string\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= 'a' and char <= 'z' then\n            char = char - 'a'\n\
    \        elseif char >= 'A' and char <= 'Z' then\n            char = char - 'A'\n\
    \        else\n            char = char\n        end\n        result = string.sub(i,\
    \ 1, i) + char + string.sub(i, i + 1)\n    end\n    return result\nend", "  local\
    \ result = {}\n  for _, c in ipairs(string) do\n    local upper = string.upper(c)\n\
    \    local lower = string.lower(c)\n    result[#result + 1] = upper .. lower\n\
    \  end\n  return table.concat(result)\nend", "  local new_string = \"\"\n  for\
    \ i = 1, #string do\n    local char = string.sub(i, i)\n    if char == \"a\" then\n\
    \      char = \"A\"\n    end\n    if char == \"A\" then\n      char = \"a\"\n\
    \    end\n    new_string = new_string .. char\n  end\n  return new_string\nend",
  "  local new_string = string\n  -- Lowercase to uppercase.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    if c ~= nil then\n      new_string =\
    \ new_string .. string.char(tonumber(c) + 32)\n    end\n  end\n  -- Uppercase\
    \ to lowercase.\n  for i = #new_string, 1, -1 do\n    local c = string.sub(i,\
    \ i)\n    if c ~= nil then\n      new_string = new_string .. string.char(tonumber(c)\
    \ - 32)\n    end\n  end\n  return new_string\nend", "  local result = {}\n  for\
    \ _, c in ipairs(string) do\n    local upper = string.upper(c)\n    local lower\
    \ = string.lower(c)\n    result[#result + 1] = upper .. lower\n  end\n  return\
    \ table.concat(result)\nend", "  local result = \"\"\n  for i = 1, #string do\n\
    \    local c = string.sub(i, i)\n    if c ~= nil then\n      c = string.upper(c)\n\
    \      c = string.lower(c)\n    end\n    result = result .. c\n  end\n  return\
    \ result\nend", "    local new_string = \"\"\n    for i = 1, #string do\n    \
    \    local char = string.sub(i, i)\n        if char == \"a\" then\n          \
    \  char = \"A\"\n        end\n        if char == \"A\" then\n            char\
    \ = \"a\"\n        end\n        new_string = new_string .. char\n    end\n   \
    \ return new_string\nend", "  local new_string = \"\"\n  for i = 1, #string do\n\
    \    local char = string.sub(i, i)\n    if char == \"a\" then\n      char = \"\
    A\"\n    end\n    if char == \"A\" then\n      char = \"a\"\n    end\n    if char\
    \ == \"0\" then\n      char = \"0\"\n    end\n    new_string = new_string .. char\n\
    \  end\n  return new_string\nend", "  local new_string = string\n  new_string\
    \ = new_string:gsub(\"([a-z])\", function(c) return c:lower() end)\n  new_string\
    \ = new_string:gsub(\"([A-Z])\", function(c) return c:upper() end)\n  return new_string\n\
    end", "  local result = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    if string.byte(c) >= 65 and string.byte(c)\
    \ <= 90 then\n      result = string.sub(i, i) + string.sub(i, i + 1)\n    end\n\
    \  end\n  -- Uppercase letters.\n  for i = 1, #result do\n    local c = string.byte(string.sub(i,\
    \ i))\n    if c >= 65 and c <= 90 then\n      result = string.sub(i, i) + string.sub(i,\
    \ i - 1)\n    end\n  end\n  return result\nend", "  local result = {}\n  for _,\
    \ c in ipairs(string) do\n    local lower = tostring(c):lower()\n    local upper\
    \ = tostring(c):upper()\n    result[#result + 1] = upper .. lower\n  end\n  return\
    \ table.concat(result)\nend", "  local result = string\n  local length = #string\n\
    \  for i = 1, length do\n    local c = string.sub(string, i, i)\n    if c:lower()\
    \ == c:upper() then\n      result = string.sub(string, 1, i-1) + string.sub(string,\
    \ i+1, i)\n    end\n  end\n  return result\nend", "  local new_string = \"\"\n\
    \  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c:lower() ~=\
    \ c then\n      new_string = new_string .. c:upper()\n    else\n      new_string\
    \ = new_string .. c:lower()\n    end\n  end\n  return new_string\nend", "    local\
    \ result = \"\"\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char >= \"a\" and char <= \"z\" then\n            char = string.sub(string.sub(i,\
    \ 1, i), -1)\n        end\n        result = result .. char\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, c in ipairs(string) do\n    local\
    \ lower = tostring(c):lower()\n    local upper = tostring(c):upper()\n    result[#result\
    \ + 1] = lower .. upper\n  end\n  return table.concat(result)\nend", "  local\
    \ new_string = \"\"\n  for i = 1, #string do\n    local c = string.sub(i, i)\n\
    \    if c:lower() == c then\n      new_string = new_string .. c:upper()\n    else\n\
    \      new_string = new_string .. c:lower()\n    end\n  end\n  return new_string\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= \"a\" and char <= \"z\" then\n      new_string = new_string\
    \ .. string.sub(string, i, i) .. string.sub(i, i)\n    elseif char >= \"A\" and\
    \ char <= \"Z\" then\n      new_string = new_string .. string.sub(string, i, i)\
    \ .. string.sub(i, i)\n    elseif char >= \"0\" and char <= \"9\" then\n     \
    \ new_string = new_string .. string.sub(string, i, i) .. string.sub(i, i)\n  \
    \  end\n  end\n  return new_string\nend", "  local result = {}\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    local upper = char:upper()\n    local\
    \ lower = char:lower()\n    result[#result + 1] = upper .. lower\n  end\n  return\
    \ table.concat(result)\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    local upper = string.match(c, \"^%u\")\n    local lower = string.match(c,\
    \ \"^%l\")\n    if upper and lower then\n      table.insert(result, string.sub(string,\
    \ 1, upper-1))\n      table.insert(result, string.sub(string, upper+1, lower-1))\n\
    \      table.insert(result, string.sub(string, lower+1, string))\n    elseif upper\
    \ then\n      table.insert(result, string.sub(string, 1, upper-1))\n      table.insert(result,\
    \ string.sub(string, upper+1, string))\n    elseif lower then\n      table.insert(result,\
    \ string.sub(string, 1, lower-1))\n      table.insert(result, string.sub(string,\
    \ lower+1, string))\n    else\n      table.insert(result, c)\n    end\n  end\n\
    \  return table.concat(result)\nend", "  local result = {}\n  for _, character\
    \ in ipairs(string) do\n    local new_character = character:lower()\n    if new_character\
    \ ~= character then\n      result[#result + 1] = new_character\n    end\n  end\n\
    \  return table.concat(result)\nend", "  local new_string = string\n  local pos\
    \ = 1\n  while pos <= #string do\n    local char = string.sub(string, pos, pos)\n\
    \    local new_char = string.sub(string, pos, pos+1)\n    if char == new_char\
    \ then\n      pos = pos + 1\n    else\n      new_string = new_string .. new_char\n\
    \    end\n    pos = pos + 1\n  end\n  return new_string\nend", "  local new_string\
    \ = string\n  -- For each character in the string, flip it if it's lowercase.\n\
    \  for i = 1, #string do\n    if string.sub(i, 1, 1) == \"a\" then\n      new_string\
    \ = new_string .. string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i,\
    \ 1, 2)\n    elseif string.sub(i, 1, 1) == \"A\" then\n      new_string = new_string\
    \ .. string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"b\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"B\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"c\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"C\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"d\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"D\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"e\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"E\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"f\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"F\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"g\" then\n      new_string = new_string ..\
    \ string.sub(i, 2, 1)\n      new_string = new_string .. string.sub(i, 1, 2)\n\
    \    elseif string.sub(i, 1, 1) == \"G\" then\n      new_string = new_string .. ",
  "    local result = {}\n    for _, c in ipairs(string) do\n        result[#result\
    \ + 1] = c:upper()\n    end\n    return table.concat(result)\nend", "  local new_string\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    local\
    \ upper = char:upper()\n    local lower = char:lower()\n    new_string = new_string\
    \ .. upper .. lower\n  end\n  return new_string\nend", "  local new_string = string\n\
    \  local pos = 1\n  while pos <= #string do\n    local char = string.sub(string,\
    \ pos, pos)\n    if char == string.lower then\n      new_string = string.sub(string,\
    \ 1, pos-1) .. string.upper(string.sub(string, pos+1, pos))\n    elseif char ==\
    \ string.upper then\n      new_string = string.sub(string, 1, pos-1) .. string.lower(string.sub(string,\
    \ pos+1, pos))\n    end\n    pos = pos + 1\n  end\n  return new_string\nend",
  "    local new_string = \"\"\n    for i = 1, #string do\n        local char = string.sub(i,\
    \ i)\n        if char == \"a\" then\n            char = \"A\"\n        end\n \
    \       if char == \"A\" then\n            char = \"a\"\n        end\n       \
    \ new_string = new_string .. char\n    end\n    return new_string\nend", "  local\
    \ result = \"\"\n  for i = 1, #string do\n    local c = string.sub(i, i)\n   \
    \ if c ~= nil then\n      if c:lower() ~= c then\n        c = c:upper()\n    \
    \  end\n      result = result .. c\n    end\n  end\n  return result\nend", " \
    \ local result = {}\n  for _, character in ipairs(string) do\n    result[string.upper(character)]\
    \ = string.lower(character)\n  end\n  return table.concat(result)\nend", "  local\
    \ new_string = string\n  new_string = new_string:gsub(\"a\", \"A\")\n  new_string\
    \ = new_string:gsub(\"b\", \"B\")\n  new_string = new_string:gsub(\"c\", \"C\"\
    )\n  new_string = new_string:gsub(\"d\", \"D\")\n  new_string = new_string:gsub(\"\
    e\", \"E\")\n  new_string = new_string:gsub(\"f\", \"F\")\n  new_string = new_string:gsub(\"\
    g\", \"G\")\n  new_string = new_string:gsub(\"h\", \"H\")\n  new_string = new_string:gsub(\"\
    i\", \"I\")\n  new_string = new_string:gsub(\"j\", \"J\")\n  new_string = new_string:gsub(\"\
    k\", \"K\")\n  new_string = new_string:gsub(\"l\", \"L\")\n  new_string = new_string:gsub(\"\
    m\", \"M\")\n  new_string = new_string:gsub(\"n\", \"N\")\n  new_string = new_string:gsub(\"\
    o\", \"O\")\n  new_string = new_string:gsub(\"p\", \"P\")\n  new_string = new_string:gsub(\"\
    q\", \"Q\")\n  new_string = new_string:gsub(\"r\", \"R\")\n  new_string = new_string:gsub(\"\
    s\", \"S\")\n  new_string = new_string:gsub(\"t\", \"T\")\n  new_string = new_string:gsub(\"\
    u\", \"U\")\n  new_string = new_string:gsub(\"v\", \"V\")\n  new_string = new_string:gsub(\"\
    w\", \"W\")\n  new_string = new_string:gsub(\"x\", \"X\")\n  new_string = new_string:gsub(\"\
    y\", \"Y\")\n  new_string = new_string:gsub(\"z\", \"Z\")\n  new_string = new_string:gsub(\"\
    0\", \"0\")\n  new_string = new_string:gsub(\"1\", \"1\")\n  new_string = new_string:gsub(\"\
    2\", \"2\")\n  new_string = new_string:gsub(\"3\", \"3\")\n  new_string = new_string:gsub(\"\
    4\", \"4\")\n  new_string = new_string:gsub(\"5\", \"5\")\n  new_string = new_string:gsub(\"\
    6\", \"6\")\n  new_string = new_string:gsub(\"7\", \"7\")\n  new_string = new_string:gsub(\"\
    8\", \"8\")\n  new_string = new_string:gsub(\"9\", \"9\")\n  return new_string\n\
    end", "  local result = \"\"\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c == \"a\" then\n      c = \"A\"\n    elseif c == \"A\" then\n  \
    \    c = \"a\"\n    end\n    result = result .. c\n  end\n  return result\nend",
  "  local result = string\n  local i, j = 1, #string\n  while i < j do\n    local\
    \ char = string.sub(i, j)\n    local upper = string.byte(char, 1):upper()\n  \
    \  local lower = string.byte(char, 1):lower()\n    string.sub(i, j) = string.sub(string,\
    \ i, j)\n    string.sub(i, j) = string.sub(string, i, j) .. upper\n    string.sub(i,\
    \ j) = string.sub(string, i, j) .. lower\n    i = i + 1\n    j = j - 1\n  end\n\
    \  return result\nend", "  local result = {}\n  for _, character in ipairs(string)\
    \ do\n    local lower = character:lower()\n    local upper = character:upper()\n\
    \    result[#result + 1] = lower .. upper\n  end\n  return table.concat(result)\n\
    end", "  local new_string = string\n  -- Lowercase letters.\n  for i = 1, #string\
    \ do\n    if string.sub(i, 1, 1) == \"a\" then\n      new_string = new_string\
    \ .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"A\" then\n      new_string\
    \ = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"b\" then\n\
    \      new_string = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1,\
    \ 1) == \"B\" then\n      new_string = new_string .. string.sub(i, 2)\n    elseif\
    \ string.sub(i, 1, 1) == \"c\" then\n      new_string = new_string .. string.sub(i,\
    \ 2)\n    elseif string.sub(i, 1, 1) == \"C\" then\n      new_string = new_string\
    \ .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"d\" then\n      new_string\
    \ = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"D\" then\n\
    \      new_string = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1,\
    \ 1) == \"e\" then\n      new_string = new_string .. string.sub(i, 2)\n    elseif\
    \ string.sub(i, 1, 1) == \"E\" then\n      new_string = new_string .. string.sub(i,\
    \ 2)\n    elseif string.sub(i, 1, 1) == \"f\" then\n      new_string = new_string\
    \ .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"G\" then\n      new_string\
    \ = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"h\" then\n\
    \      new_string = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1,\
    \ 1) == \"H\" then\n      new_string = new_string .. string.sub(i, 2)\n    elseif\
    \ string.sub(i, 1, 1) == \"i\" then\n      new_string = new_string .. string.sub(i,\
    \ 2)\n    elseif string.sub(i, 1, 1) == \"I\" then\n      new_string = new_string\
    \ .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"j\" then\n      new_string\
    \ = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"J\" then\n\
    \      new_string = new_string .. string.sub(i, 2)\n    elseif string.sub(i, 1,\
    \ 1) == \"k\" then\n      new_string = new_string .. string.sub(i, 2)\n    elseif\
    \ string.sub(i, 1, 1) == \"K\" then\n      new_string = new_string .. string.sub(i,\
    \ 2)\n    elseif string.sub(i, 1, 1) == \"l\" then\n      new_string = new_string\
    \ .. string.sub(i, 2)\n    elseif string.sub(i, 1, 1) == \"L\" ", "  local result\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char\
    \ >= \"a\" and char <= \"z\" then\n      char = char - \"a\"\n    end\n    if\
    \ char >= \"A\" and char <= \"Z\" then\n      char = char - \"A\"\n    end\n \
    \   char = string.char(char)\n    i = i + 1\n    result = result .. char\n  end\n\
    \  return result\nend", "  local result = {}\n  for _, character in ipairs(string)\
    \ do\n    local new_character = character:lower()\n    if new_character ~= character\
    \ then\n      result[#result + 1] = new_character\n    end\n  end\n  return table.concat(result,\
    \ \"_\")\nend", "    local result = {}\n    for _, character in ipairs(string)\
    \ do\n        local new_character = character:lower()\n        if new_character\
    \ ~= character then\n            result[#result + 1] = new_character\n       \
    \ end\n    end\n    return table.concat(result, \"_\")\nend", "  local new_string\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char\
    \ >= \"a\" and char <= \"z\" then\n      new_string = new_string .. string.sub(string,\
    \ i, i) .. string.sub(string, (i - 1), i)\n    elseif char >= \"A\" and char <=\
    \ \"Z\" then\n      new_string = new_string .. string.sub(string, i, i) .. string.sub(string,\
    \ (i - 1), i)\n    else\n      new_string = new_string .. char\n    end\n  end\n\
    \  return new_string\nend", "  local result = {}\n  for _, character in ipairs(string)\
    \ do\n    local new_character = character:lower()\n    if new_character:upper()\
    \ == character then\n      new_character = new_character:lower()\n    end\n  \
    \  result[#result + 1] = new_character\n  end\n  return table.concat(result)\n\
    end", "    local result = {}\n    for _, char in ipairs(string) do\n        local\
    \ new_char = char:lower()\n        if new_char == char then\n            new_char\
    \ = char:upper()\n        end\n        result[#result + 1] = new_char\n    end\n\
    \    return table.concat(result)\nend", "  local new_string = string\n  -- Iterate\
    \ over each character in the string.\n  for i = 1, #string do\n    -- If the character\
    \ is lowercase, flip it to uppercase.\n    if string.byte(string, i) == string.byte(string,\
    \ i) then\n      new_string = new_string .. string.char(string.byte(new_string,\
    \ i) + 32)\n    end\n    -- If the character is uppercase, flip it to lowercase.\n\
    \    if string.byte(string, i) == string.byte(string, i) then\n      new_string\
    \ = new_string .. string.char(string.byte(new_string, i) - 32)\n    end\n  end\n\
    \  return new_string\nend", "  local result = string\n  local upper = string.char(\"\
    A\"..string.char(\"Z\"))\n  local lower = string.char(\"a\"..string.char(\"z\"\
    ))\n  for i = 1, #string do\n    local c = string.sub(string, i, i)\n    if c\
    \ == upper then\n      c = string.sub(string, i, i-1)\n      result = string.sub(string,\
    \ 1, i-1)..c..string.sub(string, i+1, i)\n    elseif c == lower then\n      c\
    \ = string.sub(string, i, i-1)\n      result = string.sub(string, 1, i-1)..c..string.sub(string,\
    \ i+1, i)\n    end\n  end\n  return result\nend", "  local new_string = \"\"\n\
    \  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"\
    a\" and char <= \"z\" then\n      char = string.sub(i, i - 1)\n    end\n    new_string\
    \ = new_string .. char\n  end\n  return new_string\nend", "    local new_string\
    \ = \"\"\n    for i = 1, #string do\n        local char = string.sub(i, i)\n \
    \       if char >= \"a\" and char <= \"z\" then\n            char = string.sub(string.sub(string,\
    \ 1, i), -1)\n        end\n        if char >= \"A\" and char <= \"Z\" then\n \
    \           char = string.sub(string.sub(string, 1, i), -1)\n        end\n   \
    \     new_string = new_string .. char\n    end\n    return new_string\nend", " \
    \ local new_string = string\n  local index = 1\n  while index <= #string do\n\
    \    local char = string.sub(string, index, index)\n    if char == \"a\" then\n\
    \      new_string = string.sub(string, index, index) .. \"A\"\n      index = index\
    \ + 1\n    elseif char == \"A\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"a\"\n      index = index + 1\n    elseif char == \"0\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"0\"\n      index = index\
    \ + 1\n    elseif char == \"1\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"1\"\n      index = index + 1\n    elseif char == \"2\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"2\"\n      index = index\
    \ + 1\n    elseif char == \"3\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"3\"\n      index = index + 1\n    elseif char == \"4\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"4\"\n      index = index\
    \ + 1\n    elseif char == \"5\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"5\"\n      index = index + 1\n    elseif char == \"6\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"6\"\n      index = index\
    \ + 1\n    elseif char == \"7\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"7\"\n      index = index + 1\n    elseif char == \"8\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"8\"\n      index = index\
    \ + 1\n    elseif char == \"9\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"9\"\n      index = index + 1\n    elseif char == \"_\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"_\"\n      index = index\
    \ + 1\n    elseif char == \" \" then\n      new_string = string.sub(string, index,\
    \ index) .. \" \"\n      index = index + 1\n    elseif char == \"-\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"-\"\n      index = index\
    \ + 1\n    elseif char == \"+\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"+\"\n      index = index + 1\n    elseif char == \"/\" then\n  \
    \    new_string = string.sub(string, index, index) .. \"/\"\n      index = index\
    \ + 1\n    elseif char == \"%\" then\n      new_string = string.sub(string, index,\
    \ index) .. \"%\"\n      index = index + 1\n    elseif char == \"^\" then\n  \
    \    new_string = string.sub(string, index, index", "    local new_string = \"\
    \"\n    for i = 1, #string do\n        local char = string.sub(i, i)\n       \
    \ if char == \"a\" then\n            char = \"A\"\n        elseif char == \"A\"\
    \ then\n            char = \"a\"\n        end\n        new_string = new_string\
    \ .. char\n    end\n    return new_string\nend", "    local new_string = \"\"\n\
    \    for i = 1, #string do\n        local char = string.sub(i, i)\n        if\
    \ char == \"a\" then\n            char = \"A\"\n        end\n        if char ==\
    \ \"A\" then\n            char = \"a\"\n        end\n        new_string = new_string\
    \ .. char\n    end\n    return new_string\nend", "    local new_string = \"\"\n\
    \    for i = 1, #string do\n        local char = string.sub(i, i)\n        if\
    \ char == \"a\" then\n            new_string = new_string .. \"A\"\n        elseif\
    \ char == \"A\" then\n            new_string = new_string .. \"a\"\n        elseif\
    \ char == \"0\" then\n            new_string = new_string .. \"0\"\n        elseif\
    \ char == \"1\" then\n            new_string = new_string .. \"1\"\n        elseif\
    \ char == \"2\" then\n            new_string = new_string .. \"2\"\n        elseif\
    \ char == \"3\" then\n            new_string = new_string .. \"3\"\n        elseif\
    \ char == \"4\" then\n            new_string = new_string .. \"4\"\n        elseif\
    \ char == \"5\" then\n            new_string = new_string .. \"5\"\n        elseif\
    \ char == \"6\" then\n            new_string = new_string .. \"6\"\n        elseif\
    \ char == \"7\" then\n            new_string = new_string .. \"7\"\n        elseif\
    \ char == \"8\" then\n            new_string = new_string .. \"8\"\n        elseif\
    \ char == \"9\" then\n            new_string = new_string .. \"9\"\n        elseif\
    \ char == \"-\" then\n            new_string = new_string .. \"-\"\n        elseif\
    \ char == \"_\" then\n            new_string = new_string .. \"_\"\n        elseif\
    \ char == \"+\" then\n            new_string = new_string .. \"+\"\n        elseif\
    \ char == \"/\" then\n            new_string = new_string .. \"/\"\n        elseif\
    \ char == \"%\" then\n            new_string = new_string .. \"%\"\n        elseif\
    \ char == \"$\" then\n            new_string = new_string .. \"$\"\n        elseif\
    \ char == \"!\" then\n            new_string = new_string .. \"!\"\n        elseif\
    \ char == \"=\" then\n            new_string = new_string .. \"=\"\n        elseif\
    \ char == \"@\" then\n            new_string = new_string .. \"@\"\n        elseif\
    \ char == \"#\" then\n            new_string = new_string .. \"#\"\n        elseif\
    \ char == \"$\" then\n            new_string = new_string .. \"$\"\n        elseif\
    \ char == \"%\" then\n            new_string = new_string .. \"%\"\n        elseif\
    \ char == \"^\" then\n            new_string = new_string .. \"^\"\n        elseif\
    \ char == \"&\" then\n            new_string = new_string .. \"&\"\n        elseif\
    \ char == \"*\" then\n            new_string = new_string .. \"*\"\n        elseif\
    \ char == \"(\" then\n            new_string = new_string .. \"(\"\n        elseif\
    \ char == \")\" then\n            new_string = new_string .. \")\"\n        elseif\
    \ char == \"-\" then\n            new_string = new_string .. \"-\"\n        elseif\
    \ char == \"_\" then\n            new_", "  local new_string = string\n  local\
    \ length = string.len()\n  for i = 1, length do\n    local char = string.sub(i,\
    \ i)\n    if char == \"a\" then\n      new_string = new_string .. \"A\"\n    elseif\
    \ char == \"A\" then\n      new_string = new_string .. \"a\"\n    elseif char\
    \ == \"0\" then\n      new_string = new_string .. \"0\"\n    elseif char == \"\
    1\" then\n      new_string = new_string .. \"1\"\n    elseif char == \"2\" then\n\
    \      new_string = new_string .. \"2\"\n    elseif char == \"3\" then\n     \
    \ new_string = new_string .. \"3\"\n    elseif char == \"4\" then\n      new_string\
    \ = new_string .. \"4\"\n    elseif char == \"5\" then\n      new_string = new_string\
    \ .. \"5\"\n    elseif char == \"6\" then\n      new_string = new_string .. \"\
    6\"\n    elseif char == \"7\" then\n      new_string = new_string .. \"7\"\n \
    \   elseif char == \"8\" then\n      new_string = new_string .. \"8\"\n    elseif\
    \ char == \"9\" then\n      new_string = new_string .. \"9\"\n    elseif char\
    \ == \"-\" then\n      new_string = new_string .. \"-\"\n    elseif char == \"\
    _\" then\n      new_string = new_string .. \"_\"\n    elseif char == \"+\" then\n\
    \      new_string = new_string .. \"+\"\n    elseif char == \"/\" then\n     \
    \ new_string = new_string .. \"/\"\n    elseif char == \"%\" then\n      new_string\
    \ = new_string .. \"%\"\n    elseif char == \"&\" then\n      new_string = new_string\
    \ .. \"&\"\n    elseif char == \"(\" then\n      new_string = new_string .. \"\
    (\"\n    elseif char == \")\" then\n      new_string = new_string .. \")\"\n \
    \   elseif char == \"*\" then\n      new_string = new_string .. \"*\"\n    elseif\
    \ char == \"+\" then\n      new_string = new_string .. \"+\"\n    elseif char\
    \ == \"=\" then\n      new_string = new_string .. \"=\"\n    elseif char == \"\
    <\" then\n      new_string = new_string .. \"<\"\n    elseif char == \">\" then\n\
    \      new_string = new_string .. \">\"\n    elseif char == \"?\" then\n     \
    \ new_string = new_string .. \"?\"\n    elseif char == \"/\" then\n      new_string\
    \ = new_string .. \"/\"\n    elseif char == \"%\" then\n      new_string = new_string\
    \ .. \"%\"\n    elseif char == \"+\" then\n      new_", "  local result = {}\n\
    \  for _, c in ipairs(string) do\n    result[#result + 1] = string.char(tonumber(c))\n\
    \  end\n  return table.concat(result)\nend", "  local result = {}\n  for i = 1,\
    \ #string do\n    local char = string.sub(i, i)\n    if char >= 'a' and char <=\
    \ 'z' then\n      char = string.sub(string.sub(char, 1, 1), 1, 1) + 'A'\n    elseif\
    \ char >= 'A' and char <= 'Z' then\n      char = string.sub(string.sub(char, 1,\
    \ 1), 1, 1) + 'a'\n    end\n    result[i] = char\n  end\n  return table.concat(result)\n\
    end", "  local result = string\n  local i, j = 1, #string\n  while i < j do\n\
    \    local char = string.sub(i, j)\n    if char == \"a\" then\n      char = \"\
    A\"\n    elseif char == \"A\" then\n      char = \"a\"\n    end\n    result =\
    \ result .. char\n    i = i + 1\n    j = j - 1\n  end\n  return result\nend",
  "  local new_string = string\n  new_string = new_string:gsub(\"A\", \"a\")\n  new_string\
    \ = new_string:gsub(\"B\", \"b\")\n  new_string = new_string:gsub(\"C\", \"c\"\
    )\n  new_string = new_string:gsub(\"D\", \"d\")\n  new_string = new_string:gsub(\"\
    E\", \"e\")\n  new_string = new_string:gsub(\"F\", \"f\")\n  new_string = new_string:gsub(\"\
    G\", \"g\")\n  new_string = new_string:gsub(\"H\", \"h\")\n  new_string = new_string:gsub(\"\
    I\", \"i\")\n  new_string = new_string:gsub(\"J\", \"j\")\n  new_string = new_string:gsub(\"\
    K\", \"k\")\n  new_string = new_string:gsub(\"L\", \"l\")\n  new_string = new_string:gsub(\"\
    M\", \"m\")\n  new_string = new_string:gsub(\"N\", \"n\")\n  new_string = new_string:gsub(\"\
    O\", \"o\")\n  new_string = new_string:gsub(\"P\", \"p\")\n  new_string = new_string:gsub(\"\
    Q\", \"q\")\n  new_string = new_string:gsub(\"R\", \"r\")\n  new_string = new_string:gsub(\"\
    S\", \"s\")\n  new_string = new_string:gsub(\"T\", \"t\")\n  new_string = new_string:gsub(\"\
    U\", \"u\")\n  new_string = new_string:gsub(\"V\", \"v\")\n  new_string = new_string:gsub(\"\
    W\", \"w\")\n  new_string = new_string:gsub(\"X\", \"x\")\n  new_string = new_string:gsub(\"\
    Y\", \"y\")\n  new_string = new_string:gsub(\"Z\", \"z\")\n  return new_string\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c:lower() == c then\n      new_string = new_string .. c:upper()\n\
    \    else\n      new_string = new_string .. c:lower()\n    end\n  end\n  return\
    \ new_string\nend", "  local new_string = string\n  local length = string.len()\n\
    \  for i = 1, length do\n    local char = string.sub(i, i)\n    if char == \"\
    a\" then\n      new_string = new_string .. \"A\"\n    elseif char == \"A\" then\n\
    \      new_string = new_string .. \"a\"\n    elseif char == \"0\" then\n     \
    \ new_string = new_string .. \"0\"\n    elseif char == \"1\" then\n      new_string\
    \ = new_string .. \"1\"\n    elseif char == \"2\" then\n      new_string = new_string\
    \ .. \"2\"\n    elseif char == \"3\" then\n      new_string = new_string .. \"\
    3\"\n    elseif char == \"4\" then\n      new_string = new_string .. \"4\"\n \
    \   elseif char == \"5\" then\n      new_string = new_string .. \"5\"\n    elseif\
    \ char == \"6\" then\n      new_string = new_string .. \"6\"\n    elseif char\
    \ == \"7\" then\n      new_string = new_string .. \"7\"\n    elseif char == \"\
    8\" then\n      new_string = new_string .. \"8\"\n    elseif char == \"9\" then\n\
    \      new_string = new_string .. \"9\"\n    elseif char == \"-\" then\n     \
    \ new_string = new_string .. \"-\"\n    elseif char == \"_\" then\n      new_string\
    \ = new_string .. \"_\"\n    elseif char == \"+\" then\n      new_string = new_string\
    \ .. \"+\"\n    elseif char == \"/\" then\n      new_string = new_string .. \"\
    /\"\n    elseif char == \"%\" then\n      new_string = new_string .. \"%\"\n \
    \   elseif char == \"&\" then\n      new_string = new_string .. \"&\"\n    elseif\
    \ char == \"(\" then\n      new_string = new_string .. \"(\"\n    elseif char\
    \ == \")\" then\n      new_string = new_string .. \")\"\n    elseif char == \"\
    *\" then\n      new_string = new_string .. \"*\"\n    elseif char == \"+\" then\n\
    \      new_string = new_string .. \"+\" .. \"-\"\n    elseif char == \"?\" then\n\
    \      new_string = new_string .. \"?\"\n    elseif char == \"=\" then\n     \
    \ new_string = new_string .. \"=\"\n    elseif char == \"|\" then\n      new_string\
    \ = new_string .. \"|\"\n    elseif char == \"[\" then\n      new_string = new_string\
    \ .. \"[\"\n    elseif char == \"]\" then\n      new_string = new_string .. \"\
    ]\"\n    elseif char == \"{\" then\n      new_string = new_string .. \"{\"\n \
    \   elseif char == \"}\" ", "  local new_string = string\n  new_string = new_string:gsub(\"\
    a\", \"A\")\n  new_string = new_string:gsub(\"b\", \"B\")\n  new_string = new_string:gsub(\"\
    c\", \"C\")\n  new_string = new_string:gsub(\"d\", \"D\")\n  new_string = new_string:gsub(\"\
    e\", \"E\")\n  new_string = new_string:gsub(\"f\", \"F\")\n  new_string = new_string:gsub(\"\
    g\", \"G\")\n  new_string = new_string:gsub(\"h\", \"H\")\n  new_string = new_string:gsub(\"\
    i\", \"I\")\n  new_string = new_string:gsub(\"j\", \"J\")\n  new_string = new_string:gsub(\"\
    k\", \"K\")\n  new_string = new_string:gsub(\"l\", \"L\")\n  new_string = new_string:gsub(\"\
    m\", \"M\")\n  new_string = new_string:gsub(\"n\", \"N\")\n  new_string = new_string:gsub(\"\
    o\", \"O\")\n  new_string = new_string:gsub(\"p\", \"P\")\n  new_string = new_string:gsub(\"\
    q\", \"Q\")\n  new_string = new_string:gsub(\"r\", \"R\")\n  new_string = new_string:gsub(\"\
    s\", \"S\")\n  new_string = new_string:gsub(\"t\", \"T\")\n  new_string = new_string:gsub(\"\
    u\", \"U\")\n  new_string = new_string:gsub(\"v\", \"V\")\n  new_string = new_string:gsub(\"\
    w\", \"W\")\n  new_string = new_string:gsub(\"x\", \"X\")\n  new_string = new_string:gsub(\"\
    y\", \"Y\")\n  new_string = new_string:gsub(\"z\", \"Z\")\n  new_string = new_string:gsub(\"\
    0\", \"0\")\n  new_string = new_string:gsub(\"1\", \"1\")\n  new_string = new_string:gsub(\"\
    2\", \"2\")\n  new_string = new_string:gsub(\"3\", \"3\")\n  new_string = new_string:gsub(\"\
    4\", \"4\")\n  new_string = new_string:gsub(\"5\", \"5\")\n  new_string = new_string:gsub(\"\
    6\", \"6\")\n  new_string = new_string:gsub(\"7\", \"7\")\n  new_string = new_string:gsub(\"\
    8\", \"8\")\n  new_string = new_string:gsub(\"9\", \"9\")\n  new_string = new_string:gsub(\"\
    +\", \"+\")\n  new_string = new_string:gsub(\"-\", \"-\")\n  new_string = new_string:gsub(\"\
    *\", \"*\")\n  new_string = new_string:gsub(\"/\", \"/\")\n  new_string = new_string:gsub(\"\
    =\", \"=\")\n", "    local new_string = string\n    for i = 1, #string do\n  \
    \      if string.sub(i, 1, 1) ~= string.sub(i, 2, 1) then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1) .. string.sub(i, 1, 2)\n        end\n  \
    \  end\n    return new_string\nend", "  local result = {}\n  for _, c in ipairs(string)\
    \ do\n    local lower = string.lower(c)\n    local upper = string.upper(c)\n \
    \   result[#result + 1] = lower .. upper\n  end\n  return table.concat(result,\
    \ \"_\")\nend", "    local result = string\n    for i = 1, #string do\n      \
    \  local c = string.sub(i, i)\n        if c == \"a\" then\n            c = \"\
    A\"\n        end\n        if c == \"A\" then\n            c = \"a\"\n        end\n\
    \        result = result .. c\n    end\n    return result\nend", "    local new_string\
    \ = \"\"\n    for i = 1, #string do\n        local char = string.sub(i, i)\n \
    \       if char >= \"a\" and char <= \"z\" then\n            char = string.sub(i,\
    \ i, \"A\")\n        end\n        if char >= \"A\" and char <= \"Z\" then\n  \
    \          char = string.sub(i, i, \"a\")\n        end\n        new_string = new_string\
    \ .. char\n    end\n    return new_string\nend", "    local result = string\n\
    \    for i = 1, #string do\n        local c = string.sub(i, i)\n        if c ==\
    \ \"a\" then\n            c = \"A\"\n        end\n        if c == \"A\" then\n\
    \            c = \"a\"\n        end\n        result = string.sub(i - 1, i - 1)\
    \ .. c .. string.sub(i, i)\n    end\n    return result\nend", "  local result\
    \ = {}\n  for _, character in ipairs(string) do\n    local new_character = character:lower()\n\
    \    if new_character:upper() == character then\n      new_character = new_character:lower()\n\
    \    end\n    result[#result + 1] = new_character\n  end\n  return table.concat(result,\
    \ \"-\")\nend", "  local new_string = \"\"\n  for i = 1, #string do\n    local\
    \ char = string.sub(i, i)\n    if char >= \"a\" and char <= \"z\" then\n     \
    \ new_string = new_string .. string.sub(string, i, i) .. string.sub(string, (i\
    \ - 1), i)\n    elseif char >= \"A\" and char <= \"Z\" then\n      new_string\
    \ = new_string .. string.sub(string, i, i) .. string.sub(string, (i - 1), i)\n\
    \    else\n      new_string = new_string .. char\n    end\n  end\n  return new_string\n\
    end", "  local result = \"\"\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c == \"a\" then\n      c = \"A\"\n    elseif c == \"A\" then\n  \
    \    c = \"a\"\n    end\n    result = result .. c\n  end\n  return result\nend",
  "  local new_string = string\n  -- Iterate over each character in the string.\n\
    \  for i, character in ipairs(string) do\n    -- If the character is lowercase,\
    \ flip it to uppercase.\n    if character == string.lower(character) then\n  \
    \    new_string = new_string .. string.upper(character)\n    -- If the character\
    \ is uppercase, flip it to lowercase.\n    elseif character == string.upper(character)\
    \ then\n      new_string = new_string .. string.lower(character)\n    end\n  end\n\
    \  return new_string\nend", "  local result = {}\n  for _, character in ipairs(string)\
    \ do\n    local new_character = character:upper()\n    if new_character ~= character\
    \ then\n      result[#result + 1] = '\"' .. new_character .. '\"' -- Escape double\
    \ quotes.\n    end\n  end\n  return table.concat(result, \"; \")\nend", "  local\
    \ result = {}\n  for i = 1, #string do\n    local char = string.sub(i, i)\n  \
    \  if char >= 'a' and char <= 'z' then\n      char = char - 'a'\n    elseif char\
    \ >= 'A' and char <= 'Z' then\n      char = char - 'A'\n    else\n      char =\
    \ char\n    end\n    table.insert(result, char)\n  end\n  return table.concat(result,\
    \ '') -- Join all characters together.\nend", "  local new_string = \"\"\n  for\
    \ i = 1, #string do\n    local char = string.sub(i, i)\n    if char == \"a\" then\n\
    \      char = \"A\"\n    end\n    if char == \"A\" then\n      char = \"a\"\n\
    \    end\n    new_string = new_string .. char\n  end\n  return new_string\nend",
  "  local new_string = string\n  local length = #string\n  for i = 1, length do\n\
    \    local char = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n\
    \      new_string = new_string .. string.sub(string.sub(new_string, i - 1, i),\
    \ i - 1, i)\n    elseif char >= 'A' and char <= 'Z' then\n      new_string = new_string\
    \ .. string.sub(string.sub(new_string, i - 1, i), i - 1, i)\n    elseif char >=\
    \ '0' and char <= '9' then\n      new_string = new_string .. string.sub(string.sub(new_string,\
    \ i - 1, i), i - 1, i)\n    end\n  end\n  return new_string\nend", "  local result\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char\
    \ >= \"a\" and char <= \"z\" then\n      char = string.sub(string.sub(char, 1,\
    \ 1), 1, 1) + string.sub(string.sub(char, 1, 1), 2, 1)\n    end\n    if char >=\
    \ \"A\" and char <= \"Z\" then\n      char = string.sub(string.sub(char, 1, 1),\
    \ 1, 1) + string.sub(string.sub(char, 1, 1), 2, 1)\n    end\n    if char >= \"\
    0\" and char <= \"9\" then\n      char = string.sub(char, 1, 1)\n    end\n   \
    \ result = result .. char\n  end\n  return result\nend", "  local result = \"\"\
    \n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"\
    a\" and char <= \"z\" then\n      char = char - \"a\"\n    elseif char >= \"A\"\
    \ and char <= \"Z\" then\n      char = char - \"A\"\n    end\n    result = result\
    \ .. char\n  end\n  return result\nend", "    local new_string = \"\"\n    for\
    \ i = 1, #string do\n        if string.sub(i, 1, 1) == \"a\" then\n          \
    \  new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n\
    \        elseif string.sub(i, 1, 1) == \"A\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i,\
    \ 1, 1) == \"b\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"B\"\
    \ then\n            new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == \"c\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == \"C\" then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"\
    d\" then\n            new_string = new_string .. string.sub(i, 2, #string) ..\
    \ string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"D\" then\n    \
    \        new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == \"e\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == \"E\" then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"\
    f\" then\n            new_string = new_string .. string.sub(i, 2, #string) ..\
    \ string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"F\" then\n    \
    \        new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub(i, 1, 1) == \"g\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, #string) .. string.sub(i, 1, 2)\n        elseif\
    \ string.sub(i, 1, 1) == \"G\" then\n            new_string = new_string .. string.sub(i,\
    \ 2, #string) .. string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"\
    h\" then\n            new_string = new_string .. string.sub(i, 2, #string) ..\
    \ string.sub(i, 1, 2)\n        elseif string.sub(i, 1, 1) == \"H\" then\n    \
    \        new_string = new_string .. string.sub(i, 2, #string) .. string.sub(i,\
    \ 1, 2)\n        elseif string.sub", "  local new_string = string\n  -- Lowercase\
    \ letters.\n  for i = 1, #string do\n    local c = string.byte(string, i)\n  \
    \  if c >= 65 and c <= 90 then\n      new_string = new_string .. string.char(c\
    \ - 32)\n    elseif c >= 97 and c <= 122 then\n      new_string = new_string ..\
    \ string.char(c - 32)\n    else\n      new_string = new_string .. string.char(c)\n\
    \    end\n  end\n  -- Uppercase letters.\n  for i = #string, 1, -1 do\n    local\
    \ c = string.byte(string, i)\n    if c >= 65 and c <= 90 then\n      new_string\
    \ = new_string .. string.char(c + 32)\n    elseif c >= 97 and c <= 122 then\n\
    \      new_string = new_string .. string.char(c + 32)\n    else\n      new_string\
    \ = new_string .. string.char(c)\n    end\n  end\n  return new_string\nend", " \
    \ local new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char == \"a\" then\n      new_string = new_string .. \"A\"\n    elseif\
    \ char == \"A\" then\n      new_string = new_string .. \"a\"\n    else\n     \
    \ new_string = new_string .. char\n    end\n  end\n  return new_string\nend",
  "  local new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= \"a\" and char <= \"z\" then\n      char = string.sub(string.sub(i,\
    \ 1, i), 2, 2)\n    end\n    new_string = new_string .. char\n  end\n  return\
    \ new_string\nend", "  local new_string = \"\"\n  for i = 1, #string do\n    local\
    \ char = string.sub(i, i)\n    if char >= \"a\" and char <= \"z\" then\n     \
    \ char = string.sub(string.sub(string, i), i)\n    end\n    new_string = new_string\
    \ .. char\n  end\n  return new_string\nend", "  local new_string = \"\"\n  for\
    \ i = 1, #string do\n    local char = string.sub(i, i)\n    if char >= \"a\" and\
    \ char <= \"z\" then\n      char = string.sub(string.sub(i, 1, i), -1)\n    end\n\
    \    new_string = new_string .. char\n  end\n  return new_string\nend", "  local\
    \ new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n\
    \    if char >= \"a\" and char <= \"z\" then\n      new_string = new_string ..\
    \ string.sub(string, i, i) .. string.sub(string, i + 1, i + 1)\n    elseif char\
    \ >= \"A\" and char <= \"Z\" then\n      new_string = new_string .. string.sub(string,\
    \ i, i) .. string.sub(string, i + 1, i + 1)\n    else\n      new_string = new_string\
    \ .. char\n    end\n  end\n  return new_string\nend", "  local new_string = \"\
    \"\n  for i = 1, #string do\n    local c = string.sub(i, i)\n    if c:lower()\
    \ ~= c then\n      new_string = new_string .. c:upper()\n    else\n      new_string\
    \ = new_string .. c:lower()\n    end\n  end\n  return new_string\nend", "  local\
    \ result = {}\n  for _, c in ipairs(string) do\n    local upper = string.upper(c)\n\
    \    local lower = string.lower(c)\n    result[#result + 1] = upper .. lower\n\
    \  end\n  return table.concat(result)\nend", "    local new_string = string\n\
    \    for i = 1, #string do\n        local c = string.sub(i, i)\n        if c ==\
    \ \"a\" then\n            new_string = string.sub(new_string, 1, i - 1)\n    \
    \        new_string = string.sub(new_string, i + 1, #new_string)\n           \
    \ new_string = string.sub(new_string, 1, i - 1)\n            new_string = string.sub(new_string,\
    \ i + 1, #new_string)\n        elseif c == \"A\" then\n            new_string\
    \ = string.sub(new_string, 1, i - 1)\n            new_string = string.sub(new_string,\
    \ i + 1, #new_string)\n            new_string = string.sub(new_string, 1, i -\
    \ 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n  \
    \      elseif c == \"0\" then\n            new_string = string.sub(new_string,\
    \ 1, i - 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #new_string)\n        elseif c == \"1\" then\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #new_string)\n            new_string = string.sub(new_string,\
    \ 1, i - 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n\
    \        elseif c == \"2\" then\n            new_string = string.sub(new_string,\
    \ 1, i - 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #new_string)\n        elseif c == \"3\" then\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #new_string)\n            new_string = string.sub(new_string,\
    \ 1, i - 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n\
    \        elseif c == \"4\" then\n            new_string = string.sub(new_string,\
    \ 1, i - 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #new_string)\n        elseif c == \"5\" then\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #new_string)\n            new_string = string.sub(new_string,\
    \ 1, i - 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n\
    \        elseif c == \"6\" then\n            new_string = string.sub(new_string,\
    \ 1, i - 1)\n            new_string = string.sub(new_string, i + 1, #new_string)\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #new_string)\n        elseif c == \"7\" then\n\
    \            new_string = string.sub(new_string, 1, i - 1)\n            new_string\
    \ = string.sub(new_string, i + 1, #", "  local result = {}\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    local upper = char:upper()\n    local\
    \ lower = char:lower()\n    result[#result + 1] = upper .. lower\n  end\n  return\
    \ table.concat(result)\nend", "    local new_string = \"\"\n    for i = 1, #string\
    \ do\n        if string.sub(i, 1, 1) == \"a\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"A\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"b\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"B\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    c\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"C\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"d\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"D\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"e\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    E\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"f\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"F\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"g\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"G\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    h\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"H\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"i\" then\n \
    \           new_string = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i,\
    \ 1, 1) == \"I\" then\n            new_string = new_string .. string.sub(i, 2,\
    \ 1)\n        elseif string.sub(i, 1, 1) == \"j\" then\n            new_string\
    \ = new_string .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"\
    J\" then\n            new_string = new_string .. string.sub(i, 2, 1)\n       \
    \ elseif string.sub(i, 1, 1) == \"k\" then\n            new_string = new_string\
    \ .. string.sub(i, 2, 1)\n        elseif string.sub(i, 1, 1) == \"K\" then\n \
    \           new_string = new_string .. ", "  local result = \"\"\n  for i = 1,\
    \ #string do\n    local char = string.sub(i, i)\n    if char >= \"a\" and char\
    \ <= \"z\" then\n      char = string.sub(string.sub(i, 1, i), -1)\n    end\n \
    \   if char >= \"A\" and char <= \"Z\" then\n      char = string.sub(string.sub(i,\
    \ 1, i), -1)\n    end\n    if char >= \"0\" and char <= \"9\" then\n      char\
    \ = string.sub(string.sub(i, 1, i), -1)\n    end\n    result = result .. char\n\
    \  end\n  return result\nend", "  local result = string\n  result:gsub(\"([a-z])\"\
    , function(c) return c:lower() end)\n  result:gsub(\"([A-Z])\", function(c) return\
    \ c:upper() end)\n  return result\nend", "  local result = {}\n  for i = 1, #string\
    \ do\n    local char = string.sub(i, i)\n    local upper = char:upper()\n    local\
    \ lower = char:lower()\n    result[#result + 1] = upper .. lower\n  end\n  return\
    \ table.concat(result)\nend", "  local new_string = string\n  local i, j = 1,\
    \ #string\n  while i <= j do\n    local c = string.sub(i, j)\n    if c == \"a\"\
    \ then\n      new_string = new_string .. \"A\"\n    elseif c == \"A\" then\n \
    \     new_string = new_string .. \"a\"\n    elseif c == \"0\" then\n      new_string\
    \ = new_string .. \"0\"\n    else\n      new_string = new_string .. c\n    end\n\
    \    i = i + 1 -- Skip over next character.\n    j = j + 1 -- Skip over next character.\n\
    \  end\n  return new_string\nend", "  local result = string\n  local i, j = 1,\
    \ #string\n  while i < j do\n    local char = string.sub(i, j)\n    if char ==\
    \ \"a\" then\n      char = \"A\"\n    else if char == \"A\" then\n      char =\
    \ \"a\"\n    end\n    i = i + 1\n    j = j - 1\n    result = result .. char\n\
    \  end\n  return result\nend", "    local result = {}\n    for _, c in ipairs(string)\
    \ do\n        if string.lower(c) == c then\n            result[#result + 1] =\
    \ string.upper(c)\n        elseif string.upper(c) == c then\n            result[#result\
    \ + 1] = string.lower(c)\n        else\n            result[#result + 1] = c\n\
    \        end\n    end\n    return table.concat(result)\nend", "  local result\
    \ = {}\n  for _, c in ipairs(string) do\n    local lower = tostring(c):lower()\n\
    \    local upper = tostring(c):upper()\n    result[#result + 1] = lower .. upper\n\
    \  end\n  return table.concat(result)\nend", "  local new_string = \"\"\n  for\
    \ i = 1, #string do\n    local char = string.sub(i, i)\n    if char == \"a\" then\n\
    \      char = \"A\"\n    end\n    if char == \"A\" then\n      char = \"a\"\n\
    \    end\n    if char == \"0\" then\n      char = \"0\"\n    end\n    if char\
    \ == \"1\" then\n      char = \"1\"\n    end\n    if char == \"2\" then\n    \
    \  char = \"2\"\n    end\n    if char == \"3\" then\n      char = \"3\"\n    end\n\
    \    if char == \"4\" then\n      char = \"4\"\n    end\n    if char == \"5\"\
    \ then\n      char = \"5\"\n    end\n    if char == \"6\" then\n      char = \"\
    6\"\n    end\n    if char == \"7\" then\n      char = \"7\"\n    end\n    if char\
    \ == \"8\" then\n      char = \"8\"\n    end\n    if char == \"9\" then\n    \
    \  char = \"9\"\n    end\n    new_string = new_string .. char\n  end\n  return\
    \ new_string\nend", "    local new_string = \"\"\n    for i = 1, #string do\n\
    \        local char = string.sub(i, i)\n        if char >= \"a\" and char <= \"\
    z\" then\n            char = string.sub(string.sub(string, i), i)\n        end\n\
    \        if char >= \"A\" and char <= \"Z\" then\n            char = string.sub(string.sub(string,\
    \ i), i)\n        end\n        new_string = new_string .. char\n    end\n    return\
    \ new_string\nend", "    local new_string = string\n    for i = 1, #string do\n\
    \        local c = string.sub(i, i)\n        if c == \"a\" then\n            new_string\
    \ = new_string .. \"A\"\n        elseif c == \"A\" then\n            new_string\
    \ = new_string .. \"a\"\n        elseif c == \"0\" then\n            new_string\
    \ = new_string .. \"0\"\n        elseif c == \"1\" then\n            new_string\
    \ = new_string .. \"1\"\n        elseif c == \"2\" then\n            new_string\
    \ = new_string .. \"2\"\n        elseif c == \"3\" then\n            new_string\
    \ = new_string .. \"3\"\n        elseif c == \"4\" then\n            new_string\
    \ = new_string .. \"4\"\n        elseif c == \"5\" then\n            new_string\
    \ = new_string .. \"5\"\n        elseif c == \"6\" then\n            new_string\
    \ = new_string .. \"6\"\n        elseif c == \"7\" then\n            new_string\
    \ = new_string .. \"7\"\n        elseif c == \"8\" then\n            new_string\
    \ = new_string .. \"8\"\n        elseif c == \"9\" then\n            new_string\
    \ = new_string .. \"9\"\n        elseif c == \"-\" then\n            new_string\
    \ = new_string .. \"-\"\n        elseif c == \"_\" then\n            new_string\
    \ = new_string .. \"_\"\n        elseif c == \"+\" then\n            new_string\
    \ = new_string .. \"+\"\n        elseif c == \"/\" then\n            new_string\
    \ = new_string .. \"/\"\n        elseif c == \"%\" then\n            new_string\
    \ = new_string .. \"%\"\n        elseif c == \"^\" then\n            new_string\
    \ = new_string .. \"^\"\n        elseif c == \"&\" then\n            new_string\
    \ = new_string .. \"&\"\n        elseif c == \"*\" then\n            new_string\
    \ = new_string .. \"*\"\n        elseif c == \"(\" then\n            new_string\
    \ = new_string .. \"(\"\n        elseif c == \")\" then\n            new_string\
    \ = new_string .. \")\"\n        elseif c == \"+\" then\n            new_string\
    \ = new_string .. \"+\"\n        elseif c == \"=\" then\n            new_string\
    \ = new_string .. \"=\"\n        elseif c == \"?\" then\n            new_string\
    \ = new_string .. \"?\"\n        elseif c == \"!\" then\n            new_string\
    \ = new_string .. \"!\"\n        elseif c == \"<\" then\n            new_string\
    \ = new_string .. \"<\"\n        elseif c == \"=\" then\n            new_string\
    \ = new_string .. \"=\"\n        elseif c == \"|\" then\n            new_string\
    \ = new_string .. \"|\"\n        elseif c == \">\" then\n            new_string\
    \ = new_string .. \">\"\n        elseif c == \"?\" then\n            new_string\
    \ = new_string ", "    local new_string = string\n    for i = 1, #string do\n\
    \        if string.sub(i, 1, 1) == \"a\" then\n            new_string = string.sub(new_string,\
    \ 1, i-1) + string.sub(new_string, i+1, #new_string)\n        end\n        if\
    \ string.sub(i, 1, 1) == \"A\" then\n            new_string = string.sub(new_string,\
    \ 1, i-1) + string.sub(new_string, i+1, #new_string)\n        end\n    end\n \
    \   return new_string\nend", "    local new_string = string\n    for i = 1, #string\
    \ do\n        if string.sub(i, 1, 1) == \"a\" then\n            new_string = string.sub(new_string,\
    \ 1, i-1) + string.sub(new_string, i+1, #new_string)\n        end\n        if\
    \ string.sub(i, 1, 1) == \"A\" then\n            new_string = string.sub(new_string,\
    \ 1, i-1) + string.sub(new_string, i+1, #new_string)\n        end\n    end\n \
    \   return new_string\nend", "    local result = string\n    for i = 1, #string\
    \ do\n        local c = string.sub(i, i, i)\n        if c == \"a\" then\n    \
    \        c = \"A\"\n        elseif c == \"A\" then\n            c = \"a\"\n  \
    \      else\n            c = string.char(tonumber(c))\n        end\n        result\
    \ = string.sub(i, 1, i-1) .. c .. string.sub(i, i+1)\n    end\n    return result\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local char = string.sub(i,\
    \ i)\n    if char >= \"a\" and char <= \"z\" then\n      char = string.sub(string.sub(string,\
    \ 1, i), -1) + char\n    end\n    new_string = new_string .. char\n  end\n  return\
    \ new_string\nend", "  local result = {}\n  for _, character in ipairs(string)\
    \ do\n    local lower = character:lower()\n    local upper = character:upper()\n\
    \    result[#result + 1] = lower .. upper\n  end\n  return table.concat(result)\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c ~= nil then\n      if c:lower() ~= c then\n        new_string =\
    \ new_string .. c:upper()\n      else\n        new_string = new_string .. c:lower()\n\
    \      end\n    end\n  end\n  return new_string\nend", "  local result = {}\n\
    \  for _, c in ipairs(string) do\n    result[#result + 1] = c:upper()\n  end\n\
    \  return table.concat(result)\nend", "  local result = \"\"\n  for i = 1, #string\
    \ do\n    local c = string.sub(i, i)\n    if c:lower() == c then\n      result\
    \ = result .. c:upper()\n    else\n      result = result .. c:lower()\n    end\n\
    \  end\n  return result\nend", "  local new_string = string\n  local length =\
    \ string.len()\n  for i = 1, length do\n    local char = string.sub(i, i)\n  \
    \  local new_char = string.sub(length - i - 1, length - i - 1)\n    if char ==\
    \ \"a\" and new_char == \"A\" then\n      new_string = new_string .. \"A\"\n \
    \   elseif char == \"b\" and new_char == \"B\" then\n      new_string = new_string\
    \ .. \"B\"\n    elseif char == \"c\" and new_char == \"C\" then\n      new_string\
    \ = new_string .. \"C\"\n    elseif char == \"d\" and new_char == \"D\" then\n\
    \      new_string = new_string .. \"D\"\n    elseif char == \"e\" and new_char\
    \ == \"E\" then\n      new_string = new_string .. \"E\"\n    elseif char == \"\
    f\" and new_char == \"F\" then\n      new_string = new_string .. \"F\"\n    elseif\
    \ char == \"g\" and new_char == \"G\" then\n      new_string = new_string .. \"\
    G\"\n    elseif char == \"h\" and new_char == \"H\" then\n      new_string = new_string\
    \ .. \"H\"\n    elseif char == \"i\" and new_char == \"I\" then\n      new_string\
    \ = new_string .. \"I\"\n    elseif char == \"j\" and new_char == \"J\" then\n\
    \      new_string = new_string .. \"J\"\n    elseif char == \"k\" and new_char\
    \ == \"K\" then\n      new_string = new_string .. \"K\"\n    elseif char == \"\
    l\" and new_char == \"L\" then\n      new_string = new_string .. \"L\"\n    elseif\
    \ char == \"m\" and new_char == \"M\" then\n      new_string = new_string .. \"\
    M\"\n    elseif char == \"n\" and new_char == \"N\" then\n      new_string = new_string\
    \ .. \"N\"\n    elseif char == \"o\" and new_char == \"O\" then\n      new_string\
    \ = new_string .. \"O\"\n    elseif char == \"p\" and new_char == \"P\" then\n\
    \      new_string = new_string .. \"P\"\n    elseif char == \"q\" and new_char\
    \ == \"Q\" then\n      new_string = new_string .. \"Q\"\n    elseif char == \"\
    r\" and new_char == \"R\" then\n      new_string = new_string .. \"R\"\n    elseif\
    \ char == \"s\" and new_char == \"S\" then\n      new_string = new_string .. \"\
    S\"\n    elseif char == \"t\" and new_char == \"T\" then\n      new_string = new_string\
    \ .. \"T\"\n    elseif char == \"u\" and new_char == \"U\" then\n", "  local new_string\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char\
    \ >= \"a\" and char <= \"z\" then\n      char = string.sub(i, i - 1)\n    end\n\
    \    new_string = new_string .. char\n  end\n  return new_string\nend", "  local\
    \ result = {}\n  for _, c in ipairs(string) do\n    local upper = string.upper(c)\n\
    \    local lower = string.lower(c)\n    result[#result + 1] = upper .. lower\n\
    \  end\n  return table.concat(result)\nend", "  local new_string = string\n  local\
    \ i, j = 1, #string\n  while i < j do\n    if string.sub(i, 1, 1) ~= string.sub(j,\
    \ 1, 1) then\n      new_string = new_string .. string.sub(j, 1, 1) .. string.sub(i,\
    \ 1, 1) .. string.sub(j, 2, 2)\n      i = i + 1\n      j = j - 1\n    else\n \
    \     i = i + 1\n    end\n  end\n  return new_string\nend", "  local new_string\
    \ = \"\"\n  for i = 1, #string do\n    local char = string.sub(i, i)\n    if char\
    \ >= \"a\" and char <= \"z\" then\n      char = string.sub(string.sub(string,\
    \ i), i)\n    end\n    new_string = new_string .. char\n  end\n  return new_string\n\
    end", "  local new_string = \"\"\n  for i = 1, #string do\n    local c = string.sub(i,\
    \ i)\n    if c:lower() == c:upper() then\n      new_string = new_string .. c:lower()\n\
    \    else\n      new_string = new_string .. c:upper()\n    end\n  end\n  return\
    \ new_string\nend", "  local result = {}\n  for i = 1, #string do\n    local char\
    \ = string.sub(i, i)\n    if char >= 'a' and char <= 'z' then\n      char = char\
    \ - 'a'\n    elseif char >= 'A' and char <= 'Z' then\n      char = char - 'A'\n\
    \    else\n      char = char\n    end\n    table.insert(result, char)\n  end\n\
    \  return table.concat(result, '') -- Join all the characters together.\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_114_minSubArraySum
language: lua
prompt: "-- Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n-- of nums.\n-- Example\nlocal function minSubArraySum(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = minSubArraySum\n\
  \    lu.assertEquals(candidate({2, 3, 4, 1, 2, 4}), 1)\n    lu.assertEquals(candidate({-1,\
  \ -2, -3}), -6)\n    lu.assertEquals(candidate({-1, -2, -3, 2, -10}), -14)\n   \
  \ lu.assertEquals(candidate({-9999999999999999}), -9999999999999999)\n    lu.assertEquals(candidate({0,\
  \ 10, 20, 1000000}), 0)\n    lu.assertEquals(candidate({-1, -2, -3, 10, -5}), -6)\n\
  \    lu.assertEquals(candidate({100, -1, -2, -3, 10, -5}), -6)\n    lu.assertEquals(candidate({10,\
  \ 11, 13, 8, 3, 4}), 3)\n    lu.assertEquals(candidate({100, -33, 32, -1, 0, -2}),\
  \ -33)\n    lu.assertEquals(candidate({-10}), -10)\n    lu.assertEquals(candidate({7}),\
  \ 7)\n    lu.assertEquals(candidate({1, -1}), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local min = math.inf\n    for i = 1, #nums do\n        local sum\
    \ = 0\n        for j = 1, i do\n            sum = sum + nums[j]\n        end\n\
    \        if sum < min then\n            min = sum\n        end\n    end\n    return\
    \ min\nend", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  -- Base case: if the array is empty, return\
    \ 0\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    local subSum = nums[i]\n    for j = i + 1, #nums do\n      subSum =\
    \ subSum + nums[j]\n      if subSum < minSum then\n        minSum = subSum\n \
    \     end\n    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n   \
    \ return 0\n  end", "  -- Base case: empty array\n  if #nums == 0 then\n    return\
    \ 0\n  end", "    local minSum = math.inf\n    for i = 1, #nums do\n        local\
    \ subSum = nums[i]\n        for j = i + 1, #nums do\n            subSum = subSum\
    \ + nums[j]\n            if subSum < minSum then\n                minSum = subSum\n\
    \            end\n        end\n    end\n    return minSum\nend", "\t-- Base case:\
    \ empty array\n\tif #nums == 0 then\n\t\treturn 0\n\tend", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum\
    \ + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0\
    \ then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n  for\
    \ i = 1, #nums do\n    local subSum = sumSubArray(nums, i, i)\n    if subSum <\
    \ minSum then\n      minSum = subSum\n    end\n  end\n  return minSum\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case: if\
    \ the array is empty, return 0\n  if #nums == 0 then\n    return 0\n  end", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n\
    \  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  -- Base case: if the array is empty, return 0\n\
    \  if #nums == 0 then\n    return 0\n  end", "  -- Base case: if the array is\
    \ empty, return 0\n  if #nums == 0 then\n    return 0\n  end", "  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    local currentSum = nums[i] + minSum\n\
    \    if currentSum < minSum then\n      minSum = currentSum\n    end\n  end\n\
    \  return minSum\nend", "    local minSum = math.inf\n    for i = 1, #nums do\n\
    \        local subSum = nums[i]\n        for j = i + 1, #nums do\n           \
    \ subSum = subSum + nums[j]\n            if subSum < minSum then\n           \
    \     minSum = subSum\n            end\n        end\n    end\n    return minSum\n\
    end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n\
    \  return sum\nend", "  -- Base case: if the array is empty, return 0\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n \
    \   sum = sum + nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local currentSum = nums[i] + nums[i - 1]\n \
    \   if currentSum < minSum then\n      minSum = currentSum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSumIndex\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case: empty array\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i = 1,\
    \ #nums do\n    local sum = 0\n    for j = 1, #nums do\n      if j == i then\n\
    \        sum = sum + nums[j]\n      else\n        sum = sum + nums[j] - nums[i]\n\
    \      end\n    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex\
    \ = i\n    end\n  end\n  return minSumIndex, minSum\nend", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ local min = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j =\
    \ 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < min then\n      min\
    \ = sum\n    end\n  end\n  return min\nend", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  -- Base case\n  if\
    \ #nums == 0 then\n    return 0\n  end", "    local minSum = math.inf\n    for\
    \ i = 1, #nums do\n        local sum = 0\n        for j = 1, i do\n          \
    \  sum = sum + nums[j]\n        end\n        if sum < minSum then\n          \
    \  minSum = sum\n        end\n    end\n    return minSum\nend", "  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    local currentSum = nums[i] + minSum\n\
    \    if currentSum < minSum then\n      minSum = currentSum\n    end\n  end\n\
    \  return minSum\nend", "  local min = math.inf\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum\
    \ < min then\n      min = sum\n    end\n  end\n  return min\nend", "  local sum\
    \ = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case: if\
    \ the array is empty, return 0\n  if #nums == 0 then\n    return 0\n  end", " \
    \   local sum = 0\n    for i = 1, #nums do\n        sum = sum + nums[i]\n    end\n\
    \    return sum\nend", "  local minSum = math.inf\n  for i = 1, #nums do\n   \
    \ local subSum = nums[i]\n    for j = i + 1, #nums do\n      subSum = subSum +\
    \ nums[j]\n      if subSum < minSum then\n        minSum = subSum\n      end\n\
    \    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "    local sum = 0\n    for i = 1, #nums do\n        sum\
    \ = sum + nums[i]\n    end\n    return sum\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n   \
    \ return 0\n  end", "  -- Base case: empty array\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local sum = 0\n  local minSum = math.inf\n  for i = 1, #nums do\n\
    \    sum = sum + nums[i]\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "  local minSum = math.inf\n  local minSumIndex\
    \ = 0\n  for i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i +\
    \ 1, #nums do\n      currentSum = currentSum + nums[j]\n      if currentSum <\
    \ minSum then\n        minSum = currentSum\n        minSumIndex = j\n      end\n\
    \    end\n  end\n  return minSumIndex\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "    local minSum = math.inf\n    for i = 1, #nums\
    \ do\n        local sum = 0\n        for j = 1, i do\n            sum = sum +\
    \ nums[j]\n        end\n        if sum < minSum then\n            minSum = sum\n\
    \        end\n    end\n    return minSum\nend", "  -- Base case\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  -- Base case: if the array is empty, return\
    \ 0\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local subSum = nums[i]\n    for j = i + 1, #nums do\n\
    \      subSum = subSum + nums[j]\n      if subSum < minSum then\n        minSum\
    \ = subSum\n      end\n    end\n  end\n  return minSum\nend", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n\
    \  if #nums == 0 then\n    return 0\n  end", "  -- Base case: if the array is\
    \ empty, return 0\n  if #nums == 0 then return 0 end", "\t-- Base case\n\tif #nums\
    \ == 0 then\n\t\treturn 0\n\tend", "  -- Base case: if the array is empty, return\
    \ 0\n  if #nums == 0 then\n    return 0\n  end", "    local sum = 0\n    for i\
    \ = 1, #nums do\n        sum = sum + nums[i]\n    end\n    return sum\nend", " \
    \   local minSum = math.inf\n    for i = 1, #nums do\n        local sum = 0\n\
    \        for j = 1, #nums do\n            if j == i then\n                sum\
    \ = sum + nums[j]\n            else\n                sum = sum + nums[j] - nums[i]\n\
    \            end\n        end\n        if sum < minSum then\n            minSum\
    \ = sum\n        end\n    end\n    return minSum\nend", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum\
    \ + nums[j]\n    end\n    if sum < minSum then\n      minSum = sum\n    end\n\
    \  end\n  return minSum\nend", "\t-- Base case: if the array is empty, return\
    \ 0\n\tif #nums == 0 then\n\t\treturn 0\n\tend", "  -- Base case: if the array\
    \ is empty, return 0\n  if #nums == 0 then\n    return 0\n  end", "  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    local subSum = nums[i]\n    for j = i\
    \ + 1, #nums do\n      subSum = subSum + nums[j]\n      if subSum < minSum then\n\
    \        minSum = subSum\n      end\n    end\n  end\n  return minSum\nend", " \
    \ local minSum = math.inf\n  for i = 1, #nums do\n    local currentSum = nums[i]\n\
    \    for j = i + 1, #nums do\n      currentSum = currentSum + nums[j]\n      if\
    \ currentSum < minSum then\n        minSum = currentSum\n      end\n    end\n\
    \  end\n  return minSum\nend", "  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n\
    \    if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base\
    \ case\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i + 1, #nums\
    \ do\n      currentSum = currentSum + nums[j]\n      if currentSum < minSum then\n\
    \        minSum = currentSum\n      end\n    end\n  end\n  return minSum\nend",
  "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ minSum = math.inf\n  for i = 1, #nums do\n    local subSum = nums[i]\n    for\
    \ j = i + 1, #nums do\n      subSum = subSum + nums[j]\n      if subSum < minSum\
    \ then\n        minSum = subSum\n      end\n    end\n  end\n  return minSum\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base\
    \ case: if the array is empty, return 0\n  if #nums == 0 then\n    return 0\n\
    \  end", "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local\
    \ currentSum = nums[i] + nums[i - 1]\n    if currentSum < minSum then\n      minSum\
    \ = currentSum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0 then\n\
    \    return 0\n  end", "  -- Base case: empty array\n  if #nums == 0 then\n  \
    \  return 0\n  end", "    local sum = 0\n    for i = 1, #nums do\n        sum\
    \ = sum + nums[i]\n    end\n    return sum\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case: if the array is empty, return\
    \ 0\n  if #nums == 0 then\n    return 0\n  end", "\t-- Base case\n\tif #nums ==\
    \ 0 then\n\t\treturn 0\n\tend", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ minSum = math.inf\n  for i = 1, #nums do\n    local currentSum = nums[i]\n \
    \   for j = i + 1, #nums do\n      currentSum = currentSum + nums[j]\n      if\
    \ currentSum < minSum then\n        minSum = currentSum\n      end\n    end\n\
    \  end\n  return minSum\nend", "    local minSum = math.inf\n    for i = 1, #nums\
    \ do\n        local subSum = nums[i]\n        for j = i + 1, #nums do\n      \
    \      subSum = subSum + nums[j]\n            if subSum < minSum then\n      \
    \          minSum = subSum\n            end\n        end\n    end\n    return\
    \ minSum\nend", "  local minSum = math.inf\n  local minSumIndex = 0\n  for i =\
    \ 1, #nums do\n    local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n\
    \    end\n    if sum < minSum then\n      minSum = sum\n      minSumIndex = i\n\
    \    end\n  end\n  return minSumIndex, minSum\nend", "  -- Base case: if the array\
    \ is empty, return 0\n  if #nums == 0 then\n    return 0\n  end", "  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    local currentSum = nums[i]\n    for j\
    \ = i + 1, #nums do\n      currentSum = math.min(currentSum + nums[j], minSum)\n\
    \    end\n    minSum = math.min(currentSum, minSum)\n  end\n  return minSum\n\
    end", "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end\n\
    \  -- Base case: only one element\n  if #nums == 1 then\n    return nums[1]\n\
    \  end\n  -- Recursive case: find minimum sum of any non-empty sub-array of nums\n\
    \  local minSum = math.inf\n  for i = 1, #nums do\n    local subSum = minSubArraySum(nums[i+1:])\n\
    \    if subSum < minSum then\n      minSum = subSum\n    end\n  end\n  return\
    \ minSum\nend", "    local minSum = math.inf\n    for i = 1, #nums do\n      \
    \  local sum = 0\n        for j = 1, i do\n            sum = sum + nums[j]\n \
    \       end\n        if sum < minSum then\n            minSum = sum\n        end\n\
    \    end\n    return minSum\nend", "    local minSum = math.inf\n    for i = 1,\
    \ #nums do\n        local sum = 0\n        for j = 1, i do\n            sum =\
    \ sum + nums[j]\n        end\n        if sum < minSum then\n            minSum\
    \ = sum\n        end\n    end\n    return minSum\nend", "  -- Base case\n  if\
    \ #nums == 0 then\n    return 0\n  end", "  local sum = 0\n  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n  \
    \    minSum = sum\n    end\n  end\n  return minSum\nend", "    local minSum =\
    \ math.inf\n    for i = 1, #nums do\n        local sum = 0\n        for j = 1,\
    \ i do\n            sum = sum + nums[j]\n        end\n        if sum < minSum\
    \ then\n            minSum = sum\n        end\n    end\n    return minSum\nend",
  "    local minSum = math.inf\n    for i = 1, #nums do\n        local subSum = nums[i]\n\
    \        for j = i + 1, #nums do\n            subSum = subSum + nums[j]\n    \
    \        if subSum < minSum then\n                minSum = subSum\n          \
    \  end\n        end\n    end\n    return minSum\nend", "    local sum = 0\n  \
    \  for i = 1, #nums do\n        sum = sum + nums[i]\n    end\n    return sum\n\
    end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0 then return\
    \ 0 end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base\
    \ case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case:\
    \ empty array\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local subSum = nums[i]\n    for j = i + 1, #nums do\n\
    \      subSum = subSum + nums[j]\n      if subSum < minSum then\n        minSum\
    \ = subSum\n      end\n    end\n  end\n  return minSum\nend", "  local sum = 0\n\
    \  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\nend", " \
    \ -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ min = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n\
    \      sum = sum + nums[j]\n    end\n    if sum < min then\n      min = sum\n\
    \    end\n  end\n  return min\nend", "\tlocal sum = 0\n\tlocal minSum = math.inf",
  "    local minSum = math.inf\n    for i = 1, #nums do\n        local subSum = nums[i]\n\
    \        for j = i + 1, #nums do\n            subSum = subSum + nums[j]\n    \
    \        if subSum < minSum then\n                minSum = subSum\n          \
    \  end\n        end\n    end\n    return minSum\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n \
    \   sum = sum + nums[i]\n  end\n  return sum\nend", "  -- Base case: empty array\n\
    \  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "    local minSum = math.inf\n    for i = 1, #nums\
    \ do\n        local subSum = nums[i]\n        for j = i + 1, #nums do\n      \
    \      subSum = subSum + nums[j]\n            if subSum < minSum then\n      \
    \          minSum = subSum\n            end\n        end\n    end\n    return\
    \ minSum\nend", "  -- Base case: if the array is empty, return 0\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  --\
    \ Base case: if the array is empty, return 0\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ minSum = math.inf\n  local minSumIndex = 0\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum\
    \ < minSum then\n      minSum = sum\n      minSumIndex = i\n    end\n  end\n \
    \ return minSumIndex, minSum\nend", "  -- Base case: empty array\n  if #nums ==\
    \ 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0\
    \ then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0\
    \ then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n\
    \  end", "  local sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n\
    \  return sum\nend", "  -- Base case: if the array is empty, return 0\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n   \
    \ return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  --\
    \ Base case: if the array is empty, return 0\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local\
    \ sum = 0\n  for i = 1, #nums do\n    sum = sum + nums[i]\n  end\n  return sum\n\
    end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0 then\n\
    \    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n \
    \ end", "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end", "  --\
    \ Base case: if the array is empty, return 0\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n\
    \  end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0 then\n\
    \    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n \
    \ end", "  local minSum = math.inf\n  for i = 1, #nums do\n    local subSum =\
    \ nums[i]\n    for j = i + 1, #nums do\n      subSum = subSum + nums[j]\n    \
    \  if subSum < minSum then\n        minSum = subSum\n      end\n    end\n  end\n\
    \  return minSum\nend", "    local sum = 0\n    for i = 1, #nums do\n        sum\
    \ = sum + nums[i]\n    end\n    return sum\nend", "  -- Base case: empty array\n\
    \  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n  local\
    \ minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i\
    \ do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum\
    \ = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\nend", " \
    \ -- Base case: if the array is empty, return 0\n  if #nums == 0 then return 0\
    \ end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local min = math.inf\n  for i = 1, #nums do\n    local\
    \ sum = 0\n    for j = 1, #nums do\n      sum = sum + nums[j]\n      if sum <\
    \ min then\n        min = sum\n      end\n    end\n  end\n  return min\nend",
  "    local minSum = math.inf\n    for i = 1, #nums do\n        local subSum = nums[i]\n\
    \        for j = i + 1, #nums do\n            subSum = subSum + nums[j]\n    \
    \        if subSum < minSum then\n                minSum = subSum\n          \
    \  end\n        end\n    end\n    return minSum\nend", "  -- Base case\n  if #nums\
    \ == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n   \
    \ return 0\n  end", "  -- Base case: empty array\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  local minSum = math.inf\n  for i = 1, #nums do\n    local subSum\
    \ = nums[i]\n    for j = i + 1, #nums do\n      subSum = subSum + nums[j]\n  \
    \    if subSum < minSum then\n        minSum = subSum\n      end\n    end\n  end\n\
    \  return minSum\nend", "    local sum = 0\n    for i = 1, #nums do\n        sum\
    \ = sum + nums[i]\n    end\n    return sum\nend", "  local minSum = math.inf\n\
    \  local minSumIndex = 0\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n      minSumIndex = i\n    end\n  end\n  return minSumIndex\n\
    end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "\tlocal minSum\
    \ = math.inf\n\tlocal minSumIndex = 0\n\tfor i = 1, #nums do\n\t\tlocal sum =\
    \ 0\n\t\tfor j = 1, i do\n\t\t\tsum = sum + nums[j]\n\t\tend\n\t\tif sum < minSum\
    \ then\n\t\t\tminSum = sum\n\t\t\tminSumIndex = i\n\t\tend\n\tend\n\treturn minSumIndex\n\
    end", "  -- Base case: empty array\n  if #nums == 0 then\n    return 0\n  end",
  "    local sum = 0\n    for i = 1, #nums do\n        sum = sum + nums[i]\n    end\n\
    \    return sum\nend", "    local minSum = math.inf\n    for i = 1, #nums do\n\
    \        local sum = 0\n        for j = 1, i do\n            sum = sum + nums[j]\n\
    \        end\n        if sum < minSum then\n            minSum = sum\n       \
    \ end\n    end\n    return minSum\nend", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local subSum = nums[i]\n    for j = i + 1, #nums do\n\
    \      subSum = subSum + nums[j]\n      if subSum < minSum then\n        minSum\
    \ = subSum\n      end\n    end\n  end\n  return minSum\nend", "  -- Base case:\
    \ if the array is empty, return 0\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local subSum = nums[i]\n    for j = i + 1, #nums do\n\
    \      subSum = subSum + nums[j]\n      if subSum < minSum then\n        minSum\
    \ = subSum\n      end\n    end\n  end\n  return minSum\nend", "  -- Base case:\
    \ if the array is empty, return 0\n  if #nums == 0 then\n    return 0\n  end",
  "  -- Base case: if the array is empty, return 0\n  if #nums == 0 then\n    return\
    \ 0\n  end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0\
    \ then\n    return 0\n  end", "  local sum = 0\n  local minSum = math.inf\n  for\
    \ i = 1, #nums do\n    sum = sum + nums[i]\n    if sum < minSum then\n      minSum\
    \ = sum\n    end\n  end\n  return minSum\nend", "    local minSum = math.inf\n\
    \    for i = 1, #nums do\n        local subSum = nums[i]\n        for j = i +\
    \ 1, #nums do\n            subSum = subSum + nums[j]\n            if subSum <\
    \ minSum then\n                minSum = subSum\n            end\n        end\n\
    \    end\n    return minSum\nend", "  -- Base case\n  if #nums == 0 then\n   \
    \ return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n  end",
  "  local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j\
    \ = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum then\n  \
    \    minSum = sum\n    end\n  end\n  return minSum\nend", "  local minSum = math.inf\n\
    \  for i = 1, #nums do\n    local currentSum = nums[i]\n    for j = i + 1, #nums\
    \ do\n      currentSum = currentSum + nums[j]\n      if currentSum < minSum then\n\
    \        minSum = currentSum\n      end\n    end\n  end\n  return minSum\nend",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "    local minSum =\
    \ math.inf\n    for i = 1, #nums do\n        local subSum = nums[i]\n        for\
    \ j = i + 1, #nums do\n            subSum = subSum + nums[j]\n            if subSum\
    \ < minSum then\n                minSum = subSum\n            end\n        end\n\
    \    end\n    return minSum\nend", "  -- Base case: if the array is empty, return\
    \ 0\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case: if the array\
    \ is empty, return 0\n  if #nums == 0 then\n    return 0\n  end", "  local minSum\
    \ = math.inf\n  for i = 1, #nums do\n    local sum = 0\n    for j = 1, i do\n\
    \      sum = sum + nums[j]\n    end\n    if sum < minSum then\n      minSum =\
    \ sum\n    end\n  end\n  return minSum\nend", "  -- Base case\n  if #nums == 0\
    \ then\n    return 0\n  end", "  local sum = 0\n  for i = 1, #nums do\n    sum\
    \ = sum + nums[i]\n  end\n  return sum\nend", "  local sum = 0\n  for i = 1, #nums\
    \ do\n    sum = sum + nums[i]\n  end\n  return sum\nend", "    local minSum =\
    \ math.inf\n    for i = 1, #nums do\n        local subSum = nums[i]\n        for\
    \ j = i + 1, #nums do\n            subSum = subSum + nums[j]\n            if subSum\
    \ < minSum then\n                minSum = subSum\n            end\n        end\n\
    \    end\n    return minSum\nend", "  local minSum = math.inf\n  for i = 1, #nums\
    \ do\n    local subSum = nums[i]\n    for j = i + 1, #nums do\n      subSum =\
    \ subSum + nums[j]\n      if subSum < minSum then\n        minSum = subSum\n \
    \     end\n    end\n  end\n  return minSum\nend", "  -- Base case: if the array\
    \ is empty, return 0\n  if #nums == 0 then\n    return 0\n  end", "    local minSum\
    \ = math.inf\n    for i = 1, #nums do\n        local sum = 0\n        for j =\
    \ 1, i do\n            sum = sum + nums[j]\n        end\n        if sum < minSum\
    \ then\n            minSum = sum\n        end\n    end\n    return minSum\nend",
  "  -- Base case\n  if #nums == 0 then\n    return 0\n  end", "  -- Base case\n \
    \ if #nums == 0 then\n    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n\
    \    return 0\n  end", "  local minSum = math.inf\n  for i = 1, #nums do\n   \
    \ local sum = 0\n    for j = 1, i do\n      sum = sum + nums[j]\n    end\n   \
    \ if sum < minSum then\n      minSum = sum\n    end\n  end\n  return minSum\n\
    end", "  -- Base case: if the array is empty, return 0\n  if #nums == 0 then\n\
    \    return 0\n  end", "  -- Base case\n  if #nums == 0 then\n    return 0\n \
    \ end", "  local minSum = math.inf\n  for i = 1, #nums do\n    local sum = 0\n\
    \    for j = 1, i do\n      sum = sum + nums[j]\n    end\n    if sum < minSum\
    \ then\n      minSum = sum\n    end\n  end\n  return minSum\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

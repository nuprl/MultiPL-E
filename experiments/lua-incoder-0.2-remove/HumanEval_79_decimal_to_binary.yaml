name: HumanEval_79_decimal_to_binary
language: lua
prompt: "-- You will be given a number in decimal form and your task is to convert\
  \ it to\n-- binary format. The function should return a string, with each character\
  \ representing a binary\n-- number. Each character in the string will be '0' or\
  \ '1'.\n-- There will be an extra couple of characters 'db' at the beginning and\
  \ at the end of the string.\n-- The extra characters are there to help with the\
  \ format.\n-- Examples:\nlocal function decimal_to_binary(decimal)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = decimal_to_binary\n\
  \    lu.assertEquals(candidate(0), 'db0db')\n    lu.assertEquals(candidate(32),\
  \ 'db100000db')\n    lu.assertEquals(candidate(103), 'db1100111db')\n    lu.assertEquals(candidate(15),\
  \ 'db1111db')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- Your code here\nend", "  -- Your code here\nend", "    -- Your\
    \ code here\nend", "    decimal = tonumber(decimal)\n    local binary = \"\"\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal", "    -- Your code here\nend", "    local binary = \"\"\n    local\
    \ decimal = decimal\n    local decimal_length = math.floor(math.log(decimal, 2))\n\
    \    local decimal_remainder = decimal % 2\n    local decimal_remainder_length\
    \ = math.floor(math.log(decimal_remainder, 2))\n    local decimal_remainder_remainder\
    \ = decimal_remainder % 2\n    local decimal_remainder_remainder_length = math.floor(math.log(decimal_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder = decimal_remainder_remainder\
    \ % 2\n    local decimal_remainder_remainder_remainder_length = math.floor(math.log(decimal_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder\
    \ % 2\n    local decimal_remainder_remainder_remainder_remainder_length = math.floor(math.log(decimal_remainder_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder_remainder\
    \ % 2\n    local decimal_remainder_remainder_remainder_remainder_remainder_length\
    \ = math.floor(math.log(decimal_remainder_remainder_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder % 2\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = math.floor(math.log(decimal_remainder_remainder_remainder_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder % 2\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = math.floor(math.log(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = math.floor(math.log(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = math.floor(math.log(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = math.floor(math.log(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder,\
    \ 2))\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_length\
    \ = math.floor(math.log(decimal_remainder_remainder_", "  -- Your code here\n\
    end", "  -- Your code here\nend", "\t-- Your code here\nend", "    -- Your code\
    \ here\nend", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "    local binary = \"\"\
    \n    local decimal = tonumber(decimal)\n    local remainder", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "  -- Your code here\nend", "\t-- Your\
    \ code here\nend", "  -- Your code here\nend", "    -- Your code here\nend", " \
    \ -- Your code here\nend", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    local remainder", "  -- Your code here\nend", "  -- Your code here\nend",
  "    local binary = \"\"\n    local decimal_str = decimal:tostring()\n    local\
    \ decimal_len = #decimal_str\n    local decimal_remainder = decimal_str:sub(1,\
    \ decimal_len)\n    local decimal_remainder_len = #decimal_remainder\n    local\
    \ decimal_remainder_remainder = decimal_remainder:sub(1, decimal_remainder_len)\n\
    \    local decimal_remainder_remainder_len = #decimal_remainder_remainder\n  \
    \  local decimal_remainder_remainder_remainder = decimal_remainder_remainder:sub(1,\
    \ decimal_remainder_remainder_len)\n    local decimal_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder\n    local decimal_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder:sub(1, decimal_remainder_remainder_remainder_len)\n\
    \    local decimal_remainder_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder_remainder:sub(1,\
    \ decimal_remainder_remainder_remainder_remainder_len)\n    local decimal_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder:sub(1, decimal_remainder_remainder_remainder_remainder_remainder_len)\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder\n   \
    \ local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder:sub(1,\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder_len)\n \
    \   local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder:sub(1,\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len)\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_", "    -- Your code here\n\
    end", "\t-- Your code here\nend", "    -- Your code here\nend", "    local binary\
    \ = \"\"\n    local decimal = decimal\n    while decimal > 0 do\n        decimal\
    \ = decimal - 2\n        binary = binary .. \"1\"\n    end\n    return binary\
    \ .. \"db\"\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "    local binary = \"\"\n    local decimal = decimal\n\
    \    while decimal > 0 do\n        decimal = decimal - 2\n        binary = binary\
    \ .. \"1\"\n    end\n    binary = binary .. \"0\"\n    return binary\nend", "\t\
    -- Your code here\nend", "    decimal = decimal or 0\n    local binary = \"\"\n\
    \    local decimal = tonumber(decimal)\n    local remainder\n    local remainder_decimal\n\
    \    local remainder_binary\n    local decimal_remainder\n    local decimal_remainder_binary\n\
    \    local binary_remainder\n    local binary_remainder_decimal\n    local binary_remainder_binary\n\
    \    local decimal_remainder_binary\n    local decimal_remainder_decimal\n   \
    \ local binary_remainder_decimal\n    local binary_remainder_binary\n    local\
    \ decimal_remainder_decimal\n    local binary_remainder_decimal\n    local binary_remainder_binary\n\
    \    local decimal_remainder_decimal\n    local binary_remainder_decimal\n   \
    \ local binary_remainder_binary\n    local decimal_remainder_binary\n    local\
    \ binary_remainder_decimal\n    local binary_remainder_binary\n    local decimal_remainder_decimal\n\
    \    local binary_remainder_decimal\n    local binary_remainder_binary\n    local\
    \ decimal_remainder_binary\n    local binary_remainder_decimal\n    local binary_remainder_binary\n\
    \    local decimal_remainder_decimal\n    local binary_remainder_decimal\n   \
    \ local binary_remainder_binary\n    local decimal_remainder_binary\n    local\
    \ binary_remainder_decimal\n    local binary_remainder_binary\n    local decimal_remainder_decimal\n\
    \    local binary_remainder_decimal\n    local binary_remainder_binary\n    local\
    \ decimal_remainder_binary\n    local binary_remainder_decimal\n    local binary_remainder_binary\n\
    \    local decimal_remainder_decimal\n    local binary_remainder_decimal\n   \
    \ local binary_remainder_binary\n    local decimal_remainder_decimal\n    local\
    \ binary_remainder_decimal\n    local binary_remainder_binary\n    local decimal_remainder_binary\n\
    \    local binary_remainder_decimal\n    local binary_remainder_binary\n    local\
    \ decimal_remainder_decimal\n    local binary_remainder_decimal\n    local binary_remainder_binary\n\
    \    local decimal_remainder_binary\n    local binary_remainder_decimal\n    local\
    \ binary_remainder_binary\n    local decimal_remainder_decimal\n    local binary_remainder_decimal\n\
    \    local binary_remainder_binary\n    local decimal_remainder_decimal\n    local\
    \ binary_remainder_decimal\n    local binary_remainder_binary\n    local decimal_remainder_decimal\n\
    \    local binary_remainder_decimal\n    local binary_remainder_binary\n    local\
    \ decimal_remainder_binary\n    local binary_remainder_decimal\n    local binary_remainder_binary\n\
    \    local decimal_remainder_decimal\n    local binary_remainder_decimal\n   \
    \ local binary_remainder_binary\n    local decimal_remainder_binary\n    local\
    \ binary_remainder_", "    -- Your code here\nend", "\t-- Your code here\nend",
  "    -- Your code here\nend", "    -- Your code here\nend", "  -- Your code here\n\
    end", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n    if\
    \ decimal > 0 and decimal <= 255 then\n        binary = binary .. \"0\"\n    elseif\
    \ decimal > 255 and decimal <= 65535 then\n        binary = binary .. \"1\"\n\
    \    elseif decimal > 65535 and decimal <= 4294967295 then\n        binary = binary\
    \ .. \"db\"\n    elseif decimal > 4294967295 then\n        binary = binary ..\
    \ \"db\"\n        binary = binary .. \"0\"\n    end\n    return binary\nend",
  "    local binary = \"\"\n    local decimal = decimal\n    local decimal_str = tostring(decimal)\n\
    \    local decimal_len = #decimal_str\n    local decimal_decimal_len = decimal_len\
    \ - 1\n    local decimal_decimal_decimal_len = decimal_decimal_len - 1\n    local\
    \ decimal_decimal_decimal_decimal_len = decimal_decimal_decimal_len - 1\n    local\
    \ decimal_decimal_decimal_decimal_decimal_len = decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_len = decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_len =\
    \ decimal_decimal_decimal_decimal_decimal_decimal_len - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "    local binary = \"\"\n    local decimal_str = tostring(decimal)\n\
    \    local decimal_len = #decimal_str\n    local decimal_remainder = decimal\n\
    \    local decimal_remainder_len = #decimal_remainder\n    local decimal_remainder_remainder\
    \ = decimal_remainder\n    local decimal_remainder_remainder_len = #decimal_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder = decimal_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_", "    -- Your code here\nend",
  "    -- Your code here\nend", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n", "  -- Your code here\nend", "   \
    \ -- Your code here\nend", "\t-- Your code here\nend", "  -- Your code here\n\
    end", "    -- Your code here\nend", "  -- Your code here\nend", "    decimal =\
    \ tonumber(decimal)\n    if decimal == nil then\n        return 'nil'\n    end\n\
    \    local binary = \"\"\n    local decimal_power = math.pow(10, decimal)\n  \
    \  for i = 1, decimal do\n        local remainder = math.floor(decimal_power %\
    \ 2)\n        decimal_power = decimal_power / 2\n        if remainder == 1 then\n\
    \            binary = \"1\" + binary\n        else\n            binary = \"0\"\
    \ + binary\n        end\n    end\n    return \"db\" + binary + \"db\"\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "\t-- Your code here\nend", "  -- Your code\
    \ here\nend", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    local decimal_str = tostring(decimal)\n    local decimal_len = #decimal_str\n\
    \    local decimal_remainder\n    local decimal_remainder_str\n    local decimal_remainder_len\n\
    \    local decimal_remainder_remainder\n    local decimal_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_len\n    local decimal_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_str\n    local decimal_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder\n    local decimal_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_len\n    local decimal_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_str\n   \
    \ local decimal_remainder_remainder_remainder_remainder_remainder_len\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\n  \
    \  local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_len\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_",
  "  -- Your code here\nend", "  -- Your code here\nend", "\t-- Your code here\nend",
  "  -- Your code here\nend", "    -- Your code here\nend", "    -- Your code here\n\
    end", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n    local\
    \ remainder\n    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n\
    \    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power ", "    -- Your code here\nend", "   -- Your code\
    \ here\nend", "    -- Your code here\nend", "  -- Your code here\nend", "    --\
    \ Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "    local binary = \"\"\n    local decimal_power = math.pow(10, decimal)\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n", "\t-- Your code here\nend", "  -- Your\
    \ code here\nend", "    -- Your code here\nend", "  -- Your code here\nend", " \
    \   local binary = \"\"\n    local decimal = tonumber(decimal)\n    local remainder\
    \ = decimal\n    while remainder ~= 0 do\n        binary = binary .. \"1\" ..\
    \ math.floor(remainder / 2)\n        remainder = remainder % 2\n    end\n    if\
    \ remainder > 0 then\n        binary = binary .. \"0\"\n    end\n    return binary\
    \ .. \"db\"\nend", "  -- Your code here\nend", "  -- Your code here\nend", "\t\
    -- Your code here\nend", "    decimal = tonumber(decimal)\n    if decimal == nil\
    \ then\n        return 'nil'\n    end\n    local binary = \"\"\n    local remainder\
    \ = decimal\n    while remainder ~= 0 do\n        binary = string.format(\"%c%c\"\
    , remainder, binary)\n        remainder = remainder - remainder % 2\n    end\n\
    \    binary = string.format(\"%cdb\", binary)\n    return binary\nend", "  --\
    \ Your code here\nend", "    -- Your code here\nend", "    -- Your code here\n\
    end", "   -- Your code here\nend", "    decimal = tonumber(decimal)\n    if decimal\
    \ < 0 then\n        decimal = -decimal\n        decimal = -decimal\n    end\n\
    \    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary\
    \ = binary .. \"1\"\n        decimal = decimal - 1\n        i = i + 1\n    end\n\
    \    binary = binary .. \"0\"\n    binary = binary .. \"db\"\n    return binary\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local remainder\n    while decimal ~= 0 do\n   \
    \     remainder = decimal % 2\n        decimal = decimal / 2\n        binary =\
    \ binary .. \"1\" .. remainder\n    end\n    binary = binary .. \"db\"\n    return\
    \ binary\nend", "    decimal = decimal:lower()\n    local binary = \"\"\n    local\
    \ decimal_index = 1\n    while decimal_index <= #decimal do\n        local remainder\
    \ = math.floor((decimal:len() - decimal_index) * 2)\n        local remainder_string\
    \ = string.format(\"%c\", remainder)\n        local remainder_binary = string.format(\"\
    %c\", remainder == 0 and '0' or '1')\n        local remainder_binary_string =\
    \ string.format(\"%c\", remainder_binary)\n        binary = binary .. remainder_string\n\
    \        binary = binary .. remainder_binary_string\n        decimal_index = decimal_index\
    \ + 1\n    end\n    binary = binary .. 'db'\n    return binary\nend", "  -- Your\
    \ code here\nend", "   -- Your code here\nend", "    decimal = tonumber(decimal)\n\
    \    local binary = \"\"\n    local i = 0\n    while decimal > 0 do\n        binary\
    \ = binary .. \"1\" .. math.floor(decimal % 2)\n        decimal = math.floor(decimal\
    \ / 2)\n        i = i + 1\n    end\n    binary = binary .. \"0\"\n    if i ~=\
    \ 0 then\n        binary = binary .. \"db\"\n    end\n    return binary\nend",
  "  -- Your code here\nend", "\t-- Your code here\nend", "    -- Your code here\n\
    end", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n    local\
    \ decimal_power = math.floor(math.log(decimal, 2))\n    local decimal_power =\
    \ decimal_power + 2\n    local decimal_power = decimal_power % 2\n    local decimal_power\
    \ = decimal_power + 2\n    local decimal_power = decimal_power % 2\n    local\
    \ decimal_power = decimal_power + 2\n    local decimal_power = decimal_power %\
    \ 2\n    local decimal_power = decimal_power + 2\n    local decimal_power = decimal_power\
    \ % 2\n    local decimal_power = decimal_power + 2\n    local decimal_power =\
    \ decimal_power % 2\n    local decimal_power = decimal_power + 2\n    local decimal_power\
    \ = decimal_power % 2\n    local decimal_power = decimal_power + 2\n    local\
    \ decimal_power = decimal_power % 2\n    local decimal_power = decimal_power +\
    \ 2\n    local decimal_power = decimal_power % 2\n    local decimal_power = decimal_power\
    \ + 2\n    local decimal_power = decimal_power % 2\n    local decimal_power =\
    \ decimal_power + 2\n    local decimal_power = decimal_power % 2\n    local decimal_power\
    \ = decimal_power + 2\n    local decimal_power = decimal_power % 2\n    local\
    \ decimal_power = decimal_power + 2\n    local decimal_power = decimal_power %\
    \ 2\n    local decimal_power = decimal_power + 2\n    local decimal_power = decimal_power\
    \ % 2\n    local decimal_power = decimal_power + 2\n    local decimal_power =\
    \ decimal_power % 2\n    local decimal_power = decimal_power + 2\n    local decimal_power\
    \ = decimal_power % 2\n    local decimal_power = decimal_power + 2\n    local\
    \ decimal_power = decimal_power % 2\n    local decimal_power = decimal_power +\
    \ 2\n    local decimal_power = decimal_power % 2\n    local decimal_power = decimal_power\
    \ + 2\n    local decimal_power = decimal_power % 2\n    local decimal_power =\
    \ decimal_power + 2\n    local decimal_power = decimal_power % 2\n    local decimal_power\
    \ = decimal_power + 2\n    local decimal_power = decimal_power % 2\n    local\
    \ decimal_power = decimal_power + 2\n    local decimal_power = decimal_power %\
    \ 2\n    local decimal_power = decimal_power + 2\n    local decimal_power = decimal_power\
    \ % 2\n    local decimal_power = decimal_power + 2\n    local decimal_power =\
    \ decimal_power % 2\n    local decimal_power = decimal_power + 2\n    local decimal_power\
    \ = decimal_power % 2\n    local decimal_pow", "\t-- Your code here\nend", "\t\
    -- Your code here\nend", "   -- Your code here\nend", "    decimal = decimal or\
    \ 0\n    local binary = \"\"\n    local decimalDigits = math.floor(math.log(decimal,\
    \ 2))\n    local binaryDigits = math.pow(10, decimalDigits)\n    local decimalPart\
    \ = decimal\n    local binaryPart = 1\n    local decimalDigit\n    local binaryDigit\n\
    \    for i = 1, decimalDigits do\n        decimalDigit = math.floor(decimalPart\
    \ / binaryDigits)\n        binaryDigit = decimalPart % binaryDigits\n        decimalPart\
    \ = decimalPart\n        binaryPart = binaryPart\n        binary = binary .. binaryDigit\n\
    \    end\n    binary = binary .. binaryDigit\n    return binary .. \"db\"\nend",
  "    local binary = \"\"\n    local decimal = tonumber(decimal)\n    local decimal_str\
    \ = tostring(decimal)\n    local decimal_len = #decimal_str\n    local decimal_remainder\
    \ = decimal % 2\n    local decimal_remainder_str = tostring(decimal_remainder)\n\
    \    local decimal_remainder_len = #decimal_remainder_str\n    local decimal_remainder_remainder\
    \ = decimal_remainder % 2\n    local decimal_remainder_remainder_str = tostring(decimal_remainder_remainder)\n\
    \    local decimal_remainder_remainder_len = #decimal_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder = decimal_remainder_remainder\
    \ % 2\n    local decimal_remainder_remainder_remainder_str = tostring(decimal_remainder_remainder_remainder)\n\
    \    local decimal_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder\
    \ % 2\n    local decimal_remainder_remainder_remainder_remainder_str = tostring(decimal_remainder_remainder_remainder_remainder)\n\
    \    local decimal_remainder_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder = decimal_remainder_remainder_remainder_remainder\
    \ % 2\n    local decimal_remainder_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder_remainder)\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder % 2\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder_remainder_remainder)\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder_remainder % 2\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder)\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remain", "  --\
    \ Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "    -- Your code here\n\
    end", "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local i =\
    \ 0\n    while decimal > 0 do\n        binary = binary .. \"1\"\n        decimal\
    \ = decimal - 1\n        i = i + 1\n    end\n    binary = binary .. \"0\"\n  \
    \  binary = binary .. \"db\"\n    return binary\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "\t-- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "\t-- Your code here\nend", "  -- Your\
    \ code here\nend", "    -- Your code here\nend", "    -- Your code here\nend",
  "  -- Your code here\nend", "    -- Your code here\nend", "  -- Your code here\n\
    end", "    decimal = tonumber(decimal)\n    local binary = \"\"\n    local decimal\
    \ = decimal\n    while decimal > 0 do\n        binary = binary .. \"1\"\n    \
    \    decimal = decimal - 1\n    end\n    return binary .. \"db\"\nend", "\t--\
    \ Your code here\nend", "\t-- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    if decimal < 0 then\n        error(\"Decimal must be positive\")\n    end\n\
    \    if decimal > 0 then\n        decimal = decimal % 2\n        while decimal\
    \ > 0 do\n            binary = binary .. \"1\"\n            decimal = decimal\
    \ / 2\n        end\n    end\n    return binary .. \"db\"\nend", "  -- Your code\
    \ here\nend", "\t-- Your code here\nend", "    -- Your code here\nend", "    --\
    \ Your code here\nend", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    local decimal_power = math.pow(10, math.floor(math.log10(decimal)))\n   \
    \ local decimal_mod = decimal % decimal_power\n    local decimal_rem = decimal\
    \ - decimal_mod\n    local decimal_rem_power = math.pow(10, math.floor(math.log10(decimal_rem)))\n\
    \    local decimal_rem_mod = decimal_rem % decimal_rem_power\n    local decimal_rem_rem\
    \ = decimal_rem - decimal_rem_mod\n    local decimal_rem_rem_power = math.pow(10,\
    \ math.floor(math.log10(decimal_rem_rem)))\n    local decimal_rem_rem_mod = decimal_rem_rem\
    \ % decimal_rem_rem_power\n    local decimal_rem_rem_rem = decimal_rem_rem - decimal_rem_rem_mod\n\
    \    local decimal_rem_rem_rem_power = math.pow(10, math.floor(math.log10(decimal_rem_rem_rem)))\n\
    \    local decimal_rem_rem_rem_mod = decimal_rem_rem_rem % decimal_rem_rem_rem_power\n\
    \    local decimal_rem_rem_rem_rem = decimal_rem_rem_rem - decimal_rem_rem_rem_mod\n\
    \    local decimal_rem_rem_rem_rem_power = math.pow(10, math.floor(math.log10(decimal_rem_rem_rem_rem)))\n\
    \    local decimal_rem_rem_rem_rem_mod = decimal_rem_rem_rem_rem % decimal_rem_rem_rem_rem_power\n\
    \    local decimal_rem_rem_rem_rem_rem = decimal_rem_rem_rem_rem - decimal_rem_rem_rem_rem_mod\n\
    \    local decimal_rem_rem_rem_rem_rem_power = math.pow(10, math.floor(math.log10(decimal_rem_rem_rem_rem_rem)))\n\
    \    local decimal_rem_rem_rem_rem_rem_mod = decimal_rem_rem_rem_rem_rem % decimal_rem_rem_rem_rem_rem_power\n\
    \    local decimal_rem_rem_rem_rem_rem_rem = decimal_rem_rem_rem_rem_rem - decimal_rem_rem_rem_rem_rem_mod\n\
    \    local decimal_rem_rem_rem_rem_rem_rem_power = math.pow(10, math.floor(math.log10(decimal_rem_rem_rem_rem_rem_rem)))\n\
    \    local decimal_rem_rem_rem_rem_rem_rem_mod = decimal_rem_rem_re", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "    local binary = \"\"\n    local\
    \ decimal = tonumber(decimal)\n    if decimal > 0 and decimal < 2 ^ 32 then\n\
    \        -- The decimal number is a valid binary number\n        -- The binary\
    \ number will be the decimal number in binary format\n        -- The binary number\
    \ will be padded with zeros to make it 32 characters long\n        -- The binary\
    \ number will be padded with 'b' at the beginning and end to\n        -- make\
    \ it 32 characters long\n        -- The binary number will be padded with 'd'\
    \ at the beginning and end to\n        -- make it 32 characters long\n       \
    \ -- The binary number will be padded with 'b' at the beginning and end to\n \
    \       -- make it 32 characters long\n        -- The binary number will be padded\
    \ with 'd' at the beginning and end to\n        -- make it 32 characters long\n\
    \        -- The binary number will be padded with 'b' at the beginning and end\
    \ to\n        -- make it 32 characters long\n        -- The binary number will\
    \ be padded with 'd' at the beginning and end to\n        -- make it 32 characters\
    \ long\n        -- The binary number will be padded with 'b' at the beginning\
    \ and end to\n        -- make it 32 characters long\n        -- The binary number\
    \ will be padded with 'd' at the beginning and end to\n        -- make it 32 characters\
    \ long\n        -- The binary number will be padded with 'b' at the beginning\
    \ and end to\n        -- make it 32 characters long\n        -- The binary number\
    \ will be padded with 'd' at the beginning and end to\n        -- make it 32 characters\
    \ long\n        -- The binary number will be padded with 'b' at the beginning\
    \ and end to\n        -- make it 32 characters long\n        -- The binary number\
    \ will be padded with 'd' at the beginning and end to\n        -- make it 32 characters\
    \ long\n        -- The binary number will be padded with 'b' at the beginning\
    \ and end to\n        -- make it 32 characters long\n        -- The binary number\
    \ will be padded with 'd' at the beginning and end to\n        -- make it 32 characters\
    \ long\n        -- The binary number will be padded with 'b' at the beginning\
    \ and end to\n        -- make it 32 characters long\n        -- The binary number\
    \ will be padded with 'd' at the beginning and end to\n        -- make it 32 characters\
    \ long\n        -- The binary number will be padded with 'b' at the beginning\
    \ and end to\n        -- make it 32 characters long\n        -- The binary number\
    \ will be padded with 'd' at the beginning and end to\n        -- make it 32 characters\
    \ long\n        -- The binary number will be padded with 'b' at the beginning\
    \ and end to\n        -- make it 32 characters long\n        -- The binary number\
    \ will be padded with 'd", "    -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "    local binary\
    \ = \"\"\n    local decimal = tonumber(decimal)\n    local decimal_power = math.floor(math.log(decimal,\
    \ 2))\n    local decimal_power = decimal_power + 2\n    local decimal_power =\
    \ decimal_power % 2\n    local decimal_power = decimal_power + 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = decimal_power\
    \ - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power =\
    \ decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local decimal_power\
    \ = decimal_power - 1\n    local decimal_power = decimal_power - 1\n    local\
    \ decimal_power = decimal_power - 1\n    local decimal_power = decimal_power -\
    \ 1\n    local decimal_power = decimal_power - 1\n    local decimal_power = ",
  "    local binary = \"\"\n    local decimal = tonumber(decimal)\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n    local decimal = decimal or 0\n    local decimal\
    \ = decimal or 0\n    local decimal = decimal or 0\n    local decimal = decimal\
    \ or 0\n    local decimal = decimal or 0\n    local decimal = decimal or 0\n \
    \   local decimal = decimal or 0\n    local decimal = decimal or 0\n    local\
    \ decimal = decimal or 0\n", "\t-- Your code here\nend", "    -- Your code here\n\
    end", "  -- Your code here\nend", "   -- Your code here\nend", "\t-- Your code\
    \ here\nend", "    decimal = tonumber(decimal)\n    if decimal == nil then\n \
    \       return 'nil'\n    end\n    decimal = math.floor(decimal)\n    decimal\
    \ = decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.floor(decimal)\n    decimal =\
    \ decimal + decimal\n    decimal = decimal * 2\n    decimal = decimal\n    decimal\
    \ = math.floor(decimal)\n    decimal = decimal + decimal\n    decimal = decimal\
    \ * 2\n    decimal = decimal\n    decimal = math.", "\t-- Your code here\nend",
  "  -- Your code here\nend", "    decimal = decimal * 2\n    local binary = \"\"\n\
    \    local decimal = decimal\n    while decimal > 0 do\n        binary = binary\
    \ .. \"1\"\n        decimal = decimal / 2\n    end\n    return binary .. \"db\"\
    \nend", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "  -- Your code here\nend", "\t-- Your\
    \ code here\nend", "    local binary = \"\"\n    local decimal_str = decimal:reverse()\n\
    \    for i = 1, decimal_str:len() do\n        local decimal_char = decimal_str:sub(i,i)\n\
    \        local bin_char = decimal_char == \"1\" ? \"1\" : \"0\"\n        binary\
    \ = binary .. bin_char\n    end\n    return binary .. \"db\"\nend", "\t-- Your\
    \ code here\nend", "  -- Your code here\nend", "\t-- Your code here\nend", " \
    \ -- Your code here\nend", "    decimal = decimal:lower()\n    local binary =\
    \ \"\"\n    local db = \"\"\n    for i = 1, #decimal do\n        local digit =\
    \ decimal:sub(i,i)\n        if digit == \"1\" then\n            binary = binary\
    \ .. \"1\"\n        elseif digit == \"0\" then\n            binary = binary ..\
    \ \"0\"\n        elseif digit == \"b\" then\n            binary = binary .. \"\
    b\"\n        elseif digit == \"o\" then\n            binary = binary .. \"o\"\n\
    \        elseif digit == \"x\" then\n            binary = binary .. \"x\"\n  \
    \      elseif digit == \"e\" then\n            binary = binary .. \"e\"\n    \
    \    elseif digit == \"+\" then\n            binary = binary .. \"+\"\n      \
    \  elseif digit == \"-\" then\n            binary = binary .. \"-\"\n        elseif\
    \ digit == \"*\" then\n            binary = binary .. \"*\"\n        elseif digit\
    \ == \"/\" then\n            binary = binary .. \"/\"\n        elseif digit ==\
    \ \".\" then\n            binary = binary .. \".\"\n        elseif digit == \"\
    d\" then\n            binary = binary .. \"d\"\n        elseif digit == \"b\"\
    \ then\n            binary = binary .. \"b\"\n        elseif digit == \"o\" then\n\
    \            binary = binary .. \"o\"\n        elseif digit == \"x\" then\n  \
    \          binary = binary .. \"x\"\n        elseif digit == \"e\" then\n    \
    \        binary = binary .. \"e\"\n        elseif digit == \"+\" then\n      \
    \      binary = binary .. \"+\"\n        elseif digit == \"-\" then\n        \
    \    binary = binary .. \"-\"\n        elseif digit == \"*\" then\n          \
    \  binary = binary .. \"*\"\n        elseif digit == \"/\" then\n            binary\
    \ = binary .. \"/\"\n        else\n            binary = binary .. digit\n    \
    \    end\n    end\n    binary = binary .. db\n    return binary\nend", "    local\
    \ binary = \"\"\n    local decimal = decimal\n    local decimal = decimal + decimal\n\
    \    while decimal > 0 do\n        local remainder = decimal % 2\n        decimal\
    \ = decimal / 2\n        binary = remainder .. binary\n    end\n    return binary\n\
    end", "  -- Your code here\nend", "\t-- Your code here\nend", "    local binary\
    \ = \"\"\n    local decimal = tonumber(decimal)\n    local remainder\n    local\
    \ remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary\n    local remainder_decimal\n    local remainder_binary\n\
    \    local remainder_decimal\n    local remainder_binary\n    local remainder_decimal\n\
    \    local remainder_binary", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    local remainder", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    local decimal_str = tostring(decimal)\n    local decimal_len = #decimal_str\n\
    \    local decimal_decimal_len = decimal_len - 1\n    local decimal_decimal_decimal_len\
    \ = decimal_decimal_len - 1\n    local decimal_decimal_decimal_decimal_len = decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_len = decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_len = decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_len =\
    \ decimal_decimal_decimal_decimal_decimal_decimal_decimal_len - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ - 1\n    local decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_len\
    \ = decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_decimal_",
  "  -- Your code here\nend", "    decimal = tonumber(decimal)\n    local binary =\
    \ \"\"\n    local remainder = decimal\n    while remainder ~= 0 do\n        binary\
    \ = binary .. \"1\"\n        remainder = remainder - 2\n    end\n    binary =\
    \ binary .. \"db\"\n    return binary\nend", "    local binary = \"\"\n    local\
    \ decimal = tonumber(decimal)\n    while decimal > 0 do\n        binary = binary\
    \ .. \"1\"\n        decimal = decimal - 1\n    end\n    return binary .. \"db\"\
    \nend", "    -- Your code here\nend", "  -- Your code here\nend", "    local binary\
    \ = \"\"\n    local decimal = tonumber(decimal)\n    local remainder", "  -- Your\
    \ code here\nend", "    local binary = \"\"\n    local decimal = tonumber(decimal)\n\
    \    local decimal_str = tostring(decimal)\n    local decimal_len = #decimal_str\n\
    \    local decimal_remainder = decimal % 2\n    local decimal_remainder_str =\
    \ tostring(decimal_remainder)\n    local decimal_remainder_len = #decimal_remainder_str\n\
    \    local decimal_remainder_remainder = decimal_remainder % 2\n    local decimal_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder)\n    local decimal_remainder_remainder_len\
    \ = #decimal_remainder_remainder_str\n    local decimal_remainder_remainder_remainder\
    \ = decimal_remainder_remainder % 2\n    local decimal_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder)\n    local decimal_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_str\n    local decimal_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder % 2\n    local decimal_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder)\n    local decimal_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_str\n    local decimal_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder % 2\n    local decimal_remainder_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder_remainder)\n    local\
    \ decimal_remainder_remainder_remainder_remainder_remainder_len = #decimal_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder\
    \ = decimal_remainder_remainder_remainder_remainder_remainder % 2\n    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder)\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_len\
    \ = #decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder)\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_str\
    \ = tostring(decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_remainder)\n\
    \    local decimal_remainder_remainder_remainder_remainder_remainder_remainder_remainder_",
  "    -- Your code here\nend", "    decimal = tonumber(decimal)\n    if decimal ==\
    \ nil then\n        return 'nil'\n    end\n    local binary = \"\"\n    local\
    \ remainder\n    while decimal > 0 do\n        remainder = decimal % 2\n     \
    \   decimal = decimal / 2\n        binary = string.format(\"%s%c\", binary, remainder)\n\
    \    end\n    if binary == \"0\" then\n        binary = \"db\"\n    end\n    return\
    \ binary\nend", "\t-- Your code here\nend", "  -- Your code here\nend", "    local\
    \ binary = \"\"\n    local decimal = decimal\n    local decimal = decimal\n  \
    \  local decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local decimal = decimal\n\
    \    local decimal = decimal\n    local decimal = decimal\n    local decimal =\
    \ decimal\n    local decimal = decimal\n    local decimal = decimal\n    local\
    \ decimal = decimal\n    local decimal = decimal\n    local ", "    local binary\
    \ = \"\"\n    local decimal_str = decimal:reverse()\n    for i = 1, decimal_str:len()\
    \ do\n        local decimal_digit = decimal_str:sub(i,i)\n        local binary_digit\
    \ = decimal_digit:byte()\n        binary = binary .. binary_digit\n    end\n \
    \   return binary .. \"db\"\nend", "  -- Your code here\nend", "    decimal =\
    \ decimal or 0\n    local binary = \"\"\n    local remainder\n    local decimal_str\
    \ = \"\"\n    local decimal_str_reversed = \"\"\n    local decimal_str_length\
    \ = math.floor(math.log(decimal, 2))\n    local decimal_str_length_reversed =\
    \ math.floor(math.log(decimal, 2))\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_length = decimal_str_length\
    \ + 2\n    local decimal_str_length_reversed = decimal_str_length_reversed + 2\n\
    \    local decimal_str_length = decimal_str_length + 2\n    local decimal_str_length_reversed\
    \ = decimal_str_length_reversed + 2\n    local decimal_str_", "    local binary\
    \ = \"\"\n    local decimal = tonumber(decimal)\n    if decimal ~= nil then\n\
    \        decimal = math.floor(decimal)\n        decimal = decimal + decimal\n\
    \        decimal = decimal * 2\n        while decimal > 0 do\n            binary\
    \ = binary .. \"1\"\n            decimal = decimal - 2\n        end\n        binary\
    \ = binary .. \"0\"\n    end\n    return binary\nend", "    -- Your code here\n\
    end", "  -- Your code here\nend", "\t-- Your code here\nend", "    local binary\
    \ = \"\"\n    local decimal = tonumber(decimal)\n    if decimal < 0 then\n   \
    \     decimal = -decimal\n        binary = \"-\"\n    end\n    decimal = math.floor(decimal)\n\
    \    decimal = decimal - decimal%2\n    decimal = decimal + decimal%2\n    decimal\
    \ = decimal*2\n    while decimal > 0 do\n        binary = binary .. \"1\"\n  \
    \      decimal = decimal - 2\n    end\n    binary = binary .. \"0\"\n    return\
    \ binary\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_15_string_sequence
results:
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0wpg87_t.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0wpg87_t.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0wpg87_t.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0wpg87_t.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n    local s = \"\"\n \
    \   for i = 1, n do\n        s = s .. tostring(i)\n    end\n    return s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmsjkid6r.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmsjkid6r.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0d\", i)\n  end\n  return s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7kbrl26d.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7kbrl26d.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. tostring(i) .. ' '\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdb56o9nr.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpdb56o9nr.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5v43ppx.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpw5v43ppx.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i) .. \" \"\n  end\n  return s\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyy4xbg8s.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpyy4xbg8s.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. string.format(\"%0*d\", i, n)\n\
    \  end\n  return sequence\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n  \
    \  lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl7ng1cxi.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpl7ng1cxi.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0*d\", i, n)\n  end\n  return s\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nyn5665.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7nyn5665.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0*d\", i, n)\n  end\n  return s\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nyn5665.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7nyn5665.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. string.format('%0*d', i, n)\n  end\n  return s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcy_t5ojq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpcy_t5ojq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5v43ppx.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpw5v43ppx.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0wpg87_t.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0wpg87_t.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0*d\", i, n)\n  end\n  return s\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nyn5665.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7nyn5665.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0*d\", i, n)\n  end\n  return s\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nyn5665.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7nyn5665.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5v43ppx.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpw5v43ppx.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0d\", i)\n  end\n  return s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7kbrl26d.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7kbrl26d.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n    local str = \"\"\n\
    \    for i = 1, n do\n        str = str .. string.format(\"%0d\", i)\n    end\n\
    \    return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcdwrxw01.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpcdwrxw01.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n    local s = \"\"\n \
    \   for i = 1, n do\n        s = s .. i\n    end\n    return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydgu9fkm.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpydgu9fkm.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0*d\", i, n)\n  end\n  return s\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7nyn5665.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7nyn5665.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. string.format(\"%0d\", i)\n  end\n  return s\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7kbrl26d.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp7kbrl26d.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. \" \" .. i\n  end\n  return str\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp74zz_i4o.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp74zz_i4o.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0wpg87_t.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0wpg87_t.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n    local s = \"\"\n \
    \   for i = 1, n do\n        s = s .. i\n    end\n    return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydgu9fkm.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpydgu9fkm.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpalfoyoy9.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpalfoyoy9.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5v43ppx.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpw5v43ppx.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0wpg87_t.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0wpg87_t.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. \" \" .. i\n  end\n  return str\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp74zz_i4o.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp74zz_i4o.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local sequence = \"\"\
    \n  for i = 1, n do\n    sequence = sequence .. i\n  end\n  return sequence\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfzig_is8.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpfzig_is8.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i) .. \" \"\n  end\n  return s\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyy4xbg8s.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpyy4xbg8s.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. tostring(i) .. \" \"\n  end\n  return str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_sequence\n\
    \    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3), '0\
    \ 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5wdpl4fq.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5wdpl4fq.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n    local s = \"\"\n \
    \   for i = 1, n do\n        s = s .. i\n    end\n    return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpydgu9fkm.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpydgu9fkm.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmuf2svuc.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmuf2svuc.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = ''\n  for\
    \ i = 1, n do\n    s = s .. tostring(i)\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5v43ppx.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpw5v43ppx.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0*d\", i, n)\n  end\n  return\
    \ str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8hzg7d2e.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8hzg7d2e.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. string.format(\"%0d\", i) .. \" \"\n  end\n\
    \  return str\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_sequence\n    lu.assertEquals(candidate(0), '0')\n    lu.assertEquals(candidate(3),\
    \ '0 1 2 3')\n    lu.assertEquals(candidate(10), '0 1 2 3 4 5 6 7 8 9 10')\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu45m2qh4.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpu45m2qh4.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local str = \"\"\n \
    \ for i = 1, n do\n    str = str .. i\n  end\n  return str\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5ihy4d94.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp5ihy4d94.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258
- exit_code: 1
  program: "-- Return a string containing space-delimited numbers starting from 0\
    \ upto n inclusive.\nlocal function string_sequence(n)\n  local s = \"\"\n  for\
    \ i = 1, n do\n    s = s .. i\n  end\n  return s\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_sequence\n    lu.assertEquals(candidate(0),\
    \ '0')\n    lu.assertEquals(candidate(3), '0 1 2 3')\n    lu.assertEquals(candidate(10),\
    \ '0 1 2 3 4 5 6 7 8 9 10')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp_5vx7ei.lua:13:\
    \ expected: \"0\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpp_5vx7ei.lua:13:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750258

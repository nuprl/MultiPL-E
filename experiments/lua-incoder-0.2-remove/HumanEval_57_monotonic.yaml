name: HumanEval_57_monotonic
language: lua
prompt: "-- Return True is list elements are monotonically increasing or decreasing.\n\
  local function monotonic(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
  \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n   \
  \ lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
  \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
  \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
  \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local i = 1\n  while i < #l do\n    local j = i\n    while j < #l\
    \ and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j > i then\n      return\
    \ false\n    end\n    i = j\n  end\n  return true\nend", "  local i = 1\n  local\
    \ j = #l + 1\n  while i <= j do\n    local k = i\n    local m = j\n    while k\
    \ <= m do\n      if l[k] < l[m] then\n        return false\n      elseif l[k]\
    \ > l[m] then\n        return true\n      else\n        k = k + 1\n      end\n\
    \      m = m + 1\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  if #l == 1 then return true end\n  local last = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] ~= last then return false end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if\
    \ l[i] ~= last then\n      return false\n    end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if\
    \ l[i] ~= last then\n      return false\n    end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  if #l == 0 then\n    return true\n  end\n  local prev = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n    end\n \
    \   prev = l[i]\n  end\n  return true\nend", "  if #l == 1 then return true end\n\
    \  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then return false\
    \ end\n    last = l[i]\n  end\n  return true\nend", "  if #l == 0 then return\
    \ false end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n\
    \      return false\n    end\n    prev = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  local last = -math.huge\n  while i <= #l do\n    local x = l[i]\n\
    \    if x > last then\n      return false\n    end\n    last = x\n    i = i +\
    \ 1\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n  for i\
    \ = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n    last\
    \ = l[i]\n  end\n  return true\nend", "  if #l == 1 then return true end\n  local\
    \ last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then return false end\n\
    \    last = l[i]\n  end\n  return true\nend", "  local i = 1\n  local is_decreasing\
    \ = true\n  local is_increasing = true\n  local last_val = l[1]", "  local i =\
    \ 1\n  local j = #l + 1\n  while i <= j do\n    local k = i - 1\n    while k >=\
    \ 0 and l[k] > l[i] do\n      k = k - 1\n    end\n    if k >= 0 then\n      local\
    \ x = l[k]\n      l[k] = l[i]\n      l[i] = x\n      i = i + 1\n    end\n    j\
    \ = j - 1\n  end\n  return j == 1\nend", "  local i = 1\n  while i <= #l do\n\
    \    local j = i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n\
    \    if j - i > 1 then\n      return false\n    end\n    i = j\n  end\n  return\
    \ true\nend", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if\
    \ l[i] ~= last then\n      return false\n    end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if\
    \ l[i] ~= last then\n      return false\n    end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j - i > 1 then\n \
    \     return false\n    end\n    i = j\n  end\n  return true\nend", "  local i\
    \ = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j] < l[i] do\n\
    \      j = j + 1\n    end\n    if j - i > 1 then\n      return false\n    end\n\
    \    i = j\n  end\n  return true\nend", "  local i = 1\n  local last_val = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= last_val then\n      return false\n    end\n\
    \    last_val = l[i]\n  end\n  return true\nend", "  local i = 1\n  while i <=\
    \ #l do\n    local j = i\n    while j <= #l and l[j] < l[j+1] do\n      j = j\
    \ + 1\n    end\n    if j > i then\n      local k = i\n      while k <= j do\n\
    \        if l[k] > l[k+1] then\n          return false\n        end\n        k\
    \ = k + 1\n      end\n    end\n    i = i + 1\n  end\n  return true\nend", "  local\
    \ i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n \
    \     return false\n    end\n    last = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  local j = 1\n  local k = 1\n  local monotonic = false\n  local last_monotonic\
    \ = false\n  local last_monotonic_val = nil\n  local last_monotonic_i = nil\n\
    \  local last_monotonic_j = nil\n  local last_monotonic_k = nil\n  local last_monotonic_last_val\
    \ = nil\n  local last_monotonic_last_i = nil\n  local last_monotonic_last_j =\
    \ nil\n  local last_monotonic_last_k = nil\n  local last_monotonic_last_last_val\
    \ = nil\n  local last_monotonic_last_last_i = nil\n  local last_monotonic_last_last_j\
    \ = nil\n  local last_monotonic_last_last_k = nil\n  local last_monotonic_last_last_last_val\
    \ = nil\n  local last_monotonic_last_last_last_i = nil\n  local last_monotonic_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_val\
    \ = nil\n  local last_monotonic_last_last_last_last_i = nil\n  local last_monotonic_last_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_val\
    \ = nil\n  local last_monotonic_last_last_last_last_last_i = nil\n  local last_monotonic_last_last_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_val\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_i = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_val = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_i = nil\n  local last_monotonic_last_last_last_last_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_k = nil\n \
    \ local last_monotonic_last_last_last_last_last_last_last_last_val = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_last_last_i = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_k = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_last_last_val = ",
  "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  while i <= #l do\n    local j = i\n    while j <= #l and l[j]\
    \ < l[j+1] do\n      j = j + 1\n    end\n    if j > i then\n      return false\n\
    \    end\n    i = j\n  end\n  return true\nend", "  if #l == 1 then return true\
    \ end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] < prev then return\
    \ false end\n    prev = l[i]\n  end\n  return true\nend", "  if #l == 1 then\n\
    \    return true\n  end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i]\
    \ ~= prev then\n      return false\n    end\n    prev = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  local last = -1\n  while i <= #l do\n    local\
    \ current = l[i]\n    if current > last then\n      return false\n    end\n  \
    \  last = current\n    i = i + 1\n  end\n  return true\nend", "  local i = 1\n\
    \  local j = 1\n  local k = 1\n  local monotonic = true\n  local last_val = l[1]\n\
    \  local last_val_i = i\n  local last_val_j = j\n  local last_val_k = k\n  local\
    \ last_val_is_decreasing = false\n  local last_val_is_increasing = false\n  local\
    \ last_val_is_decreasing_or_nondecreasing = false\n  local last_val_is_increasing_or_nonincreasing\
    \ = false\n  local last_val_is_nondecreasing = false\n  local last_val_is_nonincreasing\
    \ = false\n  local last_val_is_nondecreasing_or_nonincreasing = false\n  local\
    \ last_val_is_nondecreasing_or_nonincreasing_or_nan = false\n  local last_val_is_nonincreasing_or_nan\
    \ = false\n  local last_val_is_nonincreasing_or_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_", "  if #l == 0 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend", "  local i = 1\n  local\
    \ is_decreasing = true\n  local is_increasing = true\n  local last_value = nil",
  "  if #l == 1 then\n    return true\n  end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] ~= prev then\n      return false\n    end\n    prev = l[i]\n\
    \  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend", "  if #l == 0 then return false end\n  local i =\
    \ 1\n  while i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[j+1]\
    \ do\n      j = j + 1\n    end\n    if j > i then\n      local k = i\n      while\
    \ k <= j do\n        if l[k] < l[k+1] then\n          k = k + 1\n        else\n\
    \          return false\n        end\n      end\n      if k > j then\n       \
    \ return false\n      end\n    end\n    i = j + 1\n  end\n  return true\nend",
  "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  local last_val = l[1]\n  while i <= #l do\n    local val = l[i]\n\
    \    if val > last_val then\n      return false\n    end\n    last_val = val\n\
    \    i = i + 1\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n \
    \   last = l[i]\n  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n\
    \    local j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n\
    \    if j - i <= 1 then\n      return false\n    end\n    i = j\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j > i then\n    \
    \  l[i], l[j] = l[j], l[i]\n      i = j\n    end\n    i = i + 1\n  end\n  return\
    \ i == #l\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while\
    \ j <= #l do\n      if l[i] < l[j] then\n        local tmp = l[i]\n        l[i]\
    \ = l[j]\n        l[j] = tmp\n      end\n      j = j + 1\n    end\n    i = i +\
    \ 1\n  end\n  return true\nend", "  local i = 1\n  local j = 1\n  local k = 1\n\
    \  local monotonic = true\n  local last_monotonic = false\n  local last_i = nil\n\
    \  local last_j = nil\n  local last_k = nil\n  local last_last_monotonic = false\n\
    \  local last_last_i = nil\n  local last_last_j = nil\n  local last_last_k = nil\n\
    \  local last_last_last_monotonic = false\n  local last_last_last_i = nil\n  local\
    \ last_last_last_j = nil\n  local last_last_last_k = nil\n  local last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_i = nil\n  local last_last_last_last_j\
    \ = nil\n  local last_last_last_last_k = nil\n  local last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local ", "  local\
    \ i = 1\n  local last = l[1]\n  for i = 2, #l do\n    local current = l[i]\n \
    \   if current > last then\n      return false\n    end\n    last = current\n\
    \  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n    local e1\
    \ = l[i]\n    local e2 = l[i + 1]\n    if e1 <= e2 then\n      i = i + 1\n   \
    \ elseif e1 > e2 then\n      return false\n    end\n  end\n  return true\nend",
  "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j]\
    \ <= l[i] do\n      j = j + 1\n    end\n    if j > i then\n      l[i], l[j] =\
    \ l[j], l[i]\n    end\n    i = j\n  end\n  return true\nend", "  local i = 1\n\
    \  local last_val = l[1]\n  while i < #l do\n    local val = l[i]\n    if val\
    \ > last_val then\n      return false\n    end\n    last_val = val\n    i = i\
    \ + 1\n  end\n  return true\nend", "  local i = 1\n  local last_val = l[1]\n \
    \ for i = 2, #l do\n    local val = l[i]\n    if val > last_val then\n      return\
    \ false\n    end\n    last_val = val\n  end\n  return true\nend", "  local i =\
    \ 1\n  while i <= #l do\n    local j = i\n    while j <= #l do\n      if l[j]\
    \ < l[j + 1] then\n        return false\n      end\n      j = j + 1\n    end\n\
    \    i = i + 1\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n \
    \   last = l[i]\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n \
    \   last = l[i]\n  end\n  return true\nend", "  local i = 1\n  local last = -1\n\
    \  local monotonic = false\n  for i = 1, #l do\n    if l[i] ~= last then\n   \
    \   last = l[i]\n      monotonic = true\n    end\n  end\n  return monotonic\n\
    end", "  if #l == 0 then return false end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] ~= prev then\n      return false\n    end\n    prev = l[i]\n\
    \  end\n  return true\nend", "  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = nil", "  local i = 1\n  local last_val\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= last_val then\n      return false\n\
    \    end\n    last_val = l[i]\n  end\n  return true\nend", "  local i = 1\n  local\
    \ last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n\
    \    end\n    last = l[i]\n  end\n  return true\nend", "  if #l == 0 then return\
    \ false end\n  local first = l[1]\n  for i = 2, #l do\n    if l[i] < first then\
    \ return false end\n    first = l[i]\n  end\n  return true\nend", "  local i =\
    \ 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n     \
    \ return false\n    end\n    last = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n \
    \     return false\n    end\n    last = l[i]\n  end\n  return true\nend", "  if\
    \ #l == 1 then\n    return true\n  end\n  local prev = l[1]\n  for i = 2, #l do\n\
    \    if l[i] ~= prev then\n      return false\n    end\n    prev = l[i]\n  end\n\
    \  return true\nend", "  if #l == 1 then return true end\n  local i = 1\n  while\
    \ i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[i] do\n      j =\
    \ j + 1\n    end\n    if j > i then\n      local k = i\n      while k <= j do\n\
    \        if l[k] > l[i] then\n          return false\n        end\n        k =\
    \ k + 1\n      end\n      return true\n    end\n    i = i + 1\n  end\n  return\
    \ false\nend", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if\
    \ l[i] ~= last then\n      return false\n    end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j > i then\n    \
    \  l[i], l[j] = l[j], l[i]\n    end\n    i = j\n  end\n  return true\nend", " \
    \ if #l == 1 then return true end\n  local i = 1\n  while i <= #l do\n    local\
    \ j = i\n    while j <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if\
    \ j > i then return false end\n    i = j\n  end\n  return true\nend", "  local\
    \ i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j] < l[i]\
    \ do\n      j = j + 1\n    end\n    if j > i then\n      return false\n    end\n\
    \    i = j\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n \
    \   last = l[i]\n  end\n  return true\nend", "  local i = 1\n  local j = #l +\
    \ 1\n  while i <= j do\n    local k = i + j\n    local x = l[i]\n    local y =\
    \ l[k]\n    if x > y then\n      i = k\n    else\n      j = k\n    end\n  end\n\
    \  return i == j\nend", "  local i = 1\n  local last = -1\n  local monotonic_flag\
    \ = false\n  while i <= #l do\n    local x = l[i]\n    if x > last then\n    \
    \  last = x\n      monotonic_flag = true\n    end\n    i = i + 1\n  end\n  return\
    \ monotonic_flag\nend", "  if #l == 1 then return true end\n  local prev = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n    end\n \
    \   prev = l[i]\n  end\n  return true\nend", "  local i = 1\n  local last = -1\n\
    \  local monotonic = true\n  local last_is_nan = false\n  local last_is_inf =\
    \ false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive", "  local i = 1\n  while\
    \ i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[j+1] do\n      j\
    \ = j + 1\n    end\n    if j > i then\n      return false\n    end\n    i = j\n\
    \  end\n  return true\nend", "  if #l == 0 then return false end\n  local first\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] < first then return false end\n    first\
    \ = l[i]\n  end\n  return true\nend", "  if #l == 1 then return true end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n\
    \    prev = l[i]\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n \
    \   last = l[i]\n  end\n  return true\nend", "  local i = 1\n  local j = #l +\
    \ 1\n  while i <= j do\n    local k = i\n    while k < j do\n      if l[k] < l[k\
    \ + 1] then\n        return false\n      end\n      k = k + 1\n    end\n    i\
    \ = i + 1\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n \
    \ for i = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n  \
    \  last = l[i]\n  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n\
    \    local j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n\
    \    if j > i then\n      local k = i\n      while k < j do\n        local m =\
    \ k\n        while m < j and l[m] < l[k] do\n          m = m + 1\n        end\n\
    \        if m > k then\n          l[k], l[m] = l[m], l[k]\n        end\n     \
    \   k = k + 1\n      end\n    end\n    i = i + 1\n  end\n  return i == #l\nend",
  "  if #l == 0 then return false end\n  local i = 1\n  while i <= #l do\n    local\
    \ j = i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if\
    \ j > i then\n      local k = i\n      while k < j and l[k] > l[i] do\n      \
    \  k = k + 1\n      end\n      if k > i then\n        return false\n      else\n\
    \        i = k\n      end\n    else\n      i = i + 1\n    end\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ < #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if j > i then\n   \
    \   return false\n    end\n    i = j\n  end\n  return true\nend", "  if #l ==\
    \ 1 then return true end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i]\
    \ ~= prev then\n      return false\n    end\n    prev = l[i]\n  end\n  return\
    \ true\nend", "  if #l == 1 then return true end\n  local prev = l[1]\n  for i\
    \ = 2, #l do\n    if l[i] > prev then return false end\n    prev = l[i]\n  end\n\
    \  return true\nend", "  if #l == 0 then return false end\n  local prev = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n    end\n \
    \   prev = l[i]\n  end\n  return true\nend", "  if #l == 0 then return false end\n\
    \  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return\
    \ false\n    end\n    prev = l[i]\n  end\n  return true\nend", "  local i = 1\n\
    \  while i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[i] do\n \
    \     j = j + 1\n    end\n    if j > i then\n      return false\n    end\n   \
    \ i = j\n  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n    local\
    \ j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if\
    \ j - i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  if #l == 1 then return true end\n  local last = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] < last then return false end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ <= #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if j > i then\n  \
    \    local k = i\n      while k <= j do\n        if l[k] > l[k+1] then\n     \
    \     return false\n        end\n        k = k + 1\n      end\n    end\n    i\
    \ = j + 1\n  end\n  return true\nend", "  if #l == 1 then\n    return true\n \
    \ end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n   \
    \   return false\n    end\n    prev = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n \
    \     return false\n    end\n    last = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n \
    \     return false\n    end\n    last = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j] < l[i]\
    \ do\n      j = j + 1\n    end\n    if j > i then\n      return false\n    end\n\
    \    i = j\n  end\n  return true\nend", "  local i = 1\n  local last = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n \
    \   last = l[i]\n  end\n  return true\nend", "  if #l == 1 then return true end\n\
    \  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return\
    \ false\n    end\n    prev = l[i]\n  end\n  return true\nend", "  local i = 1\n\
    \  local last = -1\n  for i = 1, #l do\n    local current = l[i]\n    if current\
    \ > last then\n      return false\n    end\n    last = current\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ < #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if j > i then\n   \
    \   l[i], l[j] = l[j], l[i]\n      i = i + 1\n    end\n  end\n  return i == #l\n\
    end", "  if #l == 0 then return false end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] ~= prev then return false end\n    prev = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j > i then\n    \
    \  return false\n    end\n    i = j\n  end\n  return true\nend", "  local i =\
    \ 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n     \
    \ return false\n    end\n    last = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n \
    \     return false\n    end\n    last = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  local is_increasing = true\n  local is_decreasing = true\n  local last_value\
    \ = nil", "  if #l == 0 then\n    return true\n  end\n  local first = l[1]\n \
    \ for i = 2, #l do\n    if l[i] < first then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n  \
    \  while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j - i > 1\
    \ then\n      return false\n    end\n    i = j\n  end\n  return true\nend", " \
    \ if #l == 0 then return false end\n  local prev = l[1]\n  for i = 2, #l do\n\
    \    if l[i] ~= prev then\n      return false\n    end\n    prev = l[i]\n  end\n\
    \  return true\nend", "  if #l == 0 then return false end\n  local prev = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n    end\n \
    \   prev = l[i]\n  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n\
    \    local j = i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n\
    \    if j - i > 1 then\n      return false\n    end\n    i = j\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j == i then\n   \
    \   return false\n    end\n    if l[i] > l[j] then\n      return true\n    end\n\
    \    i = j\n  end\n  return false\nend", "  local i = 1\n  while i <= #l do\n\
    \    local j = i\n    while j <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n\
    \    if j > i then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  if #l == 0 then return false end\n  if #l == 1 then return true end\n\
    \  local prev = l[1]\n  for i = 2, #l do\n    if l[i] < prev then return false\
    \ end\n    prev = l[i]\n  end\n  return true\nend", "  if #l == 0 then\n    return\
    \ true\n  end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n\
    \      return false\n    end\n    prev = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j]\
    \ <= l[i] do\n      j = j + 1\n    end\n    if j - i > 1 then\n      return false\n\
    \    end\n    i = j\n  end\n  return true\nend", "  if #l == 0 then\n    return\
    \ true\n  end\n  local first = l[1]\n  for i = 2, #l do\n    if l[i] < first then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local i = 1\n  while\
    \ i <= #l do\n    local j = i\n    while j < #l and l[j] <= l[i] do\n      j =\
    \ j + 1\n    end\n    if j > i then\n      return false\n    end\n    i = j\n\
    \  end\n  return true\nend", "  if #l == 0 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend", "  local i = 1\n  local\
    \ last = -1\n  while i <= #l do\n    local x = l[i]\n    if x > last then\n  \
    \    return false\n    end\n    last = x\n    i = i + 1\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  if #l == 0 then return false end\n  if #l == 1 then return true end\n\
    \  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return\
    \ false\n    end\n    prev = l[i]\n  end\n  return true\nend", "  if #l == 1 then\
    \ return true end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev\
    \ then return false end\n    prev = l[i]\n  end\n  return true\nend", "  local\
    \ i = 1\n  local j = #l + 1\n  while i <= j do\n    local k = i\n    while k <=\
    \ j and l[k] < l[k + 1] do\n      k = k + 1\n    end\n    if k > i then\n    \
    \  local m = i\n      i = k\n      j = m\n    end\n    if l[i] > l[j] then\n \
    \     return false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\n\
    end", "  if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] ~= prev then return false end\n    prev = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  local is_increasing = true\n  local is_decreasing\
    \ = true\n  local last_value = l[1]", "  if #l == 0 then\n    return true\n  end\n\
    \  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return\
    \ false\n    end\n    prev = l[i]\n  end\n  return true\nend", "  if #l == 0 then\
    \ return false end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev\
    \ then\n      return false\n    end\n    prev = l[i]\n  end\n  return true\nend",
  "  local i = 1\n  local last_val = l[1]\n  while i < #l do\n    local val = l[i]\n\
    \    if val > last_val then\n      return false\n    end\n    last_val = val\n\
    \    i = i + 1\n  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n\
    \    local j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n\
    \    if j > i then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and\
    \ l[j] < l[i] do\n      j = j + 1\n    end\n    if j > i then\n      return false\n\
    \    end\n    i = j\n  end\n  return true\nend", "  local i = 1\n  local last\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n \
    \   end\n    last = l[i]\n  end\n  return true\nend", "  if #l == 0 then return\
    \ false end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n\
    \      return false\n    end\n    prev = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j]\
    \ < l[i] do\n      j = j + 1\n    end\n    if j - i <= 1 then\n      return false\n\
    \    end\n    i = j\n  end\n  return true\nend", "  local i = 1\n  local last_val\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= last_val then\n      return false\n\
    \    end\n    last_val = l[i]\n  end\n  return true\nend", "  local i = 1\n  local\
    \ is_decreasing = true\n  local is_increasing = true\n  local last_value = nil",
  "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l do\n \
    \   if l[i] ~= prev then\n      return false\n    end\n    prev = l[i]\n  end\n\
    \  return true\nend", "  local i = 1\n  local is_decreasing = true\n  local is_increasing\
    \ = true\n  local last_value = l[1]\n  for i = 2, #l do\n    local value = l[i]\n\
    \    if value < last_value then\n      is_decreasing = false\n    elseif value\
    \ > last_value then\n      is_increasing = false\n    else\n      break\n    end\n\
    \    last_value = value\n  end\n  return is_decreasing or is_increasing\nend",
  "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l do\n \
    \   if l[i] ~= prev then\n      return false\n    end\n    prev = l[i]\n  end\n\
    \  return true\nend", "  local i = 1\n  local j = 1\n  local k = 1\n  local monotonic\
    \ = true\n  while i < #l do\n    local x = l[i]\n    local y = l[j]\n    if x\
    \ > y then\n      k = k + 1\n      if k > 1 then\n        monotonic = false\n\
    \      end\n    else\n      k = k - 1\n      if k < 1 then\n        monotonic\
    \ = false\n      end\n    end\n    i = i + 1\n    j = j + 1\n  end\n  return monotonic\n\
    end", "  local i = 1\n  local is_decreasing = true\n  local is_increasing = true\n\
    \  local last_value = nil\n  local last_index = nil\n  for i = 1, #l do\n    local\
    \ value = l[i]\n    local index = i\n    if last_value ~= value then\n      is_decreasing\
    \ = is_decreasing and not is_increasing\n      is_increasing = is_increasing and\
    \ not is_decreasing\n    end\n    last_value = value\n    last_index = index\n\
    \  end\n  return is_decreasing or is_increasing\nend", "  local i = 1\n  local\
    \ last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n\
    \    end\n    last = l[i]\n  end\n  return true\nend", "  local i = 1\n  local\
    \ is_decreasing = true\n  local is_increasing = true\n  while i <= #l do\n   \
    \ local x = l[i]\n    if x < l[i-1] then\n      is_decreasing = false\n    elseif\
    \ x > l[i-1] then\n      is_increasing = false\n    else\n      is_decreasing\
    \ = true\n      is_increasing = true\n    end\n    i = i + 1\n  end\n  return\
    \ is_decreasing or is_increasing\nend", "  local i = 1\n  while i <= #l do\n \
    \   local j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n\
    \    if j > i then\n      local k = i\n      while k < j do\n        local m =\
    \ k + 1\n        while m < j and l[m] > l[k] do\n          m = m + 1\n       \
    \ end\n        if m > k then\n          l[k] = l[m]\n        end\n        k =\
    \ m\n      end\n    end\n    i = j\n  end\n  return i == 1\nend", "  local i =\
    \ 1\n  local is_decreasing = true\n  local is_increasing = true\n  local last_value\
    \ = l[1]\n  for i = 2, #l do\n    local value = l[i]\n    if value < last_value\
    \ then\n      is_decreasing = false\n    elseif value > last_value then\n    \
    \  is_increasing = false\n    end\n    last_value = value\n  end\n  return is_decreasing\
    \ or is_increasing\nend", "  local i = 1\n  local last = -1\n  while i <= #l do\n\
    \    local x = l[i]\n    if x > last then\n      last = x\n    elseif x < last\
    \ then\n      return false\n    end\n    i = i + 1\n  end\n  return true\nend",
  "  local i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j] <\
    \ l[i] do\n      j = j + 1\n    end\n    if j > i then\n      return false\n \
    \   end\n    i = j\n  end\n  return true\nend", "  local i = 1\n  while i <= #l\
    \ do\n    local j = i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n\
    \    end\n    if j - i <= 1 then\n      return false\n    end\n    i = j\n  end\n\
    \  return true\nend", "  if #l == 0 then return false end\n  local first = l[1]\n\
    \  for i = 2, #l do\n    if l[i] < first then return false end\n    first = l[i]\n\
    \  end\n  return true\nend", "  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend", "  local i = 1\n  local\
    \ last_val = l[1]\n  for i = 2, #l do\n    local val = l[i]\n    if val > last_val\
    \ then\n      return false\n    end\n    last_val = val\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] > prev then return false end\n    prev = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j\
    \ < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j > i then\n    \
    \  local k = i\n      while k < j do\n        local m = k\n        while m > i\
    \ and l[m] <= l[k] do\n          m = m - 1\n        end\n        if m > k then\n\
    \          l[k] = l[m]\n        else\n          l[k] = l[i]\n        end\n   \
    \     k = k + 1\n      end\n    end\n    i = i + 1\n  end\n  return i == #l and\
    \ l[1] >= l[#l]\nend", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n\
    \    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n  end\n\
    \  return true\nend", "  if #l == 1 then return true end\n  local prev = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev = l[i]\n\
    \  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n    local j =\
    \ 1\n    while j <= #l do\n      if l[j] < l[j - 1] then\n        return false\n\
    \      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return true\nend",
  "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l do\n \
    \   if l[i] ~= prev then return false end\n    prev = l[i]\n  end\n  return true\n\
    end", "  if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] ~= prev then\n      return false\n    end\n    prev = l[i]\n\
    \  end\n  return true\nend", "  local i = 1\n  while i < #l do\n    local e1 =\
    \ l[i]\n    local e2 = l[i + 1]\n    if e1 > e2 then\n      return false\n   \
    \ end\n    i = i + 1\n  end\n  return true\nend", "  local i = 1\n  local j =\
    \ 1\n  local k = 1\n  local monotonic = true\n  local last_monotonic = false\n\
    \  local last_i = nil\n  local last_j = nil\n  local last_k = nil\n  local last_last_i\
    \ = nil\n  local last_last_j = nil\n  local last_last_k = nil\n  local last_last_last_i\
    \ = nil\n  local last_last_last_j = nil\n  local last_last_last_k = nil\n  local\
    \ last_last_last_last_i = nil\n  local last_last_last_last_j = nil\n  local last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_last_k = nil\n  local last_", " \
    \ local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n\
    \      return false\n    end\n    last = l[i]\n  end\n  return true\nend", " \
    \ if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l do\n \
    \   if l[i] ~= prev then return false end\n    prev = l[i]\n  end\n  return true\n\
    end", "  local i = 1\n  local is_decreasing = true\n  local is_increasing = true\n\
    \  local last_val = l[1]\n  for i = 2, #l do\n    local val = l[i]\n    if val\
    \ > last_val then\n      is_decreasing = false\n    elseif val < last_val then\n\
    \      is_increasing = false\n    else\n      is_decreasing = true\n      is_increasing\
    \ = true\n    end\n    last_val = val\n  end\n  return is_decreasing or is_increasing\n\
    end", "  if #l == 1 then return true end\n  local i = 1\n  while i <= #l do\n\
    \    local j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n\
    \    if j - i <= 1 then return false end\n    i = j\n  end\n  return true\nend",
  "  if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l do\n  \
    \  if l[i] ~= prev then return false end\n    prev = l[i]\n  end\n  return true\n\
    end", "  if #l == 0 then\n    return true\n  end\n  local first = l[1]\n  for\
    \ i = 2, #l do\n    if l[i] < first then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local i = 1\n  local j = 1\n  local k = 1\n  local monotonic\
    \ = false\n  local last_monotonic = false\n  local last_monotonic_i = nil\n  local\
    \ last_monotonic_j = nil\n  local last_monotonic_k = nil\n  local last_monotonic_last_i\
    \ = nil\n  local last_monotonic_last_j = nil\n  local last_monotonic_last_k =\
    \ nil\n  local last_monotonic_last_last_i = nil\n  local last_monotonic_last_last_j\
    \ = nil\n  local last_monotonic_last_last_k = nil\n  local last_monotonic_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_j = nil\n  local last_monotonic_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_i = nil\n  local last_monotonic_last_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_i = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_i = nil\n \
    \ local last_monotonic_last_last_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n",
  "  if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l do\n  \
    \  if l[i] ~= prev then return false end\n    prev = l[i]\n  end\n  return true\n\
    end", "  if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] > prev then return false end\n    prev = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if\
    \ l[i] ~= last then\n      return false\n    end\n    last = l[i]\n  end\n  return\
    \ true\nend", "  local i = 1\n  local is_decreasing = true\n  local is_increasing\
    \ = true\n  local last_value = l[1]", "  local i = 1\n  local last_val = l[1]\n\
    \  while i <= #l do\n    local val = l[i]\n    if val > last_val then\n      return\
    \ false\n    end\n    last_val = val\n    i = i + 1\n  end\n  return true\nend",
  "  local i = 1\n  local last_val = l[1]\n  for i = 2, #l do\n    if l[i] ~= last_val\
    \ then\n      return false\n    end\n    last_val = l[i]\n  end\n  return true\n\
    end", "  if #l == 1 then return true end\n  local prev = l[1]\n  for i = 2, #l\
    \ do\n    if l[i] < prev then return false end\n    prev = l[i]\n  end\n  return\
    \ true\nend", "  if #l == 1 then return true end\n  local prev = l[1]\n  for i\
    \ = 2, #l do\n    if l[i] ~= prev then\n      return false\n    end\n    prev\
    \ = l[i]\n  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n   \
    \ local j = i\n    while j <= #l do\n      if l[j] < l[j+1] then\n        return\
    \ false\n      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  local i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and\
    \ l[j] < l[i] do\n      j = j + 1\n    end\n    if j == i then\n      return false\n\
    \    end\n    i = j\n  end\n  return true\nend", "  local i = 1\n  local last\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n \
    \   end\n    last = l[i]\n  end\n  return true\nend", "  local i = 1\n  local\
    \ last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n\
    \    end\n    last = l[i]\n  end\n  return true\nend", "  if #l == 1 then return\
    \ true end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n\
    \      return false\n    end\n    prev = l[i]\n  end\n  return true\nend", " \
    \ if #l == 1 then return true end\n  local last = l[1]\n  for i = 2, #l do\n \
    \   if l[i] ~= last then return false end\n    last = l[i]\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  local i = 1\n  while i <= #l do\n    local j = 1\n    while j <= #l do\n\
    \      if l[i] < l[j] then\n        return false\n      end\n      if l[i] > l[j]\
    \ then\n        return true\n      end\n      j = j + 1\n    end\n    i = i +\
    \ 1\n  end\n  return true\nend", "  local i = 1\n  local j = 1\n  local k = 1\n\
    \  local monotonic_flag = true\n  local monotonic_flag2 = true\n  local monotonic_flag3\
    \ = true\n  local monotonic_flag4 = true\n  local monotonic_flag5 = true\n  local\
    \ monotonic_flag6 = true\n  local monotonic_flag7 = true\n  local monotonic_flag8\
    \ = true\n  local monotonic_flag9 = true\n  local monotonic_flag10 = true\n  local\
    \ monotonic_flag11 = true\n  local monotonic_flag12 = true\n  local monotonic_flag13\
    \ = true\n  local monotonic_flag14 = true\n  local monotonic_flag15 = true\n \
    \ local monotonic_flag16 = true\n  local monotonic_flag17 = true\n  local monotonic_flag18\
    \ = true\n  local monotonic_flag19 = true\n  local monotonic_flag20 = true\n \
    \ local monotonic_flag21 = true\n  local monotonic_flag22 = true\n  local monotonic_flag23\
    \ = true\n  local monotonic_flag24 = true\n  local monotonic_flag25 = true\n \
    \ local monotonic_flag26 = true\n  local monotonic_flag27 = true\n  local monotonic_flag28\
    \ = true\n  local monotonic_flag29 = true\n  local monotonic_flag30 = true\n \
    \ local monotonic_flag31 = true\n  local monotonic_flag32 = true\n  local monotonic_flag33\
    \ = true\n  local monotonic_flag34 = true\n  local monotonic_flag35 = true\n \
    \ local monotonic_flag36 = true\n  local monotonic_flag37 = true\n  local monotonic_flag38\
    \ = true\n  local monotonic_flag39 = true\n  local monotonic_flag40 = true\n \
    \ local monotonic_flag41 = true\n  local monotonic_flag42 = true\n  local monotonic_flag43\
    \ = true\n  local monotonic_flag44 = true\n  local monotonic_flag45 = true\n \
    \ local monotonic_flag46 = true\n  local monotonic_flag47 = true\n  local monotonic_flag48\
    \ = true\n  local monotonic_flag49 = true\n  local monotonic_flag50 = true\n \
    \ local monotonic_flag51 = true\n  local monotonic_flag52 = true\n  local monotonic_flag53\
    \ = true\n  local monotonic_flag54 = true\n  local monot", "  local i = 1\n  local\
    \ last = l[1]\n  for i = 2, #l do\n    if l[i] ~= last then\n      return false\n\
    \    end\n    last = l[i]\n  end\n  return true\nend", "  if #l == 0 then return\
    \ false end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n\
    \      return false\n    end\n    prev = l[i]\n  end\n  return true\nend", " \
    \ local i = 1\n  while i <= #l do\n    local j = i\n    while j < #l and l[j]\
    \ < l[i] do\n      j = j + 1\n    end\n    if j > i then\n      return false\n\
    \    end\n    i = j\n  end\n  return true\nend", "  if #l == 0 then return false\
    \ end\n  if #l == 1 then return true end\n  local last_val = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last_val then\n      return false\n    end\n    last_val\
    \ = l[i]\n  end\n  return true\nend", "  if #l == 0 then return false end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend", "  local i = 1\n  while\
    \ i <= #l do\n    local j = i\n    while j < #l and l[j] < l[i] do\n      j =\
    \ j + 1\n    end\n    if j > i then\n      return false\n    end\n    i = j\n\
    \  end\n  return true\nend", "  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if\
    \ j > i then\n      local k = i\n      while k <= j do\n        if l[k] < l[k+1]\
    \ then\n          k = k + 1\n        else\n          l[k] = l[k]\n          i\
    \ = i + 1\n        end\n      end\n      l[k] = l[j]\n    end\n    i = i + 1\n\
    \  end\n  return i == #l\nend", "  local i = 1\n  local last = l[1]\n  for i =\
    \ 2, #l do\n    if l[i] ~= last then\n      return false\n    end\n    last =\
    \ l[i]\n  end\n  return true\nend", "  local i = 1\n  while i < #l do\n    local\
    \ j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if\
    \ j - i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end", "  local i = 1\n  local last = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ last then\n      return false\n    end\n    last = l[i]\n  end\n  return true\n\
    end", "  if #l == 0 then return false end\n  local first = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] < first then return false end\n    first = l[i]\n  end\n\
    \  return true\nend", "  if #l == 0 then return false end\n  local prev = l[1]\n\
    \  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n    end\n \
    \   prev = l[i]\n  end\n  return true\nend", "  if #l == 1 then return true end\n\
    \  local i = 1\n  while i <= #l do\n    local j = i\n    while j <= #l and l[j]\
    \ < l[i] do\n      j = j + 1\n    end\n    if j > i then\n      return false\n\
    \    end\n    i = j\n  end\n  return true\nend", "  local i = 1\n  while i < #l\
    \ do\n    local j = i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n\
    \    end\n    if j - i <= 1 then\n      return false\n    end\n    i = j\n  end\n\
    \  return true\nend", "  local i = 1\n  local j = 1\n  local k = 1\n  local monotonic\
    \ = false\n  local last_monotonic = false\n  local last_i = -1\n  local last_j\
    \ = -1\n  local last_k = -1\n  local last_last_i = -1\n  local last_last_j = -1\n\
    \  local last_last_k = -1\n  local last_last_last_i = -1\n  local last_last_last_j\
    \ = -1\n  local last_last_last_k = -1\n  local last_last_last_last_i = -1\n  local\
    \ last_last_last_last_j = -1\n  local last_last_last_last_k = -1\n  local last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_j = -1\n  local last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

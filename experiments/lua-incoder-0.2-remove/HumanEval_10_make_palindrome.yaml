name: HumanEval_10_make_palindrome
language: lua
prompt: "-- Find the shortest palindrome that begins with a supplied string.\n-- Algorithm\
  \ idea is simple:\n-- - Find the longest postfix of supplied string that is a palindrome.\n\
  -- - Append to the end of the string reverse of a string prefix that comes before\
  \ the palindromic suffix.\nlocal function make_palindrome(string)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = make_palindrome\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('x'), 'x')\n\
  \    lu.assertEquals(candidate('xyz'), 'xyzyx')\n    lu.assertEquals(candidate('xyx'),\
  \ 'xyx')\n    lu.assertEquals(candidate('jerry'), 'jerryrrej')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local palindrome = string\n    local longest_postfix = string\n\
    \    local longest_postfix_length = string\n    local longest_postfix_length_index\
    \ = 0\n    local longest_postfix_length_reversed = string\n    local longest_postfix_length_reversed_length\
    \ = string\n    local longest_postfix_length_reversed_length_index = 0\n    local\
    \ longest_postfix_length_reversed_reversed = string\n    local longest_postfix_length_reversed_reversed_length\
    \ = string\n    local longest_postfix_length_reversed_reversed_length_index =\
    \ 0\n    local longest_postfix_length_reversed_reversed_reversed = string\n  \
    \  local longest_postfix_length_reversed_reversed_reversed_length = string\n \
    \   local longest_postfix_length_reversed_reversed_reversed_length_index = 0\n\
    \    local longest_postfix_length_reversed_reversed_reversed_reversed = string\n\
    \    local longest_postfix_length_reversed_reversed_reversed_reversed_length =\
    \ string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_length\
    \ = string\n    local longest_postfix_length_re", "  local palindrome = string\n\
    \  local longest_postfix = string\n  local longest_postfix_length = string\n \
    \ local longest_postfix_reverse = string\n  local longest_postfix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix = string\n  local longest_postfix_reverse_prefix_length\
    \ = string\n  local longest_postfix_reverse_suffix = string\n  local longest_postfix_reverse_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local longest_postfix_reverse_prefix_suffix_length\
    \ = string\n  local longest_postfix_reverse_prefix_reverse = string\n  local longest_postfix_reverse_prefix_reverse_length\
    \ = string\n  local longest_postfix_reverse_prefix_suffix = string\n  local lon",
  "    local postfix = string\n    local reverse = string\n    local palindrome =\
    \ string\n    local length = #string\n    for i = 1, length do\n        postfix\
    \ = postfix .. string[length - i]\n        reverse = reverse .. string[length\
    \ - i - 1]\n        if postfix ~= reverse then\n            palindrome = palindrome\
    \ .. string[length - i - 1]\n        end\n    end\n    return palindrome\nend",
  "    local palindrome = string\n    local suffix\n    local suffixLength\n    local\
    \ suffixLengthBeforePalindrome\n    local suffixLengthBeforePalindromeBefore\n\
    \    local suffixLengthBeforePalindromeAfter\n    local suffixLengthBeforePalindromeAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfter\n    local suffixLengthBeforePalindromeBeforeAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfter\n    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfter\n    local\
    \ suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfter\n    local\
    \ suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfter\n    local\
    \ suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter\n\
    \    local suffixLengthBeforePalindromeBeforeAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfterAfter",
  "    local palindrome = string\n    local postfix = string.sub(palindrome, 1, string.len(palindrome))\n\
    \    local reversed_postfix = string.sub(postfix, 1, string.len(postfix))\n  \
    \  local reversed_palindrome = reversed_postfix .. reversed_postfix\n    local\
    \ prefix_length = string.len(reversed_palindrome)\n    local palindrome_length\
    \ = string.len(palindrome)\n    while palindrome_length > prefix_length do\n \
    \       postfix = string.sub(palindrome, 1, string.len(palindrome))\n        reversed_postfix\
    \ = string.sub(postfix, 1, string.len(postfix))\n        reversed_palindrome =\
    \ reversed_postfix .. reversed_postfix\n        prefix_length = string.len(reversed_palindrome)\n\
    \        palindrome_length = string.len(palindrome)\n    end\n    return palindrome\
    \ .. reversed_palindrome\nend", "    local palindrome = string\n    local postfix\
    \ = string\n    local reverse = string\n    local prefix = ''\n    local suffix\
    \ = ''\n    while true do\n        postfix = postfix .. suffix\n        reverse\
    \ = reverse .. prefix\n        prefix = prefix .. suffix\n        if palindrome\
    \ == reverse then\n            return postfix\n        end\n        suffix = suffix:reverse()\n\
    \    end\nend", "  local palindrome = string\n  local suffix\n  local prefix_length\n\
    \  local longest_postfix_length\n  local longest_postfix_length_index\n  local\
    \ longest_postfix_length_palindrome\n  local longest_postfix_length_suffix\n \
    \ local longest_postfix_length_suffix_index\n  local longest_postfix_length_suffix_palindrome\n\
    \  local longest_postfix_length_suffix_suffix\n  local longest_postfix_length_suffix_suffix_index\n\
    \  local longest_postfix_length_suffix_suffix_palindrome\n  local longest_postfix_length_suffix_suffix_suffix\n\
    \  local longest_postfix_length_suffix_suffix_suffix_index\n  local longest_postfix_length_suffix_suffix_suffix_palindrome\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix\n  local longest_postfix_length_suffix_suffix_suffix_suffix_index\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_palindrome\n  local\
    \ longest_postfix_length_suffix_suffix_suffix_suffix_suffix\n  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_index\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_palindrome\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix\n  local\
    \ longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_index\n  local\
    \ longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_palindrome\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_suffix_index\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_suffix_palindrome\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_palindrome\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_length_suffix_suffix_suffix_suffix_suffix_suffix_", " \
    \ local palindrome = string.gsub(string, \"%.%.\", \"%.\")\n  local postfix =\
    \ string.gsub(string, \"%.\", \"%.%.\")\n  return string.reverse(string.sub(postfix,\
    \ 1, string.len(palindrome))) .. palindrome\nend", "  local palindrome = string\n\
    \  local postfix = string\n  local reverse = string\n  local prefix_length = 0\n\
    \  while true do\n    local postfix = postfix .. reverse\n    if postfix ~= palindrome\
    \ then\n      break\n    end\n    prefix_length = prefix_length + 1\n  end\n \
    \ local postfix_length = #postfix\n  local palindrome_length = prefix_length +\
    \ postfix_length\n  local palindrome = string\n  local prefix_length = prefix_length\n\
    \  local postfix_length = postfix_length\n  while true do\n    local postfix =\
    \ postfix .. reverse\n    if postfix ~= palindrome then\n      break\n    end\n\
    \    prefix_length = prefix_length + 1\n    postfix_length = postfix_length +\
    \ 1\n  end\n  local palindrome = string\n  local prefix_length = prefix_length\n\
    \  local postfix_length = postfix_length\n  while true do\n    local postfix =\
    \ postfix .. reverse\n    if postfix ~= palindrome then\n      break\n    end\n\
    \    prefix_length = prefix_length + 1\n    postfix_length = postfix_length +\
    \ 1\n  end\n  local palindrome = string\n  local prefix_length = prefix_length\n\
    \  local postfix_length = postfix_length\n  while true do\n    local postfix =\
    \ postfix .. reverse\n    if postfix ~= palindrome then\n      break\n    end\n\
    \    prefix_length = prefix_length + 1\n    postfix_length = postfix_length +\
    \ 1\n  end\n  local palindrome = string\n  local prefix_length = prefix_length\n\
    \  local postfix_length = postfix_length\n  while true do\n    local postfix =\
    \ postfix .. reverse\n    if postfix ~= palindrome then\n      break\n    end\n\
    \    prefix_length = prefix_length + 1\n    postfix_length = postfix_length +\
    \ 1\n  end\n  local palindrome = string\n  local prefix_length = prefix_length\n\
    \  local postfix_length = postfix_length\n  while true do\n    local postfix =\
    \ postfix .. reverse\n    if postfix ~= palindrome then\n      break\n    end\n\
    \    prefix_length = prefix_length + 1\n    postfix_length = postfix_length +\
    \ 1\n  end\n  local palindrome = string\n  local prefix_length = prefix_length\n\
    \  local postfix_length = postfix_length\n  while true do\n    local postfix =\
    \ postfix .. reverse\n    if postfix ~= palindrome then\n      break\n    end\n\
    \    ", "  local palindrome = string\n  local postfix = string\n  local suffix\
    \ = ''\n  local reverse = ''\n  while true do\n    local postfix = postfix ..\
    \ suffix\n    local reverse = reverse .. suffix\n    if suffix == reverse then\n\
    \      break\n    end\n    suffix = suffix:reverse()\n  end\n  local postfix =\
    \ postfix .. reverse\n  local palindrome = postfix .. suffix\n  return palindrome\n\
    end", "  local palindrome = string\n  local palindrome_length = #string\n  local\
    \ palindrome_start = #string\n  local palindrome_end = #string\n  local palindrome_prefix\
    \ = string\n  local palindrome_suffix = string\n  local palindrome_prefix_length\
    \ = #string\n  local palindrome_suffix_length = #string\n  local palindrome_prefix_start\
    \ = #string\n  local palindrome_suffix_start = #string\n  local palindrome_prefix_end\
    \ = #string\n  local palindrome_suffix_end = #string\n  local palindrome_prefix_reverse\
    \ = string\n  local palindrome_suffix_reverse = string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  local palindrome_suffix_reverse_index = #string\n  local palindrome_prefix_reverse_index\
    \ = #string\n  ", "  local longest, longestPrefix, longestSuffix = 0, 0, 0\n \
    \ for i = 1, #string do\n    local prefix = string:sub(i, i)\n    local suffix\
    \ = string:sub(i + 1, #string)\n    local reverse = suffix:reverse()\n    if prefix\
    \ ~= reverse then\n      longest = i\n      longestPrefix = prefix\n      longestSuffix\
    \ = suffix\n    end\n  end\n  return string\n    :sub(longest, longestPrefix +\
    \ longestSuffix)\n    :reverse()\n    :sub(1, longestPrefix)\n    :reverse()\n\
    \    :sub(1, longestSuffix)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)\n    :reverse()\n    :sub(1, longest)\n    :reverse()\n\
    \    :sub(1, longest)", "  local palindrome = string\n  local longest_postfix\
    \ = string.len(string) - string.len(string.gsub(string, \"[^\" .. string.char(32)\
    \ .. \"]\", \"\"))\n  local longest_postfix_reverse = string.len(string) - string.len(string.gsub(string,\
    \ \"[^\" .. string.char(32) .. \"]\", \"\"))\n  local longest_postfix_reverse_suffix\n\
    \  local longest_postfix_suffix\n  local longest_postfix_suffix_reverse\n  local\
    \ longest_postfix_suffix_reverse_suffix\n  local longest_postfix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_reverse\n  local longest_postfix_suffix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_suffix_reverse\n  local longest_postfix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_reverse\n  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_reverse\n \
    \ local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_reverse\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_reverse\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_reverse\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_reverse\n\
    \  local longest_postfix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_suffix_",
  "  local palindrome = string\n  local postfix = string.gsub(string, \"%.$\", \"\"\
    )\n  local reverse = string.gsub(postfix, \"%.$\", \"%.\")\n  local prefix = string.gsub(reverse,\
    \ \"%.$\", \"\")\n  local palindrome = prefix .. reverse .. postfix\n  return\
    \ palindrome\nend", "  local palindrome = string\n  local longest_postfix = \"\
    \"\n  local longest_postfix_length = 0\n  local longest_postfix_index = -1\n \
    \ local longest_postfix_index2 = 0\n  local longest_postfix_index3 = 0\n  local\
    \ longest_postfix_index4 = 0\n  local longest_postfix_index5 = 0\n  local longest_postfix_index6\
    \ = 0\n  local longest_postfix_index7 = 0\n  local longest_postfix_index8 = 0\n\
    \  local longest_postfix_index9 = 0\n  local longest_postfix_index10 = 0\n  local\
    \ longest_postfix_index11 = 0\n  local longest_postfix_index12 = 0\n  local longest_postfix_index13\
    \ = 0\n  local longest_postfix_index14 = 0\n  local longest_postfix_index15 =\
    \ 0\n  local longest_postfix_index16 = 0\n  local longest_postfix_index17 = 0\n\
    \  local longest_postfix_index18 = 0\n  local longest_postfix_index19 = 0\n  local\
    \ longest_postfix_index20 = 0\n  local longest_postfix_index21 = 0\n  local longest_postfix_index22\
    \ = 0\n  local longest_postfix_index23 = 0\n  local longest_postfix_index24 =\
    \ 0\n  local longest_postfix_index25 = 0\n  local longest_postfix_index26 = 0\n\
    \  local longest_postfix_index27 = 0\n  local longest_postfix_index28 = 0\n  local\
    \ longest_postfix_index29 = 0\n  local longest_postfix_index30 = 0\n  local longest_postfix_index31\
    \ = 0\n  local longest_postfix_index32 = 0\n  local longest_postfix_index33 =\
    \ 0\n  local longest_postfix_index34 = 0\n  local longest_postfix_index35 = 0\n\
    \  local longest_postfix_index36 = 0\n  local longest_postfix_index37 = 0\n  local\
    \ longest_postfix_index38 = 0\n  local longest_postfix_index39 = 0\n  local longest_postfix_index40\
    \ = 0\n  local longest_postfix_index41 = 0\n  local longest_postfix_index42 =\
    \ 0\n  local longest_postfix_index43 = 0\n  local longest_postfix_index44 = 0\n\
    \  local longest_postfix_index45 = 0\n  local longest_postfix_index46 = 0\n  local\
    \ longest_postfix_index47 = 0\n  local longest_postfix_index48 = 0\n  local longest_postfix_",
  "  local palindrome = string\n  local longest_postfix = \"\"\n  local longest_postfix_length\
    \ = 0\n  local longest_postfix_index = 0\n  local longest_postfix_length_index\
    \ = 0\n  local longest_postfix_length_reverse = 0\n  local longest_postfix_length_reverse_index\
    \ = 0\n  local longest_postfix_length_reverse_count = 0\n  local longest_postfix_length_reverse_count2\
    \ = 0\n  local longest_postfix_length_reverse_count3 = 0\n  local longest_postfix_length_reverse_count4\
    \ = 0\n  local longest_postfix_length_reverse_count5 = 0\n  local longest_postfix_length_reverse_count6\
    \ = 0\n  local longest_postfix_length_reverse_count7 = 0\n  local longest_postfix_length_reverse_count8\
    \ = 0\n  local longest_postfix_length_reverse_count9 = 0\n  local longest_postfix_length_reverse_count10\
    \ = 0\n  local longest_postfix_length_reverse_count11 = 0\n  local longest_postfix_length_reverse_count12\
    \ = 0\n  local longest_postfix_length_reverse_count13 = 0\n  local longest_postfix_length_reverse_count14\
    \ = 0\n  local longest_postfix_length_reverse_count15 = 0\n  local longest_postfix_length_reverse_count16\
    \ = 0\n  local longest_postfix_length_reverse_count17 = 0\n  local longest_postfix_length_reverse_count18\
    \ = 0\n  local longest_postfix_length_reverse_count19 = 0\n  local longest_postfix_length_reverse_count20\
    \ = 0\n  local longest_postfix_length_reverse_count21 = 0\n  local longest_postfix_length_reverse_count22\
    \ = 0\n  local longest_postfix_length_reverse_count23 = 0\n  local longest_postfix_length_reverse_count24\
    \ = 0\n  local longest_postfix_length_reverse_count25 = 0\n  local longest_postfix_length_reverse_count26\
    \ = 0\n  local longest_postfix_length_reverse_count27 = 0\n  local longest_postfix_length_reverse_count28\
    \ = 0\n  local longest_postfix_length_reverse_count29 = 0\n  local longest_postfix_length_reverse_count30\
    \ = 0\n  local longest_postfix_length_reverse_count31 = 0\n  local longest_postfix_length_reverse_count32\
    \ = 0\n  local longest_postfix_length_reverse_count33 = 0\n  local longest_postfix_length_reverse_count34\
    \ = 0\n  local lon", "    local postfix = string.gsub(string, \"%.\", \"\")\n\
    \    local reverse = string.gsub(postfix, \"%.\", \"\")\n    return string ..\
    \ reverse .. postfix\nend", "    local palindrome = string\n    local palindrome_length\
    \ = #string\n    for i = 1, palindrome_length do\n        local char = string.sub(palindrome,\
    \ i, i)\n        if char == char then\n            -- This character is a palindrome\n\
    \            palindrome = string.sub(palindrome, i - 1, i - 1) + char + string.sub(palindrome,\
    \ i + 1, palindrome_length)\n            palindrome_length = palindrome_length\
    \ - 1\n        else\n            -- This character is not a palindrome\n     \
    \       break\n        end\n    end\n    return palindrome\nend", "  local palindrome\
    \ = string\n  local longest_postfix = string\n  local longest_postfix_length =\
    \ #string\n  local longest_postfix_reverse = string\n  local longest_postfix_reverse_length\
    \ = #string\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local longest_postfix_reverse_end = -1\n  local longest_postfix_reverse_length\
    \ = -1\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local longest_postfix_reverse_end = -1\n  local longest_postfix_reverse_length\
    \ = -1\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local longest_postfix_reverse_end = -1\n  local longest_postfix_reverse_length\
    \ = -1\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local longest_postfix_reverse_end = -1\n  local longest_postfix_reverse_length\
    \ = -1\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local longest_postfix_reverse_end = -1\n  local longest_postfix_reverse_length\
    \ = -1\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local longest_postfix_reverse_end = -1\n  local longest_postfix_reverse_length\
    \ = -1\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local longest_postfix_reverse_end = -1\n  local longest_postfix_reverse_length\
    \ = -1\n  local longest_postfix_reverse_start = -1\n  local longest_postfix_reverse_end\
    \ = -1\n  local longest_postfix_reverse_length = -1\n  local longest_postfix_reverse_start\
    \ = -1\n  local lon", "    local suffix\n    local palindrome\n    local suffixLen\n\
    \    local suffixStart\n    local suffixEnd\n    local suffixStartLen\n    local\
    \ suffixEndLen\n    local suffixStartPos\n    local suffixEndPos\n    local suffixStartPosLen\n\
    \    local suffixEndPosLen\n    local suffixStartPosPos\n    local suffixEndPosPos\n\
    \    local suffixStartPosPosLen\n    local suffixEndPosPosLen\n    local suffixStartPosPosPos\n\
    \    local suffixEndPosPosPos\n    local suffixStartPosPosPosLen\n    local suffixEndPosPosPosLen\n\
    \    local suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosLen\n    local\
    \ suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n\
    \    local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n  \
    \  local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n    local\
    \ suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n\
    \    local suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n  \
    \  local suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n    local\
    \ suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n\
    \    local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n  \
    \  local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n    local\
    \ suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n\
    \    local suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n  \
    \  local suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n    local\
    \ suffixStartPosPosPosPosLen\n    local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n\
    \    local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n  \
    \  local suffixEndPosPosPosPosLen\n    local suffixStartPosPosPosPosLen\n    local\
    \ suffixEndPosPosPosPosLen\n    local suffixStartPos", "  local palindrome = string\n\
    \  local suffix = ''\n  local length = 0\n  while palindrome ~= '' do\n    length\
    \ = length + 1\n    suffix = suffix .. string[#string]\n    palindrome = string.sub(palindrome,\
    \ 1, #palindrome)\n  end\n  local palindrome_length = length\n  local palindrome_suffix\
    \ = suffix\n  local palindrome_prefix = string\n  while palindrome_length ~= 0\
    \ do\n    local palindrome_prefix_length = #palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = string.sub(palindrome_prefix, 1, palindrome_prefix_length)\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_prefix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_suffix .. palindrome_suffix\n    local palindrome_prefix_suffix\
    \ = palindrome_prefix_", "    local suffix\n    local palindrome\n    local longest_postfix_length\n\
    \    local longest_postfix_length_index\n    local longest_postfix_length_string\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_postfix_length_string_index\n\
    \    local longest_postfix_length_string_index\n    local longest_post", "  local\
    \ postfix = string.gsub(string, \"[^\" .. string.char(32) .. \"]\", \"\")\n  local\
    \ reverse = string.gsub(string.gsub(postfix, \"^\", \"\"), \"[^\" .. string.char(32)\
    \ .. \"]\", \"\")\n  return string .. reverse .. postfix\nend", "  local palindrome\
    \ = string\n  local longest_postfix = string\n  local longest_postfix_length =\
    \ string\n  local longest_postfix_suffix_length = string\n  local longest_postfix_suffix_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_length = string\n  local longest_postfix_suffix_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_length = string\n \
    \ local longest_postfix_suffix_reverse_reverse_reverse = string\n  local longest_postfix_suffix_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse = string\n\
    \  local longest_postfix_suffix_reverse_reverse_reverse_reverse_length = string\n\
    \  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse = string\n\
    \  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_reverse_reverse_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_reverse_re", "  local palindrome\
    \ = string\n  local postfix = string\n  local reverse = string\n  local i = 1\n\
    \  while true do\n    local length = #postfix\n    if length <= 1 then\n     \
    \ return palindrome\n    end\n    local postfix_length = #postfix / 2\n    local\
    \ postfix_start = postfix + postfix_length\n    local postfix_end = postfix_start\
    \ + postfix_length\n    local postfix_reverse = reverse:sub(postfix_start, postfix_end)\n\
    \    if postfix_reverse == postfix_end then\n      postfix = postfix_start\n \
    \     reverse = postfix_reverse\n      break\n    end\n    postfix = postfix_start\n\
    \    postfix_reverse = postfix_end\n  end\nend", "  local postfix = string\n \
    \ local reverse = \"\"\n  local longest = 0\n  while true do\n    local index\
    \ = string.find(postfix, \"[^\" .. reverse .. \"]\")\n    if index == nil then\n\
    \      break\n    end\n    longest = string.len(postfix) - index\n    postfix\
    \ = string.sub(postfix, index + 1)\n    reverse = reverse .. string.sub(postfix,\
    \ 1, longest)\n  end\n  return postfix .. reverse\nend", "  -- Find the longest\
    \ postfix of supplied string that is a palindrome.\n  local postfix = string\n\
    \  local longest = 0\n  for i = 1, #string do\n    local postfix = string.sub(string,\
    \ (i - 1), i)\n    if postfix ~= string.sub(string, 1, i) and postfix ~= string.sub(string,\
    \ i) then\n      longest = i\n      break\n    end\n  end\n  -- Append to the\
    \ end of the string reverse of a string prefix that comes before the palindromic\
    \ suffix.\n  local reverse = string.sub(string, 1, longest)\n  local prefix =\
    \ string.sub(string, longest)\n  return string.reverse(prefix..reverse)\nend",
  "  local palindrome = string\n  local suffix = ''\n  local longest_postfix = 1\n\
    \  local longest_postfix_length = 1\n  local longest_postfix_index = 1\n  local\
    \ longest_postfix_index2 = 0\n  local longest_postfix_index3 = 0\n  local longest_postfix_index4\
    \ = 0\n  local longest_postfix_index5 = 0\n  local longest_postfix_index6 = 0\n\
    \  local longest_postfix_index7 = 0\n  local longest_postfix_index8 = 0\n  local\
    \ longest_postfix_index9 = 0\n  local longest_postfix_index10 = 0\n  local longest_postfix_index11\
    \ = 0\n  local longest_postfix_index12 = 0\n  local longest_postfix_index13 =\
    \ 0\n  local longest_postfix_index14 = 0\n  local longest_postfix_index15 = 0\n\
    \  local longest_postfix_index16 = 0\n  local longest_postfix_index17 = 0\n  local\
    \ longest_postfix_index18 = 0\n  local longest_postfix_index19 = 0\n  local longest_postfix_index20\
    \ = 0\n  local longest_postfix_index21 = 0\n  local longest_postfix_index22 =\
    \ 0\n  local longest_postfix_index23 = 0\n  local longest_postfix_index24 = 0\n\
    \  local longest_postfix_index25 = 0\n  local longest_postfix_index26 = 0\n  local\
    \ longest_postfix_index27 = 0\n  local longest_postfix_index28 = 0\n  local longest_postfix_index29\
    \ = 0\n  local longest_postfix_index30 = 0\n  local longest_postfix_index31 =\
    \ 0\n  local longest_postfix_index32 = 0\n  local longest_postfix_index33 = 0\n\
    \  local longest_postfix_index34 = 0\n  local longest_postfix_index35 = 0\n  local\
    \ longest_postfix_index36 = 0\n  local longest_postfix_index37 = 0\n  local longest_postfix_index38\
    \ = 0\n  local longest_postfix_index39 = 0\n  local longest_postfix_index40 =\
    \ 0\n  local longest_postfix_index41 = 0\n  local longest_postfix_index42 = 0\n\
    \  local longest_postfix_index43 = 0\n  local longest_postfix_index44 = 0\n  local\
    \ longest_postfix_index45 = 0\n  local longest_postfix_index46 = 0\n  local longest_postfix_index47\
    \ = 0\n  local longest_postfix_index48 = 0\n  ", "  -- Find longest postfix of\
    \ string that is a palindrome.\n  local postfix = string.gsub(string, \"%.\",\
    \ \"\")\n  local longest = string.len(postfix)\n  local palindrome = string.sub(postfix,\
    \ 1, longest)\n  -- Append to the end of the string reverse of a string prefix\
    \ that comes before the palindromic suffix.\n  local reverse = string.gsub(string,\
    \ \"%.\", string.reverse(palindrome))\n  return palindrome .. reverse\nend", " \
    \ -- If string is empty or only contains spaces, return empty string.\n  if string\
    \ == \"\" or string == \" \" then\n    return \"\"\n  end", "  local palindrome\
    \ = string\n  local longest_postfix = string\n  local longest_postfix_length =\
    \ string\n  local longest_postfix_length_index = 0\n  local longest_postfix_length_reversed\
    \ = string\n  local longest_postfix_length_reversed_index = 0\n  local longest_postfix_length_reversed_reversed\
    \ = string\n  local longest_postfix_length_reversed_reversed_index = 0\n  local\
    \ longest_postfix_length_reversed_reversed_reversed = string\n  local longest_postfix_length_reversed_reversed_reversed_index\
    \ = 0\n  local longest_postfix_length_reversed_reversed_reversed_reversed = string\n\
    \  local longest_postfix_length_reversed_reversed_reversed_reversed_index = 0\n\
    \  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed =\
    \ string\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n  local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n  local lon", "  local palindrome = string\n  local longest_postfix\
    \ = string\n  local longest_postfix_index = -1\n  local longest_postfix_length\
    \ = -1\n  local longest_postfix_suffix_index = -1\n  local longest_postfix_suffix_length\
    \ = -1\n  local longest_postfix_suffix_reverse = string\n  local longest_postfix_suffix_reverse_index\
    \ = -1\n  local longest_postfix_suffix_reverse_length = -1\n  local longest_postfix_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_index = -1\n  local\
    \ longest_postfix_suffix_reverse_suffix_length = -1\n  local longest_postfix_suffix_reverse_suffix_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_suffix_index = -1\n\
    \  local longest_postfix_suffix_reverse_suffix_suffix_length = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_index\
    \ = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_length = -1\n\
    \  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix = string\n\
    \  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_index = -1\n\
    \  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_length = -1\n\
    \  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix = string\n\
    \  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_index\
    \ = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_length\
    \ = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_suffix_index\
    \ = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_suffix_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_suffix_suffix_index\
    \ = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_suffix_suffix_length\
    \ = -1\n  local longest_postfix_suffix_reverse_suffix_suffix_suffix_suffix_suffix_",
  "  -- Find the longest postfix that is a palindrome.\n  local postfix = string.gsub(string,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse = string.gsub(postfix, \"%.\", \"\")\n  -- Find the longest\
    \ postfix that is a palindrome.\n  local postfix_reverse2 = string.gsub(postfix_reverse,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse3 = string.gsub(postfix_reverse2, \"%.\", \"\")\n  -- Find the\
    \ longest postfix that is a palindrome.\n  local postfix_reverse4 = string.gsub(postfix_reverse3,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse5 = string.gsub(postfix_reverse4, \"%.\", \"\")\n  -- Find the\
    \ longest postfix that is a palindrome.\n  local postfix_reverse6 = string.gsub(postfix_reverse5,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse7 = string.gsub(postfix_reverse6, \"%.\", \"\")\n  -- Find the\
    \ longest postfix that is a palindrome.\n  local postfix_reverse8 = string.gsub(postfix_reverse7,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse9 = string.gsub(postfix_reverse8, \"%.\", \"\")\n  -- Find the\
    \ longest postfix that is a palindrome.\n  local postfix_reverse10 = string.gsub(postfix_reverse9,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse11 = string.gsub(postfix_reverse10, \"%.\", \"\")\n  -- Find\
    \ the longest postfix that is a palindrome.\n  local postfix_reverse12 = string.gsub(postfix_reverse11,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse13 = string.gsub(postfix_reverse12, \"%.\", \"\")\n  -- Find\
    \ the longest postfix that is a palindrome.\n  local postfix_reverse14 = string.gsub(postfix_reverse13,\
    \ \"%.\", \"\")\n  -- Find the longest postfix that is a palindrome.\n  local\
    \ postfix_reverse15 = string.gsub(postfix_reverse14, \"%.\", \"\")\n  -- Find\
    \ the longest postfix that is a palindrome.\n  local postfix_reverse16 = ", " \
    \ local palindrome = string\n  local prefix_length = 0\n  local suffix_length\
    \ = 0\n  local palindrome_length = 0\n  local palindrome_start = nil\n  local\
    \ palindrome_end = nil\n  local palindrome_suffix = nil\n  local palindrome_prefix\
    \ = nil\n  local palindrome_prefix_length = nil\n  local palindrome_suffix = nil\n\
    \  local palindrome_suffix_length = nil\n  local palindrome_prefix_start = nil\n\
    \  local palindrome_prefix_end = nil\n  local palindrome_prefix_suffix = nil\n\
    \  local palindrome_prefix_suffix_length = nil\n  local palindrome_prefix_suffix_start\
    \ = nil\n  local palindrome_prefix_suffix_end = nil\n  local palindrome_prefix_suffix_suffix\
    \ = nil\n  local palindrome_prefix_suffix_suffix_length = nil\n  local palindrome_prefix_suffix_suffix_start\
    \ = nil\n  local palindrome_prefix_suffix_suffix_end = nil\n  local palindrome_prefix_suffix_suffix_suffix\
    \ = nil\n  local palindrome_prefix_suffix_suffix_suffix_length = nil\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_start = nil\n  local palindrome_prefix_suffix_suffix_suffix_end\
    \ = nil\n  local palindrome_prefix_suffix_suffix_suffix_suffix = nil\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_length = nil\n  local palindrome_prefix_suffix_suffix_suffix_suffix_start\
    \ = nil\n  local palindrome_prefix_suffix_suffix_suffix_suffix_end = nil\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_suffix = nil\n  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_length\
    \ = nil\n  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_start =\
    \ nil\n  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_end = nil\n\
    \  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix = nil\n \
    \ local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_length = nil\n\
    \  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_start = nil\n\
    \  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_end = nil",
  "    local palindrome = string\n    local palindrome_len = #string\n    local palindrome_postfix\
    \ = string\n    local palindrome_postfix_len = #string\n    local palindrome_postfix_reverse\
    \ = string\n    local palindrome_postfix_reverse_len = #string\n    local palindrome_postfix_reverse_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palindrome_postfix_reverse_end_index\
    \ = 0\n    local palindrome_postfix_reverse_start_index = 0\n    local palin",
  "  local palindrome = string\n  local longest_postfix = string\n  local longest_postfix_length\
    \ = string\n  local longest_postfix_suffix_length = string\n  local longest_postfix_suffix_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_suffix_reverse_index = string\n  local longest_postfix_suffix_reverse_index\
    \ = string\n  local longest_postfix_", "    local palindrome = string\n    local\
    \ postfix = string\n    local reverse = string\n    local suffix = ''\n    local\
    \ length = 0\n    while true do\n        length = length + 1\n        postfix\
    \ = postfix .. suffix\n        reverse = reverse .. suffix\n        suffix = string\n\
    \        local palindrome = string\n        local postfix = string\n        local\
    \ reverse = string\n        local suffix = ''\n        local length = 0\n    end\n\
    end", "    local postfix = string.match(reverse(string), \"([^%s]+)$\")\n    local\
    \ palindrome = string.sub(string, 1, #string) + string.sub(postfix, 1, #postfix)\n\
    \    return palindrome\nend", "    local palindrome = string\n    local postfix\
    \ = string\n    local reverse = string\n    local length = 0\n    while true do\n\
    \        length = length + 1\n        postfix = postfix .. string\n        reverse\
    \ = reverse .. string\n        if postfix ~= reverse then\n            postfix\
    \ = postfix .. string\n            reverse = reverse .. string\n        end\n\
    \        if postfix ~= reverse then\n            break\n        end\n    end\n\
    \    if length == 0 then\n        return nil\n    end\n    local palindrome =\
    \ string\n    local postfix = string\n    local reverse = string\n    local length\
    \ = 0\n    while true do\n        length = length + 1\n        postfix = postfix\
    \ .. string\n        reverse = reverse .. string\n        if postfix ~= reverse\
    \ then\n            postfix = postfix .. string\n            reverse = reverse\
    \ .. string\n        end\n        if postfix ~= reverse then\n            break\n\
    \        end\n    end\n    if length == 0 then\n        return nil\n    end\n\
    \    local palindrome = string\n    local postfix = string\n    local reverse\
    \ = string\n    local length = 0\n    while true do\n        length = length +\
    \ 1\n        postfix = postfix .. string\n        reverse = reverse .. string\n\
    \        if postfix ~= reverse then\n            postfix = postfix .. string\n\
    \            reverse = reverse .. string\n        end\n        if postfix ~= reverse\
    \ then\n            break\n        end\n    end\n    if length == 0 then\n   \
    \     return nil\n    end\n    local palindrome = string\n    local postfix =\
    \ string\n    local reverse = string\n    local length = 0\n    while true do\n\
    \        length = length + 1\n        postfix = postfix .. string\n        reverse\
    \ = reverse .. string\n        if postfix ~= reverse then\n            postfix\
    \ = postfix .. string\n            reverse = reverse .. string\n        end\n\
    \        if postfix ~= reverse then\n            break\n        end\n    end\n\
    \    if length == 0 then\n        return nil\n    end\n    local palindrome =\
    \ string\n    local postfix = string\n    local reverse = string\n    local length\
    \ = 0\n    while true do\n        length = length + 1\n        postfix = postfix\
    \ .. string\n        reverse = reverse .. string\n        if postfix ~= reverse\
    \ then\n            postfix = postfix .. string\n            reverse = reverse\
    \ .. string\n        end\n        if postfix ~= reverse then\n            break\n\
    \        end\n    end\n    if length == 0 then\n        return nil", "  local\
    \ palindrome = string\n  local palindrome_length = #string\n  local palindrome_start\
    \ = #string\n  local palindrome_end = #string\n  local palindrome_prefix = string\n\
    \  local palindrome_suffix = string\n  local palindrome_prefix_length = #string\n\
    \  local palindrome_suffix_length = #string\n  local palindrome_prefix_start =\
    \ #string\n  local palindrome_suffix_start = #string\n  local palindrome_prefix_end\
    \ = #string\n  local palindrome_suffix_end = #string", "  local palindrome = string\n\
    \  local postfix = string\n  local reverse = string\n  local length = #string\n\
    \  local index = 1\n  while index <= length do\n    local char = string.sub(palindrome,\
    \ index, index)\n    if char == reverse then\n      postfix = string.sub(postfix,\
    \ 1, index - 1) .. reverse .. string.sub(postfix, index + 1)\n      reverse =\
    \ string.sub(reverse, 1, index - 1) .. reverse .. string.sub(reverse, index +\
    \ 1)\n      index = index + 1\n    else\n      index = index + 1\n    end\n  end\n\
    \  return postfix .. reverse .. string\nend", "    local palindrome = string\n\
    \    local postfix = string\n    local reverse = \"\"\n    local longest_postfix\
    \ = \"\"\n    local longest_postfix_length = 0\n    local longest_postfix_index\
    \ = 0\n    local longest_postfix_length_index = 0\n    local longest_postfix_index2\
    \ = 0\n    local longest_postfix_length_index2 = 0\n    local longest_postfix_length_index3\
    \ = 0\n    local longest_postfix_length_index4 = 0\n    local longest_postfix_length_index5\
    \ = 0\n    local longest_postfix_length_index6 = 0\n    local longest_postfix_length_index7\
    \ = 0\n    local longest_postfix_length_index8 = 0\n    local longest_postfix_length_index9\
    \ = 0\n    local longest_postfix_length_index10 = 0\n    local longest_postfix_length_index11\
    \ = 0\n    local longest_postfix_length_index12 = 0\n    local longest_postfix_length_index13\
    \ = 0\n    local longest_postfix_length_index14 = 0\n    local longest_postfix_length_index15\
    \ = 0\n    local longest_postfix_length_index16 = 0\n    local longest_postfix_length_index17\
    \ = 0\n    local longest_postfix_length_index18 = 0\n    local longest_postfix_length_index19\
    \ = 0\n    local longest_postfix_length_index20 = 0\n    local longest_postfix_length_index21\
    \ = 0\n    local longest_postfix_length_index22 = 0\n    local longest_postfix_length_index23\
    \ = 0\n    local longest_postfix_length_index24 = 0\n    local longest_postfix_length_index25\
    \ = 0\n    local longest_postfix_length_index26 = 0\n    local longest_postfix_length_index27\
    \ = 0\n    local longest_postfix_length_index28 = 0\n    local longest_postfix_length_index29\
    \ = 0\n    local longest_postfix_length_index30 = 0\n    local longest_postfix_length_index31\
    \ = 0\n    local longest_postfix_length_index32 = 0\n    local longest_postfix_length_index33\
    \ = 0\n    local longest_postfix_length_index34 = 0\n    local longest_postfix_length_index35\
    \ = 0\n    local longest_postfix_length_index36 = 0\n    local longest_postfix_length_index37\
    \ = 0\n    local longest_postfix_length_index38 = 0\n    local longest_postfix_length_index39\
    \ = 0\n    local longest_postfix_length_index40 = 0\n    local longest_postfix_length_index41\
    \ = 0\n    local longest_", "  -- Find the longest postfix that is a palindrome.\n\
    \  local longest_postfix = string.gsub(string, \"%.$\", \"\")\n  -- Find the longest\
    \ postfix that is a palindrome.\n  local longest_postfix_reverse = string.gsub(longest_postfix,\
    \ \"%.$\", \"\")\n  -- Append the reverse of the longest postfix to the end of\
    \ the string.\n  local result = string..longest_postfix_reverse\n  return result\n\
    end", "    local postfix = string.match(\"^(.-)$\", \"^\" .. string .. \"$\")\n\
    \    local reverse = string.match(\"^(.-)$\", \"^\" .. string.gsub(postfix, \"\
    (.-)\", \"%1\") .. \"$\")\n    return string .. reverse .. postfix\nend", "  local\
    \ palindrome = string\n  local postfix = string\n  local reverse = string\n  local\
    \ suffix = ''\n  local i = 0\n  while i <= #string do\n    suffix = string[#string\
    \ + i]\n    postfix = string[#string + i..#string]\n    reverse = reverse .. suffix\n\
    \    if suffix ~= postfix then\n      palindrome = palindrome .. reverse\n   \
    \ end\n    i = i + 1\n  end\n  return palindrome\nend", "    local palindrome\
    \ = string\n    local postfix = string\n    local reverse = \"\"\n    local prefix_length\
    \ = 0\n    while postfix ~= \"\" do\n        local postfix_length = #postfix\n\
    \        local postfix_reverse = reverse:sub(1, #reverse)\n        postfix = postfix:sub(1,\
    \ postfix_length - 1)\n        reverse = reverse .. postfix_reverse\n        prefix_length\
    \ = prefix_length + postfix_length\n        if postfix_length == #postfix then\n\
    \            postfix = postfix:sub(1, postfix_length - 1)\n            reverse\
    \ = reverse .. postfix\n        end\n    end\n    local postfix_length = #postfix\n\
    \    local postfix_reverse = reverse:sub(1, #reverse)\n    postfix = postfix:sub(1,\
    \ postfix_length - 1)\n    reverse = reverse .. postfix_reverse\n    prefix_length\
    \ = prefix_length + postfix_length\n    if prefix_length == #string then\n   \
    \     postfix = postfix:sub(1, postfix_length - 1)\n        reverse = reverse\
    \ .. postfix\n    end\n    return palindrome .. reverse\nend", "    local postfix\
    \ = string\n    local reverse = \"\"\n    local palindrome = \"\"\n    while true\
    \ do\n        local index = string.find(postfix, \"[^\" .. reverse .. \"]\")\n\
    \        if index == nil then\n            break\n        end\n        reverse\
    \ = reverse .. string.sub(postfix, 1, index)\n        postfix = string.sub(postfix,\
    \ index + 1)\n    end\n    postfix = reverse .. postfix\n    local index = string.find(postfix,\
    \ \"[^\" .. reverse .. \"]\")\n    if index == nil then\n        return nil\n\
    \    end\n    palindrome = string.sub(postfix, 1, index) .. reverse .. string.sub(postfix,\
    \ index + 1)\n    return palindrome\nend", "    local postfix = string\n    local\
    \ reverse = \"\"\n    local longest = 0\n    while postfix ~= reverse do\n   \
    \     longest = longest + 1\n        postfix = postfix .. string.rev(string.sub(postfix,\
    \ 1, longest))\n        reverse = reverse .. string.rev(string.sub(postfix, longest))\n\
    \    end\n    return postfix .. reverse\nend", "  local palindrome = string\n\
    \  local postfix = string\n  local reverse = string\n  local length = #string\n\
    \  for i = 1, length do\n    local char = string.sub(palindrome, i, i)\n    if\
    \ char == reverse then\n      postfix = string.sub(postfix, 1, i - 1)\n      reverse\
    \ = string.sub(reverse, i + 1, #reverse)\n      break\n    end\n  end\n  postfix\
    \ = string.sub(postfix, 1, #postfix - 1)\n  reverse = string.sub(reverse, 1, #reverse\
    \ - 1)\n  local palindrome = string.sub(palindrome, 1, #palindrome - 1)\n  local\
    \ postfix = string.sub(postfix, 1, #postfix - 1)\n  local reverse = string.sub(reverse,\
    \ 1, #reverse - 1)\n  local palindrome = string.sub(palindrome, 1, #palindrome\
    \ - 1)\n  local postfix = string.sub(postfix, 1, #postfix - 1)\n  local reverse\
    \ = string.sub(reverse, 1, #reverse - 1)\n  local palindrome = string.sub(palindrome,\
    \ 1, #palindrome - 1)\n  local postfix = string.sub(postfix, 1, #postfix - 1)\n\
    \  local reverse = string.sub(reverse, 1, #reverse - 1)\n  local palindrome =\
    \ string.sub(palindrome, 1, #palindrome - 1)\n  local postfix = string.sub(postfix,\
    \ 1, #postfix - 1)\n  local reverse = string.sub(reverse, 1, #reverse - 1)\n \
    \ local palindrome = string.sub(palindrome, 1, #palindrome - 1)\n  local postfix\
    \ = string.sub(postfix, 1, #postfix - 1)\n  local reverse = string.sub(reverse,\
    \ 1, #reverse - 1)\n  local palindrome = string.sub(palindrome, 1, #palindrome\
    \ - 1)\n  local postfix = string.sub(postfix, 1, #postfix - 1)\n  local reverse\
    \ = string.sub(reverse, 1, #reverse - 1)\n  local palindrome = string.sub(palindrome,\
    \ 1, #palindrome - 1)\n  local postfix = string.sub(postfix, 1, #postfix - 1)\n\
    \  local reverse = string.sub(reverse, 1, #reverse - 1)\n  local palindrome =\
    \ string.sub(palindrome, 1, #palindrome - 1)\n  local postfi", "    local palindrome\
    \ = string.gsub(string, \"[^\" .. string.char(string.byte(\"A\")) .. \"]\", \"\
    \")\n    local reversed_string = string.gsub(string, \"[^\" .. string.char(string.byte(\"\
    A\")) .. \"]\", \"\")\n    local reversed_palindrome = string.gsub(palindrome,\
    \ \"[\" .. string.char(string.byte(\"A\")) .. \"]\", \"\")\n    return reversed_palindrome\
    \ .. reversed_string\nend", "  local postfix = string.match(reverse(string), \"\
    ([^%s]+)$\")\n  return string .. string.sub(postfix, 1, string.len(postfix))\n\
    end", "    local palindrome = string\n    local longest_postfix = string\n   \
    \ local longest_postfix_length = string\n    local longest_postfix_reverse = string\n\
    \    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length = string\n    local longest_post",
  "  local palindrome = string\n  local postfix = string\n  local reverse = string\n\
    \  local length = #string\n  local i = 0\n  while i < length do\n    local c =\
    \ string.sub(palindrome, i, i)\n    if c ~= string.sub(reverse, #reverse, #reverse)\
    \ then\n      postfix = string.sub(postfix, 1, #postfix)\n      reverse = string.sub(reverse,\
    \ #reverse, #reverse)\n      postfix = postfix .. reverse\n    end\n    i = i\
    \ + 1\n  end\n  return postfix .. palindrome\nend", "    local postfix = string\n\
    \    local reverse = \"\"\n    local palindrome = \"\"\n    while true do\n  \
    \      local postfix = postfix .. reverse\n        local reverse = reverse:reverse()\n\
    \        if postfix ~= reverse then\n            palindrome = postfix .. reverse\n\
    \            break\n        end\n    end\n    return palindrome\nend", "    local\
    \ suffix\n    local suffixLength\n    local suffixLength2\n    local suffixLength3\n\
    \    local suffixLength4\n    local suffixLength5\n    local suffixLength6\n \
    \   local suffixLength7\n    local suffixLength8\n    local suffixLength9\n  \
    \  local suffixLength10\n    local suffixLength11\n    local suffixLength12\n\
    \    local suffixLength13\n    local suffixLength14\n    local suffixLength15\n\
    \    local suffixLength16\n    local suffixLength17\n    local suffixLength18\n\
    \    local suffixLength19\n    local suffixLength20\n    local suffixLength21\n\
    \    local suffixLength22\n    local suffixLength23\n    local suffixLength24\n\
    \    local suffixLength25\n    local suffixLength26\n    local suffixLength27\n\
    \    local suffixLength28\n    local suffixLength29\n    local suffixLength30\n\
    \    local suffixLength31\n    local suffixLength32\n    local suffixLength33\n\
    \    local suffixLength34\n    local suffixLength35\n    local suffixLength36\n\
    \    local suffixLength37\n    local suffixLength38\n    local suffixLength39\n\
    \    local suffixLength40\n    local suffixLength41\n    local suffixLength42\n\
    \    local suffixLength43\n    local suffixLength44\n    local suffixLength45\n\
    \    local suffixLength46\n    local suffixLength47\n    local suffixLength48\n\
    \    local suffixLength49\n    local suffixLength50\n    local suffixLength51\n\
    \    local suffixLength52\n    local suffixLength53\n    local suffixLength54\n\
    \    local suffixLength55\n    local suffixLength56\n    local suffixLength57\n\
    \    local suffixLength58\n    local suffixLength59\n    local suffixLength60\n\
    \    local suffixLength61\n    local suffixLength62\n    local suffixLength63\n\
    \    local suffixLength64\n    local suffixLength65\n    local suffixLength66\n\
    \    local suffixLength67\n    local suffixLength68\n    local suffixLength69\n\
    \    local suffixLength70\n    local suffixLength71\n    local suffixLength72\n\
    \    local suffixLength73\n    local suffixLength74\n    local suffixLength75\n\
    \    local suffixLength76\n    local suffixLength77\n    local suffixLength78\n\
    \    local suffixLength79\n    local suffixLength80\n    local suffixLength81\n\
    \    local suffixLength82\n    local suffixLength83\n    local suffixLength84\n\
    \    local suffixLength85", "    local palindrome = string\n    local postfix\
    \ = string.gsub(string, \"%.\", \"\")\n    local postfix_reverse = string.gsub(postfix,\
    \ \"%.\", \"\")\n    local prefix_reverse = string.gsub(postfix_reverse, \"%.\"\
    , \"\")\n    local prefix_length = #prefix_reverse\n    if prefix_length > 0 then\n\
    \        local prefix_postfix = string.gsub(prefix_reverse, \"%.\", \"\")\n  \
    \      local prefix_postfix_reverse = string.gsub(prefix_postfix, \"%.\", \"\"\
    )\n        local prefix_postfix_length = #prefix_postfix_reverse\n        if prefix_postfix_length\
    \ > 0 then\n            local prefix_postfix_postfix = string.gsub(prefix_postfix_reverse,\
    \ \"%.\", \"\")\n            local prefix_postfix_postfix_reverse = string.gsub(prefix_postfix_postfix,\
    \ \"%.\", \"\")\n            local prefix_postfix_postfix_length = #prefix_postfix_postfix_reverse\n\
    \            if prefix_postfix_postfix_length > 0 then\n                local\
    \ prefix_postfix_postfix_postfix = string.gsub(prefix_postfix_postfix_reverse,\
    \ \"%.\", \"\")\n                local prefix_postfix_postfix_postfix_reverse\
    \ = string.gsub(prefix_postfix_postfix_postfix, \"%.\", \"\")\n              \
    \  local prefix_postfix_postfix_postfix_length = #prefix_postfix_postfix_postfix_reverse\n\
    \                if prefix_postfix_postfix_postfix_length > 0 then\n         \
    \           local prefix_postfix_postfix_postfix_postfix = string.gsub(prefix_postfix_postfix_postfix_reverse,\
    \ \"%.\", \"\")\n                    local prefix_postfix_postfix_postfix_postfix_reverse\
    \ = string.gsub(prefix_postfix_postfix_postfix_postfix, \"%.\", \"\")\n      \
    \              local prefix_postfix_postfix_postfix_postfix_length = #prefix_postfix_postfix_postfix_postfix_reverse\n\
    \                    if prefix_postfix_postfix_postfix_postfix_length > 0 then\n\
    \                        local prefix_postfix_postfix_postfix_postfix_postfix\
    \ = string.gsub(prefix_postfix_postfix_postfix_postfix_reverse, \"%.\", \"\")\n\
    \                        local prefix_postfix_postfix_postfix_postfix_postfix_reverse\
    \ = string.gsub(prefix_postfix_postfix_postfix_postfix_postfix_postfix, \"%.\"\
    , \"\")\n                        local prefix_postfix_postfix_postfix_postfix_postfix_length\
    \ = #prefix_postfix_postfix_postfix_postfix_postfix_reverse\n                \
    \        if prefix_postfix_postfix_postfix_postfix_postfix_length > 0 then\n \
    \                           local prefix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string.gsub(prefix_postfix_postfix_postfix_postfix_postfix_postfix_reverse,\
    \ \"%.\", \"\")\n                            ", "  local palindrome = string\n\
    \  local palindrome_length = #string\n  local palindrome_postfix = string\n  local\
    \ palindrome_postfix_length = #string\n  local palindrome_postfix_reverse = string\n\
    \  local palindrome_postfix_reverse_length = #string", "  -- Find longest postfix\
    \ of string that is a palindrome.\n  local postfix = string.gsub(string, \"%.\"\
    , \"\")\n  -- Find longest postfix of string that is a palindrome.\n  local reverse\
    \ = string.gsub(postfix, \"%.\", \"\")\n  -- Append the reverse of the postfix\
    \ to the end of the string.\n  local result = string .. reverse .. postfix\n \
    \ return result\nend", "  -- Find the longest postfix of supplied string that\
    \ is a palindrome.\n  local longest_postfix = string.gsub(string, \"%.$%\", function(s)\n\
    \    local postfix = string.gsub(s, \".$%\", \"\")\n    return string.gsub(postfix,\
    \ \"%.$%\", function(s)\n      return string.gsub(s, \".$%\", \"\")\n    end)\n\
    \  end)\n  -- Append to the end of the string reverse of a string prefix that\
    \ comes before the palindromic suffix.\n  local palindrome = string.gsub(longest_postfix,\
    \ \"%.$%\", function(s)\n    local postfix = string.gsub(s, \".$%\", \"\")\n \
    \   return string.gsub(postfix, \"%.$%\", function(s)\n      return string.gsub(s,\
    \ \".$%\", \"\")\n    end)\n  end)\n  return palindrome\nend", "  local palindrome\
    \ = string\n  local palindrome_length = #string\n  local palindrome_postfix =\
    \ string\n  local palindrome_prefix_length = #string\n  while palindrome_length\
    \ > 1 do\n    local palindrome_postfix_length = #palindrome_postfix\n    local\
    \ palindrome_prefix_length = #palindrome_prefix\n    local palindrome_prefix_postfix\
    \ = palindrome_prefix\n    palindrome_postfix = string.reverse(palindrome_postfix)\n\
    \    palindrome_prefix_postfix = string.reverse(palindrome_prefix_postfix)\n \
    \   palindrome_length = palindrome_postfix_length - palindrome_prefix_length\n\
    \    palindrome = palindrome .. palindrome_prefix_postfix .. palindrome_postfix\n\
    \  end\n  return palindrome\nend", "  local palindrome = string\n  local postfix\
    \ = string.gsub(string, \"%.\", \"\")\n  local reverse = string.gsub(postfix,\
    \ \"%.\", \"\")\n  local prefix_length = #reverse\n  if prefix_length > 0 then\n\
    \    local prefix_reverse = string.gsub(reverse, \"%.\", \"\")\n    local prefix_postfix\
    \ = string.gsub(prefix_reverse, \"%.\", \"\")\n    local prefix_postfix_length\
    \ = #prefix_postfix\n    if prefix_postfix_length > 0 then\n      palindrome =\
    \ string.gsub(palindrome, \"%.%.%.\", \"\")\n      palindrome = string.gsub(palindrome,\
    \ \"%.%.%.%.\", \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.\"\
    , \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.\", \"\")\n\
    \      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.\", \"\")\n      palindrome\
    \ = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.\", \"\")\n      palindrome = string.gsub(palindrome,\
    \ \"%.%.%.%.%.%.%.%.\", \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n      palindro", "  local palindrome = string\n  local palindrome_len\
    \ = #string\n  local palindrome_postfix = string\n  local palindrome_prefix_len\
    \ = #string\n  local palindrome_prefix_postfix = string\n  local palindrome_prefix_postfix_len\
    \ = #string\n  local palindrome_prefix_postfix_postfix = string\n  local palindrome_prefix_postfix_postfix_len\
    \ = #string\n  local palindrome_prefix_postfix_postfix_postfix = string\n  local\
    \ palindrome_prefix_postfix_postfix_postfix_len = #string\n  local palindrome_prefix_postfix_postfix_postfix_postfix\
    \ = string\n  local palindrome_prefix_postfix_postfix_postfix_postfix_len = #string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix = string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_len = #string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix = string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_len\
    \ = #string\n  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string\n  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_len\
    \ = #string\n  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string\n  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_len\
    \ = #string\n  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_len\
    \ = #string\n  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_post",
  "    local palindrome = string\n    local longest_postfix_palindrome = string\n\
    \    local longest_postfix_palindrome_length = string\n    local longest_postfix_palindrome_length_index\
    \ = 0\n    local longest_postfix_palindrome_length_index2 = 0\n    local longest_postfix_palindrome_length_index3\
    \ = 0\n    local longest_postfix_palindrome_length_index4 = 0\n    local longest_postfix_palindrome_length_index5\
    \ = 0\n    local longest_postfix_palindrome_length_index6 = 0\n    local longest_postfix_palindrome_length_index7\
    \ = 0\n    local longest_postfix_palindrome_length_index8 = 0\n    local longest_postfix_palindrome_length_index9\
    \ = 0\n    local longest_postfix_palindrome_length_index10 = 0\n    local longest_postfix_palindrome_length_index11\
    \ = 0\n    local longest_postfix_palindrome_length_index12 = 0\n    local longest_postfix_palindrome_length_index13\
    \ = 0\n    local longest_postfix_palindrome_length_index14 = 0\n    local longest_postfix_palindrome_length_index15\
    \ = 0\n    local longest_postfix_palindrome_length_index16 = 0\n    local longest_postfix_palindrome_length_index17\
    \ = 0\n    local longest_postfix_palindrome_length_index18 = 0\n    local longest_postfix_palindrome_length_index19\
    \ = 0\n    local longest_postfix_palindrome_length_index20 = 0\n    local longest_postfix_palindrome_length_index21\
    \ = 0\n    local longest_postfix_palindrome_length_index22 = 0\n    local longest_postfix_palindrome_length_index23\
    \ = 0\n    local longest_postfix_palindrome_length_index24 = 0\n    local longest_postfix_palindrome_length_index25\
    \ = 0\n    local longest_postfix_palindrome_length_index26 = 0\n    local longest_postfix_palindrome_length_index27\
    \ = 0\n    local longest_postfix_palindrome_length_index28 = 0\n    local longest_postfix_palindrome_length_index29\
    \ = 0\n    local longest_postfix_palindrome_length_index30 = 0\n    local longest_postfix_palindrome_length_index31\
    \ = 0\n    local longest_postfix_palindrome_length_index32", "    local palindrome\
    \ = string\n    local postfix = string\n    local reverse = string\n    local\
    \ length = #string\n    for i = 1, length do\n        postfix = postfix .. string[length\
    \ - i]\n        reverse = reverse .. string[length - i - 1]\n    end\n    if reverse\
    \ == postfix then\n        palindrome = string\n    end\n    return palindrome\n\
    end", "  local palindrome = string\n  local longest_postfix = string\n  local\
    \ longest_postfix_length = #string\n  local longest_postfix_reverse = string\n\
    \  local longest_postfix_reverse_length = #string\n  local longest_postfix_reverse_length_index\
    \ = 0\n  local longest_postfix_reverse_index = 0\n  local longest_postfix_reverse_length_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index = 0\n  local longest_postfix_reverse_length_index_end_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index = 0\n\
    \  local longest_postfix_reverse_length_index_end_index_end_index_end = 0\n  local\
    \ longest_postfix_reverse_length_index_end_index_end_index_end_index = 0\n  local\
    \ longest_postfix_reverse_length_index_end_index_end_index_end_index = 0\n  local\
    \ longest_postfix_reverse_length_index_end_index_end_index_end_index_end = 0\n\
    \  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index_end_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index_end_index_end_index\
    \ = 0\n  local longest_postfix_reverse_length_index_end_index_end_index_end_index_end_index_end_index_",
  "  local palindrome = string\n  local postfix = string\n  local suffix = ''\n  while\
    \ true do\n    local postfix = string.sub(postfix, 1, string.len(postfix) - 1)\n\
    \    if string.sub(postfix, 1, string.len(postfix)) ~= suffix then\n      palindrome\
    \ = palindrome .. suffix\n      suffix = ''\n    end\n    if string.sub(palindrome,\
    \ 1, string.len(palindrome) - 1) ~= suffix then\n      palindrome = palindrome\
    \ .. suffix\n      suffix = ''\n    end\n    if string.sub(palindrome, 1, string.len(palindrome)\
    \ - 1) ~= suffix then\n      palindrome = palindrome .. suffix\n      suffix =\
    \ ''\n    end\n    if string.sub(palindrome, 1, string.len(palindrome) - 1) ~=\
    \ suffix then\n      palindrome = palindrome .. suffix\n      suffix = ''\n  \
    \  end\n    if string.sub(palindrome, 1, string.len(palindrome) - 1) ~= suffix\
    \ then\n      palindrome = palindrome .. suffix\n      suffix = ''\n    end\n\
    \    if string.sub(palindrome, 1, string.len(palindrome) - 1) ~= suffix then\n\
    \      palindrome = palindrome .. suffix\n      suffix = ''\n    end\n    if string.sub(palindrome,\
    \ 1, string.len(palindrome) - 1) ~= suffix then\n      palindrome = palindrome\
    \ .. suffix\n      suffix = ''\n    end\n    if string.sub(palindrome, 1, string.len(palindrome)\
    \ - 1) ~= suffix then\n      palindrome = palindrome .. suffix\n      suffix =\
    \ ''\n    end\n    if string.sub(palindrome, 1, string.len(palindrome) - 1) ~=\
    \ suffix then\n      palindrome = palindrome .. suffix\n      suffix = ''\n  \
    \  end\n    if string.sub(palindrome, 1, string.len(palindrome) - 1) ~= suffix\
    \ then\n      palindrome = palindrome .. suffix\n      suffix = ''\n    end\n\
    \    if string.sub(palindrome, 1, string.len(palindrome) - 1) ~= suffix then\n\
    \      palindrome = palindrome .. suffix\n      suffix = ''\n    end\n    if string.sub(palindrome,\
    \ 1, string.len(palindrome) - 1) ~= suffix then\n      palindrome = palindrome\
    \ .. suffix\n      suffix = ''\n    end\n    if string.sub(palindrome", "  local\
    \ longest, longestPrefix, longestSuffix = 0, 0, 0\n  for i = 1, #string do\n \
    \   local prefix = string:sub(i, i)\n    local suffix = string:sub(i + 1, #string)\n\
    \    local reverse = suffix:reverse()\n    if prefix == reverse then\n      longest\
    \ = i\n      longestPrefix = prefix\n      longestSuffix = suffix\n    end\n \
    \ end\n  return string..longestPrefix..longestSuffix..longest:reverse()\nend",
  "  -- Find the longest postfix of supplied string that is a palindrome.\n  local\
    \ longest = string.gsub(string, \"%.\", \"\")\n  -- Append to the end of the string\
    \ reverse of a string prefix that comes before the palindromic suffix.\n  longest\
    \ = string.gsub(longest, \"%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.%.",
  "  -- Find longest postfix of string that is a palindrome.\n  local longest_postfix\
    \ = string\n  local longest_postfix_length = 0\n  local longest_postfix_index\
    \ = 1\n  while longest_postfix_length < #string do\n    local postfix = string\n\
    \    local postfix_length = #postfix\n    while postfix_length < longest_postfix_length\
    \ do\n      postfix = postfix .. postfix\n      postfix_length = postfix_length\
    \ + 1\n    end\n    longest_postfix = postfix .. longest_postfix\n    longest_postfix_length\
    \ = longest_postfix_length + 1\n    longest_postfix_index = longest_postfix_index\
    \ + 1\n  end\n  -- Append to the end of the string reverse of a string prefix\
    \ that comes before the palindromic suffix.\n  local palindrome = string\n  local\
    \ palindrome_length = #string\n  while palindrome_length < longest_postfix_length\
    \ do\n    palindrome = palindrome .. string\n    palindrome_length = palindrome_length\
    \ + 1\n  end\n  return palindrome\nend", "  -- Find longest postfix that is a\
    \ palindrome.\n  local postfix = string\n  local longest_postfix = \"\"\n  local\
    \ longest_postfix_length = 0\n  for i = 1, #string do\n    local char = string[i]\n\
    \    local postfix_length = #postfix + 1\n    if postfix_length < longest_postfix_length\
    \ then\n      longest_postfix_length = postfix_length\n      longest_postfix =\
    \ postfix\n    end\n    postfix = postfix .. char\n  end\n  -- Append to the end\
    \ of the string reverse of a string prefix that comes before the palindromic suffix.\n\
    \  local reversed_postfix = string\n  local reversed_postfix_length = 0\n  for\
    \ i = 1, #longest_postfix do\n    local char = longest_postfix[i]\n    local reversed_postfix_length\
    \ = #reversed_postfix + 1\n    if reversed_postfix_length < reversed_postfix_length\
    \ then\n      reversed_postfix_length = reversed_postfix_length\n      reversed_postfix\
    \ = reversed_postfix .. char\n    end\n  end\n  return reversed_postfix .. longest_postfix\n\
    end", "  local palindrome = string\n  local longest_postfix = \"\"\n  local longest_postfix_length\
    \ = 0\n  local longest_postfix_index = 0\n  local longest_postfix_length_index\
    \ = 0\n  local longest_postfix_index2 = 0\n  local longest_postfix_length_index2\
    \ = 0\n  local longest_postfix_index3 = 0\n  local longest_postfix_length_index3\
    \ = 0\n  local longest_postfix_index4 = 0\n  local longest_postfix_length_index4\
    \ = 0\n  local longest_postfix_index5 = 0\n  local longest_postfix_length_index5\
    \ = 0\n  local longest_postfix_index6 = 0\n  local longest_postfix_length_index6\
    \ = 0\n  local longest_postfix_index7 = 0\n  local longest_postfix_length_index7\
    \ = 0\n  local longest_postfix_index8 = 0\n  local longest_postfix_length_index8\
    \ = 0\n  local longest_postfix_index9 = 0\n  local longest_postfix_length_index9\
    \ = 0\n  local longest_postfix_index10 = 0\n  local longest_postfix_length_index10\
    \ = 0\n  local longest_postfix_index11 = 0\n  local longest_postfix_length_index11\
    \ = 0\n  local longest_postfix_index12 = 0\n  local longest_postfix_length_index12\
    \ = 0\n  local longest_postfix_index13 = 0\n  local longest_postfix_length_index13\
    \ = 0\n  local longest_postfix_index14 = 0\n  local longest_postfix_length_index14\
    \ = 0\n  local longest_postfix_index15 = 0\n  local longest_postfix_length_index15\
    \ = 0\n  local longest_postfix_index16 = 0\n  local longest_postfix_length_index16\
    \ = 0\n  local longest_postfix_index17 = 0\n  local longest_postfix_length_index17\
    \ = 0\n  local longest_postfix_index18 = 0\n  local longest_postfix_length_index18\
    \ = 0\n  local longest_postfix_index19 = 0\n  local longest_postfix_length_index19\
    \ = 0\n  local longest_postfix_index20 = 0\n  local longest_postfix_length_index20\
    \ = 0\n  local longest_postfix_index21 = 0\n  local longest_postfix_length_index21\
    \ = 0\n  local longest_postfix_index22 = 0\n  local longest_postfix_length_index22\
    \ = 0\n  local longest_postfix_index23 = 0\n  local longest_postfix_length_index23\
    \ = 0\n  local longest_", "    local palindrome = string\n    local prefix_length\
    \ = 0\n    local suffix_length = 0\n    local postfix_length = 0\n    local postfix_start\
    \ = string.len(string) - 2\n    local postfix_end = string.len(string) - 1\n \
    \   while postfix_start > -1 do\n        postfix_length = string.len(string.sub(string,\
    \ postfix_start, postfix_end))\n        if postfix_length == 0 then\n        \
    \    postfix_start = postfix_end - 1\n        else\n            postfix_start\
    \ = postfix_start - 1\n        end\n        if string.sub(string, postfix_start,\
    \ postfix_end) == string.sub(string, postfix_end - 1, postfix_end) then\n    \
    \        postfix_length = postfix_length - 1\n        end\n        if postfix_length\
    \ == 0 then\n            postfix_length = postfix_end - postfix_start + 1\n  \
    \      end\n        if postfix_length < string.len(string.sub(string, postfix_start,\
    \ postfix_end)) then\n            postfix_length = string.len(string.sub(string,\
    \ postfix_start, postfix_end))\n        end\n        if postfix_length == 0 then\n\
    \            postfix_length = postfix_end - postfix_start + 1\n        end\n \
    \       if postfix_length < string.len(string.sub(string, postfix_start, postfix_end))\
    \ then\n            postfix_length = string.len(string.sub(string, postfix_start,\
    \ postfix_end))\n        end\n        if postfix_length == 0 then\n          \
    \  postfix_length = postfix_end - postfix_start + 1\n        end\n        if postfix_length\
    \ < string.len(string.sub(string, postfix_start, postfix_end)) then\n        \
    \    postfix_length = string.len(string.sub(string, postfix_start, postfix_end))\n\
    \        end\n        if postfix_length == 0 then\n            postfix_length\
    \ = postfix_end - postfix_start + 1\n        end\n        if postfix_length <\
    \ string.len(string.sub(string, postfix_start, postfix_end)) then\n          \
    \  postfix_length = string.len(string.sub(string, postfix_start, postfix_end))\n\
    \        end\n        if postfix_length == 0 then\n            postfix_length\
    \ = postfix_end - postfix_start + 1\n        end\n        if postfix_length <\
    \ string.len(string.sub(string, postfix_start, postfix_end)) then\n          \
    \  postfix_length = string.len(string.sub(string, postfix_start, postfix_end))\n\
    \        end\n        if postfix_length == 0 then\n            postfix_length\
    \ = postfix_end - postfix_start + 1\n        end\n        if postfix_length <\
    \ string.len(string.sub(string, postfix_start, postfix_end)) then\n          \
    \  postfix_length = string.len(string.sub(string, postfix_start, postfix_end))\n\
    \        end\n        if postfix_length == 0 then\n            postfix_length\
    \ = ", "  -- Find longest postfix of string that is a palindrome.\n  local longest_postfix\
    \ = string.gsub(string, \"%.$\", \"\")\n  -- Find longest postfix of string that\
    \ is a palindrome.\n  local longest_postfix_reverse = string.gsub(longest_postfix,\
    \ \"%.$\", \"\")\n  -- Append to the end of the string reverse of a string prefix\
    \ that comes before the palindromic suffix.\n  return string.gsub(string, \"%.$\"\
    \ .. longest_postfix_reverse, \"%.$\" .. longest_postfix_reverse)\nend", "  --\
    \ Find longest postfix of string that is a palindrome.\n  local postfix = string.gsub(string,\
    \ \"(.)(.)\", \"%1%2\");\n  -- Reverse the postfix string.\n  postfix = string.gsub(postfix,\
    \ \"(.)%2$1\", \"%2%1\");\n  -- Append the reversed postfix to the original string.\n\
    \  string = string .. postfix;\n  return string;\nend", "  -- If string is a palindrome\
    \ return it.\n  if string.match \"^[%a]+[%a]+$\" then\n    return string\n  else\n\
    \    -- If string is not a palindrome then return nil.\n    return nil\n  end\n\
    end", "  -- Find the longest postfix of supplied string that is a palindrome.\n\
    \  local postfix = string\n  local postfix_len = #string\n  local postfix_reverse\
    \ = \"\"\n  local postfix_reverse_len = #postfix_reverse\n  while postfix_len\
    \ > 0 and postfix_len > postfix_reverse_len do\n    postfix_reverse = postfix_reverse\
    \ .. string[postfix_len]\n    postfix_len = postfix_len - 1 -- Decrement postfix_len\
    \ since we're appending one char at a time.\n  end\n  -- Append to the end of\
    \ the string reverse of a string prefix that comes before the palindromic suffix.\n\
    \  local palindrome = string\n  local palindrome_len = #string\n  local palindrome_reverse\
    \ = \"\"\n  local palindrome_reverse_len = #palindrome_reverse\n  while palindrome_len\
    \ > 0 and palindrome_len > palindrome_reverse_len do\n    palindrome_reverse =\
    \ palindrome_reverse .. string[palindrome_len]\n    palindrome_len = palindrome_len\
    \ - 1 -- Decrement palindrome_len since we're appending one char at a time.\n\
    \  end\n  return postfix .. postfix_reverse .. palindrome_reverse\nend", "  local\
    \ palindrome = string\n  local postfix = string\n  local suffix = ''\n  while\
    \ true do\n    local reversed_postfix = reverse(string)\n    if reversed_postfix\
    \ == postfix then\n      palindrome = palindrome .. suffix\n      break\n    end\n\
    \    postfix = reversed_postfix\n    suffix = suffix .. postfix\n  end\n  return\
    \ palindrome\nend", "    local palindrome = string\n    local palindrome_length\
    \ = #string\n    local palindrome_postfix = \"\"\n    local palindrome_prefix_length\
    \ = 0\n    local palindrome_prefix_postfix = \"\"\n    local palindrome_prefix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix = \"\"\n    local palindrome_prefix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix = \"\"\n    local palindrome_prefix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix = \"\"\n  \
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_length = 0\n    local\
    \ palindrome_prefix_postfix_postfix_postfix_postfix_postfix = \"\"\n    local\
    \ palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length = 0\n    local\
    \ palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix = \"\"\n \
    \   local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local palindrome_prefix_postfix_postfix_post", "  local palindrome\
    \ = string\n  local postfix = string\n  local reverse = string\n  while true do\n\
    \    local postfix = postfix .. string\n    if string.find(postfix, reverse) then\n\
    \      palindrome = palindrome .. reverse\n      break\n    end\n    local reverse\
    \ = reverse .. string\n  end\n  return palindrome\nend", "    local palindrome\
    \ = string\n    local postfix = string.sub(palindrome, 1, string.len(palindrome)\
    \ - 1)\n    local reversed_postfix = string.sub(postfix, 1, string.len(postfix)\
    \ - 1)\n    local reversed_palindrome = reversed_postfix.. reversed_postfix\n\
    \    return palindrome..reversed_palindrome\nend", "    local palindrome = string\n\
    \    local postfix = string\n    local reverse = string\n    local length = 0\n\
    \    while true do\n        local index = string.find(postfix, \"[^\" .. reverse\
    \ .. \"]\")\n        if index == nil then\n            break\n        end\n  \
    \      postfix = string.sub(postfix, index + 2)\n        reverse = string.sub(reverse,\
    \ index - 1, index)\n        length = length + 1\n    end\n    if length == 0\
    \ then\n        return nil\n    end\n    local palindrome = string.sub(postfix,\
    \ 0, length)\n    if palindrome ~= reverse then\n        palindrome = reverse\
    \ .. palindrome\n    end\n    return palindrome\nend", "    local suffix\n   \
    \ local suffixLength\n    local suffixLengthBeforePalindrome\n    local suffixLengthAfterPalindrome\n\
    \    local suffixLengthBeforePalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeAfter\n    local suffixLengthAfterPalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeAfter\n\
    \    local suffixLengthAfterPalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeAfter\n    local suffixLengthAfterPalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeAfter\n\
    \    local suffixLengthAfterPalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeAfter\n    local suffixLengthAfterPalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeAfter\n\
    \    local suffixLengthAfterPalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeAfter\n    local suffixLengthAfterPalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeBefore\n\
    \    local suffixLengthAfterPalindromeAfter\n    local suffixLengthBeforePalindromeAfter\n\
    \    local suffixLengthAfterPalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeBefore\n    local suffixLengthAfterPalindromeAfter\n\
    \    local suffixLengthBeforePalindromeAfter\n    local suffixLengthAfterPalindromeBefore",
  "    local palindrome = string\n    local prefix_length = 1\n    while string.sub(palindrome,\
    \ prefix_length, prefix_length + 1) ~= string.sub(palindrome, prefix_length, prefix_length\
    \ + 1) do\n        prefix_length = prefix_length + 1\n    end\n    local postfix_length\
    \ = prefix_length\n    while string.sub(palindrome, postfix_length, postfix_length\
    \ + 1) ~= string.sub(palindrome, postfix_length, postfix_length + 1) do\n    \
    \    postfix_length = postfix_length + 1\n    end\n    local reversed_palindrome\
    \ = string.sub(palindrome, postfix_length, postfix_length + 1) .. string.sub(palindrome,\
    \ prefix_length, prefix_length + 1)\n    return palindrome, prefix_length, postfix_length,\
    \ reversed_palindrome\nend", "  local palindrome = string\n  local postfix = string\n\
    \  local reverse = string\n  local length = #string\n  for i = 1, length / 2 do\n\
    \    postfix = string\n    reverse = string\n    local j = length - i - 1\n  \
    \  local char = string[j]\n    while j > 0 do\n      postfix = string\n      reverse\
    \ = string\n      local char = string[j]\n      reverse = reverse .. char\n  \
    \    j = j - 1\n    end\n    postfix = postfix .. reverse\n    if postfix ~= palindrome\
    \ then\n      palindrome = postfix\n    end\n  end\n  return palindrome\nend",
  "  local palindrome = string.gsub(string, \"%.\", \"\")\n  local palindrome = string.gsub(palindrome,\
    \ \"%.%.\", \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.\", \"\
    \")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.\", \"\")\n  local\
    \ palindrome = string.gsub(palindrome, \"%.%.%.%.%.\", \"\")\n  local palindrome\
    \ = string.gsub(palindrome, \"%.%.%.%.%.%.\", \"\")\n  local palindrome = string.gsub(palindrome,\
    \ \"%.%.%.%.%.%.%.\", \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.\",\
    \ \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n  local palindro", "  -- Find the longest postfix of supplied string\
    \ that is a palindrome.\n  local function find_longest_postfix(string, postfix,\
    \ longest)\n    local postfix_length = #postfix\n    local longest_length = #longest\n\
    \    local longest_postfix = \"\"\n    local longest_postfix_length = 0\n    local\
    \ longest_postfix_postfix = \"\"\n    local longest_postfix_postfix_length = 0\n\
    \    local longest_postfix_postfix_postfix = \"\"\n    local longest_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix = \"\"\n    local longest_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix = \"\"\n    local\
    \ longest_postfix_postfix_postfix_postfix_length = 0\n    local longest_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_length = 0\n\
    \    local longest_postfix_postfix_postfix_postfix_postfix_postfix = \"\"\n  \
    \  local longest_postfix_postfix_postfix_postfix_postfix_length = 0\n    local\
    \ longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix = \"\"\n   \
    \ local longest_postfix_postfix_postfix_postfix_postfix_postfix_length = 0\n \
    \   local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix = \"\
    \"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_length =\
    \ 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_post",
  "    local palindrome = string\n    local postfix = string\n    local reverse =\
    \ string\n    local length = #string\n    local index = 1\n    while index <=\
    \ length do\n        postfix = string.sub(postfix, 0, index) .. reverse .. string.sub(postfix,\
    \ index)\n        reverse = reverse:reverse()\n        if palindrome == postfix\
    \ then\n            return palindrome\n        end\n        index = index + 1\n\
    \    end\n    return nil\nend", "  -- Find longest postfix of string that is a\
    \ palindrome.\n  local postfix = string.gsub(string, \"%.$\", \"\")\n  -- Find\
    \ longest prefix of string that comes before the palindromic suffix.\n  local\
    \ prefix = string.gsub(string, \"%.*$\", \"\")\n  -- Append reverse of prefix\
    \ to postfix.\n  postfix = string.gsub(postfix, \"%.$\", \"%.\" .. string.gsub(prefix,\
    \ \"%.$\", \"%..$\"))\n  -- Return postfix.\n  return postfix\nend", "  local\
    \ palindrome = string\n  local postfix = string\n  local postfix_length = #postfix\n\
    \  while postfix_length > 0 do\n    local postfix_char = postfix[postfix_length]\n\
    \    postfix = string.sub(postfix, 1, postfix_length-1)\n    postfix_length =\
    \ postfix_length - 1\n    if postfix_char == postfix_char:reverse() then\n   \
    \   palindrome = palindrome .. postfix_char\n    end\n  end\n  return palindrome\n\
    end", "  local palindrome = string\n  local postfix = string\n  local reverse\
    \ = string\n  local length = #string\n  for i = 1, length do\n    postfix = string.sub(postfix,\
    \ 1, i-1) .. postfix .. string.sub(postfix, i+1)\n    reverse = string.sub(reverse,\
    \ 1, i-1) .. reverse .. string.sub(reverse, i+1)\n    if postfix ~= reverse then\n\
    \      palindrome = string.sub(palindrome, 1, i-1) .. reverse .. string.sub(palindrome,\
    \ i+1)\n    end\n  end\n  return palindrome\nend", "  local palindrome = string\n\
    \  local palindrome_len = #palindrome\n  local palindrome_postfix = palindrome:sub(1,\
    \ palindrome_len)\n  local palindrome_prefix_len = #palindrome_postfix\n  local\
    \ palindrome_prefix_postfix = palindrome_postfix:sub(1, palindrome_prefix_len)\n\
    \  local palindrome_prefix_reversed = palindrome_prefix_postfix:reverse()\n  local\
    \ palindrome_postfix_reversed = palindrome_postfix:reverse()\n  local palindrome_prefix_reversed_len\
    \ = #palindrome_prefix_reversed\n  local palindrome_postfix_reversed_len = #palindrome_postfix_reversed\n\
    \  if palindrome_prefix_reversed_len > palindrome_postfix_reversed_len then\n\
    \    palindrome = palindrome_prefix_reversed..palindrome_postfix_reversed\n  \
    \  palindrome_len = palindrome_prefix_reversed_len\n    palindrome_postfix = palindrome_prefix_postfix\n\
    \    palindrome_prefix_len = palindrome_prefix_postfix_len\n    palindrome_prefix_postfix\
    \ = palindrome_prefix_reversed\n    palindrome_prefix_reversed = palindrome_prefix_postfix_reversed\n\
    \    palindrome_postfix_reversed = palindrome_postfix_reversed\n    palindrome_prefix_reversed_len\
    \ = palindrome_prefix_postfix_reversed_len\n    palindrome_postfix_reversed_len\
    \ = palindrome_postfix_reversed_len\n  end\n  return palindrome, palindrome_len,\
    \ palindrome_postfix, palindrome_prefix_len, palindrome_prefix_postfix, palindrome_prefix_reversed,\
    \ palindrome_postfix_reversed, palindrome_prefix_reversed_len, palindrome_postfix_reversed_len\n\
    end", "  local palindrome = string\n  local longest_postfix = string\n  local\
    \ longest_postfix_length = 0\n  local longest_postfix_index = 0\n  local longest_postfix_reversed\
    \ = \"\"\n  local longest_postfix_reversed_length = 0\n  local longest_postfix_reversed_index\
    \ = 0\n  local longest_postfix_reversed_reversed = \"\"\n  local longest_postfix_reversed_reversed_length\
    \ = 0\n  local longest_postfix_reversed_reversed_index = 0\n  for i = 1, #string\
    \ do\n    local postfix = string\n    postfix = string.sub(postfix, i, #postfix)\n\
    \    local reversed_postfix = string\n    reversed_postfix = string.sub(reversed_postfix,\
    \ i, #reversed_postfix)\n    local reversed_postfix_reversed = string\n    reversed_postfix_reversed\
    \ = string.sub(reversed_postfix_reversed, i, #reversed_postfix_reversed)\n   \
    \ if postfix ~= reversed_postfix then\n      longest_postfix = postfix\n     \
    \ longest_postfix_length = #postfix\n      longest_postfix_index = i\n      longest_postfix_reversed\
    \ = reversed_postfix\n      longest_postfix_reversed_length = #reversed_postfix\n\
    \      longest_postfix_reversed_index = i\n      longest_postfix_reversed_reversed\
    \ = reversed_postfix_reversed\n      longest_postfix_reversed_reversed_length\
    \ = #reversed_postfix_reversed\n      longest_postfix_reversed_reversed_index\
    \ = i\n    end\n  end\n  if longest_postfix_length == 0 then\n    return nil\n\
    \  end\n  local longest_postfix_reversed_reversed_index = longest_postfix_reversed_index\n\
    \  local longest_postfix_reversed_reversed_reversed_index = longest_postfix_reversed_reversed_index\n\
    \  local longest_postfix_reversed_reversed_reversed_index = longest_postfix_reversed_reversed_index\n\
    \  local longest_postfix_reversed_reversed_reversed_reversed_index = longest_postfix_reversed_reversed_reversed_index\n\
    \  local longest_postfix_reversed_reversed_reversed_reversed_index = longest_postfix_reversed_reversed_reversed_index\n\
    \  local longest_postfix_reversed_reversed_reversed_reversed_index = longest_postfix_reversed_reversed_reversed_index\n\
    \  local longest_postfix_reversed_reversed_reversed_reversed_reversed_index =\
    \ longest_postfix_reversed_reversed_reversed_reversed_index\n  local ", "  --\
    \ If no palindrome is found, return empty string.\n  if string == \"\" then\n\
    \    return \"\"\n  end", "  local palindrome = string\n  local postfix = string\n\
    \  local reverse = string\n  local length = 0\n  while true do\n    length = length\
    \ + 1\n    postfix = postfix .. string\n    if string.len(postfix) == string.len(reverse)\
    \ then\n      palindrome = palindrome .. postfix .. reverse\n      break\n   \
    \ end\n    reverse = reverse .. string\n  end\n  return palindrome\nend", "  local\
    \ postfix = string.gsub(string, \"%.\", \"\")\n  local reverse = string.gsub(postfix,\
    \ \"%.\", \"\")\n  return string..reverse\nend", "    local palindrome = string\n\
    \    local suffix = ''\n    local length = 0\n    while palindrome ~= '' do\n\
    \        local postfix = palindrome:sub(1, length)\n        local reverse = postfix:reverse()\n\
    \        local palindrome = palindrome:sub(1, length - 1) .. reverse .. postfix\n\
    \        length = length - 1\n    end\n    return palindrome\nend", "  local postfix\
    \ = string\n  local reverse = string\n  local palindrome = string\n  local i =\
    \ #string\n  while i do\n    local j = #postfix\n    while j > 0 do\n      local\
    \ c = postfix[j]\n      postfix = postfix:sub(1, j - 1) + c + postfix:sub(j +\
    \ 1)\n      j = j - 1\n    end\n    local reverse = reverse:sub(1, #reverse -\
    \ 1) + string\n    if reverse == postfix then\n      palindrome = palindrome:sub(1,\
    \ #palindrome - 1) + string\n    end\n    i = i - 1\n  end\n  return palindrome\n\
    end", "    local palindrome = string\n    local longest_postfix = string\n   \
    \ local longest_postfix_reverse = string\n    local longest_postfix_reverse_length\
    \ = string\n    local longest_postfix_reverse_length_index = 0\n    local longest_postfix_reverse_length_index2\
    \ = 0\n    local longest_postfix_reverse_length_index3 = 0\n    local longest_postfix_reverse_length_index4\
    \ = 0\n    local longest_postfix_reverse_length_index5 = 0\n    local longest_postfix_reverse_length_index6\
    \ = 0\n    local longest_postfix_reverse_length_index7 = 0\n    local longest_postfix_reverse_length_index8\
    \ = 0\n    local longest_postfix_reverse_length_index9 = 0\n    local longest_postfix_reverse_length_index10\
    \ = 0\n    local longest_postfix_reverse_length_index11 = 0\n    local longest_postfix_reverse_length_index12\
    \ = 0\n    local longest_postfix_reverse_length_index13 = 0\n    local longest_postfix_reverse_length_index14\
    \ = 0\n    local longest_postfix_reverse_length_index15 = 0\n    local longest_postfix_reverse_length_index16\
    \ = 0\n    local longest_postfix_reverse_length_index17 = 0\n    local longest_postfix_reverse_length_index18\
    \ = 0\n    local longest_postfix_reverse_length_index19 = 0\n    local longest_postfix_reverse_length_index20\
    \ = 0\n    local longest_postfix_reverse_length_index21 = 0\n    local longest_postfix_reverse_length_index22\
    \ = 0\n    local longest_postfix_reverse_length_index23 = 0\n    local longest_postfix_reverse_length_index24\
    \ = 0\n    local longest_postfix_reverse_length_index25 = 0\n    local longest_postfix_reverse_length_index26\
    \ = 0\n    local longest_postfix_reverse_length_index27 = 0\n    local longest_postfix_reverse_length_index28\
    \ = 0\n    local longest_postfix_reverse_length_index29 = 0\n    local longest_postfix_reverse_length_index30\
    \ = 0\n    local longest_postfix_reverse_length_index31 = 0\n    local longest_postfix_reverse_length_index32\
    \ = 0\n    local longest_postfix_reverse_length_index33 = 0\n    local longest_postfix_reverse_length_index34\
    \ = 0\n    local longest_postfix_reverse_length_index35 = 0\n    local longest_postfix_reverse_length_index36\
    \ = 0\n    local longest_postfix_reverse_length_index37 = 0\n    local longest_postfix_reverse_length_index38\
    \ = 0\n    local longest_postfix_reverse_length_index39 = 0\n    local longest_postfix_reverse_",
  "  local palindrome = string.gsub(string, \"%.%.\", \"\")\n  local reverse = string.gsub(palindrome,\
    \ \"%.%.%.%.%.\", \"\")\n  return palindrome .. reverse\nend", "  local palindrome\
    \ = string\n  local longest_postfix_length = 0\n  local longest_postfix_index\
    \ = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index =\
    \ 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n\
    \  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local\
    \ longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string\
    \ = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string =\
    \ \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\
    \"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n\
    \  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local\
    \ longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index\
    \ = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index =\
    \ 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n\
    \  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local\
    \ longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string\
    \ = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string =\
    \ \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\
    \"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n\
    \  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local\
    \ longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index\
    \ = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index =\
    \ 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n\
    \  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local\
    \ longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string\
    \ = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string =\
    \ \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\
    \"\n  local longest_postfix_index = 0", "  local palindrome = string\n  local\
    \ longest_postfix = \"\"\n  local longest_postfix_length = 0\n  local longest_postfix_index\
    \ = 0\n  local longest_postfix_index2 = 0\n  local longest_postfix_index3 = 0\n\
    \  local longest_postfix_index4 = 0\n  local longest_postfix_index5 = 0\n  local\
    \ longest_postfix_index6 = 0\n  local longest_postfix_index7 = 0\n  local longest_postfix_index8\
    \ = 0\n  local longest_postfix_index9 = 0\n  local longest_postfix_index10 = 0\n\
    \  local longest_postfix_index11 = 0\n  local longest_postfix_index12 = 0\n  local\
    \ longest_postfix_index13 = 0\n  local longest_postfix_index14 = 0\n  local longest_postfix_index15\
    \ = 0\n  local longest_postfix_index16 = 0\n  local longest_postfix_index17 =\
    \ 0\n  local longest_postfix_index18 = 0\n  local longest_postfix_index19 = 0\n\
    \  local longest_postfix_index20 = 0\n  local longest_postfix_index21 = 0\n  local\
    \ longest_postfix_index22 = 0\n  local longest_postfix_index23 = 0\n  local longest_postfix_index24\
    \ = 0\n  local longest_postfix_index25 = 0\n  local longest_postfix_index26 =\
    \ 0\n  local longest_postfix_index27 = 0\n  local longest_postfix_index28 = 0\n\
    \  local longest_postfix_index29 = 0\n  local longest_postfix_index30 = 0\n  local\
    \ longest_postfix_index31 = 0\n  local longest_postfix_index32 = 0\n  local longest_postfix_index33\
    \ = 0\n  local longest_postfix_index34 = 0\n  local longest_postfix_index35 =\
    \ 0\n  local longest_postfix_index36 = 0\n  local longest_postfix_index37 = 0\n\
    \  local longest_postfix_index38 = 0\n  local longest_postfix_index39 = 0\n  local\
    \ longest_postfix_index40 = 0\n  local longest_postfix_index41 = 0\n  local longest_postfix_index42\
    \ = 0\n  local longest_postfix_index43 = 0\n  local longest_postfix_index44 =\
    \ 0\n  local longest_postfix_index45 = 0\n  local longest_postfix_index46 = 0\n\
    \  local longest_postfix_index47 = 0\n  local longest_postfix_index48 = 0\n  local\
    \ longest_postfix_", "  local palindrome = string\n  local postfix = string.gsub(string,\
    \ \"%.\", \"\")\n  local reverse = string.gsub(postfix, \"%.\", \"\")\n  local\
    \ prefix = string.gsub(string, \"%.\", reverse)\n  local palindrome = prefix ..\
    \ reverse .. postfix\n  return palindrome\nend", "  -- Find the longest postfix\
    \ of supplied string that is a palindrome.\n  local postfix = string\n  local\
    \ longest = 0\n  local longestpostfix = \"\"\n  while true do\n    local postfix\
    \ = postfix .. string\n    local reverse = string\n    for i = 1, #string do\n\
    \      reverse = reverse .. string[#string - i]\n    end\n    if reverse == postfix\
    \ then\n      longest = #string + 1\n      longestpostfix = string\n      break\n\
    \    end\n  end\n  -- Append to the end of the string reverse of a string prefix\
    \ that comes before the palindromic suffix.\n  local prefix = string\n  local\
    \ prefixreverse = string\n  for i = 1, longest do\n    prefix = prefix .. string[#string\
    \ - i]\n    prefixreverse = prefixreverse .. string[#string - i - 1]\n  end\n\
    \  return prefix .. string[#string - longest] .. longestpostfix .. string\nend",
  "  local palindrome = string\n  local postfix = string\n  local postfix_len = #string\n\
    \  local reversed_postfix = string\n  local reversed_postfix_len = #string\n \
    \ while postfix_len > 1 do\n    local postfix_len = #postfix\n    local reversed_postfix_len\
    \ = #reversed_postfix\n    local postfix = string.sub(postfix, 1, postfix_len\
    \ - 1)\n    local reversed_postfix = string.sub(reversed_postfix, 1, reversed_postfix_len\
    \ - 1)\n    if postfix ~= reversed_postfix then\n      palindrome = palindrome\
    \ .. reversed_postfix\n    end\n  end\n  return palindrome\nend", "  local palindrome\
    \ = string.gsub(string, \"[^\" .. string.char(32) .. \"]\", \"\")\n  local postfix\
    \ = string.gsub(string, \"^\" .. palindrome, \"$1\")\n  return string .. string.sub(postfix,\
    \ 1, #postfix) .. palindrome\nend", "  local palindrome = string\n  local postfix\
    \ = string\n  local reverse = string\n  local length = #string\n  for i = 1, length\
    \ do\n    postfix = string.sub(postfix, 1, i-1) + postfix\n    reverse = reverse\
    \ + string.sub(reverse, i, length-i-1)\n    if string.sub(postfix, 1, i) == reverse\
    \ then\n      palindrome = string.sub(postfix, 1, i-1) + palindrome\n    end\n\
    \  end\n  return palindrome\nend", "    local palindrome = string.gsub(string,\
    \ \"%.\", \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.\", \"\"\
    )\n    local palindrome = string.gsub(palindrome, \"%.%.%.\", \"\")\n    local\
    \ palindrome = string.gsub(palindrome, \"%.%.%.%.\", \"\")\n    local palindrome\
    \ = string.gsub(palindrome, \"%.%.%.%.%.\", \"\")\n    local palindrome = string.gsub(palindrome,\
    \ \"%.%.%.%.%.%.\", \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.\",\
    \ \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindro", "  local palindrome = string.gsub(string, \"^(.-)$\"\
    , function(_, _)\n    local reverse = string.gsub(_, \"(.-)\", function(_, _)\n\
    \      return string.reverse(_)\n    end)\n    return reverse .. _\n  end)\n \
    \ return palindrome\nend", "  local palindrome = string\n  local longest_postfix\
    \ = \"\"\n  local longest_postfix_length = 0\n  local longest_postfix_index =\
    \ 0\n  local longest_postfix_length_index = 0\n  local longest_postfix_index2\
    \ = 0\n  local longest_postfix_length_index2 = 0\n  local longest_postfix_length2\
    \ = 0\n  local longest_postfix_length3 = 0\n  local longest_postfix_length4 =\
    \ 0\n  local longest_postfix_length5 = 0\n  local longest_postfix_length6 = 0\n\
    \  local longest_postfix_length7 = 0\n  local longest_postfix_length8 = 0\n  local\
    \ longest_postfix_length9 = 0\n  local longest_postfix_length10 = 0\n  local longest_postfix_length11\
    \ = 0\n  local longest_postfix_length12 = 0\n  local longest_postfix_length13\
    \ = 0\n  local longest_postfix_length14 = 0\n  local longest_postfix_length15\
    \ = 0\n  local longest_postfix_length16 = 0\n  local longest_postfix_length17\
    \ = 0\n  local longest_postfix_length18 = 0\n  local longest_postfix_length19\
    \ = 0\n  local longest_postfix_length20 = 0\n  local longest_postfix_length21\
    \ = 0\n  local longest_postfix_length22 = 0\n  local longest_postfix_length23\
    \ = 0\n  local longest_postfix_length24 = 0\n  local longest_postfix_length25\
    \ = 0\n  local longest_postfix_length26 = 0\n  local longest_postfix_length27\
    \ = 0\n  local longest_postfix_length28 = 0\n  local longest_postfix_length29\
    \ = 0\n  local longest_postfix_length30 = 0\n  local longest_postfix_length31\
    \ = 0\n  local longest_postfix_length32 = 0\n  local longest_postfix_length33\
    \ = 0\n  local longest_postfix_length34 = 0\n  local longest_postfix_length35\
    \ = 0\n  local longest_postfix_length36 = 0\n  local longest_postfix_length37\
    \ = 0\n  local longest_postfix_length38 = 0\n  local longest_postfix_length39\
    \ = 0\n  local longest_postfix_length40 = 0\n  local longest_postfix_length41\
    \ = 0\n  local longest_postfix_length42 = 0\n  local longest_postfix_length43\
    \ = 0\n  local longest_postfix_length44 = 0\n  local longest_postfix_length45\
    \ = 0\n  local longest_post", "  local palindrome = string\n  local prefix_length\
    \ = string.len(string) - string.len(palindrome)\n  local postfix_length = string.len(palindrome)\n\
    \  local reversed_prefix = string.reverse(string.sub(string, 1, prefix_length))\n\
    \  local reversed_suffix = string.reverse(string.sub(string, prefix_length + 1,\
    \ postfix_length))\n  local reversed_palindrome = reversed_prefix .. reversed_suffix\n\
    \  local palindrome = string.sub(palindrome, 1, postfix_length) .. reversed_palindrome\n\
    \  return palindrome\nend", "    local palindrome = string\n    local postfix\
    \ = string\n    local reverse = string\n    local prefix_length = #string\n  \
    \  local suffix_length = #string\n    while true do\n        postfix = string\n\
    \        reverse = string\n        for i = 1, prefix_length do\n            postfix\
    \ = postfix .. string[prefix_length - i]\n        end\n        for i = 1, suffix_length\
    \ do\n            reverse = reverse .. string[suffix_length - i]\n        end\n\
    \        if postfix ~= reverse then\n            palindrome = palindrome .. reverse\
    \ .. postfix\n            break\n        end\n    end\n    return palindrome\n\
    end", "  -- If string is empty or only contains digits, return empty string.\n\
    \  if string == \"\" or string ~= string.gsub(string, \"[^0-9]\", \"\") then\n\
    \    return \"\"\n  end", "  local palindrome = string\n  local max_len = #string\n\
    \  local max_len_palindrome = max_len\n  local max_len_palindrome_len = max_len\n\
    \  local max_len_palindrome_start = max_len\n  local max_len_palindrome_end =\
    \ max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palindrome_end_index\
    \ = max_len\n  local max_len_palindrome_start_index = max_len\n  local max_len_palin",
  "  local postfix = string.gsub(string, \"%.\", \"\")\n  local reverse = string.gsub(string.gsub(postfix,\
    \ \"%.\", \"\"), \"%.\", \"\")\n  return string .. reverse .. postfix\nend", " \
    \ local palindrome = string\n  local palindrome_length = #string\n  local palindrome_start\
    \ = #string\n  local palindrome_end = #string\n  local palindrome_suffix = \"\"\
    \n  local palindrome_prefix_start = #string\n  local palindrome_prefix_end = #string\n\
    \  local palindrome_prefix_suffix = \"\"\n  local palindrome_prefix_suffix_length\
    \ = #string\n  local palindrome_prefix_suffix_start = #string\n  local palindrome_prefix_suffix_end\
    \ = #string\n  local palindrome_prefix_suffix_suffix = \"\"\n  local palindrome_prefix_suffix_suffix_length\
    \ = #string\n  local palindrome_prefix_suffix_suffix_start = #string\n  local\
    \ palindrome_prefix_suffix_suffix_end = #string\n  local palindrome_prefix_suffix_suffix_suffix\
    \ = \"\"\n  local palindrome_prefix_suffix_suffix_suffix_length = #string\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_start = #string\n  local palindrome_prefix_suffix_suffix_suffix_end\
    \ = #string\n  local palindrome_prefix_suffix_suffix_suffix_suffix = \"\"\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_length = #string\n  local palindrome_prefix_suffix_suffix_suffix_suffix_start\
    \ = #string\n  local palindrome_prefix_suffix_suffix_suffix_suffix_end = #string\n\
    \  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix = \"\"\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_suffix_length = #string\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_suffix_start = #string\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_suffix_end = #string\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix = \"\"\n  local\
    \ palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_length = #string\n\
    \  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_start = #string\n\
    \  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_end = #string\n\
    \  local palindrome_prefix_suffix_suffix_suffix_suffix_suffix_suffix_suffix =\
    \ \"\"\n  local palindrome_", "    local postfix = string.gsub(string, \"[^\"\
    \ .. string.char(127) .. \"]\", \"\")\n    local reverse = string.gsub(postfix,\
    \ \"^\", string.char(127))\n    return string .. reverse\nend", "  local palindrome\
    \ = string\n  local longest_postfix = string\n  local longest_postfix_length =\
    \ string\n  local longest_postfix_index = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_index_length = string\n  local longest_postfix_index_length\
    \ = string\n  local longest_postfix_", "    local palindrome = string\n    local\
    \ postfix = string\n    local reverse = string\n    local length = #string\n \
    \   for i = 1, length do\n        postfix = postfix .. string[length - i]\n  \
    \      reverse = reverse .. string[length - i - 1] .. string[i]\n    end\n   \
    \ if reverse == postfix then\n        palindrome = string\n    end\n    return\
    \ palindrome\nend", "    local palindrome = string\n    local longest_postfix\
    \ = \"\"\n    local longest_postfix_length = 0\n    local longest_postfix_index\
    \ = 0\n    local longest_postfix_index_length = 0\n    local longest_postfix_index_count\
    \ = 0\n    local longest_postfix_index_count_length = 0\n    local longest_postfix_index_count_count\
    \ = 0\n    local longest_postfix_index_count_count_length = 0\n    local longest_postfix_index_count_count_count\
    \ = 0\n    local longest_postfix_index_count_count_count_length = 0\n    local\
    \ longest_postfix_index_count_count_count_count = 0\n    local longest_postfix_index_count_count_count_count_length\
    \ = 0\n    local longest_postfix_index_count_count_count_count_count = 0\n   \
    \ local longest_postfix_index_count_count_count_count_length = 0\n    local longest_postfix_index_count_count_count_count_count\
    \ = 0\n    local longest_postfix_index_count_count_count_count_count_length =\
    \ 0\n    local longest_postfix_index_count_count_count_count_count_count = 0\n\
    \    local longest_postfix_index_count_count_count_count_count_length = 0\n  \
    \  local longest_postfix_index_count_count_count_count_count_count = 0\n    local\
    \ longest_postfix_index_count_count_count_count_count_length = 0\n    local longest_postfix_index_count_count_count_count_count_count\
    \ = 0\n    local longest_postfix_index_count_count_count_count_count_length =\
    \ 0\n    local longest_postfix_index_count_count_count_count_count_count = 0\n\
    \    local longest_postfix_index_count_count_count_count_count_length = 0\n  \
    \  local longest_postfix_index_count_count_count_count_count_count = 0\n    local\
    \ longest_postfix_index_count_count_count_count_count_length = 0\n    local longest_postfix_index_count_count_count_count_count_count\
    \ = 0\n    local longest_postfix_index_count_count_count_count_count_length =\
    \ 0\n    local longest_postfix_index_count_count_count_count_count_count = 0\n\
    \    local longest_postfix_index_count_count_count_count_count_length = 0\n  \
    \  local longest_postfix_index_count_count_count_count_count_count = 0\n    local\
    \ longest_postfix_index_count_count_count_count_count_length = 0\n    local longest_postfix_index_count_count_count_count_count_count\
    \ = 0\n    local longest_postfix_index_count_count_count_count_count_length =\
    \ 0\n    local longest_postfix_index_count_count_count_count_count_count = 0\n\
    \    local longest_postfix_index_count_count_count_count_count_length = 0\n  \
    \  local longest_postfix_index_count_count_count_count_count_count = 0\n    local\
    \ longest_postfix_index_count_count_count_count_count_length = 0\n", "  local\
    \ palindrome = string\n  local postfix = string\n  local reverse = string\n  local\
    \ length = #string\n  for i = 1, length do\n    local char = string[i]\n    if\
    \ char == string[length - i] then\n      postfix = postfix .. string[length -\
    \ i]\n      reverse = reverse .. string[length - i]\n    else\n      postfix =\
    \ postfix .. char\n      reverse = reverse .. char\n    end\n  end\n  local palindrome\
    \ = postfix .. reverse .. palindrome\n  return palindrome\nend", "  local palindrome\
    \ = string\n  local longest_postfix = string\n  local longest_postfix_length =\
    \ string\n  local longest_postfix_reverse = string\n  local longest_postfix_reverse_length\
    \ = string\n  local longest_postfix_reverse_suffix = string\n  local longest_postfix_reverse_suffix_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse = string\n  local longest_postfix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix = string\n \
    \ local longest_postfix_reverse_suffix_reverse_suffix_length = string\n  local\
    \ longest_postfix_reverse_suffix_reverse_suffix_reverse = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_",
  "    local palindrome = string\n    local postfix = string.gsub(string, \"%.\",\
    \ \"\")\n    local reverse = string.gsub(postfix, \"%.\", \"\")\n    local prefix_length\
    \ = #postfix - 1\n    local suffix_length = #reverse - 1\n    local prefix_postfix\
    \ = string.sub(postfix, prefix_length)\n    local suffix_reverse = string.sub(reverse,\
    \ suffix_length)\n    local palindrome_length = #prefix_postfix + #suffix_reverse\
    \ + 1\n    local palindrome = string.rep(\"a\", palindrome_length)\n    local\
    \ palindrome = string.sub(palindrome, 1, prefix_length) .. prefix_postfix .. string.sub(palindrome,\
    \ prefix_length + prefix_postfix + 1, palindrome_length)\n    local palindrome\
    \ = string.sub(palindrome, prefix_length + prefix_postfix + 1, palindrome_length)\n\
    \    local palindrome = string.sub(palindrome, prefix_length + prefix_postfix\
    \ + 1, palindrome_length) .. suffix_reverse .. string.sub(palindrome, prefix_length\
    \ + prefix_postfix + 1 + suffix_length, palindrome_length)\n    return palindrome\n\
    end", "  local palindrome = string\n  local longest_postfix = string.len(string)\
    \ - string.len(string.gsub(string, \"[^\" .. string.char(97, 122, 123, 124, 125,\
    \ 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141,\
    \ 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157,\
    \ 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173,\
    \ 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189,\
    \ 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205,\
    \ 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221,\
    \ 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237,\
    \ 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253,\
    \ 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269,\
    \ 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285,\
    \ 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301,\
    \ 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317,\
    \ 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333,\
    \ 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349,\
    \ 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365,\
    \ 366, 367", "  local palindrome = string.gsub(string, \"^.\", \"\")\n  local\
    \ reverse = string.gsub(string, \".$\", string.reverse(palindrome))\n  return\
    \ reverse .. palindrome\nend", "    local palindrome = string\n    local longest_postfix\
    \ = \"\"\n    local longest_postfix_length = 0\n    local longest_postfix_index\
    \ = 0\n    local longest_postfix_index2 = 0\n    local longest_postfix_index3\
    \ = 0\n    local longest_postfix_index4 = 0\n    local longest_postfix_index5\
    \ = 0\n    local longest_postfix_index6 = 0\n    local longest_postfix_index7\
    \ = 0\n    local longest_postfix_index8 = 0\n    local longest_postfix_index9\
    \ = 0\n    local longest_postfix_index10 = 0\n    local longest_postfix_index11\
    \ = 0\n    local longest_postfix_index12 = 0\n    local longest_postfix_index13\
    \ = 0\n    local longest_postfix_index14 = 0\n    local longest_postfix_index15\
    \ = 0\n    local longest_postfix_index16 = 0\n    local longest_postfix_index17\
    \ = 0\n    local longest_postfix_index18 = 0\n    local longest_postfix_index19\
    \ = 0\n    local longest_postfix_index20 = 0\n    local longest_postfix_index21\
    \ = 0\n    local longest_postfix_index22 = 0\n    local longest_postfix_index23\
    \ = 0\n    local longest_postfix_index24 = 0\n    local longest_postfix_index25\
    \ = 0\n    local longest_postfix_index26 = 0\n    local longest_postfix_index27\
    \ = 0\n    local longest_postfix_index28 = 0\n    local longest_postfix_index29\
    \ = 0\n    local longest_postfix_index30 = 0\n    local longest_postfix_index31\
    \ = 0\n    local longest_postfix_index32 = 0\n    local longest_postfix_index33\
    \ = 0\n    local longest_postfix_index34 = 0\n    local longest_postfix_index35\
    \ = 0\n    local longest_postfix_index36 = 0\n    local longest_postfix_index37\
    \ = 0\n    local longest_postfix_index38 = 0\n    local longest_postfix_index39\
    \ = 0\n    local longest_postfix_index40 = 0\n    local longest_postfix_index41\
    \ = 0\n    local longest_postfix_index42 = 0\n    local longest_postfix_index43\
    \ = 0\n    local longest_postfix_index44 = 0\n    local longest_postfix_index45\
    \ = 0\n    local longest_postfix_index46 = 0\n    local longest_postfix_index47\
    \ = 0\n    local longest_postfix_index48 = 0\n    local longest_postfix_", " \
    \   local palindrome = string\n    local prefix_length = 0\n    local suffix_length\
    \ = 0\n    local palindrome_length = 0\n    local palindrome_prefix = \"\"\n \
    \   local palindrome_suffix = \"\"\n    local palindrome_prefix_length = 0\n \
    \   local palindrome_suffix_length = 0\n    local palindrome_prefix_reverse =\
    \ \"\"\n    local palindrome_suffix_reverse = \"\"\n    local palindrome_prefix_reverse_index\
    \ = 0\n    local palindrome_suffix_reverse_index = 0\n    local palindrome_prefix_reverse_index2\
    \ = 0\n    local palindrome_suffix_reverse_index2 = 0\n    local palindrome_prefix_reverse_index3\
    \ = 0\n    local palindrome_suffix_reverse_index3 = 0\n    local palindrome_prefix_reverse_index4\
    \ = 0\n    local palindrome_suffix_reverse_index4 = 0\n    local palindrome_prefix_reverse_index5\
    \ = 0\n    local palindrome_suffix_reverse_index5 = 0\n    local palindrome_prefix_reverse_index6\
    \ = 0\n    local palindrome_suffix_reverse_index6 = 0\n    local palindrome_prefix_reverse_index7\
    \ = 0\n    local palindrome_suffix_reverse_index7 = 0\n    local palindrome_prefix_reverse_index8\
    \ = 0\n    local palindrome_suffix_reverse_index8 = 0\n    local palindrome_prefix_reverse_index9\
    \ = 0\n    local palindrome_suffix_reverse_index9 = 0\n    local palindrome_prefix_reverse_index10\
    \ = 0\n    local palindrome_suffix_reverse_index10 = 0\n    local palindrome_prefix_reverse_index11\
    \ = 0\n    local palindrome_suffix_reverse_index11 = 0\n    local palindrome_prefix_reverse_index12\
    \ = 0\n    local palindrome_suffix_reverse_index12 = 0\n    local palindrome_prefix_reverse_index13\
    \ = 0\n    local palindrome_suffix_reverse_index13 = 0\n    local palindrome_prefix_reverse_index14\
    \ = 0\n    local palindrome_suffix_reverse_index14 = 0\n    local palindrome_prefix_reverse_index15\
    \ = 0\n    local palindrome_suffix_reverse_index15 = 0\n    local palindrome_prefix_reverse_index16\
    \ = 0\n    local palindrome_suffix_reverse_index16 = 0\n    local palindrome_prefix_reverse_index17\
    \ = 0\n    local palindrome_suffix_reverse_index17", "  local palindrome = string\n\
    \  local longest_postfix_length = 0\n  local longest_postfix_string = \"\"\n \
    \ local longest_postfix_index = 0\n  local longest_postfix_index2 = 0\n  local\
    \ longest_postfix_index3 = 0\n  local longest_postfix_index4 = 0\n  local longest_postfix_index5\
    \ = 0\n  local longest_postfix_index6 = 0\n  local longest_postfix_index7 = 0\n\
    \  local longest_postfix_index8 = 0\n  local longest_postfix_index9 = 0\n  local\
    \ longest_postfix_index10 = 0\n  local longest_postfix_index11 = 0\n  local longest_postfix_index12\
    \ = 0\n  local longest_postfix_index13 = 0\n  local longest_postfix_index14 =\
    \ 0\n  local longest_postfix_index15 = 0\n  local longest_postfix_index16 = 0\n\
    \  local longest_postfix_index17 = 0\n  local longest_postfix_index18 = 0\n  local\
    \ longest_postfix_index19 = 0\n  local longest_postfix_index20 = 0\n  local longest_postfix_index21\
    \ = 0\n  local longest_postfix_index22 = 0\n  local longest_postfix_index23 =\
    \ 0\n  local longest_postfix_index24 = 0\n  local longest_postfix_index25 = 0\n\
    \  local longest_postfix_index26 = 0\n  local longest_postfix_index27 = 0\n  local\
    \ longest_postfix_index28 = 0\n  local longest_postfix_index29 = 0\n  local longest_postfix_index30\
    \ = 0\n  local longest_postfix_index31 = 0\n  local longest_postfix_index32 =\
    \ 0\n  local longest_postfix_index33 = 0\n  local longest_postfix_index34 = 0\n\
    \  local longest_postfix_index35 = 0\n  local longest_postfix_index36 = 0\n  local\
    \ longest_postfix_index37 = 0\n  local longest_postfix_index38 = 0\n  local longest_postfix_index39\
    \ = 0\n  local longest_postfix_index40 = 0\n  local longest_postfix_index41 =\
    \ 0\n  local longest_postfix_index42 = 0\n  local longest_postfix_index43 = 0\n\
    \  local longest_postfix_index44 = 0\n  local longest_postfix_index45 = 0\n  local\
    \ longest_postfix_index46 = 0\n  local longest_postfix_index47 = 0\n  local longest_postfix_index48\
    \ = 0\n  local longest_postfix_", "    local reversed_string = string\n    local\
    \ longest_postfix_length = 0\n    local longest_postfix_index = 0\n    for i =\
    \ 1, #string do\n        local char = string[i]\n        local postfix_length\
    \ = #string - i - 1\n        if postfix_length > longest_postfix_length then\n\
    \            longest_postfix_length = postfix_length\n            longest_postfix_index\
    \ = i\n        end\n        if char == string[#string] then\n            reversed_string\
    \ = reversed_string..char\n        end\n    end\n    return string..reversed_string\n\
    end", "    local palindrome = string\n    local postfix = string\n    local reverse\
    \ = string\n    local suffix = ''\n    local length = 0\n    local i = 0\n   \
    \ while i < #string do\n        length = length + 1\n        if string[i] == string[#string]\
    \ then\n            postfix = postfix .. string[i]\n            reverse = reverse\
    \ .. string[i]\n            suffix = suffix .. string[i]\n        else\n     \
    \       postfix = postfix .. string[i]\n            reverse = reverse .. string[i]\n\
    \            suffix = suffix .. string[i]\n        end\n        i = i + 1\n  \
    \  end\n    if #postfix > length then\n        palindrome = postfix .. reverse\
    \ .. suffix\n    end\n    return palindrome\nend", "    local palindrome = string\n\
    \    local prefix_length = 0\n    local suffix_length = 0\n    local palindrome_length\
    \ = 0\n    local palindrome_prefix = ''\n    local palindrome_suffix = ''\n  \
    \  local palindrome_prefix_length = 0\n    local palindrome_suffix_length = 0\n\
    \    local palindrome_prefix_reverse = ''\n    local palindrome_suffix_reverse\
    \ = ''\n    local palindrome_prefix_reverse_index = 0\n    local palindrome_suffix_reverse_index\
    \ = 0\n    local palindrome_prefix_reverse_index2 = 0\n    local palindrome_suffix_reverse_index2\
    \ = 0\n    local palindrome_prefix_reverse_index3 = 0\n    local palindrome_suffix_reverse_index3\
    \ = 0\n    local palindrome_prefix_reverse_index4 = 0\n    local palindrome_suffix_reverse_index4\
    \ = 0\n    local palindrome_prefix_reverse_index5 = 0\n    local palindrome_suffix_reverse_index5\
    \ = 0\n    local palindrome_prefix_reverse_index6 = 0\n    local palindrome_suffix_reverse_index6\
    \ = 0\n    local palindrome_prefix_reverse_index7 = 0\n    local palindrome_suffix_reverse_index7\
    \ = 0\n    local palindrome_prefix_reverse_index8 = 0\n    local palindrome_suffix_reverse_index8\
    \ = 0\n    local palindrome_prefix_reverse_index9 = 0\n    local palindrome_suffix_reverse_index9\
    \ = 0\n    local palindrome_prefix_reverse_index10 = 0\n    local palindrome_suffix_reverse_index10\
    \ = 0\n    local palindrome_prefix_reverse_index11 = 0\n    local palindrome_suffix_reverse_index11\
    \ = 0\n    local palindrome_prefix_reverse_index12 = 0\n    local palindrome_suffix_reverse_index12\
    \ = 0\n    local palindrome_prefix_reverse_index13 = 0\n    local palindrome_suffix_reverse_index13\
    \ = 0\n    local palindrome_prefix_reverse_index14 = 0\n    local palindrome_suffix_reverse_index14\
    \ = 0\n    local palindrome_prefix_reverse_index15 = 0\n    local palindrome_suffix_reverse_index15\
    \ = 0\n    local palindrome_prefix_reverse_index16 = 0\n    local palindrome_suffix_reverse_index16\
    \ = 0\n    local palindrome_prefix_reverse_index17 = 0\n    local palindrome_suffix_reverse_index17",
  "  local postfix = string\n  local reverse = \"\"\n  local palindrome = \"\"\n \
    \ local suffix\n  while true do\n    suffix = string.sub(postfix, 1, string.len(postfix)\
    \ - 1)\n    if suffix == reverse then\n      palindrome = palindrome .. suffix\n\
    \      break\n    end\n    reverse = reverse .. suffix\n    postfix = string.sub(postfix,\
    \ 1, string.len(postfix) - 1)\n  end\n  return palindrome\nend", "  local palindrome\
    \ = string\n  local postfix = string\n  local reverse = string\n  local longest_postfix\
    \ = string\n  local longest_postfix_length = string\n  local longest_postfix_reverse\
    \ = string\n  local longest_postfix_reverse_length = string\n  local longest_postfix_reverse_start\
    \ = string\n  local longest_postfix_reverse_start_length = string\n  local longest_postfix_reverse_end\
    \ = string\n  local longest_postfix_reverse_end_length = string\n  local longest_postfix_reverse_start_reverse\
    \ = string\n  local longest_postfix_reverse_start_reverse_length = string\n  local\
    \ longest_postfix_reverse_end_reverse = string\n  local longest_postfix_reverse_end_reverse_length\
    \ = string\n  local longest_postfix_reverse_start_reverse_start = string\n  local\
    \ longest_postfix_reverse_start_reverse_start_length = string\n  local longest_postfix_reverse_end_reverse_end\
    \ = string\n  local longest_postfix_reverse_end_reverse_end_length = string\n\
    \  local longest_postfix_reverse_start_reverse_end = string\n  local longest_postfix_reverse_start_reverse_end_length\
    \ = string\n  local longest_postfix_reverse_end_reverse_start = string\n  local\
    \ longest_postfix_reverse_end_reverse_start_length = string\n  local longest_postfix_reverse_start_reverse_start\
    \ = string\n  local longest_postfix_reverse_start_reverse_start_length = string\n\
    \  local longest_postfix_reverse_end_reverse_end = string\n  local longest_postfix_reverse_end_reverse_end_length\
    \ = string\n  local longest_postfix_reverse_start_reverse_end = string\n  local\
    \ longest_postfix_reverse_start_reverse_end_length = string\n  local longest_postfix_reverse_end_reverse_start\
    \ = string\n  local longest_postfix_reverse_end_reverse_start_length = string\n\
    \  local longest_postfix_reverse_start_reverse_start = string\n  local longest_postfix_reverse_start_reverse_start_length\
    \ = string\n  local longest_postfix_reverse_end_reverse_end = string\n  local\
    \ longest_postfix_reverse_end_reverse_end_length = string\n  local longest_postfix_reverse_start_reverse_end\
    \ = string\n  local longest_postfix_reverse_start_reverse_end_length = string\n\
    \  local longest_postfix_reverse_end_reverse_start = string\n  local longest_postfix_reverse_end_reverse_start_length\
    \ = string\n  local longest_postfix_reverse_start_reverse_start = string\n  local\
    \ longest_postfix_reverse_start_reverse_start_length = string\n  local longest_postfix_reverse_end_reverse_end\
    \ = string\n  local longest_postfix_reverse_end_reverse_end_length = string\n\
    \  local longest_postfix_reverse_start_reverse_end = string\n", "  local palindrome\
    \ = string.gsub(string, \"[^\" .. string.char(string.byte(\"A\")) .. \"]\", \"\
    \")\n  local reversed_string = string.gsub(string, \"^\" .. palindrome, \"[\"\
    \ .. string.char(string.byte(\"A\")) .. \"]\")\n  return reversed_string .. palindrome\n\
    end", "  -- Find the longest postfix of supplied string that is a palindrome.\n\
    \  local function find_longest_postfix(string, postfix, longest)\n    local postfix_length\
    \ = #postfix\n    local longest_length = #longest\n    for i = 1, postfix_length\
    \ do\n      local char = string.sub(postfix, i, i)\n      local next_char = string.sub(postfix,\
    \ i + 1, i + 1)\n      if char == next_char then\n        postfix_length = postfix_length\
    \ - 1\n      else\n        postfix_length = postfix_length + 1\n      end\n  \
    \    if postfix_length == longest_length then\n        longest = string.sub(postfix,\
    \ 1, i)\n      end\n    end\n    return longest\n  end\n  -- Append to the end\
    \ of the string reverse of a string prefix that comes before the palindromic suffix.\n\
    \  local function append_to_palindrome_suffix(string, postfix, longest)\n    local\
    \ postfix_length = #postfix\n    local longest_length = #longest\n    for i =\
    \ 1, postfix_length do\n      local char = string.sub(postfix, i, i)\n      local\
    \ next_char = string.sub(postfix, i + 1, i + 1)\n      if char == next_char then\n\
    \        postfix_length = postfix_length - 1\n      else\n        postfix_length\
    \ = postfix_length + 1\n      end\n      if postfix_length == longest_length then\n\
    \        longest = string.sub(postfix, 1, i)\n      end\n    end\n    return longest\
    \ .. string.sub(postfix, longest, #longest)\n  end\n  -- Find the shortest palindrome\
    \ that begins with a supplied string.\n  local function find_shortest_palindrome(string,\
    \ postfix, longest)\n    local postfix_length = #postfix\n    local longest_length\
    \ = #longest\n    for i = 1, postfix_length do\n      local char = string.sub(postfix,\
    \ i, i)\n      local next_char = string.sub(postfix, i + 1, i + 1)\n      if char\
    \ == next_char then\n        postfix_length = postfix_length - 1\n      else\n\
    \        postfix_length = postfix_length + 1\n      end\n      if postfix_length\
    \ == longest_length then\n        longest = string.sub(postfix, 1, i)\n      end\n\
    \    end\n    return longest\n  end\n  -- Find the longest postfix of supplied\
    \ string that is a palindrome.\n  local postfix = string.gsub(string, \"[^\" ..\
    \ string.char(32) .. \"]\", \"\")\n  -- Find the longest postfix of supplied string\
    \ that is a palindrome.\n  local longest = find_longest_", "  local palindrome\
    \ = string\n  local longest_postfix = string\n  local longest_postfix_reverse\
    \ = string\n  local longest_postfix_reverse_length = string\n  local longest_postfix_reverse_length_index\
    \ = 0\n  local longest_postfix_reverse_length_index_start = 0\n  local longest_postfix_reverse_length_index_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_start = 0\n  local longest_postfix_reverse_length_index_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_start = 0\n  local\
    \ longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_length_index_end_end_end = 0\n  local longest_postfix_reverse_length_index_end_end_end\
    \ = 0\n  local longest_postfix_reverse_", "  local palindrome = string.gsub(string,\
    \ \"^%s*(.-)%s*$\", \"%1\")\n  return string..palindrome..string.reverse(palindrome)\n\
    end", "  local longest, longestPrefix, longestSuffix = 0, 0, 0\n  for i = 1, #string\
    \ do\n    local postfix = string:sub(i, i)\n    local prefix = string:sub(1, i)\n\
    \    local reverse = stringReverse(prefix)\n    if postfix ~= reverse then\n \
    \     longest = i\n      longestPrefix = prefix\n      longestSuffix = postfix\n\
    \    end\n  end\n  return stringReverse(longestPrefix..longestSuffix)\nend", " \
    \   local palindrome = string\n    local postfix = string.gsub(string, \"[^\"\
    \ .. string.char(127) .. \"]\", \"\")\n    local postfix_reverse = string.gsub(postfix,\
    \ \"[\" .. string.char(127) .. \"]\", \"\")\n    local prefix_reverse = string.gsub(postfix,\
    \ \"[\" .. string.char(127) .. \"]\", \"\")\n    local prefix_length = #prefix_reverse\n\
    \    local postfix_length = #postfix_reverse\n    if prefix_length == 0 then\n\
    \        return palindrome\n    end\n    if postfix_length == 0 then\n       \
    \ return palindrome .. prefix_reverse\n    end\n    if prefix_length < postfix_length\
    \ then\n        local prefix_postfix = string.sub(postfix, 1, prefix_length)\n\
    \        local postfix_postfix = string.sub(postfix, prefix_length + 1, postfix_length)\n\
    \        local prefix_postfix_reverse = string.sub(prefix_reverse, 1, prefix_length)\n\
    \        local postfix_postfix_reverse = string.sub(prefix_reverse, prefix_length\
    \ + 1, postfix_length)\n        local prefix_postfix_length = #prefix_postfix_reverse\n\
    \        local postfix_postfix_length = #postfix_postfix_reverse\n        if prefix_postfix_length\
    \ == 0 then\n            return palindrome .. prefix_postfix_reverse .. postfix_postfix_reverse\n\
    \        end\n        if postfix_postfix_length == 0 then\n            return\
    \ palindrome .. prefix_postfix .. postfix_postfix\n        end\n        if prefix_postfix_length\
    \ < postfix_postfix_length then\n            local prefix_postfix_postfix = string.sub(prefix_postfix,\
    \ 1, prefix_postfix_length)\n            local postfix_postfix_postfix = string.sub(prefix_postfix,\
    \ prefix_postfix_length + 1, postfix_postfix_length)\n            local prefix_postfix_postfix_reverse\
    \ = string.sub(prefix_postfix_reverse, 1, prefix_postfix_length)\n           \
    \ local postfix_postfix_postfix_reverse = string.sub(prefix_postfix_reverse, prefix_postfix_length\
    \ + 1, postfix_postfix_length)\n            local prefix_postfix_postfix_length\
    \ = #prefix_postfix_postfix_reverse\n            local postfix_postfix_postfix_length\
    \ = #postfix_postfix_postfix_reverse\n            if prefix_postfix_postfix_length\
    \ == 0 then\n                return palindrome .. prefix_postfix_postfix_reverse\
    \ .. postfix_postfix_postfix_reverse\n            end\n            if postfix_postfix_postfix_length\
    \ == 0 then\n                return palindrome .. prefix_postfix_postfix .. postfix_postfix_postfix\n\
    \            end\n            if prefix_postfix_postfix_length < postfix_postfix_postfix_length ",
  "  -- Find longest postfix of string that is a palindrome.\n  local longest_postfix\
    \ = string\n  local longest_postfix_length = 1\n  for i = 1, #string do\n    local\
    \ postfix = string\n    postfix = string.sub(string,i,i)\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")\n    postfix = string.gsub(postfix,\"%W\",\"\")\n    postfix = string.gsub(postfix,\"\
    %W\",\"\")", "    local palindrome = string\n    local longest_postfix = string\n\
    \    local longest_postfix_length = string\n    local longest_postfix_length_index\
    \ = 0\n    local longest_postfix_length_reversed = string\n    local longest_postfix_length_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed = string\n    local\
    \ longest_postfix_length_reversed_reversed_index = 0\n    local longest_postfix_length_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed =\
    \ string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed\
    \ = string\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local longest_postfix_length_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_reversed_index\
    \ = 0\n    local ", "  local longest, longestLen = string.len(), 0\n  for i =\
    \ 1, string.len() do\n    local char = string.sub(i, i)\n    longest = string.sub(longest,\
    \ longestLen + 1)\n    longestLen = string.len(longest)\n    if char == string.sub(longest,\
    \ longestLen - 1, longestLen) then\n      longest = string.sub(longest, 0, longestLen\
    \ - 1)\n      longestLen = string.len(longest)\n    end\n  end\n  return string.sub(longest,\
    \ longestLen + 1)\nend", "  -- Find longest postfix of string that is a palindrome.\n\
    \  local longest_postfix = string.gsub(string, \"%.\", \"\")\n  -- Reverse the\
    \ longest postfix of string that is a palindrome.\n  longest_postfix = string.gsub(longest_postfix,\
    \ \"%.\", \"%.\"..string.sub(longest_postfix, 1, string.len(longest_postfix)-1))\n\
    \  -- Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n  longest_postfix = string.gsub(longest_postfix, \"\
    %.\", \"%.\"..string.sub(longest_postfix, 1, string.len(longest_postfix)-1))\n\
    \  return longest_postfix\nend", "    local palindrome = string\n    local postfix\
    \ = string\n    local reverse = string\n    local suffix = ''\n    local longest\
    \ = 0\n    local longestLength = 0\n    while true do\n        longestLength =\
    \ 0\n        for i = 1, #postfix do\n            longestLength = longestLength\
    \ + #postfix\n            if longestLength > #palindrome then\n              \
    \  longestLength = #palindrome\n            end\n            if longestLength\
    \ > #suffix then\n                longestLength = #suffix\n            end\n \
    \           if longestLength > #reverse then\n                longestLength =\
    \ #reverse\n            end\n            if longestLength > #postfix then\n  \
    \              longestLength = #postfix\n            end\n        end\n      \
    \  longest = longestLength\n        postfix = postfix..suffix\n        reverse\
    \ = reverse..suffix\n        suffix = ''\n    end\n    local palindromeLength\
    \ = 0\n    for i = 1, #postfix do\n        palindromeLength = palindromeLength\
    \ + #postfix\n    end\n    if palindromeLength > #palindrome then\n        palindromeLength\
    \ = #palindrome\n    end\n    if palindromeLength > #reverse then\n        palindromeLength\
    \ = #reverse\n    end\n    if palindromeLength > #postfix then\n        palindromeLength\
    \ = #postfix\n    end\n    local palindrome = string\n    for i = 1, palindromeLength\
    \ do\n        palindrome = palindrome..reverse\n    end\n    return palindrome\n\
    end", "  local postfix = string\n  local reverse = \"\"\n  while true do\n   \
    \ local postfix = postfix..string\n    local reverse = reverse..string\n    local\
    \ length = #string\n    if length == 0 then\n      break\n    end\n    local palindrome\
    \ = string.sub(postfix, 1, length-1)\n    if palindrome == reverse then\n    \
    \  break\n    end\n  end\n  return postfix.. reverse\nend", "  local postfix =\
    \ string.match(reverse(string), \"([^%s]+)$\")\n  local palindrome = string.sub(string,\
    \ 1, -#postfix)\n  local reversed_postfix = string.match(reverse(string), postfix,\
    \ 1)\n  return palindrome .. reversed_postfix\nend", "  -- If string is empty\
    \ or only contains spaces, return empty string.\n  if string == \"\" or string\
    \ == \" \" then\n    return \"\"\n  end", "    local postfix = string.gsub(string,\
    \ \"%.\", \"\")\n    local reverse = string.gsub(postfix, \"%.\", \"\")\n    return\
    \ string..reverse\nend", "    local palindrome = string\n    local postfix = string\n\
    \    local reverse = string\n    local suffix\n    local prefix\n    local length\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local ",
  "    local reversed_string = \"\"\n    local longest_postfix = \"\"\n    local longest_postfix_length\
    \ = 0\n    local longest_postfix_index = 0\n    local longest_postfix_index2 =\
    \ 0\n    local longest_postfix_index3 = 0\n    local longest_postfix_index4 =\
    \ 0\n    local longest_postfix_index5 = 0\n    local longest_postfix_index6 =\
    \ 0\n    local longest_postfix_index7 = 0\n    local longest_postfix_index8 =\
    \ 0\n    local longest_postfix_index9 = 0\n    local longest_postfix_index10 =\
    \ 0\n    local longest_postfix_index11 = 0\n    local longest_postfix_index12\
    \ = 0\n    local longest_postfix_index13 = 0\n    local longest_postfix_index14\
    \ = 0\n    local longest_postfix_index15 = 0\n    local longest_postfix_index16\
    \ = 0\n    local longest_postfix_index17 = 0\n    local longest_postfix_index18\
    \ = 0\n    local longest_postfix_index19 = 0\n    local longest_postfix_index20\
    \ = 0\n    local longest_postfix_index21 = 0\n    local longest_postfix_index22\
    \ = 0\n    local longest_postfix_index23 = 0\n    local longest_postfix_index24\
    \ = 0\n    local longest_postfix_index25 = 0\n    local longest_postfix_index26\
    \ = 0\n    local longest_postfix_index27 = 0\n    local longest_postfix_index28\
    \ = 0\n    local longest_postfix_index29 = 0\n    local longest_postfix_index30\
    \ = 0\n    local longest_postfix_index31 = 0\n    local longest_postfix_index32\
    \ = 0\n    local longest_postfix_index33 = 0\n    local longest_postfix_index34\
    \ = 0\n    local longest_postfix_index35 = 0\n    local longest_postfix_index36\
    \ = 0\n    local longest_postfix_index37 = 0\n    local longest_postfix_index38\
    \ = 0\n    local longest_postfix_index39 = 0\n    local longest_postfix_index40\
    \ = 0\n    local longest_postfix_index41 = 0\n    local longest_postfix_index42\
    \ = 0\n    local longest_postfix_index43 = 0\n    local longest_postfix_index44\
    \ = 0\n    local longest_postfix_index45 = 0\n    local longest_postfix_index46\
    \ = 0\n    local longest_postfix_index47 = 0\n    local longest_postfix_index48\
    \ = 0\n    local longest_postfix_index49", "  -- Find the longest postfix that\
    \ is a palindrome.\n  local postfix = string.match(\"^(.-)$\", \"^\" .. string\
    \ .. \"$\")\n  -- Reverse the postfix to make it a palindrome.\n  postfix = string.gsub(postfix,\
    \ \"(.-)$\", \"%1\" .. string .. \"%2\")\n  -- Return palindrome with postfix\
    \ appended.\n  return \"^\" .. string .. postfix .. \"$\"\nend", "  local palindrome\
    \ = string\n  local longest_postfix = \"\"\n  local longest_postfix_length = 0\n\
    \  local longest_postfix_index = 0\n  local longest_postfix_length_index = 0\n\
    \  local longest_postfix_length_reverse = 0\n  local longest_postfix_length_reverse_index\
    \ = 0\n  local longest_postfix_length_reverse_count = 0\n  local longest_postfix_length_reverse_count2\
    \ = 0\n  local longest_postfix_length_reverse_count3 = 0\n  local longest_postfix_length_reverse_count4\
    \ = 0\n  local longest_postfix_length_reverse_count5 = 0\n  local longest_postfix_length_reverse_count6\
    \ = 0\n  local longest_postfix_length_reverse_count7 = 0\n  local longest_postfix_length_reverse_count8\
    \ = 0\n  local longest_postfix_length_reverse_count9 = 0\n  local longest_postfix_length_reverse_count10\
    \ = 0\n  local longest_postfix_length_reverse_count11 = 0\n  local longest_postfix_length_reverse_count12\
    \ = 0\n  local longest_postfix_length_reverse_count13 = 0\n  local longest_postfix_length_reverse_count14\
    \ = 0\n  local longest_postfix_length_reverse_count15 = 0\n  local longest_postfix_length_reverse_count16\
    \ = 0\n  local longest_postfix_length_reverse_count17 = 0\n  local longest_postfix_length_reverse_count18\
    \ = 0\n  local longest_postfix_length_reverse_count19 = 0\n  local longest_postfix_length_reverse_count20\
    \ = 0\n  local longest_postfix_length_reverse_count21 = 0\n  local longest_postfix_length_reverse_count22\
    \ = 0\n  local longest_postfix_length_reverse_count23 = 0\n  local longest_postfix_length_reverse_count24\
    \ = 0\n  local longest_postfix_length_reverse_count25 = 0\n  local longest_postfix_length_reverse_count26\
    \ = 0\n  local longest_postfix_length_reverse_count27 = 0\n  local longest_postfix_length_reverse_count28\
    \ = 0\n  local longest_postfix_length_reverse_count29 = 0\n  local longest_postfix_length_reverse_count30\
    \ = 0\n  local longest_postfix_length_reverse_count31 = 0\n  local longest_postfix_length_reverse_count32\
    \ = 0\n  local longest_postfix_length_reverse_count33 = 0\n  local longest_postfix_length_reverse_count34\
    \ = 0\n  local lon", "  local postfix = string.gsub(string, \"%.\", \"\")\n  local\
    \ reverse = string.gsub(postfix, \"%.\", \"\")\n  return string.reverse(reverse)\n\
    end", "  local palindrome = string\n  local postfix = string\n  local reverse\
    \ = string\n  local i = 1\n  while i <= #string do\n    local char = string[i]\n\
    \    if char == string[#string] then\n      postfix = postfix .. char\n      reverse\
    \ = reverse .. char\n    else\n      postfix = postfix .. char\n      reverse\
    \ = reverse .. char\n      palindrome = palindrome .. char\n    end\n    i = i\
    \ + 1\n  end\n  return palindrome, reverse, postfix\nend", "  local palindrome\
    \ = string\n  local longest_postfix = \"\"\n  local longest_prefix_length = 0\n\
    \  local longest_prefix_start = nil\n  local longest_prefix_end = nil\n  local\
    \ longest_prefix_postfix = nil\n  local longest_prefix_postfix_length = nil\n\
    \  local longest_prefix_postfix_start = nil\n  local longest_prefix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_postfix_postfix_start = nil\n  local longest_prefix_postfix_postfix_end\
    \ = nil\n  local longest_prefix_postfix_postfix_postfix = nil\n  local longest_prefix_postfix_postfix_length\
    \ = nil\n  local longest_prefix_post", "    local palindrome = string\n    local\
    \ palindrome_length = #string\n    local palindrome_postfix = string\n    local\
    \ palindrome_prefix_length = #string\n    local palindrome_prefix_postfix = string\n\
    \    local palindrome_prefix_postfix_length = #string\n    local palindrome_prefix_postfix_postfix\
    \ = string\n    local palindrome_prefix_postfix_postfix_length = #string\n   \
    \ local palindrome_prefix_postfix_postfix_postfix = string\n    local palindrome_prefix_postfix_postfix_postfix_length\
    \ = #string\n    local palindrome_prefix_postfix_postfix_postfix_postfix = string\n\
    \    local palindrome_prefix_postfix_postfix_postfix_postfix_length = #string\n\
    \    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix = string\n\
    \    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length =\
    \ #string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = #string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = #string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = #string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = #string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = string\n    local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_post",
  "  local palindrome = string.gsub(string, \"^%w+\", function (word)\n    local reverse\
    \ = string.gsub(word, \"%w+$\", \"%w\")\n    return reverse .. word\n  end)\n\
    \  return palindrome\nend", "  local postfix = string.sub(string, 1, string.len(string))\n\
    \  local reversed_postfix = string.sub(string.sub(postfix, 1, string.len(postfix)),\
    \ 1, string.len(postfix))\n  return string .. reversed_postfix\nend", "  local\
    \ palindrome = string\n  local longest_postfix = \"\"\n  local longest_postfix_length\
    \ = 0\n  local longest_postfix_index = 0\n  local longest_postfix_index2 = 0\n\
    \  local longest_postfix_index3 = 0\n  local longest_postfix_index4 = 0\n  local\
    \ longest_postfix_index5 = 0\n  local longest_postfix_index6 = 0\n  local longest_postfix_index7\
    \ = 0\n  local longest_postfix_index8 = 0\n  local longest_postfix_index9 = 0\n\
    \  local longest_postfix_index10 = 0\n  local longest_postfix_index11 = 0\n  local\
    \ longest_postfix_index12 = 0\n  local longest_postfix_index13 = 0\n  local longest_postfix_index14\
    \ = 0\n  local longest_postfix_index15 = 0\n  local longest_postfix_index16 =\
    \ 0\n  local longest_postfix_index17 = 0\n  local longest_postfix_index18 = 0\n\
    \  local longest_postfix_index19 = 0\n  local longest_postfix_index20 = 0\n  local\
    \ longest_postfix_index21 = 0\n  local longest_postfix_index22 = 0\n  local longest_postfix_index23\
    \ = 0\n  local longest_postfix_index24 = 0\n  local longest_postfix_index25 =\
    \ 0\n  local longest_postfix_index26 = 0\n  local longest_postfix_index27 = 0\n\
    \  local longest_postfix_index28 = 0\n  local longest_postfix_index29 = 0\n  local\
    \ longest_postfix_index30 = 0\n  local longest_postfix_index31 = 0\n  local longest_postfix_index32\
    \ = 0\n  local longest_postfix_index33 = 0\n  local longest_postfix_index34 =\
    \ 0\n  local longest_postfix_index35 = 0\n  local longest_postfix_index36 = 0\n\
    \  local longest_postfix_index37 = 0\n  local longest_postfix_index38 = 0\n  local\
    \ longest_postfix_index39 = 0\n  local longest_postfix_index40 = 0\n  local longest_postfix_index41\
    \ = 0\n  local longest_postfix_index42 = 0\n  local longest_postfix_index43 =\
    \ 0\n  local longest_postfix_index44 = 0\n  local longest_postfix_index45 = 0\n\
    \  local longest_postfix_index46 = 0\n  local longest_postfix_index47 = 0\n  local\
    \ longest_postfix_index48 = 0\n  local longest_postfix_", "    local palindrome\
    \ = string\n    local longest_postfix = \"\"\n    local longest_postfix_length\
    \ = 0\n    local longest_postfix_index = 0\n    local longest_postfix_index2 =\
    \ 0\n    local longest_postfix_index3 = 0\n    local longest_postfix_index4 =\
    \ 0\n    local longest_postfix_index5 = 0\n    local longest_postfix_index6 =\
    \ 0\n    local longest_postfix_index7 = 0\n    local longest_postfix_index8 =\
    \ 0\n    local longest_postfix_index9 = 0\n    local longest_postfix_index10 =\
    \ 0\n    local longest_postfix_index11 = 0\n    local longest_postfix_index12\
    \ = 0\n    local longest_postfix_index13 = 0\n    local longest_postfix_index14\
    \ = 0\n    local longest_postfix_index15 = 0\n    local longest_postfix_index16\
    \ = 0\n    local longest_postfix_index17 = 0\n    local longest_postfix_index18\
    \ = 0\n    local longest_postfix_index19 = 0\n    local longest_postfix_index20\
    \ = 0\n    local longest_postfix_index21 = 0\n    local longest_postfix_index22\
    \ = 0\n    local longest_postfix_index23 = 0\n    local longest_postfix_index24\
    \ = 0\n    local longest_postfix_index25 = 0\n    local longest_postfix_index26\
    \ = 0\n    local longest_postfix_index27 = 0\n    local longest_postfix_index28\
    \ = 0\n    local longest_postfix_index29 = 0\n    local longest_postfix_index30\
    \ = 0\n    local longest_postfix_index31 = 0\n    local longest_postfix_index32\
    \ = 0\n    local longest_postfix_index33 = 0\n    local longest_postfix_index34\
    \ = 0\n    local longest_postfix_index35 = 0\n    local longest_postfix_index36\
    \ = 0\n    local longest_postfix_index37 = 0\n    local longest_postfix_index38\
    \ = 0\n    local longest_postfix_index39 = 0\n    local longest_postfix_index40\
    \ = 0\n    local longest_postfix_index41 = 0\n    local longest_postfix_index42\
    \ = 0\n    local longest_postfix_index43 = 0\n    local longest_postfix_index44\
    \ = 0\n    local longest_postfix_index45 = 0\n    local longest_postfix_index46\
    \ = 0\n    local longest_postfix_index47 = 0\n    local longest_postfix_index48\
    \ = 0\n    local longest_postfix_", "    local palindrome = string.gsub(string,\
    \ \"([^\" .. string.char(string.byte(\"A\")) .. \"]+)([^\" .. string.char(string.byte(\"\
    A\")) .. \"]+)$\")\n    local reversed_palindrome = string.gsub(palindrome, \"\
    ([^\" .. string.char(string.byte(\"A\")) .. \"]+)([^\" .. string.char(string.byte(\"\
    A\")) .. \"]+)\", \"\\2\\1\")\n    return reversed_palindrome .. string\nend",
  "    local postfix = string\n    local palindrome = string\n    local prefix_length\
    \ = 0\n    while true do\n        local postfix_length = #postfix\n        local\
    \ reversed_postfix = reverse(string)\n        local reversed_palindrome = reverse(string)\n\
    \        if postfix_length == 0 then\n            -- No more postfix to reverse\
    \ and no palindrome to append.\n            return palindrome\n        end\n \
    \       if postfix_length < reversed_postfix then\n            -- Postfix is shorter\
    \ than palindrome prefix.\n            postfix = postfix..string\n           \
    \ postfix_length = postfix_length + #postfix\n        else\n            -- Postfix\
    \ is longer than palindrome prefix.\n            postfix = reversed_postfix..postfix\n\
    \            postfix_length = postfix_length - reversed_postfix\n        end\n\
    \        if postfix_length == 0 then\n            -- No more postfix to reverse\
    \ and no palindrome to append.\n            return palindrome\n        end\n \
    \       if postfix_length < reversed_palindrome then\n            -- Postfix is\
    \ shorter than palindrome prefix.\n            postfix = postfix..string\n   \
    \         postfix_length = postfix_length + #postfix\n        else\n         \
    \   -- Postfix is longer than palindrome prefix.\n            postfix = reversed_palindrome..postfix\n\
    \            postfix_length = postfix_length - reversed_palindrome\n        end\n\
    \        if postfix_length == 0 then\n            -- No more postfix to reverse\
    \ and no palindrome to append.\n            return palindrome\n        end\n \
    \       if postfix_length < reversed_postfix then\n            -- Postfix is shorter\
    \ than palindrome prefix.\n            postfix = postfix..string\n           \
    \ postfix_length = postfix_length + #postfix\n        else\n            -- Postfix\
    \ is longer than palindrome prefix.\n            postfix = reversed_postfix..postfix\n\
    \            postfix_length = postfix_length - reversed_postfix\n        end\n\
    \        if postfix_length == 0 then\n            -- No more postfix to reverse\
    \ and no palindrome to append.\n            return palindrome\n        end\n \
    \       if postfix_length < reversed_palindrome then\n            -- Postfix is\
    \ shorter than palindrome prefix.\n            postfix = postfix..string\n   \
    \         postfix_length = postfix_length + #postfix\n        else\n         \
    \   -- Postfix is long", "  local palindrome = string\n  local longest_postfix\
    \ = string\n  local longest_postfix_length = string\n  local longest_postfix_suffix_length\
    \ = string\n  local longest_postfix_suffix_reverse = string\n  local longest_postfix_suffix_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix = string\n  local longest_postfix_suffix_reverse_suffix_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse = string\n \
    \ local longest_postfix_suffix_reverse_suffix_reverse_length = string\n  local\
    \ longest_postfix_suffix_reverse_suffix_reverse_suffix = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_length\
    \ = string\n  local longest_postfix_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix_reverse_suffix\
    \ = string\n  local ", "    local palindrome = string\n    local postfix = string\n\
    \    local reverse = string\n    local length = #string\n    for i = 1, length\
    \ do\n        postfix = postfix .. string[length - i]\n        reverse = reverse\
    \ .. string[length - i - 1]\n        if postfix ~= reverse then\n            palindrome\
    \ = palindrome .. postfix .. reverse\n            postfix = \"\"\n           \
    \ reverse = \"\"\n        end\n    end\n    return palindrome\nend", "  local\
    \ palindrome = string\n  local longest_postfix = string\n  local longest_postfix_length\
    \ = 1\n  local longest_postfix_index = 1\n  local longest_postfix_index2 = 0\n\
    \  local longest_postfix_index3 = 0\n  local longest_postfix_index4 = 0\n  local\
    \ longest_postfix_index5 = 0\n  local longest_postfix_index6 = 0\n  local longest_postfix_index7\
    \ = 0\n  local longest_postfix_index8 = 0\n  local longest_postfix_index9 = 0\n\
    \  local longest_postfix_index10 = 0\n  local longest_postfix_index11 = 0\n  local\
    \ longest_postfix_index12 = 0\n  local longest_postfix_index13 = 0\n  local longest_postfix_index14\
    \ = 0\n  local longest_postfix_index15 = 0\n  local longest_postfix_index16 =\
    \ 0\n  local longest_postfix_index17 = 0\n  local longest_postfix_index18 = 0\n\
    \  local longest_postfix_index19 = 0\n  local longest_postfix_index20 = 0\n  local\
    \ longest_postfix_index21 = 0\n  local longest_postfix_index22 = 0\n  local longest_postfix_index23\
    \ = 0\n  local longest_postfix_index24 = 0\n  local longest_postfix_index25 =\
    \ 0\n  local longest_postfix_index26 = 0\n  local longest_postfix_index27 = 0\n\
    \  local longest_postfix_index28 = 0\n  local longest_postfix_index29 = 0\n  local\
    \ longest_postfix_index30 = 0\n  local longest_postfix_index31 = 0\n  local longest_postfix_index32\
    \ = 0\n  local longest_postfix_index33 = 0\n  local longest_postfix_index34 =\
    \ 0\n  local longest_postfix_index35 = 0\n  local longest_postfix_index36 = 0\n\
    \  local longest_postfix_index37 = 0\n  local longest_postfix_index38 = 0\n  local\
    \ longest_postfix_index39 = 0\n  local longest_postfix_index40 = 0\n  local longest_postfix_index41\
    \ = 0\n  local longest_postfix_index42 = 0\n  local longest_postfix_index43 =\
    \ 0\n  local longest_postfix_index44 = 0\n  local longest_postfix_index45 = 0\n\
    \  local longest_postfix_index46 = 0\n  local longest_postfix_index47 = 0\n  local\
    \ longest_postfix_index48 = 0\n  local longest_postfix_", "    local palindrome\
    \ = string\n    local prefix_length = 0\n    local suffix_length = 0\n    local\
    \ palindrome_length = 0\n    local palindrome_prefix = \"\"\n    local palindrome_suffix\
    \ = \"\"\n    local palindrome_prefix_length = 0\n    local palindrome_suffix_length\
    \ = 0\n    local palindrome_prefix_reverse = \"\"\n    local palindrome_suffix_reverse\
    \ = \"\"\n    local palindrome_prefix_reverse_index = 0\n    local palindrome_suffix_reverse_index\
    \ = 0\n    local palindrome_prefix_reverse_index2 = 0\n    local palindrome_suffix_reverse_index2\
    \ = 0\n    local palindrome_prefix_reverse_index3 = 0\n    local palindrome_suffix_reverse_index3\
    \ = 0\n    local palindrome_prefix_reverse_index4 = 0\n    local palindrome_suffix_reverse_index4\
    \ = 0\n    local palindrome_prefix_reverse_index5 = 0\n    local palindrome_suffix_reverse_index5\
    \ = 0\n    local palindrome_prefix_reverse_index6 = 0\n    local palindrome_suffix_reverse_index6\
    \ = 0\n    local palindrome_prefix_reverse_index7 = 0\n    local palindrome_suffix_reverse_index7\
    \ = 0\n    local palindrome_prefix_reverse_index8 = 0\n    local palindrome_suffix_reverse_index8\
    \ = 0\n    local palindrome_prefix_reverse_index9 = 0\n    local palindrome_suffix_reverse_index9\
    \ = 0\n    local palindrome_prefix_reverse_index10 = 0\n    local palindrome_suffix_reverse_index10\
    \ = 0\n    local palindrome_prefix_reverse_index11 = 0\n    local palindrome_suffix_reverse_index11\
    \ = 0\n    local palindrome_prefix_reverse_index12 = 0\n    local palindrome_suffix_reverse_index12\
    \ = 0\n    local palindrome_prefix_reverse_index13 = 0\n    local palindrome_suffix_reverse_index13\
    \ = 0\n    local palindrome_prefix_reverse_index14 = 0\n    local palindrome_suffix_reverse_index14\
    \ = 0\n    local palindrome_prefix_reverse_index15 = 0\n    local palindrome_suffix_reverse_index15\
    \ = 0\n    local palindrome_prefix_reverse_index16 = 0\n    local palindrome_suffix_reverse_index16\
    \ = 0\n    local palindrome_prefix_reverse_index17 = 0\n    local palindrome_suffix_reverse_index17",
  "  local palindrome = string\n  local postfix = string\n  local reversed_postfix\
    \ = string\n  local suffix = ''\n  local suffix_index = 1\n  while suffix_index\
    \ <= #string do\n    suffix = string[suffix_index..#string]\n    postfix = string..suffix\n\
    \    reversed_postfix = reversed_postfix..suffix\n    if suffix:reverse() == suffix\
    \ then\n      palindrome = palindrome..suffix\n      postfix = postfix..reversed_postfix\n\
    \      suffix_index = suffix_index + 1\n    end\n  end\n  return palindrome, postfix,\
    \ reversed_postfix\nend", "  local postfix = string.match(\"^(.-)$\", \"^\" ..\
    \ string .. \"$\")\n  local reverse = string.match(\"^(.-)$\", \"^\" .. string.gsub(postfix,\
    \ \"(.-)\", \"%1\") .. \"$\")\n  return string .. reverse .. postfix\nend", " \
    \ local palindrome = string\n  local postfix = string\n  local reverse = string\n\
    \  local prefix_length = #string\n  while true do\n    local postfix = postfix\
    \ .. reverse\n    local prefix_length = prefix_length - 1\n    if prefix_length\
    \ == 0 then\n      break\n    end\n    local postfix_length = #postfix\n    if\
    \ postfix_length == 0 then\n      break\n    end\n    local postfix_reverse =\
    \ reverse\n    for i = 1, prefix_length do\n      postfix_reverse = postfix_reverse\
    \ .. postfix:sub(i, i + 1)\n    end\n    if postfix_reverse == postfix then\n\
    \      palindrome = palindrome .. postfix_reverse\n      break\n    end\n  end\n\
    \  return palindrome\nend", "    local palindrome = string\n    local palindrome_length\
    \ = #string\n    local palindrome_prefix = string\n    local palindrome_suffix\
    \ = string\n    local palindrome_prefix_length = #palindrome_prefix\n    local\
    \ palindrome_suffix_length = #palindrome_suffix\n    local palindrome_prefix_reversed\
    \ = string\n    local palindrome_suffix_reversed = string\n    local palindrome_prefix_reversed_length\
    \ = #palindrome_prefix_reversed\n    local palindrome_suffix_reversed_length =\
    \ #palindrome_suffix_reversed\n    local palindrome_prefix_reversed_reversed =\
    \ string\n    local palindrome_suffix_reversed_reversed = string\n    local palindrome_prefix_reversed_reversed_length\
    \ = #palindrome_prefix_reversed_reversed\n    local palindrome_suffix_reversed_reversed_length\
    \ = #palindrome_suffix_reversed_reversed\n    local palindrome_prefix_reversed_reversed_reversed_length\
    \ = #palindrome_prefix_reversed_reversed_reversed\n    local palindrome_suffix_reversed_reversed_reversed_length\
    \ = #palindrome_suffix_reversed_reversed_reversed\n    local palindrome_prefix_reversed_reversed_reversed_reversed_length\
    \ = #palindrome_prefix_reversed_reversed_reversed_reversed\n    local palindrome_suffix_reversed_reversed_reversed_reversed_length\
    \ = #palindrome_suffix_reversed_reversed_reversed_reversed\n    local palindrome_prefix_reversed_reversed_reversed_reversed_reversed_length\
    \ = #palindrome_prefix_reversed_reversed_reversed_reversed_reversed\n    local\
    \ palindrome_suffix_reversed_reversed_reversed_reversed_reversed_length = #palindrome_suffix_reversed_reversed_reversed_reversed_reversed\n\
    \    local palindrome_prefix_reversed_reversed_reversed_reversed_reversed_reversed_length\
    \ = #palindrome_prefix_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local palindrome_suffix_reversed_reversed_reversed_reversed_reversed_reversed_length\
    \ = #palindrome_suffix_reversed_reversed_reversed_reversed_reversed_reversed\n\
    \    local palindrome_prefix_reversed_reversed_reversed_reversed_reversed_reversed_reversed_length\
    \ = #palindrome_prefix_reversed_reversed_reversed_", "  -- Find longest postfix\
    \ that is a palindrome.\n  local longest_postfix = find_longest_postfix(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse\
    \ = find_longest_postfix_reverse(string)\n  -- Find longest postfix that is a\
    \ palindrome.\n  local longest_postfix_reverse2 = find_longest_postfix_reverse2(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse3\
    \ = find_longest_postfix_reverse3(string)\n  -- Find longest postfix that is a\
    \ palindrome.\n  local longest_postfix_reverse4 = find_longest_postfix_reverse4(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse5\
    \ = find_longest_postfix_reverse5(string)\n  -- Find longest postfix that is a\
    \ palindrome.\n  local longest_postfix_reverse6 = find_longest_postfix_reverse6(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse7\
    \ = find_longest_postfix_reverse7(string)\n  -- Find longest postfix that is a\
    \ palindrome.\n  local longest_postfix_reverse8 = find_longest_postfix_reverse8(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse9\
    \ = find_longest_postfix_reverse9(string)\n  -- Find longest postfix that is a\
    \ palindrome.\n  local longest_postfix_reverse10 = find_longest_postfix_reverse10(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse11\
    \ = find_longest_postfix_reverse11(string)\n  -- Find longest postfix that is\
    \ a palindrome.\n  local longest_postfix_reverse12 = find_longest_postfix_reverse12(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse13\
    \ = find_longest_postfix_reverse13(string)\n  -- Find longest postfix that is\
    \ a palindrome.\n  local longest_postfix_reverse14 = find_longest_postfix_reverse14(string)\n\
    \  -- Find longest postfix that is a palindrome.\n  local longest_postfix_reverse15\
    \ = find_longest_postfix_reverse15(string)\n  -- Find lon", "  local palindrome\
    \ = string.gsub(string, \"^(.-)$\", function(s)\n    local reverse = string.gsub(s,\
    \ \"(.-)\", function(s)\n      return string.sub(s, \"^\", 1, -2)\n    end)\n\
    \    return reverse .. s\n  end)\n  return palindrome\nend", "  local palindrome\
    \ = string\n  local prefix_length = 0\n  local suffix_length = 0\n  local reversed_string\
    \ = \"\"\n  local longest_postfix_length = 0\n  local longest_postfix_index =\
    \ 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n\
    \  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local\
    \ longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string\
    \ = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string =\
    \ \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\
    \"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n\
    \  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local\
    \ longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index\
    \ = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index =\
    \ 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n\
    \  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local\
    \ longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string\
    \ = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string =\
    \ \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\
    \"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n\
    \  local longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local\
    \ longest_postfix_index = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index\
    \ = 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index =\
    \ 0\n  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n\
    \  local longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local\
    \ longest_postfix_string = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string\
    \ = \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string =\
    \ \"\"\n  local longest_postfix_index = 0\n  local longest_postfix_string = \"\
    \"\n  local longest_postfix_", "    local palindrome = string\n    local longest_postfix\
    \ = \"\"\n    local longest_postfix_length = 0\n    local longest_postfix_index\
    \ = 0\n    local longest_postfix_index2 = 0\n    local longest_postfix_index3\
    \ = 0\n    local longest_postfix_index4 = 0\n    local longest_postfix_index5\
    \ = 0\n    local longest_postfix_index6 = 0\n    local longest_postfix_index7\
    \ = 0\n    local longest_postfix_index8 = 0\n    local longest_postfix_index9\
    \ = 0\n    local longest_postfix_index10 = 0\n    local longest_postfix_index11\
    \ = 0\n    local longest_postfix_index12 = 0\n    local longest_postfix_index13\
    \ = 0\n    local longest_postfix_index14 = 0\n    local longest_postfix_index15\
    \ = 0\n    local longest_postfix_index16 = 0\n    local longest_postfix_index17\
    \ = 0\n    local longest_postfix_index18 = 0\n    local longest_postfix_index19\
    \ = 0\n    local longest_postfix_index20 = 0\n    local longest_postfix_index21\
    \ = 0\n    local longest_postfix_index22 = 0\n    local longest_postfix_index23\
    \ = 0\n    local longest_postfix_index24 = 0\n    local longest_postfix_index25\
    \ = 0\n    local longest_postfix_index26 = 0\n    local longest_postfix_index27\
    \ = 0\n    local longest_postfix_index28 = 0\n    local longest_postfix_index29\
    \ = 0\n    local longest_postfix_index30 = 0\n    local longest_postfix_index31\
    \ = 0\n    local longest_postfix_index32 = 0\n    local longest_postfix_index33\
    \ = 0\n    local longest_postfix_index34 = 0\n    local longest_postfix_index35\
    \ = 0\n    local longest_postfix_index36 = 0\n    local longest_postfix_index37\
    \ = 0\n    local longest_postfix_index38 = 0\n    local longest_postfix_index39\
    \ = 0\n    local longest_postfix_index40 = 0\n    local longest_postfix_index41\
    \ = 0\n    local longest_postfix_index42 = 0\n    local longest_postfix_index43\
    \ = 0\n    local longest_postfix_index44 = 0\n    local longest_postfix_index45\
    \ = 0\n    local longest_postfix_index46 = 0\n    local longest_postfix_index47\
    \ = 0\n    local longest_postfix_index48 = 0\n    local longest_postfix_", " \
    \   local postfix = string.gsub(string, \"%w+$\", \"\")\n    local reverse = string.gsub(postfix,\
    \ \"^%w+\", \"\")\n    return string .. reverse .. postfix\nend", "  local palindrome\
    \ = string\n  local palindrome_length = #string\n  local palindrome_postfix =\
    \ string\n  local palindrome_postfix_length = #string\n  local palindrome_postfix_reverse\
    \ = string\n  local palindrome_postfix_reverse_length = #string\n  local palindrome_postfix_reverse_index\
    \ = 0\n  local palindrome_postfix_reverse_index2 = 0\n  local palindrome_postfix_reverse_index3\
    \ = 0\n  local palindrome_postfix_reverse_index4 = 0\n  local palindrome_postfix_reverse_index5\
    \ = 0\n  local palindrome_postfix_reverse_index6 = 0\n  local palindrome_postfix_reverse_index7\
    \ = 0\n  local palindrome_postfix_reverse_index8 = 0\n  local palindrome_postfix_reverse_index9\
    \ = 0\n  local palindrome_postfix_reverse_index10 = 0\n  local palindrome_postfix_reverse_index11\
    \ = 0\n  local palindrome_postfix_reverse_index12 = 0\n  local palindrome_postfix_reverse_index13\
    \ = 0\n  local palindrome_postfix_reverse_index14 = 0\n  local palindrome_postfix_reverse_index15\
    \ = 0\n  local palindrome_postfix_reverse_index16 = 0\n  local palindrome_postfix_reverse_index17\
    \ = 0\n  local palindrome_postfix_reverse_index18 = 0\n  local palindrome_postfix_reverse_index19\
    \ = 0\n  local palindrome_postfix_reverse_index20 = 0\n  local palindrome_postfix_reverse_index21\
    \ = 0\n  local palindrome_postfix_reverse_index22 = 0\n  local palindrome_postfix_reverse_index23\
    \ = 0\n  local palindrome_postfix_reverse_index24 = 0\n  local palindrome_postfix_reverse_index25\
    \ = 0\n  local palindrome_postfix_reverse_index26 = 0\n  local palindrome_postfix_reverse_index27\
    \ = 0\n  local palindrome_postfix_reverse_index28 = 0\n  local palindrome_postfix_reverse_index29\
    \ = 0\n  local palindrome_postfix_reverse_index30 = 0\n  local palindrome_postfix_reverse_index31\
    \ = 0\n  local palindrome_postfix_reverse_index32 = 0\n  local palindrome_postfix_reverse_index33\
    \ = 0\n  local palindrome_postfix_reverse_index34 = 0\n  local palin", "  -- Find\
    \ the longest postfix of supplied string that is a palindrome.\n  local function\
    \ find_longest_postfix(string, postfix, longest)\n    local postfix_length = #postfix\n\
    \    local longest_length = #longest\n    local longest_postfix = \"\"\n    local\
    \ longest_postfix_length = 0\n    local longest_postfix_postfix = \"\"\n    local\
    \ longest_postfix_postfix_length = 0\n    local longest_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_length = 0\n    local longest_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_length = 0\n    local\
    \ longest_postfix_postfix_postfix_postfix_postfix = \"\"\n    local longest_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix = \"\"\n    local\
    \ longest_postfix_postfix_postfix_postfix_postfix_length = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_length = 0\n\
    \    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix = \"\
    \"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_length =\
    \ 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = 0\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix\
    \ = \"\"\n    local longest_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_postfix_post",
  "    local palindrome = string\n    local postfix = string\n    local reverse =\
    \ string\n    local length = #string\n    for i = 1, length do\n        postfix\
    \ = postfix .. string[length - i]\n        reverse = reverse .. string[length\
    \ - i - 1]\n        if postfix ~= reverse then\n            palindrome = palindrome\
    \ .. postfix .. reverse\n            postfix = string\n            reverse = string\n\
    \        end\n    end\n    return palindrome\nend", "  -- Find longest postfix\
    \ of string that is a palindrome.\n  local postfix = string.gsub(string, \"%.\"\
    , \"\")\n  local postfix_length = #postfix\n  -- Find longest postfix of string\
    \ that is a palindrome.\n  local reverse = string.gsub(postfix, \"%.\", \"\")\n\
    \  local reverse_length = #reverse\n  -- Find longest postfix of string that is\
    \ a palindrome.\n  local palindrome = string.gsub(postfix, \"%.\", reverse ..\
    \ postfix)\n  -- Return palindrome with longest postfix appended to it.\n  return\
    \ palindrome .. postfix_length\nend", "  -- Find the longest postfix of supplied\
    \ string that is a palindrome.\n  local postfix = string.match(\"^(.-)$\", \"\
    ^\" .. string .. \"$\")\n  -- Append to the end of the string reverse of a string\
    \ prefix that comes before the palindromic suffix.\n  local reversed_prefix =\
    \ string.match(\"^(.-)$\", \"^\" .. string.sub(string, 1, string.len(string) -\
    \ string.len(postfix)) .. \"-\")\n  return reversed_prefix .. postfix .. \"-\"\
    \nend", "  local postfix = string\n  local reverse = \"\"\n  while true do\n \
    \   local index = string.find(postfix, \"^\")\n    if index == nil then\n    \
    \  break\n    end\n    local prefix = string.sub(postfix, 1, index)\n    local\
    \ suffix = string.sub(postfix, index + 1)\n    reverse = reverse .. string.sub(prefix,\
    \ 1, string.len(prefix) - 1) .. suffix\n    postfix = string.sub(postfix, index\
    \ + 2)\n  end\n  return reverse .. suffix\nend", "  local palindrome = string.gsub(string,\
    \ \"^\", \"\")\n  local reverse = string.gsub(string, \"$\", \"\")\n  return palindrome\
    \ .. reverse\nend", "    local palindrome = string\n    local palindrome_length\
    \ = #string\n    local palindrome_start = #string\n    local palindrome_end =\
    \ #string\n    local palindrome_prefix_length = 0\n    local palindrome_suffix_length\
    \ = 0\n    local palindrome_prefix_start = #string\n    local palindrome_suffix_start\
    \ = #string\n    local palindrome_prefix_end = #string\n    local palindrome_suffix_end\
    \ = #string", "  -- Find longest postfix of string that is a palindrome.\n  local\
    \ longest_postfix = find_longest_postfix(string)\n  -- If no postfix found, return\
    \ empty string.\n  if longest_postfix == nil then\n    return \"\"\n  end\n  --\
    \ Append to the end of the string reverse of a string prefix that comes before\
    \ the palindromic suffix.\n  local palindrome = string.sub(string, 1, longest_postfix\
    \ + 1)\n  local reversed_prefix = string.sub(string, longest_postfix + 1)\n  return\
    \ reversed_prefix .. palindrome\nend", "    local palindrome = string\n    local\
    \ longest_postfix = string\n    local longest_postfix_length = #longest_postfix\n\
    \    for i = 1, longest_postfix_length do\n        local postfix = string.sub(longest_postfix,\
    \ i, i)\n        local reversed_postfix = string.reverse(postfix)\n        if\
    \ reversed_postfix ~= postfix then\n            longest_postfix = longest_postfix\
    \ .. reversed_postfix\n            longest_postfix_length = #longest_postfix\n\
    \        end\n    end\n    return longest_postfix .. string.reverse(longest_postfix)\n\
    end", "    local postfix = string.gsub(string, \"%.\", \"\")\n    local reverse\
    \ = string.gsub(postfix, \"%.\", \"\")\n    return string.reverse(reverse)\nend",
  "  -- Find the longest postfix that is a palindrome.\n  local longest = string.gsub(string,\
    \ \"([^\" .. string.char(string.byte(\"A\")) .. \"]+)$\")\n  -- Find the longest\
    \ prefix that comes before the palindromic suffix.\n  local prefix = string.gsub(string,\
    \ \"([^\" .. string.char(string.byte(\"A\")) .. \"]+)^\")\n  -- Reverse the prefix\
    \ and append it to the longest postfix.\n  return string.gsub(longest, \"([^\"\
    \ .. string.char(string.byte(\"A\")) .. \"]+)$\", \"%1\" .. string.char(string.byte(\"\
    A\")) .. \"%2\" .. string.char(string.byte(\"A\")) .. \"$1\")\nend", "  local\
    \ postfix = string.match(\"^(.-)$\", \"^\" .. string .. \"$\")\n  local reverse\
    \ = string.match(\"^(.-)$\", \"^\" .. string.gsub(postfix, \"(.-)\", \"%1\") ..\
    \ \"$\")\n  return string .. reverse\nend", "    local palindrome = string\n \
    \   local postfix = string\n    local reverse = string\n    local i = 1\n    while\
    \ i <= #string do\n        postfix = postfix .. string[i]\n        reverse = reverse\
    \ .. string[#string - i]\n        i = i + 1\n    end\n    local longest = #postfix\
    \ - 1\n    while #postfix > 0 do\n        if postfix ~= reverse then\n       \
    \     longest = longest - 1\n        end\n        postfix = postfix..string[#postfix\
    \ - 1]\n        reverse = reverse.string[#reverse - 1]\n    end\n    palindrome\
    \ = palindrome .. string[longest]\n    return palindrome\nend", "  local palindrome\
    \ = string\n  local longest_postfix = \"\"\n  local longest_postfix_length = 0\n\
    \  local longest_postfix_index = 0\n  local longest_postfix_length_index = 0\n\
    \  local longest_postfix_index2 = 0\n  local longest_postfix_length_index2 = 0\n\
    \  local longest_postfix_length2 = 0\n  local longest_postfix_length3 = 0\n  local\
    \ longest_postfix_length4 = 0\n  local longest_postfix_length5 = 0\n  local longest_postfix_length6\
    \ = 0\n  local longest_postfix_length7 = 0\n  local longest_postfix_length8 =\
    \ 0\n  local longest_postfix_length9 = 0\n  local longest_postfix_length10 = 0\n\
    \  local longest_postfix_length11 = 0\n  local longest_postfix_length12 = 0\n\
    \  local longest_postfix_length13 = 0\n  local longest_postfix_length14 = 0\n\
    \  local longest_postfix_length15 = 0\n  local longest_postfix_length16 = 0\n\
    \  local longest_postfix_length17 = 0\n  local longest_postfix_length18 = 0\n\
    \  local longest_postfix_length19 = 0\n  local longest_postfix_length20 = 0\n\
    \  local longest_postfix_length21 = 0\n  local longest_postfix_length22 = 0\n\
    \  local longest_postfix_length23 = 0\n  local longest_postfix_length24 = 0\n\
    \  local longest_postfix_length25 = 0\n  local longest_postfix_length26 = 0\n\
    \  local longest_postfix_length27 = 0\n  local longest_postfix_length28 = 0\n\
    \  local longest_postfix_length29 = 0\n  local longest_postfix_length30 = 0\n\
    \  local longest_postfix_length31 = 0\n  local longest_postfix_length32 = 0\n\
    \  local longest_postfix_length33 = 0\n  local longest_postfix_length34 = 0\n\
    \  local longest_postfix_length35 = 0\n  local longest_postfix_length36 = 0\n\
    \  local longest_postfix_length37 = 0\n  local longest_postfix_length38 = 0\n\
    \  local longest_postfix_length39 = 0\n  local longest_postfix_length40 = 0\n\
    \  local longest_postfix_length41 = 0\n  local longest_postfix_length42 = 0\n\
    \  local longest_postfix_length43 = 0\n  local longest_postfix_length44 = 0\n\
    \  local longest_postfix_length45 = 0\n  local longest_post", "  local palindrome\
    \ = string\n  local palindrome_length = #string\n  local palindrome_postfix =\
    \ string\n  local palindrome_postfix_length = #string\n  local palindrome_postfix_reverse\
    \ = string\n  local palindrome_postfix_reverse_length = #string\n  local palindrome_postfix_reverse_prefix\
    \ = string\n  local palindrome_postfix_reverse_prefix_length = #string\n  local\
    \ palindrome_postfix_reverse_prefix_reverse = string\n  local palindrome_postfix_reverse_prefix_reverse_length\
    \ = #string\n  local palindrome_postfix_reverse_prefix_reverse = string\n  local\
    \ palindrome_postfix_reverse_prefix_reverse_length = #string\n  local palindrome_postfix_reverse_prefix_reverse\
    \ = string\n  local palindrome_postfix_reverse_prefix_reverse_length = #string\n\
    \  local palindrome_postfix_reverse_prefix_reverse = string\n  local palindrome_postfix_reverse_prefix_reverse_length\
    \ = #string\n  local palindrome_postfix_reverse_prefix_reverse = string\n  local\
    \ palindrome_postfix_reverse_prefix_reverse_length = #string\n  local palindrome_postfix_reverse_prefix_reverse\
    \ = string\n  local palindrome_postfix_reverse_prefix_reverse_length = #string\n\
    \  local palindrome_postfix_reverse_prefix_reverse = string\n  local palindrome_postfix_reverse_prefix_reverse_length\
    \ = #string\n  local palindrome_postfix_reverse_prefix_reverse = string\n  local\
    \ palindrome_postfix_reverse_prefix_reverse_length = #string\n  local palindrome_postfix_reverse_prefix_reverse\
    \ = string\n  local palindrome_postfix_reverse_prefix_reverse_length = #string\n\
    \  local palindrome_postfix_reverse_prefix_reverse = string\n  local palindrome_postfix_reverse_prefix_reverse_length\
    \ = #string\n  local palindrome_postfix_reverse_prefix_reverse = string\n  local\
    \ palindrome_postfix_reverse_prefix_reverse_length = #string\n  local palindrome_postfix_reverse_prefix_reverse\
    \ = string\n  local palindrome_postfix_reverse_prefix_reverse_length = #string\n\
    \  local palindrome_postfix_reverse_prefix_reverse = string\n  local palindrome_postfix_reverse_prefix_reverse_length\
    \ = #string\n  local palindrome_postfix_reverse_prefix_reverse = string\n  local\
    \ palindrome_postfix_reverse_prefix_reverse_length = #string\n  local palindrome_postfix_reverse_prefix_reverse\
    \ = string", "    local palindrome = string\n    local postfix = string\n    local\
    \ reverse = string\n    local longest = 0\n    local longestLength = 0\n    for\
    \ i = 1, #string do\n        local length = string.len(string.sub(string, i, i))\n\
    \        if length > longestLength then\n            longest = i\n           \
    \ longestLength = length\n        end\n    end\n    local longestPostfix = string.sub(string,\
    \ longest, longest)\n    local longestPrefix\n    if longest > 1 then\n      \
    \  longestPrefix = string.sub(string, 1, longest)\n    end\n    local reverseOfLongestPrefix\
    \ = reverse(string.reverse(longestPrefix))\n    local reverseOfLongestPostfix\
    \ = reverse(string.reverse(longestPostfix))\n    if longestLength > longestPostfix\
    \ then\n        palindrome = string.sub(string, longest, longestLength)\n    \
    \    palindrome = string.sub(palindrome, 1, longestLength - longestPostfix)\n\
    \        palindrome = string.sub(palindrome, longestLength + longestPostfix, longestLength\
    \ + longestPostfix + longestPrefix)\n        palindrome = string.sub(palindrome,\
    \ longestLength + longestPostfix, longestLength + longestPostfix + longestPrefix)\n\
    \        palindrome = string.sub(palindrome, longestLength + longestPostfix, longestLength\
    \ + longestPostfix + longestPrefix)\n        palindrome = string.sub(palindrome,\
    \ longestLength + longestPostfix, longestLength + longestPostfix + longestPrefix)\n\
    \        palindrome = string.sub(palindrome, longestLength + longestPostfix, longestLength\
    \ + longestPostfix + longestPrefix)\n        palindrome = string.sub(palindrome,\
    \ longestLength + longestPostfix, longestLength + longestPostfix + longestPrefix)\n\
    \        palindrome = string.sub(palindrome, longestLength + longestPostfix, longestLength\
    \ + longestPostfix + longestPrefix)\n        palindrome = string.sub(palindrome,\
    \ longestLength + longestPostfix, longestLength + longestPostfix + longestPrefix)\n\
    \        palindrome = string.sub(palindrome, longestLength + longestPostfix, longestLength\
    \ + longestPostfix + longestPrefix)\n        palindrome = string.sub(palindrome,\
    \ longestLength + longestPostfix, longestLength + longestPostfix + longestPrefix)\n\
    \        palindrome = string.sub(palindrome, longestLength + longestPostfix, longestLength\
    \ + longestPostfix + longestPrefix)\n        palindrome = ", "    local palindrome\
    \ = string\n    local longest_postfix = \"\"\n    local longest_postfix_length\
    \ = 0\n    local longest_postfix_index = 0\n    local longest_postfix_length_index\
    \ = 0\n    local longest_postfix_index2 = 0\n    local longest_postfix_length_index2\
    \ = 0\n    local longest_postfix_length_index3 = 0\n    local longest_postfix_length_index4\
    \ = 0\n    local longest_postfix_length_index5 = 0\n    local longest_postfix_length_index6\
    \ = 0\n    local longest_postfix_length_index7 = 0\n    local longest_postfix_length_index8\
    \ = 0\n    local longest_postfix_length_index9 = 0\n    local longest_postfix_length_index10\
    \ = 0\n    local longest_postfix_length_index11 = 0\n    local longest_postfix_length_index12\
    \ = 0\n    local longest_postfix_length_index13 = 0\n    local longest_postfix_length_index14\
    \ = 0\n    local longest_postfix_length_index15 = 0\n    local longest_postfix_length_index16\
    \ = 0\n    local longest_postfix_length_index17 = 0\n    local longest_postfix_length_index18\
    \ = 0\n    local longest_postfix_length_index19 = 0\n    local longest_postfix_length_index20\
    \ = 0\n    local longest_postfix_length_index21 = 0\n    local longest_postfix_length_index22\
    \ = 0\n    local longest_postfix_length_index23 = 0\n    local longest_postfix_length_index24\
    \ = 0\n    local longest_postfix_length_index25 = 0\n    local longest_postfix_length_index26\
    \ = 0\n    local longest_postfix_length_index27 = 0\n    local longest_postfix_length_index28\
    \ = 0\n    local longest_postfix_length_index29 = 0\n    local longest_postfix_length_index30\
    \ = 0\n    local longest_postfix_length_index31 = 0\n    local longest_postfix_length_index32\
    \ = 0\n    local longest_postfix_length_index33 = 0\n    local longest_postfix_length_index34\
    \ = 0\n    local longest_postfix_length_index35 = 0\n    local longest_postfix_length_index36\
    \ = 0\n    local longest_postfix_length_index37 = 0\n    local longest_postfix_length_index38\
    \ = 0\n    local longest_postfix_length_index39 = 0\n    local longest_postfix_length_index40\
    \ = 0\n    local longest_postfix_length_index41 = 0\n    local longest_postfix_length_index42\
    \ = 0\n    local longest_post", "    local palindrome = string.gsub(string, \"\
    %.%.\", \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.\",\
    \ \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.gsub(palindrome, \"%.%.%.%.%.%.%.%.%.%.%.%.\"\
    , \"\")\n    local palindrome = string.g", "    local postfix = string.match(\"\
    ^(.-)$\", \"^\" .. string .. \"$\")\n    local reverse = string.match(\"^(.-)$\"\
    , \"^\" .. string.gsub(postfix, \"(.-)\", \"%1\") .. \"$\")\n    return string\
    \ .. reverse .. postfix\nend", "    local palindrome = string\n    local postfix\
    \ = string\n    local reverse = string\n    local length = 0\n    while true do\n\
    \        length = length + 1\n        postfix = postfix .. string\n        reverse\
    \ = reverse .. string\n        if string.len(postfix) == string.len(reverse) then\n\
    \            -- We found a palindrome\n            palindrome = string.sub(postfix,\
    \ 1, length) .. reverse .. string.sub(postfix, length)\n            break\n  \
    \      end\n    end\n    return palindrome\nend", "  local postfix = string\n\
    \  local palindrome = string\n  local suffix\n  while true do\n    suffix = string.sub(postfix,\
    \ 1, string.len(postfix) - 1)\n    if suffix == suffix then\n      palindrome\
    \ = palindrome .. suffix\n      postfix = string.sub(postfix, string.len(suffix)\
    \ + 1)\n    else\n      break\n    end\n  end\n  return palindrome\nend", "  local\
    \ palindrome = string\n  local longest_postfix = \"\"\n  local longest_postfix_length\
    \ = 0\n  local longest_postfix_index = 0\n  local longest_postfix_length_index\
    \ = 0\n  local longest_postfix_index2 = 0\n  local longest_postfix_length_index2\
    \ = 0\n  local longest_postfix_index3 = 0\n  local longest_postfix_length_index3\
    \ = 0\n  local longest_postfix_index4 = 0\n  local longest_postfix_length_index4\
    \ = 0\n  local longest_postfix_index5 = 0\n  local longest_postfix_length_index5\
    \ = 0\n  local longest_postfix_index6 = 0\n  local longest_postfix_length_index6\
    \ = 0\n  local longest_postfix_index7 = 0\n  local longest_postfix_length_index7\
    \ = 0\n  local longest_postfix_index8 = 0\n  local longest_postfix_length_index8\
    \ = 0\n  local longest_postfix_index9 = 0\n  local longest_postfix_length_index9\
    \ = 0\n  local longest_postfix_index10 = 0\n  local longest_postfix_length_index10\
    \ = 0\n  local longest_postfix_index11 = 0\n  local longest_postfix_length_index11\
    \ = 0\n  local longest_postfix_index12 = 0\n  local longest_postfix_length_index12\
    \ = 0\n  local longest_postfix_index13 = 0\n  local longest_postfix_length_index13\
    \ = 0\n  local longest_postfix_index14 = 0\n  local longest_postfix_length_index14\
    \ = 0\n  local longest_postfix_index15 = 0\n  local longest_postfix_length_index15\
    \ = 0\n  local longest_postfix_index16 = 0\n  local longest_postfix_length_index16\
    \ = 0\n  local longest_postfix_index17 = 0\n  local longest_postfix_length_index17\
    \ = 0\n  local longest_postfix_index18 = 0\n  local longest_postfix_length_index18\
    \ = 0\n  local longest_postfix_index19 = 0\n  local longest_postfix_length_index19\
    \ = 0\n  local longest_postfix_index20 = 0\n  local longest_postfix_length_index20\
    \ = 0\n  local longest_postfix_index21 = 0\n  local longest_postfix_length_index21\
    \ = 0\n  local longest_postfix_index22 = 0\n  local longest_postfix_length_index22\
    \ = 0\n  local longest_postfix_index23 = 0\n  local longest_postfix_length_index23\
    \ = 0\n  local longest_", "  local palindrome = string\n  local palindrome_length\
    \ = #string\n  local palindrome_prefix = string\n  local palindrome_suffix = string\n\
    \  local palindrome_postfix = string\n  local palindrome_prefix_length = #string\n\
    \  local palindrome_suffix_length = #string\n  local palindrome_prefix_postfix\
    \ = string\n  local palindrome_suffix_postfix = string\n  local palindrome_prefix_postfix_length\
    \ = #string\n  local palindrome_suffix_postfix_length = #string\n  local palindrome_prefix_postfix_postfix\
    \ = string\n  local palindrome_suffix_postfix_postfix = string\n  local palindrome_prefix_postfix_postfix_length\
    \ = #string\n  local palindrome_suffix_postfix_postfix_length = #string\n  local\
    \ palindrome_prefix_postfix_postfix_postfix = string\n  local palindrome_suffix_postfix_postfix_postfix\
    \ = string\n  local palindrome_prefix_postfix_postfix_postfix_length = #string\n\
    \  local palindrome_suffix_postfix_postfix_postfix_length = #string\n  local palindrome_prefix_postfix_postfix_postfix_postfix\
    \ = string\n  local palindrome_suffix_postfix_postfix_postfix_postfix = string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_length = #string\n\
    \  local palindrome_suffix_postfix_postfix_postfix_postfix_length = #string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix = string\n\
    \  local palindrome_suffix_postfix_postfix_postfix_postfix_postfix = string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_length = #string\n\
    \  local palindrome_suffix_postfix_postfix_postfix_postfix_postfix_length = #string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix = string\n\
    \  local palindrome_suffix_postfix_postfix_postfix_postfix_postfix_postfix = string\n\
    \  local palindrome_prefix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = #string\n  local palindrome_suffix_postfix_postfix_postfix_postfix_postfix_postfix_length\
    \ = #string\n  local palindrome_prefix_postfix_", "  -- Find longest postfix of\
    \ string that is a palindrome.\n  local longest_palindrome = string.gsub(string,\
    \ \"([^\" .. string.char(string.byte(\"a\")) .. \"]*)\")\n  -- Append reverse\
    \ of longest postfix of string that comes before the palindromic suffix.\n  local\
    \ palindrome = string.sub(longest_palindrome, 1, string.len(longest_palindrome)\
    \ - 1) .. string.reverse(longest_palindrome)\n  return palindrome\nend", "   \
    \ local postfix = string\n    local reverse = \"\"\n    local longest_postfix\
    \ = 1\n    local longest_postfix_length = 1\n    local longest_postfix_index =\
    \ 1\n    local longest_postfix_index2 = 0\n    local longest_postfix_index3 =\
    \ 0\n    local longest_postfix_index4 = 0\n    local longest_postfix_index5 =\
    \ 0\n    local longest_postfix_index6 = 0\n    local longest_postfix_index7 =\
    \ 0\n    local longest_postfix_index8 = 0\n    local longest_postfix_index9 =\
    \ 0\n    local longest_postfix_index10 = 0\n    local longest_postfix_index11\
    \ = 0\n    local longest_postfix_index12 = 0\n    local longest_postfix_index13\
    \ = 0\n    local longest_postfix_index14 = 0\n    local longest_postfix_index15\
    \ = 0\n    local longest_postfix_index16 = 0\n    local longest_postfix_index17\
    \ = 0\n    local longest_postfix_index18 = 0\n    local longest_postfix_index19\
    \ = 0\n    local longest_postfix_index20 = 0\n    local longest_postfix_index21\
    \ = 0\n    local longest_postfix_index22 = 0\n    local longest_postfix_index23\
    \ = 0\n    local longest_postfix_index24 = 0\n    local longest_postfix_index25\
    \ = 0\n    local longest_postfix_index26 = 0\n    local longest_postfix_index27\
    \ = 0\n    local longest_postfix_index28 = 0\n    local longest_postfix_index29\
    \ = 0\n    local longest_postfix_index30 = 0\n    local longest_postfix_index31\
    \ = 0\n    local longest_postfix_index32 = 0\n    local longest_postfix_index33\
    \ = 0\n    local longest_postfix_index34 = 0\n    local longest_postfix_index35\
    \ = 0\n    local longest_postfix_index36 = 0\n    local longest_postfix_index37\
    \ = 0\n    local longest_postfix_index38 = 0\n    local longest_postfix_index39\
    \ = 0\n    local longest_postfix_index40 = 0\n    local longest_postfix_index41\
    \ = 0\n    local longest_postfix_index42 = 0\n    local longest_postfix_index43\
    \ = 0\n    local longest_postfix_index44 = 0\n    local longest_postfix_index45\
    \ = 0\n    local longest_postfix_index46 = 0\n    local longest_postfix_index47\
    \ = 0\n    local longest_postfix_index48 = 0\n    local lon"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

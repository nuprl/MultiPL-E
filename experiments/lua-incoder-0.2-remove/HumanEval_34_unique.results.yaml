language: lua
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  table.sort(u)\n\
    \  return table.unpack(u)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5sna46db.lua:6:\
    \ attempt to call field 'unpack' (a nil value)\nstack traceback:\n\t/tmp/tmp5sna46db.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp5sna46db.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  table.sort(u)\n\
    \  return table.unpack(u)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5sna46db.lua:6:\
    \ attempt to call field 'unpack' (a nil value)\nstack traceback:\n\t/tmp/tmp5sna46db.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp5sna46db.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  local i = 1\n \
    \ local v\n  while i <= #u do\n    v = i\n    for i = i + 1, #u do\n      if u[v]\
    \ then\n        table.insert(l, v)\n        break\n      end\n    end\n  end\n\
    \  return l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr3xiv80y.lua:22:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 5, 2, 3, 3, 9, 0, 123}\nstack\
    \ traceback:\n\t/tmp/tmpr3xiv80y.lua:22: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return setmetatable(l,\
    \ { __index = u })\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7z4cwsxd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 5, 2, 3, 3, 9, 0, 123}\nstack\
    \ traceback:\n\t/tmp/tmp7z4cwsxd.lua:11: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  local i = 1\n \
    \ local v\n  while i <= #u do\n    v = i\n    for i = i + 1, #u do\n      if u[v]\
    \ then\n        local k = v\n        v = u[k]\n        u[k] = nil\n        break\
    \ -- exit inner loop\n      end\n    end\n    i = i + 1\n  end\n  return v\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq3q8xdqy.lua:25:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmpq3q8xdqy.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  table.sort(u)\n\
    \  return table.unpack(u)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5sna46db.lua:6:\
    \ attempt to call field 'unpack' (a nil value)\nstack traceback:\n\t/tmp/tmp5sna46db.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp5sna46db.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then continue end\n    seen[v] = true\n    out[#out + 1] = v\n  end\n  return\
    \ out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0,\
    \ 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp5exyl8yv.lua:6: ''='' expected near ''end''

    '
  stdout: ''
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  table.sort(u)\n\
    \  return table.unpack(u)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5sna46db.lua:6:\
    \ attempt to call field 'unpack' (a nil value)\nstack traceback:\n\t/tmp/tmp5sna46db.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp5sna46db.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return setmetatable(l,\
    \ { __index = u })\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7z4cwsxd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 5, 2, 3, 3, 9, 0, 123}\nstack\
    \ traceback:\n\t/tmp/tmp7z4cwsxd.lua:11: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return setmetatable(l,\
    \ { __index = u })\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7z4cwsxd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 5, 2, 3, 3, 9, 0, 123}\nstack\
    \ traceback:\n\t/tmp/tmp7z4cwsxd.lua:11: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  local v\n  for\
    \ v in pairs(u) do return v end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6pwe44ns.lua:12:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: 0\nstack traceback:\n\t/tmp/tmp6pwe44ns.lua:12:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  table.sort(u)\n\
    \  return table.unpack(u)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5sna46db.lua:6:\
    \ attempt to call field 'unpack' (a nil value)\nstack traceback:\n\t/tmp/tmp5sna46db.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp5sna46db.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return table.sort(u)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = unique\n\
    \    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}), {0, 2, 3, 5, 9,\
    \ 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4p2khnwd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: nil\nstack traceback:\n\t/tmp/tmp4p2khnwd.lua:11:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ then\n      table.insert(out, v)\n    else\n      seen[v] = true\n    end\n\
    \  end\n  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk80v1wl.lua:18:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 3}\nstack traceback:\n\t/tmp/tmpzk80v1wl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local u = {}\n  for _, v in ipairs(l) do u[v] = true end\n  return setmetatable(l,\
    \ { __index = u })\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123}), {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7z4cwsxd.lua:11:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 5, 2, 3, 3, 9, 0, 123}\nstack\
    \ traceback:\n\t/tmp/tmp7z4cwsxd.lua:11: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506
- exit_code: 1
  program: "-- Return sorted unique elements in a list\nlocal function unique(l)\n\
    \  local seen = {}\n  local out = {}\n  for _, v in ipairs(l) do\n    if seen[v]\
    \ == nil then\n      seen[v] = true\n      out[#out + 1] = v\n    end\n  end\n\
    \  return out\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = unique\n    lu.assertEquals(candidate({5, 3, 5, 2, 3, 3, 9, 0, 123}),\
    \ {0, 2, 3, 5, 9, 123})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiwbth7df.lua:17:\
    \ expected: {0, 2, 3, 5, 9, 123}\nactual: {5, 3, 2, 9, 0, 123}\nstack traceback:\n\
    \t/tmp/tmpiwbth7df.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750506

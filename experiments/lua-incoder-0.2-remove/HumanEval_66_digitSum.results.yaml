language: lua
name: HumanEval_66_digitSum
results:
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"12\"))\nprint(digitSum(\"123\"))\n\
    print(digitSum(\"1234\"))\nprint(digitSum(\"12345\"))\nprint(digitSum(\"123456\"\
    ))\nprint(digitSum(\"1234567\"))\nprint(digitSum(\"12345678\"))\nprint(digitSum(\"\
    123456789\"))\nprint(digitSum(\"1234567890\"))\nprint(digitSum(\"12345678901\"\
    ))\nprint(digitSum(\"123456789012\"))\nprint(digitSum(\"1234567890123\"))\nprint(digitSum(\"\
    12345678901234\"))\nprint(digitSum(\"123456789012345\"))\nprint(digitSum(\"1234567890123456\"\
    ))\nprint(digitSum(\"12345678901234567\"))\nprint(digitSum(\"123456789012345678\"\
    ))\nprint(digitSum(\"1234567890123456789\"))\nprint(digitSum(\"12345678901234567890\"\
    ))\nprint(digitSum(\"123456789012345678901\"))\nprint(digitSum(\"1234567890123456789012\"\
    ))\nprint(digitSum(\"12345678901234567890123\"))\nprint(digitSum(\"123456789012345678901234\"\
    ))\nprint(digitSum(\"1234567890123456789012345\"))\nprint(digitSum(\"12345678901234567890123456\"\
    ))\nprint(digitSum(\"123456789012345678901234567\"))\nprint(digitSum(\"1234567890123456789012345678\"\
    ))\nprint(digitSum(\"12345678901234567890123456789\"))\nprint(digitSum(\"123456789012345678901234567890\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901\"))\nprint(digitSum(\"12345678901234567890123456789012\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234\"))\nprint(digitSum(\"12345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567\"))\nprint(digitSum(\"12345678901234567890123456789012345678\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890\"))\nprint(digitSum(\"12345678901234567890123456789012345678901\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789012\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123\"))\nprint(digitSum(\"12345678901234567890123456789012345678901234\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789012345\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123456\"))\nprint(digitSum(\"12345678901234567890123456789012345678901234567\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789012345678\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123456789\"))\nprint(digitSum(\"1234567890123456789\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpty_lu3q3.lua:60: unfinished string near ''"1234567890123456789''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"12\"))\nprint(digitSum(\"123\"))\n\
    print(digitSum(\"1234\"))\nprint(digitSum(\"12345\"))\nprint(digitSum(\"123456\"\
    ))\nprint(digitSum(\"1234567\"))\nprint(digitSum(\"123456789\"))\nprint(digitSum(\"\
    1234567890\"))\nprint(digitSum(\"12345678901\"))\nprint(digitSum(\"123456789012\"\
    ))\nprint(digitSum(\"1234567890123\"))\nprint(digitSum(\"12345678901234\"))\n\
    print(digitSum(\"123456789012345\"))\nprint(digitSum(\"1234567890123456\"))\n\
    print(digitSum(\"12345678901234567\"))\nprint(digitSum(\"1234567890123456789\"\
    ))\nprint(digitSum(\"12345678901234567890\"))\nprint(digitSum(\"123456789012345678901\"\
    ))\nprint(digitSum(\"1234567890123456789012\"))\nprint(digitSum(\"12345678901234567890123\"\
    ))\nprint(digitSum(\"123456789012345678901234\"))\nprint(digitSum(\"1234567890123456789012345\"\
    ))\nprint(digitSum(\"12345678901234567890123456\"))\nprint(digitSum(\"123456789012345678901234567\"\
    ))\nprint(digitSum(\"12345678901234567890123456789\"))\nprint(digitSum(\"123456789012345678901234567890\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901\"))\nprint(digitSum(\"12345678901234567890123456789012\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234\"))\nprint(digitSum(\"12345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567\"))\nprint(digitSum(\"123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901\"))\nprint(digitSum(\"123456789012345678901234567890123456789012\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234\"))\nprint(digitSum(\"123456789012345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234567\"))\nprint(digitSum(\"1234567890123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890\"))\n\
    print(digitSum(\"123456789012345678901234567890123456789012345678901\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123456789012\"))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890123\"\
    ))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpx_tlby59.lua:59: unfinished string near ''"12345678901234567890123456789012345678901234567890''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"hello\"))\nprint(digitSum(\"123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc456\"\
    ))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpeu94y4l1.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmpeu94y4l1.lua:8: in function 'digitSum'\n\t/tmp/tmpeu94y4l1.lua:12:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"12\"))\nprint(digitSum(\"123\"))\n\
    print(digitSum(\"1234\"))\nprint(digitSum(\"12345\"))\nprint(digitSum(\"123456\"\
    ))\nprint(digitSum(\"1234567\"))\nprint(digitSum(\"123456789\"))\nprint(digitSum(\"\
    1234567890\"))\nprint(digitSum(\"12345678901\"))\nprint(digitSum(\"123456789012\"\
    ))\nprint(digitSum(\"1234567890123\"))\nprint(digitSum(\"12345678901234\"))\n\
    print(digitSum(\"123456789012345\"))\nprint(digitSum(\"1234567890123456\"))\n\
    print(digitSum(\"12345678901234567\"))\nprint(digitSum(\"1234567890123456789\"\
    ))\nprint(digitSum(\"12345678901234567890\"))\nprint(digitSum(\"123456789012345678901\"\
    ))\nprint(digitSum(\"1234567890123456789012\"))\nprint(digitSum(\"12345678901234567890123\"\
    ))\nprint(digitSum(\"123456789012345678901234\"))\nprint(digitSum(\"1234567890123456789012345\"\
    ))\nprint(digitSum(\"12345678901234567890123456\"))\nprint(digitSum(\"123456789012345678901234567\"\
    ))\nprint(digitSum(\"12345678901234567890123456789\"))\nprint(digitSum(\"123456789012345678901234567890\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901\"))\nprint(digitSum(\"12345678901234567890123456789012\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234\"))\nprint(digitSum(\"12345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567\"))\nprint(digitSum(\"123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901\"))\nprint(digitSum(\"123456789012345678901234567890123456789012\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234\"))\nprint(digitSum(\"123456789012345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234567\"))\nprint(digitSum(\"1234567890123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890\"))\n\
    print(digitSum(\"123456789012345678901234567890123456789012345678901\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123456789012\"))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890123\"\
    ))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpx_tlby59.lua:59: unfinished string near ''"12345678901234567890123456789012345678901234567890''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"123abc123\"\
    ))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpp4oq1glj.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmpp4oq1glj.lua:8: in function 'digitSum'\n\t/tmp/tmpp4oq1glj.lua:12:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"123abc\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpr48ss6os.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmpr48ss6os.lua:8: in function 'digitSum'\n\t/tmp/tmpr48ss6os.lua:13:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: '6

    '
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"hello\"))\nprint(digitSum(\"123\"\
    ))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"\
    123abc456\"))\nprint(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\n\
    print(digitSum(\"123abc456\"))\nprint(digitSum(\"123abc456\"))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpqjoeqhyp.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmpqjoeqhyp.lua:8: in function 'digitSum'\n\t/tmp/tmpqjoeqhyp.lua:12:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"12\"))\n\
    print(digitSum(\"1\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"\
    a1b2c3\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"a1b2c\"))\nprint(digitSum(\"\
    a1b2c\"))\nprint(digitSum\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptzv96pua.lua:67: '')'' expected (to close ''('' at line 66)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"12\"))\nprint(digitSum(\"123\"))\n\
    print(digitSum(\"1234\"))\nprint(digitSum(\"12345\"))\nprint(digitSum(\"123456\"\
    ))\nprint(digitSum(\"1234567\"))\nprint(digitSum(\"123456789\"))\nprint(digitSum(\"\
    1234567890\"))\nprint(digitSum(\"12345678901\"))\nprint(digitSum(\"123456789012\"\
    ))\nprint(digitSum(\"1234567890123\"))\nprint(digitSum(\"12345678901234\"))\n\
    print(digitSum(\"123456789012345\"))\nprint(digitSum(\"1234567890123456\"))\n\
    print(digitSum(\"12345678901234567\"))\nprint(digitSum(\"1234567890123456789\"\
    ))\nprint(digitSum(\"12345678901234567890\"))\nprint(digitSum(\"123456789012345678901\"\
    ))\nprint(digitSum(\"1234567890123456789012\"))\nprint(digitSum(\"12345678901234567890123\"\
    ))\nprint(digitSum(\"123456789012345678901234\"))\nprint(digitSum(\"1234567890123456789012345\"\
    ))\nprint(digitSum(\"12345678901234567890123456\"))\nprint(digitSum(\"123456789012345678901234567\"\
    ))\nprint(digitSum(\"12345678901234567890123456789\"))\nprint(digitSum(\"123456789012345678901234567890\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901\"))\nprint(digitSum(\"12345678901234567890123456789012\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234\"))\nprint(digitSum(\"12345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567\"))\nprint(digitSum(\"123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901\"))\nprint(digitSum(\"123456789012345678901234567890123456789012\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234\"))\nprint(digitSum(\"123456789012345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234567\"))\nprint(digitSum(\"1234567890123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890\"))\n\
    print(digitSum(\"123456789012345678901234567890123456789012345678901\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123456789012\"))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890123\"\
    ))\nprint(digitSum(\"12345678901234567890123456789012345678901234567890\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpx_tlby59.lua:59: unfinished string near ''"12345678901234567890123456789012345678901234567890''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"12\"))\n\
    print(digitSum(\"1\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"\
    abc123\"))\nprint(digitSum(\"abc\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3bw3ei7d.lua:72: unfinished string near ''"abc''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\n\
    print(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"a\"))\nprint(digitSum(\"\
    \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpun005da8.lua:80: unfinished string near ''"''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nprint(digitSum(\"\
    12\"))\nprint(digitSum(\"123\"))\nprint(digitSum(\"1234\"))\nprint(digitSum(\"\
    12345\"))\nprint(digitSum(\"123456\"))\nprint(digitSum(\"1234567\"))\nprint(digitSum(\"\
    12345678\"))\nprint(digitSum(\"123456789\"))\nprint(digitSum(\"1234567890\"))\n\
    print(digitSum(\"12345678901\"))\nprint(digitSum(\"123456789012\"))\nprint(digitSum(\"\
    1234567890123\"))\nprint(digitSum(\"12345678901234\"))\nprint(digitSum(\"123456789012345\"\
    ))\nprint(digitSum(\"1234567890123456\"))\nprint(digitSum(\"12345678901234567\"\
    ))\nprint(digitSum(\"123456789012345678\"))\nprint(digitSum(\"1234567890123456789\"\
    ))\nprint(digitSum(\"12345678901234567890\"))\nprint(digitSum(\"123456789012345678901\"\
    ))\nprint(digitSum(\"1234567890123456789012\"))\nprint(digitSum(\"12345678901234567890123\"\
    ))\nprint(digitSum(\"123456789012345678901234\"))\nprint(digitSum(\"1234567890123456789012345\"\
    ))\nprint(digitSum(\"12345678901234567890123456\"))\nprint(digitSum(\"123456789012345678901234567\"\
    ))\nprint(digitSum(\"1234567890123456789012345678\"))\nprint(digitSum(\"12345678901234567890123456789\"\
    ))\nprint(digitSum(\"123456789012345678901234567890\"))\nprint(digitSum(\"1234567890123456789012345678901\"\
    ))\nprint(digitSum(\"12345678901234567890123456789012\"))\nprint(digitSum(\"123456789012345678901234567890123\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345\"))\nprint(digitSum(\"123456789012345678901234567890123456\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678\"))\nprint(digitSum(\"123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901\"))\nprint(digitSum(\"123456789012345678901234567890123456789012\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234\"))\nprint(digitSum(\"123456789012345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    12345678901234567890123456789012345678901234567\"))\nprint(digitSum(\"123456789012345678901234567890123456789012345678\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901234567890123456789\"))\nprint(digitSum(\"\
    1234567890123456789\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpt9nnk8r5.lua:60: unfinished string near ''"1234567890123456789''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"hello\"))\nprint(digitSum(\"hello1\"\
    ))\nprint(digitSum(\"hello12\"))\nprint(digitSum(\"hello123\"))\nprint(digitSum(\"\
    hello1234\"))\nprint(digitSum(\"hello12345\"))\nprint(digitSum(\"hello123456\"\
    ))\nprint(digitSum(\"hello1234567\"))\nprint(digitSum(\"hello12345678\"))\nprint(digitSum(\"\
    hello123456789\"))\nprint(digitSum(\"hello1234567890\"))\nprint(digitSum(\"hello12345678901\"\
    ))\nprint(digitSum(\"hello123456789012\"))\nprint(digitSum(\"hello1234567890123\"\
    ))\nprint(digitSum(\"hello12345678901234\"))\nprint(digitSum(\"hello123456789012345\"\
    ))\nprint(digitSum(\"hello1234567890123456\"))\nprint(digitSum(\"hello12345678901234567\"\
    ))\nprint(digitSum(\"hello123456789012345678\"))\nprint(digitSum(\"hello1234567890123456789\"\
    ))\nprint(digitSum(\"hello12345678901234567890\"))\nprint(digitSum(\"hello123456789012345678901\"\
    ))\nprint(digitSum(\"hello1234567890123456789012\"))\nprint(digitSum(\"hello12345678901234567890123\"\
    ))\nprint(digitSum(\"hello123456789012345678901234\"))\nprint(digitSum(\"hello1234567890123456789012345\"\
    ))\nprint(digitSum(\"hello12345678901234567890123456\"))\nprint(digitSum(\"hello123456789012345678901234567\"\
    ))\nprint(digitSum(\"hello1234567890123456789012345678\"))\nprint(digitSum(\"\
    hello12345678901234567890123456789\"))\nprint(digitSum(\"hello123456789012345678901234567890\"\
    ))\nprint(digitSum(\"hello1234567890123456789012345678901\"))\nprint(digitSum(\"\
    hello12345678901234567890123456789012\"))\nprint(digitSum(\"hello123456789012345678901234567890123\"\
    ))\nprint(digitSum(\"hello1234567890123456789012345678901234\"))\nprint(digitSum(\"\
    hello12345678901234567890123456789012345\"))\nprint(digitSum(\"hello123456789012345678901234567890123456\"\
    ))\nprint(digitSum(\"hello1234567890123456789012345678901234567\"))\nprint(digitSum(\"\
    hello12345678901234567890123456789012345678\"))\nprint(digitSum(\"hello123456789012345678901234567890123456789\"\
    ))\nprint(digitSum(\"hello1234567890123456789012345678901234567890\"))\nprint(digitSum(\"\
    hello12345678901234567890123456789012345678901\"))\nprint(digitSum(\"hello123456789012345678901234567890123456789012\"\
    ))\nprint(digitSum(\"hello1234567890123456789012345678901234567890123\"))\nprint(digitSum(\"\
    hello12345678901234567890123456789012345678901234\"))\nprint(digitSum(\"hello123456789012345678901234567890123456789\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0o3y4vzi.lua:57: unfinished string near ''"hello123456789012345678901234567890123456789''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + string.sub(s,i,i)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdfdnakln.lua:8:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpdfdnakln.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpdfdnakln.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"abc123\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp91h9o4pa.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmp91h9o4pa.lua:8: in function 'digitSum'\n\t/tmp/tmp91h9o4pa.lua:13:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: '6

    '
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + string.sub(s,i,i)\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdfdnakln.lua:8:\
    \ attempt to perform arithmetic on a string value\nstack traceback:\n\t/tmp/tmpdfdnakln.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpdfdnakln.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"abc123\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"\
    abc123def\"))\nprint(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\n\
    print(digitSum(\"abc123def\"))\nprint(digitSum(\"abc123def\"))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp6qa2faf_.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmp6qa2faf_.lua:8: in function 'digitSum'\n\t/tmp/tmp6qa2faf_.lua:13:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: '6

    '
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"\
    ))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digit\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpquvk57zc.lua:73: '')'' expected (to close ''('' at line 72)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"123a\"))\n\
    print(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"\
    ))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp85igsxqz.lua:73: '')'' expected (to close ''('' at line 72)
    near ''=''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"12\"))\n\
    print(digitSum(\"123a\"))\nprint(digitSum(\"123A\"))\nprint(digitSum(\"123Aa\"\
    ))\nprint(digitSum(\"123AaA\"))\nprint(digitSum(\"123AaAa\"))\nprint(digitSum(\"\
    123AaAaA\"))\nprint(digitSum(\"123AaAaAa\"))\nprint(digitSum(\"123AaAaAaA\"))\n\
    print(digitSum(\"123AaAaAaAa\"))\nprint(digitSum(\"123AaAaAaAaA\"))\nprint(digitSum(\"\
    123AaAaAaAaAa\"))\nprint(digitSum(\"123AaAaAaAaAaA\"))\nprint(digitSum(\"123AaAaAaAaAaAa\"\
    ))\nprint(digitSum(\"123AaAaAaAaAaAaA\"))\nprint(digitSum(\"123AaAaAaAaAaAaA\"\
    ))\nprint(digitSum(\"123AaAaAaAaAaAaA\"))\nprint(digitSum(\"123AaAaAaAaAaAaA\"\
    ))\nprint(digitSum(\"123AaAaAaAaAaAaAa\"))\nprint(digitSum(\"123AaAaAaAaAaAaAa\"\
    ))\nprint(digitSum(\"123AaAaAaAaAaAaAa\"))\nprint(digitSum(\"123AaAaAaAaAaAaAa\"\
    ))\nprint(digitSum(\"123AaAaAaAaAaAaAa\"))\nprint(digitSum(\"123AaAaAaAaAaAaAa\"\
    ))\nprint(digitSum(\"123AaAaAaAaAaAaAaA\"))\nprint(digitSum(\"123AaAaAaAaAaAaAaA\"\
    ))\nprint(digitSum(\"123AaAaAaAaAaAaAaA\"))\nprint(digitSum(\"123AaAaAaAaAaAaAa\"\
    ))\nprint(digitSum\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxjr9ia9n.lua:42: '')'' expected (to close ''('' at line 41)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"123\"\
    ))\nprint(digitSum(\"1\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0123\"))\n\
    print(digitSum(\"0123abc\"))\nprint(digitSum(\"0123abc123\"))\nprint(digitSum(\"\
    0123abc123def\"))\nprint(digitSum(\"0123abc123def45\"))\nprint(digitSum(\"0123abc123def4567\"\
    ))\nprint(digitSum(\"0123abc123def45670\"))\nprint(digitSum(\"0123abc123def45670123\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc\"))\nprint(digitSum(\"0123abc123def45670123abc123\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc123def\"))\nprint(digitSum(\"0123abc123def45670123abc123def45\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc123def4567\"))\nprint(digitSum(\"\
    0123abc123def45670123abc123def45670\"))\nprint(digitSum(\"0123abc123def45670123abc123def45670123\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc123def45670123abc\"))\nprint(digitSum(\"\
    0123abc123def45670123abc123def45670123abc123\"))\nprint(digitSum(\"0123abc123def45670123abc123def45670123abc123def\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc123def45670123abc123def45\"))\nprint(digitSum(\"\
    0123abc123def45670123abc123def45670123abc123def4567\"))\nprint(digitSum(\"0123abc123def45670123abc123def45670123abc123def45670\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc123def45670123abc123def45670123\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc123def45670123abc123def45670123abc\"\
    ))\nprint(digitSum(\"0123abc123def45670123abc\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpvjipckg6.lua:39: unfinished string near ''"0123abc123def45670123abc''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"12\"))\nprint(digitSum(\"123\"))\n\
    print(digitSum(\"1234\"))\nprint(digitSum(\"12345\"))\nprint(digitSum(\"123456\"\
    ))\nprint(digitSum(\"1234567\"))\nprint(digitSum(\"12345678\"))\nprint(digitSum(\"\
    123456789\"))\nprint(digitSum(\"1234567890\"))\nprint(digitSum(\"12345678901\"\
    ))\nprint(digitSum(\"123456789012\"))\nprint(digitSum(\"1234567890123\"))\nprint(digitSum(\"\
    12345678901234\"))\nprint(digitSum(\"123456789012345\"))\nprint(digitSum(\"1234567890123456\"\
    ))\nprint(digitSum(\"12345678901234567\"))\nprint(digitSum(\"123456789012345678\"\
    ))\nprint(digitSum(\"1234567890123456789\"))\nprint(digitSum(\"12345678901234567890\"\
    ))\nprint(digitSum(\"123456789012345678901\"))\nprint(digitSum(\"1234567890123456789012\"\
    ))\nprint(digitSum(\"12345678901234567890123\"))\nprint(digitSum(\"123456789012345678901234\"\
    ))\nprint(digitSum(\"1234567890123456789012345\"))\nprint(digitSum(\"12345678901234567890123456\"\
    ))\nprint(digitSum(\"123456789012345678901234567\"))\nprint(digitSum(\"1234567890123456789012345678\"\
    ))\nprint(digitSum(\"12345678901234567890123456789\"))\nprint(digitSum(\"123456789012345678901234567890\"\
    ))\nprint(digitSum(\"1234567890123456789012345678901\"))\nprint(digitSum(\"12345678901234567890123456789012\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234\"))\nprint(digitSum(\"12345678901234567890123456789012345\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567\"))\nprint(digitSum(\"12345678901234567890123456789012345678\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890\"))\nprint(digitSum(\"12345678901234567890123456789012345678901\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789012\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123\"))\nprint(digitSum(\"12345678901234567890123456789012345678901234\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789012345\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123456\"))\nprint(digitSum(\"12345678901234567890123456789012345678901234567\"\
    ))\nprint(digitSum(\"123456789012345678901234567890123456789012345678\"))\nprint(digitSum(\"\
    1234567890123456789012345678901234567890123456789\"))\nprint(digitSum(\"1234567890123456789\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpty_lu3q3.lua:60: unfinished string near ''"1234567890123456789''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"123\"))\nprint(digitSum(\"1\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0123\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"\
    0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\nprint(digitSum(\"0\"))\n\
    print(digit\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnju4u1cd.lua:81: '')'' expected (to close ''('' at line 80)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"\
    ))\nprint(digitSum(\"abc123\"))\nprint(digitSum(\"abc\"))\n\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpeqc3c0kk.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmpeqc3c0kk.lua:8: in function 'digitSum'\n\t/tmp/tmpeqc3c0kk.lua:12:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"123abc\"))\nprint(digitSum(\"123abc456\"))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpwvu4onwh.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmpwvu4onwh.lua:8: in function 'digitSum'\n\t/tmp/tmpwvu4onwh.lua:13:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: '6

    '
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + string.sub(s,i,i)\n    end\n    return sum\nend\nprint(digitSum(\"123\"\
    ))\nprint(digitSum(\"abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"\
    ))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"123abc\"))\nprint(digitSum(\"\
    123\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpwjz7086c.lua:72: unfinished string near ''"123''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"123abc\"))\nprint(digitSum(\"123abc456\"))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpwvu4onwh.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmpwvu4onwh.lua:8: in function 'digitSum'\n\t/tmp/tmpwvu4onwh.lua:13:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: '6

    '
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzvtkk30s.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpzvtkk30s.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpzvtkk30s.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.010 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"123a\"))\n\
    print(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"))\nprint(digitSum(\"123a\"\
    ))\nprint(digitSum(\"123a\"))\nprint(\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp994zd07i.lua:73: '')'' expected (to close ''('' at line 72)
    near ''=''

    '
  stdout: ''
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n  local sum = 0\n  for i = 1, #s do\n    sum = sum + tonumber(string.sub(s,i,i))\n\
    \  end\n  return sum\nend\nprint(digitSum(\"123\"))\nprint(digitSum(\"abc\"))\n\
    print(digitSum(\"abc123\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp91h9o4pa.lua:8: attempt to perform arithmetic on a nil value\n\
    stack traceback:\n\t/tmp/tmp91h9o4pa.lua:8: in function 'digitSum'\n\t/tmp/tmp91h9o4pa.lua:13:\
    \ in main chunk\n\t[C]: ?\n"
  stdout: '6

    '
  timestamp: 1659750392
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\nlocal\
    \ function digitSum(s)\n    local sum = 0\n    for i = 1, #s do\n        sum =\
    \ sum + tonumber(string.sub(s,i,i))\n    end\n    return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2erli71a.lua:8:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2erli71a.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp2erli71a.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750392

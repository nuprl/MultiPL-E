name: HumanEval_55_fib
language: lua
prompt: "-- Return n-th Fibonacci number.\nlocal function fib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fib\n\
  \    lu.assertEquals(candidate(10), 55)\n    lu.assertEquals(candidate(1), 1)\n\
  \    lu.assertEquals(candidate(8), 21)\n    lu.assertEquals(candidate(11), 89)\n\
  \    lu.assertEquals(candidate(12), 144)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if n <= 1 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n\
    \    return 0\n  elseif n <= 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n  \
    \  return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return n\n  else\n   \
    \ return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n\
    \  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n\
    \  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n    return\
    \ 0\n  end\n  if n == 1 or n == 2 then\n    return 1\n  end\n  return fib(n -\
    \ 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n  \
    \  return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    error(\"\
    fib: negative argument not allowed\")\n  end\n  if n == 0 or n == 1 then\n   \
    \ return n\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n <\
    \ 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  elseif\
    \ n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return\
    \ fib(n-1) + fib(n-2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) +\
    \ fib(n - 2)\n  end\nend", "  if n < 0 then\n    error('fib expects non-negative\
    \ integer')\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    error(\"fib expects non-negative\
    \ integer\")\n  end\n  if n == 0 or n == 1 then\n    return n\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n < 0 then\n    error(\"fib: negative argument not allowed\")\n  end\n\
    \  if n == 0 or n == 1 then\n    return n\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n < 0 then\n    error(\"fib expects non-negative integer\"\
    )\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1)\
    \ + fib(n - 2)\nend", "  if n < 0 then\n    error(\"fib: negative argument\",\
    \ 2)\n  end\n  if n < 2 then\n    return n\n  end\n  return fib(n-1) + fib(n-2)\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "  if n <= 1 then\n    return n\n  end\n  return fib(n - 1)\
    \ + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or\
    \ n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", " \
    \ if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return\
    \ 1\n  end\n  return fib(n-1) + fib(n-2)\nend", "  if n <= 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n\
    \ == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if\
    \ n < 0 then\n    error(\"fib: n must be >= 0\")\n  end\n  if n == 0 or n == 1\
    \ then\n    return n\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <\
    \ 0 then\n    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n\
    \ == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if\
    \ n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n < 0 then\n    return nil\n  elseif n == 0 then\n    return 0\n \
    \ elseif n == 1 then\n    return 1\n  end\n  local fib1, fib2 = 0, 1\n  for i\
    \ = 2, n do\n    local tmp = fib1\n    fib1 = fib2\n    fib2 = tmp + fib1\n  end\n\
    \  return fib2\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or\
    \ n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", " \
    \ if n < 0 then\n    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n\
    \  if n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n < 0 then\n    error(\"fib expects non-negative integer\")\n  end\n  if n\
    \ < 2 then\n    return n\n  end\n  return fib(n-1) + fib(n-2)\nend", "  if n <=\
    \ 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "  if n <= 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n  \
    \  return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n\
    \  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n\
    \  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return\
    \ n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n  \
    \  return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n\
    \ <= 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    error('fib expects non-negative\
    \ integer')\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  elseif n < 2 then\n    return 1\n  else\n    return fib(n-1)\
    \ + fib(n-2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n ==\
    \ 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return\
    \ 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return\
    \ n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n <= 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n  \
    \  return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    error('fib expects non-negative\
    \ input')\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n  \
    \  return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n <= 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", " \
    \ if n < 0 then\n    return nil\n  elseif n == 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n  \
    \  return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n ==\
    \ 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n\
    \ < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n\
    \  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n\
    \  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) +\
    \ fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n\
    \ == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if\
    \ n <= 1 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend",
  "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n <= 0 then\n    return 0\n  end\n  if n == 1 or n == 2 then\n   \
    \ return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    error(\"fib: n must be\
    \ >= 0\")\n  end\n  if n == 0 or n == 1 then\n    return n\n  end\n  return fib(n\
    \ - 1) + fib(n - 2)\nend", "  if n < 0 then\n    error(\"fib expects non-negative\
    \ integer\")\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n <\
    \ 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n < 0 then\n    error(\"fib: negative argument not allowed\"\
    )\n  end\n  if n == 0 or n == 1 then\n    return n\n  end\n  return fib(n - 1)\
    \ + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n\
    \    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return fib(n -\
    \ 1) + fib(n - 2)\nend", "  if n < 0 then\n    error(\"fib: negative argument\
    \ not allowed\")\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n < 0 then\n    return nil\n  elseif n == 0 then\n    return 0\n \
    \ elseif n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n\
    \  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n    return\
    \ 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n    return\
    \ 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  elseif n ==\
    \ 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return\
    \ nil\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n\
    \  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n \
    \   return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n  \
    \  return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n\
    \ < 0 then\n    return nil\n  elseif n == 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  end", "  if n <= 1 then\n    return n\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    error('fib expects\
    \ non-negative input')\n  end\n  if n == 0 then\n    return 0\n  end\n  if n ==\
    \ 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n\
    \ < 0 then\n    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if\
    \ n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", " \
    \ if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return\
    \ 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return\
    \ n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n\
    \    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n -\
    \ 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n <= 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n <= 0 then\n    return\
    \ 0\n  end\n  if n == 1 or n == 2 then\n    return 1\n  end\n  return fib(n -\
    \ 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n < 0 then\n    error(\"fib: negative argument not allowed\")\n  end\n\
    \  if n == 0 or n == 1 then\n    return n\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) +\
    \ fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n ==\
    \ 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n <= 0 then\n    return 0\n  end\n  if\
    \ n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", " \
    \ if n <= 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n \
    \   return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    error(\"\
    fib expects non-negative integer\")\n  end\n  if n < 2 then\n    return n\n  end\n\
    \  return fib(n-1) + fib(n-2)\nend", "  if n <= 0 then\n    return 0\n  elseif\
    \ n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fib(n-1) + fib(n-2)\n\
    \  end\nend", "  if n <= 0 then\n    return 0\n  elseif n == 1 then\n    return\
    \ 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n < 0 then\n    return nil\n  elseif n == 0 then\n    return 0\n  elseif n ==\
    \ 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "  if n < 0 then\n    error(\"fib expects non-negative integer\")\n  end\n  if n\
    \ == 0 or n == 1 then\n    return n\n  end\n  return fib(n-1) + fib(n-2)\nend",
  "  if n < 0 then\n    error(\"fib: negative argument not allowed\")\n  end\n  if\
    \ n == 0 or n == 1 then\n    return n\n  end\n  return fib(n-1) + fib(n-2)\nend",
  "  if n < 0 then\n    error(\"fib: negative argument not allowed\")\n  end\n  if\
    \ n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return n\n  else\n   \
    \ return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    error(\"\
    fib expected a positive integer\")\n  end\n  if n < 2 then\n    return n\n  end\n\
    \  return fib(n-1) + fib(n-2)\nend", "  if n < 0 then\n    error('fib expects\
    \ non-negative integer')\n  end\n  if n == 0 then\n    return 0\n  end\n  if n\
    \ == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if\
    \ n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n\
    \  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n\
    \  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n\
    \ - 1) + fib(n - 2)\nend", "  if n < 0 then\n    error(\"fib: negative argument\"\
    )\n  end\n  if n == 0 or n == 1 then\n    return n\n  end\n  return fib(n - 1)\
    \ + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n\
    \    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return fib(n -\
    \ 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0\
    \ or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n <= 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return n\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return\
    \ 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n\
    \ - 1) + fib(n - 2)\nend", "  if n <= 0 then\n    return 0\n  elseif n == 1 then\n\
    \    return 1\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n <=\
    \ 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend",
  "  if n < 0 then\n    error(\"fib: negative argument not allowed\")\n  end\n  if\
    \ n == 0 or n == 1 then\n    return n\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n <= 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n-1)\
    \ + fib(n-2)\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    error(\"fib: n must be\
    \ non-negative\")\n  end\n  if n < 2 then\n    return n\n  end\n  return fib(n-1)\
    \ + fib(n-2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n\
    \    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return fib(n -\
    \ 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0\
    \ or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n  \
    \  return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n\
    \  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n\
    \  elseif n == 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  end\n\
    \  local fib1 = fib(n-1)\n  local fib2 = fib(n-2)\n  return fib1 + fib2\nend",
  "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return\
    \ 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n\
    \ - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n ==\
    \ 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n < 0 then\n    return nil\n  elseif n == 0 then\n    return 0\n  elseif n\
    \ == 1 then\n    return 1\n  end\n  local fib1 = fib(n-1)\n  local fib2 = fib(n-2)\n\
    \  return fib1 + fib2\nend", "  if n < 0 then\n    return nil\n  end\n  if n ==\
    \ 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n <= 0 then\n    return 0\n  end\n  if n == 1 or n == 2 then\n    return 1\n\
    \  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n\
    \  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) +\
    \ fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 then\n\
    \    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n  return fib(n -\
    \ 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0\
    \ or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n  \
    \  return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if\
    \ n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\n\
    end", "  if n <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n -\
    \ 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n ==\
    \ 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n\
    \ <= 1 then\n    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\n\
    end", "  if n <= 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n\
    \    return fib(n-1) + fib(n-2)\n  end\nend", "  if n <= 1 then\n    return n\n\
    \  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n-1) + fib(n-2)\n  end\nend", "  if n <\
    \ 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return n\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return\
    \ nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n\
    \ - 1) + fib(n - 2)\nend", "  if n < 0 then\n    error(\"fib expects non-negative\
    \ integer\")\n  end\n  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n\
    \    return n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if\
    \ n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n\
    \  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return\
    \ n\n  else\n    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n - 1) + fib(n - 2)\nend", "  if n <= 1 then\n    return n\n  else\n   \
    \ return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n\
    \  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n-1) + fib(n-2)\n\
    end", "  if n < 0 then\n    error(\"fib: negative argument\")\n  end\n  if n ==\
    \ 0 or n == 1 then\n    return n\n  end\n  return fib(n - 1) + fib(n - 2)\nend",
  "  if n < 0 then\n    error('fib expects non-negative integer')\n  end\n  if n <\
    \ 2 then\n    return n\n  end\n  return fib(n-1) + fib(n-2)\nend", "  if n <=\
    \ 0 then\n    return 0\n  elseif n == 1 then\n    return 1\n  else\n    return\
    \ fib(n - 1) + fib(n - 2)\n  end\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 then\n    return 0\n  end\n  if n == 1 then\n    return 1\n  end\n\
    \  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n    return nil\n  end\n\
    \  if n == 0 or n == 1 then\n    return 1\n  end\n  return fib(n - 1) + fib(n\
    \ - 2)\nend", "  if n < 0 then\n    return nil\n  end\n  if n == 0 or n == 1 then\n\
    \    return 1\n  end\n  return fib(n - 1) + fib(n - 2)\nend", "  if n < 0 then\n\
    \    return nil\n  end\n  if n == 0 or n == 1 then\n    return 1\n  end\n  return\
    \ fib(n-1) + fib(n-2)\nend", "  if n <= 1 then\n    return n\n  else\n    return\
    \ fib(n-1) + fib(n-2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n\
    \    return fib(n - 1) + fib(n - 2)\n  end\nend", "  if n <= 0 then\n    return\
    \ 0\n  elseif n == 1 then\n    return 1\n  else\n    return fib(n - 1) + fib(n\
    \ - 2)\n  end\nend", "  if n <= 1 then\n    return n\n  else\n    return fib(n\
    \ - 1) + fib(n - 2)\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

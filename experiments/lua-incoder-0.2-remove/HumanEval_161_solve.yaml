name: HumanEval_161_solve
language: lua
prompt: "-- You are given a string s.\n-- if s[i] is a letter, reverse its case from\
  \ lower to upper or vise versa, \n-- otherwise keep it as it is.\n-- If the string\
  \ contains no letters, reverse the string.\n-- The function should return the resulted\
  \ string.\n-- Examples\nlocal function solve(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = solve\n\
  \    lu.assertEquals(candidate('AsDf'), 'aSdF')\n    lu.assertEquals(candidate('1234'),\
  \ '4321')\n    lu.assertEquals(candidate('ab'), 'AB')\n    lu.assertEquals(candidate('#a@C'),\
  \ '#A@c')\n    lu.assertEquals(candidate('#AsdfW^45'), '#aSDFw^45')\n    lu.assertEquals(candidate('#6@2'),\
  \ '2@6#')\n    lu.assertEquals(candidate('#$a^D'), '#$A^d')\n    lu.assertEquals(candidate('#ccc'),\
  \ '#CCC')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = \"\"\n    for i = 1, #s do\n        local c = s[i]\n\
    \        if isLetter(c) then\n            if c == \"A\" then\n               \
    \ c = \"a\"\n            elseif c == \"B\" then\n                c = \"b\"\n \
    \           elseif c == \"C\" then\n                c = \"c\"\n            elseif\
    \ c == \"D\" then\n                c = \"d\"\n            elseif c == \"E\" then\n\
    \                c = \"e\"\n            elseif c == \"F\" then\n             \
    \   c = \"f\"\n            elseif c == \"G\" then\n                c = \"g\"\n\
    \            elseif c == \"H\" then\n                c = \"h\"\n            elseif\
    \ c == \"I\" then\n                c = \"i\"\n            elseif c == \"J\" then\n\
    \                c = \"j\"\n            elseif c == \"K\" then\n             \
    \   c = \"k\"\n            elseif c == \"L\" then\n                c = \"l\"\n\
    \            elseif c == \"M\" then\n                c = \"m\"\n            elseif\
    \ c == \"N\" then\n                c = \"n\"\n            elseif c == \"O\" then\n\
    \                c = \"o\"\n            elseif c == \"P\" then\n             \
    \   c = \"p\"\n            elseif c == \"Q\" then\n                c = \"q\"\n\
    \            elseif c == \"R\" then\n                c = \"r\"\n            elseif\
    \ c == \"S\" then\n                c = \"s\"\n            elseif c == \"T\" then\n\
    \                c = \"t\"\n            elseif c == \"U\" then\n             \
    \   c = \"u\"\n            elseif c == \"V\" then\n                c = \"v\"\n\
    \            elseif c == \"W\" then\n                c = \"w\"\n            elseif\
    \ c == \"X\" then\n                c = \"x\"\n            elseif c == \"Y\" then\n\
    \                c = \"y\"\n            elseif c == \"Z\" then\n             \
    \   c = \"z\"\n            end\n        end\n        result = result .. c\n  \
    \  end\n    return result\nend", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n    \
    \            result = result .. tolower(s[i])\n            else\n            \
    \    result = result .. s[i]\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n    end\n    return result\nend", "    local\
    \ s = s:lower()\n    local result = \"\"\n    for i = 1, #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] == s[i] then\n                result = result\
    \ .. toupper(s[i])\n            else\n                result = result .. s[i]\n\
    \            end\n        end\n    end\n    return result\nend\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!", "    local s = string.lower(s)\n\
    \    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~=\
    \ \"\" then\n            local c = string.sub(s,i,i)\n            if string.find(string.upper(c),c)\
    \ then\n                result = result .. string.upper(c)\n            else\n\
    \                result = result .. c\n            end\n        else\n       \
    \     result = result .. s[i]\n        end\n    end\n    return string.lower(result)\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i)) + result\n            end\n        else\n\
    \            result = string.upper(string.sub(s,i,i)) + result\n        end\n\
    \    end\n    return result\nend", "    local s = string.lower(s)\n    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.find(string.char(string.byte(s[i])),\
    \ \"a\") then\n            local temp = string.upper(string.sub(s,i,i))\n    \
    \        temp = string.sub(temp, 1, #temp-1)\n            temp = string.sub(temp,\
    \ 1, #temp-1)\n            result = result .. temp\n        else\n           \
    \ result = result .. s[i]\n        end\n    end\n    return string.lower(result)\n\
    end", "    local s = string.lower(s)\n    local n = #s\n    if n == 0 then\n \
    \       return s\n    end\n    local t = {}\n    for i = 1, n do\n        if s[i]\
    \ ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ == 1 then\n                table.insert(t, string.upper(s[i]))\n           \
    \ else\n                table.insert(t, s[i])\n            end\n        end\n\
    \    end\n    return table.concat(t, \"\")\nend", "    local str = \"\"\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            str = str..string.sub(s,i,i)\n\
    \        else\n            str = str..string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend", "    local result = \"\"\n    for i = 1, #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n          \
    \      result = result .. tolower(s[i])\n            else\n                result\
    \ = result .. s[i]\n            end\n        end\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        local c = s[i]\n\
    \        if isLetter(c) then\n            local lower = tolower(c)\n         \
    \   local upper = toupper(c)\n            if lower ~= upper then\n           \
    \     result = result .. upper\n            else\n                result = result\
    \ .. lower\n            end\n        else\n            result = result .. c\n\
    \        end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            local\
    \ c = string.sub(s,i,i)\n            if string.find(c, \"a\") then\n         \
    \       c = string.upper(c)\n            else\n                c = string.lower(c)\n\
    \            end\n            s = string.sub(s,1,i-1) .. c .. string.sub(s,i+1)\n\
    \        end\n    end\n    return s\nend\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ !\"))\nprint(solve(\"Hello World! ! \"))\nprint(solve(\"Hello World! ! !\"))\n\
    print(solve(\"Hello World! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! !\"))\n\
    print(solve(\"Hello World! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! !\
    \ !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World!\
    \ ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! !\
    \ ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! !\
    \ ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\
    \ !\"))\nprint(solve(\"Hello World", "    local result = \"\"\n    for i = 1,\
    \ #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n\
    \                result = result .. tolower(s[i])\n            else\n        \
    \        result = result .. s[i]\n            end\n        end\n    end\n    return\
    \ result\nend", "    local s = string.lower(s)\n    for i = 1, #s do\n       \
    \ if string.find(string.upper(s), string.sub(s,i,i)) == nil then\n           \
    \ s = string.upper(s)\n        else\n            s = string.lower(s)\n       \
    \ end\n    end\n    return s\nend", "    local result = \"\"\n    for i = 1, #s\
    \ do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                local upper = string.upper(string.sub(s,i,i))\n\
    \                local lower = string.lower(string.sub(s,i,i))\n             \
    \   result = result .. lower .. upper\n            else\n                result\
    \ = result .. string.sub(s,i,i)\n            end\n        else\n            result\
    \ = result .. string.sub(s,i,i)\n        end\n    end\n    return result\nend",
  "    local s = string.lower(s)\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            local c = string.sub(s,i,i)\n            if string.sub(c,1,1)\
    \ ~= nil then\n                c = string.upper(c)\n            end\n        \
    \    s = string.sub(s,i,i..i..c)\n        end\n    end\n    return s\nend\nprint(solve(\"\
    HELLO\"))\nprint(solve(\"hello\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"\
    hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\n\
    print(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO\
    \ WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"\
    hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\n\
    print(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO\
    \ WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"\
    hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\n\
    print(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO\
    \ WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"\
    hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\n\
    print(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO\
    \ WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"\
    hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\n\
    print(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO\
    \ WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"\
    hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\n\
    print(solve(\"HELLO WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO\
    \ WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"\
    hello ", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = result .. string.sub(s,i,i)\n            else\n      \
    \          result = result .. string.upper(string.sub(s,i,i))\n            end\n\
    \        else\n            result = result .. string.sub(s,i,i)\n        end\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, #s\
    \ do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                result = string.sub(s,i,i)\n    \
    \        else\n                result = string.upper(string.sub(s,i,i)) + result\n\
    \            end\n        else\n            result = string.upper(string.sub(s,i,i))\
    \ + result\n        end\n    end\n    return result\nend", "    local result =\
    \ \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n     \
    \       if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result\
    \ = string.sub(s,i,i)\n            else\n                result = string.upper(string.sub(s,i,i))\n\
    \            end\n        else\n            result = string.sub(s,i,i)\n     \
    \   end\n    end\n    return result\nend", "    local result = \"\"\n    for i\
    \ = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                result = result .. string.sub(s,i,i)\n\
    \            else\n                result = result .. string.sub(s,i,i)\n    \
    \        end\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    local result = \"\"\n    for i = 1, #s do\n        if string.find(string.upper(s),\
    \ string.upper(s[i])) then\n            result = result .. string.upper(s[i])\n\
    \        else\n            result = result .. s[i]\n        end\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    for i = 1, #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n          \
    \      result = result .. tolower(s[i])\n            else\n                result\
    \ = result .. s[i]\n            end\n        end\n    end\n    return result\n\
    end", "    local s = string.lower(s)\n    local n = #s\n    local result = \"\"\
    \n    for i = 1, n do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. string.lower(s[i])\n   \
    \         end\n        else\n            result = result .. s[i]\n        end\n\
    \    end\n    return result\nend", "  -- Your code here\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n   \
    \         local char = string.sub(s,i,i)\n            if char >= \"a\" and char\
    \ <= \"z\" then\n                char = string.upper(char) .. string.lower(char)\n\
    \            else\n                char = char\n            end\n            result\
    \ = result .. char\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend\nprint(solve(\"abc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"\
    ))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"\
    aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"\
    ))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"\
    aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"\
    ))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"\
    aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"\
    ))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"\
    aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"\
    ))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"\
    aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"\
    ))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"\
    aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"))\nprint(solve(\"aBcD\"\
    ))\nprint(solve", "    local s = string.lower(s)\n    local result = \"\"\n  \
    \  for i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n            local\
    \ c = string.sub(s,i,i)\n            if string.find(c, \"a\") == 1 then\n    \
    \            c = string.upper(c)\n            elseif string.find(c, \"A\") ==\
    \ 1 then\n                c = string.lower(c)\n            end\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "    local s =\
    \ string.lower(s)\n    local n = #s\n    local result = \"\"\n    for i = 1, n\
    \ do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) then\n                s[i] = string.upper(s[i])\n      \
    \      elseif string.find(string.lower(s[i]), string.lower(s[i])) then\n     \
    \           s[i] = string.lower(s[i])\n            end\n        end\n        result\
    \ = result .. s[i]\n    end\n    return result\nend\nprint(solve(\"Hello World\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!!\"))\nprint(solve(\"\
    Hello World!!!\"))\nprint(solve(\"Hello World!!!!\"))\nprint(solve(\"Hello World!!!!!\"\
    ))\nprint(solve(\"Hello World!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH WoRlD\"\n\
    print(solve(\"Hello World!!!!!!!\")) -- This should return \"!olleH Wo", "   \
    \ local s = string.lower(s)\n    local t = \"\"\n    for i = 1, #s do\n      \
    \  if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n                t = string.sub(s,i,i)\n            else\n            \
    \    t = string.upper(string.sub(s,i,i))\n            end\n        else\n    \
    \        t = string.upper(t)\n        end\n    end\n    return t\nend\nprint(solve(\"\
    Hello\"))\nprint(solve(\"hello\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello ", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i)) + result\n            end\n        else\n\
    \            result = string.upper(string.sub(s,i,i)) + result\n        end\n\
    \    end\n    return result\nend", "    local s = string.lower(s)\n    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n  \
    \          local c = string.sub(s,i,i)\n            if string.find(string.upper(c),c)\
    \ then\n                result = result .. string.upper(c)\n            else\n\
    \                result = result .. c\n            end\n        else\n       \
    \     result = result .. string.sub(s,i,i)\n        end\n    end\n    return string.lower(result)\n\
    end\nprint(solve(\"hello\"))\nprint(solve(\"HELLO\"))\nprint(solve(\"hello\"))\n\
    print(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"Hell", "    local s = string.lower(s)\n    local result = \"\"\n\
    \    for i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n           \
    \ local c = string.sub(s,i,i)\n            local l = string.lower(c)\n       \
    \     local u = string.upper(c)\n            if l ~= u then\n                result\
    \ = result .. string.upper(c) .. string.lower(c)\n            else\n         \
    \       result = result .. c\n            end\n        else\n            result\
    \ = result .. s[i]\n        end\n    end\n    return result\nend", "    local\
    \ result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n\
    \            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result\
    \ = string.sub(s,i,i)\n            else\n                result = string.upper(string.sub(s,i,i))\n\
    \            end\n        else\n            result = string.upper(string.sub(s,i,i))\n\
    \        end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n\
    \            if string.find(string.upper(s[i]), string.upper(s[i])) == 1 then\n\
    \                s = string.upper(string.sub(s,i,i)) + string.upper(string.sub(s,i+1,i+1))\n\
    \            else\n                s = string.upper(string.sub(s,i,i)) + string.lower(string.sub(s,i+1,i+1))\n\
    \            end\n        end\n    end\n    return s\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ == toupper(s[i]) then\n                result = result .. tolower(s[i])\n  \
    \          else\n                result = result .. s[i]\n            end\n  \
    \      end\n    end\n    return result\nend\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ !\"))\nprint(solve(\"Hello World! ! \"))\nprint(solve(\"Hello World! ! !\"))\n\
    print(solve(\"Hello World! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! !\"))\n\
    print(solve(\"Hello World! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! !\
    \ !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World!\
    \ ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! !\
    \ ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! !\
    \ ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ", "    local result = \"\"\n    for i = 1, #s do\n        if\
    \ s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n              \
    \  s = tolower(s)\n            else\n                s = toupper(s)\n        \
    \    end\n        end\n        result = result .. s[i]\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        local c = toupper(s[i])\n\
    \        if c == \"A\" or c == \"a\" then\n            -- Reverse the case of\
    \ the letter\n            c = tolower(c)\n        else\n            -- Keep the\
    \ letter\n        end\n        result = result .. c\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n\
    \            if s[i] == toupper(s[i]) then\n                result = result ..\
    \ tolower(s[i])\n            else\n                result = result .. s[i]\n \
    \           end\n        end\n    end\n    return result\nend", "    local s =\
    \ string.lower(s)\n    local n = #s\n    if n == 0 then\n        return s\n  \
    \  end\n    local t = {}\n    for i = 1, n do\n        if s[i] ~= nil then\n \
    \           local c = s[i]\n            if string.find(string.upper(c), string.upper(s[i]))\
    \ == 1 then\n                c = string.upper(c)\n            elseif string.find(string.lower(c),\
    \ string.lower(s[i])) == 1 then\n                c = string.lower(c)\n       \
    \     end\n            t[#t + 1] = string.sub(s, i, i)\n            t[#t + 1]\
    \ = string.sub(c, i, i)\n        end\n    end\n    return table.concat(t)\nend\n\
    print(solve(\"hello\"))\nprint(solve(\"HELLO\"))\nprint(solve(\"hello\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n", "    local result = \"\
    \"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] ==\
    \ toupper(s[i]) then\n                result = result .. tolower(s[i])\n     \
    \       else\n                result = result .. s[i]\n            end\n     \
    \   end\n    end\n    return result\nend", "    local result = \"\"\n    for i\
    \ = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                s[i] = tolower(s[i])\n            else\n             \
    \   s[i] = toupper(s[i])\n            end\n        end\n        result = result\
    \ .. s[i]\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] ~= s[i] then\n\
    \                local lower = tolower(s[i])\n                local upper = toupper(s[i])\n\
    \                \n                if lower ~= upper then\n                  \
    \  result = result .. upper\n                else\n                    result\
    \ = result .. lower\n                end\n            else\n                result\
    \ = result .. s[i]\n            end\n        end\n    end\n    return result\n\
    end", "    local s = string.lower(s)\n    local result = \"\"\n    for i = 1,\
    \ #s do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) == 1 then\n                s = string.upper(string.sub(s,\
    \ i, i + 1))\n            else\n                s = string.sub(s, i, i + 1)\n\
    \            end\n        end\n        result = result .. s\n    end\n    return\
    \ string.lower(result)\nend", "    local s = string.lower(s)\n    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n  \
    \          local c = string.sub(s,i,i)\n            if string.find(string.upper(c),c)\
    \ then\n                c = string.upper(c)\n            else\n              \
    \  c = string.lower(c)\n            end\n            result = result .. c\n  \
    \      end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n\
    \            if string.find(string.upper(s[i]), string.upper(s[i])) == 1 then\n\
    \                result = result .. string.upper(s[i])\n            else\n   \
    \             result = result .. string.lower(s[i])\n            end\n       \
    \ end\n    end\n    return result\nend", "    local s = string.lower(s)\n    local\
    \ n = #s\n    if n == 0 then\n        return s\n    end\n    local t = {}\n  \
    \  for i = 1, n do\n        local c = s[i]\n        if string.find(string.upper(c),\
    \ string.upper(c)) then\n            t[#t + 1] = string.upper(c)\n        else\n\
    \            t[#t + 1] = c\n        end\n    end\n    return table.concat(t)\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   result = string.upper(string.sub(s,i,i))\n        end\n    end\n    return\
    \ result\nend", "    local s = string.lower(s)\n    local n = #s\n    if n ==\
    \ 0 then\n        return s\n    end\n    local i = 0\n    while i < n do\n   \
    \     local c = s[i]\n        if string.find(string.upper(c), string.lower(c))\
    \ then\n            s = string.upper(c)\n        else\n            s = string.lower(c)\n\
    \        end\n        i = i + 1\n    end\n    return s\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n   \
    \         if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result\
    \ = string.sub(s,i,i)\n            else\n                result = string.upper(string.sub(s,i,i))\n\
    \            end\n        else\n            result = string.upper(string.sub(s,i,i))\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #s do\n        local c = s[i]\n        if c ~= nil then\n       \
    \     if c == \"a\" then\n                c = toupper(c)\n            elseif c\
    \ == \"A\" then\n                c = tolower(c)\n            end\n        end\n\
    \        result = result .. c\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n   \
    \         if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result\
    \ = string.sub(s,i,i)\n            end\n        end\n    end\n    return result\n\
    end", "    local s = string.lower(s)\n    local t = \"\"\n    for i = 1, #s do\n\
    \        if s[i] ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ then\n                t = string.upper(string.sub(s[i], 1, string.len(s[i])-1))..t\n\
    \            else\n                t = string.sub(s[i], 1, string.len(s[i])-1)..t\n\
    \            end\n        else\n            t = string.lower(t)\n        end\n\
    \    end\n    return t\nend", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n    \
    \            result = result .. tolower(s[i])\n            else\n            \
    \    result = result .. s[i]\n            end\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              local upper = string.upper(string.sub(s,i,i))\n               \
    \ local lower = string.lower(string.sub(s,i,i))\n                local reverse\
    \ = string.sub(s,i,i)\n                local final = string.sub(s,i,i)\n     \
    \           final = string.sub(final,1,1)..upper..lower..final\n             \
    \   final = string.sub(final,2,2)..lower..final\n                final = string.sub(final,3,3)..upper..final\n\
    \                final = string.sub(final,4,4)..lower..final\n               \
    \ final = string.sub(final,5,5)..upper..final\n                final = string.sub(final,6,6)..lower..final\n\
    \                final = string.sub(final,7,7)..upper..final\n               \
    \ final = string.sub(final,8,8)..lower..final\n                final = string.sub(final,9,9)..upper..final\n\
    \                final = string.sub(final,10,10)..lower..final\n             \
    \   final = string.sub(final,11,11)..upper..final\n                final = string.sub(final,12,12)..lower..final\n\
    \                final = string.sub(final,13,13)..upper..final\n             \
    \   final = string.sub(final,14,14)..lower..final\n                final = string.sub(final,15,15)..upper..final\n\
    \                final = string.sub(final,16,16)..lower..final\n             \
    \   final = string.sub(final,17,17)..upper..final\n                final = string.sub(final,18,18)..lower..final\n\
    \                final = string.sub(final,19,19)..upper..final\n             \
    \   final = string.sub(final,20,20)..lower..final\n                final = string.sub(final,21,21)..upper..final\n\
    \                final = string.sub(final,22,22)..lower..final\n             \
    \   final = string.sub(final,23,23)..upper..final\n                final = string.sub(final,24,24)..lower..final\n\
    \                final = string.sub(final,25,25)..upper..final\n             \
    \   final = string.sub(final,26,26)..lower..final\n                final = string.sub(final,27,27)..upper..final\n\
    \                final = string.sub(final,28,28)..lower..final\n             \
    \   final = string.sub(final,29,29)..upper..final\n                final = string.sub(final,30,30)..lower..final\n",
  "    local s = string.lower(s)\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              s = string.upper(string.sub(s,i,i))\n            else\n       \
    \         s = string.lower(string.sub(s,i,i))\n            end\n        end\n\
    \    end\n    return s\nend", "    local s = string.lower(s)\n    local n = #s\n\
    \    if n == 0 then\n        return s\n    end\n    local result = \"\"\n    for\
    \ i = 1, n do\n        if string.find(s, string.char(s[i])) then\n           \
    \ local j = string.find(s, string.char(s[i]), i)\n            if j == i then\n\
    \                j = j - 1\n            end\n            local k = string.find(s,\
    \ string.char(s[j]), j)\n            if k == j then\n                k = k - 1\n\
    \            end\n            if j > k then\n                local tmp = string.sub(s,\
    \ j, k)\n                tmp = string.upper(tmp)\n                tmp = string.sub(tmp,\
    \ 1, #tmp - 1)\n                result = result .. tmp\n            else\n   \
    \             local tmp = string.sub(s, j, k)\n                tmp = string.lower(tmp)\n\
    \                tmp = string.sub(tmp, 1, #tmp - 1)\n                result =\
    \ result .. tmp\n            end\n        else\n            result = result ..\
    \ s[i]\n        end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~=\
    \ \"\" then\n            local c = string.sub(s,i,i)\n            if string.find(string.upper(c),string.upper(c))\
    \ then\n                c = string.upper(c)\n            elseif string.find(string.lower(c),string.lower(c))\
    \ then\n                c = string.lower(c)\n            end\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ == toupper(s[i]) then\n                result = result .. tolower(s[i])\n  \
    \          else\n                result = result .. s[i]\n            end\n  \
    \      else\n            result = result .. s[i]\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        local\
    \ c = tolower(s[i])\n        if c == \"a\" then\n            c = \"A\"\n     \
    \   end\n        if c == \"z\" then\n            c = \"Z\"\n        end\n    \
    \    if c == \"0\" then\n            c = \"0\"\n        end\n        result =\
    \ result .. c\n    end\n    return result\nend", "    local result = \"\"\n  \
    \  for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            if\
    \ string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result = string.sub(s,i,i)\n\
    \            end\n        end\n    end\n    return result\nend\nprint(solve(\"\
    abc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(", "    local s = string.lower(s)\n    for i = 1, #s do\n     \
    \   if s[i] ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ then\n                s[i] = string.upper(s[i])\n            else\n        \
    \        s[i] = string.lower(s[i])\n            end\n        end\n    end\n  \
    \  return s\nend\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"aBcDeF\"))\nprint(solve(\"\
    aBcDe", "    local s = string.lower(s)\n    local t = \"\"\n    for i = 1, #s\
    \ do\n        if string.find(string.upper(s), string.sub(s,i,i)) == nil then\n\
    \            local c = string.sub(s,i,i)\n            local u = string.upper(c)\n\
    \            local l = string.lower(c)\n            local r = string.sub(u,1,1)..l..string.sub(u,2,#u)\n\
    \            t = r..t\n        else\n            t = string.sub(s,i,i)\n     \
    \   end\n    end\n    return t\nend", "    local s = string.lower(s)\n    local\
    \ result = \"\"\n    for i = 1, #s do\n        if string.find(string.char(string.byte(s[i])..string.byte(s[i+1])),\
    \ string.char(string.byte(s[i])), 1) then\n            local temp = string.char(string.byte(s[i])..string.byte(s[i+1]))\n\
    \            temp = string.gsub(temp, \"[\" .. string.char(string.byte(s[i]))\
    \ .. \"]\", string.char(string.byte(s[i+1])))\n            temp = string.gsub(temp,\
    \ \"[\" .. string.char(string.byte(s[i+1])) .. \"]\", string.char(string.byte(s[i])))\n\
    \            result = result .. temp\n        else\n            result = result\
    \ .. s[i]\n        end\n    end\n    return string.lower(result)\nend", "    local\
    \ result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] == toupper(s[i]) then\n                s = tolower(s)\n          \
    \  else\n                s = toupper(s)\n            end\n        end\n      \
    \  result = result .. s[i]\n    end\n    return result\nend\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"hello\"))\nprint(solve(\"Hello\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"HelloWorld\"))\n\
    print(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"\
    ))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld", "   \
    \ local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n         \
    \       result = string.sub(s,i,i)\n            else\n                result =\
    \ string.upper(string.sub(s,i,i))\n            end\n        else\n           \
    \ result = string.upper(string.sub(s,i,i))\n        end\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n\
    \            if s[i] == toupper(s[i]) then\n                result = result ..\
    \ tolower(s[i])\n            else\n                result = result .. s[i]\n \
    \           end\n        end\n    end\n    return result\nend", "    local s =\
    \ string.lower(s)\n    local s = string.upper(s)\n    return s\nend", "    local\
    \ s = string.lower(s)\n    local n = #s\n    if n == 0 then\n        return s\n\
    \    end\n    if string.find(s, \"a\") then\n        s = string.upper(s)\n   \
    \ end\n    local result = \"\"\n    for i = 1, n do\n        if string.find(s,\
    \ string.sub(s,i,i)) then\n            local j = string.find(s, string.sub(s,i,i))\n\
    \            local k = string.find(s, string.sub(s,j,j))\n            if j > k\
    \ then\n                result = result .. string.sub(s,j,k)\n            else\n\
    \                result = result .. string.sub(s,i,j)\n            end\n     \
    \   else\n            result = result .. string.sub(s,i,i)\n        end\n    end\n\
    \    return string.lower(result)\nend", "    local s = string.lower(s)\n    local\
    \ n = #s\n    if n == 0 then\n        return s\n    end\n    local result = \"\
    \"\n    for i = 1, n do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) == 1 then\n                s = string.upper(string.sub(s,1,i))\
    \ + string.upper(string.sub(s,i+1,n)) \n            else\n                s =\
    \ string.upper(string.sub(s,1,i)) + string.lower(string.sub(s,i+1,n)) \n     \
    \       end\n        end\n    end\n    return s\nend\nprint(solve(\"Hello World\"\
    ))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World", "    local s = string.lower(s)\n    local result = \"\"\n    for i =\
    \ 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n            local c = string.sub(s,i,i)\n\
    \            if string.sub(c,1,1) ~= \"\" then\n                c = string.upper(c)\n\
    \            end\n            result = result .. c\n        else\n           \
    \ result = result .. string.sub(s,i,i)\n        end\n    end\n    return string.lower(result)\n\
    end\nprint(solve(\"Hello\"))\nprint(solve(\"hello\"))\nprint(solve(\"HelloWorld\"\
    ))\nprint(solve(\"helloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"\
    HelloWorld\"))\nprint(solve(\"HelloWorld\"))\n", "    local str = \"\"\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            str = str\
    \ .. string.sub(s,i,i)\n        else\n            str = str .. string.sub(s,i,i)\n\
    \        end\n    end\n    return str\nend", "    local s = string.lower(s)\n\
    \    for i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n           \
    \ local c = string.sub(s,i,i)\n            if string.find(string.upper(c),c) then\n\
    \                c = string.upper(c)\n            else\n                c = string.lower(c)\n\
    \            end\n            s = string.sub(s,1,i-1) .. c .. string.sub(s,i+1)\n\
    \        end\n    end\n    return s\nend\nprint(solve(\"Hello\"))\nprint(solve(\"\
    HELLO\"))\nprint(solve(\"hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"hELLO\"\
    ))\nprint(solve(\"hEllO\"))\nprint(solve(\"heLLO\"))\nprint(solve(\"heLlO\"))\n\
    print(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"\
    heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"\
    ))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\n\
    print(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"\
    heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"\
    ))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\n\
    print(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"\
    heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"\
    ))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\n\
    print(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"\
    heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"\
    ))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\n\
    print(solve(\"heLLo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLLo", "    local\
    \ s = string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n                result = result .. string.sub(s,i,i)\n            else\n\
    \                result = result .. string.sub(s,i,i)\n            end\n     \
    \   else\n            result = result .. string.sub(s,i,i)\n        end\n    end\n\
    \    return result\nend", "    local s = string.lower(s)\n    local t = \"\"\n\
    \    for i = 1, #s do\n        if string.find(s, string.char(s[i])) then\n   \
    \         s = string.upper(s)\n        else\n            s = string.lower(s)\n\
    \        end\n        t = t .. s[i]\n    end\n    return t\nend\nprint(solve(\"\
    abC\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve", "    local result = \"\"\n    for i = 1, #s do\n      \
    \  local c = s[i]\n        if c == \"a\" then\n            -- Reverse the case\n\
    \            c = toupper(c)\n        else\n            -- Keep the case\n    \
    \        c = tolower(c)\n        end\n        result = result .. c\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= \"\" then\n            local c = string.sub(s,i,i)\n\
    \            if string.find(string.upper(c),c) then\n                c = string.upper(c)\n\
    \            elseif string.find(string.lower(c),c) then\n                c = string.lower(c)\n\
    \            end\n            result = result .. c\n        end\n    end\n   \
    \ return result\nend", "    local str = \"\"\n    for i = 1, #s do\n        if\
    \ string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend\nprint(solve(\"hello\"))\nprint(solve(\"Hello\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"HelloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"helloWorld\"))\nprint(solve(\"\
    hello", "    local s = string.lower(s)\n    local result = \"\"\n    for i = 1,\
    \ #s do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                result = result .. string.sub(s,i,i)\n\
    \            else\n                result = result .. string.sub(s,i,i)\n    \
    \        end\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return string.lower(result)\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                if s[i] == \"a\" then\n                    result\
    \ = result .. \"A\"\n                elseif s[i] == \"b\" then\n             \
    \       result = result .. \"B\"\n                elseif s[i] == \"c\" then\n\
    \                    result = result .. \"C\"\n                elseif s[i] ==\
    \ \"d\" then\n                    result = result .. \"D\"\n                elseif\
    \ s[i] == \"e\" then\n                    result = result .. \"E\"\n         \
    \       elseif s[i] == \"f\" then\n                    result = result .. \"F\"\
    \n                elseif s[i] == \"g\" then\n                    result = result\
    \ .. \"G\"\n                elseif s[i] == \"h\" then\n                    result\
    \ = result .. \"H\"\n                elseif s[i] == \"i\" then\n             \
    \       result = result .. \"I\"\n                elseif s[i] == \"j\" then\n\
    \                    result = result .. \"J\"\n                elseif s[i] ==\
    \ \"k\" then\n                    result = result .. \"K\"\n                elseif\
    \ s[i] == \"l\" then\n                    result = result .. \"L\"\n         \
    \       elseif s[i] == \"m\" then\n                    result = result .. \"M\"\
    \n                elseif s[i] == \"n\" then\n                    result = result\
    \ .. \"N\"\n                elseif s[i] == \"o\" then\n                    result\
    \ = result .. \"O\"\n                elseif s[i] == \"p\" then\n             \
    \       result = result .. \"P\"\n                elseif s[i] == \"q\" then\n\
    \                    result = result .. \"Q\"\n                elseif s[i] ==\
    \ \"r\" then\n                    result = result .. \"R\"\n                elseif\
    \ s[i] == \"s\" then\n                    result = result .. \"S\"\n         \
    \       elseif s[i] == \"t\" then\n                    result = result .. \"T\"\
    \n                elseif s[i] == \"u\" then\n                    result = result\
    \ .. \"U\"\n                elseif s[i] == \"v\" then\n                    result\
    \ = result .. \"V\"\n                elseif s[i] == \"w\" then\n             \
    \       result = result .. \"W\"\n                elseif s[i] == \"x\" then\n\
    \                    result = result .. \"X\"\n                elseif s[i] ==\
    \ \"y\" then\n                    result = result .. \"Y\"\n                elseif\
    \ s[i] == \"z\" then\n                    result = result .. \"Z\"\n         \
    \       else\n                    result = result .. s[i]\n                end\n\
    \            end\n        end\n    end\n    return result\nend\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(", "    local s = s:lower()\n    local result = \"\"\n    for i = 1, #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] == s[i] then\n        \
    \        result = result .. s[i]\n            else\n                result = result\
    \ .. toupper(s[i])\n            end\n        end\n    end\n    return result\n\
    end", "    local s = string.lower(s)\n    local n = #s\n    if n == 0 then\n \
    \       return s\n    end\n    local result = \"\"\n    for i = 1, n do\n    \
    \    if s[i] ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ then\n                result = string.upper(result) + string.upper(s[i])\n \
    \           else\n                result = result + s[i]\n            end\n  \
    \      else\n            result = result + s[i]\n        end\n    end\n    return\
    \ result\nend", "    local s = s:lower()\n    local result = \"\"\n    for i =\
    \ 1, #s do\n        if s[i] ~= nil then\n            if s[i] == s[i] then\n  \
    \              s = s:upper()\n            else\n                s = s:lower()\n\
    \            end\n        end\n        result = result .. s[i]\n    end\n    return\
    \ result\nend", "    local s = string.lower(s)\n    local result = \"\"\n    for\
    \ i = 1, #s do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) == 1 then\n                result = string.upper(result)\
    \ + string.upper(s[i])\n            else\n                result = result + s[i]\n\
    \            end\n        else\n            result = result + s[i]\n        end\n\
    \    end\n    return string.lower(result)\nend\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World!\"))\nprint(solve(\"Hello World!!\"))\nprint(solve(\"\
    Hello World!!!\"))\nprint(solve(\"Hello World!!!!\"))\nprint(solve(\"Hello World!!!!!\"\
    ))\nprint(solve(\"Hello World!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\n\
    print(solve(\"Hello World!!!!!!!\")) -- The last \"!\" is not reversed\nprint(solve(\"\
    Hello World!!!!!!!\")) -- The last \"!\" is not reversed\nprint(solve(\"Hello\
    \ World!!!!!!!\")) -- The last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\"\
    )) -- The last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) --\
    \ The last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The\
    \ last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The last\
    \ \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The last \"!\"\
    \ is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The last \"!\" is not\
    \ reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The last \"!\" is not reversed\n\
    print(solve(\"Hello World!!!!!!!\")) -- The last \"!\" is not reversed\nprint(solve(\"\
    Hello World!!!!!!!\")) -- The last \"!\" is not reversed\nprint(solve(\"Hello\
    \ World!!!!!!!\")) -- The last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\"\
    )) -- The last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) --\
    \ The last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The\
    \ last \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The last\
    \ \"!\" is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The last \"!\"\
    \ is not reversed\nprint(solve(\"Hello World!!!!!!!\")) -- The last \"!\" is not\
    \ reversed\nprint(solve(\"", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if s[i] ~= nil then\n            if s[i] >= 'a' and s[i] <= 'z' then\n\
    \                local upper = s[i]\n                s[i] = 'A'\n            \
    \    s[i] = upper\n            elseif s[i] >= 'A' and s[i] <= 'Z' then\n     \
    \           local lower = s[i]\n                s[i] = 'a'\n                s[i]\
    \ = lower\n            end\n        end\n    end\n    for i = 1, #s do\n     \
    \   if s[i] ~= nil then\n            result = result .. s[i]\n        end\n  \
    \  end\n    return result\nend", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~=\
    \ string.sub(s,i,i) then\n                result = string.sub(s,i,i)\n       \
    \     else\n                result = string.upper(string.sub(s,i,i))\n       \
    \     end\n        else\n            result = string.sub(s,i,i)\n        end\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, #s\
    \ do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                result = string.sub(s,i,i)\n    \
    \        else\n                result = string.upper(string.sub(s,i,i)) + result\n\
    \            end\n        else\n            result = string.upper(string.sub(s,i,i))\
    \ + result\n        end\n    end\n    return result\nend", "    local result =\
    \ \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ == toupper(s[i]) then\n                result = result .. tolower(s[i])\n  \
    \          else\n                result = result .. s[i]\n            end\n  \
    \      end\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        else\n     \
    \       result = result .. s[i]\n        end\n    end\n    return result\nend",
  "    local s = string.lower(s)\n    local n = #s\n    if n == 0 then\n        return\
    \ s\n    end\n    local t = {}\n    for i = 1, n do\n        if s[i] ~= nil then\n\
    \            local c = s[i]\n            if c == 'a' or c == 'e' or c == 'i' or\
    \ c == 'o' or c == 'u' then\n                table.insert(t, string.upper(s))\n\
    \            else\n                table.insert(t, s)\n            end\n     \
    \   end\n    end\n    return table.concat(t, \"\")\nend\nprint(solve(\"Hello World\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! !\"))\nprint(solve(\"Hello World! ! !\"))\nprint(solve(\"Hello World!\
    \ ! ! !\"))\nprint(solve(\"Hello World! ! ! ! !\"))\nprint(solve(\"Hello World!\
    \ ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! !\"))\nprint(solve(\"Hello\
    \ World! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! !\
    \ ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! !\
    \ ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World!\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !", "  -- Your code here\n  local result\
    \ = \"\"\n  for i = 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      result\
    \ = result .. string.sub(s,i,i)\n    else\n      result = result .. string.sub(s,i,#s)\n\
    \    end\n  end\n  return result\nend", "    local result = \"\"\n    for i =\
    \ 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                s = tolower(s)\n            else\n                s =\
    \ toupper(s)\n            end\n        end\n        result = result .. s[i]\n\
    \    end\n    return result\nend", "    local result = \"\"\n    for i = 1, #s\
    \ do\n        if string.sub(s,i,i) ~= \"\" then\n            local c = string.sub(s,i,i)\n\
    \            if string.sub(c,1,1) ~= \"\" then\n                c = string.upper(c)\n\
    \            else\n                c = string.lower(c)\n            end\n    \
    \        result = result .. c\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        end\n    end\n\
    \    return result\nend\nprint(solve(\"AaBbCc\"))\nprint(solve(\"aAaBbCc\"))\n\
    print(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"\
    ))\nprint(", "    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~=\
    \ nil then\n            if s[i] == toupper(s[i]) then\n                result\
    \ = result .. tolower(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        else\n            result = result .. s[i]\n\
    \        end\n    end\n    return result\nend", "    local s = s:lower()\n   \
    \ local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n   \
    \         if s[i] == s[i] then\n                local j = i - 1\n            \
    \    while j > 0 and s[j] == s[i] do\n                    j = j - 1\n        \
    \        end\n                if j > 0 then\n                    result = result\
    \ .. s[j]:upper()\n                else\n                    result = result ..\
    \ s[i]\n                end\n            else\n                result = result\
    \ .. s[i]\n            end\n        end\n    end\n    return result\nend", " \
    \   local s = string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n\
    \        if s[i] ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ == 1 then\n                result = result .. string.upper(s[i])\n         \
    \   else\n                result = result .. s[i]\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n    end\n    return string.lower(result)\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   result = string.sub(s,i,i)\n        end\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n  \
    \          if s[i] == toupper(s[i]) then\n                result = result .. tolower(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        end\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= nil then\n            local c = string.sub(s,i,i)\n\
    \            if string.find(c, \"a\") then\n                c = string.upper(c)\n\
    \            elseif string.find(c, \"A\") then\n                c = string.lower(c)\n\
    \            end\n            result = result .. c\n        end\n    end\n   \
    \ return result\nend\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! A\"))\nprint(solve(\"Hello World! A!\"))\nprint(solve(\"Hello World!\
    \ A! \"))\nprint(solve(\"Hello World! A! \"))\nprint(solve(\"Hello World! A! A\"\
    ))\nprint(solve(\"Hello World! A! A!\"))\nprint(solve(\"Hello World! A! A! \"\
    ))\nprint(solve(\"Hello World! A! A! A\"))\nprint(solve(\"Hello World! A! A! A!\"\
    ))\nprint(solve(\"Hello World! A! A! A! \"))\nprint(solve(\"Hello World! A! A!\
    \ A! A\"))\nprint(solve(\"Hello World! A! A! A! A!\"))\nprint(solve(\"Hello World!\
    \ A! A! A! A! A\"))\nprint(solve(\"Hello World! A! A! A! A! A!\"))\nprint(solve(\"\
    Hello World! A! A! A! A! A! A\"))\nprint(solve(\"Hello World! A! A! A! A! A! A!\"\
    ))\nprint(solve(\"Hello World! A! A! A! A! A! A! A\"))\nprint(solve(\"Hello World!\
    \ A! A! A! A! A! A! A! A\"))\nprint(solve(\"Hello World! A! A! A! A! A! A! A!\
    \ A! A\"))\nprint(solve(\"Hello World! A! A! A! A! A! A! A! A! A! A\"))\nprint(solve(\"\
    Hello World! A! A! A! A! A! A! A! A! A! A! A\"))\nprint(solve(\"Hello World! A!\
    \ A! A! A! A! A! A! A! A! A! A! A\"))\nprint(solve(\"Hello World! A! A! A! A!\
    \ A! A! A! ", "    local s = s:lower()\n    local result = \"\"\n    for i = 1,\
    \ #s do\n        if s[i] ~= nil then\n            if s[i] == s[#s] then\n    \
    \            s = s:sub(1, #s)\n            else\n                s = s[i] + s:sub(i\
    \ + 1)\n            end\n        end\n        result = result .. s\n    end\n\
    \    return result\nend\nprint(solve(\"HELLO\"))\nprint(solve(\"hello\"))\nprint(solve(\"\
    HELLO WORLD\"))\nprint(solve(\"hello world\"))\nprint(solve(\"hello\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\n", "    local result = \"\"\n\
    \    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        else\n     \
    \       result = result .. s[i]\n        end\n    end\n    return result\nend",
  "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~=\
    \ nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n     \
    \           result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i)) + result\n            end\n        else\n\
    \            result = string.upper(string.sub(s,i,i)) + result\n        end\n\
    \    end\n    return result\nend", "    local s = string.lower(s)\n    local n\
    \ = #s\n    local result = \"\"\n    for i = 1, n do\n        if s[i] ~= nil then\n\
    \            if string.find(string.upper(s[i]), string.upper(s[i])) then\n   \
    \             result = string.upper(result) + string.upper(s[i])\n           \
    \ else\n                result = result + s[i]\n            end\n        else\n\
    \            result = result + s[i]\n        end\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n\
    \            if s[i] == toupper(s[i]) then\n                result = result ..\
    \ tolower(s[i])\n            else\n                result = result .. s[i]\n \
    \           end\n        end\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ == toupper(s[i]) then\n                result = result .. tolower(s[i])\n  \
    \          else\n                result = result .. s[i]\n            end\n  \
    \      else\n            result = result .. s[i]\n        end\n    end\n    return\
    \ result\nend", "  -- Your code here\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                result = result .. string.sub(s,i,i)\n\
    \            else\n                result = result .. string.upper(string.sub(s,i,i))\n\
    \            end\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        end\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     local char = s[i]\n        if char:byte() == 32 then\n            char =\
    \ char:lower()\n        else\n            char = char:upper()\n        end\n \
    \       result = result .. char\n    end\n    return result\nend", "    local\
    \ s = string.lower(s)\n    local s = string.gsub(s, \"[%a]\", function(c) \n \
    \       return string.upper(c) \n    end)\n    return s\nend", "    local s =\
    \ string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n        if s[i]\
    \ ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ == 1 then\n                result = result .. string.upper(s[i])\n         \
    \   else\n                result = result .. s[i]\n            end\n        end\n\
    \    end\n    return string.lower(result)\nend\nprint(solve(\"AaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"\
    aAaBbCc\"))\nprint(solve(\"aAaBbCc\"))\nprint(solve(\"aAaBb", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ == toupper(s[i]) then\n                result = result .. tolower(s[i])\n  \
    \          else\n                result = result .. s[i]\n            end\n  \
    \      else\n            result = result .. s[i]\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] == toupper(s[i]) then\n                result\
    \ = result .. tolower(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        end\n    end\n    return result\nend\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World! \"\
    ))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\n", "    local result = \"\"\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) ~= \"\" then\n            local letter = string.sub(s,i,i)\n\
    \            if letter:lower() ~= letter then\n                letter = string.upper(letter)\n\
    \            else\n                letter = string.lower(letter)\n           \
    \ end\n            result = result .. letter\n        else\n            result\
    \ = result .. string.sub(s,i,i)\n        end\n    end\n    return result\nend",
  "    local s = string.lower(s)\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            local c = string.sub(s,i,i)\n            string.sub(s,i,i)\
    \ = string.upper(c)\n        end\n    end\n    return s\nend\nprint(solve(\"HELLO\"\
    ))\nprint(solve(\"hello\"))\nprint(solve(\"Hello\"))\nprint(solve(\"hELLO\"))\n\
    print(solve(\"hELLO WORLD\"))\nprint(solve(\"hELLO WORLD!\"))\nprint(solve(\"\
    hELLO WORLD!!\"))\nprint(solve(\"hELLO WORLD!!!\"))\nprint(solve(\"hELLO WORLD!!!!\"\
    ))\nprint(solve(\"hELLO WORLD!!!!!\"))\nprint(solve(\"hELLO WORLD!!!!!!\"))\n\
    print(solve(\"hELLO WORLD!!!!!!!\"))\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WORLD!!!!!!!\")) --\
    \ Should return \"hELLO WORLD!!!!!!!\"\nprint(solve(\"hELLO WOR", "    local s\
    \ = string.lower(s)\n    local t = \"\"\n    for i = 1, #s do\n        if s[i]\
    \ ~= nil then\n            local c = string.upper(s[i])\n            if c ~= nil\
    \ then\n                t = t .. c\n            else\n                t = t ..\
    \ s[i]\n            end\n        else\n            t = t .. s[i]\n        end\n\
    \    end\n    return t\nend", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if s[i] ~= nil then\n            if s[i] ~= \" \" then\n            \
    \    if s[i] >= \"a\" and s[i] <= \"z\" then\n                    result = result\
    \ .. toupper(s[i])\n                else\n                    result = result\
    \ .. tolower(s[i])\n                end\n            else\n                result\
    \ = result .. s[i]\n            end\n        end\n    end\n    return result\n\
    end", "    local s = string.lower(s)\n    local n = #s\n    local result = \"\"\
    \n    for i = 1, n do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) then\n                s[i] = string.upper(s[i])\n      \
    \      elseif string.find(string.lower(s[i]), string.lower(s[i])) then\n     \
    \           s[i] = string.lower(s[i])\n            end\n        end\n        result\
    \ = result .. s[i]\n    end\n    return string.lower(result)\nend", "    local\
    \ s = string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n       \
    \ if string.find(string.upper(s), string.upper(s[i])) then\n            result\
    \ = result .. string.upper(s[i])\n        else\n            result = result ..\
    \ s[i]\n        end\n    end\n    return string.lower(result)\nend", "    local\
    \ s = string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n       \
    \ if s[i] ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ == nil then\n                result = result .. string.upper(s[i])\n       \
    \     else\n                result = result .. string.lower(s[i])\n          \
    \  end\n        else\n            result = result .. s[i]\n        end\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     if s[i] ~= nil then\n            if s[i] ~= s[i] then\n                local\
    \ upper = string.upper(s[i])\n                local lower = string.lower(s[i])\n\
    \                local upper2 = string.upper(upper)\n                local lower2\
    \ = string.lower(lower)\n                if upper ~= lower then\n            \
    \        result = result .. upper2\n                else\n                   \
    \ result = result .. lower2\n                end\n            else\n         \
    \       result = result .. s[i]\n            end\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   result = string.upper(string.sub(s,i,i))\n        end\n    end\n    return\
    \ result\nend", "    local s = string.lower(s)\n    local t = {}\n    for i =\
    \ 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n            table.insert(t,string.upper(string.sub(s,i,i)))\n\
    \        else\n            table.insert(t,string.lower(string.sub(s,i,i)))\n \
    \       end\n    end\n    return table.concat(t, \"\")\nend", "    local s = string.lower(s)\n\
    \    local n = #s\n    if n == 0 then\n        return s\n    end\n    local i\
    \ = 0\n    while i < n do\n        if string.find(s, string.char(s[i])) then\n\
    \            s = string.gsub(s, \"[\" .. string.char(s[i]) .. \"]\", string.char(string.upper(string.sub(s,i,i+1))))\n\
    \            i = i + 1\n        else\n            s = string.gsub(s, \"[\" ..\
    \ string.char(s[i]) .. \"]\", string.char(string.lower(string.sub(s,i,i+1))))\n\
    \            i = i + 1\n        end\n    end\n    return s\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ == toupper(s[i]) then\n                result = result .. tolower(s[i])\n  \
    \          else\n                result = result .. s[i]\n            end\n  \
    \      end\n    end\n    return result\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        else\n     \
    \       result = result .. s[i]\n        end\n    end\n    return result\nend",
  "    local s = string.lower(s)\n    local n = #s\n    local i = 0\n    while i <\
    \ n do\n        if string.find(s, string.sub(s,i,i), 1) then\n            s =\
    \ string.gsub(s, \"[\" .. string.sub(s,i,i) .. \"]\", string.sub(s,i,i)..string.sub(s,i,i+1))\n\
    \        end\n        i = i + 1\n    end\n    return s\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        local char = s[i]\n        if char >=\
    \ \"a\" and char <= \"z\" then\n            char = char - \"a\"\n        elseif\
    \ char >= \"A\" and char <= \"Z\" then\n            char = char - \"A\"\n    \
    \    else\n            char = s[i]\n        end\n        result = result .. char\n\
    \    end\n    return result\nend", "    local str = \"\"\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= nil then\n            str = str..string.sub(s,i,i)\n\
    \        else\n            str = str..string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend\nprint(solve(\"hello\"))\nprint(solve(\"HELLO\"))\nprint(solve(\"\
    hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"HellO", "    local result = \"\"\n\
    \    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            if\
    \ string.sub(s,i,i) ~= string.sub(s,i,i) then\n                local temp = string.sub(s,i,i)\n\
    \                string.sub(s,i,i) = string.sub(s,i,i)\n                string.sub(s,i,i)\
    \ = temp\n            end\n        end\n    end\n    return s\nend", "    local\
    \ result = \"\"\n    for i = 1, #s do\n        local c = s[i]\n        if c ==\
    \ \"a\" then\n            c = toupper(c)\n        elseif c == \"A\" then\n   \
    \         c = tolower(c)\n        end\n        result = result .. c\n    end\n\
    \    return result\nend", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= \"\" then\n            local letter = string.sub(s,i,i)\n\
    \            if letter:lower() == letter then\n                letter = letter:upper()\n\
    \            else\n                letter = letter:lower()\n            end\n\
    \            result = result .. letter\n        else\n            result = result\
    \ .. string.sub(s,i,i)\n        end\n    end\n    return result\nend", "    local\
    \ s = string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n       \
    \ if s[i] ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ == 1 then\n                result = result .. string.upper(s[i])\n         \
    \   else\n                result = result .. string.lower(s[i])\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n    end\n   \
    \ return string.lower(result)\nend", "    local s = string.lower(s)\n    local\
    \ result = \"\"\n    for i = 1, #s do\n        if string.find(string.upper(s),\
    \ string.upper(s[i])) then\n            result = result .. string.upper(s[i])\n\
    \        else\n            result = result .. s[i]\n        end\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    for i = 1, #s do\n      \
    \  if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n                result = string.sub(s,i,i)\n            else\n       \
    \         result = string.upper(string.sub(s,i,i)) + result\n            end\n\
    \        else\n            result = string.upper(string.sub(s,i,i)) + result\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #s do\n        local c = s[i]\n        if c == \"a\" then\n     \
    \       local t = string.upper(string.sub(s, i, i + 1))\n            i = i + 1\n\
    \        elseif c == \"A\" then\n            local t = string.upper(string.sub(s,\
    \ i, i + 1))\n            i = i + 1\n        elseif c == \"b\" then\n        \
    \    local t = string.lower(string.sub(s, i, i + 1))\n            i = i + 1\n\
    \        elseif c == \"B\" then\n            local t = string.lower(string.sub(s,\
    \ i, i + 1))\n            i = i + 1\n        else\n            t = c\n       \
    \ end\n        result = result .. t\n    end\n    return result\nend\nprint(solve(\"\
    AbC\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aB", "    local s = string.lower(s)\n   \
    \ local result = \"\"\n    for i = 1, #s do\n        if string.find(string.upper(s),\
    \ string.upper(s[i])) then\n            result = result .. string.upper(s[i])\n\
    \        else\n            result = result .. s[i]\n        end\n    end\n   \
    \ return string.lower(result)\nend", "    local str = \"\"\n    for i = 1, #s\
    \ do\n        if string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend", "    local s = string.lower(s)\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~=\
    \ string.sub(s,i,i) then\n                s = string.upper(string.sub(s,i,i))\n\
    \            else\n                s = string.lower(string.sub(s,i,i))\n     \
    \       end\n        end\n    end\n    return s\nend", "    local s = s:lower()\n\
    \    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == s[i]\
    \ then\n                s[i] = s[i] + 32\n            else\n                s[i]\
    \ = s[i] + 32\n            end\n        end\n    end\n    return s\nend\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"hello\"))\nprint(solve(\"\
    H\"))\nprint(solve(\"h\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"Hell\"))\nprint(solve(\"Hello\"))\nprint(solve(\"Hell\"))\n", " \
    \   local s = string.lower(s)\n    local n = #s\n    local result = \"\"\n   \
    \ for i = 1, n do\n        if s[i] ~= nil then\n            local c = string.upper(s[i])\n\
    \            if c ~= nil then\n                c = string.lower(c)\n         \
    \   end\n            if c ~= nil then\n                result = result .. c\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    for i = 1, #s do\n      \
    \  if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n                result = string.sub(s,i,i)\n            else\n       \
    \         result = string.upper(string.sub(s,i,i)) + result\n            end\n\
    \        else\n            result = string.upper(string.sub(s,i,i)) + result\n\
    \        end\n    end\n    return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        else\n     \
    \       result = result .. s[i]\n        end\n    end\n    return result\nend",
  "    local s = string.lower(s)\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            local c = string.sub(s,i,i)\n            if string.sub(c,1,1)\
    \ ~= nil then\n                c = string.sub(c,1,1)\n            else\n     \
    \           c = string.upper(c)\n            end\n            s = string.sub(s,i,i-1)\
    \ .. c .. string.sub(s,i+1,#s)\n        end\n    end\n    return s\nend\nprint(solve(\"\
    \ Hello World! \"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"Hello!\"))\nprint(solve(\"Hello!!\"\
    ))\nprint(solve(\"Hello!! World!\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"\
    Hello!! World\"))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"Hello!! World\"\
    ))\nprint(solve(\"Hello!! World\"))\nprint(solve(\"", "    local str = \"\"\n\
    \    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                str = str .. tolower(s[i])\n            else\n       \
    \         str = str .. s[i]\n            end\n        end\n    end\n    return\
    \ str\nend\nprint(solve(\"Hello\"))\nprint(solve(\"HELLO\"))\nprint(solve(\"hello\"\
    ))\nprint(solve(\"HellO\"))\nprint(solve(\"hELLO\"))\nprint(solve(\"hEllo\"))\n\
    print(solve(\"hEllo\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"\
    hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"\
    ))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\n\
    print(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"\
    hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"\
    ))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\n\
    print(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"\
    hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"\
    ))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\n\
    print(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"\
    hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"\
    ))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\n\
    print(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"\
    hEllO\"))\nprint(solve(\"hEllO\"))\nprint(solve(\"hEll", "    local result = \"\
    \"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] ==\
    \ toupper(s[i]) then\n                result = result .. tolower(s[i])\n     \
    \       else\n                result = result .. s[i]\n            end\n     \
    \   else\n            result = result .. s[i]\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   result = string.sub(s,i,i)\n        end\n    end\n    return result\nend",
  "  -- Your code here\nend", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n       \
    \         result = result .. tolower(s[i])\n            else\n               \
    \ result = result .. s[i]\n            end\n        else\n            result =\
    \ result .. s[i]\n        end\n    end\n    return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ ~= \" \" then\n                if s[i] == \"a\" then\n                    result\
    \ = result .. \"A\"\n                elseif s[i] == \"b\" then\n             \
    \       result = result .. \"B\"\n                elseif s[i] == \"c\" then\n\
    \                    result = result .. \"C\"\n                elseif s[i] ==\
    \ \"d\" then\n                    result = result .. \"D\"\n                elseif\
    \ s[i] == \"e\" then\n                    result = result .. \"E\"\n         \
    \       elseif s[i] == \"f\" then\n                    result = result .. \"F\"\
    \n                elseif s[i] == \"g\" then\n                    result = result\
    \ .. \"G\"\n                elseif s[i] == \"h\" then\n                    result\
    \ = result .. \"H\"\n                elseif s[i] == \"i\" then\n             \
    \       result = result .. \"I\"\n                elseif s[i] == \"j\" then\n\
    \                    result = result .. \"J\"\n                elseif s[i] ==\
    \ \"k\" then\n                    result = result .. \"K\"\n                elseif\
    \ s[i] == \"l\" then\n                    result = result .. \"L\"\n         \
    \       elseif s[i] == \"m\" then\n                    result = result .. \"M\"\
    \n                elseif s[i] == \"n\" then\n                    result = result\
    \ .. \"N\"\n                elseif s[i] == \"o\" then\n                    result\
    \ = result .. \"O\"\n                elseif s[i] == \"p\" then\n             \
    \       result = result .. \"P\"\n                elseif s[i] == \"q\" then\n\
    \                    result = result .. \"Q\"\n                elseif s[i] ==\
    \ \"r\" then\n                    result = result .. \"R\"\n                elseif\
    \ s[i] == \"s\" then\n                    result = result .. \"S\"\n         \
    \       elseif s[i] == \"t\" then\n                    result = result .. \"T\"\
    \n                elseif s[i] == \"u\" then\n                    result = result\
    \ .. \"U\"\n                elseif s[i] == \"v\" then\n                    result\
    \ = result .. \"V\"\n                elseif s[i] == \"w\" then\n             \
    \       result = result .. \"W\"\n                elseif s[i] == \"x\" then\n\
    \                    result = result .. \"X\"\n                elseif s[i] ==\
    \ \"y\" then\n                    result = result .. \"Y\"\n                elseif\
    \ s[i] == \"z\" then\n                    result = result .. \"Z\"\n         \
    \       else\n                    result = result .. s[i]\n                end\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    for i = 1, #s do\n        if string.find(string.upper(s), string.sub(s,i,i))\
    \ == nil then\n            s = string.upper(string.sub(s,i,i))\n        else\n\
    \            s = string.lower(string.sub(s,i,i))\n        end\n    end\n    return\
    \ s\nend", "    local s = s:lower()\n    local result = \"\"\n    for i = 1, #s\
    \ do\n        if s[i] ~= nil then\n            if s[i] == s[i] then\n        \
    \        s = s:upper()\n            else\n                s = s:lower()\n    \
    \        end\n        end\n        result = result .. s[i]\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        local\
    \ char = s[i]\n        if char >= 'a' and char <= 'z' then\n            char =\
    \ char - 'a'\n        elseif char >= 'A' and char <= 'Z' then\n            char\
    \ = char - 'A'\n        else\n            char = s[i]\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend\nprint(solve(\"Hello\"))\n\
    print(solve(\"hello\"))\nprint(solve(\"HELLO\"))\nprint(solve(\"hELLO\"))\nprint(solve(\"\
    hEllO\"))\nprint(solve(\"hEllo\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"\
    ))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\n\
    print(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"\
    heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"\
    ))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\n\
    print(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"\
    heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"\
    ))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\n\
    print(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"\
    heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"\
    ))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\n\
    print(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"\
    heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"\
    ))\nprint(solve(\"heLlo\"))\nprint(solve(\"heLlO\"))\nprint(solve(\"heLlo\"))\n\
    print(solve(\"heLlO\"))", "  -- Your code here\n  local result = ''\n  for i =\
    \ 1, #s do\n    if string.sub(s,i,i) ~= nil then\n      if string.sub(s,i,i) ~=\
    \ string.sub(s,i,i) then\n        result = result .. string.sub(s,i,i)\n     \
    \ else\n        result = result .. string.sub(s,i,i)\n      end\n    else\n  \
    \    result = result .. string.sub(s,i,i)\n    end\n  end\n  return result\nend",
  "    local s = string.lower(s)\n    local result = \"\"\n    for i = 1, #s do\n\
    \        if string.find(string.char(string.byte(s[i])), \"a\") then\n        \
    \    local temp = string.sub(s,i,i)\n            temp = string.upper(temp)\n \
    \           temp = string.sub(temp, 1, #temp-1)\n            result = result ..\
    \ temp\n        else\n            result = result .. s[i]\n        end\n    end\n\
    \    return string.lower(result)\nend\nprint(solve(\"Hello\"))\nprint(solve(\"\
    hello\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"\
    Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World!\
    \ A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\n\
    print(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"\
    Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World!\
    \ A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\n\
    print(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"\
    Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World!\
    \ A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\n\
    print(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"\
    Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World!\
    \ A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\n\
    print(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"\
    Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World!\
    \ A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\n\
    print(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"\
    Hello World! A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World!\
    \ A\"))\nprint(solve(\"Hello World! A\"))\nprint(solve(\"Hello World! A", "  \
    \  local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~=\
    \ nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n     \
    \           result = result .. string.sub(s,i,i)\n            else\n         \
    \       result = result .. string.sub(s,i,i)\n            end\n        else\n\
    \            result = result .. string.sub(s,i,i)\n        end\n    end\n    return\
    \ result\nend\nprint(solve(\"Hello\"))\nprint(solve(\"hello\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World! \"\
    ))\nprint(solve(\"Hello World! !\"))\nprint(solve(\"Hello World! ! \"))\nprint(solve(\"\
    Hello World! ! !\"))\nprint(solve(\"Hello World! ! ! !\"))\nprint(solve(\"Hello\
    \ World! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! !\"\
    ))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World!\
    \ ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! !\
    \ !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! !\
    \ ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! !\
    \ !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! !\
    \ ! ! !\"))\nprint(solve(\"Hello World! ", "    local s = string.lower(s)\n  \
    \  local n = #s\n    local result = \"\"\n    for i = 1, n do\n        if s[i]\
    \ ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ == 1 then\n                result = result .. string.upper(s[i])\n         \
    \   else\n                result = result .. s[i]\n            end\n        else\n\
    \            result = result .. s[i]\n        end\n    end\n    return result\n\
    end\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! !\"))\nprint(solve(\"Hello World!\
    \ ! \"))\nprint(solve(\"Hello World! ! !\"))\nprint(solve(\"Hello World! ! ! !\"\
    ))\nprint(solve(\"Hello World! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! !\
    \ !\"))\nprint(solve(\"Hello World! ! ! ! ! ! !\"))\nprint(solve(\"Hello World!\
    \ ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! !\
    \ ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! !\
    \ ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! !\
    \ !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"\
    Hello World! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ! ! ! ! ! ! !\"))\nprint(solve(\"Hello World! ! ! ! ! ! ! ! ! ! ! !\
    \ ! ! ! ! ", "    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~=\
    \ nil then\n            if s[i] == toupper(s[i]) then\n                result\
    \ = result .. tolower(s[i])\n            else\n                result = result\
    \ .. s[i]\n            end\n        end\n    end\n    return result\nend\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(", "    local result = \"\"\n    for i = 1, #s do\n   \
    \     if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i)\
    \ then\n                result = result .. string.sub(s,i,i)\n            else\n\
    \                result = result .. string.upper(string.sub(s,i,i))\n        \
    \    end\n        else\n            result = result .. string.sub(s,i,i)\n   \
    \     end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n\
    \            local c = string.upper(s[i])\n            if c ~= nil then\n    \
    \            result = result .. c\n            else\n                result =\
    \ result .. s[i]\n            end\n        else\n            result = result ..\
    \ s[i]\n        end\n    end\n    return string.lower(result)\nend", "    local\
    \ result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n         \
    \   if s[i] == toupper(s[i]) then\n                result = result .. tolower(s[i])\n\
    \            else\n                result = result .. s[i]\n            end\n\
    \        else\n            result = result .. s[i]\n        end\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    for i = 1, #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n          \
    \      result = result .. tolower(s[i])\n            else\n                result\
    \ = result .. s[i]\n            end\n        end\n    end\n    return result\n\
    end", "  -- Your code here\n  return s\nend", "  -- Your code here\nend", "  \
    \  local str = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil\
    \ then\n            str = str .. string.sub(s,i,i)\n        else\n           \
    \ str = str .. string.sub(s,i,i)\n        end\n    end\n    return str\nend",
  "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~=\
    \ \"\" then\n            local c = string.sub(s,i,i)\n            if string.find(c,\
    \ \"a\") == 1 then\n                c = string.upper(c)\n            elseif string.find(c,\
    \ \"A\") == 1 then\n                c = string.lower(c)\n            end\n   \
    \         result = result .. c\n        end\n    end\n    return result\nend",
  "  -- Your code here\n  \n  return s\nend", "    local result = \"\"\n    for i\
    \ = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        end\n    end\n\
    \    return result\nend", "    local s = string.lower(s)\n    local result = \"\
    \"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n         \
    \   local c = string.sub(s,i,i)\n            if string.find(c, \"a\") then\n \
    \               c = string.upper(c)\n            elseif string.find(c, \"A\")\
    \ then\n                c = string.lower(c)\n            end\n            result\
    \ = result .. c\n        end\n    end\n    return result\nend\nprint(solve(\"\
    abA\"))\nprint(solve(\"a\"))\nprint(solve(\"aA\"))\nprint(solve(\"aB\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aB", "    local str = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)==\"\
    a\" then\n            str = string.sub(s,i,i) + string.sub(s,i+1,i) + string.sub(s,i+2,i)\
    \ + str\n        else\n            str = string.sub(s,i,i) + str\n        end\n\
    \    end\n    return str\nend", "    local result = \"\"\n    for i = 1, #s do\n\
    \        if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n    \
    \            result = result .. tolower(s[i])\n            else\n            \
    \    result = result .. s[i]\n            end\n        end\n    end\n    return\
    \ result\nend\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World!\"))\n\
    print(solve(\"Hello World!!\"))\nprint(solve(\"Hello World!!!\"))\nprint(solve(\"\
    Hello World!!!!\"))\nprint(solve(\"Hello World!!!!!\"))\nprint(solve(\"Hello World!!!!!!\"\
    ))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\
    \ -- Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) --\
    \ Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should\
    \ print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print\
    \ Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print Hello\
    \ World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print Hello World!!!!!!!\n\
    print(solve(\"Hello World!!!!!!!\")) -- Should print Hello World!!!!!!!\nprint(solve(\"\
    Hello World!!!!!!!\")) -- Should print Hello World!!!!!!!\nprint(solve(\"Hello\
    \ World!!!!!!!\")) -- Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\"\
    )) -- Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) --\
    \ Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should\
    \ print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print\
    \ Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print Hello\
    \ World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print Hello World!!!!!!!\n\
    print(solve(\"Hello World!!!!!!!\")) -- Should print Hello World!!!!!!!\nprint(solve(\"\
    Hello World!!!!!!!\")) -- Should print Hello World!!!!!!!\nprint(solve(\"Hello\
    \ World!!!!!!!\")) -- Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\"\
    )) -- Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) --\
    \ Should print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should\
    \ print Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print\
    \ Hello World!!!!!!!\nprint(solve(\"Hello World!!!!!!!\")) -- Should print Hello\
    \ World!!!!!!!", "    local result = \"\"\n    for i = 1, #s do\n        if s[i]\
    \ ~= nil then\n            if s[i] ~= \" \" then\n                if s[i] >= 'a'\
    \ and s[i] <= 'z' then\n                    result = result .. toupper(s[i])\n\
    \                else\n                    result = result .. tolower(s[i])\n\
    \                end\n            end\n        end\n    end\n    return result\n\
    end", "  -- Your code here\nend", "    local s = string.lower(s)\n    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) then\n                result = result .. string.upper(s[i])\n\
    \            else\n                result = result .. string.lower(s[i])\n   \
    \         end\n        else\n            result = result .. s[i]\n        end\n\
    \    end\n    return result\nend\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World!\
    \ \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"\
    Hello World! \"))\nprint(solve(\"Hello World! \"))\nprint(solve(\"Hello World",
  "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~=\
    \ nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n     \
    \           result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i)) + result\n            end\n        else\n\
    \            result = string.upper(string.sub(s,i,i)) + result\n        end\n\
    \    end\n    return result\nend", "    local s = s:lower()\n    local result\
    \ = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n            if s[i]\
    \ == s[i] then\n                s = s:upper()\n            else\n            \
    \    s = s:lower()\n            end\n        end\n        result = result .. s[i]\n\
    \    end\n    return result\nend", "    local s = string.lower(s)\n    local result\
    \ = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= \"\" then\n  \
    \          local c = string.sub(s,i,i)\n            if string.find(c, \"a\") then\n\
    \                c = string.upper(c)\n            else\n                c = string.lower(c)\n\
    \            end\n            result = result .. c\n        else\n           \
    \ result = result .. string.sub(s,i,i)\n        end\n    end\n    return result\n\
    end\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))", "    local result = \"\"\n    for i = 1, #s do\n        if\
    \ s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n              \
    \  result = result .. tolower(s[i])\n            else\n                result\
    \ = result .. s[i]\n            end\n        end\n    end\n    return result\n\
    end\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"\
    Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"\
    ))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!\"))\nprint(", " \
    \ -- Your code here\n  local result = ''\n  for i = 1, #s do\n    if string.sub(s,i,i)\
    \ = 'a' then\n      result = string.sub(s,i,i)..string.sub(s,i,i+1)..result\n\
    \    else\n      result = string.sub(s,i,i)..result\n    end\n  end\n  return\
    \ result\nend", "    local s = string.lower(s)\n    local s = string.upper(s)\n\
    \    local s = string.gsub(s, \"%l\", string.upper)\n    local s = string.gsub(s,\
    \ \"%U\", string.lower)\n    return s\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        end\n    end\n\
    \    return result\nend\nprint(solve(\"hello\"))\nprint(solve(\"HELLO\"))\nprint(solve(\"\
    hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"hello\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"\
    ))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\n\
    print(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"\
    Hello\"))\nprint(solve(\"HellO\"))\nprint(solve(\"Hello\"))\nprint(solve(\"",
  "    local result = \"\"\n    for i = 1, #s do\n        local char = s[i]\n    \
    \    if char >= \"a\" and char <= \"z\" then\n            char = char - \"a\"\n\
    \        elseif char >= \"A\" and char <= \"Z\" then\n            char = char\
    \ - \"A\"\n        else\n            char = s[i]\n        end\n        result\
    \ = result .. char\n    end\n    return result\nend", "    local result = \"\"\
    \n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n           \
    \ if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result = string.sub(s,i,i)\n\
    \            else\n                result = string.upper(string.sub(s,i,i)) +\
    \ result\n            end\n        else\n            result = string.upper(string.sub(s,i,i))\
    \ + result\n        end\n    end\n    return result\nend", "    local result =\
    \ \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n     \
    \       if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                result\
    \ = string.sub(s,i,i)\n            end\n        end\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   result = string.upper(string.sub(s,i,i))\n        end\n    end\n    return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ ~= nil then\n            if string.sub(s,i,i) ~= string.sub(s,i,i) then\n  \
    \              result = string.sub(s,i,i)\n            else\n                result\
    \ = string.upper(string.sub(s,i,i))\n            end\n        else\n         \
    \   result = string.sub(s,i,i)\n        end\n    end\n    return result\nend",
  "    local s = string.lower(s)\n    local n = #s\n    if n == 0 then\n        return\
    \ s\n    end\n    local t = {}\n    for i = 1, n do\n        if s[i] ~= nil then\n\
    \            local c = string.upper(s[i])\n            if c ~= nil then\n    \
    \            table.insert(t, c)\n            else\n                table.insert(t,\
    \ s[i])\n            end\n        else\n            table.insert(t, s[i])\n  \
    \      end\n    end\n    return table.concat(t, \"\")\nend", "  -- your code here\n\
    end", "  -- Your code here\n  \n  return s\nend", "    local str = \"\"\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            str = str..string.sub(s,i,i)\n\
    \        else\n            str = str..string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend", "    local result = \"\"\n    for i = 1, #s do\n      \
    \  if s[i] ~= nil then\n            if s[i] == toupper(s[i]) then\n          \
    \      result = result .. tolower(s[i])\n            else\n                result\
    \ = result .. s[i]\n            end\n        end\n    end\n    return result\n\
    end", "    local result = \"\"\n    for i = 1, #s do\n        if s[i] ~= nil then\n\
    \            if s[i] >= 'a' and s[i] <= 'z' then\n                local upper\
    \ = s[i]:toupper()\n                local lower = s[i]:tolower()\n           \
    \     result = result .. upper\n                result = result .. lower\n   \
    \         else\n                result = result .. s[i]\n            end\n   \
    \     end\n    end\n    return result\nend", "    local s = string.lower(s)\n\
    \    for i = 1, #s do\n        if s[i] ~= nil then\n            if string.find(string.upper(s[i]),\
    \ string.upper(s[i])) then\n                s[i] = string.upper(s[i])\n      \
    \      elseif string.find(string.lower(s[i]), string.lower(s[i])) then\n     \
    \           s[i] = string.lower(s[i])\n            end\n        end\n    end\n\
    \    return s\nend", "    local s = string.lower(s)\n    for i = 1, #s do\n  \
    \      if s[i] ~= nil then\n            if string.find(string.upper(s[i]), string.upper(s[i]))\
    \ == 1 then\n                s[i] = string.upper(s[i])\n            elseif string.find(string.upper(s[i]),\
    \ string.lower(s[i])) == 1 then\n                s[i] = string.lower(s[i])\n \
    \           end\n        end\n    end\n    return s\nend\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World!\"))\nprint(solve(\"Hello World!!\"))\n\
    print(solve(\"Hello World!!!\"))\nprint(solve(\"Hello World!!!!\"))\nprint(solve(\"\
    Hello World!!!!!\"))\nprint(solve(\"Hello World!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\")) \nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World!!!!!!!\"))\nprint(solve(\"Hello\
    \ World!!!!!!!\"))\nprint(solve(\"Hello World", "    local s = string.lower(s)\n\
    \    local n = #s\n    local i = 0\n    while i < n do\n        if s[i] ~= nil\
    \ then\n            if s[i] ~= 'a' and s[i] ~= 'e' and s[i] ~= 'i' and s[i] ~=\
    \ 'o' and s[i] ~= 'u' then\n                s[i] = string.upper(s[i])\n      \
    \      else\n                s[i] = string.lower(s[i])\n            end\n    \
    \    end\n        i = i + 1\n    end\n    return s\nend", "    local result =\
    \ \"\"\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n     \
    \       if string.sub(s,i,i) ~= string.sub(s,i,i) then\n                local\
    \ upper = string.upper(string.sub(s,i,i))\n                local lower = string.lower(string.sub(s,i,i))\n\
    \                result = result .. lower .. upper\n            else\n       \
    \         result = result .. string.sub(s,i,i)\n            end\n        else\n\
    \            result = result .. string.sub(s,i,i)\n        end\n    end\n    return\
    \ result\nend\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello\
    \ World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"\
    Hello World\"))\nprint(solve(\"Hello World\"))\nprint(solve(\"Hello World\"))\n\
    print(", "    local s = string.lower(s)\n    local result = \"\"\n    for i =\
    \ 1, #s do\n        if string.find(string.upper(s), string.upper(s[i])) then\n\
    \            result = result .. string.upper(s[i])\n        else\n           \
    \ result = result .. s[i]\n        end\n    end\n    return result\nend\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\n\
    print(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"aBc\"))\nprint(solve(\"\
    aBc\"))\n", "    local s = string.lower(s)\n    local result = \"\"\n    for i\
    \ = 1, #s do\n        if string.sub(s,i,i) ~= nil then\n            if string.sub(s,i,i)\
    \ ~= string.sub(s,i,i) then\n                result = result .. string.sub(s,i,i)\n\
    \            else\n                result = result .. string.sub(s,i,i)\n    \
    \        end\n        else\n            result = result .. string.sub(s,i,i)\n\
    \        end\n    end\n    return string.lower(result)\nend\nprint(solve(\"hello\"\
    ))\nprint(solve(\"HELLO\"))\nprint(solve(\"HELLO WORLD\"))\nprint(solve(\"HELLO\
    \ WORLD HELLO\"))\nprint(solve(\"HELLO WORLD HELLO WORLD\"))\nprint(solve(\"HELLO\
    \ WORLD HELLO WORLD HELLO\"))\nprint(solve(\"HELLO WORLD HELLO WORLD HELLO WORLD\"\
    ))\nprint(solve(\"HELLO WORLD HELLO WORLD HELLO WORLD HELLO\"))\nprint(solve(\"\
    HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD\"))\nprint(solve(\"HELLO WORLD\
    \ HELLO WORLD HELLO WORLD HELLO WORLD HELLO\"))\nprint(solve(\"HELLO WORLD HELLO\
    \ WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD\
    \ HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO\
    \ WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD\
    \ HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO\
    \ WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD\
    \ HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD HELLO WORLD ", " \
    \   local s = string.lower(s)\n    local s = string.upper(s)\n    local s = string.gsub(s,\
    \ \".\", function (c)\n        if string.find(string.lower(c), string.upper(c))\
    \ then\n            return string.upper(c)\n        else\n            return string.lower(c)\n\
    \        end\n    end)\n    return s\nend", "    local result = \"\"\n    for\
    \ i = 1, #s do\n        if s[i] ~= nil then\n            if s[i] == toupper(s[i])\
    \ then\n                result = result .. tolower(s[i])\n            else\n \
    \               result = result .. s[i]\n            end\n        end\n    end\n\
    \    return result\nend", "    local str = \"\"\n    for i = 1, #s do\n      \
    \  if string.sub(s,i,i) ~= nil then\n            str = str .. string.sub(s,i,i)\n\
    \        else\n            str = str .. string.sub(s,i,i)\n        end\n    end\n\
    \    return str\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

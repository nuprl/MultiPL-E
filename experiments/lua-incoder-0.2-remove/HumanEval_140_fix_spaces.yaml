name: HumanEval_140_fix_spaces
language: lua
prompt: "-- Given a string text, replace all spaces in it with underscores, \n-- and\
  \ if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
  \ spaces with -\nlocal function fix_spaces(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
  \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
  \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
  \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
  \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\",\"_\")\n  if spaces:gsub(\"  +\",\"_\"):gsub(\"_+\",\"_\"):gsub(\"_+_\"\
    ,\"_\"):gsub(\"_+_+\",\"_\"):gsub(\"_+_+_\",\"_\"):gsub(\"_+_+_+\",\"_\"):gsub(\"\
    _+_+_+_\",\"_\"):gsub(\"_+_+_+_+_\",\"_\"):gsub(\"_+_+_+_+_+\",\"_\"):gsub(\"\
    _+_+_+_+_+_\",\"_\"):gsub(\"_+_+_+_+_+_+\",\"_\"):gsub(\"_+_+_+_+_+_+_\",\"_\"\
    ):gsub(\"_+_+_+_+_+_+_+\",\"_\"):gsub(\"_+_+_+_+_+_+_+_\",\"_\"):gsub(\"_+_+_+_+_+_+_+_+\"\
    ,\"_\"):gsub(\"_+_+_+_+_+_+_+_+_\",\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+\",\"_\"):gsub(\"\
    _+_+_+_+_+_+_+_+_+_+\",\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+_+_\",\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+_+_+\"\
    ,\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+_+_+\",\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+_+_+_+\"\
    ,\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+_+_+_+_+\",\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+_+_+_+_+\"\
    ,\"_\"):gsub(\"_+_+_+_+_+_+_+_+_+_+_+_+", "  local spaces = text:gsub(\"  +\"\
    ,\"_\")\n  if spaces:gsub(\"  +\",\"_\") ~= spaces then\n    spaces = spaces:gsub(\"\
    \  +\",\"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\"\
    , \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"-\")\n\
    \  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n \
    \ local spaces = spaces:gsub(\"  +\", \"-\")\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    _+\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\"\
    , \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n \
    \ end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s)\
    \ return s:gsub(\"%S+\", function (s) return s .. \"_\" end) end)\n  if spaces:gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"%S+\"):gsub(\"\
    %S+\"):gsub(\"%S+", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~=\
    \ text then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "   \
    \ local spaces = text:gsub(\"  +\",\"_\")\n    local spaces_count = spaces:gsub(\"\
    _+\",\"-\")\n    return spaces_count .. spaces\nend", "  local spaces = text:gsub(\"\
    %S+\", function (s)\n    return s:gsub(\"%S+\", function (s2)\n      return s2:gsub(\"\
    %S+\", \"_\")\n    end)\n  end)\n  local spaces_count = spaces:gsub(\"%S+\", \"\
    %1\")\n  if spaces_count > 2 then\n    spaces = spaces:gsub(\"%S+\", \"-%S\")\n\
    \  end\n  return spaces\nend", "    local spaces = text:gsub(\"  +\", \"_\")\n\
    \    local consecutive = text:gsub(\"  +\", \"_\")\n    if spaces ~= consecutive\
    \ then\n        return text:gsub(\"  +\", \"-\")\n    end\n    return text\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  local spaces_count = spaces:gsub(\"  +\", \"_\"\
    ):gsub(\"_+$\", \"\")\n  if spaces_count > 2 then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%s+\"\
    , \"_\")\n  local consecutive = text:gsub(\"%s+\", \"-\"..spaces)\n  if consecutive\
    \ ~= spaces then\n    return consecutive\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\",\"_\")\n  local consecutive = text:gsub(\"  +\",\"\
    -\")\n  if spaces ~= consecutive then\n    return spaces\n  else\n    return consecutive\n\
    \  end\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces\
    \ = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", function (s) return\
    \ s .. \"_\" end) end)\n  local consecutive = text:gsub(\"%S+\", function (s)\
    \ return s:gsub(\"%S+\", function (s) return s .. \"-\" end) end)\n  return spaces\
    \ .. consecutive\nend", "  local spaces = text:gsub(\"  +\",\"_\")\n  if spaces\
    \ ~= text then\n    spaces = text:gsub(\"  +\",\"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\",\"_\")\n  local spaces = spaces:gsub(\"\
    \  +\",\"-\")\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function\
    \ (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"%S+\", \"_\")\n  end\n  return spaces\nend", "    local spaces\
    \ = text:gsub(\"  +\", \"_\")\n    if spaces:gsub(\"  +\", \"_\") ~= spaces then\n\
    \        spaces = spaces:gsub(\"  +\", \"-\")\n    end\n    return spaces\nend",
  "    local spaces = text:gsub(\"%S+\", function (s)\n        return s:gsub(\"%S+\"\
    , function (s2)\n            return s2:gsub(\"%S+\", \"-\")\n        end)\n  \
    \  end)\n    if spaces ~= text then\n        return spaces\n    end\nend", " \
    \ local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \"_\") end)\n  if spaces\
    \ ~= text then\n    spaces = spaces:gsub(\"_+\", \"-\")\n  end\n  return spaces\n\
    end", "    local spaces = text:gsub(\"%S+\", function (s)\n        return s:gsub(\"\
    %S+\", function (s2)\n            return s2:gsub(\"%S+\", \"_\")\n        end)\n\
    \    end)\n    local spaces_count = spaces:gsub(\"%S+\", \"%S\"):gsub(\"%S+\"\
    , \"%S\")\n    if spaces_count > 2 then\n        spaces = spaces:gsub(\"%S+\"\
    , \"-%S\")\n    end\n    return spaces\nend", "  local spaces = text:gsub(\"%s+\"\
    , \" \")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"%s+\", \"_\")\n\
    \  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s)\n\
    \    return s:gsub(\"%S+\", function (s2)\n      return s2:gsub(\"%S+\", \"_\"\
    )\n    end)\n  end)\n  if spaces:gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\") ~= spaces then\n    return text:gsub(\"%S+\", \"_\")\n  else\n \
    \   return text:gsub(\"%S+\", \"_\")\n  end\nend", "  local spaces = text:gsub(\"\
    \  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%s+\", \" \")\n\
    \  if spaces ~= \"\" then\n    spaces = spaces:gsub(\"( +)\", \"-\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces\
    \ ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\",\"_\")\n  if spaces:gsub(\"  +\",\"_\") ~= spaces\
    \ then\n    spaces = spaces:gsub(\"  +\",\"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"_+\") ~= spaces then\n    spaces\
    \ = spaces:gsub(\"_\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n\
    \  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n \
    \ return spaces\nend", "  local spaces = text:gsub(\"  +\",\"_\")\n  if spaces\
    \ ~= text then\n    spaces = text:gsub(\"  +\",\"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\",\"_\")\n  local spaces_count = spaces:gsub(\"\
    _+\",\"-\")\n  return spaces_count > 2 ? spaces:gsub(\"_\",\"-\"):spaces \nend",
  "  local spaces = text:gsub(\"[ ]+\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"_+\", \"-\")\n  end\n  return spaces\nend", "    local spaces\
    \ = text:gsub(\"  +\", \"_\")\n    if spaces:gsub(\"  +\", \"_\") ~= spaces then\n\
    \        spaces = spaces:gsub(\"  +\", \"-\")\n    end\n    return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~=\
    \ spaces then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\",\"_\")\n  if spaces ~= text then\n \
    \   spaces = spaces:gsub(\"  +\",\"-\")\n  end\n  return spaces\nend", "    local\
    \ spaces = text:gsub(\"  +\", \"_\")\n    local spaces = spaces:gsub(\"  +\",\
    \ \"-\")\n    return spaces\nend", "  local spaces = text:gsub(\"%S+\", function\
    \ (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces ~= text then\n    return\
    \ text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \"-\") end)\n  else\n\
    \    return text\n  end\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n \
    \ if spaces:gsub(\"  +\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\" \
    \ +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\"\
    ,\"_\")\n  local spaces_count = spaces:gsub(\"  +\",\"-\"):gsub(\"_+\",\"-\")\n\
    \  if spaces_count > 2 then\n    spaces = spaces:gsub(\"  +\",\"-\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"%s+\", \"_\")\n  local consecutive\
    \ = text:gsub(\"%s+\", \"-\"..spaces)\n  return consecutive\nend", "  local spaces\
    \ = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function (s2)\n\
    \      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  local spaces_count\
    \ = spaces:gsub(\"%S+\", \"%S\"):gsub(\"%S+\", \"%S\"):gsub(\"%S+\", \"%S\")\n\
    \  if spaces_count > 2 then\n    spaces = spaces:gsub(\"%S+\", \"-%S\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s) return\
    \ s:gsub(\"%S+\", \" \") end)\n  if spaces ~= text then\n    return text:gsub(\"\
    %S+\", function (s) return s:gsub(\"%S+\", \"-\") end)\n  else\n    return text\n\
    \  end\nend", "  local spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"\
    %S+\", function (s) return s .. \"_\" end) end)\n  if spaces:gsub(\"%S+\", function\
    \ (s) return s:gsub(\"%S+\", function (s) return s .. \"-\" end) end) ~= spaces\
    \ then\n    return text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", function\
    \ (s) return s .. \"-\" end) end)\n  else\n    return text\n  end\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "    local spaces = text:gsub(\"\
    \  +\", \"_\")\n    local spaces_count = spaces:gsub(\"_+\", \"_\"):gsub(\"_\"\
    , \"-\")\n    if spaces_count > 2 then\n        spaces = spaces:gsub(\"_+\", \"\
    -\")\n    end\n    return spaces\nend", "  local spaces = text:gsub(\"[ ]+\",\
    \ \"_\")\n  if spaces:gsub(\"_+\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\"\
    _{2,}\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"\
    \  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n\
    \  local spaces_count = spaces:gsub(\"  +\", \"_\"):gsub(\"_+$\", \"\")\n  if\
    \ spaces_count > 1 then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"_+\") ~= spaces\
    \ then\n    spaces = spaces:gsub(\"_\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "    local spaces\
    \ = text:gsub(\"  +\",\"_\")\n    local consecutive = text:gsub(\"  +\",\"-\"\
    )\n    return spaces .. consecutive\nend", "  local spaces = text:gsub(\"  +\"\
    , \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n \
    \ end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s)\n\
    \    return s:gsub(\"%S+\", function (s2)\n      return s2:gsub(\"%S+\", \"_\"\
    )\n    end)\n  end)\n  if spaces ~= text then\n    return text:gsub(\"%S+\", function\
    \ (s)\n      return s:gsub(\"%S+\", function (s2)\n        return s2:gsub(\"%S+\"\
    , \"-\")\n      end)\n    end)\n  else\n    return text\n  end\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", function (s)\
    \ return s:gsub(\"%S+\", \"_\") end) end)\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"%S+\", \"_\")\n  end\n  return spaces\nend", "  local spaces\
    \ = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~= spaces then\n\
    \    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~= spaces\
    \ then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if spaces ~=\
    \ text then\n    return text:gsub(\"%S+\", function (s)\n      return s:gsub(\"\
    %S+\", function (s2)\n        return s2:gsub(\"%S+\", \"-\")\n      end)\n   \
    \ end)\n  end\n  return text\nend", "  local spaces = text:gsub(\"  +\", \"_\"\
    )\n  local spaces_count = text:gsub(\"  +\", \"_\"):gsub(\"_+\", \"_\")\n  if\
    \ spaces_count > 2 then\n    spaces = text:gsub(\"  +\", \"_\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"%s+\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = spaces:gsub(\"_+\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"%s+\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"_+\", \"-\")\n  end\n  return spaces\nend", "  local spaces\
    \ = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\",\"_\")\n\
    \  local consecutive = text:gsub(\"  +\",\"-\")\n  if spaces ~= consecutive then\n\
    \    return spaces\n  else\n    return consecutive\n  end\nend", "  local spaces\
    \ = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces\
    \ ~= text then\n    return text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\"\
    , \"-\") end)\n  else\n    return text\n  end\nend", "  local spaces = text:gsub(\"\
    \  +\",\"_\")\n  if spaces:gsub(\"_+\",\"_\") ~= spaces then\n    spaces = spaces:gsub(\"\
    _\",\"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\"\
    , \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n \
    \ end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s)\
    \ return s:gsub(\"%S+\", function (s) return s .. \"_\" end) end)\n  if spaces:gsub(\"\
    %S+\", function (s) return s:gsub(\"%S+\", function (s) return s .. \"-\" end)\
    \ end) ~= spaces then\n    return text:gsub(\"%S+\", function (s) return s:gsub(\"\
    %S+\", function (s) return s .. \"-\" end) end)\n  else\n    return text\n  end\n\
    end", "  local spaces = text:gsub(\"  +\",\"_\")\n  local spaces_count = text:gsub(\"\
    \  +\",\"_\"):gsub(\"_+\",\"_\"):gsub(\"_+_\",\"_\")\n  if spaces_count > 2 then\n\
    \    spaces = text:gsub(\"  +\",\"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\"\
    , function (s)\n    return s:gsub(\"%S+\", function (s2)\n      return s2:gsub(\"\
    %S+\", \"_\")\n    end)\n  end)\n  if spaces ~= text then\n    return text:gsub(\"\
    %S+\", function (s)\n      return s:gsub(\"%S+\", function (s2)\n        return\
    \ s2:gsub(\"%S+\", \"-\")\n      end)\n    end)\n  end\n  return text\nend", " \
    \ local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "    local spaces = text:gsub(\"\
    \  +\", \"_\")\n    local spaces_count = spaces:gsub(\"_+\", \"_\"):gsub(\"_\"\
    , \"-\")\n    return spaces_count > 2 and spaces or text\nend", "  local spaces\
    \ = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"_+\") ~= spaces then\n    spaces\
    \ = spaces:gsub(\"_\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\",\"_\")\n  local consecutive = text:gsub(\"  +\",\"-\")\n  if spaces ~= consecutive\
    \ then\n    return spaces\n  else\n    return consecutive\n  end\nend", "  local\
    \ spaces = text:gsub(\"%s+\", \" \")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    %s+\", \"_\")\n    if spaces ~= text then\n      spaces = spaces:gsub(\"_+\",\
    \ \"-\")\n    end\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"\
    \  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n\
    \  if spaces:gsub(\"  +\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n\
    \  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n \
    \ return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"\
    _+\") ~= spaces then\n    spaces = spaces:gsub(\"_\", \"-\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces\
    \ = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"\
    -\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\"\
    )\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n \
    \ return spaces\nend", "  local spaces = text:gsub(\"  +\",\"_\")\n  if spaces:gsub(\"\
    _+\",\"_\") ~= spaces then\n    spaces = spaces:gsub(\"_\",\"-\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"%s+\", \"_\")\n  local consecutive = text:gsub(\"\
    %s+\", \"-\") == spaces\n  return spaces, consecutive\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"\
    -\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function\
    \ (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces:gsub(\"%S+\", \" \"):gsub(\"\
    %S+\", \"-\") == spaces then\n    return text\n  end\n  return text:gsub(\"%S+\"\
    , \"_\")\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\",\"_\")\n  if spaces:gsub(\"_+\",\"_\") ~= spaces\
    \ then\n    spaces = spaces:gsub(\"_\",\"-\")\n  end\n  return spaces\nend", " \
    \   local spaces = text:gsub(\"  +\", \"_\")\n    if spaces:gsub(\"_+\", \"_\"\
    ) ~= spaces then\n        spaces = spaces:gsub(\"_\", \"-\")\n    end\n    return\
    \ spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~=\
    \ spaces then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\",\"_\")\n  local consecutive = text:gsub(\"  +\",\"-\")\n  if spaces ~= consecutive\
    \ then\n    return spaces\n  else\n    return consecutive\n  end\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if spaces:gsub(\"\
    %S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\") ~= spaces then\n    return\
    \ text:gsub(\"%S+\", \"_\")\n  else\n    return text:gsub(\"%S+\", \"-\")\n  end\n\
    end", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\"\
    , function (s) return s:gsub(\"%S+\", \"_\") end)\n  if spaces ~= text then\n\
    \    spaces = spaces:gsub(\"_+\", \"-\")\n  end\n  return spaces\nend", "    local\
    \ spaces = text:gsub(\"  +\", \"_\")\n    local spaces_count = spaces:gsub(\"\
    \  +\", \"-\")\n    if spaces_count > 2 then\n        spaces = spaces:gsub(\"\
    \  +\", \"-\")\n    end\n    return spaces\nend", "  local spaces = text:gsub(\"\
    %S+\", function (s)\n    return s:gsub(\"%S+\", function (s2)\n      return s2:gsub(\"\
    %S+\", \"_\")\n    end)\n  end)\n  local spaces_count = spaces:gsub(\"%S+\", \"\
    %1\")\n  if spaces_count ~= spaces_count then\n    spaces = spaces:gsub(\"%S+\"\
    , \"-%S\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\"\
    , \"_\")\n  if spaces:gsub(\"_+\") ~= spaces then\n    spaces = spaces:gsub(\"\
    _\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\"\
    , function (s)\n    return s:gsub(\"%S+\", function (s2)\n      return s2:gsub(\"\
    %S+\", \"_\")\n    end)\n  end)\n  if spaces ~= text then\n    return text:gsub(\"\
    %S+\", function (s)\n      return s:gsub(\"%S+\", function (s2)\n        return\
    \ s2:gsub(\"%S+\", \"-\")\n      end)\n    end)\n  else\n    return text\n  end\n\
    end", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (t)\n      return t:gsub(\"%S+\", \"-\")\n    end)\n  end)\n  if spaces:gsub(\"\
    %S+\", \"%S-\") ~= spaces then\n    return text\n  else\n    return spaces:gsub(\"\
    %S-\", \"%S+\")\n  end\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if\
    \ spaces:gsub(\"  +\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\"  +\"\
    , \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"\
    _\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s) return\
    \ s:gsub(\"%S+\", function (s) return s .. \"_\" end) end)\n  if spaces ~= text\
    \ then\n    return text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", function\
    \ (s) return s .. \"-\" end) end)\n  end\n  return text\nend", "    local spaces\
    \ = text:gsub(\"  +\", \"_\")\n    local consecutive = text:gsub(\"  +\", \"_\"\
    )\n    if spaces ~= consecutive then\n        return text:gsub(\"  +\", \"-\"\
    )\n    end\n    return text\nend", "  local spaces = text:gsub(\"%S+\", function\
    \ (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"%S+\", \"_\")\n  end\n  return spaces\nend", "  local spaces\
    \ = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~= spaces then\n\
    \    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "   \
    \ local spaces = text:gsub(\"%S+\", function (s)\n        return s:gsub(\"%S+\"\
    , function (s2)\n            return s2:gsub(\"%S+\", \"_\")\n        end)\n  \
    \  end)\n    return spaces:gsub(\"%S+\", \"-\")\nend", "  local spaces = text:gsub(\"\
    \  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n\
    \  if spaces:gsub(\"  +\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\"\
    , function (s)\n    return s:gsub(\"%S+\", function (s2)\n      return s2:gsub(\"\
    %S+\", \"_\")\n    end)\n  end)\n  if spaces ~= text then\n    return text:gsub(\"\
    %S+\", function (s)\n      return s:gsub(\"%S+\", function (s2)\n        return\
    \ s2:gsub(\"%S+\", \"-\")\n      end)\n    end)\n  end\n  return text\nend", " \
    \   local spaces = text:gsub(\"  +\", \"_\")\n    local spaces = spaces:gsub(\"\
    \  +\", \"-\")\n    return spaces\nend", "  local spaces = text:gsub(\"  +\",\
    \ \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"-\")\n\
    \  end\n  return spaces\nend", "    local spaces = text:gsub(\"%S+\", function\
    \ (s) return s:gsub(\"%S+\", \" \") end)\n    local spaces = spaces:gsub(\"%S+\"\
    , \" -\")\n    return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\"\
    )\n  if spaces:gsub(\"  +\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"[ ]+\", \"_\")\n\
    \  if spaces ~= text then\n    spaces = spaces:gsub(\"_+\", \"-\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"\
    %S+\", \" \") end)\n  if spaces ~= text then\n    spaces = spaces:gsub(\"%S+\"\
    , \"_\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"\
    _\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n\
    \  return spaces\nend", "    local spaces = text:gsub(\"%S+\", function (s)\n\
    \        return s:gsub(\"%S+\", function (s2)\n            return s2:gsub(\"%S+\"\
    , \"_\")\n        end)\n    end)\n    if spaces:gsub(\"%S+\", \"_\"):gsub(\"%S+\"\
    , \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\") ~= spaces then\n        return\
    \ text:gsub(\"%S+\", \"_\")\n    end\n    return text\nend", "  local spaces =\
    \ text:gsub(\"  +\",\"_\")\n  if spaces:gsub(\"  +\",\"_\"):gsub(\"  +\",\"-\"\
    ) ~= spaces then\n    return spaces:gsub(\"  +\",\"-\")\n  else\n    return text\n\
    \  end\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  local consecutive\
    \ = text:gsub(\"  +\", \"_\")\n  if spaces ~= consecutive then\n    return text:gsub(\"\
    \  +\", \"-\")\n  else\n    return text\n  end\nend", "  local spaces = text:gsub(\"\
    \  +\",\"_\")\n  if spaces:gsub(\"  +\",\"_\"):gsub(\"_+\",\"_\"):gsub(\"_+_\"\
    ,\"_\") ~= spaces then\n    spaces = spaces:gsub(\"_+\",\"_\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"  +\",\"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\",\"-\")\n  end\n  return spaces\nend", " \
    \ local spaces = text:gsub(\"%s+\", \" \")\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"%s+\", \"_\")\n    if spaces ~= text then\n      spaces = spaces:gsub(\"\
    %s+\", \"-\")\n    end\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"\
    %S+\", function (s) return s:gsub(\"%S+\", function (s) return s .. \"_\" end)\
    \ end)\n  if spaces:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", function\
    \ (s) return s .. \"-\" end) end) ~= spaces then\n    return text:gsub(\"%S+\"\
    , function (s) return s:gsub(\"%S+\", function (s) return s .. \"-\" end) end)\n\
    \  else\n    return text\n  end\nend", "  local spaces = text:gsub(\"  +\", \"\
    _\")\n  local spaces_count = spaces:gsub(\"  +\", \"_\"):gsub(\"_+$\", \"\")\n\
    \  if spaces_count > 2 then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces\
    \ ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"\
    -\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\"\
    )\n  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces\
    \ ~= text then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"  +\",\"_\")\n  local spaces_count = spaces:gsub(\"\
    \  +\",\"-\"):gsub(\"_+\",\"-\")\n  if spaces_count > 2 then\n    spaces = spaces:gsub(\"\
    \  +\",\"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\"\
    , function (s) return s:gsub(\"%S+\", function (s2) return s2 .. \"_\" end) end)\n\
    \  if spaces:gsub(\"%S+\", \"%S-\") ~= spaces then\n    return text:gsub(\"%S+\"\
    , function (s) return s:gsub(\"%S+\", function (s2) return s2 .. \"-\" end) end)\n\
    \  end\n  return text\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if\
    \ spaces:gsub(\"  +\", \"_\") ~= spaces then\n    spaces = spaces:gsub(\"  +\"\
    , \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\", \"\
    _\")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function (s) return\
    \ s:gsub(\"%S+\", \"_\") end)\n  if spaces:gsub(\"%S+\", \"_\"):gsub(\"%S+\",\
    \ \"_\"):gsub(\"%S+\", \"_\") ~= spaces then\n    return text:gsub(\"%S+\", \"\
    _\")\n  else\n    return text\n  end\nend", "    local spaces = text:gsub(\"%S+\"\
    , function (s)\n        return s:gsub(\"%S+\", \"_\")\n    end)\n    local spaces_count\
    \ = spaces:gsub(\"%S+\", \"%1\")\n    if spaces_count > 2 then\n        spaces\
    \ = spaces:gsub(\"%S+\", \"-%S+\")\n    end\n    return spaces\nend", "    local\
    \ spaces = text:gsub(\"  +\", \"_\")\n    local consecutive = text:gsub(\"  +\"\
    , \"_\")\n    if spaces ~= consecutive then\n        return text:gsub(\"  +\"\
    , \"-\")\n    end\n    return text\nend", "  local spaces = text:gsub(\"  +\"\
    , \"_\")\n  if spaces:gsub(\"  +\", \"_\"):gsub(\"_+\", \"-\") == spaces then\n\
    \    return text\n  else\n    return text:gsub(\"  +\", \"-\")\n  end\nend", " \
    \ local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "    local spaces = text:gsub(\"\
    \  +\", \"_\")\n    local spaces_count = text:gsub(\"  +\", \"_\"):gsub(\"_+$\"\
    , \"\")\n    if spaces_count > 1 then\n        spaces = text:gsub(\"  +\", \"\
    -\")\n    end\n    return spaces\nend", "  local spaces = text:gsub(\"%S+\", function\
    \ (s) return s:gsub(\"%S+\", \" \") end)\n  if spaces:gsub(\"%S+\", \" \"):gsub(\"\
    %S+\", \" \"):gsub(\"%S+\", \" \") ~= spaces then\n    return text:gsub(\"%S+\"\
    , \" \"):gsub(\"%S+\", \" \"):gsub(\"%S+\", \" \")\n  else\n    return text\n\
    \  end\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces\
    \ = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function (s2)\n\
    \      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  local consecutive =\
    \ text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function (s2)\n\
    \      return s2:gsub(\"%S+\", \"-\")\n    end)\n  end)\n  return spaces .. consecutive\n\
    end", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n\
    \    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"  +\",\"_\")\n\
    \  local spaces_count = spaces:gsub(\"_+\",\"-\")\n  if spaces_count > 2 then\n\
    \    spaces = spaces:gsub(\"_+\",\"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", function (s)\
    \ return s .. \"_\" end) end)\n  if spaces:gsub(\"%S+\", function (s) return s:gsub(\"\
    %S+\", function (s) return s .. \"-\" end) end) ~= spaces then\n    return text:gsub(\"\
    %S+\", function (s) return s:gsub(\"%S+\", function (s) return s .. \"-\" end)\
    \ end)\n  else\n    return text\n  end\nend", "  local spaces = text:gsub(\"%s+\"\
    , \" \")\n  if spaces ~= text then\n    spaces = spaces:gsub(\"%s+\", \"_\")\n\
    \  end\n  return spaces\nend", "    local spaces = text:gsub(\"  +\",\"_\")\n\
    \    local spaces_count = spaces:gsub(\"_+\",\"-\")\n    return spaces_count >\
    \ 2 ? spaces:gsub(\"_\",\"-\") : spaces\nend", "    local spaces = text:gsub(\"\
    %S+\", function (s) return s:gsub(\"%S+\", function (s) return s .. \"_\" end)\
    \ end)\n    local spaces = spaces:gsub(\"%S+\", function (s) return s:gsub(\"\
    %S+\", function (s) return s .. \"-\" end) end)\n    return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\",\"_\")\n  if spaces:gsub(\"  +\",\"-\") ~= spaces\
    \ then\n    spaces = spaces:gsub(\"  +\",\"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"[ ]+\", \"_\")\n  if spaces:gsub(\"_+\", \"_\") ~=\
    \ spaces then\n    spaces = spaces:gsub(\"_\", \"-\")\n  end\n  return spaces\n\
    end", "    local spaces = text:gsub(\"  +\",\"_\")\n    local spaces = spaces:gsub(\"\
    \  +\",\"-\")\n    return spaces\nend", "  local spaces = text:gsub(\"  +\", \"\
    _\")\n  local consecutive = text:gsub(\"  +\", \"_\")\n  if spaces ~= consecutive\
    \ then\n    return text:gsub(\"  +\", \"-\")\n  else\n    return text\n  end\n\
    end", "  local spaces = text:gsub(\"%s+\", \"_\")\n  if spaces:gsub(\"%s+\", \"\
    _\") ~= spaces then\n    spaces = spaces:gsub(\"%s+\", \"-\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~= spaces then\n\
    \    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local\
    \ spaces = text:gsub(\"%S+\", function (s) return s:gsub(\"%S+\", \"_\") end)\n\
    \  if spaces ~= text then\n    spaces = spaces:gsub(\"_+\", \"-\")\n  end\n  return\
    \ spaces\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces\
    \ = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces =\
    \ text:gsub(\"  +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"\
    \  +\", \"-\")\n  end\n  return spaces\nend", "  local spaces = text:gsub(\" \
    \ +\", \"_\")\n  if spaces ~= text then\n    spaces = text:gsub(\"  +\", \"-\"\
    )\n  end\n  return spaces\nend", "  local spaces = text:gsub(\"%S+\", function\
    \ (s)\n    return s:gsub(\"%S+\", function (t)\n      return t:gsub(\"%S+\", \"\
    _\")\n    end)\n  end)\n  local spaces_count = spaces:gsub(\"%S+\", \"%1\")\n\
    \  if spaces_count > 2 then\n    spaces = spaces:gsub(\"%S+\", \"-%S\")\n  end\n\
    \  return spaces\nend", "  local spaces = text:gsub(\"  +\",\"_\")\n  if spaces\
    \ ~= \"\" then\n    spaces = text:gsub(\"  +\",\"-\")\n  end\n  return spaces\n\
    end", "  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"\
    %S+\", function (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n\
    \  if spaces:gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"%S+\", \"_\"):gsub(\"\
    %S+\", \"_\") ~= spaces then\n    return text:gsub(\"%S+\", \"_\")\n  else\n \
    \   return text\n  end\nend", "    local spaces = text:gsub(\"  +\",\"_\")\n \
    \   local spaces = spaces:gsub(\"  +\",\"-\")\n    return spaces\nend", "  local\
    \ spaces = text:gsub(\"  +\", \"_\")\n  if spaces:gsub(\"  +\", \"_\") ~= spaces\
    \ then\n    spaces = spaces:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend",
  "  local spaces = text:gsub(\"%S+\", function (s)\n    return s:gsub(\"%S+\", function\
    \ (s2)\n      return s2:gsub(\"%S+\", \"_\")\n    end)\n  end)\n  if spaces ~=\
    \ text then\n    return spaces:gsub(\"%S+\", \"-\")\n  else\n    return text\n\
    \  end\nend", "  local spaces = text:gsub(\"  +\", \"_\")\n  if spaces ~= text\
    \ then\n    spaces = text:gsub(\"  +\", \"-\")\n  end\n  return spaces\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

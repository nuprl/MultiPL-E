name: HumanEval_127_intersection
language: lua
prompt: "-- You are given two intervals,\n-- where each interval is a pair of integers.\
  \ For example, interval = (start, end) = (1, 2).\n-- The given intervals are closed\
  \ which means that the interval (start, end)\n-- includes both start and end.\n\
  -- For each given interval, it is assumed that its start is less or equal its end.\n\
  -- Your task is to determine whether the length of intersection of these two \n\
  -- intervals is a prime number.\n-- Example, the intersection of the intervals (1,\
  \ 3), (2, 4) is (2, 3)\n-- which its length is 1, which not a prime number.\n--\
  \ If the length of the intersection is a prime number, return \"YES\",\n-- otherwise,\
  \ return \"NO\".\n-- If the two intervals don't intersect, return \"NO\".\n-- [input/output]\
  \ samples:\nlocal function intersection(interval1, interval2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = intersection\n\
  \    lu.assertEquals(candidate({1, 2}, {2, 3}), 'NO')\n    lu.assertEquals(candidate({-1,\
  \ 1}, {0, 4}), 'NO')\n    lu.assertEquals(candidate({-3, -1}, {-5, 5}), 'YES')\n\
  \    lu.assertEquals(candidate({-2, 2}, {-4, 0}), 'YES')\n    lu.assertEquals(candidate({-11,\
  \ 2}, {-1, -1}), 'NO')\n    lu.assertEquals(candidate({1, 2}, {3, 5}), 'NO')\n \
  \   lu.assertEquals(candidate({1, 2}, {1, 2}), 'NO')\n    lu.assertEquals(candidate({-2,\
  \ -2}, {-3, -2}), 'NO')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = length / length2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif length\
    \ == 1 then\n\t\treturn true\n\tend\n\treturn false\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn start2, end2\n\t\t\telse\n\t\t\t\treturn start, end\n\t\t\tend\n\
    \t\telse\n\t\t\treturn start, end2\n\t\tend\n\telse\n\t\treturn start, end2\n\t\
    end\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2\
    \ = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tif length2\
    \ == 1 then\n\t\treturn {start = start, end = start + length}\n\tend\n\tlocal\
    \ prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 =\
    \ true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\t\
    local prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11\
    \ = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\
    \tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal\
    \ prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21\
    \ = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\
    \tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal\
    \ prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31\
    \ = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\
    \tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal\
    \ prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41\
    \ = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\
    \tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal\
    \ prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51\
    \ = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\
    \tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal\
    \ prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61\
    \ = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\
    \tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal\
    \ prime68 = true", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\t\n\tif start > end\
    \ or start2 > end2 then\n\t\treturn false\n\tend\n\t\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\t\n\tif length2 == 0 or length2 == 1 then\n\t\
    \treturn length == length2\n\tend\n\t\n\tlocal prime = true\n\t\n\tfor i = 2,\
    \ length2 do\n\t\tif length2 % i == 0 then\n\t\t\tprime = false\n\t\t\tbreak\n\
    \t\tend\n\tend\n\t\n\treturn prime\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length == length2 then\n\
    \t\treturn true\n\tend\n\treturn false\nend", "\tlocal start = interval1[1]\n\t\
    local end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return nil\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3\
    \ = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\
    \tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10\
    \ = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\
    \tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal\
    \ prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20\
    \ = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\
    \tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal\
    \ prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30\
    \ = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\
    \tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal\
    \ prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40\
    \ = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\
    \tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal\
    \ prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50\
    \ = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\
    \tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal\
    \ prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60\
    \ = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\
    \tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal\
    \ prime67 = true\n\tlocal prime68 = true\n\tlocal prime69 = true\n\tlocal prime70\
    \ = true\n\tlocal prime71 = ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = 0\n\
    \tif start <= end2 then\n\t\tlength = end2 - start\n\telse\n\t\tlength = end2\
    \ - start2\n\tend\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif start\
    \ <= end2 then\n\t\tlocal prime = true\n\t\tfor i = 2, length do\n\t\t\tif start\
    \ % i == 0 and end % i == 0 then\n\t\t\t\tprime = false\n\t\t\t\tbreak\n\t\t\t\
    end\n\t\tend\n\t\tif prime then\n\t\t\treturn \"YES\"\n\t\tend\n\tend\n\treturn\
    \ \"NO\"\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\t\
    local start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn length\n\tend\n\
    \tif length2 == 1 then\n\t\treturn length\n\tend\n\tlocal length3 = length2 /\
    \ 2\n\tlocal length4 = length3 / 2\n\tlocal length5 = length3 / 2\n\tlocal length6\
    \ = length3 / 2\n\tlocal length7 = length3 / 2\n\tlocal length8 = length3 / 2\n\
    \tlocal length9 = length3 / 2\n\tlocal length10 = length3 / 2\n\tlocal length11\
    \ = length3 / 2\n\tlocal length12 = length3 / 2\n\tlocal length13 = length3 /\
    \ 2\n\tlocal length14 = length3 / 2\n\tlocal length15 = length3 / 2\n\tlocal length16\
    \ = length3 / 2\n\tlocal length17 = length3 / 2\n\tlocal length18 = length3 /\
    \ 2\n\tlocal length19 = length3 / 2\n\tlocal length20 = length3 / 2\n\tlocal length21\
    \ = length3 / 2\n\tlocal length22 = length3 / 2\n\tlocal length23 = length3 /\
    \ 2\n\tlocal length24 = length3 / 2\n\tlocal length25 = length3 / 2\n\tlocal length26\
    \ = length3 / 2\n\tlocal length27 = length3 / 2\n\tlocal length28 = length3 /\
    \ 2\n\tlocal length29 = length3 / 2\n\tlocal length30 = length3 / 2\n\tlocal length31\
    \ = length3 / 2\n\tlocal length32 = length3 / 2\n\tlocal length33 = length3 /\
    \ 2\n\tlocal length34 = length3 / 2\n\tlocal length35 = length3 / 2\n\tlocal length36\
    \ = length3 / 2\n\tlocal length37 = length3 / 2\n\tlocal length38 = length3 /\
    \ 2\n\tlocal length39 = length3 / 2\n\tlocal length40 = length3 / 2\n\tlocal length41\
    \ = length3 / 2\n\tlocal length42 = length3 / 2\n\tlocal length43 = length3 /\
    \ 2\n\tlocal length44 = length3 / 2\n\tlocal length45 = length3 / 2\n\tlocal length46\
    \ = length", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1 -\
    \ start1 + end2 - start2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif start1\
    \ < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif start1 > end2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1,\
    \ end2 = end2, end1\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2,\
    \ start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1,\
    \ start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tlocal prime =\
    \ true\n\tlocal prime_length = 2\n\tlocal prime_start = start1\n\tlocal prime_end\
    \ = start2\n\tlocal prime_prime = true\n\tlocal prime_prime_length = 2\n\tlocal\
    \ prime_prime_start = start1\n\tlocal prime_prime_end = start2\n\tlocal prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_end = start2\n\tlocal prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_end = start2\n\tlocal prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_start = start1\n\tlocal prime_prime_prime_prime_end\
    \ = start2\n\tlocal prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_end = start2\n\tlocal prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_start = start1\n\tlocal prime_prime_prime_prime_end\
    \ = start2\n\tlocal prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_end = start2\n\tlocal prime_prime_prime_prime_length\
    \ = 2", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tif length2 ==\
    \ 1 then\n\t\treturn {start = start, end = start + length}\n\tend\n\tlocal prime\
    \ = true\n\tfor i = 2, length2 do\n\t\tif length2 % i == 0 then\n\t\t\tprime =\
    \ false\n\t\t\tbreak\n\t\tend\n\tend\n\tif prime then\n\t\treturn {start = start,\
    \ end = start + length}\n\tend\n\treturn nil\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn length\n\telseif length2 == 1 then\n\t\treturn length\n\t\
    elseif length2 == 2 then\n\t\tif start <= start2 then\n\t\t\treturn length\n\t\
    \telse\n\t\t\treturn length\n\t\tend\n\telse\n\t\tlocal m = (length2 + 1) >> 1\n\
    \t\tlocal a = interval1[1]\n\t\tlocal b = interval1[2]\n\t\tlocal c = interval2[1]\n\
    \t\tlocal d = interval2[2]\n\t\tlocal i = 1\n\t\tlocal j = 1\n\t\tlocal k = 1\n\
    \t\tlocal l = 1\n\t\tlocal m = m - 1\n\t\tlocal a = a - 1\n\t\tlocal b = b - 1\n\
    \t\tlocal c = c - 1\n\t\tlocal d = d - 1\n\t\twhile i <= m do\n\t\t\twhile j <=\
    \ m do\n\t\t\t\twhile k <= m do\n\t\t\t\t\twhile l <= m do\n\t\t\t\t\t\tif i ==\
    \ j then\n\t\t\t\t\t\t\tif k == l then\n\t\t\t\t\t\t\t\tif b > c then\n\t\t\t\t\
    \t\t\t\t\tif d > a then\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\t\
    else\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\
    \telse\n\t\t\t\t\t\t\t\t\tif c > d then\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\
    \t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\tend\n\
    \t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tif c > d then\n\t\t\t\
    \t\t\t\t\t\tif d > a then\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\
    \telse\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\
    \t\telse\n\t\t\t\t\t\t\t\t\tif b > c then\n\t\t\t\t\t\t\t\t\t\treturn length\n\
    \t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\t\
    end\n\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telseif i == k then\n\t\
    \t\t\t\t\t\tif j == l then\n\t\t\t\t\t\t\t\tif b > c then\n\t\t\t\t\t\t\t\t\t\
    if d > a then\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\telse\n\t\t\
    \t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\telse\n\t\
    \t\t\t\t\t\t\t\tif c > d then\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\
    \t\t\telse\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\
    \t\t\t\tend\n\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\tif c > d then\n\t\t\t\t\t\t\t\
    \t\tif d > a then\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\telse\n\
    \t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\telse\n\
    \t\t\t\t\t\t\t\t\tif b > c then\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\
    \t\t\t\telse\n\t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\
    \t\t\t\t\tend\n\t\t\t\t\t\t\tend\n\t\t\t\t\t\telseif i == l then\n\t\t\t\t\t\t\
    \tif j == k then\n\t\t\t\t\t\t\t\tif b > c then\n\t\t\t\t\t\t\t\t\tif d > a then\n\
    \t\t\t\t\t\t\t\t\t\treturn length\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\
    return length\n\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal lengthIntersection\
    \ = length1 + length2\n\tif lengthIntersection == 0 then\n\t\treturn nil\n\telseif\
    \ lengthIntersection == 1 then\n\t\treturn {start1, end1}\n\telseif lengthIntersection\
    \ == 2 then\n\t\treturn {start1, start2}\n\telse\n\t\tlocal prime = true\n\t\t\
    local primeNumber\n\t\tfor i = 2, lengthIntersection do\n\t\t\tif start1 + i ==\
    \ end1 then\n\t\t\t\tprime = false\n\t\t\t\tbreak\n\t\t\telseif start2 + i ==\
    \ end2 then\n\t\t\t\tprime = false\n\t\t\t\tbreak\n\t\t\telse\n\t\t\t\tprimeNumber\
    \ = i\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif prime then\n\t\t\treturn {start1\
    \ + primeNumber, end1 + primeNumber}\n\t\telse\n\t\t\treturn nil\n\t\tend\n\t\
    end\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1 -\
    \ start1 + end2 - start2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif start1\
    \ < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif end1 < end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime_length = 2\n\tlocal prime_start = start1\n\tlocal prime_end\
    \ = end1\n\tlocal prime_prime = true\n\tlocal prime_prime_length = 2\n\tlocal\
    \ prime_prime_start = start2\n\tlocal prime_prime_end = end2\n\tlocal prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start2\n\tlocal prime_prime_prime_prime_", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return true\n\tend\n\tif length2 == 1 then\n\t\treturn length == start2\n\tend\n\
    \tlocal length = length / length2\n\tlocal start = start * length2\n\tlocal end\
    \ = end * length2\n\tlocal start2 = start2 * length2\n\tlocal end2 = end2 * length2\n\
    \tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime6", "\tlocal start1 = interval1[1]\n\tlocal end1\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start1 <= end2 and start2 <= end1 then\n\t\treturn interval1[1], interval2[1]\n\
    \telse\n\t\treturn nil, nil\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ false\n\telse\n\t\tif start1 < start2 then\n\t\t\tstart1, start2 = start2, start1\n\
    \t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif end1 > end2 then\n\t\t\tend1, end2\
    \ = end2, end1\n\t\t\tstart1, start2 = start2, start1\n\t\tend\n\t\tif start1\
    \ < end2 then\n\t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start2 < end1 then\n\
    \t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start1 < end2 then\n\t\t\tend1,\
    \ end2 = end2, end1\n\t\tend\n\t\tif start2 < end1 then\n\t\t\tend1, end2 = end2,\
    \ end1\n\t\tend\n\t\tif start1 < end2 then\n\t\t\tend1, end2 = end2, end1\n\t\t\
    end\n\t\tif start2 < end1 then\n\t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif\
    \ start1 < end2 then\n\t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start2 <\
    \ end1 then\n\t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start1 < end2 then\n\
    \t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start2 < end1 then\n\t\t\tend1,\
    \ end2 = end2, end1\n\t\tend\n\t\tif start1 < end2 then\n\t\t\tend1, end2 = end2,\
    \ end1\n\t\tend\n\t\tif start2 < end1 then\n\t\t\tend1, end2 = end2, end1\n\t\t\
    end\n\t\tif start1 < end2 then\n\t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif\
    \ start2 < end1 then\n\t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start1 <\
    \ end2 then\n\t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start2 < end1 then\n\
    \t\t\tend1, end2 = end2, end1\n\t\tend\n\t\tif start1 < end2 then\n\t\t\tend1,\
    \ end2 = end2, end1\n\t\tend\n\t\tif start2 < end1 then\n\t\t\tend1, end2 = end2,\
    \ end1\n\t\tend\n\t\tif start1 < end2 then\n\t\t\tend1, end2 = end2, end1\n\t\t\
    end\n\t\tif start2 < end1 then\n\t\t\tend1, end2 = end2, end1", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start <= end and start2 <= end2 then\n\t\tlocal\
    \ length = end - start\n\t\tlocal length2 = end2 - start2\n\t\tif length == length2\
    \ then\n\t\t\tif start <= start2 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\
    \t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\tif length % length2 == 0 then\n\t\
    \t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\t\tend\n\t\
    else\n\t\treturn \"NO\"\n\tend\nend", "\tlocal interval1Start = interval1[1]\n\
    \tlocal interval1End = interval1[2]\n\tlocal interval2Start = interval2[1]\n\t\
    local interval2End = interval2[2]\n\tlocal intersectionStart = interval1Start\
    \ <= interval2Start and interval2Start <= interval1End\n\tlocal intersectionEnd\
    \ = interval1Start <= interval2End and interval2End <= interval1End\n\tlocal intersectionLength\
    \ = interval1End - interval1Start + interval2End - interval2Start\n\tlocal intersectionIsPrime\
    \ = intersectionLength == 2 or math.mod(intersectionLength, 2) == 0\n\treturn\
    \ intersectionStart, intersectionEnd, intersectionIsPrime\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\telseif start == end and start2 == end2 then\n\t\treturn \"YES\"\n\t\
    else\n\t\tlocal length = math.abs(end - start)\n\t\tlocal length2 = math.abs(end2\
    \ - start2)\n\t\tif length2 == 0 then\n\t\t\treturn \"NO\"\n\t\telseif length2\
    \ == 1 then\n\t\t\tif start <= start2 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\
    \t\t\t\treturn \"NO\"\n\t\t\tend\n\t\telse\n\t\t\tlocal count = 0\n\t\t\tlocal\
    \ count2 = 0\n\t\t\tlocal i = 1\n\t\t\tlocal j = 1\n\t\t\twhile i < length and\
    \ j < length2 do\n\t\t\t\tif start <= start2 and start2 <= end then\n\t\t\t\t\t\
    count = count + 1\n\t\t\t\telseif start2 <= start and start <= end2 then\n\t\t\
    \t\t\tcount2 = count2 + 1\n\t\t\t\telse\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\t\t\
    i = i + 1\n\t\t\t\tj = j + 1\n\t\t\tend\n\t\t\tif count == length and count2 ==\
    \ length2 then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\
    \tend\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ nil\n\telseif length2 == 1 then\n\t\treturn {start = start, end = end}\n\telse\n\
    \t\tlocal prime = math.ceil(math.sqrt(length2))\n\t\tlocal prime2 = math.ceil(math.sqrt(length))\n\
    \t\tlocal prime3 = math.ceil(math.sqrt(length + length2))\n\t\tif prime == prime2\
    \ then\n\t\t\tif prime == prime3 then\n\t\t\t\treturn nil\n\t\t\telse\n\t\t\t\t\
    return {start = start, end = start + prime}\n\t\t\tend\n\t\telse\n\t\t\tif prime\
    \ == prime3 then\n\t\t\t\treturn nil\n\t\t\telse\n\t\t\t\treturn {start = start,\
    \ end = start + prime}\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start = start,\
    \ end = start + length}\n\tend\n\tlocal prime = math.ceil(math.sqrt(length2))\n\
    \tlocal prime2 = math.ceil(math.sqrt(length))\n\tlocal prime3 = math.ceil(math.sqrt(length))\n\
    \tlocal prime4 = math.ceil(math.sqrt(length))\n\tlocal prime5 = math.ceil(math.sqrt(length))\n\
    \tlocal prime6 = math.ceil(math.sqrt(length))\n\tlocal prime7 = math.ceil(math.sqrt(length))\n\
    \tlocal prime8 = math.ceil(math.sqrt(length))\n\tlocal prime9 = math.ceil(math.sqrt(length))\n\
    \tlocal prime10 = math.ceil(math.sqrt(length))\n\tlocal prime11 = math.ceil(math.sqrt(length))\n\
    \tlocal prime12 = math.ceil(math.sqrt(length))\n\tlocal prime13 = math.ceil(math.sqrt(length))\n\
    \tlocal prime14 = math.ceil(math.sqrt(length))\n\tlocal prime15 = math.ceil(math.sqrt(length))\n\
    \tlocal prime16 = math.ceil(math.sqrt(length))\n\tlocal prime17 = math.ceil(math.sqrt(length))\n\
    \tlocal prime18 = math.ceil(math.sqrt(length))\n\tlocal prime19 = math.ceil(math.sqrt(length))\n\
    \tlocal prime20 = math.ceil(math.sqrt(length))\n\tlocal prime21 = math.ceil(math.sqrt(length))\n\
    \tlocal prime22 = math.ceil(math.sqrt(length))\n\tlocal prime23 = math.ceil(math.sqrt(length))\n\
    \tlocal prime24 = math.ceil(math.sqrt(length))\n\tlocal prime25 = math.ceil(math.sqrt(length))\n\
    \tlocal prime26 = math.ceil(math.sqrt(length))\n\tlocal prime27 = math.ceil(math.sqrt(length))\n\
    \tlocal prime28 = math.ceil(math.sqrt(length))\n\tlocal prime29 = math.ceil(math.sqrt(length))\n\
    \tlocal prime30 = math.ceil(math.sqrt(length))\n\tlocal prime31 = math.ceil(math.sqrt(length))\n\
    \tlocal prime32 = math.ceil(math.sqrt(length))\n\tlocal prime33 = math.ceil(math.sqrt(length))\n\
    \tlocal prime34 = math.ceil(math.sqrt(length))\n\tlocal prime35 = math.ceil(math.sqrt(length))\n\
    \tlocal prime36 = math.ceil(math.sqrt(length))\n\tlocal prime37 = math.ceil(math.sqrt(length))\n\
    \tlocal prime38 = math.ceil(math.sqrt(length))\n\tlocal prime39 = math.ceil(math.sqrt(length))\n\
    \tlocal prime40 = math.ceil(math.sqrt(length))\n\tlocal prime41 = math.ceil(math.sqrt(length",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn false\n\t\
    end\n\tif length1 < length2 then\n\t\tstart1, end1 = end1, start1\n\t\tstart2,\
    \ end2 = end2, start2\n\tend\n\tlocal length = end1 - start1\n\tif length == 1\
    \ then\n\t\treturn start1 <= end2 and start2 <= end1\n\tend\n\tlocal prime = true\n\
    \tlocal i = 2\n\twhile i < length1 do\n\t\tlocal j = start1 + i\n\t\tlocal k =\
    \ start2 + i\n\t\tif j > length2 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\t\
    end\n\t\tif k <= length2 then\n\t\t\tlocal flag = true\n\t\t\tfor j = start1 +\
    \ i, start2 + i do\n\t\t\t\tif j > length2 then\n\t\t\t\t\tflag = false\n\t\t\t\
    \t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif flag then\n\t\t\t\tprime = false\n\
    \t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn prime\nend",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1 + end2 - start2\n\t\
    if length == 0 then\n\t\treturn false\n\tend\n\tif start1 < start2 then\n\t\t\
    start1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1\
    \ > end2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif start1 == start2 then\n\t\treturn false\n\tend\n\tif start1 > end2\
    \ then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2\
    \ = end2, end1\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2,\
    \ start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 == start2 then\n\t\t\
    return false\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2\
    \ = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 == start2\
    \ then\n\t\treturn false\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2 =\
    \ start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ start1 == start2 then\n\t\treturn false\n\tend\n\tif start1 > end2 then\n\t\t\
    start1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1\
    \ < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif start1 == start2 then\n\t\treturn false\n\tend\n\tif start1 > end2\
    \ then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2\
    \ = end2, end1\n\tend\n\tif ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal\
    \ prime66 = true\n\tlocal prime67 = true\n\tlocal prime68 = true\n\tlocal prime69\
    \ = true\n\tlocal prime70 = true\n\tlocal prime71 = true\n\tlocal prime72 = true\n\
    \tlocal prime73 = true\n\tlocal prime74 = true\n\tlocal prime75 = true\n\tlocal ",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start <= end2 then\n\t\tif start <= end2 then\n\
    \t\t\tif start <= end2 then\n\t\t\t\tlocal length = end - start\n\t\t\t\tlocal\
    \ length2 = end2 - start2\n\t\t\t\tif length2 == 0 then\n\t\t\t\t\treturn length\n\
    \t\t\t\telse\n\t\t\t\t\tlocal flag = true\n\t\t\t\t\tfor i = 1, length2 do\n\t\
    \t\t\t\t\tif start % length2 == 0 then\n\t\t\t\t\t\t\tflag = false\n\t\t\t\t\t\
    \t\tbreak\n\t\t\t\t\t\tend\n\t\t\t\t\t\tstart = start + 1\n\t\t\t\t\tend\n\t\t\
    \t\t\tif flag then\n\t\t\t\t\t\treturn length\n\t\t\t\t\telse\n\t\t\t\t\t\treturn\
    \ 0\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn 0\n\t\t\tend\n\t\t\
    else\n\t\t\treturn 0\n\t\tend\n\telse\n\t\treturn 0\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = 0\n\tif start < end2 then\n\t\tlength\
    \ = end2 - start\n\telse\n\t\tlength = end2 - start2\n\tend\n\tif length == 0\
    \ then\n\t\treturn \"NO\"\n\tend\n\tif start < start2 then\n\t\tlength = start2\
    \ - start\n\telse\n\t\tlength = start2 - start2\n\tend\n\tif length == 0 then\n\
    \t\treturn \"NO\"\n\tend\n\tif length == 1 then\n\t\treturn \"YES\"\n\tend\n\t\
    if length == 2 then\n\t\treturn \"YES\"\n\tend\n\tif length == 3 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length == 4 then\n\t\treturn \"YES\"\n\tend\n\tif length\
    \ == 5 then\n\t\treturn \"YES\"\n\tend\n\tif length == 6 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == 7 then\n\t\treturn \"YES\"\n\tend\n\tif length == 8 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 9 or length == 10 then\n\t\treturn \"\
    YES\"\n\tend\n\tif length == 11 or length == 12 or length == 13 or length == 14\
    \ or length == 15 or length == 16 or length == 17 or length == 18 or length ==\
    \ 19 or length == 20 or length == 21 or length == 22 or length == 23 or length\
    \ == 24 or length == 25 or length == 26 or length == 27 or length == 28 or length\
    \ == 29 or length == 30 or length == 31 or length == 32 or length == 33 or length\
    \ == 34 or length == 35 or length == 36 or length == 37 or length == 38 or length\
    \ == 39 or length == 40 or length == 41 or length == 42 or length == 43\n\tthen\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 44 or length == 45 or length == 46 or\
    \ length == 47 or length == 48 or length == 49 or length == 50 or length == 51\
    \ or length == 52 or length == 53 or length == 54 or length == 55 or length ==\
    \ 56 or length == 57 or length == 58 or length == 59 or length == 60 or length\
    \ == 61 or length == 62 or length == 63 or length == 64 or length == 65 or length\
    \ == 66 or length == 67 or length == 68 or length == 69 or length == 70 or length\
    \ == 71 or length == 72 or length == 73 or length == 74 or length == 75 or length\
    \ == 76 or length == 77 or length == 78 or length == 79 or length == 80 or length\
    \ == 81 or length == 8", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn true\n\tend\n\
    \tif length2 == 1 then\n\t\treturn start <= start2\n\tend\n\tlocal prime = true\n\
    \tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65\
    \ = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal prime68 = true\n\
    \tlocal ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start <= end2 and start2\
    \ <= end\n\tthen\n\t\treturn interval1[1], interval2[1]\n\telse\n\t\treturn nil,\
    \ nil\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ length\n\telseif length2 == 1 then\n\t\treturn length\n\telse\n\t\tlocal count\
    \ = 0\n\t\tlocal count2 = 0\n\t\tlocal flag = true\n\t\twhile flag do\n\t\t\t\
    if start <= start2 then\n\t\t\t\tcount = count + 1\n\t\t\t\tstart = start + 2\n\
    \t\t\telse\n\t\t\t\tflag = false\n\t\t\tend\n\t\t\tif end <= end2 then\n\t\t\t\
    \tcount = count + 1\n\t\t\t\tend = end - 2\n\t\t\telse\n\t\t\t\tflag = false\n\
    \t\t\tend\n\t\tend\n\t\tif count == length2 then\n\t\t\treturn true\n\t\telse\n\
    \t\t\treturn false\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn true\n\telseif length2 == 1 then\n\t\treturn start <= end2\n\
    \telse\n\t\treturn start <= end2 and length2 ~= length\n\tend\nend", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn length\n\telse\n\t\tif length2\
    \ > 0 then\n\t\t\tlocal prime = true\n\t\t\tfor i = 2, length2 do\n\t\t\t\tif\
    \ start2 % i == 0 then\n\t\t\t\t\tprime = false\n\t\t\t\t\tbreak\n\t\t\t\tend\n\
    \t\t\tend\n\t\t\tif prime then\n\t\t\t\treturn length\n\t\t\telse\n\t\t\t\treturn\
    \ -1\n\t\t\tend\n\t\telse\n\t\t\treturn -1\n\t\tend\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = 0\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal\
    \ prime66 = true\n\tlocal prime67 = true\n\tlocal prime68 = true\n\tlocal prime69\
    \ = true\n\tlocal prime70 = true\n\tlocal prime71 = true\n\tlocal prime72 = true\n\
    \tlocal prime73 = true\n\tlocal prime74 = true\n\tlocal prime75 = true\n\tlocal\
    \ prime76 = true\n\tlocal prime77 = true", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 or length2\
    \ == 1 then\n\t\treturn nil\n\tend\n\tif length == length2 then\n\t\treturn true\n\
    \tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\t\
    local prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67\
    \ = true\n\tlocal prime68 = true\n\t", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn length\n\tend\n\tif length2 > length then\n\t\tlength = length2\n\
    \tend\n\tlocal prime = true\n\tlocal i = 3\n\twhile i < length do\n\t\tif start\
    \ > end2 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\t\tif start2 > end\
    \ then\n\t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\t\tif start + i == start2\
    \ then\n\t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\t\tif start2 + i == end then\n\
    \t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn prime\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn length\n\telseif\
    \ length2 == 1 then\n\t\tif start <= start2 then\n\t\t\treturn length\n\t\telse\n\
    \t\t\treturn length2\n\t\tend\n\telse\n\t\tif start <= start2 then\n\t\t\tif end\
    \ <= end2 then\n\t\t\t\treturn length\n\t\t\telse\n\t\t\t\treturn length2\n\t\t\
    \tend\n\t\telse\n\t\t\tif end <= end2 then\n\t\t\t\treturn length2\n\t\t\telse\n\
    \t\t\t\treturn length\n\t\t\tend\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn (start, end)\n\t\t\telse\n\t\t\t\treturn (start, end2)\n\t\t\t\
    end\n\t\telse\n\t\t\treturn (start2, end2)\n\t\tend\n\telse\n\t\treturn (start2,\
    \ end2)\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\
    \tif length2 == 1 then\n\t\treturn {start = start, end = start + length}\n\tend\n\
    \tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\
    \tlocal prime68 = true", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\
    \tif length2 == 1 then\n\t\treturn {start = start, end = start + length}\n\tend\n\
    \tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\
    \tlocal prime68 = true", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ false\n\telseif length2 == 1 then\n\t\treturn true\n\telse\n\t\treturn length\
    \ >= length2\n\tend\nend", "\tlocal start1, end1 = interval1[1], interval1[2]\n\
    \tlocal start2, end2 = interval2[1], interval2[2]\n\tif start1 <= end2 and start2\
    \ <= end1 then\n\t\treturn interval1[1], interval2[2]\n\telse\n\t\treturn nil\n\
    \tend\nend", "    local start = interval1[1]\n    local end = interval1[2]\n \
    \   local start2 = interval2[1]\n    local end2 = interval2[2]\n    if start >\
    \ end or start2 > end2 then\n        return false\n    end\n    if start <= start2\
    \ then\n        return true\n    end\n    if end <= end2 then\n        return\
    \ true\n    end\n    local length = end - start\n    if length <= 1 then\n   \
    \     return true\n    end\n    local length2 = end2 - start2\n    if length2\
    \ <= 1 then\n        return true\n    end\n    local length = length / 2\n   \
    \ local length2 = length2 / 2\n    local prime = true\n    for i = 2, length do\n\
    \        if start % i == 0 and end % i == 0 then\n            prime = false\n\
    \            break\n        end\n    end\n    for i = 2, length2 do\n        if\
    \ start2 % i == 0 and end2 % i == 0 then\n            prime = false\n        \
    \    break\n        end\n    end\n    return prime\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn start\n\t\t\telse\n\t\t\t\treturn end2\n\t\t\tend\n\t\telse\n\t\
    \t\treturn end\n\t\tend\n\telse\n\t\treturn end2\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start <= end2 then\n\t\tif start <= end2 then\n\
    \t\t\tif start <= end2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <=\
    \ end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start ", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\
    \t\treturn false\n\t\tend\n\telse\n\t\treturn false\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ nil\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\t\
    if length2 == 0 then\n\t\treturn nil\n\tend\n\tif length2 == 1 then\n\t\treturn\
    \ {start, start + length}\n\tend\n\tlocal prime = true\n\tfor i = 2, length2 do\n\
    \t\tif length2 % i == 0 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\tend\n\
    \tif prime then\n\t\treturn {start, start + length}\n\tend\n\treturn nil\nend",
  "    local start = interval1[1]\n    local end = interval2[1]\n    local length\
    \ = end - start\n    if length == 0 then\n        return nil\n    end\n    local\
    \ prime_numbers = primes(length)\n    local prime_numbers_count = #prime_numbers\n\
    \    local prime_numbers_index = 1\n    local prime_numbers_value = prime_numbers[prime_numbers_index]\n\
    \    while prime_numbers_index < prime_numbers_count do\n        if prime_numbers_value\
    \ % length == 0 then\n            prime_numbers_index = prime_numbers_index +\
    \ 1\n            prime_numbers_value = prime_numbers[prime_numbers_index]\n  \
    \      end\n    end\n    if prime_numbers_value == length then\n        return\
    \ \"YES\"\n    else\n        return \"NO\"\n    end\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tif start <=\
    \ start2 then\n\t\treturn false\n\tend\n\tif end <= end2 then\n\t\treturn false\n\
    \tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2\
    \ == 0 then\n\t\treturn true\n\tend\n\tif length % length2 == 0 then\n\t\treturn\
    \ false\n\tend\n\tlocal count = 0\n\tlocal count2 = 0\n\tlocal i = 1\n\twhile\
    \ i <= length do\n\t\tcount = count + 1\n\t\ti = i + 1\n\tend\n\ti = 1\n\twhile\
    \ i <= length2 do\n\t\tcount2 = count2 + 1\n\t\ti = i + 1\n\tend\n\tif count ==\
    \ count2 then\n\t\treturn true\n\tend\n\treturn false\nend", "\tlocal start =\
    \ interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn \"YES\"\n\tend\n\tif length2 == 1 then\n\t\t\
    return \"NO\"\n\tend\n\tlocal prime = math.floor(math.sqrt(length2))\n\tif prime\
    \ == 0 then\n\t\treturn \"NO\"\n\tend\n\tif prime == 1 then\n\t\treturn \"YES\"\
    \n\tend\n\tlocal prime2 = math.floor(math.sqrt(length))\n\tif prime == prime2\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime2 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime3 = math.floor(math.sqrt(length))\n\tif prime == prime3\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime3 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime4 = math.floor(math.sqrt(length))\n\tif prime == prime4\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime4 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime5 = math.floor(math.sqrt(length))\n\tif prime == prime5\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime5 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime6 = math.floor(math.sqrt(length))\n\tif prime == prime6\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime6 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime7 = math.floor(math.sqrt(length))\n\tif prime == prime7\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime7 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime8 = math.floor(math.sqrt(length))\n\tif prime == prime8\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime8 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime9 = math.floor(math.sqrt(length))\n\tif prime == prime9\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime9 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime10 = math.floor(math.sqrt(length))\n\tif prime == prime10\
    \ then\n\t\treturn \"YES\"\n\tend\n\tif prime > prime10 then\n\t\treturn \"NO\"\
    \n\tend\n\tlocal prime11 = math.floor(math.sqrt(length))\n\tif prime == prime11\
    \ then\n\t\treturn \"YES\"", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn \"NO\"\n\telseif start <= start2 then\n\t\treturn\
    \ \"NO\"\n\telseif start2 <= end then\n\t\treturn \"NO\"\n\telse\n\t\treturn \"\
    YES\"\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif\
    \ start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 =\
    \ end2, end1\n\tend\n\tif end1 > end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tif start1 > end2 then\n\t\treturn nil\n\tend\n\tif start1 == end1 then\n\t\t\
    return start2\n\tend\n\tif start2 == end2 then\n\t\treturn end1\n\tend\n\tif start1\
    \ < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif end1 > end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1\
    \ == end1 then\n\t\treturn start2\n\tend\n\tif start2 == end2 then\n\t\treturn\
    \ end1\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif end1 > end2 then\n\t\tend1, end2 = end2,\
    \ end1\n\tend\n\tif start1 == end1 then\n\t\treturn start2\n\tend\n\tif start2\
    \ == end2 then\n\t\treturn end1\n\tend\n\tif start1 < start2 then\n\t\tstart1,\
    \ start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif end1 > end2\
    \ then\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 == end1 then\n\t\treturn\
    \ start2\n\tend\n\tif start2 == end2 then\n\t\treturn end1\n\tend\n\tif start1\
    \ < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif end1 > end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1\
    \ == end1 then\n\t\treturn start2\n\tend\n\tif start2 == end2 then\n\t\treturn\
    \ end1\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif end1 > end2 then\n\t\tend1, end2 = end2,\
    \ end1\n\tend\n\tif start1 == ", "\tlocal start1 = interval1[1]\n\tlocal end1\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length == 1 then\n\t\treturn \"YES\"\n\telse\n\t\tlocal prime\
    \ = true\n\t\tlocal prime_length = 2\n\t\tlocal prime_start = start1\n\t\tlocal\
    \ prime_end = end1\n\t\twhile prime and prime_length <= length do\n\t\t\tlocal\
    \ prime_start = prime_start + prime_length\n\t\t\tlocal prime_end = prime_start\
    \ + prime_length\n\t\t\tlocal prime_length = prime_end - prime_start\n\t\t\tif\
    \ prime_length == length then\n\t\t\t\tprime = false\n\t\t\telse\n\t\t\t\tprime\
    \ = true\n\t\t\tend\n\t\tend\n\t\tif prime then\n\t\t\treturn \"YES\"\n\t\telse\n\
    \t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return \"NO\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"YES\"\n\tend\n\tif\
    \ length2 > length / 2 then\n\t\tlength = length / 2\n\tend\n\tlocal prime = true\n\
    \tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65\
    \ = true", "    local start = interval1[1]\n    local end = interval1[2]\n   \
    \ local start2 = interval2[1]\n    local end2 = interval2[2]\n    local length\
    \ = end - start\n    local length2 = end2 - start2\n    if length2 == 0 then\n\
    \        return length\n    end\n    if length2 == 1 then\n        return length\n\
    \    end\n    if length2 == length + 1 then\n        return length\n    end\n\
    \    local flag = false\n    for i = 1, length2 do\n        if start <= start2\
    \ and end2 >= end2 then\n            flag = true\n            break\n        end\n\
    \    end\n    if flag then\n        return length\n    end\n    return length2\n\
    end", "\tlocal start1, end1 = interval1[1], interval1[2]\n\tlocal start2, end2\
    \ = interval2[1], interval2[2]\n\tif start1 < end2 and start2 < end1 then\n\t\t\
    return interval1[1], interval2[2]\n\telse\n\t\treturn nil, nil\n\tend\nend", "\t\
    local interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\t\
    local interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\t\
    local intersection_start = interval1_start < interval2_start and interval1_end\
    \ < interval2_end and interval1_start < interval2_end and interval1_end < interval2_start\
    \ or interval1_start < interval2_start and interval1_end > interval2_end and interval1_start\
    \ < interval2_end and interval1_end > interval2_start or interval1_start > interval2_start\
    \ and interval1_end < interval2_end and interval1_start > interval2_start or interval1_start\
    \ > interval2_start and interval1_end > interval2_end\n\tlocal intersection_end\
    \ = interval1_start < interval2_start and interval1_end < interval2_end and interval1_start\
    \ < interval2_end and interval1_end > interval2_start or interval1_start < interval2_start\
    \ and interval1_end > interval2_end and interval1_start < interval2_end and interval1_end\
    \ > interval2_start or interval1_start > interval2_start and interval1_end < interval2_end\
    \ and interval1_start > interval2_start or interval1_start > interval2_start and\
    \ interval1_end > interval2_end\n\tlocal intersection_length = interval1_end -\
    \ interval1_start + interval2_end - interval2_start\n\treturn (intersection_start\
    \ and intersection_end and intersection_length == interval1_end - interval1_start\
    \ + interval2_end - interval2_start) or (not intersection_start and not intersection_end\
    \ and intersection_length == 0)\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start = start, end = start\
    \ + length}\n\tend\n\tlocal prime = nil\n\tlocal prime2 = nil\n\tlocal prime3\
    \ = nil\n\tlocal prime4 = nil\n\tlocal prime5 = nil\n\tlocal prime6 = nil\n\t\
    local prime7 = nil\n\tlocal prime8 = nil\n\tlocal prime9 = nil\n\tlocal prime10\
    \ = nil\n\tlocal prime11 = nil\n\tlocal prime12 = nil\n\tlocal prime13 = nil\n\
    \tlocal prime14 = nil\n\tlocal prime15 = nil\n\tlocal prime16 = nil\n\tlocal prime17\
    \ = nil\n\tlocal prime18 = nil\n\tlocal prime19 = nil\n\tlocal prime20 = nil\n\
    \tlocal prime21 = nil\n\tlocal prime22 = nil\n\tlocal prime23 = nil\n\tlocal prime24\
    \ = nil\n\tlocal prime25 = nil\n\tlocal prime26 = nil\n\tlocal prime27 = nil\n\
    \tlocal prime28 = nil\n\tlocal prime29 = nil\n\tlocal prime30 = nil\n\tlocal prime31\
    \ = nil\n\tlocal prime32 = nil\n\tlocal prime33 = nil\n\tlocal prime34 = nil\n\
    \tlocal prime35 = nil\n\tlocal prime36 = nil\n\tlocal prime37 = nil\n\tlocal prime38\
    \ = nil\n\tlocal prime39 = nil\n\tlocal prime40 = nil\n\tlocal prime41 = nil\n\
    \tlocal prime42 = nil\n\tlocal prime43 = nil\n\tlocal prime44 = nil\n\tlocal prime45\
    \ = nil\n\tlocal prime46 = nil\n\tlocal prime47 = nil\n\tlocal prime48 = nil\n\
    \tlocal prime49 = nil\n\tlocal prime50 = nil\n\tlocal prime51 = nil\n\tlocal prime52\
    \ = nil\n\tlocal prime53 = nil\n\tlocal prime54 = nil\n\tlocal prime55 = nil\n\
    \tlocal prime56 = nil\n\tlocal prime57 = nil\n\tlocal prime58 = nil\n\tlocal prime59\
    \ = nil\n\tlocal prime60 = nil\n\tlocal prime61 = nil\n\tlocal prime6", "\tlocal\
    \ interval1_start = interval1[1]\n\tlocal interval1_end = interval1[2]\n\tlocal\
    \ interval2_start = interval2[1]\n\tlocal interval2_end = interval2[2]\n\tlocal\
    \ intersection_start = interval1_start <= interval2_start and interval1_end >=\
    \ interval2_end and interval1_start <= interval2_end and interval1_end >= interval2_start\
    \ or interval1_start <= interval2_start and interval1_end >= interval2_end and\
    \ interval1_start <= interval2_start and interval1_end >= interval2_end or interval1_start\
    \ <= interval2_start and interval1_end >= interval2_start and interval1_start\
    \ <= interval2_end and interval1_end >= interval2_end or interval1_start <= interval2_start\
    \ and interval1_end >= interval2_start and interval1_start <= interval2_end and\
    \ interval1_end >= interval2_end\n\treturn interval_length(intersection_start,\
    \ intersection_end)\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ false\n\tend\n\tif length2 == 1 then\n\t\treturn true\n\tend\n\tif length2 ==\
    \ 2 then\n\t\tif start <= start2 then\n\t\t\treturn true\n\t\telse\n\t\t\treturn\
    \ false\n\t\tend\n\tend\n\tif length2 < length / 2 then\n\t\treturn false\n\t\
    end\n\tif length2 > length / 2 then\n\t\treturn true\n\tend\n\tlocal prime = true\n\
    \tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\tlocal prime", "    local start = interval1[1]\n    local end\
    \ = interval1[2]\n    local start2 = interval2[1]\n    local end2 = interval2[2]\n\
    \    if start > end or start2 > end2 then\n        return \"NO\"\n    end\n  \
    \  if start <= start2 and end <= end2 then\n        return \"YES\"\n    end\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tif length2 ==\
    \ 1 then\n\t\treturn {start = start, end = start + length}\n\tend\n\tlocal length\
    \ = length / 2\n\tlocal length2 = length2 / 2\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal ",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn false\n\tend\n\tif length2 > length\
    \ then\n\t\tlength = length2\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\
    \tfor i = 2, length do\n\t\tif start % i == 0 and end % i == 0 then\n\t\t\tprime\
    \ = false\n\t\tend\n\t\tif start2 % i == 0 and end2 % i == 0 then\n\t\t\tprime2\
    \ = false\n\t\tend\n\tend\n\tif prime and prime2 then\n\t\treturn true\n\telse\n\
    \t\treturn false\n\tend\nend", "\tlocal interval1Start = interval1[1]\n\tlocal\
    \ interval1End = interval1[2]\n\tlocal interval2Start = interval2[1]\n\tlocal\
    \ interval2End = interval2[2]\n\tlocal intersectionStart = interval1Start <= interval2Start\
    \ and interval1End >= interval2End\n\tlocal intersectionEnd = interval1Start <=\
    \ interval2Start and interval1End > interval2End\n\tlocal intersectionLength =\
    \ interval1Start <= interval2Start and interval1End > interval2End\n\tlocal intersectionIsPrime\
    \ = not (intersectionStart or intersectionEnd or intersectionLength)\n\treturn\
    \ intersectionIsPrime\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif\
    \ start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 =\
    \ end2, end1\n\tend\n\tlocal prime = true\n\tlocal prime_length = 2\n\tlocal prime_start\
    \ = start1\n\tlocal prime_end = start2\n\tlocal prime_prime = true\n\tlocal prime_prime_length\
    \ = 2\n\tlocal prime_prime_start = start2\n\tlocal prime_prime_end = end1\n\t\
    local prime_prime_prime = true\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = end2\n\tlocal prime_prime_prime_end = end1\n\tlocal\
    \ prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = end1\n\tlocal\
    \ prime_prime_prime_end = start2\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = start1\n\tlocal prime_prime_prime_end = end2\n\tlocal\
    \ prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = end2\n\tlocal\
    \ prime_prime_prime_end = end1\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = end1\n\tlocal prime_prime_prime_end = start2\n\tlocal\
    \ prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = start2\n\tlocal\
    \ prime_prime_prime_end = end1\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = end2\n\tlocal prime_prime_prime_end = end1\n\tlocal\
    \ prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = end1\n\tlocal\
    \ prime_prime_prime_end = start2\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = start2\n\tlocal prime_prime_prime_end = end1\n\tlocal\
    \ prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = end1\n\tlocal\
    \ prime_prime_prime_end = start2\n\tlocal prime", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 and start2 <= end\n\tthen\n\t\treturn {start = start, end =\
    \ end2, length = end - start}\n\telse\n\t\treturn nil\n\tend\nend", "\tlocal interval1_start\
    \ = interval1[1]\n\tlocal interval1_end = interval1[2]\n\tlocal interval2_start\
    \ = interval2[1]\n\tlocal interval2_end = interval2[2]\n\tlocal intersection_start\
    \ = interval1_start <= interval2_start and interval1_end >= interval2_end\n\t\
    local intersection_end = interval1_start <= interval2_end and interval1_end >=\
    \ interval2_start\n\tlocal intersection_length = interval1_end - interval1_start\
    \ + interval2_end - interval2_start\n\tlocal intersection_is_prime = intersection_length\
    \ == 2 or intersection_length == 3 and (interval1_start % interval2_start == 0\
    \ or interval1_end % interval2_end == 0)\n\treturn intersection_start and intersection_end\
    \ and intersection_is_prime\nend", "\tlocal start1 = interval1[1]\n\tlocal end1\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tif length1\
    \ == 0 or length2 == 0 then\n\t\treturn false\n\tend\n\tif start1 < start2 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ start1 > end2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2,\
    \ end1\n\tend\n\tif start1 == start2 then\n\t\treturn false\n\tend\n\tif start1\
    \ == end2 then\n\t\treturn true\n\tend\n\tif start2 < end1 then\n\t\tstart1, start2\
    \ = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start2 > end1 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 =\
    \ end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif start1 == start2 then\n\t\treturn false\n\
    \tend\n\tif start1 == end2 then\n\t\treturn true\n\tend\n\tif start2 < end1 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ start2 > end1 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2,\
    \ end1\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2\
    \ = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 == start2\
    \ then\n\t\treturn false\n\tend\n\tif start1 == end2 then\n\t\treturn true\n\t\
    end\n\tif start2 < end1 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2\
    \ = end2, end1\n\tend\n\tif start2 > end1 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2 then", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn false\n\telseif length2 == 1 then\n\
    \t\treturn start <= end2\n\telse\n\t\treturn start <= end2 and length2 ~= length\n\
    \tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start1 < end2 and start2\
    \ < end1 then\n\t\treturn start1, end2\n\telse\n\t\treturn nil, nil\n\tend\nend",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn length\n\telseif length2 == 1 then\n\
    \t\treturn length\n\telse\n\t\tlocal length = length / 2\n\t\tlocal length2 =\
    \ length2 / 2\n\t\tlocal count = 0\n\t\tlocal count2 = 0\n\t\twhile count < length\
    \ do\n\t\t\tcount = count + 1\n\t\t\twhile count2 < length2 do\n\t\t\t\tcount2\
    \ = count2 + 1\n\t\t\t\tif start + count > start2 + count2 then\n\t\t\t\t\tbreak\n\
    \t\t\t\telse\n\t\t\t\t\tif start + count <= start2 + count2 then\n\t\t\t\t\t\t\
    count = count + 1\n\t\t\t\t\telse\n\t\t\t\t\t\tcount2 = count2 + 1\n\t\t\t\t\t\
    end\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\t\treturn count\n\tend\nend", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 ~= length then\n\t\treturn false\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\
    \tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\
    \tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal\
    \ prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal prime68\
    \ = true\n\tlocal prime69 = true\n\tlocal prime70 = true\n\tlocal prime71 = true\n\
    \tlocal prime72 = true\n\tlocal prime73 = true\n", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return length\n\tend\n\tif length2 == 1 then\n\t\treturn length\n\tend\n\tif length2\
    \ == 2 then\n\t\treturn length\n\tend\n\tif length2 > 2 then\n\t\treturn false\n\
    \tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\t\
    local prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true\n\tlocal prime65", "\tlocal interval1_start = interval1[1]\n\t\
    local interval1_end = interval1[2]\n\tlocal interval2_start = interval2[1]\n\t\
    local interval2_end = interval2[2]\n\tlocal intersection_start = interval1_start\
    \ < interval2_start and interval1_end < interval2_end and interval1_start < interval2_end\
    \ and interval2_start < interval1_end and interval1_end < interval2_end and interval2_start\
    \ < interval1_end and interval1_start < interval2_end and interval2_end < interval1_end\n\
    \tlocal intersection_end = interval1_start < interval2_start and interval1_end\
    \ < interval2_end and interval1_start < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_end < interval1_end\n\tlocal\
    \ intersection_length = interval1_end - interval1_start + interval2_end - interval2_start\n\
    \tlocal intersection_prime = not (interval1_start < interval2_start and interval1_end\
    \ < interval2_end and interval1_start < interval2_end and interval2_start < interval1_end\
    \ and interval1_end < interval2_end and interval2_end < interval1_end)\n\treturn\
    \ intersection_start, intersection_end, intersection_length, intersection_prime\n\
    end", "    local start = interval1[1]\n    local end = interval1[2]\n    local\
    \ start2 = interval2[1]\n    local end2 = interval2[2]\n    if start <= end and\
    \ start2 <= end2 then\n        local length = end - start\n        local length2\
    \ = end2 - start2\n        if length2 == 0 then\n            return length\n \
    \       elseif length2 == 1 then\n            if length == 1 then\n          \
    \      return true\n            else\n                return false\n         \
    \   end\n        else\n            local length = length / length2\n         \
    \   if math.floor(length) == length then\n                return true\n      \
    \      else\n                return false\n            end\n        end\n    else\n\
    \        return false\n    end\nend", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length == 1 then\n\t\treturn \"YES\"\n\telse\n\t\treturn \"\
    NO\"\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\t\
    if start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 =\
    \ end2, end1\n\tend\n\tif end1 > end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tif start1 < end2 then\n\t\tlocal temp = end1\n\t\tend1 = end2\n\t\tend2 = temp\n\
    \tend\n\tlocal prime = true\n\tlocal i = 2\n\twhile i <= length do\n\t\tif start1\
    \ + i >= end1 or start2 + i >= end2 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\
    \tend\n\t\ti = i + 1\n\tend\n\tif prime then\n\t\treturn \"YES\"\n\telse\n\t\t\
    return \"NO\"\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn \"YES\"\n\t\
    end\n\tif length2 == 1 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == length\
    \ + 1 then\n\t\treturn \"YES\"\n\tend\n\tif length2 > length + 1 then\n\t\treturn\
    \ \"NO\"\n\tend\n\tlocal prime = math.floor(math.sqrt(length2))\n\tif prime ==\
    \ 0 then\n\t\treturn \"NO\"\n\tend\n\tif prime == 1 then\n\t\treturn \"YES\"\n\
    \tend\n\tlocal prime2 = math.floor(math.sqrt(length))\n\tif prime == prime2 then\n\
    \t\treturn \"YES\"\n\tend\n\tif prime > prime2 then\n\t\treturn \"NO\"\n\tend\n\
    \tlocal prime3 = math.floor(math.sqrt(length))\n\tif prime == prime3 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > prime3 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime4 = math.floor(math.sqrt(length))\n\tif prime == prime4 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > prime4 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime5 = math.floor(math.sqrt(length))\n\tif prime == prime5 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > prime5 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime6 = math.floor(math.sqrt(length))\n\tif prime == prime6 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > prime6 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime7 = math.floor(math.sqrt(length))\n\tif prime == prime7 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > prime7 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime8 = math.floor(math.sqrt(length))\n\tif prime == prime8 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > prime8 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime9 = math.floor(math.sqrt(length))\n\tif prime == prime9 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > prime9 then\n\t\treturn \"NO\"\n\tend\n\t\
    local prime10 = math.floor(math.sqrt(length))\n\tif prime == prime10 then\n\t\t\
    return \"YES\"\n\tend\n\tif prime > ", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\tif start <= end2 then\n\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\tif\
    \ start <= end2 then\n\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\tif\
    \ start <= end2 then\n\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\
    \t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\tif start <=\
    \ end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start\
    \ <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif\
    \ start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    if start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif\
    \ start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    if start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2\
    \ then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\tif start <= end2 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif start <= end2 then\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\tif start ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tif length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length == 0 then\n\
    \t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\tif length == 1 then\n\t\t\
    \treturn \"YES\"\n\t\tend\n\t\treturn \"NO\"\n\tend\n\tif length == length2 then\n\
    \t\tif length == 1 then\n\t\t\treturn \"YES\"\n\t\tend\n\t\treturn \"NO\"\n\t\
    end\n\tif length < length2 then\n\t\tprime = false\n\tend\n\tif length2 < length\
    \ then\n\t\tprime2 = false\n\tend\n\tif prime == true and prime2 == true then\n\
    \t\treturn \"YES\"\n\tend\n\tif prime == false and prime2 == false then\n\t\t\
    return \"NO\"\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ length\n\telse\n\t\tif length2 > length then\n\t\t\tlength = length2\n\t\tend\n\
    \tend\n\tfor i = start, start + length do\n\t\tif start2 <= i then\n\t\t\tbreak\n\
    \t\tend\n\tend\n\treturn i\nend", "\tlocal start = interval1[1]\n\tlocal end =\
    \ interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\t\
    if start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn (start, end)\n\t\t\telse\n\t\t\t\treturn (start, end2)\n\t\t\t\
    end\n\t\telse\n\t\t\treturn (start, end2)\n\t\tend\n\telse\n\t\treturn (start,\
    \ end2)\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start <= end2\
    \ then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\t\t\t\treturn\
    \ (start, end)\n\t\t\telse\n\t\t\t\treturn (start, end2)\n\t\t\tend\n\t\telse\n\
    \t\t\treturn (start2, end2)\n\t\tend\n\telse\n\t\treturn (start2, end2)\n\tend\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = length / length2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif length\
    \ == 1 then\n\t\treturn true\n\tend\n\treturn false\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start, start + length}\n\
    \tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\t\
    local prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67\
    \ = true\n\tlocal prime68 = true\n\t", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn false\n\tend\n\tif length == 0 then\n\t\treturn true\n\t\
    end\n\tif length2 == 1 then\n\t\treturn start <= start2\n\tend\n\tif length ==\
    \ 1 then\n\t\treturn start2 <= end\n\tend\n\tif length2 > length and length2 >\
    \ length + 1 then\n\t\treturn false\n\tend\n\tif length2 < length and length2\
    \ < length + 1 then\n\t\treturn false\n\tend\n\tif length2 == length + 1 then\n\
    \t\treturn start <= start2 and end >= end2\n\tend\n\tif length2 == length + 2\
    \ then\n\t\treturn start <= start2 and end >= end2\n\tend\n\tif length2 == length\
    \ + 3 then\n\t\treturn start <= start2 and end >= end2\n\tend\n\tif length2 ==\
    \ length + 4 then\n\t\treturn start <= start2 and end >= end2\n\tend\n\tif length2\
    \ == length + 5 then\n\t\treturn start <= start2 and end >= end2\n\tend\n\tif\
    \ length2 == length + 6 then\n\t\treturn start <= start2 and end >= end2\n\tend\n\
    \tif length2 == length + 7 then\n\t\treturn start <= start2 and end >= end2\n\t\
    end\n\tif length2 == length + 8 then\n\t\treturn start <= start2 and end >= end2\n\
    \tend\n\tif length2 == length + 9 then\n\t\treturn start <= start2 and end >=\
    \ end2\n\tend\n\tif length2 == length + 10 then\n\t\treturn start <= start2 and\
    \ end >= end2\n\tend\n\tif length2 == length + 11 then\n\t\treturn start <= start2\
    \ and end >= end2\n\tend\n\tif length2 == length + 12 then\n\t\treturn start <=\
    \ start2 and end >= end2\n\tend\n\tif length2 == length + 13 then\n\t\treturn\
    \ start <= start2 and end >= end2\n\tend\n\tif length2 == length + 14 then\n\t\
    \treturn start <= start2 and end >= end2\n\tend\n\tif length2 == length + 15 then\n\
    \t\treturn start <= start2 and end >= end2\n\tend\n\tif length2 == length + 16\
    \ then\n\t\treturn start <= start2 and end >= end2\n\tend\n\tif length2 == length\
    \ + 17 then\n\t\treturn start <= start2 and end >= end2\n\tend\n\tif length2 ==\
    \ length + 18 then\n\t\treturn start <= start2 and end >= end2\n", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn false\n\telseif length2 == 1 then\n\
    \t\treturn true\n\telse\n\t\tlocal prime = true\n\t\tlocal prime2 = true\n\t\t\
    local prime3 = true\n\t\tlocal prime4 = true\n\t\tlocal prime5 = true\n\t\tlocal\
    \ prime6 = true\n\t\tlocal prime7 = true\n\t\tlocal prime8 = true\n\t\tlocal prime9\
    \ = true\n\t\tlocal prime10 = true\n\t\tlocal prime11 = true\n\t\tlocal prime12\
    \ = true\n\t\tlocal prime13 = true\n\t\tlocal prime14 = true\n\t\tlocal prime15\
    \ = true\n\t\tlocal prime16 = true\n\t\tlocal prime17 = true\n\t\tlocal prime18\
    \ = true\n\t\tlocal prime19 = true\n\t\tlocal prime20 = true\n\t\tlocal prime21\
    \ = true\n\t\tlocal prime22 = true\n\t\tlocal prime23 = true\n\t\tlocal prime24\
    \ = true\n\t\tlocal prime25 = true\n\t\tlocal prime26 = true\n\t\tlocal prime27\
    \ = true\n\t\tlocal prime28 = true\n\t\tlocal prime29 = true\n\t\tlocal prime30\
    \ = true\n\t\tlocal prime31 = true\n\t\tlocal prime32 = true\n\t\tlocal prime33\
    \ = true\n\t\tlocal prime34 = true\n\t\tlocal prime35 = true\n\t\tlocal prime36\
    \ = true\n\t\tlocal prime37 = true\n\t\tlocal prime38 = true\n\t\tlocal prime39\
    \ = true\n\t\tlocal prime40 = true\n\t\tlocal prime41 = true\n\t\tlocal prime42\
    \ = true\n\t\tlocal prime43 = true\n\t\tlocal prime44 = true\n\t\tlocal prime45\
    \ = true\n\t\tlocal prime46 = true\n\t\tlocal prime47 = true\n\t\tlocal prime48\
    \ = true\n\t\tlocal prime49 = true\n\t\tlocal prime50 = true\n\t\tlocal prime51\
    \ = true\n\t\tlocal prime52 = true\n\t\tlocal prime53 = true\n\t\tlocal prime54\
    \ = true\n\t\tlocal prime55 = true\n\t\tlocal prime56 = true\n\t\tlocal prime57\
    \ = true\n\t\tlocal prime58 = true\n\t\tlocal prime59 = true\n\t\tlocal prime60\
    \ = true\n\t\tlocal prime61 = true\n\t\tlocal prime62 = true\n\t\tlocal prime63\
    \ = true\n\t\tlocal prime64 = true\n\t\tlocal prime65 = true\n\t\tlocal prime66\
    \ = true\n\t\tlocal prime67 = true\n\t\tlocal prime68 = true\n\t\tlocal prime69\
    \ = true\n\t\tlocal prime70 = true\n\t\tlocal prime71 = true\n\t\tlocal prime72\
    \ = ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = length / length2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif length\
    \ == 1 then\n\t\treturn true\n\tend\n\tif length == 2 then\n\t\treturn true\n\t\
    end\n\tif length == 3 then\n\t\treturn true\n\tend\n\tif length == 4 then\n\t\t\
    return true\n\tend\n\tif length == 5 then\n\t\treturn true\n\tend\n\tif length\
    \ == 6 then\n\t\treturn true\n\tend\n\tif length == 7 then\n\t\treturn true\n\t\
    end\n\tif length == 8 then\n\t\treturn true\n\tend\n\tif length == 9 or length\
    \ == 10 then\n\t\treturn true\n\tend\n\tif length == 11 or length == 12 or length\
    \ == 13 then\n\t\treturn true\n\tend\n\tif length == 14 or length == 15 or length\
    \ == 16 or length == 17 or length == 18 or length == 19 or length == 20 or length\
    \ == 21 or length == 22 or length == 23 or length == 24 or length == 25 or length\
    \ == 26 or length == 27 or length == 28 or length == 29 or length == 30 or length\
    \ == 31 or length == 32 or length == 33 or length == 34 or length == 35 or length\
    \ == 36 or length == 37 or length == 38 or length == 39 or length == 40 or length\
    \ == 41 or length == 42 or length == 43\n\tthen\n\t\treturn true\n\tend\n\tif\
    \ length == 44 or length == 45 or length == 46 or length == 47 or length == 48\
    \ or length == 49 or length == 50 or length == 51 or length == 52 or length ==\
    \ 53 or length == 54 or length == 55 or length == 56 or length == 57 or length\
    \ == 58 or length == 59 or length == 60 or length == 61 or length == 62 or length\
    \ == 63 or length == 64 or length == 65 or length == 66 or length == 67 or length\
    \ == 68 or length == 69 or length == 70 or length == 71 or length == 72 or length\
    \ == 73 or length == 74 or length == 75 or length == 76 or length == 77 or length\
    \ == 78 or length == 79 or length == 80 or length == 81 or length == 82 or length\
    \ == 83 or length == 84 or length == 85 or length == 86 or length == 87 or length\
    \ == 88 or length == 89 or length == 90 or ", "\tlocal start = interval1[1]\n\t\
    local end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return length\n\tend\n\tif length2 == 1 then\n\t\treturn length\n\tend\n\tif length2\
    \ > length then\n\t\tlength = length2\n\tend\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal\
    \ prime66 = true\n\tlocal ", "    local start = interval1[1]\n    local end =\
    \ interval2[1]\n    local length = end - start\n    if length == 0 then\n    \
    \    return nil\n    end\n    local prime_numbers = primes(length)\n    for _,\
    \ prime in ipairs(prime_numbers) do\n        if prime == 0 then\n            return\
    \ nil\n        end\n        if start <= prime and prime <= end then\n        \
    \    return prime\n        end\n    end\n    return nil\nend", "\tlocal start1\
    \ = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn nil\n\t\
    end\n\tlocal length = length1 + length2\n\tif length == 1 then\n\t\treturn {start1,\
    \ end1}\n\tend\n\tlocal prime = true\n\tlocal prime_length = 2\n\tlocal prime_start\
    \ = start1\n\tlocal prime_end = start2\n\tlocal prime_prime = true\n\tlocal prime_prime_length\
    \ = 2\n\tlocal prime_prime_start = start2\n\tlocal prime_prime_end = end2\n\t\
    local prime_prime_prime = true\n\tlocal prime_prime_prime_length = 2\n\tlocal\
    \ prime_prime_prime_start = end2\n\tlocal prime_prime_prime_end = end1\n\tlocal\
    \ prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = end1\n\tlocal\
    \ prime_prime_prime_end = start1\n\tlocal prime_prime_prime_prime_length = 2\n\
    \tlocal prime_prime_prime_prime_start = start1\n\tlocal prime_prime_prime_prime_end\
    \ = end1\n\tlocal prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_start\
    \ = end1\n\tlocal prime_prime_prime_prime_end = start1\n\tlocal prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_prime_start = start1\n\tlocal prime_prime_prime_prime_prime_end\
    \ = end1\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_prime_end = end1\n\tlocal prime_prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_prime_start = start1\n\tlocal prime_prime_prime_prime_prime_end\
    \ = end1\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_prime_end = end1\n\tlocal prime_prime_prime_prime_prime",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ nil\n\tend\n\tif start < start2 then\n\t\tstart, start2 = start2, start\n\t\
    end\n\tif end < end2 then\n\t\tend, end2 = end2, end\n\tend\n\tif start < end2\
    \ then\n\t\tlocal length = end - start\n\t\tlocal length2 = end2 - start2\n\t\t\
    if length2 == 0 then\n\t\t\treturn nil\n\t\tend\n\t\tlocal prime = true\n\t\t\
    for i = 2, length2 do\n\t\t\tif length % i == 0 then\n\t\t\t\tprime = false\n\t\
    \t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif prime then\n\t\t\treturn true\n\t\tend\n\
    \tend\n\treturn false\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn true\n\tend\n\
    \tif length2 == 1 then\n\t\treturn length == start2\n\tend\n\tif length2 == 2\
    \ then\n\t\treturn length == start2 and length == end2\n\tend\n\tlocal prime =\
    \ true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\t\
    local prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\
    \tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal\
    \ prime65 = true\n\t", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ length\n\telseif length2 == 1 then\n\t\treturn length\n\telse\n\t\treturn length\
    \ / length2\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 or length % length2 ~= 0 then\n\
    \t\treturn nil\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3\
    \ = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\
    \tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10\
    \ = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\
    \tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal\
    \ prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20\
    \ = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\
    \tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal\
    \ prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30\
    \ = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\
    \tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal\
    \ prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40\
    \ = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\
    \tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal\
    \ prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50\
    \ = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\
    \tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal\
    \ prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60\
    \ = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\
    \tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal\
    \ prime67 = true\n\tlocal prime68 = true\n\tlocal prime69 = true\n\tlocal prime70",
  "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1 + end2 - start2\n\t\
    if length == 0 then\n\t\treturn nil\n\tend\n\tif start1 <= start2 then\n\t\treturn\
    \ {start1, end1}\n\telse\n\t\treturn {start2, end2}\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ false\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn true\n\tend\n\tif length2 == 1 then\n\t\treturn\
    \ start <= start2\n\tend\n\tif length2 == 2 then\n\t\treturn start <= start2 and\
    \ end >= start2\n\tend\n\tlocal middle = (start + end) / 2\n\tlocal middle2 =\
    \ start2 + end2\n\tlocal middle3 = middle\n\tlocal middle4 = middle2\n\tlocal\
    \ middle5 = middle\n\tlocal middle6 = middle2\n\tlocal middle7 = middle\n\tlocal\
    \ middle8 = middle2\n\tlocal middle9 = middle\n\tlocal middle10 = middle2\n\t\
    local middle11 = middle\n\tlocal middle12 = middle2\n\tlocal middle13 = middle\n\
    \tlocal middle14 = middle2\n\tlocal middle15 = middle\n\tlocal middle16 = middle2\n\
    \tlocal middle17 = middle\n\tlocal middle18 = middle2\n\tlocal middle19 = middle\n\
    \tlocal middle20 = middle2\n\tlocal middle21 = middle\n\tlocal middle22 = middle2\n\
    \tlocal middle23 = middle\n\tlocal middle24 = middle2\n\tlocal middle25 = middle\n\
    \tlocal middle26 = middle2\n\tlocal middle27 = middle\n\tlocal middle28 = middle2\n\
    \tlocal middle29 = middle\n\tlocal middle30 = middle2\n\tlocal middle31 = middle\n\
    \tlocal middle32 = middle2\n\tlocal middle33 = middle\n\tlocal middle34 = middle2\n\
    \tlocal middle35 = middle\n\tlocal middle36 = middle2\n\tlocal middle37 = middle\n\
    \tlocal middle38 = middle2\n\tlocal middle39 = middle\n\tlocal middle40 = middle2\n\
    \tlocal middle41 = middle\n\tlocal middle42 = middle2\n\tlocal middle43 = middle\n\
    \tlocal middle44 = middle2\n\tlocal middle45 = middle\n\tlocal middle46 = middle2\n\
    \tlocal middle47 = middle\n\tlocal middle48 = middle2\n\tlocal middle49 = middle\n\
    \tlocal middle50 = middle2\n\tlocal middle51 = middle\n\tlocal middle52 = middle2\n\
    \tlocal middle53 = middle\n\tlocal middle54 = middle2\n\tlocal middle55 = middle",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn true\n\telseif length2 == 1 then\n\
    \t\tif length == 1 then\n\t\t\treturn true\n\t\telse\n\t\t\treturn false\n\t\t\
    end\n\telse\n\t\tlocal flag = true\n\t\tfor i = 1, length2 do\n\t\t\tif start\
    \ > end2 then\n\t\t\t\tflag = false\n\t\t\t\tbreak\n\t\t\tend\n\t\t\tstart = start\
    \ + end2\n\t\t\tend2 = end2 + end2\n\t\tend\n\t\tif flag then\n\t\t\treturn true\n\
    \t\telse\n\t\t\treturn false\n\t\tend\n\tend\nend", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ nil\n\tend\n\tlocal prime = true\n\tlocal prime_number = 2\n\tlocal prime_found\
    \ = false\n\tlocal prime_found2 = false\n\tlocal prime_found3 = false\n\tlocal\
    \ prime_found4 = false\n\tlocal prime_found5 = false\n\tlocal prime_found6 = false\n\
    \tlocal prime_found7 = false\n\tlocal prime_found8 = false\n\tlocal prime_found9\
    \ = false\n\tlocal prime_found10 = false\n\tlocal prime_found11 = false\n\tlocal\
    \ prime_found12 = false\n\tlocal prime_found13 = false\n\tlocal prime_found14\
    \ = false\n\tlocal prime_found15 = false\n\tlocal prime_found16 = false\n\tlocal\
    \ prime_found17 = false\n\tlocal prime_found18 = false\n\tlocal prime_found19\
    \ = false\n\tlocal prime_found20 = false\n\tlocal prime_found21 = false\n\tlocal\
    \ prime_found22 = false\n\tlocal prime_found23 = false\n\tlocal prime_found24\
    \ = false\n\tlocal prime_found25 = false\n\tlocal prime_found26 = false\n\tlocal\
    \ prime_found27 = false\n\tlocal prime_found28 = false\n\tlocal prime_found29\
    \ = false\n\tlocal prime_found30 = false\n\tlocal prime_found31 = false\n\tlocal\
    \ prime_found32 = false\n\tlocal prime_found33 = false\n\tlocal prime_found34\
    \ = false\n\tlocal prime_found35 = false\n\tlocal prime_found36 = false\n\tlocal\
    \ prime_found37 = false\n\tlocal prime_found38 = false\n\tlocal prime_found39\
    \ = false\n\tlocal prime_found40 = false\n\tlocal prime_found41 = false\n\tlocal\
    \ prime_found42 = false\n\tlocal prime_found43 = false\n\tlocal prime_found44\
    \ = false\n\tlocal prime_found45 = false\n\tlocal prime_found46 = false\n\tlocal\
    \ prime_found47 = false\n\tlocal prime_found48 = false\n\tlocal prime_found49\
    \ = false\n\tlocal prime_found50 = false\n\tlocal prime_found51 = false\n\tlocal\
    \ prime_found52 = false\n\tlocal prime_found53 = false\n\tlocal prime_found54\
    \ = false\n\tlocal prime_", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ length\n\telseif length2 == 1 then\n\t\treturn length + start2\n\telse\n\t\t\
    return length / length2\n\tend\nend", "    local start = interval1[1]\n    local\
    \ end = interval1[2]\n    local start2 = interval2[1]\n    local end2 = interval2[2]\n\
    \    if start > end or start2 > end2 then\n        return \"NO\"\n    end\n  \
    \  local length = end - start\n    local length2 = end2 - start2\n    if length2\
    \ == 0 then\n        return \"NO\"\n    end\n    if length2 == 1 then\n      \
    \  if length == 1 then\n            return \"YES\"\n        else\n           \
    \ return \"NO\"\n        end\n    end\n    local prime = true\n    for i = 2,\
    \ length2 do\n        if length2 % i == 0 then\n            prime = false\n  \
    \      end\n    end\n    if prime then\n        return \"YES\"\n    else\n   \
    \     return \"NO\"\n    end\nend", "\tlocal start1 = interval1[1]\n\tlocal end1\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ nil\n\tend\n\tlocal prime = true\n\tlocal prime_length = 2\n\twhile prime and\
    \ prime_length <= length do\n\t\tlocal prime_start = start1 + prime_length\n\t\
    \tlocal prime_end = start2 + prime_length\n\t\tlocal prime_length = prime_length\
    \ + 2\n\t\tlocal prime_prime = true\n\t\tlocal prime_prime_length = 2\n\t\twhile\
    \ prime_prime and prime_prime_length <= prime_length do\n\t\t\tlocal prime_prime_start\
    \ = prime_start + prime_prime_length\n\t\t\tlocal prime_prime_end = prime_end\
    \ + prime_prime_length\n\t\t\tlocal prime_prime_length = prime_prime_length +\
    \ 2\n\t\t\tif prime_prime_start <= prime_end and prime_prime_start <= prime_prime_end\
    \ then\n\t\t\t\tprime = false\n\t\t\t\tprime_prime = false\n\t\t\telse\n\t\t\t\
    \tprime_prime_length = prime_prime_length + 2\n\t\t\tend\n\t\tend\n\tend\n\treturn\
    \ prime\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\t\
    local start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif\
    \ start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 =\
    \ end2, end1\n\tend\n\tif end1 < end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tif start1 < end1 then\n\t\tstart1, end1 = end1, start1\n\tend\n\tif start2 <\
    \ end2 then\n\t\tstart2, end2 = end2, start2\n\tend\n\tif start1 < start2 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ end1 < end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < end1 then\n\
    \t\tstart1, end1 = end1, start1\n\tend\n\tif start2 < end2 then\n\t\tstart2, end2\
    \ = end2, start2\n\tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2,\
    \ start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif end1 < end2 then\n\t\tend1,\
    \ end2 = end2, end1\n\tend\n\tif start1 < end1 then\n\t\tstart1, end1 = end1,\
    \ start1\n\tend\n\tif start2 < end2 then\n\t\tstart2, end2 = end2, start2\n\t\
    end\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1,\
    \ end2 = end2, end1\n\tend\n\tif end1 < end2 then\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif start1 < end1 then\n\t\tstart1, end1 = end1, start1\n\tend\n\tif start2\
    \ < end2 then\n\t\tstart2, end2 = end2, start2\n\tend\n\tif start1 < start2 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ end1 < end2 then\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < end1 then\n\
    \t\tstart1, end1 = end1, start1\n\tend\n\tif start2 < end2 then\n\t\tstart2, end2\
    \ = end2, start2\n\tend\n\tif start1 < start2 then", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tif start <=\
    \ start2 then\n\t\treturn \"NO\"\n\tend\n\tif end <= end2 then\n\t\treturn \"\
    NO\"\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\t\
    if length2 == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length2 == 1 then\n\t\tif\
    \ length == 1 then\n\t\t\treturn \"YES\"\n\t\tend\n\t\treturn \"NO\"\n\tend\n\t\
    local prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\t", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\
    \tlocal prime = true\n\tfor i = 2, length2 do\n\t\tif length2 % i == 0 then\n\t\
    \t\tprime = false\n\t\t\tbreak\n\t\tend\n\tend\n\tif prime then\n\t\treturn \"\
    YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start1 = interval1[1]\n\
    \tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ \"NO\"\n\telseif length == 1 then\n\t\treturn \"YES\"\n\telse\n\t\tlocal prime\
    \ = true\n\t\tlocal prime_length = 2\n\t\twhile prime and prime_length <= length\
    \ do\n\t\t\tlocal prime_start = start1 + prime_length\n\t\t\tlocal prime_end =\
    \ start2 + prime_length\n\t\t\tif prime_start <= prime_end then\n\t\t\t\tprime\
    \ = prime_start <= end1 and prime_end >= start2\n\t\t\telse\n\t\t\t\tprime = false\n\
    \t\t\tend\n\t\t\tprime_length = prime_length + 1\n\t\tend\n\t\tif prime then\n\
    \t\t\treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\tend\nend", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ false\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 or length % length2 ~= 0 then\n\t\treturn false\n\tend\n\tlocal\
    \ prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 =\
    \ true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\t\
    local prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11\
    \ = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\
    \tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal\
    \ prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21\
    \ = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\
    \tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal\
    \ prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31\
    \ = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\
    \tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal\
    \ prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41\
    \ = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\
    \tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal\
    \ prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51\
    \ = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\
    \tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal\
    \ prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61\
    \ = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\
    \tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal\
    \ prime68 = true\n\tlocal prime69 = true\n\tlocal prime70", "\tlocal start1 =\
    \ interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2 =\
    \ end2 - start2\n\tlocal length = length1 + length2\n\tlocal prime = true\n\t\
    local i = 0\n\tlocal j = 0\n\tlocal k = 0\n\twhile i < length1 and j < length2\
    \ do\n\t\tif start1 <= start2 and start2 <= end1 then\n\t\t\tprime = false\n\t\
    \t\tbreak\n\t\telseif start1 <= start2 and start2 <= end2 then\n\t\t\tprime =\
    \ false\n\t\t\tbreak\n\t\telseif start1 <= end2 and start2 <= end1 then\n\t\t\t\
    prime = false\n\t\t\tbreak\n\t\telseif start1 <= end2 and start2 <= end2 then\n\
    \t\t\tprime = false\n\t\t\tbreak\n\t\telse\n\t\t\tprime = true\n\t\t\tbreak\n\t\
    \tend\n\t\ti = i + 1\n\t\tj = j + 1\n\tend\n\tif prime then\n\t\treturn \"YES\"\
    \n\telse\n\t\treturn \"NO\"\n\tend\nend", "    local start = interval1[1]\n  \
    \  local end = interval1[2]\n    local start2 = interval2[1]\n    local end2 =\
    \ interval2[2]\n    if start > end or start2 > end2 then\n        return \"NO\"\
    \n    end\n    local length = end - start\n    local length2 = end2 - start2\n\
    \    if length2 == 0 or length2 == 1 then\n        return \"NO\"\n    end\n  \
    \  if length == 0 then\n        return \"NO\"\n    end\n    if length2 == 1 then\n\
    \        return \"YES\"\n    end\n    local prime = true\n    for i = 2, length2\
    \ do\n        if length2 % i == 0 then\n            prime = false\n        end\n\
    \    end\n    if prime then\n        return \"YES\"\n    else\n        return\
    \ \"NO\"\n    end\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start1 <= end2\
    \ and start2 <= end1 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
    end", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1 - start1\
    \ + end2 - start2\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2\
    \ = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif end1 < end2 then\n\
    \t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif\
    \ start1 == start2 then\n\t\treturn \"NO\"\n\tend\n\tif start1 == end2 then\n\t\
    \treturn \"NO\"\n\tend\n\tif end1 == end2 then\n\t\treturn \"NO\"\n\tend\n\tif\
    \ length == 0 then\n\t\treturn \"NO\"\n\tend\n\tif length % 2 == 0 then\n\t\t\
    return \"NO\"\n\tend\n\tlocal prime = true\n\tlocal i = 2\n\twhile i < length\
    \ do\n\t\tif start1 + i == end1 or start2 + i == end2 then\n\t\t\tprime = false\n\
    \t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\tif prime then\n\t\treturn \"YES\"\
    \n\tend\n\treturn \"NO\"\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 =\
    \ interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\t\
    local length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ nil\n\tend\n\tlocal prime = true\n\tlocal prime_length = 2\n\twhile prime and\
    \ prime_length <= length do\n\t\tlocal prime_start = start1 + prime_length\n\t\
    \tlocal prime_end = start2 + prime_length\n\t\tlocal prime_length = prime_end\
    \ - prime_start + 2\n\t\tprime = prime_length == 2 or prime_length == 3\n\tend\n\
    \tif prime then\n\t\treturn \"YES\"\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start <= end2 then\n\t\tif start <= end2 then\n\
    \t\t\tif start <= end2 then\n\t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\
    \t\t\tend\n\t\telse\n\t\t\treturn true\n\t\tend\n\telse\n\t\treturn false\n\t\
    end\nend", "    local start = interval1[1]\n    local end = interval1[2]\n   \
    \ local start2 = interval2[1]\n    local end2 = interval2[2]\n    if start > end\
    \ or start2 > end2 then\n        return \"NO\"\n    end\n    if start == start2\
    \ and end == end2 then\n        return \"YES\"\n    end\n    local length = math.abs(end\
    \ - start)\n    local length2 = math.abs(end2 - start2)\n    if length2 == 0 then\n\
    \        return \"NO\"\n    end\n    if length == length2 then\n        return\
    \ \"YES\"\n    end\n    local prime = math.ceil(math.sqrt(length))\n    if prime\
    \ == length then\n        return \"YES\"\n    end\n    if prime == length2 then\n\
    \        return \"NO\"\n    end\n    local prime2 = math.ceil(math.sqrt(length2))\n\
    \    if prime == length2 then\n        return \"YES\"\n    end\n    if prime ==\
    \ prime then\n        return \"NO\"\n    end\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn (start, end)\n\t\t\telse\n\t\t\t\treturn (start2, end2)\n\t\t\t\
    end\n\t\telse\n\t\t\treturn (start, end2)\n\t\tend\n\telse\n\t\treturn (start2,\
    \ end2)\n\tend\nend", "    local start = interval1[1]\n    local end = interval1[2]\n\
    \    local start2 = interval2[1]\n    local end2 = interval2[2]\n    local length\
    \ = end - start\n    local length2 = end2 - start2\n    if length2 == 0 then\n\
    \        return length\n    elseif length2 == 1 then\n        return length\n\
    \    elseif length2 == 2 then\n        return length\n    elseif length2 == 3\
    \ then\n        return length\n    elseif length2 == 4 then\n        return length\n\
    \    elseif length2 == 5 then\n        return length\n    elseif length2 == 6\
    \ then\n        return length\n    elseif length2 == 7 then\n        return length\n\
    \    elseif length2 == 8 then\n        return length\n    elseif length2 == 9\
    \ then\n        return length\n    elseif length2 == 10 then\n        return length\n\
    \    elseif length2 == 11 then\n        return length\n    elseif length2 == 12\
    \ then\n        return length\n    elseif length2 == 13 then\n        return length\n\
    \    elseif length2 == 14 then\n        return length\n    elseif length2 == 15\
    \ then\n        return length\n    elseif length2 == 16 then\n        return length\n\
    \    elseif length2 == 17 then\n        return length\n    elseif length2 == 18\
    \ then\n        return length\n    elseif length2 == 19 then\n        return length\n\
    \    elseif length2 == 20 then\n        return length\n    elseif length2 == 21\
    \ then\n        return length\n    elseif length2 == 22 then\n        return length\n\
    \    elseif length2 == 23 then\n        return length\n    elseif length2 == 24\
    \ then\n        return length\n    elseif length2 == 25 then\n        return length\n\
    \    elseif length2 == 26 then\n        return length\n    elseif length2 == 27\
    \ then\n        return length\n    elseif length2 == 28 then\n        return length\n\
    \    elseif length2 == 29 then\n        return length\n    elseif length2 == 30\
    \ then\n        return length\n    elseif length2 == 31 then\n        return length\n\
    \    elseif length2 == 32 then\n        return length\n    elseif length2 == 33\
    \ then\n        return length\n    elseif length2 == 34 then\n        return length\n\
    \    elseif length2 == 35 then\n        return length\n    elseif length2 == 36\
    \ then\n        return length\n    elseif length2 == 37 then\n        return length\n\
    \    elseif length2 == 38 then\n        return length\n    elseif length2 == 39\
    \ then\n        return length\n    elseif length2 == 40 then\n        return length\n\
    \    elseif length2 == 41 then\n        return length\n    elseif length2 == 42\
    \ then\n        return length\n    elseif length2 == 43 then\n        return length\n\
    \    elseif length2 == 44 then\n        return length\n    elseif length2 == 45\
    \ then\n        return length\n    elseif ", "\tlocal start1 = interval1[1]\n\t\
    local end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length1 = end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal length\
    \ = length1 + length2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime_length = 2\n\tlocal prime_start = start1\n\tlocal prime_end\
    \ = start2\n\tlocal prime_length = length\n\tlocal prime_prime = true\n\tlocal\
    \ prime_prime_length = 2\n\tlocal prime_prime_start = start2\n\tlocal prime_prime_end\
    \ = end1\n\tlocal prime_prime_length = length\n\tlocal prime_prime_prime = true\n\
    \tlocal prime_prime_prime_length = 2\n\tlocal prime_prime_prime_start = start1\n\
    \tlocal prime_prime_prime_end = end2\n\tlocal prime_prime_prime_length = length\n\
    \tlocal prime_prime_prime_prime = true\n\tlocal prime_prime_prime_prime_length\
    \ = 2\n\tlocal prime_prime_prime_prime_start = start2\n\tlocal prime_prime_prime_prime_end\
    \ = end1\n\tlocal prime_prime_prime_prime_length = length\n\tlocal prime_prime_prime_prime_prime\
    \ = true\n\tlocal prime_prime_prime_prime_prime_length = 2\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_length\
    \ = length\n\tlocal prime_prime_prime_prime_prime_start = start2\n\tlocal prime_prime_prime_prime_prime_end\
    \ = end1\n\tlocal prime_prime_prime_prime_prime_length = length\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_prime_end = end2\n\tlocal prime_prime_prime_prime_prime_length\
    \ = length\n\tlocal prime_prime_prime_prime_prime_start = start2\n\tlocal prime_prime_prime_prime_prime_end\
    \ = end1\n\tlocal prime_prime_prime_prime_prime_length = length\n\tlocal prime_prime_prime_prime_prime_start\
    \ = start1\n\tlocal prime_prime_prime_prime_", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn false\n\tend\n\tif length2 == 1 then\n\t\treturn true\n\t\
    end\n\tif length2 == 2 then\n\t\tif start <= start2 then\n\t\t\treturn true\n\t\
    \telse\n\t\t\treturn false\n\t\tend\n\tend\n\tlocal prime = true\n\tlocal prime2\
    \ = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\
    \tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9\
    \ = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\
    \tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal\
    \ prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19\
    \ = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\
    \tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal\
    \ prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29\
    \ = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\
    \tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal\
    \ prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39\
    \ = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\
    \tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal\
    \ prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49\
    \ = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\
    \tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal\
    \ prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59\
    \ = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\
    \tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal\
    \ prime66 = true\n\tlocal prime67 = true\n\t", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn length\n\telse\n\t\tif length2 > length then\n\t\t\tlength\
    \ = length2\n\t\tend\n\tend\n\tif length == 0 then\n\t\treturn \"NO\"\n\tend\n\
    \tif length == 1 then\n\t\treturn \"YES\"\n\tend\n\tif length == 2 then\n\t\t\
    return \"YES\"\n\tend\n\tif length == 3 then\n\t\treturn \"YES\"\n\tend\n\tif\
    \ length == 4 then\n\t\treturn \"YES\"\n\tend\n\tif length == 5 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length == 6 then\n\t\treturn \"YES\"\n\tend\n\tif length\
    \ == 7 then\n\t\treturn \"YES\"\n\tend\n\tif length == 8 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == 9 or length == 10 then\n\t\treturn \"YES\"\n\tend\n\t\
    if length == 11 or length == 12 then\n\t\treturn \"YES\"\n\tend\n\tif length ==\
    \ 13 or length == 14 then\n\t\treturn \"YES\"\n\tend\n\tif length == 15 or length\
    \ == 16 then\n\t\treturn \"YES\"\n\tend\n\tif length == 17 or length == 18 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 19 or length == 20 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length == 21 or length == 22 then\n\t\treturn \"YES\"\n\
    \tend\n\tif length == 23 or length == 24 then\n\t\treturn \"YES\"\n\tend\n\tif\
    \ length == 25 or length == 26 then\n\t\treturn \"YES\"\n\tend\n\tif length ==\
    \ 27 or length == 28 then\n\t\treturn \"YES\"\n\tend\n\tif length == 29 or length\
    \ == 30 then\n\t\treturn \"YES\"\n\tend\n\tif length == 31 or length == 32 then\n\
    \t\treturn \"YES\"\n\tend\n\tif length == 33 or length == 34 then\n\t\treturn\
    \ \"YES\"\n\tend\n\tif length == 35 or length == 36 or length == 37 then\n\t\t\
    return \"YES\"\n\tend\n\tif length == 38 or length == 39 then\n\t\treturn \"YES\"\
    \n\tend\n\tif length == 40 or length == 41 then\n\t\treturn \"YES\"\n\tend\n\t\
    if length == 42 or length == 43 then\n\t\treturn \"YES\"\n\tend\n\tif length ==\
    \ 44 or length == 45 then\n\t\treturn \"YES\"\n\tend\n", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 or length2\
    \ == 1 then\n\t\treturn nil\n\tend\n\tif length == 0 then\n\t\treturn nil\n\t\
    end\n\tif length == length2 then\n\t\treturn interval1\n\tend\n\tlocal prime =\
    \ true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\t\
    local prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\
    \tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal\
    \ prime65 = true\n\tlocal prime66 = true\n", "\tlocal start = interval1[1]\n\t\
    local end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tif start <= start2\
    \ then\n\t\treturn nil\n\tend\n\tif end <= end2 then\n\t\treturn nil\n\tend\n\t\
    local length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0\
    \ then\n\t\treturn nil\n\tend\n\tif length2 == 1 then\n\t\treturn true\n\tend\n\
    \tif length2 > length / 2 then\n\t\treturn nil\n\tend\n\tlocal prime = true\n\t\
    local prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\t", "\tlocal start1, end1 = interval1[1], interval1[2]\n\t\
    local start2, end2 = interval2[1], interval2[2]\n\tlocal result\n\tlocal start\n\
    \tlocal end\n\tlocal length\n\tlocal prime", "\tlocal interval1Start = interval1[1]\n\
    \tlocal interval1End = interval1[2]\n\tlocal interval2Start = interval2[1]\n\t\
    local interval2End = interval2[2]\n\tlocal interval1Length = interval1End - interval1Start\
    \ + 1\n\tlocal interval2Length = interval2End - interval2Start + 1\n\tlocal intersectionLength\
    \ = interval1End - interval2Start + 1\n\tif interval1Start <= interval2Start and\
    \ interval1End >= interval2End then\n\t\tif intersectionLength == 1 then\n\t\t\
    \treturn \"YES\"\n\t\telse\n\t\t\treturn \"NO\"\n\t\tend\n\telse\n\t\tif intersectionLength\
    \ == 2 then\n\t\t\tif interval1Start <= interval2Start and interval1End >= interval2Start\
    \ then\n\t\t\t\treturn \"YES\"\n\t\t\telse\n\t\t\t\treturn \"NO\"\n\t\t\tend\n\
    \t\telse\n\t\t\tif interval1Start <= interval2Start and interval1End >= interval2Start\
    \ then\n\t\t\t\treturn \"NO\"\n\t\t\telse\n\t\t\t\treturn \"YES\"\n\t\t\tend\n\
    \t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start = start, end = end}\n\t\
    end\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal\
    \ prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67\
    \ = true\n\tlocal prime68 = true\n\tlocal prime69 = true\n\tlocal prime70 = true\n\
    \tlocal prime71 = true", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn nil\n\tend\n\tif\
    \ start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 =\
    \ end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2 = start2, start1\n\
    \t\tend1, end2 = end2, end1\n\tend\n\tif start1 == start2 then\n\t\treturn nil\n\
    \tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1,\
    \ end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2 = start2,\
    \ start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2 then\n\t\t\
    start1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1\
    \ > end2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1,\
    \ end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2 = start2,\
    \ start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2 then\n\t\t\
    start1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1\
    \ > end2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1,\
    \ end2 = end2, end1\n\tend\n\tif start1 > end2 then\n\t\tstart1, start2 = start2,\
    \ start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 < start2 then\n\t\t\
    start1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1\
    \ > end2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tif start1 < start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1,\
    \ end2 = end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn length\n\t\
    elseif length2 == 1 then\n\t\treturn length\n\telse\n\t\treturn length / length2\n\
    \tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 = end1 -\
    \ start1\n\tlocal length2 = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\
    \t\treturn false\n\tend\n\tif start1 <= start2 then\n\t\treturn start1 <= end2\
    \ and end2 <= end1\n\telse\n\t\treturn start2 <= end1 and end1 <= end2\n\tend\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn false\n\tend\n\tlocal length = end - start\n\tlocal length2\
    \ = end2 - start2\n\tif length2 == 0 then\n\t\treturn true\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\
    \tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\
    \tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal\
    \ prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal prime68\
    \ = true\n\tlocal prime69 = true\n\tlocal prime70 = true\n\tlocal prime71 = ",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start <= end and start2 <= end2 then\n\t\tif\
    \ start < start2 then\n\t\t\tstart = start2\n\t\telse\n\t\t\tend = end2\n\t\t\
    end\n\tend\n\treturn start, end\nend", "    local start = interval1[1]\n    local\
    \ end = interval1[2]\n    local start2 = interval2[1]\n    local end2 = interval2[2]\n\
    \    if start > end or start2 > end2 then\n        return false\n    end\n   \
    \ if start <= start2 then\n        return true\n    end\n    if end <= end2 then\n\
    \        return true\n    end\n    if start > end2 then\n        return false\n\
    \    end\n    if start == end2 then\n        return true\n    end\n    if start\
    \ == start2 then\n        return true\n    end\n    if end == end2 then\n    \
    \    return true\n    end\n    if start < start2 then\n        return false\n\
    \    end\n    if end < end2 then\n        return false\n    end\n    if start\
    \ == end2 then\n        return true\n    end\n    if start == start2 then\n  \
    \      return true\n    end\n    if end == end2 then\n        return true\n  \
    \  end\n    if start < start2 then\n        return false\n    end\n    if end\
    \ < end2 then\n        return false\n    end\n    if start == end2 then\n    \
    \    return true\n    end\n    if start == start2 then\n        return true\n\
    \    end\n    if end == end2 then\n        return true\n    end\n    if start\
    \ < start2 then\n        return false\n    end\n    if end < end2 then\n     \
    \   return false\n    end\n    if start == end2 then\n        return true\n  \
    \  end\n    if start == start2 then\n        return true\n    end\n    if end\
    \ == end2 then\n        return true\n    end\n    if start < start2 then\n   \
    \     return false\n    end\n    if end < end2 then\n        return false\n  \
    \  end\n    if start == end2 then\n        return true\n    end\n    if start\
    \ == start2 then\n        return true\n    end\n    if end == end2 then\n    \
    \    return true\n    end\n    if start < start2 then\n        return false\n\
    \    end\n    if end < end2 then\n        return false\n    end\n    if start\
    \ == end2 then\n        return true\n    end\n    if start == start2 then\n  \
    \      return true\n    end\n    if end == end2 then\n        return true\n  \
    \  end\n    if start < start2 then\n        return false\n    end\n    if end\
    \ < end2 then\n        return false\n    end\n    if start == end2 then\n    \
    \    return true\n    end\n    if start == start2 then\n        return true\n\
    \    end\n    if end == end2 then\n        return true\n    end\n    if start\
    \ < start2 then\n        return false\n    end\n    if end < end2 then\n     \
    \   return false\n    end\n    if start == end2 then\n        return true", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ nil\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\t\
    if length2 == 0 or length2 == 1 then\n\t\treturn nil\n\tend\n\tif length == length2\
    \ then\n\t\treturn interval1\n\tend\n\tlocal prime = true\n\tfor i = 2, length2\
    \ do\n\t\tif length2 % i == 0 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\
    \tend\n\tif prime then\n\t\treturn interval1\n\tend\n\treturn nil\nend", "\tlocal\
    \ start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tlocal length = length1 + length2\n\tif length == 0 then\n\
    \t\treturn false\n\tend\n\tif length == 1 then\n\t\treturn start1 <= end2 and\
    \ start2 <= end1\n\tend\n\tif length == 2 then\n\t\treturn start1 <= end2 and\
    \ start2 <= end1 and start1 <= end2\n\tend\n\tif length == 3 then\n\t\treturn\
    \ start1 <= end2 and start2 <= end1 and start1 <= end2 and start2 <= end1\n\t\
    end\n\tif length == 4 then\n\t\treturn start1 <= end2 and start2 <= end1 and start1\
    \ <= end2 and start2 <= end1 and start2 <= end2\n\tend\n\tif length == 5 then\n\
    \t\treturn start1 <= end2 and start2 <= end1 and start1 <= end2 and start2 <=\
    \ end1 and start2 <= end2 and start1 <= end3\n\tend\n\tif length == 6 then\n\t\
    \treturn start1 <= end2 and start2 <= end1 and start1 <= end2 and start2 <= end1\
    \ and start2 <= end2 and start1 <= end3 and start2 <= end3\n\tend\n\tif length\
    \ == 7 then\n\t\treturn start1 <= end2 and start2 <= end1 and start1 <= end2 and\
    \ start2 <= end1 and start2 <= end2 and start1 <= end3 and start2 <= end3 and\
    \ start2 <= end4\n\tend\n\tif length == 8 then\n\t\treturn start1 <= end2 and\
    \ start2 <= end1 and start1 <= end2 and start2 <= end1 and start2 <= end2 and\
    \ start1 <= end3 and start2 <= end3 and start2 <= end4 and start1 <= end4\n\t\
    end\n\tif length == 9 then\n\t\treturn start1 <= end2 and start2 <= end1 and start1\
    \ <= end2 and start2 <= end1 and start2 <= end2 and start1 <= end3 and start2\
    \ <= end3 and start2 <= end4 and start1 <= end4 and start2 <= end4\n\tend\nend",
  "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start <= end and start2 <= end2 then\n\t\tif\
    \ start < start2 then\n\t\t\tstart = start2\n\t\telse\n\t\t\tend = end2\n\t\t\
    end\n\tend\n\treturn start, end\nend", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start1 < end2 and start2 < end1 then\n\t\treturn {start1, end2}\n\telseif\
    \ start1 < end2 and start2 > end1 then\n\t\treturn {start2, end1}\n\telseif start2\
    \ < end1 and start1 < end2 then\n\t\treturn {start1, end2}\n\telseif start2 <\
    \ end1 and start2 > end1 then\n\t\treturn {start2, end1}\n\telse\n\t\treturn nil\n\
    \tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn false\n\tend\n\tif start <= start2 then\n\t\treturn\
    \ true\n\tend\n\tif end <= end2 then\n\t\treturn true\n\tend\n\tif start == start2\
    \ and end == end2 then\n\t\treturn true\n\tend\n\treturn false\nend", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tif length2 > length\
    \ then\n\t\tlength = length2\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\
    \tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5 = true\n\tlocal prime6\
    \ = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\
    \tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal\
    \ prime13 = true\n\tlocal prime14 = true\n\tlocal prime15 = true\n\tlocal prime16\
    \ = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\
    \tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal\
    \ prime23 = true\n\tlocal prime24 = true\n\tlocal prime25 = true\n\tlocal prime26\
    \ = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\
    \tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal\
    \ prime33 = true\n\tlocal prime34 = true\n\tlocal prime35 = true\n\tlocal prime36\
    \ = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\
    \tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal\
    \ prime43 = true\n\tlocal prime44 = true\n\tlocal prime45 = true\n\tlocal prime46\
    \ = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\
    \tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal\
    \ prime53 = true\n\tlocal prime54 = true\n\tlocal prime55 = true\n\tlocal prime56\
    \ = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\
    \tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal\
    \ prime63 = true\n\tlocal prime64 = true\n\tlocal prime65 = true\n\tlocal prime66\
    \ = true\n\tlocal prime67 = true\n\tlocal prime68 = true\n\tlocal prime69 = true\n\
    \tlocal prime70 = true\n\tlocal prime71 = true\n\t", "    local start = interval1[1]\n\
    \    local end = interval1[2]\n    local start2 = interval2[1]\n    local end2\
    \ = interval2[2]\n    if start > end or start2 > end2 then\n        return \"\
    NO\"\n    end\n    if start <= start2 then\n        return \"NO\"\n    end\n \
    \   if end <= end2 then\n        return \"NO\"\n    end\n    if start == start2\
    \ and end == end2 then\n        return \"YES\"\n    end\n    if start == start2\
    \ then\n        return \"YES\"\n    end\n    if end == end2 then\n        return\
    \ \"YES\"\n    end\n    local length = end - start\n    local length2 = end2 -\
    \ start2\n    if length2 == 1 then\n        return \"NO\"\n    end\n    if length2\
    \ == 0 then\n        return \"YES\"\n    end\n    if length2 == length then\n\
    \        return \"YES\"\n    end\n    local prime = 1\n    local prime2 = 2\n\
    \    while prime <= length2 do\n        if prime % length2 == 0 then\n       \
    \     prime2 = prime + 1\n        end\n        prime = prime + 1\n    end\n  \
    \  if prime == length2 then\n        return \"YES\"\n    end\n    return \"NO\"\
    \nend", "    local start = interval1[1]\n    local end = interval1[2]\n    local\
    \ start2 = interval2[1]\n    local end2 = interval2[2]\n    if start > end or\
    \ start2 > end2 then\n        return \"NO\"\n    end\n    local length = end -\
    \ start\n    local length2 = end2 - start2\n    if length2 == 0 then\n       \
    \ return \"NO\"\n    end\n    if length == length2 then\n        return \"YES\"\
    \n    end\n    if length < length2 then\n        local temp = length\n       \
    \ length = length2\n        length2 = temp\n    end\n    local count = 0\n   \
    \ for i = start, start + length do\n        for j = start2, start2 + length2 do\n\
    \            if i == j then\n                count = count + 1\n            end\n\
    \        end\n    end\n    if count == length2 then\n        return \"YES\"\n\
    \    end\n    return \"NO\"\nend", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start <= end2 then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\
    \t\t\t\treturn true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\
    \t\treturn false\n\t\tend\n\telse\n\t\treturn false\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tif length == 0 then\n\
    \t\treturn nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start = start, end\
    \ = start + length}\n\tend\n\tlocal prime = true\n\tfor i = 2, length2 do\n\t\t\
    if length2 % i == 0 then\n\t\t\tprime = false\n\t\t\tbreak\n\t\tend\n\tend\n\t\
    if prime then\n\t\treturn {start = start, end = start + length}\n\tend\n\treturn\
    \ nil\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn false\n\tend\n\tlocal length = end - start\n\tlocal\
    \ length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn length\n\tend\n\t\
    if length2 == 1 then\n\t\treturn length\n\tend\n\tlocal length = length / length2\n\
    \tif length == 0 then\n\t\treturn false\n\tend\n\treturn length\nend", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn false\n\telseif length2 == 1 then\n\
    \t\treturn true\n\telse\n\t\treturn length >= length2\n\tend\nend", "\tlocal interval1Start\
    \ = interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal interval2Start\
    \ = interval2[1]\n\tlocal interval2End = interval2[2]\n\tlocal intersectionStart\
    \ = interval1Start <= interval2Start and interval1End >= interval2End\n\tlocal\
    \ intersectionEnd = interval1Start <= interval2End or interval1End >= interval2Start\n\
    \tlocal intersectionLength = interval1End - interval1Start + interval2End - interval2Start\n\
    \tlocal isPrime = interval1Start <= interval2Start and interval1End >= interval2End\n\
    \tlocal isIntersectionPrime = intersectionStart and intersectionEnd\n\tlocal isIntersectionPrimeLength\
    \ = intersectionLength > 0 and intersectionLength % 2 == 0 and isPrime\n\treturn\
    \ isIntersectionPrime and isIntersectionPrimeLength\nend", "\tlocal interval1Start\
    \ = interval1[1]\n\tlocal interval1End = interval1[2]\n\tlocal interval2Start\
    \ = interval2[1]\n\tlocal interval2End = interval2[2]\n\tlocal interval1Length\
    \ = interval1End - interval1Start\n\tlocal interval2Length = interval2End - interval2Start\n\
    \tlocal interval1Intersection = interval1Start + interval1Length / 2\n\tlocal\
    \ interval2Intersection = interval2Start + interval2Length / 2\n\tif interval1Start\
    \ <= interval2Start and interval1End >= interval2End then\n\t\tif interval1Start\
    \ <= interval2Intersection and interval1Intersection <= interval2End then\n\t\t\
    \treturn interval1Intersection\n\t\telse\n\t\t\treturn interval2Intersection\n\
    \t\tend\n\telseif interval1Start <= interval2Intersection and interval1Intersection\
    \ <= interval2End then\n\t\treturn interval1Intersection\n\telse\n\t\treturn interval2Intersection\n\
    \tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn true\n\telseif\
    \ length2 == 1 then\n\t\treturn start <= end2\n\telse\n\t\treturn start <= end2\
    \ and length2 ~= length\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tif start <=\
    \ start2 then\n\t\treturn true\n\tend\n\tif start <= end2 then\n\t\treturn false\n\
    \tend\n\treturn true\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start1 <= end2\
    \ and start2 <= end1 then\n\t\treturn interval1[1], interval2[1]\n\telse\n\t\t\
    return nil, nil\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ length\n\telseif length2 == 1 then\n\t\treturn length\n\telseif length2 == length\
    \ then\n\t\treturn length\n\telse\n\t\tlocal count = 0\n\t\tlocal count2 = 0\n\
    \t\tlocal i = 0\n\t\tlocal j = 0\n\t\twhile i < length do\n\t\t\twhile j < length2\
    \ do\n\t\t\t\tif interval1[i] <= interval2[j] then\n\t\t\t\t\tcount = count +\
    \ 1\n\t\t\t\t\ti = i + 1\n\t\t\t\telseif interval2[j] <= interval1[i] then\n\t\
    \t\t\t\tcount2 = count2 + 1\n\t\t\t\t\tj = j + 1\n\t\t\t\telse\n\t\t\t\t\tbreak\n\
    \t\t\t\tend\n\t\t\tend\n\t\t\tif count == length2 then\n\t\t\t\treturn count\n\
    \t\t\telseif count2 == length2 then\n\t\t\t\treturn count\n\t\t\telse\n\t\t\t\t\
    count = count + 1\n\t\t\t\ti = i + 1\n\t\t\tend\n\t\tend\n\t\treturn count\n\t\
    end\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn \"NO\"\n\telseif start <= start2 then\n\t\treturn \"\
    NO\"\n\telseif start2 <= end then\n\t\treturn \"NO\"\n\telse\n\t\treturn \"YES\"\
    \n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\t\
    local start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end1\
    \ - start1\n\tlocal length2 = end2 - start2\n\tif start1 <= start2 and end1 >=\
    \ end2 then\n\t\tif length == length2 then\n\t\t\treturn \"YES\"\n\t\telse\n\t\
    \t\treturn \"NO\"\n\t\tend\n\telse\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 ~= length then\n\t\treturn \"NO\"\n\tend\n\tif length2\
    \ == 0 then\n\t\treturn \"YES\"\n\tend\n\tlocal prime = true\n\tlocal i = 1\n\t\
    while prime and i <= length2 do\n\t\tif start2 % i == 0 and end2 % i == 0 then\n\
    \t\t\tprime = false\n\t\tend\n\t\ti = i + 1\n\tend\n\tif prime then\n\t\treturn\
    \ \"YES\"\n\tend\n\treturn \"NO\"\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tif start ==\
    \ start2 and end == end2 then\n\t\treturn true\n\tend\n\tif start < start2 then\n\
    \t\tstart = start2\n\tend\n\tif end < end2 then\n\t\tend = end2\n\tend\n\tif start\
    \ > end then\n\t\tstart, end = end, start\n\tend\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn true\n\tend\n\
    \tif length % length2 == 0 then\n\t\treturn false\n\tend\n\tlocal prime = true\n\
    \tlocal i = 2\n\twhile i < length2 do\n\t\tif length2 % i == 0 then\n\t\t\tprime\
    \ = false\n\t\t\tbreak\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn prime\nend", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ false\n\tend\n\tif start <= start2 then\n\t\treturn false\n\tend\n\tif end <=\
    \ end2 then\n\t\treturn false\n\tend\n\tif start == start2 and end == end2 then\n\
    \t\treturn true\n\tend\n\tif start == start2 then\n\t\treturn true\n\tend\n\t\
    if end == end2 then\n\t\treturn true\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn true\n\tend\n\
    \tif length2 == 1 then\n\t\treturn length == length2\n\tend\n\tif length2 == 2\
    \ then\n\t\treturn length == length2 or (length == length2 and length == length2)\n\
    \tend\n\tif length2 == 3 then\n\t\treturn length == length2 or (length == length2\
    \ and length == length2)\n\tend\n\tif length2 == 4 then\n\t\treturn length ==\
    \ length2 or (length == length2 and length == length2)\n\tend\n\tif length2 ==\
    \ 5 then\n\t\treturn length == length2 or (length == length2 and length == length2)\n\
    \tend\n\tif length2 == 6 then\n\t\treturn length == length2 or (length == length2\
    \ and length == length2)\n\tend\n\tif length2 == 7 then\n\t\treturn length ==\
    \ length2 or (length == length2 and length == length2)\n\tend\n\tif length2 ==\
    \ 8 then\n\t\treturn length == length2 or (length == length2 and length == length2)\n\
    \tend\n\tif length2 == 9 then\n\t\treturn length == length2 or (length == length2\
    \ and length == length2)\n\tend\n\tif length2 == 10 then\n\t\treturn length ==\
    \ length2 or (length == length2 and length == length2)\n\tend\n\tif length2 ==\
    \ 11 then\n\t\treturn length == length2 or (length == length2 and length == length2)\n\
    \tend\n\tif length2 == 12 then\n\t\treturn length == length2 or (length == length2\
    \ and length == length2)\n\tend\n\tif length2 == 13 then\n\t\treturn length ==\
    \ length2 or (length == length2 and length == length2)\n\tend\n\tif length2 ==\
    \ 14 then\n\t\treturn length == length2 or (length == length2 and length == length2)\n\
    \tend\n\tif length2 == 15 then\n\t\treturn length == length2 or (length == length2\
    \ and length == length2)\n\tend\n\tif length2 == 16 then\n\t\treturn length ==\
    \ length2 or (length == length2 and length", "\tlocal start = interval1[1]\n\t\
    local end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \t\n\tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\t\n\tif\
    \ start <= start2 then\n\t\treturn true\n\tend\n\t\n\treturn false\nend", "\t\
    local start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end1 - start1 + end2 - start2\n\t\
    if length == 0 then\n\t\treturn nil\n\tend\n\tif start1 < start2 then\n\t\tstart1,\
    \ start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\tif start1 > end2\
    \ then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\tend\n\
    \tif start1 == start2 then\n\t\treturn nil\n\tend\n\tif start1 == end2 then\n\t\
    \treturn start1\n\tend\n\tif start2 == end1 then\n\t\treturn end2\n\tend\n\tlocal\
    \ prime = true\n\tlocal prime_start = start1\n\tlocal prime_end = end1\n\tlocal\
    \ prime_length = end1 - start1\n\tlocal prime_prime_start = prime_start\n\tlocal\
    \ prime_prime_end = prime_end\n\tlocal prime_prime_length = prime_end - prime_start\n\
    \tlocal prime_prime_prime_start = prime_prime_start\n\tlocal prime_prime_prime_end\
    \ = prime_prime_end\n\tlocal prime_prime_prime_length = prime_prime_end - prime_prime_start\n\
    \tlocal prime_prime_prime_prime_start = prime_prime_prime_start\n\tlocal prime_prime_prime_prime_end\
    \ = prime_prime_prime_end\n\tlocal prime_prime_prime_prime_length = prime_prime_prime_end\
    \ - prime_prime_prime_start\n\tlocal prime_prime_prime_prime_start = prime_prime_prime_start\n\
    \tlocal prime_prime_prime_prime_end = prime_prime_prime_end\n\tlocal prime_prime_prime_prime_length\
    \ = prime_prime_prime_end - prime_prime_prime_prime_start\n\tlocal prime_prime_prime_prime_prime_start\
    \ = prime_prime_prime_prime_start\n\tlocal prime_prime_prime_prime_prime_end =\
    \ prime_prime_prime_prime_end\n\tlocal prime_prime_prime_prime_prime_length =\
    \ prime_prime_prime_prime_end - prime_prime_prime_prime_prime_start\n\tlocal prime_prime_prime_prime_prime_prime_start\
    \ = prime_prime_prime_prime_prime_start\n\t", "\tlocal start = interval1[1]\n\t\
    local end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn false\n\telseif length2 == 1 then\n\t\treturn start <= end2\n\
    \telse\n\t\treturn start <= end2 and length == length2\n\tend\nend", "    local\
    \ start = interval1[1]\n    local end = interval1[2]\n    local start2 = interval2[1]\n\
    \    local end2 = interval2[2]\n    if start > end or start2 > end2 then\n   \
    \     return false\n    end\n    if start <= start2 and end <= end2 then\n   \
    \     return true\n    end\n    if start <= start2 and end > end2 then\n     \
    \   return true\n    end\n    if start > start2 and end <= end2 then\n       \
    \ return true\n    end\n    if start > start2 and end > end2 then\n        return\
    \ true\n    end\n    return false\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \t\n\tif start <= end and start2 <= end2 then\n\t\treturn start, end \n\telse\n\
    \t\treturn end2, end\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start = start, end = start\
    \ + length}\n\tend\n\tlocal prime = primes[length2]\n\tif prime == nil then\n\t\
    \treturn nil\n\tend\n\tlocal prime2 = primes[length]\n\tif prime == nil then\n\
    \t\treturn nil\n\tend\n\tif prime == prime2 then\n\t\treturn {start = start, end\
    \ = start + length}\n\tend\n\tlocal prime3 = primes[prime]\n\tif prime3 == nil\
    \ then\n\t\treturn nil\n\tend\n\tlocal prime4 = primes[prime3]\n\tif prime4 ==\
    \ nil then\n\t\treturn nil\n\tend\n\tif prime == prime3 then\n\t\treturn {start\
    \ = start, end = start + length}\n\tend\n\tlocal prime5 = primes[prime4]\n\tif\
    \ prime5 == nil then\n\t\treturn nil\n\tend\n\tlocal prime6 = primes[prime5]\n\
    \tif prime6 == nil then\n\t\treturn nil\n\tend\n\tif prime == prime4 then\n\t\t\
    return {start = start, end = start + length}\n\tend\n\tlocal prime7 = primes[prime6]\n\
    \tif prime7 == nil then\n\t\treturn nil\n\tend\n\tif prime == prime5 then\n\t\t\
    return {start = start, end = start + length}\n\tend\n\tlocal prime8 = primes[prime7]\n\
    \tif prime8 == nil then\n\t\treturn nil\n\tend\n\tif prime == prime6 then\n\t\t\
    return {start = start, end = start + length}\n\tend\n\tlocal prime9 = primes[prime8]\n\
    \tif prime9 == nil then\n\t\treturn nil\n\tend\n\tif prime == prime7 then\n\t\t\
    return {start = start, end = start + length}\n\tend\n\tlocal prime10 = primes[prime9]\n\
    \tif prime10 == nil then\n\t\treturn nil\n\tend\n\tif prime == prime8 then\n\t\
    \treturn {start = start, end = start + length}\n\tend\n\tlocal prime11 = primes[prime10]\n\
    \tif prime11 == nil then\n\t\treturn nil\n\tend\n\tif prime == prime9 then\n\t\
    \treturn {start = start, end = start + length}\n\tend\n\tlocal prime12 = primes[prime11]\n\
    \tif prime12 == nil then", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start <= end2\
    \ then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\t\t\t\treturn\
    \ true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\treturn true\n\
    \t\tend\n\telse\n\t\treturn false\n\tend\nend", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\
    \tif length2 == 0 then\n\t\treturn false\n\tend\n\tif length == 0 then\n\t\treturn\
    \ false\n\tend\n\tif length == length2 then\n\t\tif start <= end2 then\n\t\t\t\
    return true\n\t\telse\n\t\t\treturn false\n\t\tend\n\tend\n\tif length < length2\
    \ then\n\t\treturn false\n\tend\n\tif start <= start2 then\n\t\treturn true\n\t\
    else\n\t\treturn false\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return length\n\tend\n\tif length2 == 1 then\n\t\treturn length\n\tend\n\tlocal\
    \ prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 =\
    \ true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\t\
    local prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11\
    \ = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\
    \tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal\
    \ prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21\
    \ = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\
    \tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal\
    \ prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31\
    \ = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\
    \tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal\
    \ prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41\
    \ = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\
    \tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal\
    \ prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51\
    \ = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\
    \tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal\
    \ prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61\
    \ = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\
    \tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal\
    \ prime68 = true\n\tlocal prime69 = true", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = math.abs(end - start)\n\tlocal length2 = math.abs(end2 - start2)\n\
    \tif length == length2 then\n\t\treturn true\n\telse\n\t\treturn false\n\tend\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start <= end2 then\n\t\tif\
    \ start <= end2 then\n\t\t\tif start <= end2 then\n\t\t\t\treturn true\n\t\t\t\
    else\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\treturn true\n\t\tend\n\t\
    else\n\t\treturn false\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn length\n\telseif length2 == 1 then\n\t\treturn length\n\t\
    else\n\t\tlocal length = length / 2\n\t\tlocal length2 = length2 / 2\n\t\tlocal\
    \ count = 0\n\t\tlocal count2 = 0\n\t\twhile count < length do\n\t\t\tif start2\
    \ + count2 > end2 then\n\t\t\t\tcount = count + 1\n\t\t\t\tcount2 = count2 + 1\n\
    \t\t\telse\n\t\t\t\tcount = count + 1\n\t\t\t\tcount2 = count2 + 1\n\t\t\tend\n\
    \t\tend\n\t\tif count2 == 0 then\n\t\t\treturn length\n\t\telse\n\t\t\treturn\
    \ length\n\t\tend\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\
    \tif length2 == 1 then\n\t\treturn {start = start, end = start + 1}\n\tend\n\t\
    local prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\
    \tlocal prime68 = true\n", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn\
    \ false\n\telseif length2 == 1 then\n\t\treturn start <= end2\n\telse\n\t\treturn\
    \ length2 <= length\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end =\
    \ interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\t\
    local length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0\
    \ then\n\t\treturn nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start = start,\
    \ end = end}\n\tend\n\tlocal length = length / length2\n\tlocal start = start\
    \ + length\n\tlocal end = start + length\n\treturn {start = start, end = end}\n\
    end", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End = interval1[2]\n\
    \tlocal interval2Start = interval2[1]\n\tlocal interval2End = interval2[2]\n\t\
    local intersectionStart = interval1Start and interval2Start and interval1Start\
    \ <= interval2Start and interval1End >= interval2End\n\tlocal intersectionEnd\
    \ = interval1End or interval2End\n\tlocal intersectionLength = interval1End -\
    \ interval1Start + interval2End - interval2Start\n\treturn (intersectionStart\
    \ and intersectionLength and intersectionLength == interval1End - interval1Start\
    \ + interval2End - interval2Start)\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn \"NO\"\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return \"YES\"\n\tend\n\tif length2 == 1 then\n\t\treturn \"NO\"\n\tend\n\tif\
    \ length == length2 then\n\t\treturn \"YES\"\n\tend\n\tlocal prime = true\n\t\
    local prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\tlocal prime5\
    \ = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8 = true\n\
    \tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\tlocal\
    \ prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal prime15\
    \ = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18 = true\n\
    \tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\tlocal\
    \ prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal prime25\
    \ = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28 = true\n\
    \tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\tlocal\
    \ prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal prime35\
    \ = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38 = true\n\
    \tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\tlocal\
    \ prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal prime45\
    \ = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48 = true\n\
    \tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\tlocal\
    \ prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal prime55\
    \ = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58 = true\n\
    \tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\tlocal\
    \ prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal prime65\
    \ = true\n\tlocal ", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\
    \tif length2 == 1 then\n\t\treturn {start = start, end = start + 1}\n\tend\n\t\
    local prime = primes[length]\n\tif prime == nil then\n\t\treturn nil\n\tend\n\t\
    local prime2 = primes[length2]\n\tif prime2 == nil then\n\t\treturn nil\n\tend\n\
    \tif prime == prime2 then\n\t\treturn {start = start, end = start + 1}\n\tend\n\
    \tlocal prime3 = primes[length2]\n\tif prime3 == nil then\n\t\treturn nil\n\t\
    end\n\tif prime == prime3 then\n\t\treturn {start = start, end = start + 1}\n\t\
    end\n\tlocal prime4 = primes[length]\n\tif prime4 == nil then\n\t\treturn nil\n\
    \tend\n\tif prime == prime4 then\n\t\treturn {start = start, end = start + 1}\n\
    \tend\n\tlocal prime5 = primes[length2]\n\tif prime5 == nil then\n\t\treturn nil\n\
    \tend\n\tif prime == prime5 then\n\t\treturn {start = start, end = start + 1}\n\
    \tend\n\tlocal prime6 = primes[length]\n\tif prime6 == nil then\n\t\treturn nil\n\
    \tend\n\tif prime == prime6 then\n\t\treturn {start = start, end = start + 1}\n\
    \tend\n\tlocal prime7 = primes[length2]\n\tif prime7 == nil then\n\t\treturn nil\n\
    \tend\n\tif prime == prime7 then\n\t\treturn {start = start, end = start + 1}\n\
    \tend\n\tlocal prime8 = primes[length]\n\tif prime8 == nil then\n\t\treturn nil\n\
    \tend\n\tif prime == prime8 then\n\t\treturn {start = start, end = start + 1}\n\
    \tend\n\tlocal prime9 = primes[length2]\n\tif prime9 == nil then\n\t\treturn nil\n\
    \tend\n\tif prime == prime9 then\n\t\treturn {start = start, end = start + 1}\n\
    \tend\n\tlocal prime10 = primes[length]\n\tif prime10 == nil then\n\t\treturn\
    \ nil\n\tend\n\tif prime == prime10 then\n\t\treturn {start = start, end = start\
    \ + 1}\n\tend\n\tlocal prime11 = primes[length2]\n\tif prime11 == nil then\n\t\
    \treturn nil\n\tend\n\tif prime == prime11 then\n\t\treturn ", "\tlocal start\
    \ = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ false\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn length\n\tend\n\tif length2 == 1 then\n\t\t\
    return length\n\tend\n\tif length2 > length then\n\t\tlength = length2\n\tend\n\
    \tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal ", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn true\n\telseif length2 == 1 then\n\
    \t\treturn start <= end2\n\telse\n\t\treturn length2 ~= 0 and (length * length2)\
    \ == length2\n\tend\nend", "    local start = interval1[1]\n    local end = interval1[2]\n\
    \    local start2 = interval2[1]\n    local end2 = interval2[2]\n    if start\
    \ <= end2 then\n        return interval2\n    elseif start2 <= end then\n    \
    \    return interval1\n    else\n        return false\n    end\nend", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tif length2 == 0 then\n\t\treturn length\n\telseif length2 == 1 then\n\
    \t\tif start <= end2 then\n\t\t\treturn length\n\t\telse\n\t\t\treturn length\
    \ + 2\n\t\tend\n\telse\n\t\tlocal length = length / 2\n\t\tlocal length2 = length2\
    \ / 2\n\t\tlocal length3 = length / 3\n\t\tlocal length4 = length2 / 3\n\t\tlocal\
    \ length5 = length3 / 3\n\t\tlocal length6 = length4 / 3\n\t\tlocal length7 =\
    \ length5 / 3\n\t\tlocal length8 = length6 / 3\n\t\tlocal length9 = length7 /\
    \ 3\n\t\tlocal length10 = length8 / 3\n\t\tlocal length11 = length9 / 3\n\t\t\
    local length12 = length10 / 3\n\t\tlocal length13 = length11 / 3\n\t\tlocal length14\
    \ = length12 / 3\n\t\tlocal length15 = length13 / 3\n\t\tlocal length16 = length14\
    \ / 3\n\t\tlocal length17 = length15 / 3\n\t\tlocal length18 = length16 / 3\n\t\
    \tlocal length19 = length17 / 3\n\t\tlocal length20 = length18 / 3\n\t\tlocal\
    \ length21 = length19 / 3\n\t\tlocal length22 = length20 / 3\n\t\tlocal length23\
    \ = length21 / 3\n\t\tlocal length24 = length22 / 3\n\t\tlocal length25 = length23\
    \ / 3\n\t\tlocal length26 = length24 / 3\n\t\tlocal length27 = length25 / 3\n\t\
    \tlocal length28 = length26 / 3\n\t\tlocal length29 = length27 / 3\n\t\tlocal\
    \ length30 = length28 / 3\n\t\tlocal length31 = length29 / 3\n\t\tlocal length32\
    \ = length30 / 3\n\t\tlocal length33 = length31 / 3\n\t\tlocal length34 = length32\
    \ / 3\n\t\tlocal length35 = length33 / 3\n\t\tlocal length36 = length34 / 3\n\t\
    \tlocal length37 = length35 / 3\n\t\tlocal length38 = length36 / 3\n\t\tlocal\
    \ length39 = length37 / 3\n\t\tlocal length40 = length38 / 3\n\t\tlocal length41\
    \ = length39 / 3\n\t\tlocal length42 = length40 / 3\n\t\tlocal length43 = length41\
    \ / 3\n\t\tlocal length44 = length42 / 3\n\t\tlocal length", "\tlocal start1 =\
    \ interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2 =\
    \ end2 - start2\n\tlocal length = length1 + length2\n\tif length == 0 then\n\t\
    \treturn nil\n\tend\n\tlocal prime = true\n\tfor i = 2, length / 2 do\n\t\tif\
    \ start1 + i == end1 or start2 + i == end2 then\n\t\t\tprime = false\n\t\t\tbreak\n\
    \t\tend\n\tend\n\tif prime then\n\t\treturn \"YES\"\n\telse\n\t\treturn \"NO\"\
    \n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn false\n\t\
    elseif length2 == 1 then\n\t\treturn start <= end2\n\telse\n\t\treturn length2\
    \ % length == 0\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end\
    \ - start\n\tlocal length2 = end2 - start2\n\tif length2 ~= length then\n\t\t\
    return \"NO\"\n\tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tfor i = 2,\
    \ length2 do\n\t\tif start2 % i == 0 and end2 % i == 0 then\n\t\t\tprime = false\n\
    \t\tend\n\t\tif start2 % i == 0 and end2 % i != 0 then\n\t\t\tprime2 = false\n\
    \t\tend\n\tend\n\tif prime and prime2 then\n\t\treturn \"YES\"\n\telse\n\t\treturn\
    \ \"NO\"\n\tend\nend", "    local start = interval1[1]\n    local end = interval1[2]\n\
    \    local start2 = interval2[1]\n    local end2 = interval2[2]\n    if start\
    \ > end or start2 > end2 then\n        return false\n    end\n    local length\
    \ = end - start\n    local length2 = end2 - start2\n    if length2 == 0 then\n\
    \        return true\n    end\n    if length2 == 1 then\n        return length\
    \ == start2\n    end\n    local length = length / length2\n    if length == 0\
    \ then\n        return false\n    end\n    return length == 1\nend", "\tlocal\
    \ start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start <= end2 then\n\t\tif start <= end2 then\n\
    \t\t\tif start <= end2 then\n\t\t\t\tif start <= end2 then\n\t\t\t\t\treturn true\n\
    \t\t\t\telse\n\t\t\t\t\treturn false\n\t\t\t\tend\n\t\t\telse\n\t\t\t\treturn\
    \ true\n\t\t\tend\n\t\telse\n\t\t\treturn true\n\t\tend\n\telse\n\t\treturn false\n\
    \tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2\
    \ = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tlocal prime\
    \ = true\n\tfor i = 2, length2 do\n\t\tif length2 % i == 0 then\n\t\t\tprime =\
    \ false\n\t\t\tbreak\n\t\tend\n\tend\n\tif prime then\n\t\treturn \"YES\"\n\t\
    else\n\t\treturn \"NO\"\n\tend\nend", "\tlocal start1 = interval1[1]\n\tlocal\
    \ end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tlocal length = end1 - start1 + end2 - start2\n\tif length == 0 then\n\t\treturn\
    \ nil\n\tend\n\tif start1 <= start2 then\n\t\tlocal temp = start1\n\t\tstart1\
    \ = start2\n\t\tstart2 = temp\n\tend\n\tif end1 <= end2 then\n\t\tlocal temp =\
    \ end1\n\t\tend1 = end2\n\t\tend2 = temp\n\tend\n\tlocal prime = nil\n\tfor i\
    \ = start1, end1 + 1 do\n\t\tif i % length == 0 then\n\t\t\tprime = true\n\t\t\
    \tbreak\n\t\tend\n\tend\n\tif prime == nil then\n\t\treturn nil\n\tend\n\treturn\
    \ prime\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn false\n\tend\n\tif start <= start2 then\n\t\treturn\
    \ false\n\tend\n\tif end <= end2 then\n\t\treturn false\n\tend\n\tif start ==\
    \ start2 and end == end2 then\n\t\treturn true\n\tend\n\tlocal length = end -\
    \ start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn length\
    \ == 0 and length == length2\n\tend\n\tlocal length = length / length2\n\tlocal\
    \ length2 = length2 / length\n\tif length2 == 1 then\n\t\treturn length == 1 and\
    \ length == length2\n\tend\n\tlocal length = length / length2\n\tlocal length2\
    \ = length2 / length\n\tif length2 == 2 then\n\t\treturn length == 2 and length\
    \ == length2\n\tend\n\tlocal length = length / length2\n\tlocal length2 = length2\
    \ / length\n\tif length2 == 3 then\n\t\treturn length == 3 and length == length2\n\
    \tend\n\tlocal length = length / length2\n\tlocal length2 = length2 / length\n\
    \tif length2 == 4 then\n\t\treturn length == 4 and length == length2\n\tend\n\t\
    local length = length / length2\n\tlocal length2 = length2 / length\n\tif length2\
    \ == 5 then\n\t\treturn length == 5 and length == length2\n\tend\n\tlocal length\
    \ = length / length2\n\tlocal length2 = length2 / length\n\tif length2 == 6 then\n\
    \t\treturn length == 6 and length == length2\n\tend\n\tlocal length = length /\
    \ length2\n\tlocal length2 = length2 / length\n\tif length2 == 7 then\n\t\treturn\
    \ length == 7 and length == length2\n\tend\n\tlocal length = length / length2\n\
    \tlocal length2 = length2 / length\n\tif length2 == 8 then\n\t\treturn length\
    \ == 8 and length == length2\n\tend\n\tlocal length = length / length2\n\tlocal\
    \ length2 = length2 / length\n\tif length2 == 9 then\n\t\treturn length == 9 and\
    \ length == length2\n\tend\n\tlocal length = length / length2\n\tlocal length2\
    \ = length2 / length\n\tif length2 == 10 then\n\t\treturn length == 10 and length\
    \ == length2\n\tend\n\tlocal length = length / length2\n\tlocal length2 = length2\
    \ / length\n\tif length2 == 11 then\n\t\treturn length == 11 and length == length2\n\
    \tend\n\tlocal length = length / length2\n\tlocal length2 = length2 / ", "\tlocal\
    \ start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length1 = end1 - start1\n\tlocal length2\
    \ = end2 - start2\n\tif length1 == 0 or length2 == 0 then\n\t\treturn nil\n\t\
    end\n\tif length1 == length2 then\n\t\treturn interval1\n\tend\n\tif start1 <\
    \ start2 then\n\t\tstart1, start2 = start2, start1\n\t\tend1, end2 = end2, end1\n\
    \tend\n\tlocal length = end1 - start1\n\tif length % 2 == 0 then\n\t\treturn nil\n\
    \tend\n\tlocal prime = true\n\tlocal prime_number = 2\n\tlocal prime_number_count\
    \ = 0\n\tlocal prime_number_count_2 = 0\n\tlocal prime_number_count_3 = 0\n\t\
    local prime_number_count_4 = 0\n\tlocal prime_number_count_5 = 0\n\tlocal prime_number_count_6\
    \ = 0\n\tlocal prime_number_count_7 = 0\n\tlocal prime_number_count_8 = 0\n\t\
    local prime_number_count_9 = 0\n\tlocal prime_number_count_10 = 0\n\tlocal prime_number_count_11\
    \ = 0\n\tlocal prime_number_count_12 = 0\n\tlocal prime_number_count_13 = 0\n\t\
    local prime_number_count_14 = 0\n\tlocal prime_number_count_15 = 0\n\tlocal prime_number_count_16\
    \ = 0\n\tlocal prime_number_count_17 = 0\n\tlocal prime_number_count_18 = 0\n\t\
    local prime_number_count_19 = 0\n\tlocal prime_number_count_20 = 0\n\tlocal prime_number_count_21\
    \ = 0\n\tlocal prime_number_count_22 = 0\n\tlocal prime_number_count_23 = 0\n\t\
    local prime_number_count_24 = 0\n\tlocal prime_number_count_25 = 0\n\tlocal prime_number_count_26\
    \ = 0\n\tlocal prime_number_count_27 = 0\n\tlocal prime_number_count_28 = 0\n\t\
    local prime_number_count_29 = 0\n\tlocal prime_number_count_30 = 0\n\tlocal prime_number_count_31\
    \ = 0\n\tlocal prime_number_count_32 = 0\n\tlocal prime_number_count_33 = 0\n\t\
    local prime_number_count_34 = 0\n\tlocal prime_number_count_35 = 0\n\tlocal prime_number_count_36\
    \ = 0\n\tlocal prime_number_count_37 = 0\n\tlocal prime_number_count_38 = 0\n\t\
    local prime_number_count_39 = 0\n\tlocal prime_number_count_40 = 0\n\tlocal prime_number_count_41\
    \ = 0\n\tlocal prime", "\tlocal interval1_start = interval1[1]\n\tlocal interval1_end\
    \ = interval1[2]\n\tlocal interval2_start = interval2[1]\n\tlocal interval2_end\
    \ = interval2[2]\n\tlocal intersection_start = interval1_start < interval2_start\
    \ and interval1_end < interval2_end and interval1_start < interval2_end and interval1_end\
    \ < interval2_start or interval1_start < interval2_start and interval1_end > interval2_end\
    \ and interval1_start < interval2_end and interval1_end > interval2_start or interval1_start\
    \ < interval2_start and interval1_end > interval2_end and interval1_start > interval2_end\
    \ and interval1_end > interval2_start\n\tlocal intersection_end = interval1_start\
    \ < interval2_start and interval1_end < interval2_end and interval1_start < interval2_end\
    \ and interval1_end > interval2_start or interval1_start < interval2_start and\
    \ interval1_end > interval2_end and interval1_start > interval2_end and interval1_end\
    \ > interval2_start\n\tlocal intersection_length = interval1_end - interval1_start\
    \ + interval2_end - interval2_start\n\tlocal intersection_prime = not (interval1_start\
    \ < interval2_start and interval1_end < interval2_end and interval1_start < interval2_end\
    \ and interval1_end > interval2_start or interval1_start < interval2_start and\
    \ interval1_end > interval2_end and interval1_start > interval2_end and interval1_end\
    \ > interval2_start)\n\treturn intersection_start, intersection_end, intersection_length,\
    \ intersection_prime\nend", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length1 =\
    \ end1 - start1\n\tlocal length2 = end2 - start2\n\tlocal length_intersection\
    \ = length1 + length2\n\tif length_intersection == 0 then\n\t\treturn \"NO\"\n\
    \tend\n\tif length_intersection == 1 then\n\t\treturn \"YES\"\n\tend\n\tif length_intersection\
    \ == 2 then\n\t\treturn \"YES\"\n\tend\n\tif length_intersection % 2 == 0 then\n\
    \t\tlocal prime = true\n\t\tlocal i = 3\n\t\twhile i < length_intersection do\n\
    \t\t\tif interval1[1] <= interval2[1] and interval2[1] <= interval1[2] then\n\t\
    \t\t\tprime = false\n\t\t\t\tbreak\n\t\t\tend\n\t\t\ti = i + 2\n\t\tend\n\t\t\
    if prime then\n\t\t\treturn \"YES\"\n\t\tend\n\tend\n\treturn \"NO\"\nend", "\t\
    local start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start1 <= end2 and start2 <= end1 then\n\t\t\
    return interval1[1], interval2[1]\n\telse\n\t\treturn nil, nil\n\tend\nend", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tlocal length = end - start\n\tlocal length2 = end2\
    \ - start2\n\tlocal prime = true\n\tif length2 == 0 then\n\t\treturn true\n\t\
    elseif length2 == 1 then\n\t\treturn start <= end2\n\telseif length2 == 2 then\n\
    \t\treturn start <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2\n\t\
    elseif length2 == 3 then\n\t\treturn start <= end2 and\n\t\t\tstart <= end2 and\n\
    \t\t\tstart <= end2 and\n\t\t\tstart <= end2\n\telseif length2 == 4 then\n\t\t\
    return start <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\
    \t\tstart <= end2 and\n\t\t\tstart <= end2\n\telseif length2 == 5 then\n\t\treturn\
    \ start <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\t\
    start <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2\n\telseif length2\
    \ == 6 then\n\t\treturn start <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart\
    \ <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <=\
    \ end2 and\n\t\t\tstart <= end2\n\telseif length2 == 7 then\n\t\treturn start\
    \ <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <=\
    \ end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2\
    \ and\n\t\t\tstart <= end2\n\telseif length2 == 8 then\n\t\treturn start <= end2\
    \ and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\
    \t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\
    \tstart <= end2 and\n\t\t\tstart <= end2\n\telseif length2 == 9 then\n\t\treturn\
    \ start <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\t\
    start <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart\
    \ <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <= end2 and\n\t\t\tstart <=\
    \ end2 and\n\t\t\tstart <= end2\n\telseif length2 == 10 then\n\t\treturn start\
    \ <= end", "\tlocal interval1Start = interval1[1]\n\tlocal interval1End = interval1[2]\n\
    \tlocal interval2Start = interval2[1]\n\tlocal interval2End = interval2[2]\n\t\
    local intersectionStart = interval1Start <= interval2Start and interval1End >=\
    \ interval2End\n\tlocal intersectionEnd = interval1Start <= interval2End and interval1End\
    \ >= interval2Start\n\tlocal intersectionLength = interval1End - interval1Start\
    \ + interval2End - interval2Start\n\tlocal intersectionIsPrime = interval1Start\
    \ <= interval2Start and interval1End >= interval2End\n\treturn (intersectionStart\
    \ and intersectionEnd or intersectionLength) and intersectionIsPrime or false\n\
    end", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2 > end2\
    \ then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\tif length2 ==\
    \ 1 then\n\t\treturn {start = start, end = start + length}\n\tend\n\tlocal prime\
    \ = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4 = true\n\
    \tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\tlocal prime8\
    \ = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal prime11 = true\n\
    \tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14 = true\n\tlocal\
    \ prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\tlocal prime18\
    \ = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal prime21 = true\n\
    \tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24 = true\n\tlocal\
    \ prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\tlocal prime28\
    \ = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal prime31 = true\n\
    \tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34 = true\n\tlocal\
    \ prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\tlocal prime38\
    \ = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal prime41 = true\n\
    \tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44 = true\n\tlocal\
    \ prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\tlocal prime48\
    \ = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal prime51 = true\n\
    \tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54 = true\n\tlocal\
    \ prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\tlocal prime58\
    \ = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal prime61 = true\n\
    \tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64 = true\n\tlocal\
    \ prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\tlocal prime68\
    \ = true", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tlocal length = end - start\n\
    \tlocal length2 = end2 - start2\n\tif length2 ~= length then\n\t\treturn false\n\
    \tend\n\tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\t\
    local prime4 = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7\
    \ = true\n\tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\
    \tlocal prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal\
    \ prime14 = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17\
    \ = true\n\tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\
    \tlocal prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal\
    \ prime24 = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27\
    \ = true\n\tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\
    \tlocal prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal\
    \ prime34 = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37\
    \ = true\n\tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\
    \tlocal prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal\
    \ prime44 = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47\
    \ = true\n\tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\
    \tlocal prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal\
    \ prime54 = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57\
    \ = true\n\tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\
    \tlocal prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal\
    \ prime64 = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67\
    \ = true\n\tlocal prime68 = true\n\tlocal prime69 = true\n\tlocal prime70 = true\n\
    \tlocal prime71 = true\n\tlocal prime72 = true\n\tlocal prime73 = true\n", "\t\
    local start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\
    \tlocal end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ nil\n\tend\n\tif start < start2 then\n\t\tstart, start2 = start2, start\n\t\
    end\n\tif end < end2 then\n\t\tend, end2 = end2, end\n\tend\n\tif start > end2\
    \ then\n\t\tstart, end = end, start\n\tend\n\tif start2 < end2 then\n\t\tstart2,\
    \ end2 = end2, start2\n\tend\n\tlocal length = end - start\n\tlocal length2 =\
    \ end2 - start2\n\tif length2 == 0 then\n\t\treturn length\n\tend\n\tif length2\
    \ == 1 then\n\t\treturn length\n\tend\n\tif length2 == 2 then\n\t\treturn length\n\
    \tend\n\tif length2 == 3 then\n\t\treturn length\n\tend\n\tif length2 == 4 then\n\
    \t\treturn length\n\tend\n\tif length2 == 5 then\n\t\treturn length\n\tend\n\t\
    if length2 == 6 then\n\t\treturn length\n\tend\n\tif length2 == 7 then\n\t\treturn\
    \ length\n\tend\n\tif length2 == 8 then\n\t\treturn length\n\tend\n\tif length2\
    \ == 9 then\n\t\treturn length\n\tend\n\tif length2 == 10 then\n\t\treturn length\n\
    \tend\n\tif length2 == 11 then\n\t\treturn length\n\tend\n\tif length2 == 12 then\n\
    \t\treturn length\n\tend\n\tif length2 == 13 then\n\t\treturn length\n\tend\n\t\
    if length2 == 14 then\n\t\treturn length\n\tend\n\tif length2 == 15 then\n\t\t\
    return length\n\tend\n\tif length2 == 16 then\n\t\treturn length\n\tend\n\tif\
    \ length2 == 17 then\n\t\treturn length\n\tend\n\tif length2 == 18 then\n\t\t\
    return length\n\tend\n\tif length2 == 19 then\n\t\treturn length\n\tend\n\tif\
    \ length2 == 20 then\n\t\treturn length\n\tend\n\tif length2 == 21 then\n\t\t\
    return length\n\tend\n\tif length2 == 22 then\n\t\treturn length\n\tend\n\tif\
    \ length2 == 23 then\n\t\treturn length\n\tend\n\tif length2 == 24 then\n\t\t\
    return length\n\tend\n\tif length2 == 25 then\n\t\treturn length\n\tend\n\tif\
    \ length2 == 26 then\n\t\treturn length\n\tend\n\tif length2 == 27 then\n\t\t\
    return length\n\tend\n\tif length2 == 28 then\n\t\treturn length\n\tend\n\tif\
    \ length2 == 29 then\n\t\treturn length\n\tend\n\tif length2 == 30 then\n\t\t\
    return length\n\tend\n\tif length2 == 31 then", "\tlocal start = interval1[1]\n\
    \tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return true\n\tend\n\tif length2 == 1 then\n\t\treturn length == start2\n\tend\n\
    \tlocal length = length / length2\n\tif length2 == 2 then\n\t\treturn length ==\
    \ start2 + 1\n\tend\n\tlocal length3 = length / length2\n\treturn length3 == start2\
    \ + 1\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\tlocal\
    \ start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or start2\
    \ > end2 then\n\t\treturn false\n\tend\n\tif start <= start2 then\n\t\treturn\
    \ true\n\tend\n\tif start2 <= end then\n\t\treturn true\n\tend\n\treturn false\n\
    end", "\tlocal start1 = interval1[1]\n\tlocal end1 = interval1[2]\n\tlocal start2\
    \ = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start1 <= end2 and start2\
    \ <= end1 then\n\t\treturn interval1[1], interval2[1]\n\telse\n\t\treturn nil,\
    \ nil\n\tend\nend", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start <= end2\
    \ then\n\t\tif start <= end2 then\n\t\t\tif start <= end2 then\n\t\t\t\treturn\
    \ true\n\t\t\telse\n\t\t\t\treturn false\n\t\t\tend\n\t\telse\n\t\t\treturn false\n\
    \t\tend\n\telse\n\t\treturn false\n\tend\nend", "    local start = interval1[1]\n\
    \    local end = interval1[2]\n    local start2 = interval2[1]\n    local end2\
    \ = interval2[2]\n    if start <= end2 then\n        if start <= end2 then\n \
    \           if start <= end2 then\n                if start <= end2 then\n   \
    \                 if start <= end2 then\n                        if start <= end2\
    \ then\n                            if start <= end2 then\n                  \
    \              if start <= end2 then\n                                    return\
    \ true\n                                else\n                               \
    \     return false\n                                end\n                    \
    \        else\n                                return false\n                \
    \            end\n                        else\n                            return\
    \ false\n                        end\n                    else\n             \
    \           return false\n                    end\n                else\n    \
    \                return false\n                end\n            else\n       \
    \         return false\n            end\n        else\n            return false\n\
    \        end\n    else\n        return false\n    end\nend", "\tlocal start =\
    \ interval1[1]\n\tlocal end = interval1[2]\n\tlocal start2 = interval2[1]\n\t\
    local end2 = interval2[2]\n\tif start > end or start2 > end2 then\n\t\treturn\
    \ false\n\tend\n\tlocal length = end - start\n\tlocal length2 = end2 - start2\n\
    \tif length2 == 0 then\n\t\treturn true\n\tend\n\tif length2 == 1 then\n\t\treturn\
    \ start <= start2\n\tend\n\tif length2 > length / 2 then\n\t\tlength = length\
    \ / 2\n\tend\n\tlocal prime = true\n\tlocal i = 2\n\twhile i < length do\n\t\t\
    if start % i == 0 and end2 % i == 0 then\n\t\t\tprime = false\n\t\tend\n\t\ti\
    \ = i + 1\n\tend\n\treturn prime\nend", "\tlocal start = interval1[1]\n\tlocal\
    \ end = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn false\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return true\n\tend\n\tif length2 == 1 then\n\t\treturn length == start2\n\tend\n\
    \tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\
    \tlocal prime68 = true\n\tlocal ", "\tlocal start = interval1[1]\n\tlocal end\
    \ = interval1[2]\n\tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\
    \tif start > end or start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length\
    \ = end - start\n\tlocal length2 = end2 - start2\n\tif length2 == 0 then\n\t\t\
    return nil\n\tend\n\tif length2 == 1 then\n\t\treturn {start, start + length}\n\
    \tend\n\tlocal prime = primes[length]\n\tif prime == nil then\n\t\treturn nil\n\
    \tend\n\tlocal prime2 = primes[length2]\n\tif prime2 == nil then\n\t\treturn nil\n\
    \tend\n\tif prime == prime2 then\n\t\treturn {start, start + length}\n\tend\n\t\
    local prime3 = primes[length2]\n\tif prime3 == nil then\n\t\treturn nil\n\tend\n\
    \tif prime == prime3 then\n\t\treturn {start, start + length}\n\tend\n\tlocal\
    \ prime4 = primes[length]\n\tif prime4 == nil then\n\t\treturn nil\n\tend\n\t\
    if prime == prime4 then\n\t\treturn {start, start + length}\n\tend\n\tlocal prime5\
    \ = primes[length2]\n\tif prime5 == nil then\n\t\treturn nil\n\tend\n\tif prime\
    \ == prime5 then\n\t\treturn {start, start + length}\n\tend\n\tlocal prime6 =\
    \ primes[length]\n\tif prime6 == nil then\n\t\treturn nil\n\tend\n\tif prime ==\
    \ prime6 then\n\t\treturn {start, start + length}\n\tend\n\tlocal prime7 = primes[length2]\n\
    \tif prime7 == nil then\n\t\treturn nil\n\tend\n\tif prime == prime7 then\n\t\t\
    return {start, start + length}\n\tend\n\tlocal prime8 = primes[length]\n\tif prime8\
    \ == nil then\n\t\treturn nil\n\tend\n\tif prime == prime8 then\n\t\treturn {start,\
    \ start + length}\n\tend\n\tlocal prime9 = primes[length2]\n\tif prime9 == nil\
    \ then\n\t\treturn nil\n\tend\n\tif prime == prime9 then\n\t\treturn {start, start\
    \ + length}\n\tend\n\tlocal prime10 = primes[length]\n\tif prime10 == nil then\n\
    \t\treturn nil\n\tend\n\tif prime == prime10 then\n\t\treturn {start, start +\
    \ length}\n\tend\n\tlocal prime11 = primes[length2]\n\tif prime11 == nil then\n\
    \t\treturn nil\n\tend\n\tif prime == prime11 then\n\t\treturn {start, start +\
    \ length}\n\tend\n\t", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn nil\n\tend\n\tlocal length = end - start\n\t\
    local length2 = end2 - start2\n\tif length2 == 0 then\n\t\treturn nil\n\tend\n\
    \tif length2 == 1 then\n\t\treturn {start = start, end = start + length}\n\tend\n\
    \tlocal prime = true\n\tlocal prime2 = true\n\tlocal prime3 = true\n\tlocal prime4\
    \ = true\n\tlocal prime5 = true\n\tlocal prime6 = true\n\tlocal prime7 = true\n\
    \tlocal prime8 = true\n\tlocal prime9 = true\n\tlocal prime10 = true\n\tlocal\
    \ prime11 = true\n\tlocal prime12 = true\n\tlocal prime13 = true\n\tlocal prime14\
    \ = true\n\tlocal prime15 = true\n\tlocal prime16 = true\n\tlocal prime17 = true\n\
    \tlocal prime18 = true\n\tlocal prime19 = true\n\tlocal prime20 = true\n\tlocal\
    \ prime21 = true\n\tlocal prime22 = true\n\tlocal prime23 = true\n\tlocal prime24\
    \ = true\n\tlocal prime25 = true\n\tlocal prime26 = true\n\tlocal prime27 = true\n\
    \tlocal prime28 = true\n\tlocal prime29 = true\n\tlocal prime30 = true\n\tlocal\
    \ prime31 = true\n\tlocal prime32 = true\n\tlocal prime33 = true\n\tlocal prime34\
    \ = true\n\tlocal prime35 = true\n\tlocal prime36 = true\n\tlocal prime37 = true\n\
    \tlocal prime38 = true\n\tlocal prime39 = true\n\tlocal prime40 = true\n\tlocal\
    \ prime41 = true\n\tlocal prime42 = true\n\tlocal prime43 = true\n\tlocal prime44\
    \ = true\n\tlocal prime45 = true\n\tlocal prime46 = true\n\tlocal prime47 = true\n\
    \tlocal prime48 = true\n\tlocal prime49 = true\n\tlocal prime50 = true\n\tlocal\
    \ prime51 = true\n\tlocal prime52 = true\n\tlocal prime53 = true\n\tlocal prime54\
    \ = true\n\tlocal prime55 = true\n\tlocal prime56 = true\n\tlocal prime57 = true\n\
    \tlocal prime58 = true\n\tlocal prime59 = true\n\tlocal prime60 = true\n\tlocal\
    \ prime61 = true\n\tlocal prime62 = true\n\tlocal prime63 = true\n\tlocal prime64\
    \ = true\n\tlocal prime65 = true\n\tlocal prime66 = true\n\tlocal prime67 = true\n\
    \tlocal prime68 = true", "\tlocal start = interval1[1]\n\tlocal end = interval1[2]\n\
    \tlocal start2 = interval2[1]\n\tlocal end2 = interval2[2]\n\tif start > end or\
    \ start2 > end2 then\n\t\treturn false\n\tend\n\tif start <= start2 then\n\t\t\
    return false\n\tend\n\tif end <= end2 then\n\t\treturn false\n\tend\n\tif start\
    \ == start2 and end == end2 then\n\t\treturn true\n\tend\n\tif start == start2\
    \ then\n\t\treturn true\n\tend\n\tif end == end2 then\n\t\treturn true\n\tend\n\
    \tlocal length = end - start\n\tlocal length2 = end2 - start2\n\tif length2 ==\
    \ 0 then\n\t\treturn false\n\tend\n\tif length2 == 1 then\n\t\treturn true\n\t\
    end\n\tif length2 % length == 0 then\n\t\treturn true\n\tend\n\treturn false\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

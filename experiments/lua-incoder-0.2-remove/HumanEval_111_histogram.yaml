name: HumanEval_111_histogram
language: lua
prompt: "-- Given a string representing a space separated lowercase letters, return\
  \ a dictionary\n-- of the letter with the most repetition and containing the corresponding\
  \ count.\n-- If several letters have the same occurrence, return all of them.\n\
  -- Example:\nlocal function histogram(test)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = histogram\n\
  \    lu.assertEquals(candidate('a b b a'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a\
  \ b c a b'), {['a'] = 2, ['b'] = 2})\n    lu.assertEquals(candidate('a b c d g'),\
  \ {['a'] = 1, ['b'] = 1, ['c'] = 1, ['d'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('r\
  \ t g'), {['r'] = 1, ['t'] = 1, ['g'] = 1})\n    lu.assertEquals(candidate('b b\
  \ b b a'), {['b'] = 4})\n    lu.assertEquals(candidate('r t g'), {['r'] = 1, ['t']\
  \ = 1, ['g'] = 1})\n    lu.assertEquals(candidate(''), {})\n    lu.assertEquals(candidate('a'),\
  \ {['a'] = 1})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n\
    \        table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter\n    for _, letter in pairs(counts) do\n        if maxCount < letter\
    \ then\n            maxCount = letter\n            maxLetter = letter\n      \
    \  end\n    end\n    return maxLetter, maxCount\nend", "    local counts = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if counts[letter] > maxCount then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local counts = {}\n    for\
    \ _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n    end\n\
    \    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    return counts\nend", "    local letters = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n    end\n\
    \    local counts = {}\n    for _, letter in ipairs(letters) do\n        table.insert(counts,\
    \ 0)\n    end\n    for _, letter in ipairs(letters) do\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    return counts\nend", "    local letters =\
    \ {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters,\
    \ letter)\n    end\n    local counts = {}\n    for _, letter in ipairs(letters)\
    \ do\n        local count = table.count(letters, letter)\n        if counts[letter]\
    \ == nil then\n            counts[letter] = count\n        else\n            counts[letter]\
    \ = counts[letter] + count\n        end\n    end\n    return counts\nend", " \
    \   local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if maxCount < letter then\n            maxCount\
    \ = letter\n            maxLetter = letter\n        end\n    end\n    return maxLetter,\
    \ maxCount\nend", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\"\
    ) do\n    table.insert(counts, letter)\n  end\n  table.sort(counts, function(a,\
    \ b) return counts[a] > counts[b] end)\n  local result = {}\n  for _, letter in\
    \ ipairs(counts) do\n    table.insert(result, { letter = letter, count = counts[letter]\
    \ })\n  end\n  return result\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  return counts\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter = \"\"\n  for letter in pairs(counts)\
    \ do\n    if counts[letter] > max then\n      max = counts[letter]\n      maxLetter\
    \ = letter\n    end\n  end\n  return maxLetter, max\nend", "    local letters\
    \ = {}\n    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n        table.insert(counts, 0)\n    end\n\
    \    for letter in letters do\n        counts[letter] = counts[letter] + 1\n \
    \   end\n    local max = 0\n    local maxLetter\n    for letter in counts do\n\
    \        if counts[letter] > max then\n            max = counts[letter]\n    \
    \        maxLetter = letter\n        end\n    end\n    return maxLetter, max\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter\n    for _, letter in ipairs(counts) do\n        if maxCount < letter\
    \ then\n            maxCount = letter\n            maxLetter = letter\n      \
    \  end\n    end\n    return maxLetter, maxCount\nend", "    local counts = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        if counts[letter] == nil\
    \ then\n            counts[letter] = 1\n        else\n            counts[letter]\
    \ = counts[letter] + 1\n        end\n    end\n    return counts\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        counts[letter]\
    \ = counts[letter] or 0\n        counts[letter] = counts[letter] + 1\n    end\n\
    \    return counts\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        local count = counts[letter] or 0\n        counts[letter]\
    \ = count + 1\n    end\n    return counts\nend", "    local letters = {}\n   \
    \ for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \    end\n    local counts = {}\n    for _, letter in ipairs(letters) do\n   \
    \     table.insert(counts, 0)\n    end\n    for _, letter in ipairs(letters) do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    return counts\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if maxCount < letter then\n            maxCount\
    \ = letter\n            maxLetter = letter\n        end\n    end\n    local result\
    \ = {}\n    for _, letter in pairs(counts) do\n        if letter == maxCount then\n\
    \            table.insert(result, letter)\n        end\n    end\n    return result\n\
    end", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for letter, count in pairs(counts) do\n    if\
    \ count > max then\n      max = count\n      maxLetter = letter\n    end\n  end\n\
    \  return maxLetter, max\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        counts[letter] = counts[letter] or 0\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    return counts\nend", "  local counts = {}\n\
    \  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return counts\nend",
  "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return\
    \ counts\nend", "    local letters = {}\n    for letter in string.gmatch(test,\
    \ \"([a-z]+)\") do\n        table.insert(letters, letter)\n    end\n    local\
    \ counts = {}\n    for _, letter in ipairs(letters) do\n        table.insert(counts,\
    \ 0)\n    end\n    for _, letter in ipairs(letters) do\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    local max = 0\n    local maxLetter\n    for\
    \ _, letter in ipairs(letters) do\n        if counts[letter] > max then\n    \
    \        max = counts[letter]\n            maxLetter = letter\n        end\n \
    \   end\n    local result = {}\n    for _, letter in ipairs(letters) do\n    \
    \    if letter == maxLetter then\n            table.insert(result, letter)\n \
    \       end\n    end\n    return result\nend", "    local counts = {}\n    for\
    \ letter in string.gmatch(test, \"%a\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter in ipairs(counts)\
    \ do\n        if counts[letter] > maxCount then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for letter, count in pairs(counts) do\n    if\
    \ count > max then\n      max = count\n      maxLetter = letter\n    end\n  end\n\
    \  return maxLetter, max\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter, count in pairs(counts)\
    \ do\n    if count > max then\n      max = count\n      maxLetter = letter\n \
    \   end\n  end\n  return maxLetter, max\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    table.insert(counts, letter)\n  end\n  table.sort(counts,\
    \ function(a, b) return counts[a] > counts[b] end)\n  return counts\nend", " \
    \   local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    table.sort(counts)\n    local max = 0\n    local maxLetter\n\
    \    for _, letter in pairs(counts) do\n        if letter == maxLetter then\n\
    \            max = max + 1\n        else\n            maxLetter = letter\n   \
    \     end\n    end\n    local result = {}\n    for _, letter in pairs(counts)\
    \ do\n        if letter == maxLetter then\n            result[letter] = counts[letter]\n\
    \        end\n    end\n    return result\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n   \
    \ counts[letter] = counts[letter] + 1\n  end\n  return counts\nend", "  local\
    \ counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] =\
    \ counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return\
    \ counts\nend", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        table.insert(counts, letter)\n    end\n    table.sort(counts, function(a,\
    \ b) return counts[a] > counts[b] end)\n    return counts\nend", "  local counts\
    \ = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return counts\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter = \"\"\n    for\
    \ _, letter in ipairs(counts) do\n        if counts[letter] > maxCount then\n\
    \            maxCount = counts[letter]\n            maxLetter = letter\n     \
    \   end\n    end\n    return maxLetter, maxCount\nend", "    local counts = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if maxCount < letter then\n            maxCount = letter\n     \
    \       maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local counts = {}\n    for\
    \ _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n    end\n\
    \    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter = \"\"\n    for _, letter\
    \ in ipairs(letters) do\n        if counts[letter] > max then\n            max\
    \ = counts[letter]\n            maxLetter = letter\n        end\n    end\n   \
    \ return maxLetter, max\nend", "    local letters = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        table.insert(letters, letter)\n    end\n    local counts\
    \ = {}\n    for _, letter in ipairs(letters) do\n        table.insert(counts,\
    \ 0)\n    end\n    for _, letter in ipairs(letters) do\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    local max = 0\n    local maxLetter\n    for\
    \ _, letter in ipairs(letters) do\n        if counts[letter] > max then\n    \
    \        max = counts[letter]\n            maxLetter = letter\n        end\n \
    \   end\n    local result = {}\n    for _, letter in ipairs(letters) do\n    \
    \    if letter == maxLetter then\n            table.insert(result, letter)\n \
    \       end\n    end\n    return result\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n   \
    \ counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local maxLetter\n\
    \  for letter, count in pairs(counts) do\n    if count > max then\n      max =\
    \ count\n      maxLetter = letter\n    end\n  end\n  return maxLetter, max\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = #counts\n    local maxLetter = nil\n\
    \    local maxCountLetter = nil\n    for i = 1, #counts do\n        if counts[i]\
    \ ~= maxCount then\n            maxCount = counts[i]\n            maxLetter =\
    \ i\n        end\n    end\n    for i = 1, #counts do\n        if counts[i] ==\
    \ maxCount then\n            table.insert(counts[i], maxLetter)\n        end\n\
    \    end\n    return counts\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        table.insert(counts, letter)\n    end\n    local maxCount\
    \ = 1\n    local maxLetter\n    for _, letter in pairs(counts) do\n        if\
    \ maxCount < letter then\n            maxCount = letter\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if maxCount < counts[letter] then\n           \
    \ maxCount = counts[letter]\n            maxLetter = letter\n        end\n   \
    \ end\n    return maxLetter, maxCount\nend", "    local counts = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n    end\n\
    \    local maxCount = 1\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if counts[letter] > maxCount then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter = \"\"\n    for _, letter in pairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "    local\
    \ letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters,\
    \ letter)\n    end\n    local counts = {}\n    for _, letter in pairs(letters)\
    \ do\n        table.insert(counts, 0)\n    end\n    for _, letter in pairs(letters)\
    \ do\n        counts[letter] = counts[letter] + 1\n    end\n    return counts\n\
    end", "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    table.insert(counts, 0)\n  end\n  for _, letter in ipairs(letters) do\n \
    \   local count = #counts\n    for _, count in ipairs(counts) do\n      if letter\
    \ == letters[count] then\n        count = count + 1\n      end\n    end\n    counts[count]\
    \ = letters[count]\n  end\n  return counts\nend", "    local counts = {}\n   \
    \ for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = table.max(counts)\n    local maxLetter = table.find(counts,\
    \ function(count) return count == maxCount end)\n    return maxLetter, maxCount\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local max = {}\n    for _,\
    \ letter in ipairs(letters) do\n        table.insert(max, 0, letter)\n    end\n\
    \    for _, letter in ipairs(letters) do\n        for _, count in ipairs(max)\
    \ do\n            if letter == max[count] then\n                max[count] = letter\n\
    \            end\n        end\n    end\n    return max\nend", "  local counts\
    \ = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return counts\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        counts[letter]\
    \ = counts[letter] or 0\n        counts[letter] = counts[letter] + 1\n    end\n\
    \    return counts\nend", "    local letters = {}\n    local counts = {}\n   \
    \ for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \        table.insert(counts, 0)\n    end\n    for letter, count in pairs(counts)\
    \ do\n        local max = 0\n        for _, v in pairs(letters) do\n         \
    \   if v == letter then\n                if count > max then\n               \
    \     max = count\n                end\n            end\n        end\n       \
    \ table.insert(letters, letter)\n        table.insert(counts, max)\n    end\n\
    \    return letters\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        counts[letter] = counts[letter] or 0\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    return counts\nend", "    local counts =\
    \ {}\n    for letter in test:gmatch(\"[%a]+\") do\n        counts[letter] = counts[letter]\
    \ or 0\n        counts[letter] = counts[letter] + 1\n    end\n    return counts\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local counts = {}\n    for\
    \ _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n    end\n\
    \    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for _, letter in ipairs(letters)\
    \ do\n        if counts[letter] > max then\n            max = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    local result = {}\n\
    \    for _, letter in ipairs(letters) do\n        if letter == maxLetter then\n\
    \            table.insert(result, letter)\n        end\n    end\n    return result\n\
    end", "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    local count = table.count(letters, letter)\n    if counts[letter] == nil\
    \ then\n      counts[letter] = count\n    else\n      counts[letter] = counts[letter]\
    \ + count\n    end\n  end\n  table.sort(letters)\n  local maxCount = 1\n  local\
    \ maxLetter = letters[1]\n  for _, letter in ipairs(letters) do\n    if counts[letter]\
    \ > maxCount then\n      maxCount = counts[letter]\n      maxLetter = letter\n\
    \    end\n  end\n  return maxLetter, maxCount\nend", "  local counts = {}\n  for\
    \ letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or\
    \ 0\n    counts[letter] = counts[letter] + 1\n  end\n  return counts\nend", " \
    \ local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    local count\
    \ = counts[letter] or 0\n    counts[letter] = count + 1\n  end\n  return counts\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter = \"\"\n    for _, letter in pairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "    local\
    \ letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters,\
    \ letter)\n    end\n    local counts = {}\n    for _, letter in ipairs(letters)\
    \ do\n        table.insert(counts, 0)\n    end\n    for _, letter in ipairs(letters)\
    \ do\n        counts[letter] = counts[letter] + 1\n    end\n    return counts\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = table.max(counts)\n\
    \    local maxLetter = table.find(counts, function(count) return count == maxCount\
    \ end)\n    local maxLetterCount = counts[maxLetter]\n    local maxLetterCounts\
    \ = {}\n    for letter in counts do\n        if counts[letter] == maxCount then\n\
    \            table.insert(maxLetterCounts, letter)\n        end\n    end\n   \
    \ return maxLetterCounts, maxLetter, maxLetterCount\nend", "  local counts = {}\n\
    \  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local\
    \ maxLetter\n  for letter, count in pairs(counts) do\n    if count > max then\n\
    \      max = count\n      maxLetter = letter\n    end\n  end\n  return maxLetter,\
    \ max\nend", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n\
    \    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter, count in pairs(counts)\
    \ do\n    if count > max then\n      max = count\n      maxLetter = letter\n \
    \   end\n  end\n  return maxLetter, max\nend", "    local counts = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if counts[letter] > maxCount then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local counts = {}\n    for\
    \ _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n    end\n\
    \    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for _, letter in ipairs(letters)\
    \ do\n        if counts[letter] > max then\n            max = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, max\n\
    end", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(counts,\
    \ letter)\n  end\n  local maxCount = 1\n  local maxLetter\n  for _, letter in\
    \ pairs(counts) do\n    if counts[letter] > maxCount then\n      maxCount = counts[letter]\n\
    \      maxLetter = letter\n    end\n  end\n  return maxLetter, maxCount\nend",
  "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return\
    \ counts\nend", "    local letters = {}\n    local counts = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n      \
    \  table.insert(counts, 0)\n    end\n    for letter, count in pairs(counts) do\n\
    \        local max = 0\n        for _, v in pairs(letters) do\n            if\
    \ v == letter then\n                if max < count then\n                    max\
    \ = count\n                end\n            end\n        end\n        table.insert(letters,\
    \ letter)\n        table.insert(counts, max)\n    end\n    return letters\nend",
  "  local counts = {}\n  for letter in test:gmatch(\"%a\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return\
    \ counts\nend", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n\
    \    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  return counts\nend", "    local letters = {}\n    for letter in\
    \ test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n    end\n\
    \    local counts = {}\n    for _, letter in pairs(letters) do\n        table.insert(counts,\
    \ 0)\n    end\n    for _, letter in pairs(letters) do\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    local max = 0\n    local maxLetter = \"\"\
    \n    for _, letter in pairs(letters) do\n        if counts[letter] > max then\n\
    \            max = counts[letter]\n            maxLetter = letter\n        end\n\
    \    end\n    local result = {}\n    for _, letter in pairs(letters) do\n    \
    \    if letter == maxLetter then\n            table.insert(result, letter)\n \
    \       end\n    end\n    return result\nend", "    local counts = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = table.max(counts)\n    local maxLetter = table.max(counts,\
    \ function(a, b) return counts[a] > counts[b] end)\n    return { letter = maxLetter,\
    \ count = maxCount }\nend", "  local letters = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    table.insert(letters, letter)\n  end\n  local counts = {}\n \
    \ for _, letter in ipairs(letters) do\n    local count = counts[letter]\n    counts[letter]\
    \ = count or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local max =\
    \ {}\n  for _, letter in pairs(counts) do\n    if counts[letter] > max[letter]\
    \ then\n      max[letter] = counts[letter]\n    end\n  end\n  return max\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if maxCount < letter then\n            maxCount\
    \ = letter\n            maxLetter = letter\n        end\n    end\n    return maxLetter,\
    \ maxCount\nend", "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\"\
    ) do\n    table.insert(letters, letter)\n  end\n  local counts = {}\n  for _,\
    \ letter in ipairs(letters) do\n    table.insert(counts, 0)\n  end\n  for _, letter\
    \ in ipairs(letters) do\n    local count = counts[letter]\n    counts[letter]\
    \ = count + 1\n  end\n  local max = 0\n  local maxLetter\n  for _, letter in ipairs(letters)\
    \ do\n    if counts[letter] > max then\n      max = counts[letter]\n      maxLetter\
    \ = letter\n    end\n  end\n  local result = {}\n  for _, letter in ipairs(letters)\
    \ do\n    if letter == maxLetter then\n      result[letter] = counts[letter]\n\
    \    end\n  end\n  return result\nend", "    local counts = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n    end\n\
    \    local maxCount = 1\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if maxCount < counts[letter] then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter\n    for _, letter in ipairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    table.sort(counts)\n    local maxCount = counts[1]\n \
    \   local maxLetter = counts[1]\n    for i = 2, #counts do\n        if counts[i]\
    \ > maxCount then\n            maxCount = counts[i]\n            maxLetter = counts[i]\n\
    \        end\n    end\n    return maxLetter, maxCount\nend", "    local counts\
    \ = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = tonumber(table.max(counts))\n    local\
    \ maxLetter = table.max(counts)\n    local maxLetterCounts = {}\n    for letter\
    \ in counts do\n        if counts[letter] == maxCount then\n            table.insert(maxLetterCounts,\
    \ letter)\n        end\n    end\n    return maxLetterCounts, maxLetter, maxCount\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local counts = {}\n    for\
    \ _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n    end\n\
    \    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for _, letter in ipairs(letters)\
    \ do\n        if counts[letter] > max then\n            max = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    local result = {}\n\
    \    for _, letter in ipairs(letters) do\n        if letter == maxLetter then\n\
    \            table.insert(result, letter)\n        end\n    end\n    return result\n\
    end", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for letter, count in pairs(counts) do\n    if\
    \ count > max then\n      max = count\n      maxLetter = letter\n    end\n  end\n\
    \  return maxLetter, max\nend", "    local counts = {}\n    for letter in string.gmatch(test,\
    \ \"%a\") do\n        table.insert(counts, letter)\n    end\n    local maxCount\
    \ = 1\n    local maxLetter\n    for _, letter in ipairs(counts) do\n        if\
    \ counts[letter] > maxCount then\n            maxCount = counts[letter]\n    \
    \        maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    table.insert(counts, 0)\n  end\n  for _, letter in ipairs(letters) do\n \
    \   local count = counts[letter]\n    counts[letter] = count + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for _, letter in ipairs(letters) do\n    if counts[letter]\
    \ > max then\n      max = counts[letter]\n      maxLetter = letter\n    end\n\
    \  end\n  local result = {}\n  for _, letter in ipairs(letters) do\n    if letter\
    \ == maxLetter then\n      result[letter] = counts[letter]\n    end\n  end\n \
    \ return result\nend", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\"\
    ) do\n    table.insert(counts, letter)\n  end\n  table.sort(counts)\n  local max\
    \ = 0\n  local maxLetter\n  for _, letter in ipairs(counts) do\n    if max < letter[1]\
    \ then\n      max = letter[1]\n      maxLetter = letter\n    end\n  end\n  return\
    \ maxLetter, max\nend", "    local letters = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        table.insert(letters, letter)\n    end\n    local counts\
    \ = {}\n    for _, letter in pairs(letters) do\n        table.insert(counts, 0)\n\
    \    end\n    for letter in letters do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if letters[letter] > max then\n            max = letters[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, max\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter = \"\"\n    for _, letter in ipairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "  local\
    \ counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] =\
    \ counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for letter, count in pairs(counts) do\n    if\
    \ count > max then\n      max = count\n      maxLetter = letter\n    end\n  end\n\
    \  return maxLetter, max\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter, count in pairs(counts)\
    \ do\n    if count > max then\n      max = count\n      maxLetter = letter\n \
    \   end\n  end\n  return maxLetter, max\nend", "    local letters = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \    end\n    local counts = {}\n    for _, letter in pairs(letters) do\n    \
    \    table.insert(counts, 0)\n    end\n    for _, letter in pairs(letters) do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    local max = 0\n   \
    \ local maxLetter\n    for _, letter in pairs(letters) do\n        if counts[letter]\
    \ > max then\n            max = counts[letter]\n            maxLetter = letter\n\
    \        end\n    end\n    return maxLetter, max\nend", "    local letters = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \    end\n    local counts = {}\n    for _, letter in ipairs(letters) do\n   \
    \     table.insert(counts, 0)\n    end\n    for _, letter in ipairs(letters) do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    local max = 0\n   \
    \ local maxLetter\n    for _, letter in ipairs(letters) do\n        if counts[letter]\
    \ > max then\n            max = counts[letter]\n            maxLetter = letter\n\
    \        end\n    end\n    local result = {}\n    for _, letter in ipairs(letters)\
    \ do\n        if letter == maxLetter then\n            table.insert(result, letter)\n\
    \        end\n    end\n    return result\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    table.insert(counts, letter)\n  end\n  table.sort(counts)\n\
    \  local maxCount = counts[1]\n  local maxLetter = counts[1]\n  for i = 2, #counts\
    \ do\n    if counts[i] ~= maxCount then\n      maxCount = counts[i]\n      maxLetter\
    \ = counts[i]\n    end\n  end\n  local result = {}\n  for i = 1, #counts do\n\
    \    result[counts[i]] = i\n  end\n  return result\nend", "    local counts =\
    \ {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if maxCount < letter then\n            maxCount\
    \ = letter\n            maxLetter = letter\n        end\n    end\n    return maxLetter,\
    \ maxCount\nend", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        table.insert(counts, letter)\n    end\n    table.sort(counts, function(a,\
    \ b) return counts[a] > counts[b] end)\n    return counts\nend", "    local counts\
    \ = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if counts[letter] > maxCount then\n           \
    \ maxCount = counts[letter]\n            maxLetter = letter\n        end\n   \
    \ end\n    return maxLetter, maxCount\nend", "    local letters = {}\n    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters,\
    \ letter)\n        table.insert(counts, 1)\n    end\n    local maxCount = 1\n\
    \    for _, count in pairs(counts) do\n        if count > maxCount then\n    \
    \        maxCount = count\n        end\n    end\n    local maxLetter\n    for\
    \ _, letter in pairs(letters) do\n        if letter == maxLetter then\n      \
    \      table.insert(counts, maxCount)\n        else\n            table.insert(counts,\
    \ 1)\n        end\n    end\n    return letters\nend", "    local letters = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \    end\n    local counts = {}\n    for _, letter in ipairs(letters) do\n   \
    \     table.insert(counts, 0)\n    end\n    for _, letter in ipairs(letters) do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    local max = 0\n   \
    \ local maxLetter\n    for _, letter in ipairs(letters) do\n        if counts[letter]\
    \ > max then\n            max = counts[letter]\n            maxLetter = letter\n\
    \        end\n    end\n    return maxLetter, max\nend", "    local counts = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        local count = counts[letter]\
    \ or 0\n        counts[letter] = count + 1\n    end\n    return counts\nend",
  "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters,\
    \ letter)\n    end\n    local counts = {}\n    for _, letter in ipairs(letters)\
    \ do\n        table.insert(counts, 0)\n    end\n    for letter in letters do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    local max = 0\n   \
    \ local maxLetter\n    for _, count in ipairs(counts) do\n        if count > max\
    \ then\n            max = count\n            maxLetter = letters[#letters]\n \
    \       end\n    end\n    return maxLetter, max\nend", "    local counts = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if maxCount < letter then\n            maxCount = letter\n     \
    \       maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "  local letters = {}\n  for letter in string.gmatch(test, \"[%a]+\") do\n\
    \    table.insert(letters, letter)\n  end\n  local max = {}\n  for _, letter in\
    \ ipairs(letters) do\n    local count = letters[letter]\n    if max[letter] ==\
    \ nil then\n      max[letter] = count\n    else\n      max[letter] = max[letter]\
    \ + count\n    end\n  end\n  return max\nend", "  local letters = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    table.insert(letters, letter)\n  end\n  local\
    \ counts = {}\n  for _, letter in ipairs(letters) do\n    table.insert(counts,\
    \ 0)\n  end\n  for _, letter in ipairs(letters) do\n    local count = counts[letter]\n\
    \    counts[letter] = count + 1\n  end\n  local max = 0\n  local maxLetter\n \
    \ for _, letter in ipairs(letters) do\n    if counts[letter] > max then\n    \
    \  max = counts[letter]\n      maxLetter = letter\n    end\n  end\n  return maxLetter,\
    \ max\nend", "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n\
    \    table.insert(letters, letter)\n  end\n  local counts = {}\n  for _, letter\
    \ in ipairs(letters) do\n    counts[letter] = counts[letter] or 0\n    counts[letter]\
    \ = counts[letter] + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter,\
    \ count in pairs(counts) do\n    if count > max then\n      max = count\n    \
    \  maxLetter = letter\n    end\n  end\n  return maxLetter, max\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        if counts[letter]\
    \ == nil then\n            counts[letter] = 1\n        else\n            counts[letter]\
    \ = counts[letter] + 1\n        end\n    end\n    return counts\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        local count\
    \ = counts[letter]\n        counts[letter] = count or 0\n        counts[letter]\
    \ = count + 1\n    end\n    return counts\nend", "    local letters = {}\n   \
    \ local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters,\
    \ letter)\n        table.insert(counts, 0)\n    end\n    for letter, count in\
    \ pairs(counts) do\n        local max_count = count\n        for i = 1, #letters\
    \ do\n            if letters[i] == letter then\n                counts[i] = counts[i]\
    \ + 1\n                if counts[i] > max_count then\n                    max_count\
    \ = counts[i]\n                end\n            end\n        end\n    end\n  \
    \  return letters\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        if counts[letter] == nil then\n            counts[letter]\
    \ = 1\n        else\n            counts[letter] = counts[letter] + 1\n       \
    \ end\n    end\n    return counts\nend", "  local counts = {}\n  for letter in\
    \ test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter]\
    \ = counts[letter] + 1\n  end\n  return counts\nend", "  local counts = {}\n \
    \ for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return counts\nend",
  "    local letters = {}\n    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        local letter = letter:lower()\n        if letters[letter]\
    \ == nil then\n            letters[letter] = 1\n        else\n            letters[letter]\
    \ = letters[letter] + 1\n        end\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for letter, count\
    \ in pairs(counts) do\n        if count > max then\n            max = count\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, max\n\
    end", "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter, count in pairs(counts)\
    \ do\n    if count > max then\n      max = count\n      maxLetter = letter\n \
    \   end\n  end\n  return maxLetter, max\nend", "  local letters = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    table.insert(letters, letter)\n  end\n  local\
    \ counts = {}\n  for _, letter in ipairs(letters) do\n    local count = counts[letter]\n\
    \    counts[letter] = count or 1\n  end\n  local max = {}\n  for letter, count\
    \ in pairs(counts) do\n    if count > max[letter] then\n      max[letter] = count\n\
    \    end\n  end\n  return max\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter, count in pairs(counts)\
    \ do\n    if count > max then\n      max = count\n      maxLetter = letter\n \
    \   end\n  end\n  return maxLetter, max\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n   \
    \ counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local maxLetter\n\
    \  for letter, count in pairs(counts) do\n    if count > max then\n      max =\
    \ count\n      maxLetter = letter\n    end\n  end\n  return maxLetter, max\nend",
  "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for _, letter in ipairs(letters)\
    \ do\n    if counts[letter] > max then\n      max = counts[letter]\n      maxLetter\
    \ = letter\n    end\n  end\n  local result = {}\n  for _, letter in ipairs(letters)\
    \ do\n    if letter == maxLetter then\n      result[letter] = counts[letter]\n\
    \    end\n  end\n  return result\nend", "  local letters = {}\n  for letter in\
    \ test:gmatch(\"[%a]+\") do\n    table.insert(letters, letter)\n  end\n  local\
    \ counts = {}\n  for _, letter in ipairs(letters) do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local\
    \ maxLetter\n  for letter, count in pairs(counts) do\n    if count > max then\n\
    \      max = count\n      maxLetter = letter\n    end\n  end\n  return maxLetter,\
    \ max\nend", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n\
    \    table.insert(counts, letter)\n  end\n  table.sort(counts, function(a, b)\
    \ return counts[a] > counts[b] end)\n  return counts\nend", "    local letters\
    \ = {}\n    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n        table.insert(counts, 0)\n    end\n\
    \    for letter in letters do\n        counts[letter] = counts[letter] + 1\n \
    \   end\n    local max = 0\n    local maxLetter\n    for letter in counts do\n\
    \        if counts[letter] > max then\n            max = counts[letter]\n    \
    \        maxLetter = letter\n        end\n    end\n    return maxLetter, max\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = tonumber(table.max(counts))\n\
    \    local maxLetter = table.max(counts)\n    local maxLetters = {}\n    for letter\
    \ in counts do\n        if counts[letter] == maxCount then\n            table.insert(maxLetters,\
    \ letter)\n        end\n    end\n    return maxLetters, maxCount, maxLetter\n\
    end", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(counts,\
    \ letter)\n  end\n  table.sort(counts, function(a, b) return counts[a] > counts[b]\
    \ end)\n  local maxCount = counts[1]\n  local maxLetter = counts[1]\n  for i =\
    \ 2, #counts do\n    if counts[i] ~= maxCount then\n      maxCount = counts[i]\n\
    \      maxLetter = counts[i]\n    end\n  end\n  local result = {}\n  for i = 1,\
    \ #counts do\n    table.insert(result, { letter = maxLetter, count = counts[i]\
    \ })\n  end\n  return result\nend", "    local counts = {}\n    for letter in\
    \ test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n    end\n \
    \   table.sort(counts)\n    local maxCount = counts[1]\n    local maxLetter =\
    \ counts[1]\n    for i = 2, #counts do\n        if counts[i] > maxCount then\n\
    \            maxCount = counts[i]\n            maxLetter = counts[i]\n       \
    \ end\n    end\n    return maxLetter, maxCount\nend", "  local letters = {}\n\
    \  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters, letter)\n\
    \  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n    table.insert(counts,\
    \ 0)\n  end\n  for _, letter in ipairs(letters) do\n    local count = counts[letter]\n\
    \    counts[letter] = count + 1\n  end\n  local max = {}\n  for _, letter in ipairs(letters)\
    \ do\n    local count = counts[letter]\n    if count > max[letter] then\n    \
    \  max[letter] = count\n    end\n  end\n  return max\nend", "    local counts\
    \ = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if maxCount < letter then\n            maxCount\
    \ = letter\n            maxLetter = letter\n        end\n    end\n    return maxLetter,\
    \ maxCount\nend", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        table.insert(counts, letter)\n    end\n    local maxCount = 1\n\
    \    local maxLetter\n    for _, letter in ipairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = tonumber(table.max(counts))\n    local\
    \ maxLetter = table.max(counts)\n    local maxLetters = {}\n    for i = 1, #counts\
    \ do\n        if counts[i] ~= maxCount then\n            table.insert(maxLetters,\
    \ maxLetter)\n        end\n    end\n    return maxLetters\nend", "  local letters\
    \ = {}\n  for letter in string.gmatch(test, \"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    table.insert(counts, letter)\n  end\n  local max = {}\n  for _, letter in\
    \ ipairs(letters) do\n    local count = counts[letter]\n    if max[letter] ==\
    \ nil then\n      max[letter] = count\n    else\n      max[letter] = max[letter]\
    \ + (count or 1)\n    end\n  end\n  return max\nend", "  local counts = {}\n \
    \ for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local\
    \ maxLetter\n  for letter, count in pairs(counts) do\n    if count > max then\n\
    \      max = count\n      maxLetter = letter\n    end\n  end\n  return maxLetter,\
    \ max\nend", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        table.insert(letters, letter)\n    end\n    local counts = {}\n\
    \    for _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n  \
    \  end\n    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for _, letter in ipairs(letters)\
    \ do\n        if counts[letter] > max then\n            max = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    local result = {}\n\
    \    for _, letter in ipairs(letters) do\n        if letter == maxLetter then\n\
    \            table.insert(result, letter)\n        end\n    end\n    return result\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      local count = counts[letter] or 0\n        counts[letter] = count + 1\n\
    \    end\n    return counts\nend", "    local letters = {}\n    for letter in\
    \ test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n    end\n\
    \    local counts = {}\n    for _, letter in ipairs(letters) do\n        local\
    \ count = counts[letter]\n        if count == nil then\n            count = 0\n\
    \        end\n        counts[letter] = count + 1\n    end\n    local max = {}\n\
    \    for letter, count in pairs(counts) do\n        if count > max[letter] then\n\
    \            max[letter] = count\n        end\n    end\n    return max\nend",
  "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for letter, count in pairs(counts) do\n    if\
    \ count > max then\n      max = count\n      maxLetter = letter\n    end\n  end\n\
    \  return maxLetter, max\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        table.insert(counts, letter)\n    end\n    local maxCount\
    \ = 1\n    local maxLetter\n    for _, letter in ipairs(counts) do\n        if\
    \ counts[letter] > maxCount then\n            maxCount = counts[letter]\n    \
    \        maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    table.insert(counts, 0)\n  end\n  for _, letter in ipairs(letters) do\n \
    \   local count = #counts\n    for _, count in ipairs(counts) do\n      if letter\
    \ == counts[count] then\n        count = count + 1\n      end\n    end\n    counts[count]\
    \ = letter\n  end\n  return counts\nend", "  local counts = {}\n  for letter in\
    \ test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter]\
    \ = counts[letter] + 1\n  end\n  return counts\nend", "  local counts = {}\n \
    \ for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local\
    \ maxLetter\n  for letter, count in pairs(counts) do\n    if count > max then\n\
    \      max = count\n      maxLetter = letter\n    end\n  end\n  return maxLetter,\
    \ max\nend", "  local counts = {}\n  for letter in test:gmatch(\"%a\") do\n  \
    \  counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter] +\
    \ 1\n  end\n  return counts\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    local count = counts[letter] or 0\n    counts[letter] = count\
    \ + 1\n  end\n  return counts\nend", "  local letters = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    table.insert(letters, letter)\n  end\n  local counts = {}\n \
    \ for _, letter in ipairs(letters) do\n    table.insert(counts, 0)\n  end\n  for\
    \ letter in letters do\n    local count = counts[letter]\n    counts[letter] =\
    \ count + 1\n  end\n  local max = 0\n  local maxLetter\n  for _, letter in ipairs(letters)\
    \ do\n    if counts[letter] > max then\n      max = counts[letter]\n      maxLetter\
    \ = letter\n    end\n  end\n  return maxLetter, max\nend", "    local counts =\
    \ {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if counts[letter] > maxCount then\n           \
    \ maxCount = counts[letter]\n            maxLetter = letter\n        end\n   \
    \ end\n    return maxLetter, maxCount\nend", "    local letters = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \    end\n    local counts = {}\n    for _, letter in ipairs(letters) do\n   \
    \     table.insert(counts, 0)\n    end\n    for _, letter in ipairs(letters) do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    return counts\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    table.sort(counts, function(a, b) return counts[a] > counts[b]\
    \ end)\n    return counts\nend", "    local letters = {}\n    local counts = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \        table.insert(counts, 0)\n    end\n    for letter, count in pairs(counts)\
    \ do\n        local max = 0\n        for _, otherLetter in pairs(letters) do\n\
    \            if letter == otherLetter then\n                max = count + 1\n\
    \                break\n            end\n        end\n        for _, otherLetter\
    \ in pairs(letters) do\n            if letter == otherLetter then\n          \
    \      counts[otherLetter] = max\n                break\n            end\n   \
    \     end\n    end\n    return letters\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n   \
    \ counts[letter] = counts[letter] + 1\n  end\n  local max = {}\n  for letter,\
    \ count in pairs(counts) do\n    if count > max[count] then\n      max[count]\
    \ = letter\n    end\n  end\n  return max\nend", "    local counts = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        if counts[letter] == nil then\n\
    \            counts[letter] = 1\n        else\n            counts[letter] = counts[letter]\
    \ + 1\n        end\n    end\n    return counts\nend", "  local counts = {}\n \
    \ for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter]\
    \ or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return counts\nend",
  "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    table.insert(counts, 0)\n  end\n  for _, letter in ipairs(letters) do\n \
    \   local count = letters[letter]:gsub(\"%a\"):gsub(\"%z\"):gsub(\"%A\"):gsub(\"\
    %Z\"):gsub(\"%0\"):gsub(\"%9\"):gsub(\"%+\"):gsub(\"%-\"):gsub(\"%_\"):gsub(\"\
    %/\"):gsub(\"%0\"):gsub(\"%9\"):gsub(\"%+\"):gsub(\"%-\"):gsub(\"%_\"):gsub(\"\
    %/\")\n    counts[letter] = tonumber(count)\n  end\n  local max = 0\n  local maxLetter\n\
    \  for _, letter in ipairs(letters) do\n    if counts[letter] > max then\n   \
    \   max = counts[letter]\n      maxLetter = letter\n    end\n  end\n  local result\
    \ = {}\n  for _, letter in ipairs(letters) do\n    if letter == maxLetter then\n\
    \      result[letter] = counts[letter]\n    end\n  end\n  return result\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        local\
    \ count = counts[letter] or 0\n        counts[letter] = count + 1\n    end\n \
    \   return counts\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        if counts[letter] == nil then\n            counts[letter]\
    \ = 1\n        else\n            counts[letter] = counts[letter] + 1\n       \
    \ end\n    end\n    return counts\nend", "  local counts = {}\n  for letter in\
    \ test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter]\
    \ = counts[letter] + 1\n  end\n  return counts\nend", "    local letters = {}\n\
    \    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \    end\n    local counts = {}\n    for _, letter in ipairs(letters) do\n   \
    \     table.insert(counts, 0)\n    end\n    for _, letter in ipairs(letters) do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    local max = 0\n   \
    \ local maxLetter\n    for _, letter in ipairs(letters) do\n        if counts[letter]\
    \ > max then\n            max = counts[letter]\n            maxLetter = letter\n\
    \        end\n    end\n    local result = {}\n    for _, letter in ipairs(letters)\
    \ do\n        if letter == maxLetter then\n            table.insert(result, letter)\n\
    \        end\n    end\n    return result\nend", "    local letters = {}\n    local\
    \ counts = {}\n    for letter in string.gmatch(test, \"%a\") do\n        table.insert(letters,\
    \ letter)\n        table.insert(counts, 1)\n    end\n    for i = 2, #letters do\n\
    \        for j = 1, #letters do\n            if letters[i] == letters[j] then\n\
    \                counts[j] = counts[j] + 1\n            end\n        end\n   \
    \ end\n    return counts\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        table.insert(counts, letter)\n    end\n    local maxCount\
    \ = table.max(counts)\n    local maxLetter = table.find(counts, function(count)\
    \ return count == maxCount end)\n    return maxLetter, maxCount\nend", "  local\
    \ counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] =\
    \ counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for letter, count in pairs(counts) do\n    if\
    \ count > max then\n      max = count\n      maxLetter = letter\n    end\n  end\n\
    \  return maxLetter, max\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    table.insert(counts, letter)\n  end\n  table.sort(counts, function(a,\
    \ b) return counts[a] > counts[b] end)\n  return counts\nend", "  local counts\
    \ = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(counts, letter)\n\
    \  end\n  table.sort(counts)\n  local max = 0\n  local maxLetter\n  for _, letter\
    \ in ipairs(counts) do\n    if max < letter[2] then\n      max = letter[2]\n \
    \     maxLetter = letter\n    end\n  end\n  return maxLetter, max\nend", "  local\
    \ counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter] =\
    \ counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return\
    \ counts\nend", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        if counts[letter] == nil then\n            counts[letter] = 1\n\
    \        else\n            counts[letter] = counts[letter] + 1\n        end\n\
    \    end\n    return counts\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter, count in pairs(counts)\
    \ do\n    if count > max then\n      max = count\n      maxLetter = letter\n \
    \   end\n  end\n  return maxLetter, max\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n   \
    \ counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local maxLetter\n\
    \  for letter, count in pairs(counts) do\n    if count > max then\n      max =\
    \ count\n      maxLetter = letter\n    end\n  end\n  return maxLetter, max\nend",
  "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = {}\n  for letter, count in pairs(counts) do\n    if count > max[count]\
    \ then\n      max[count] = letter\n    end\n  end\n  return max\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if maxCount < letter then\n            maxCount\
    \ = letter\n            maxLetter = letter\n        end\n    end\n    return maxLetter,\
    \ maxCount\nend", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        table.insert(letters, letter)\n    end\n    local counts = {}\n\
    \    for _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n  \
    \  end\n    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    return counts\nend", "    local counts = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n    end\n\
    \    table.sort(counts, function(a, b) return counts[a] > counts[b] end)\n   \
    \ local maxCount = counts[1]\n    local maxLetter = counts[1]\n    for i = 2,\
    \ #counts do\n        if counts[i] ~= maxCount then\n            maxCount = counts[i]\n\
    \            maxLetter = counts[i]\n        end\n    end\n    local result = {}\n\
    \    for i = 1, #counts do\n        if counts[i] == maxCount then\n          \
    \  table.insert(result, { letter = maxLetter, count = counts[i] })\n        end\n\
    \    end\n    return result\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        table.insert(counts, letter)\n    end\n    local maxCount\
    \ = 1\n    local maxLetter\n    for _, letter in pairs(counts) do\n        if\
    \ maxCount < letter then\n            maxCount = letter\n            maxLetter\
    \ = letter\n        end\n    end\n    local result = {}\n    for letter in counts\
    \ do\n        if letter == maxLetter then\n            table.insert(result, letter)\n\
    \        end\n    end\n    return result\nend", "  local letters = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    table.insert(letters, letter)\n  end\n  local\
    \ counts = {}\n  for _, letter in ipairs(letters) do\n    table.insert(counts,\
    \ letter)\n  end\n  local max = {}\n  for _, letter in ipairs(letters) do\n  \
    \  local count = counts[letter]\n    if max[letter] == nil then\n      max[letter]\
    \ = count\n    else\n      max[letter] = math.max(max[letter], count)\n    end\n\
    \  end\n  return max\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    local count = counts[letter]\n    counts[letter] = count or 0\n\
    \    counts[letter] = count + 1\n  end\n  return counts\nend", "    local counts\
    \ = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        if counts[letter]\
    \ == nil then\n            counts[letter] = 1\n        else\n            counts[letter]\
    \ = counts[letter] + 1\n        end\n    end\n    return counts\nend", "    local\
    \ letters = {}\n    local counts = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        table.insert(letters, letter)\n        table.insert(counts, 0)\n\
    \    end\n    for i = 1, #test do\n        local letter = test[i]\n        local\
    \ count = #letters[#letters]\n        for j = 1, #letters do\n            if letter\
    \ == letters[j] then\n                count = count + 1\n            end\n   \
    \     end\n        table.insert(counts, count)\n    end\n    return letters\n\
    end", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  local\
    \ max = 0\n  local maxLetter = \"\"\n  for letter, count in pairs(counts) do\n\
    \    if count > max then\n      max = count\n      maxLetter = letter\n    end\n\
    \  end\n  return maxLetter, max\nend", "    local counts = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n    end\n\
    \    local maxCount = 1\n    local maxLetter\n    for _, letter in ipairs(counts)\
    \ do\n        if counts[letter] > maxCount then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    local letters = {}\n\
    \    for letter in counts do\n        if letter == maxLetter then\n          \
    \  table.insert(letters, letter)\n        end\n    end\n    return letters\nend",
  "  local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    table.insert(counts, 0)\n  end\n  for _, letter in ipairs(letters) do\n \
    \   local count = counts[letter]\n    counts[letter] = count + 1\n  end\n  local\
    \ max = 0\n  local maxLetter\n  for _, letter in ipairs(letters) do\n    if counts[letter]\
    \ > max then\n      max = counts[letter]\n      maxLetter = letter\n    end\n\
    \  end\n  local result = {}\n  for _, letter in ipairs(letters) do\n    if letter\
    \ == maxLetter then\n      result[letter] = counts[letter]\n    end\n  end\n \
    \ return result\nend", "    local counts = {}\n    for letter in test:gmatch(\"\
    [%a]+\") do\n        table.insert(counts, letter)\n    end\n    table.sort(counts,\
    \ function(a, b) return counts[a] > counts[b] end)\n    return counts\nend", " \
    \ local letters = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(letters,\
    \ letter)\n  end\n  local counts = {}\n  for _, letter in ipairs(letters) do\n\
    \    local count = counts[letter]\n    counts[letter] = count + 1\n  end\n  local\
    \ max = {}\n  for _, letter in ipairs(letters) do\n    local count = counts[letter]\n\
    \    if count > max[letter] then\n      max[letter] = count\n    end\n  end\n\
    \  return max\nend", "    local letters = {}\n    for letter in string.gmatch(test,\
    \ \"%a\") do\n        table.insert(letters, letter)\n    end\n    local counts\
    \ = {}\n    for _, letter in ipairs(letters) do\n        table.insert(counts,\
    \ 0)\n    end\n    for _, letter in ipairs(letters) do\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    return counts\nend", "    local counts =\
    \ {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = tonumber(table.max(counts))\n    local\
    \ maxLetters = {}\n    for _, letter in ipairs(counts) do\n        if letter ==\
    \ maxCount then\n            table.insert(maxLetters, letter)\n        else\n\
    \            break\n        end\n    end\n    return maxLetters\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        counts[letter]\
    \ = counts[letter] or 0\n        counts[letter] = counts[letter] + 1\n    end\n\
    \    return counts\nend", "  local letters = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    table.insert(letters, letter)\n  end\n  local counts = {}\n \
    \ for _, letter in ipairs(letters) do\n    table.insert(counts, letter)\n  end\n\
    \  local max = {}\n  for _, letter in ipairs(letters) do\n    local count = counts[letter]\n\
    \    if count > max[letter] then\n      max[letter] = count\n    end\n  end\n\
    \  local result = {}\n  for _, letter in ipairs(letters) do\n    local count =\
    \ counts[letter]\n    if count == max[letter] then\n      result[letter] = count\n\
    \    end\n  end\n  return result\nend", "  local counts = {}\n  for letter in\
    \ test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter]\
    \ = counts[letter] + 1\n  end\n  return counts\nend", "  local counts = {}\n \
    \ for letter in test:gmatch(\"[%a]+\") do\n    local count = counts[letter] or\
    \ 0\n    counts[letter] = count + 1\n  end\n  return counts\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in ipairs(counts) do\n        if counts[letter] > maxCount then\n          \
    \  maxCount = counts[letter]\n            maxLetter = letter\n        end\n  \
    \  end\n    return maxLetter, maxCount\nend", "    local counts = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter = \"\"\n    for _, letter\
    \ in pairs(counts) do\n        if counts[letter] > maxCount then\n           \
    \ maxCount = counts[letter]\n            maxLetter = letter\n        end\n   \
    \ end\n    return maxLetter, maxCount\nend", "  local counts = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    counts[letter] = counts[letter] or 0\n   \
    \ counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local maxLetter\n\
    \  for letter, count in pairs(counts) do\n    if count > max then\n      max =\
    \ count\n      maxLetter = letter\n    end\n  end\n  return maxLetter, max\nend",
  "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in pairs(counts) do\n        if counts[letter] > maxCount then\n           \
    \ maxCount = counts[letter]\n            maxLetter = letter\n        end\n   \
    \ end\n    return maxLetter, maxCount\nend", "  local letters = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    table.insert(letters, letter)\n  end\n  local\
    \ counts = {}\n  for _, letter in ipairs(letters) do\n    table.insert(counts,\
    \ letter)\n  end\n  local max = 0\n  local maxLetter\n  for _, letter in ipairs(counts)\
    \ do\n    if max < counts[letter] then\n      max = counts[letter]\n      maxLetter\
    \ = letter\n    end\n  end\n  local result = {}\n  for _, letter in ipairs(letters)\
    \ do\n    if letter == maxLetter then\n      result[letter] = counts[letter]\n\
    \    end\n  end\n  return result\nend", "    local counts = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n    end\n\
    \    local max = 0\n    local maxLetter\n    for _, letter in ipairs(counts) do\n\
    \        if max < counts[letter] then\n            max = counts[letter]\n    \
    \        maxLetter = letter\n        end\n    end\n    return maxLetter, max\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter\n    for _, letter in pairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        if counts[letter]\
    \ == nil then\n            counts[letter] = 1\n        else\n            counts[letter]\
    \ = counts[letter] + 1\n        end\n    end\n    return counts\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter\
    \ in ipairs(counts) do\n        if counts[letter] > maxCount then\n          \
    \  maxCount = counts[letter]\n            maxLetter = letter\n        end\n  \
    \  end\n    return maxLetter, maxCount\nend", "    local counts = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter in pairs(counts)\
    \ do\n        if counts[letter] > maxCount then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local counts = {}\n    for\
    \ _, letter in pairs(letters) do\n        table.insert(counts, 0)\n    end\n \
    \   for _, letter in pairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for _, letter in pairs(letters)\
    \ do\n        if counts[letter] > max then\n            max = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, max\n\
    end", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n  \
    \      table.insert(counts, letter)\n    end\n    local maxCount = 1\n    local\
    \ maxLetter\n    for _, letter in pairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "  local\
    \ counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    table.insert(counts,\
    \ letter)\n  end\n  table.sort(counts, function(a, b) return counts[a] > counts[b]\
    \ end)\n  local maxCount = counts[#counts]\n  local maxLetter\n  local maxLetterCount\
    \ = 0\n  for _, letter in ipairs(counts) do\n    if letter == maxCount then\n\
    \      maxLetter = letter\n      maxLetterCount = counts[letter]\n    end\n  end\n\
    \  return maxLetter, maxLetterCount\nend", "    local letters = {}\n    for letter\
    \ in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n    end\n\
    \    local counts = {}\n    for _, letter in ipairs(letters) do\n        table.insert(counts,\
    \ 0)\n    end\n    for _, letter in ipairs(letters) do\n        counts[letter]\
    \ = counts[letter] + 1\n    end\n    local max = 0\n    local maxLetter\n    for\
    \ _, letter in ipairs(letters) do\n        if counts[letter] > max then\n    \
    \        max = counts[letter]\n            maxLetter = letter\n        end\n \
    \   end\n    local result = {}\n    for _, letter in ipairs(letters) do\n    \
    \    if letter == maxLetter then\n            table.insert(result, letter)\n \
    \       end\n    end\n    return result\nend", "  local letters = {}\n  for letter\
    \ in test:gmatch(\"[%a]+\") do\n    table.insert(letters, letter)\n  end\n  local\
    \ counts = {}\n  for _, letter in ipairs(letters) do\n    table.insert(counts,\
    \ 0)\n  end\n  for _, letter in ipairs(letters) do\n    local count = #counts\n\
    \    for _, count in ipairs(counts) do\n      if letter == letters[count] then\n\
    \        count = count + 1\n      end\n    end\n    counts[count] = letters[count]\n\
    \  end\n  return counts\nend", "  local letters = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    table.insert(letters, letter)\n  end\n  local counts = {}\n \
    \ for _, letter in ipairs(letters) do\n    counts[letter] = counts[letter] or\
    \ 0\n    counts[letter] = counts[letter] + 1\n  end\n  local max = 0\n  local\
    \ maxLetter\n  for _, letter in pairs(counts) do\n    if counts[letter] > max\
    \ then\n      max = counts[letter]\n      maxLetter = letter\n    end\n  end\n\
    \  local result = {}\n  for _, letter in pairs(letters) do\n    if letter == maxLetter\
    \ then\n      result[letter] = counts[letter]\n    end\n  end\n  return result\n\
    end", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n    counts[letter]\
    \ = counts[letter] or 0\n    counts[letter] = counts[letter] + 1\n  end\n  return\
    \ counts\nend", "  local counts = {}\n  for letter in test:gmatch(\"[%a]+\") do\n\
    \    table.insert(counts, letter)\n  end\n  local maxCount = #counts\n  local\
    \ maxLetter\n  for _, letter in pairs(counts) do\n    if maxCount > letter[1]\
    \ then\n      maxCount = letter[1]\n      maxLetter = letter\n    end\n  end\n\
    \  return maxLetter\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  local max = 0\n  local maxLetter\n  for letter, count in pairs(counts)\
    \ do\n    if count > max then\n      max = count\n      maxLetter = letter\n \
    \   end\n  end\n  return maxLetter, max\nend", "    local letters = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(letters, letter)\n\
    \    end\n    local counts = {}\n    for _, letter in ipairs(letters) do\n   \
    \     table.insert(counts, 0)\n    end\n    for _, letter in ipairs(letters) do\n\
    \        counts[letter] = counts[letter] + 1\n    end\n    local max = 0\n   \
    \ local maxLetter\n    for _, letter in ipairs(letters) do\n        if counts[letter]\
    \ > max then\n            max = counts[letter]\n            maxLetter = letter\n\
    \        end\n    end\n    local result = {}\n    for _, letter in ipairs(letters)\
    \ do\n        if letter == maxLetter then\n            table.insert(result, letter)\n\
    \        end\n    end\n    return result\nend", "    local counts = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n\
    \    end\n    local maxCount = 1\n    local maxLetter\n    for _, letter in ipairs(counts)\
    \ do\n        if counts[letter] > maxCount then\n            maxCount = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    return maxLetter, maxCount\n\
    end", "    local letters = {}\n    for letter in test:gmatch(\"[%a]+\") do\n \
    \       table.insert(letters, letter)\n    end\n    local counts = {}\n    for\
    \ _, letter in ipairs(letters) do\n        table.insert(counts, 0)\n    end\n\
    \    for _, letter in ipairs(letters) do\n        counts[letter] = counts[letter]\
    \ + 1\n    end\n    local max = 0\n    local maxLetter\n    for _, letter in ipairs(letters)\
    \ do\n        if counts[letter] > max then\n            max = counts[letter]\n\
    \            maxLetter = letter\n        end\n    end\n    local result = {}\n\
    \    for _, letter in ipairs(letters) do\n        if letter == maxLetter then\n\
    \            result[letter] = counts[letter]\n        end\n    end\n    return\
    \ result\nend", "    local counts = {}\n    for letter in test:gmatch(\"[%a]+\"\
    ) do\n        table.insert(counts, letter)\n    end\n    local maxCount = 1\n\
    \    local maxLetter\n    for _, letter in pairs(counts) do\n        if counts[letter]\
    \ > maxCount then\n            maxCount = counts[letter]\n            maxLetter\
    \ = letter\n        end\n    end\n    return maxLetter, maxCount\nend", "    local\
    \ counts = {}\n    for letter in test:gmatch(\"[%a]+\") do\n        table.insert(counts,\
    \ letter)\n    end\n    local maxCount = tonumber(table.max(counts))\n    local\
    \ maxLetter = nil\n    for _, letter in ipairs(counts) do\n        if letter ==\
    \ maxCount then\n            table.insert(maxLetter, letter)\n        end\n  \
    \  end\n    return maxLetter\nend", "  local counts = {}\n  for letter in test:gmatch(\"\
    [%a]+\") do\n    counts[letter] = counts[letter] or 0\n    counts[letter] = counts[letter]\
    \ + 1\n  end\n  return counts\nend", "    local counts = {}\n    for letter in\
    \ test:gmatch(\"[%a]+\") do\n        table.insert(counts, letter)\n    end\n \
    \   local maxCount = tonumber(table.max(counts))\n    local maxLetter = table.max(counts)\n\
    \    local maxLetters = {}\n    for letter in counts do\n        if counts[letter]\
    \ == maxCount then\n            table.insert(maxLetters, letter)\n        end\n\
    \    end\n    return maxLetters, maxCount\nend", "    local counts = {}\n    for\
    \ letter in test:gmatch(\"[%a]+\") do\n        local count = counts[letter] or\
    \ 0\n        counts[letter] = count + 1\n    end\n    return counts\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

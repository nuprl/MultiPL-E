language: lua
name: HumanEval_57_monotonic
results:
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i < #l do\n    local j = i\n\
    \    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j > i\
    \ then\n      return false\n    end\n    i = j\n  end\n  return true\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd0pozc1d.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpd0pozc1d.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = #l + 1\n  while i <= j\
    \ do\n    local k = i\n    local m = j\n    while k <= m do\n      if l[k] < l[m]\
    \ then\n        return false\n      elseif l[k] > l[m] then\n        return true\n\
    \      else\n        k = k + 1\n      end\n      m = m + 1\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_zuoyvqq.lua:9:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp_zuoyvqq.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp_zuoyvqq.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local last =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= last then return false end\n    last\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmtzo7pk7.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmtzo7pk7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv1cgqi04.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv1cgqi04.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local last =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= last then return false end\n    last\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmtzo7pk7.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmtzo7pk7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -math.huge\n  while\
    \ i <= #l do\n    local x = l[i]\n    if x > last then\n      return false\n \
    \   end\n    last = x\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpprvzaf2e.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpprvzaf2e.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local last =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= last then return false end\n    last\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmtzo7pk7.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmtzo7pk7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_val = l[1]\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpwvkxjiri.lua:21: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = #l + 1\n  while i <= j\
    \ do\n    local k = i - 1\n    while k >= 0 and l[k] > l[i] do\n      k = k -\
    \ 1\n    end\n    if k >= 0 then\n      local x = l[k]\n      l[k] = l[i]\n  \
    \    l[i] = x\n      i = i + 1\n    end\n    j = j - 1\n  end\n  return j == 1\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5amgb6iv.lua:7:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp5amgb6iv.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp5amgb6iv.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ - i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j -\
    \ i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j -\
    \ i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  for i =\
    \ 2, #l do\n    if l[i] ~= last_val then\n      return false\n    end\n    last_val\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2774m8m5.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2774m8m5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if\
    \ j > i then\n      local k = i\n      while k <= j do\n        if l[k] > l[k+1]\
    \ then\n          return false\n        end\n        k = k + 1\n      end\n  \
    \  end\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzz0dxdlh.lua:6:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpzz0dxdlh.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpzz0dxdlh.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic = false\n  local last_monotonic = false\n  local last_monotonic_val\
    \ = nil\n  local last_monotonic_i = nil\n  local last_monotonic_j = nil\n  local\
    \ last_monotonic_k = nil\n  local last_monotonic_last_val = nil\n  local last_monotonic_last_i\
    \ = nil\n  local last_monotonic_last_j = nil\n  local last_monotonic_last_k =\
    \ nil\n  local last_monotonic_last_last_val = nil\n  local last_monotonic_last_last_i\
    \ = nil\n  local last_monotonic_last_last_j = nil\n  local last_monotonic_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_val = nil\n  local last_monotonic_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_j = nil\n  local last_monotonic_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_val = nil\n  local last_monotonic_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_val = nil\n  local last_monotonic_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_val = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_i = nil\n  local last_monotonic_last_last_last_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_k = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_last_val = nil\n  local last_monotonic_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_j = nil\n \
    \ local last_monotonic_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_val\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_last_val\
    \ = \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp91jhwq58.lua:45: unexpected symbol near ''=''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if\
    \ j > i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpit24a92s.lua:6:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpit24a92s.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpit24a92s.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] < prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp94cv1tzn.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp94cv1tzn.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbo2phjnn.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpbo2phjnn.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -1\n  while i <= #l\
    \ do\n    local current = l[i]\n    if current > last then\n      return false\n\
    \    end\n    last = current\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr8cxeph6.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpr8cxeph6.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic = true\n  local last_val = l[1]\n  local last_val_i = i\n  local last_val_j\
    \ = j\n  local last_val_k = k\n  local last_val_is_decreasing = false\n  local\
    \ last_val_is_increasing = false\n  local last_val_is_decreasing_or_nondecreasing\
    \ = false\n  local last_val_is_increasing_or_nonincreasing = false\n  local last_val_is_nondecreasing\
    \ = false\n  local last_val_is_nonincreasing = false\n  local last_val_is_nondecreasing_or_nonincreasing\
    \ = false\n  local last_val_is_nondecreasing_or_nonincreasing_or_nan = false\n\
    \  local last_val_is_nonincreasing_or_nan = false\n  local last_val_is_nonincreasing_or_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_val_is_nan = false\n\
    \  local last_val_is_nan = false\n  local last_val_is_nan = false\n  local last_val_is_nan\
    \ = false\n  local last_val_is_nan = false\n  local last_\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplckkl8hv.lua:77: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv1cgqi04.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv1cgqi04.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = nil\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmopd5p3f.lua:21: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbo2phjnn.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpbo2phjnn.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local i = 1\n\
    \  while i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[j+1] do\n\
    \      j = j + 1\n    end\n    if j > i then\n      local k = i\n      while k\
    \ <= j do\n        if l[k] < l[k+1] then\n          k = k + 1\n        else\n\
    \          return false\n        end\n      end\n      if k > j then\n       \
    \ return false\n      end\n    end\n    i = j + 1\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfasxc_ao.lua:7:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpfasxc_ao.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpfasxc_ao.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  while i\
    \ <= #l do\n    local val = l[i]\n    if val > last_val then\n      return false\n\
    \    end\n    last_val = val\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdg3inlln.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpdg3inlln.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j -\
    \ i <= 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpor6qduh2.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpor6qduh2.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      l[i], l[j] = l[j], l[i]\n      i = j\n    end\n    i = i + 1\n\
    \  end\n  return i == #l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqt9z4cb7.lua:21:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpqt9z4cb7.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l do\n      if l[i] < l[j] then\n        local tmp = l[i]\n\
    \        l[i] = l[j]\n        l[j] = tmp\n      end\n      j = j + 1\n    end\n\
    \    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2fdmd3ny.lua:24:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp2fdmd3ny.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic = true\n  local last_monotonic = false\n  local last_i = nil\n  local\
    \ last_j = nil\n  local last_k = nil\n  local last_last_monotonic = false\n  local\
    \ last_last_i = nil\n  local last_last_j = nil\n  local last_last_k = nil\n  local\
    \ last_last_last_monotonic = false\n  local last_last_last_i = nil\n  local last_last_last_j\
    \ = nil\n  local last_last_last_k = nil\n  local last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_i = nil\n  local last_last_last_last_j\
    \ = nil\n  local last_last_last_last_k = nil\n  local last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_monotonic\
    \ = false\n  local last_last_last_last_last_last_i = nil\n  local \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4hhtj9cq.lua:72: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    local current = l[i]\n    if current > last then\n      return false\n\
    \    end\n    last = current\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr9cg5c50.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpr9cg5c50.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local e1 =\
    \ l[i]\n    local e2 = l[i + 1]\n    if e1 <= e2 then\n      i = i + 1\n    elseif\
    \ e1 > e2 then\n      return false\n    end\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_9kympqc.lua:7:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp_9kympqc.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmp_9kympqc.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      l[i], l[j] = l[j], l[i]\n    end\n    i = j\n  end\n  return\
    \ true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  while i\
    \ < #l do\n    local val = l[i]\n    if val > last_val then\n      return false\n\
    \    end\n    last_val = val\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxex05ng9.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpxex05ng9.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  for i =\
    \ 2, #l do\n    local val = l[i]\n    if val > last_val then\n      return false\n\
    \    end\n    last_val = val\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy5pi_n1s.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpy5pi_n1s.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l do\n      if l[j] < l[j + 1] then\n        return false\n\
    \      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcaklg5e6.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpcaklg5e6.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -1\n  local monotonic\
    \ = false\n  for i = 1, #l do\n    if l[i] ~= last then\n      last = l[i]\n \
    \     monotonic = true\n    end\n  end\n  return monotonic\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1cw7l61f.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp1cw7l61f.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = nil\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmopd5p3f.lua:21: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  for i =\
    \ 2, #l do\n    if l[i] ~= last_val then\n      return false\n    end\n    last_val\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2774m8m5.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2774m8m5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local first\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] < first then return false end\n    first\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzinacawf.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzinacawf.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbo2phjnn.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpbo2phjnn.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local i = 1\n\
    \  while i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[i] do\n \
    \     j = j + 1\n    end\n    if j > i then\n      local k = i\n      while k\
    \ <= j do\n        if l[k] > l[i] then\n          return false\n        end\n\
    \        k = k + 1\n      end\n      return true\n    end\n    i = i + 1\n  end\n\
    \  return false\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl6l814rj.lua:28:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpl6l814rj.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      l[i], l[j] = l[j], l[i]\n    end\n    i = j\n  end\n  return\
    \ true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local i = 1\n\
    \  while i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[i] do\n \
    \     j = j + 1\n    end\n    if j > i then return false end\n    i = j\n  end\n\
    \  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = #l + 1\n  while i <= j\
    \ do\n    local k = i + j\n    local x = l[i]\n    local y = l[k]\n    if x >\
    \ y then\n      i = k\n    else\n      j = k\n    end\n  end\n  return i == j\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu6ax0wv8.lua:9:\
    \ attempt to compare nil with number\nstack traceback:\n\t/tmp/tmpu6ax0wv8.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpu6ax0wv8.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -1\n  local monotonic_flag\
    \ = false\n  while i <= #l do\n    local x = l[i]\n    if x > last then\n    \
    \  last = x\n      monotonic_flag = true\n    end\n    i = i + 1\n  end\n  return\
    \ monotonic_flag\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx9grr23e.lua:22:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpx9grr23e.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -1\n  local monotonic\
    \ = true\n  local last_is_nan = false\n  local last_is_inf = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive = false\n  local last_is_zero = false\n  local last_is_negative\
    \ = false\n  local last_is_positive = false\n  local last_is_zero = false\n  local\
    \ last_is_negative = false\n  local last_is_positive = false\n  local last_is_zero\
    \ = false\n  local last_is_negative = false\n  local last_is_positive = false\n\
    \  local last_is_zero = false\n  local last_is_negative = false\n  local last_is_positive\
    \ = false\n  local last_is_zero = false\n  local last_is_negative = false\n  local\
    \ last_is_positive\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmprjtdy4eg.lua:91: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if\
    \ j > i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpit24a92s.lua:6:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpit24a92s.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpit24a92s.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local first\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] < first then return false end\n    first\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzinacawf.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzinacawf.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = #l + 1\n  while i <= j\
    \ do\n    local k = i\n    while k < j do\n      if l[k] < l[k + 1] then\n   \
    \     return false\n      end\n      k = k + 1\n    end\n    i = i + 1\n  end\n\
    \  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz89z6z31.lua:21:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpz89z6z31.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      local k = i\n      while k < j do\n        local m = k\n     \
    \   while m < j and l[m] < l[k] do\n          m = m + 1\n        end\n       \
    \ if m > k then\n          l[k], l[m] = l[m], l[k]\n        end\n        k = k\
    \ + 1\n      end\n    end\n    i = i + 1\n  end\n  return i == #l\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt9uj27xb.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpt9uj27xb.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local i = 1\n\
    \  while i <= #l do\n    local j = i\n    while j < #l and l[j] <= l[i] do\n \
    \     j = j + 1\n    end\n    if j > i then\n      local k = i\n      while k\
    \ < j and l[k] > l[i] do\n        k = k + 1\n      end\n      if k > i then\n\
    \        return false\n      else\n        i = k\n      end\n    else\n      i\
    \ = i + 1\n    end\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxogelfzt.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpxogelfzt.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] > prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5zn6ee2k.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5zn6ee2k.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j -\
    \ i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local last =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] < last then return false end\n    last\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1asnft9c.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp1asnft9c.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if\
    \ j > i then\n      local k = i\n      while k <= j do\n        if l[k] > l[k+1]\
    \ then\n          return false\n        end\n        k = k + 1\n      end\n  \
    \  end\n    i = j + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcm7o1hrs.lua:6:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpcm7o1hrs.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpcm7o1hrs.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbo2phjnn.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpbo2phjnn.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -1\n  for i = 1, #l\
    \ do\n    local current = l[i]\n    if current > last then\n      return false\n\
    \    end\n    last = current\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmlcp6pkl.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmlcp6pkl.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      l[i], l[j] = l[j], l[i]\n      i = i + 1\n    end\n  end\n \
    \ return i == #l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplkpt0402.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmplkpt0402.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_increasing = true\n  local\
    \ is_decreasing = true\n  local last_value = nil\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpd9yikb_m.lua:21: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ first = l[1]\n  for i = 2, #l do\n    if l[i] < first then\n      return false\n\
    \    end\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp06bnvif3.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp06bnvif3.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j -\
    \ i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ - i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ == i then\n      return false\n    end\n    if l[i] > l[j] then\n      return\
    \ true\n    end\n    i = j\n  end\n  return false\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk5_6xbq1.lua:23:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpk5_6xbq1.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  if #l == 1\
    \ then return true end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] <\
    \ prev then return false end\n    prev = l[i]\n  end\n  return true\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_fjmut26.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp_fjmut26.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv1cgqi04.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv1cgqi04.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ - i > 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ first = l[1]\n  for i = 2, #l do\n    if l[i] < first then\n      return false\n\
    \    end\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp06bnvif3.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp06bnvif3.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdegsteh1.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpdegsteh1.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv1cgqi04.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv1cgqi04.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -1\n  while i <= #l\
    \ do\n    local x = l[i]\n    if x > last then\n      return false\n    end\n\
    \    last = x\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzdzhncaw.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzdzhncaw.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  if #l == 1\
    \ then return true end\n  local prev = l[1]\n  for i = 2, #l do\n    if l[i] ~=\
    \ prev then\n      return false\n    end\n    prev = l[i]\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpp8a5xiys.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpp8a5xiys.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = #l + 1\n  while i <= j\
    \ do\n    local k = i\n    while k <= j and l[k] < l[k + 1] do\n      k = k +\
    \ 1\n    end\n    if k > i then\n      local m = i\n      i = k\n      j = m\n\
    \    end\n    if l[i] > l[j] then\n      return false\n    end\n    i = i + 1\n\
    \    j = j - 1\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi06js3hn.lua:7:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpi06js3hn.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpi06js3hn.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_increasing = true\n  local\
    \ is_decreasing = true\n  local last_value = l[1]\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp6f0s081m.lua:21: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ prev = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n\
    \    end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv1cgqi04.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv1cgqi04.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  while i\
    \ < #l do\n    local val = l[i]\n    if val > last_val then\n      return false\n\
    \    end\n    last_val = val\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxex05ng9.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpxex05ng9.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j -\
    \ i <= 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpor6qduh2.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpor6qduh2.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  for i =\
    \ 2, #l do\n    if l[i] ~= last_val then\n      return false\n    end\n    last_val\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2774m8m5.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2774m8m5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = nil\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpmopd5p3f.lua:21: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 0
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = l[1]\n  for i = 2, #l do\n    local\
    \ value = l[i]\n    if value < last_value then\n      is_decreasing = false\n\
    \    elseif value > last_value then\n      is_increasing = false\n    else\n \
    \     break\n    end\n    last_value = value\n  end\n  return is_decreasing or\
    \ is_increasing\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic = true\n  while i < #l do\n    local x = l[i]\n    local y = l[j]\n\
    \    if x > y then\n      k = k + 1\n      if k > 1 then\n        monotonic =\
    \ false\n      end\n    else\n      k = k - 1\n      if k < 1 then\n        monotonic\
    \ = false\n      end\n    end\n    i = i + 1\n    j = j + 1\n  end\n  return monotonic\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcea_tndl.lua:30:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpcea_tndl.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = nil\n  local last_index = nil\n \
    \ for i = 1, #l do\n    local value = l[i]\n    local index = i\n    if last_value\
    \ ~= value then\n      is_decreasing = is_decreasing and not is_increasing\n \
    \     is_increasing = is_increasing and not is_decreasing\n    end\n    last_value\
    \ = value\n    last_index = index\n  end\n  return is_decreasing or is_increasing\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwrrpf1q3.lua:26:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmpwrrpf1q3.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  while i <= #l do\n    local x = l[i]\n    if x < l[i-1]\
    \ then\n      is_decreasing = false\n    elseif x > l[i-1] then\n      is_increasing\
    \ = false\n    else\n      is_decreasing = true\n      is_increasing = true\n\
    \    end\n    i = i + 1\n  end\n  return is_decreasing or is_increasing\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe2yh9682.lua:8:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpe2yh9682.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpe2yh9682.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      local k = i\n      while k < j do\n        local m = k + 1\n \
    \       while m < j and l[m] > l[k] do\n          m = m + 1\n        end\n   \
    \     if m > k then\n          l[k] = l[m]\n        end\n        k = m\n     \
    \ end\n    end\n    i = j\n  end\n  return i == 1\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 0
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = l[1]\n  for i = 2, #l do\n    local\
    \ value = l[i]\n    if value < last_value then\n      is_decreasing = false\n\
    \    elseif value > last_value then\n      is_increasing = false\n    end\n  \
    \  last_value = value\n  end\n  return is_decreasing or is_increasing\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = -1\n  while i <= #l\
    \ do\n    local x = l[i]\n    if x > last then\n      last = x\n    elseif x <\
    \ last then\n      return false\n    end\n    i = i + 1\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvm9rtxo4.lua:23:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpvm9rtxo4.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ - i <= 1 then\n      return false\n    end\n    i = j\n  end\n  return true\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv3ekvc57.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpv3ekvc57.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local first\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] < first then return false end\n    first\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzinacawf.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzinacawf.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  for i =\
    \ 2, #l do\n    local val = l[i]\n    if val > last_val then\n      return false\n\
    \    end\n    last_val = val\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy5pi_n1s.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpy5pi_n1s.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] > prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5zn6ee2k.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5zn6ee2k.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] <= l[i] do\n      j = j + 1\n    end\n    if j\
    \ > i then\n      local k = i\n      while k < j do\n        local m = k\n   \
    \     while m > i and l[m] <= l[k] do\n          m = m - 1\n        end\n    \
    \    if m > k then\n          l[k] = l[m]\n        else\n          l[k] = l[i]\n\
    \        end\n        k = k + 1\n      end\n    end\n    i = i + 1\n  end\n  return\
    \ i == #l and l[1] >= l[#l]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzotampqh.lua:32:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzotampqh.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ 1\n    while j <= #l do\n      if l[j] < l[j - 1] then\n        return false\n\
    \      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpia39qcvl.lua:7:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmpia39qcvl.lua:7:\
    \ in function 'candidate'\n\t/tmp/tmpia39qcvl.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i < #l do\n    local e1 =\
    \ l[i]\n    local e2 = l[i + 1]\n    if e1 > e2 then\n      return false\n   \
    \ end\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpghgad32v.lua:21:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpghgad32v.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic = true\n  local last_monotonic = false\n  local last_i = nil\n  local\
    \ last_j = nil\n  local last_k = nil\n  local last_last_i = nil\n  local last_last_j\
    \ = nil\n  local last_last_k = nil\n  local last_last_last_i = nil\n  local last_last_last_j\
    \ = nil\n  local last_last_last_k = nil\n  local last_last_last_last_i = nil\n\
    \  local last_last_last_last_j = nil\n  local last_last_last_last_k = nil\n  local\
    \ last_last_last_last_last_i = nil\n  local last_last_last_last_last_j = nil\n\
    \  local last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_last_k = nil\n  local last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_last_last_last_last_last_last_last_j = nil\n  local last_last_last_last_last_last_last_k\
    \ = nil\n  local last_last_last_last_last_last_last_last_i = nil\n  local last_last_last_last_last_last_last_last_j\
    \ = nil\n  local last_last_last_last_last_last_last_k = nil\n  local last_\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4xbf_bri.lua:68: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 0
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_val = l[1]\n  for i = 2, #l do\n    local\
    \ val = l[i]\n    if val > last_val then\n      is_decreasing = false\n    elseif\
    \ val < last_val then\n      is_increasing = false\n    else\n      is_decreasing\
    \ = true\n      is_increasing = true\n    end\n    last_val = val\n  end\n  return\
    \ is_decreasing or is_increasing\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local i = 1\n\
    \  while i <= #l do\n    local j = i\n    while j < #l and l[j] < l[i] do\n  \
    \    j = j + 1\n    end\n    if j - i <= 1 then return false end\n    i = j\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsuzzpedo.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpsuzzpedo.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then\n    return true\n  end\n  local\
    \ first = l[1]\n  for i = 2, #l do\n    if l[i] < first then\n      return false\n\
    \    end\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp06bnvif3.lua:20:\
    \ expected: false, actual: true\nstack traceback:\n\t/tmp/tmp06bnvif3.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic = false\n  local last_monotonic = false\n  local last_monotonic_i\
    \ = nil\n  local last_monotonic_j = nil\n  local last_monotonic_k = nil\n  local\
    \ last_monotonic_last_i = nil\n  local last_monotonic_last_j = nil\n  local last_monotonic_last_k\
    \ = nil\n  local last_monotonic_last_last_i = nil\n  local last_monotonic_last_last_j\
    \ = nil\n  local last_monotonic_last_last_k = nil\n  local last_monotonic_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_j = nil\n  local last_monotonic_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_i = nil\n  local last_monotonic_last_last_last_last_j\
    \ = nil\n  local last_monotonic_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_i = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_i = nil\n \
    \ local last_monotonic_last_last_last_last_last_last_last_j = nil\n  local last_monotonic_last_last_last_last_last_last_last_k\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n  local\
    \ last_monotonic_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n\
    \  local last_monotonic_last_last_last_last_last_last_last_k = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_i\
    \ = nil\n  local last_monotonic_last_last_last_last_last_last_last_last_j = nil\n\
    \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1003dchf.lua:58: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfldkxrwq.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfldkxrwq.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] > prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5zn6ee2k.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp5zn6ee2k.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local is_decreasing = true\n  local\
    \ is_increasing = true\n  local last_value = l[1]\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp42_hmcqi.lua:21: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  while i\
    \ <= #l do\n    local val = l[i]\n    if val > last_val then\n      return false\n\
    \    end\n    last_val = val\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdg3inlln.lua:19:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpdg3inlln.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last_val = l[1]\n  for i =\
    \ 2, #l do\n    if l[i] ~= last_val then\n      return false\n    end\n    last_val\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2774m8m5.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp2774m8m5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] < prev then return false end\n    prev\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp94cv1tzn.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmp94cv1tzn.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l do\n      if l[j] < l[j+1] then\n        return false\n\
    \      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdc90072x.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpdc90072x.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j ==\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvm7gkfj9.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpvm7gkfj9.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local prev =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n   \
    \ end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb_ywixey.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpb_ywixey.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local last =\
    \ l[1]\n  for i = 2, #l do\n    if l[i] ~= last then return false end\n    last\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmtzo7pk7.lua:15:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpmtzo7pk7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ 1\n    while j <= #l do\n      if l[i] < l[j] then\n        return false\n \
    \     end\n      if l[i] > l[j] then\n        return true\n      end\n      j\
    \ = j + 1\n    end\n    i = i + 1\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptc2_8zpc.lua:23:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmptc2_8zpc.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic_flag = true\n  local monotonic_flag2 = true\n  local monotonic_flag3\
    \ = true\n  local monotonic_flag4 = true\n  local monotonic_flag5 = true\n  local\
    \ monotonic_flag6 = true\n  local monotonic_flag7 = true\n  local monotonic_flag8\
    \ = true\n  local monotonic_flag9 = true\n  local monotonic_flag10 = true\n  local\
    \ monotonic_flag11 = true\n  local monotonic_flag12 = true\n  local monotonic_flag13\
    \ = true\n  local monotonic_flag14 = true\n  local monotonic_flag15 = true\n \
    \ local monotonic_flag16 = true\n  local monotonic_flag17 = true\n  local monotonic_flag18\
    \ = true\n  local monotonic_flag19 = true\n  local monotonic_flag20 = true\n \
    \ local monotonic_flag21 = true\n  local monotonic_flag22 = true\n  local monotonic_flag23\
    \ = true\n  local monotonic_flag24 = true\n  local monotonic_flag25 = true\n \
    \ local monotonic_flag26 = true\n  local monotonic_flag27 = true\n  local monotonic_flag28\
    \ = true\n  local monotonic_flag29 = true\n  local monotonic_flag30 = true\n \
    \ local monotonic_flag31 = true\n  local monotonic_flag32 = true\n  local monotonic_flag33\
    \ = true\n  local monotonic_flag34 = true\n  local monotonic_flag35 = true\n \
    \ local monotonic_flag36 = true\n  local monotonic_flag37 = true\n  local monotonic_flag38\
    \ = true\n  local monotonic_flag39 = true\n  local monotonic_flag40 = true\n \
    \ local monotonic_flag41 = true\n  local monotonic_flag42 = true\n  local monotonic_flag43\
    \ = true\n  local monotonic_flag44 = true\n  local monotonic_flag45 = true\n \
    \ local monotonic_flag46 = true\n  local monotonic_flag47 = true\n  local monotonic_flag48\
    \ = true\n  local monotonic_flag49 = true\n  local monotonic_flag50 = true\n \
    \ local monotonic_flag51 = true\n  local monotonic_flag52 = true\n  local monotonic_flag53\
    \ = true\n  local monotonic_flag54 = true\n  local monot\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpwaigmq8q.lua:75: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  if #l == 1\
    \ then return true end\n  local last_val = l[1]\n  for i = 2, #l do\n    if l[i]\
    \ ~= last_val then\n      return false\n    end\n    last_val = l[i]\n  end\n\
    \  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpevonist9.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpevonist9.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j >\
    \ i then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i <= #l do\n    local j =\
    \ i\n    while j <= #l and l[j] < l[j+1] do\n      j = j + 1\n    end\n    if\
    \ j > i then\n      local k = i\n      while k <= j do\n        if l[k] < l[k+1]\
    \ then\n          k = k + 1\n        else\n          l[k] = l[k]\n          i\
    \ = i + 1\n        end\n      end\n      l[k] = l[j]\n    end\n    i = i + 1\n\
    \  end\n  return i == #l\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp36ltomhx.lua:6:\
    \ attempt to compare number with nil\nstack traceback:\n\t/tmp/tmp36ltomhx.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp36ltomhx.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i < #l do\n    local j = i\n\
    \    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j - i >\
    \ 1 then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local last = l[1]\n  for i = 2,\
    \ #l do\n    if l[i] ~= last then\n      return false\n    end\n    last = l[i]\n\
    \  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpygbflboe.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpygbflboe.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local first\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] < first then return false end\n    first\
    \ = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzinacawf.lua:18:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpzinacawf.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 0 then return false end\n  local prev\
    \ = l[1]\n  for i = 2, #l do\n    if l[i] ~= prev then\n      return false\n \
    \   end\n    prev = l[i]\n  end\n  return true\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmposh3fez0.lua:17:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmposh3fez0.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: -1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  if #l == 1 then return true end\n  local i = 1\n\
    \  while i <= #l do\n    local j = i\n    while j <= #l and l[j] < l[i] do\n \
    \     j = j + 1\n    end\n    if j > i then\n      return false\n    end\n   \
    \ i = j\n  end\n  return true\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = monotonic\n    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n\
    \    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n    lu.assertEquals(candidate({1,\
    \ 20, 4, 10}), false)\n    lu.assertEquals(candidate({4, 1, 0, -10}), true)\n\
    \    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}),\
    \ true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750527
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  while i < #l do\n    local j = i\n\
    \    while j < #l and l[j] < l[i] do\n      j = j + 1\n    end\n    if j - i <=\
    \ 1 then\n      return false\n    end\n    i = j\n  end\n  return true\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = monotonic\n\
    \    lu.assertEquals(candidate({1, 2, 4, 10}), true)\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 20}), true)\n    lu.assertEquals(candidate({1, 20, 4, 10}), false)\n \
    \   lu.assertEquals(candidate({4, 1, 0, -10}), true)\n    lu.assertEquals(candidate({4,\
    \ 1, 1, 0}), true)\n    lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9,\
    \ 9, 9, 9}), true)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfr1nza1v.lua:20:\
    \ expected: true, actual: false\nstack traceback:\n\t/tmp/tmpfr1nza1v.lua:20:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750522
- exit_code: 1
  program: "-- Return True is list elements are monotonically increasing or decreasing.\n\
    local function monotonic(l)\n  local i = 1\n  local j = 1\n  local k = 1\n  local\
    \ monotonic = false\n  local last_monotonic = false\n  local last_i = -1\n  local\
    \ last_j = -1\n  local last_k = -1\n  local last_last_i = -1\n  local last_last_j\
    \ = -1\n  local last_last_k = -1\n  local last_last_last_i = -1\n  local last_last_last_j\
    \ = -1\n  local last_last_last_k = -1\n  local last_last_last_last_i = -1\n  local\
    \ last_last_last_last_j = -1\n  local last_last_last_last_k = -1\n  local last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_j = -1\n  local last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_last_i = -1\n  local last_last_last_last_last_last_last_j\
    \ = -1\n  local last_last_last_last_last_last_k = -1\n  local last_last_last_last_last_last_last_last_i\
    \ = -1\n  local last_last_last_last_last_last_last_j = -1\n  local last_last_last_last_last_last_k\
    \ = -1\n  local last_last_last_last_last_last_last_\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = monotonic\n    lu.assertEquals(candidate({1,\
    \ 2, 4, 10}), true)\n    lu.assertEquals(candidate({1, 2, 4, 20}), true)\n   \
    \ lu.assertEquals(candidate({1, 20, 4, 10}), false)\n    lu.assertEquals(candidate({4,\
    \ 1, 0, -10}), true)\n    lu.assertEquals(candidate({4, 1, 1, 0}), true)\n   \
    \ lu.assertEquals(candidate({1, 2, 3, 2, 5, 60}), false)\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 60}), true)\n    lu.assertEquals(candidate({9, 9, 9, 9}), true)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnnelmsw9.lua:68: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750522

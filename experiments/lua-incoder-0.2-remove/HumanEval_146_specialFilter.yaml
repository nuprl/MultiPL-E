name: HumanEval_146_specialFilter
language: lua
prompt: "-- Write a function that takes an array of numbers as input and returns \n\
  -- the number of elements in the array that are greater than 10 and both \n-- first\
  \ and last digits of a number are odd (1, 3, 5, 7, 9).\n-- For example:\nlocal function\
  \ specialFilter(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = specialFilter\n\
  \    lu.assertEquals(candidate({5, -2, 1, -5}), 0)\n    lu.assertEquals(candidate({15,\
  \ -73, 14, -15}), 1)\n    lu.assertEquals(candidate({33, -2, -3, 45, 21, 109}),\
  \ 2)\n    lu.assertEquals(candidate({43, -12, 93, 125, 121, 109}), 4)\n    lu.assertEquals(candidate({71,\
  \ -2, -33, 75, 21, 19}), 3)\n    lu.assertEquals(candidate({1}), 0)\n    lu.assertEquals(candidate({}),\
  \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n\
    \      if nums[i] % 2 == 1 then\n        if nums[i] % 3 == 0 then\n          if\
    \ nums[i] % 5 == 0 then\n            count = count + 1\n          end\n      \
    \  end\n      end\n    end\n  end\n  return count\nend", "    local count = 0\n\
    \    for i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n                count = count + 1\n    \
    \        end\n        end\n    end\n    return count\nend", "  local count = 0\n\
    \  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and\
    \ nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 1 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        if nums[i] > 10 then\n            if nums[i] % 2 == 1 and nums[i] % 3\
    \ == 0 then\n                count = count + 1\n            end\n        end\n\
    \    end\n    return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i]\
    \ % 10 == 1 then\n          if nums[i] % 100 == 0 then\n            count = count\
    \ + 1\n          end\n        end\n      end\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 then\n            if num % 2 == 1 then\n                if num % 2 == 1\
    \ then\n                    count = count + 1\n                end\n         \
    \   end\n        end\n    end\n    return count\nend", "  local count = 0\n  for\
    \ i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        if nums[i]\
    \ >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and nums[i] ~= math.floor(nums[i])\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2\
    \ == 1 and nums[i] % 3 == 0) then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i]\
    \ % 2 == 1) and nums[i] % 10 ~= 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 3 == 0 then\n\
    \          if nums[i] % 5 == 0 then\n            count = count + 1\n         \
    \ end\n        end\n      end\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i]\
    \ % 4 == 1 then\n          if nums[i] % 10 == 1 then\n            count = count\
    \ + 1\n          end\n        end\n      end\n    end\n  end\n  return count\n\
    end", "  -- Your code here\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 0 then\n          if nums[i] % 10\
    \ == 0 then\n            if nums[i] % 10 == 1 then\n              count = count\
    \ + 1\n            end\n          end\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ if nums[i] > 10 then\n            if nums[i] % 2 == 1 then\n               \
    \ if nums[i] % 3 == 0 then\n                    if nums[i] % 5 == 0 then\n   \
    \                     count = count + 1\n                    end\n           \
    \     end\n            end\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i]\
    \ % 4 == 1 then\n          count = count + 1\n        end\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n   \
    \     count = count + 1\n      end\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 3 == 0 then\n          if nums[i] % 5 ==\
    \ 0 then\n            count = count + 1\n          end\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "  -- Write your code here.\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2 == 0\
    \ or nums[i] % 2 == 1) and nums[i] ~= math.floor(nums[i]) then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for\
    \ _, num in ipairs(nums) do\n        if num > 10 then\n            if num % 2\
    \ == 1 and num % 2 == 1 then\n                count = count + 1\n            end\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n       \
    \ if nums[i] % 3 == 0 then\n          if nums[i] % 5 == 0 then\n            count\
    \ = count + 1\n          end\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n   \
    \       count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i]\
    \ % 2 == 1 or nums[i] % 2 == 0) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ >= 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        if nums[i] > 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and nums[i]\
    \ ~= math.floor(nums[i]) then\n            count = count + 1\n        end\n  \
    \  end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        if nums[i] > 10 and (nums[i] % 2 == 1 and nums[i] % 3 == 1) then\n  \
    \          count = count + 1\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          if nums[i] % 100\
    \ == 0 then\n            count = count + 1\n          end\n        end\n     \
    \ end\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1,\
    \ #nums do\n    if nums[i] > 10 then\n      count = count + 1\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1\
    \ and nums[i] % 3 == 1 then\n        count = count + 1\n      end\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n  \
    \        if nums[i] % 100 == 0 then\n            count = count + 1\n         \
    \ end\n        end\n      end\n    end\n  end\n  return count\nend", "  -- Your\
    \ code here\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >\
    \ 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and nums[i] ~= math.floor(nums[i])\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i]\
    \ % 10 == 1 then\n          if nums[i] % 100 == 0 then\n            count = count\
    \ + 1\n          end\n        end\n      end\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    count = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 1 then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if\
    \ nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          count =\
    \ count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  -- Write your code here.\n  return 0\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n\
    \      end\n    end\n  end\n  return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i] % 2 ==\
    \ 1 and nums[i] % 3 == 0 then\n                count = count + 1\n           \
    \ end\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  for i = 1, #nums do\n        if nums[i] >= 10 and (nums[i] % 2 == 0 and nums[i]\
    \ % 2 ~= nums[i-1] % 2) then\n            count = count + 1\n        end\n   \
    \ end\n    return count\nend", "  local count = 0\n  for i = 1, #nums do\n   \
    \ if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 3\
    \ == 0 then\n          if nums[i] % 5 == 0 then\n            count = count + 1\n\
    \          end\n        end\n      end\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2\
    \ == 0 or nums[i] % 2 == 1) and nums[i] ~= math.floor(nums[i]) then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  -- Your code here\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count\
    \ = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n   \
    \     count = count + 1\n      end\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 3 == 0 then\n          if nums[i] % 5 ==\
    \ 0 then\n            count = count + 1\n          end\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums\
    \ do\n    if nums[i] >= 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i-1]\
    \ % 2 == 1 then\n          count = count + 1\n        end\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] >= 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10\
    \ == 1 then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ >= 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 0 then\n\
    \          if nums[i] % 100 == 0 then\n            if nums[i] % 1000 == 0 then\n\
    \              count = count + 1\n            end\n          end\n        end\n\
    \      end\n    end\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend\nprint(specialFilter([1,3,5,7,9]))",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          count = count +\
    \ 1\n        end\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 then\n        if nums[i] % 10 == 1 then\n          if nums[i] % 100 == 0 then\n\
    \            count = count + 1\n          end\n        end\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 3 ==\
    \ 0 then\n          if nums[i] % 5 == 0 then\n            count = count + 1\n\
    \          end\n        end\n      end\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2\
    \ == 1 and nums[i] % 3 == 1) then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ >= 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n   \
    \       if nums[i] % 8 == 1 then\n            count = count + 1\n          end\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2 == 1 or nums[i]\
    \ % 2 == 0) then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count\
    \ = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 1) then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1\
    \ and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i] % 3 == 0) then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n  \
    \      if nums[i] % 10 == 1 then\n          if nums[i] % 100 == 0 then\n     \
    \       count = count + 1\n          end\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ if nums[i] >= 10 and (nums[i] % 2 == 1 and nums[i] % 3 == 1) then\n        \
    \    count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n         \
    \   if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 1\
    \ or nums[i] % 2 == 0) then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      count = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 ==\
    \ 1 then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 then\n        if nums[i] % 3 == 0 then\n          if\
    \ nums[i] % 5 == 0 then\n            count = count + 1\n          end\n      \
    \  end\n      end\n    end\n  end\n  return count\nend", "    local count = 0\n\
    \    for i = 1, #nums do\n        if nums[i] >= 10 then\n            if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n                count = count + 1\n    \
    \        end\n        end\n    end\n    return count\nend", "  local count = 0\n\
    \  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and\
    \ nums[i] % 3 == 1 then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count = count +\
    \ 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 1 then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "    local count = 0\n\
    \    for i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i]\
    \ % 2 == 1 then\n                if nums[i] % 4 == 1 then\n                  \
    \  count = count + 1\n                end\n            end\n        end\n    end\n\
    \    return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ >= 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n  \
    \        if nums[i] % 100 == 0 then\n            count = count + 1\n         \
    \ end\n        end\n      end\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          count = count +\
    \ 1\n        end\n      end\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 and (nums[i] % 2\
    \ == 1 and nums[i] % 3 == 1) then\n            count = count + 1\n        end\n\
    \    end\n    return count\nend", "    local count = 0\n    for _, num in ipairs(nums)\
    \ do\n        if num > 10 then\n            if num % 2 == 1 then\n           \
    \     if num % 3 == 0 then\n                    if num % 5 == 0 then\n       \
    \                 count = count + 1\n                    end\n               \
    \ end\n            end\n        end\n    end\n    return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count = count\
    \ + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "    local count = 0\n\
    \    for _, num in ipairs(nums) do\n        if num > 10 then\n            if num\
    \ % 2 == 1 then\n                if num % 10 == 1 then\n                    if\
    \ num % 100 == 0 then\n                        count = count + 1\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ if nums[i] > 10 then\n            if nums[i] % 2 == 1 then\n               \
    \ if nums[i] % 2 == 1 then\n                    count = count + 1\n          \
    \      end\n            end\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count\
    \ = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 then\n        if nums[i] % 10 == 1 then\n          if nums[i] % 100 == 0 then\n\
    \            count = count + 1\n          end\n        end\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and \n      nums[i]\
    \ ~= (nums[i] % 10 + nums[i] % 10) then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n\
    \          if nums[i] % 100 == 0 then\n            count = count + 1\n       \
    \   end\n        end\n      end\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1\
    \ and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 4 ==\
    \ 1 then\n          if nums[i] % 8 == 1 then\n            count = count + 1\n\
    \          end\n        end\n      end\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          count = count +\
    \ 1\n        end\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  -- Write your code here.\n  -- Don't forget to\
    \ handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure you return\
    \ the correct data type (integer or boolean)\n  -- Make sure you handle edge cases\
    \ (empty arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases (empty\
    \ arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases (empty arrays,\
    \ nil arrays, etc.)\n  -- Make sure you handle edge cases (empty arrays, nil arrays,\
    \ etc.)\n  -- Make sure you handle edge cases (empty arrays, nil arrays, etc.)\n\
    \  -- Make sure you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make\
    \ sure you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure\
    \ you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure you handle\
    \ edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure you handle edge\
    \ cases (empty arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases\
    \ (empty arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases (empty\
    \ arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases (empty arrays,\
    \ nil arrays, etc.)\n  -- Make sure you handle edge cases (empty arrays, nil arrays,\
    \ etc.)\n  -- Make sure you handle edge cases (empty arrays, nil arrays, etc.)\n\
    \  -- Make sure you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make\
    \ sure you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure\
    \ you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure you handle\
    \ edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure you handle edge\
    \ cases (empty arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases\
    \ (empty arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases (empty\
    \ arrays, nil arrays, etc.)\n  -- Make sure you handle edge cases (empty arrays,\
    \ nil arrays, etc.)\n  -- Make sure you handle edge cases (empty arrays, nil arrays,\
    \ etc.)\n  -- Make sure you handle edge cases (empty arrays, nil arrays, etc.)\n\
    \  -- Make sure you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make\
    \ sure you handle edge cases (empty arrays, nil arrays, etc.)\n  -- Make sure\
    \ you handle edge cases (empty arrays, nil arrays, etc.)", "  local count = 0\n\
    \  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if nums[i] % 2 == 1 then\n\
    \        if nums[i] % 10 == 1 then\n          count = count + 1\n        end\n\
    \      end\n    end\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 ==\
    \ 1) and \n      (nums[i] % 10 == 1 or nums[i] % 10 == 3) then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2 == 1 or nums[i] % 2 == 0)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 1\
    \ or nums[i] % 2 == 0) then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n   \
    \       if nums[i] % 10 == 1 then\n            count = count + 1\n          end\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count = count +\
    \ 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 1 then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local count = 0\n \
    \ for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 1) then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          if nums[i] % 100\
    \ == 0 then\n            count = count + 1\n          end\n        end\n     \
    \ end\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1,\
    \ #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 1 or nums[i] % 2 == 0) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2 == 1 or nums[i]\
    \ % 2 == 0) then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and nums[i] ~=\
    \ (nums[i] % 10) then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for _, num in ipairs(nums) do\n        if num\
    \ > 10 then\n            if num % 2 == 1 then\n                if num % 10 ==\
    \ 1 then\n                    count = count + 1\n                end\n       \
    \     end\n        end\n    end\n    return count\nend", "    local count = 0\n\
    \    for i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i]\
    \ % 2 == 1 then\n                if nums[i] % 4 == 1 then\n                  \
    \  if nums[i] % 8 == 1 then\n                        count = count + 1\n     \
    \               end\n                end\n            end\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    for i = 1, #nums do\n     \
    \   if nums[i] >= 10 then\n            if nums[i] % 2 == 1 then\n            \
    \    if nums[i] % 10 == 1 then\n                    count = count + 1\n      \
    \          end\n            end\n        end\n    end\n    return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 4 == 1 then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 1) then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          count = count +\
    \ 1\n        end\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 and nums[i] % 3 == 1 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] >= 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10\
    \ == 1 then\n          count = count + 1\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1 and nums[i] %\
    \ 3 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      count = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 ==\
    \ 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n\
    \            if nums[i] % 2 == 1 and nums[i] % 3 == 1 then\n                count\
    \ = count + 1\n            end\n        end\n    end\n    return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          if nums[i] % 100\
    \ == 0 then\n            count = count + 1\n          end\n        end\n     \
    \ end\n    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1,\
    \ #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and\
    \ nums[i] % 10 ~= 0 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \ -- Write your code here.\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i]\
    \ % 10 == 1 then\n          if nums[i] % 100 == 0 then\n            count = count\
    \ + 1\n          end\n        end\n      end\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n          if\
    \ nums[i] % 10 == 1 then\n            count = count + 1\n          end\n     \
    \   end\n      end\n    end\n  end\n  return count\nend", "  local count = 0\n\
    \  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 0 or nums[i]\
    \ % 2 == 1) and nums[i] % 10 ~= 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and \n      (nums[i] % 10 ==\
    \ 1 or nums[i] % 10 == 3) then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        if nums[i]\
    \ > 10 then\n            if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n     \
    \           count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for i = 1, #nums do\n        if nums[i]\
    \ > 10 then\n            if nums[i] % 2 == 1 then\n                if nums[i]\
    \ % 4 == 1 then\n                    if nums[i] % 10 == 1 then\n             \
    \           count = count + 1\n                    end\n                end\n\
    \            end\n        end\n    end\n    return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 ==\
    \ 1 then\n        if nums[i] % 3 == 0 then\n          if nums[i] % 5 == 0 then\n\
    \            count = count + 1\n          end\n        end\n      end\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        if nums[i] > 10 then\n            if nums[i] % 2 == 1 then\n        \
    \        if nums[i] % 4 == 1 then\n                    count = count + 1\n   \
    \             end\n            end\n        end\n    end\n    return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 4 == 1 then\n          if nums[i] % 10 ==\
    \ 1 then\n            count = count + 1\n          end\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums\
    \ do\n    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2\
    \ == 1 and nums[i] % 3 == 1 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 3 ==\
    \ 0 then\n          if nums[i] % 5 == 0 then\n            count = count + 1\n\
    \          end\n        end\n      end\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "    local count = 0\n    for i = 1, #nums\
    \ do\n        if nums[i] > 10 and (nums[i] % 2 == 1 or nums[i] % 2 == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 3 == 0 then\n          if nums[i] % 5 ==\
    \ 0 then\n            count = count + 1\n          end\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums\
    \ do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n\
    \      end\n    end\n  end\n  return count\nend", "    local count = 0\n    for\
    \ i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i] % 2 ==\
    \ 1 then\n                if nums[i] % 4 == 1 then\n                    if nums[i]\
    \ % 10 == 1 then\n                        count = count + 1\n                \
    \    end\n                end\n            end\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 2 == 1 then\n   \
    \       if nums[i] % 2 == 1 then\n            count = count + 1\n          end\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i]\
    \ % 2 == 1 then\n                if nums[i] % 10 == 1 then\n                 \
    \   if nums[i] % 100 != 0 then\n                        count = count + 1\n  \
    \                  end\n                end\n            end\n        end\n  \
    \  end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        if nums[i] >= 10 then\n            if nums[i] % 2 == 1 then\n       \
    \         if nums[i] % 10 == 1 then\n                    if nums[i] % 100 == 0\
    \ then\n                        count = count + 1\n                    end\n \
    \               end\n            end\n        end\n    end\n    return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n          count\
    \ = count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2\
    \ == 1 and nums[i] % 3 == 1) then\n      count = count + 1\n    end\n  end\n \
    \ return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n\
    \          count = count + 1\n        end\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n   \
    \       count = count + 1\n        end\n      end\n    end\n  end\n  return count\n\
    end", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n  \
    \    if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n\
    \      end\n    end\n  end\n  return count\nend", "  local count = 0\n  for i\
    \ = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n  \
    \      if nums[i] % 4 == 1 then\n          count = count + 1\n        end\n  \
    \    end\n    end\n  end\n  return count\nend", "  local count = 0\n  for i =\
    \ 1, #nums do\n    if nums[i] > 10 and (nums[i] % 2 == 1 and nums[i] % 3 == 1)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count = count\
    \ + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 1 then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend\nprint(specialFilter({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\
    \ 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41,\
    \ 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60,\
    \ 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79,\
    \ 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98,\
    \ 99, 100}))", "    local count = 0\n    for i = 1, #nums do\n        if nums[i]\
    \ > 10 then\n            if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n     \
    \           count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 4 == 1 then\n   \
    \       if nums[i] % 10 == 1 then\n            count = count + 1\n          end\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i]\
    \ % 2 == 1 then\n                if nums[i] % 4 == 1 then\n                  \
    \  if nums[i] % 8 == 1 then\n                        count = count + 1\n     \
    \               end\n                end\n            end\n        end\n    end\n\
    \    return count\nend", "    local count = 0\n    for i = 1, #nums do\n     \
    \   if nums[i] > 10 then\n            if nums[i] % 2 == 1 and nums[i] % 3 == 1\
    \ then\n                count = count + 1\n            end\n        end\n    end\n\
    \    return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ >= 10 and (nums[i] % 2 == 0 or nums[i] % 2 == 1) and nums[i] ~= (nums[i] % 10)\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 and (nums[i] % 2 == 1\
    \ or nums[i] % 2 == 0) then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n  \
    \        if nums[i] % 100 == 0 then\n            count = count + 1\n         \
    \ end\n        end\n      end\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n         \
    \   if nums[i] % 2 == 1 then\n                if nums[i] % 4 == 1 then\n     \
    \               count = count + 1\n                end\n            end\n    \
    \    end\n    end\n    return count\nend", "  local count = 0\n  for i = 1, #nums\
    \ do\n    if nums[i] >= 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i]\
    \ % 10 == 0 then\n          if nums[i] % 100 == 0 then\n            if nums[i]\
    \ % 1000 == 0 then\n              count = count + 1\n            end\n       \
    \   end\n        end\n      end\n    end\n  end\n  return count\nend", "  local\
    \ count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1\
    \ and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n   \
    \     count = count + 1\n      end\n    end\n  end\n  return count\nend", "  \
    \  local count = 0\n    for _, num in ipairs(nums) do\n        if num > 10 and\
    \ (num % 2 == 0 or num % 2 == 1) and (num % 10 == 1 or num % 10 == 3) then\n \
    \           count = count + 1\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if\
    \ nums[i] % 2 == 1 then\n        if nums[i] % 10 == 1 then\n          count =\
    \ count + 1\n        end\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n \
    \   end\n  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1\
    \ and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n \
    \ end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n        if nums[i] % 10 ==\
    \ 1 then\n          if nums[i] % 100 == 0 then\n            count = count + 1\n\
    \          end\n        end\n      end\n    end\n  end\n  return count\nend",
  "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i]\
    \ % 2 == 1 then\n        if nums[i] % 4 == 1 then\n          count = count + 1\n\
    \        end\n      end\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i]\
    \ % 2 == 1 then\n                if nums[i] % 10 == 0 then\n                 \
    \   if nums[i] % 10 == 1 then\n                        count = count + 1\n   \
    \                 end\n                end\n            end\n        end\n   \
    \ end\n    return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        if nums[i] > 10 then\n            if nums[i] % 2 == 1 and nums[i] % 3\
    \ == 0 then\n                count = count + 1\n            end\n        end\n\
    \    end\n    return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1\
    \ and nums[i] % 3 == 1 then\n        count = count + 1\n      end\n    end\n \
    \ end\n  return count\nend\nprint(specialFilter([1,2,3,4,5,6,7,8,9,10]))", " \
    \   local count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n \
    \           if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n                count\
    \ = count + 1\n            end\n        end\n    end\n    return count\nend",
  "  -- Write your code here\nend", "  local count = 0\n  for i = 1, #nums do\n  \
    \  if nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1 and\
    \ nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i]\
    \ > 10 then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "    local count\
    \ = 0\n    for i = 1, #nums do\n        if nums[i] > 10 then\n            if nums[i]\
    \ % 2 == 1 and nums[i] % 3 == 1 then\n                count = count + 1\n    \
    \        end\n        end\n    end\n    return count\nend", "  local count = 0\n\
    \  for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n\
    \        if nums[i] % 10 == 1 then\n          if nums[i] % 100 == 0 then\n   \
    \         count = count + 1\n          end\n        end\n      end\n    end\n\
    \  end\n  return count\nend", "  local count = 0\n  for i = 1, #nums do\n    if\
    \ nums[i] > 10 then\n      count = count + 1\n      if nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 1 then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local count = 0\n \
    \ for i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n\
    \        if nums[i] % 3 == 0 then\n          if nums[i] % 5 == 0 then\n      \
    \      count = count + 1\n          end\n        end\n      end\n    end\n  end\n\
    \  return count\nend", "    local count = 0\n    for i = 1, #nums do\n       \
    \ if nums[i] > 10 then\n            if nums[i] % 2 == 1 then\n               \
    \ if nums[i] % 4 == 1 then\n                    count = count + 1\n          \
    \      end\n            end\n        end\n    end\n    return count\nend", " \
    \ local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10 then\n      count\
    \ = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 == 0 then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local count\
    \ = 0\n  for i = 1, #nums do\n    if nums[i] >= 10 then\n      if nums[i] % 2\
    \ == 1 and nums[i] % 3 == 0 then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "    local count = 0\n    for i = 1, #nums do\n\
    \        if nums[i] > 10 then\n            if nums[i] % 2 == 1 and nums[i] % 3\
    \ == 1 then\n                count = count + 1\n            end\n        end\n\
    \    end\n    return count\nend", "  local count = 0\n  for i = 1, #nums do\n\
    \    if nums[i] > 10 and (nums[i] % 2 == 1 and nums[i] % 3 == 1) then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  local count = 0\n  for\
    \ i = 1, #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 and nums[i]\
    \ % 3 == 0 then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local count = 0\n  for i = 1, #nums do\n    if nums[i] > 10\
    \ then\n      count = count + 1\n      if nums[i] % 2 == 1 and nums[i] % 3 ==\
    \ 0 then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "    local count = 0\n    for i = 1, #nums do\n        if nums[i] > 10 and\
    \ (nums[i] % 2 == 1 and nums[i] % 3 == 1) then\n            count = count + 1\n\
    \        end\n    end\n    return count\nend", "  local count = 0\n  for i = 1,\
    \ #nums do\n    if nums[i] > 10 then\n      if nums[i] % 2 == 1 then\n       \
    \ if nums[i] % 3 == 0 then\n          if nums[i] % 5 == 0 then\n            count\
    \ = count + 1\n          end\n        end\n      end\n    end\n  end\n  return\
    \ count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

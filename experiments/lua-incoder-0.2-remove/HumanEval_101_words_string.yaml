name: HumanEval_101_words_string
language: lua
prompt: "-- You will be given a string of words separated by commas or spaces. Your\
  \ task is\n-- to split the string into words and return an array of the words.\n\
  -- For example:\nlocal function words_string(s)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = words_string\n\
  \    lu.assertEquals(candidate('Hi, my name is John'), {'Hi', 'my', 'name', 'is',\
  \ 'John'})\n    lu.assertEquals(candidate('One, two, three, four, five, six'), {'One',\
  \ 'two', 'three', 'four', 'five', 'six'})\n    lu.assertEquals(candidate('Hi, my\
  \ name'), {'Hi', 'my', 'name'})\n    lu.assertEquals(candidate('One,, two, three,\
  \ four, five, six,'), {'One', 'two', 'three', 'four', 'five', 'six'})\n    lu.assertEquals(candidate(''),\
  \ {})\n    lu.assertEquals(candidate('ahmed     , gamal'), {'ahmed', 'gamal'})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "  -- Write your code here\nend", " \
    \ -- Write your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "    local words = string.gmatch(s, \"([^,]+)\")\n    return words\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Write your code here\nend", "  -- Your code here\nend", "  -- Write your code\
    \ here\nend", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your\
    \ code here\nend", "  -- your code here\nend", "  local words = {}\n  for word\
    \ in string.gmatch(s, \"[^,]+\") do\n    table.insert(words, word)\n  end\n  return\
    \ words\nend", "  -- Write your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "  -- Write your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- Write your code here\n\
    end", "    local words = string.gmatch(s, \"[^,]+\")\n    return words\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "    local words = string.gmatch(s,\
    \ \"([^,]+)\")\n    if words == nil then\n        return nil\n    end\n    return\
    \ words\nend", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Write\
    \ your code here.\nend", "  -- Write your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- Write your code here\nend", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "  -- Write your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  local words = {}\n  for word in string.gmatch(s, \"[^,]+\") do\n    table.insert(words,\
    \ word)\n  end\n  return words\nend", "  local words = string.gmatch(s, \"([^,]+)\"\
    )\n  return words\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Write your code here.\nend", "  -- Your code here\n\
    end", "    local words = string.gmatch(s, \"([^,]+)\")\n    if words == nil then\n\
    \        return nil\n    end\n    return words\nend", "  -- Your code here\nend",
  "  -- Write your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- your code here\nend", "  -- Write your code here\nend", "  -- Write\
    \ your code here\nend", "  -- Write your code here\n  return nil\nend", "  --\
    \ Your code here\nend", "  -- Your code here\nend", "  -- Write your code here\n\
    end", "  -- Your code here\nend", "  -- Write your code here\nend", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Write your\
    \ code here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Write your code here\nend", "  -- Your code here\nend", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "    local words = {}\n    for w in string.gmatch(s,\
    \ \"[^,]+\") do\n        table.insert(words, w)\n    end\n    return words\nend",
  "  -- your code here\nend", "  -- Write your code here\nend", "  local words = string.gmatch(s,\
    \ \"([^,]+)\")\n  return words\nend", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "  -- Write your code here\nend", " \
    \ -- Write your code here\nend", "  -- Your code here\nend", "  -- Write your\
    \ code here\nend", "  -- Your code here\nend", "  local words = { }\n  for word\
    \ in string.gmatch(s, \"([^,]+)(,|$)\") do\n    table.insert(words, word)\n  end\n\
    \  return words\nend", "  -- Your code here\nend", "  -- Write your code here\n\
    \  return nil\nend", "    local words = string.gmatch(s, \"([^,]+)\")\n    return\
    \ words\nend", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Write your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Your code here\nend", "  local words = { }\n  for word in\
    \ s:gmatch(\"[^,]+\") do\n    table.insert(words, word)\n  end\n  return words\n\
    end", "  -- Your code here\nend", "  -- Write your code here\nend", "  -- Your\
    \ code here\nend", "    local words = {}\n    for w in string.gmatch(s, \"[^,]+\"\
    ) do\n        table.insert(words, w)\n    end\n    return words\nend", "  -- Your\
    \ code here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- your code goes here\n\
    end", "  -- Write your code here\nend", "  -- Write your code here\nend", "  --\
    \ Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Write your code here\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "  -- your code\
    \ goes here\nend", "  -- Your code here\nend", "  -- Your code here\nend", " \
    \ -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "    local words = string.gmatch(s, \"[^,]+\"\
    )\n    return words\nend", "  -- Your code here\nend", "  local words = { }\n\
    \  for word in string.gmatch(s, \"[^,]+\") do\n    table.insert(words, word)\n\
    \  end\n  return words\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- your code goes here\nend", "  -- Write\
    \ your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "    local words = string.gmatch(s, \"([^,]+)\")\n    return words\nend", "  --\
    \ Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code here\nend",
  "  -- Write your code here\nend", "  -- Your code here\nend", "  -- Your code here\n\
    end", "  -- Your code here\nend", "  -- Your code here\nend", "  -- Your code\
    \ here\nend", "  -- Write your code here\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_102_choose_num
language: lua
prompt: "-- This function takes two positive numbers x and y and returns the\n-- biggest\
  \ even integer number that is in the range [x, y] inclusive. If \n-- there's no\
  \ such number, then the function should return -1.\n-- For example:\nlocal function\
  \ choose_num(x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = choose_num\n\
  \    lu.assertEquals(candidate(12, 15), 14)\n    lu.assertEquals(candidate(13, 12),\
  \ -1)\n    lu.assertEquals(candidate(33, 12354), 12354)\n    lu.assertEquals(candidate(5234,\
  \ 5233), -1)\n    lu.assertEquals(candidate(6, 29), 28)\n    lu.assertEquals(candidate(27,\
  \ 10), -1)\n    lu.assertEquals(candidate(7, 7), -1)\n    lu.assertEquals(candidate(546,\
  \ 546), 546)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local function is_even(n)\n        return n % 2 == 0\n    end",
  "  if x > y then return choose_num(y, x) end\n  if x == y then return x end\n  if\
    \ x % 2 == 0 then return x end\n  local even = choose_num(x / 2, y)\n  if even\
    \ % 2 == 0 then return even end\n  return -1\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between2(a, b)\n        return\
    \ a <= n and n <= b\n    end\n    local function is_odd2(n)\n        return n\
    \ % 2 == 0\n    end\n    local function is_between3(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_odd3(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between4(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd4(n)\n        return n % 2 == 0\n\
    \    end\n    local function is_between5(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd5(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between6(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd6(n)\n        return n % 2 == 0\n    end\n    local\
    \ function is_between7(a, b)\n        return a <= n and n <= b\n    end\n    local\
    \ function is_odd7(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between8(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd8(n)\n        return n % 2 == 0\n    end\n    local function is_between9(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd9(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between10(a, b)\n \
    \       return a <= n and n <= b\n    end\n    local function is_odd10(n)\n  \
    \      return n % 2 == 0\n    end\n    local function is_between11(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd11(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between12(a, b)\n     \
    \   return a <= n and n <= b\n    end\n    local function is_odd12(n)\n      \
    \  return n % 2 == 0\n    end\n    local function is_between13(a, b)\n       \
    \ return a <= n and n <= b\n    end\n    local function is_odd13(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between14(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd14(n)\n        return n %\
    \ 2 == 0\n    end\n    local function is_between15(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_", "  if x < y then\n    return\
    \ -1\n  end\n  local max_num = 0\n  local max_num_pos = nil\n  local max_num_neg\
    \ = nil\n  for i = x, y + 1 do\n    if i % 2 == 0 then\n      if max_num < i then\n\
    \        max_num = i\n        max_num_pos = i\n      else\n        max_num_neg\
    \ = i\n      end\n    end\n  end\n  if max_num_neg == nil then\n    return max_num\n\
    \  else\n    return max_num_neg\n  end\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_in_range(n)\n        return is_even(n)\
    \ or is_odd(n)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n", "   if x < y then\n      local x_even = x % 2\n      local y_even\
    \ = y % 2\n      if x_even > y_even then\n         return choose_num(x + 1, y)\n\
    \      else\n         return choose_num(x, y + 1)\n      end\n   else\n      return\
    \ -1\n   end\nend", "    local function is_even(n)\n        return n % 2 == 0\n\
    \    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n \
    \   local function is_between(x, y)\n        return x >= y and x <= y\n    end\n\
    \    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n \
    \   end\n    local function is_in_range(n)\n        return is_between(n, n + 2)\n\
    \    end\n    local function is_in_range(n)\n        return is_between(n, n +\
    \ 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n", "    if x > y then\n        x, y = y, x\n    end\n    if x == y then\n\
    \        return x\n    end\n    if x % 2 == 0 then\n        return choose_num(x\
    \ / 2, y)\n    end\n    if y % 2 == 0 then\n        return choose_num(x, y / 2)\n\
    \    end\n    return -1\nend", "    if x > y then\n        x, y = y, x\n    end\n\
    \    for i = x, y + 1 do\n        if i % 2 == 0 then\n            return i\n \
    \       end\n    end\n    return -1\nend", "   if x < y then\n      local x_even\
    \ = math.floor(x/2)\n      local y_even = math.floor(y/2)\n      return choose_num(x_even,\
    \ y_even)\n   else\n      local x_odd = math.floor(x/2)\n      local y_odd = math.floor(y/2)\n\
    \      return choose_num(x_odd, y_odd)\n   end\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    \n    local function is_between(a, b)\n\
    \        return a <= b and a >= b\n    end\n    \n    local function is_in_range(n)\n\
    \        return is_between(x, n) and is_between(y, n)\n    end\n    \n    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end\n    \n    local function\
    \ is_between(a, b)\n        return a <= b and a >= b\n    end\n    \n    local\
    \ function is_in_range(n)\n        return is_between(x, n) and is_between(y, n)\n\
    \    end\n    \n    local function is_even(n)\n        return n % 2 == 0\n   \
    \ end\n    \n    local function is_between(a, b)\n        return a <= b and a\
    \ >= b\n    end\n    \n    local function is_in_range(n)\n        return is_between(x,\
    \ n) and is_between(y, n)\n    end\n    \n    local function is_even(n)\n    \
    \    return n % 2 == 0\n    end\n    \n    local function is_between(a, b)\n \
    \       return a <= b and a >= b\n    end\n    \n    local function is_in_range(n)\n\
    \        return is_between(x, n) and is_between(y, n)\n    end\n    \n    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end\n    \n    local function\
    \ is_between(a, b)\n        return a <= b and a >= b\n    end\n    \n    local\
    \ function is_in_range(n)\n        return is_between(x, n) and is_between(y, n)\n\
    \    end\n    \n    local function is_even(n)\n        return n % 2 == 0\n   \
    \ end\n    \n    local function is_between(a, b)\n        return a <= b and a\
    \ >= b\n    end\n    \n    local function is_in_range(n)\n        return is_between(x,\
    \ n) and is_between(y, n)\n    end\n    \n    local function is_even(n)\n    \
    \    return n % 2 == 0\n    end\n    \n    local function is_between(a, b)\n \
    \       return a <= b and a >= b\n    end\n    \n    local function is_in_range(n)\n\
    \        return is_between(x, n) and is_between(y, n)\n    end\n    \n    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end\n    \n    local function\
    \ is_between(a, b)\n        return a <= b and a >= b\n    end\n    \n    local\
    \ function is_in_range(n)\n        return is_between(x, n) and is_between(y, n)\n\
    \    end\n    \n    local function is_even(n)\n        return n % 2 == 0\n   \
    \ end\n    \n    local function is_between(a, b)\n        return a <= b and a\
    \ >= b\n    end\n    \n    local function is_", "   if x > y then\n      x, y\
    \ = y, x\n   end\n   local max_num = x\n   for i = y, 1, -1 do\n      if max_num\
    \ % i == 0 then\n         max_num = max_num / i\n      else\n         return -1\n\
    \      end\n   end\n   return max_num\nend", "   if x > y then\n      x, y = y,\
    \ x\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n\
    \      return choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return\
    \ choose_num(x, y / 2)\n   end\n   if x % 2 == y % 2 then\n      return choose_num(x\
    \ / 2, y / 2)\n   end\n   if x % 2 == y % 2 then\n      return choose_num(x, y\
    \ / 2)\n   end\n   return -1\nend", "   if x < y then\n      local m = x\n   \
    \   x = y\n      y = m\n   end\n   if x < 2 then\n      return -1\n   end\n  \
    \ if y < 2 then\n      return -1\n   end\n   if x == y then\n      return x\n\
    \   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n  \
    \ if y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   if x > y then\n\
    \      return choose_num(x / 2, y)\n   end\n   if y > x then\n      return choose_num(x,\
    \ y / 2)\n   end\nend", "   if x < y then\n      local x_even = x % 2 == 0\n \
    \     local y_even = y % 2 == 0\n      if x_even and y_even then\n         return\
    \ x\n      else\n         return y\n      end\n   else\n      local x_even = x\
    \ % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even and y_even then\n\
    \         return y\n      else\n         return x\n      end\n   end\nend", " \
    \  if x > y then\n      x, y = y, x\n   end\n   local max_num = 0\n   for i =\
    \ x, y + 1 do\n      if i ~= 0 then\n         if max_num < i then\n          \
    \  max_num = i\n         end\n      end\n   end\n   return max_num\nend", "  \
    \ if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ < 2 then\n      return -1\n   end\n   if y < 2 then\n      return -1\n   end\n\
    \   local i = 1\n   while i <= y do\n      if x % 2 == 0 then\n         return\
    \ x\n      end\n      x = x * 2\n      i = i + 1\n   end\n   return -1\nend",
  "   if x < y then\n      local x_even = x % 2\n      local y_even = y % 2\n    \
    \  if x_even > y_even then\n         return choose_num(x + 1, y)\n      else\n\
    \         return choose_num(x, y + 1)\n      end\n   else\n      local x_even\
    \ = x % 2\n      local y_even = y % 2\n      if x_even < y_even then\n       \
    \  return choose_num(x - 1, y)\n      else\n         return choose_num(x, y)\n\
    \      end\n   end\nend", "    local function is_even(n)\n        return n % 2\
    \ == 0\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n   \
    \ end\n    local function is_between(x, min, max)\n        return min <= x and\
    \ x <= max\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ x, y)\n    end\n    local function is_even_in_range(n)\n        return is_in_range(n)\
    \ and is_even(n)\n    end\n    local function is_odd_in_range(n)\n        return\
    \ is_in_range(n) and is_odd(n)\n    end\n    local function is_even_in_range_or_odd(n)\n\
    \        return is_in_range(n) or is_odd(n)\n    end\n    local function is_odd_in_range_or_even(n)\n\
    \        return is_in_range(n) or is_even(n)\n    end\n    local function is_in_range_or_even(n)\n\
    \        return is_in_range(n) or is_even(n)\n    end\n    local function is_in_range_or_odd(n)\n\
    \        return is_in_range(n) or is_odd(n)\n    end\n    local function is_in_range_or_even(n)\n\
    \        return is_in_range(n) or is_even(n)\n    end\n    local function is_in_range_or_odd_or_even(n)\n\
    \        return is_in_range(n) or is_odd(n) or is_even(n)\n    end\n    local\
    \ function is_in_range_or_odd_or_even(n)\n        return is_in_range(n) or is_odd(n)\
    \ or is_even(n)\n    end\n    local function is_in_range_or_odd_or_even(n)\n \
    \       return is_in_range(n) or is_odd(n) or is_even(n)\n    end\n    local function\
    \ is_in_range_or_odd_or_even(n)\n        return is_in_range(n) or is_odd(n) or\
    \ is_even(n)\n    end\n    local function is_in_range_or_odd_or_even(n)\n    \
    \    return is_in_range(n) or is_odd(n) or is_even(n)\n    end\n    local function\
    \ is_in_range_or_odd_or_even(n)\n        return is_in_range(n) or is_odd(n) or\
    \ is_even(n)\n    end\n    local function is_in_range_or_odd_or_even(n)\n    \
    \    return is_in_range(n) or is_odd(n) or is_even(n)\n    end\n    local function\
    \ is_in_range_or_odd_or_even(n)\n        return is_in_range(n) or is_odd(n) or\
    \ is_even(n)\n    end\n    local function is_in_range_or_odd_or_even(n)\n    \
    \    return is_in_range(n) or is_odd(n) or is_even(n)\n    end\n    local function\
    \ is_in_range_or_odd_or_even(n)\n        return is_in_range(n", "   if x < y then\n\
    \      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even\
    \ and y_even then\n         return x\n      elseif x_even then\n         return\
    \ y\n      else\n         return x\n      end\n   else\n      local x_even = x\
    \ % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even and y_even then\n\
    \         return y\n      elseif x_even then\n         return x\n      else\n\
    \         return y\n      end\n   end\nend", "    if x > y then return choose_num(y,\
    \ x) end\n    if x == y then return x end\n    if x % 2 == 0 then return x end\n\
    \    if y % 2 == 0 then return y end\n    local m = math.max(x, y)\n    local\
    \ n = math.min(x, y)\n    while m % 2 == 0 and n >= m do\n        m = m / 2\n\
    \        n = n - m\n    end\n    return n\nend", "   if x < y then\n      local\
    \ t = x\n      x = y\n      y = t\n   end\n   local ans = -1\n   for i = x, y\
    \ + 1 do\n      if i % 2 == 0 then\n         ans = i\n         break\n      end\n\
    \   end\n   return ans\nend", "    local function is_even(n)\n        return n\
    \ % 2 == 0\n    end\n    local function is_between(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_odd(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between2(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd2(n)\n        return n % 2 == 0\n\
    \    end\n    local function is_between3(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd3(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between4(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd4(n)\n        return n % 2 == 0\n    end\n    local\
    \ function is_between5(a, b)\n        return a <= n and n <= b\n    end\n    local\
    \ function is_odd5(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between6(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd6(n)\n        return n % 2 == 0\n    end\n    local function is_between7(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd7(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between8(a, b)\n  \
    \      return a <= n and n <= b\n    end\n    local function is_odd8(n)\n    \
    \    return n % 2 == 0\n    end\n    local function is_between9(a, b)\n      \
    \  return a <= n and n <= b\n    end\n    local function is_odd9(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between10(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd10(n)\n        return n %\
    \ 2 == 0\n    end\n    local function is_between11(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_odd11(n)\n        return n % 2\
    \ == 1\n    end\n    local function is_between12(a, b)\n        return a <= n\
    \ and n <= b\n    end\n    local function is_odd12(n)\n        return n % 2 ==\
    \ 0\n    end\n    local function is_between13(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd13(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between14(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd14(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_between15(a, b)\n        return a <= n and n <= b\n   \
    \ end\n    local function is_", "   if x < y then\n      local x_even = x % 2\n\
    \      local y_even = y % 2\n      if x_even > y_even then\n         return choose_num(x\
    \ + 1, y)\n      else\n         return choose_num(x, y + 1)\n      end\n   else\n\
    \      return -1\n   end\nend", "    if x < y then\n        x, y = y, x\n    end\n\
    \    local function is_even(n)\n        return n % 2 == 0\n    end\n    local\
    \ function is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range_or_not(n)\n\
    \        return is_in_range(n) or is_between(n, n + 2)\n    end\n    local function\
    \ choose_num_helper(x, y)\n        if is_in_range_or_not(x) and is_in_range_or_not(y)\
    \ then\n            if is_even(x) and is_even(y) then\n                return\
    \ x\n            elseif is_odd(x) and is_odd(y) then\n                return y\n\
    \            elseif is_between(x, y) and is_in_range_or_not(x + 1) then\n    \
    \            return choose_num_helper(x + 1, y)\n            elseif is_between(x,\
    \ y) and is_in_range_or_not(x - 1) then\n                return choose_num_helper(x\
    \ - 1, y)\n            else\n                return -1\n            end\n    \
    \    end\n        return -1\n    end\n    return choose_num_helper(x, y)\nend",
  "    if x > y then\n        x, y = y, x\n    end\n    local max_num = x\n    for\
    \ i = y, 1, -1 do\n        if max_num % i == 0 then\n            max_num = max_num\
    \ / i\n        end\n    end\n    return max_num\nend", "   if x < y then\n   \
    \   local m = x\n      x = y\n      y = m\n   end\n   local n = 1\n   while x\
    \ <= y do\n      n = n * 2\n      x = x + 1\n   end\n   return n\nend", "   if\
    \ x < y then\n      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n\
    \      if x_even and y_even then\n         return x\n      elseif x_even then\n\
    \         return y\n      else\n         return x\n      end\n   else\n      local\
    \ x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even and y_even\
    \ then\n         return y\n      elseif x_even then\n         return x\n     \
    \ else\n         return y\n      end\n   end\nend", "   if x < y then\n      local\
    \ m = x\n      x = y\n      y = m\n   end\n   if x == y then\n      return x\n\
    \   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   else\n \
    \     return choose_num(3 * x + 1, y)\n   end\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(a, b)\n   \
    \     return a <= b and a >= b\n    end\n    local function is_even(n)\n     \
    \   return n % 2 == 0\n    end\n    local function is_between(a, b)\n        return\
    \ a <= b and a >= b\n    end\n    local function is_odd(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between(a, b)\n        return a <= b\
    \ and a >= b\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between(a, b)\n        return a <= b and a >=\
    \ b\n    end\n    local function is_even(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_between(a, b)\n        return a <= b and a >= b\n    end\n\
    \    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(a, b)\n        return a <= b and a >= b\n    end\n    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end\n    local function is_between(a,\
    \ b)\n        return a <= b and a >= b\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(a, b)\n   \
    \     return a <= b and a >= b\n    end\n    local function is_even(n)\n     \
    \   return n % 2 == 0\n    end\n    local function is_between(a, b)\n        return\
    \ a <= b and a >= b\n    end\n    local function is_odd(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between(a, b)\n        return a <= b\
    \ and a >= b\n    end\n    local function is_even(n)\n        return n % 2 ==\
    \ 0\n    end\n    local function is_between(a, b)\n        return a <= b and a\
    \ >= b\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n   \
    \ end\n    local function is_between(a, b)\n        return a <= b and a >= b\n\
    \    end\n    local function is_even(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_between(a, b)\n        return a <= b and a >= b\n    end\n\
    \    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(a, b)\n        return a <= b and a >= b\n    end\n    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end\n    local function is_between(a,\
    \ b)\n        return a <= b and a >= b\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(a, b)\n   \
    \     return a <= ", "   if x < y then\n      local m = x\n      x = y\n     \
    \ y = m\n   end\n   if x > y then\n      local m = x\n      x = y\n      y = m\n\
    \   end\n   if x == y then\n      return x\n   end\n   local m = math.floor(x/2)\n\
    \   local n = math.floor(x/y)\n   if m > n then\n      return m\n   else\n   \
    \   return n\n   end\nend", "    if x > y then\n        x, y = y, x\n    end\n\
    \    if x == y then\n        return x\n    end\n    if x % 2 == 0 then\n     \
    \   return choose_num(x / 2, y)\n    end\n    if y % 2 == 0 then\n        return\
    \ choose_num(x, y / 2)\n    end\n    return -1\nend", "   if x < y then\n    \
    \  x, y = y, x\n   end\n   local max_num = 0\n   for i = x, y + 1 do\n      if\
    \ i ~= 0 then\n         if max_num < i then\n            max_num = i\n       \
    \  end\n      end\n   end\n   return max_num\nend", "   if x < y then\n      local\
    \ m = x\n      x = y\n      y = m\n   end\n   if x < 2 then\n      return -1\n\
    \   end\n   if y < 2 then\n      return -1\n   end\n   local n = 1\n   while x\
    \ <= y do\n      n = n * 2\n      x = x + 1\n   end\n   return n\nend", "   if\
    \ x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x < 1\
    \ then\n      return -1\n   end\n   if y < 1 then\n      return -1\n   end\n \
    \  if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   end\n   if x % 2 == y % 2 then\n      return choose_num(x / 2, y\
    \ / 2)\n   end\n   if x % 2 == y % 2 then\n      return choose_num(x, y / 2)\n\
    \   end\n   if x % 2 == y % 2 then\n      return choose_num(x / 2, y / 2)\n  \
    \ end\n   return -1\nend", "  if x > y then\n    x, y = y, x\n  end\n  local even\
    \ = 1\n  local odd = 0\n  while even < y do\n    even = even + 2\n  end\n  while\
    \ odd < y do\n    odd = odd + 2\n  end\n  if even > y then\n    return -1\n  end\n\
    \  if odd > y then\n    return even\n  end\n  return even\nend", "   if x > y\
    \ then\n      x, y = y, x\n   end\n   if x == y then\n      return x\n   end\n\
    \   if x % 2 == 0 and y % 2 == 0 then\n      return choose_num(x / 2, y / 2)\n\
    \   else\n      return -1\n   end\nend", "    local function is_even(n)\n    \
    \    return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_in_range(n)\n        return is_even(n)\
    \ or is_odd(n)\n    end\n    local function is_in_range_or_not(n)\n        return\
    \ is_in_range(n) or is_between(n - 1, n)\n    end\n    local function is_in_range_or_not_and_not_even(n)\n\
    \        return is_in_range_or_not(n) and not is_even(n)\n    end\n    local function\
    \ is_in_range_or_not_and_not_odd(n)\n        return is_in_range_or_not(n) and\
    \ not is_odd(n)\n    end\n    local function is_in_range_or_not_and_not_between(a,\
    \ b)\n        return is_in_range_or_not(n) and not is_between(a, b)\n    end\n\
    \    local function is_in_range_or_not_and_not_in_range(n)\n        return is_in_range_or_not(n)\
    \ and not is_in_range(n)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not(n)\n    end\n\
    \    local function is_in_range_or_not_and_not_in_range_or_not_and_not_even(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_even(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_odd(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_odd(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_between(a,\
    \ b)\n        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_between(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_in_range(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_in_range_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_even(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_in_range_or_not_and_not_even(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_",
  "   if x < y then\n      local x_even = x % 2\n      local y_even = y % 2\n    \
    \  if x_even > y_even then\n         return choose_num(x + 1, y)\n      else\n\
    \         return choose_num(x, y + 1)\n      end\n   else\n      local x_even\
    \ = x % 2\n      local y_even = y % 2\n      if x_even < y_even then\n       \
    \  return choose_num(x + 1, y)\n      else\n         return choose_num(x, y +\
    \ 1)\n      end\n   end\nend", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end", "   if x < y then\n      x, y = y, x\n   end\n   if x\
    \ == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x\
    \ / 2, y)\n   else\n      return choose_num(3 * x + 1, y)\n   end\nend", "   if\
    \ x > y then\n      x, y = y, x\n   end\n   local even = 1\n   local odd = 0\n\
    \   for i = x, y + 1 do\n      if even % 2 == 0 then\n         even = even + 1\n\
    \      else\n         odd = odd + 1\n      end\n   end\n   return odd\nend", " \
    \   local function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(x,\
    \ lower, upper)\n        return lower <= x and x <= upper\n    end\n    local\
    \ function is_in_range(n)\n        return is_even(n) or is_odd(n)\n    end\n \
    \   local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n  \
    \  end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function ", "   if x > y then return choose_num(y, x) end\n\
    \   if x == y then return x end\n   if x % 2 == 0 then return x end\n   if y %\
    \ 2 == 0 then return y end\n   if x > y then return choose_num(x div 2, y) end\n\
    \   if y > x then return choose_num(x, y div 2) end\n   return -1\nend", "   if\
    \ x < y then\n      local x_even = math.floor(x/2)\n      local y_even = math.floor(y/2)\n\
    \      return choose_num(x_even, y_even)\n   else\n      return math.max(x, y)\n\
    \   end\nend", "   if x > y then\n      x, y = y, x\n   end\n   if x == y then\n\
    \      return x\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n      return choose_num(x\
    \ / 2, y / 2)\n   elseif x % 2 == 0 and y % 2 ~= 0 then\n      return choose_num(x\
    \ / 2, y)\n   elseif x % 2 ~= 0 and y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   elseif x % 2 ~= 0 and y % 2 ~= 0 then\n      return choose_num(x,\
    \ y)\n   else\n      return -1\n   end\nend", "  if x < y then\n    return -1\n\
    \  elseif x == y then\n    return x\n  else\n    return choose_num(x + 1, y)\n\
    \  end\nend", "   if x > y then\n      x, y = y, x\n   end\n   if x == y then\n\
    \      return x\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n      return choose_num(x\
    \ / 2, y / 2)\n   elseif x % 2 == 0 and y % 2 ~= 0 then\n      return choose_num(x\
    \ / 2, y)\n   elseif x % 2 ~= 0 and y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   elseif x % 2 ~= 0 and y % 2 ~= 0 then\n      return choose_num(x,\
    \ y)\n   end\nend", "  if x > y then\n    x, y = y, x\n  end\n  local max_num\
    \ = 1\n  local max_num_pos = 1\n  local max_num_neg = 1\n  for i = x, y + 1 do\n\
    \    if i % 2 == 0 then\n      if max_num > i then\n        max_num = i\n    \
    \    max_num_pos = max_num\n      else\n        max_num_neg = i\n      end\n \
    \   end\n  end\n  if max_num_neg > max_num then\n    max_num = max_num_neg\n \
    \ end\n  return max_num\nend", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end", "   if x < y then\n      local max_num = x\n      local\
    \ min_num = y\n   else\n      local max_num = y\n      local min_num = x\n   end\n\
    \   local i = 1\n   while i <= max_num do\n      if i % 2 == 0 then\n        \
    \ if min_num > i then\n            min_num = i\n         end\n      else\n   \
    \      if max_num < i then\n            max_num = i\n         end\n      end\n\
    \      i = i + 1\n   end\n   return min_num\nend", "    if x > y then return choose_num(y,\
    \ x) end\n    if x == y then return x end\n    local max_num = x\n    for i =\
    \ x + 1, y do\n        if i % 2 == 0 then\n            max_num = i\n        end\n\
    \    end\n    return max_num\nend", "    if x < y then\n        local x_even =\
    \ x % 2\n        local y_even = y % 2\n        if x_even > y_even then\n     \
    \       return x\n        else\n            return y\n        end\n    else\n\
    \        local x_even = x % 2\n        local y_even = y % 2\n        if x_even\
    \ < y_even then\n            return y\n        else\n            return x\n  \
    \      end\n    end\nend", "    local function is_even(n)\n        return n %\
    \ 2 == 0\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n \
    \   end\n    local function is_between(x, y)\n        return x >= y and x <= y\n\
    \    end\n    local function is_in_range(n)\n        return is_even(n) or is_odd(n)\n\
    \    end\n    local function is_in_range_or_not(n)\n        return is_in_range(n)\
    \ or is_between(n, n + 1)\n    end\n    local function is_in_range_or_not_and_is_even(n)\n\
    \        return is_in_range_or_not(n) and is_even(n)\n    end\n    local function\
    \ is_in_range_or_not_and_is_odd(n)\n        return is_in_range_or_not(n) and is_odd(n)\n\
    \    end\n    local function is_in_range_or_not_and_is_between(x, y)\n       \
    \ return is_in_range_or_not(n) and is_between(x, y)\n    end\n    local function\
    \ is_in_range_or_not_and_is_in_range(x, y)\n        return is_in_range_or_not(n)\
    \ and is_in_range(x, y)\n    end\n    local function is_in_range_or_not_and_is_in_range_or_not(x,\
    \ y)\n        return is_in_range_or_not(n) and is_in_range_or_not(x, y)\n    end\n\
    \    local function is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \        return is_in_range_or_not_and_is_even(n) and is_in_range(n)\n    end\n\
    \    local function is_in_range_or_not_and_is_in_range_or_not_and_is_odd(n)\n\
    \        return is_in_range_or_not_and_is_odd(n) and is_in_range(n)\n    end\n\
    \    local function is_in_range_or_not_and_is_in_range_or_not_and_is_between(x,\
    \ y)\n        return is_in_range_or_not_and_is_between(x, y) and is_in_range(x,\
    \ y)\n    end\n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range(x,\
    \ y)\n        return is_in_range_or_not_and_is_in_range(x, y) and is_in_range(x,\
    \ y)\n    end\n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not(x,\
    \ y)\n        return is_in_range_or_not_and_is_in_range_or_not(x, y) and is_in_range_or_not(x,\
    \ y)\n    end\n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not_and_is_even(n)\n\
    \        return is_in_range_or_not_and_is_in_range_or_not_and_is_even(n) and is_in_range(n)\n\
    \    end\n    local function is_in_range_or_not_and_is_in_range_or_not_and_is_in_range_or_not_and_is_odd(n)\n\
    \        return is_in_range_or_not_", "   if x < y then\n      local x_even =\
    \ x % 2\n      local y_even = y % 2\n      if x_even > y_even then\n         return\
    \ choose_num(x + 1, y)\n      else\n         return choose_num(x, y + 1)\n   \
    \   end\n   else\n      local x_even = x % 2\n      local y_even = y % 2\n   \
    \   if x_even < y_even then\n         return choose_num(x - 1, y)\n      else\n\
    \         return choose_num(x, y)\n      end\n   end\nend", "   if x > y then\n\
    \      x, y = y, x\n   end\n   if x < 1 then\n      return -1\n   end\n   if y\
    \ < 1 then\n      return -1\n   end\n   if x == y then\n      return x\n   end\n\
    \   if x % 2 == 0 and y % 2 == 0 then\n      return choose_num(x / 2, y / 2)\n\
    \   else\n      return -1\n   end\nend", "    if x < y then\n        x, y = y,\
    \ x\n    end\n    local max_num = -1\n    for i = x, y + 1 do\n        if i %\
    \ 2 == 0 then\n            if max_num < i then\n                max_num = i\n\
    \            end\n        end\n    end\n    return max_num\nend", "    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_in_range(n)\n \
    \       return is_even(n) or is_odd(n)\n    end\n    local function is_in_range_or_none(x,\
    \ y)\n        if is_between(x, y) or is_in_range(x)\n            return n\n  \
    \      end\n        return nil\n    end\n    if is_between(x, y) or is_in_range(x)\n\
    \        return n\n    end\n    if is_in_range_or_none(x, y)\n        return n\n\
    \    end\n    return -1\nend", "  if x < y then\n    x, y = y, x\n  end\n  local\
    \ max_num = x\n  local min_num = y\n  while max_num - min_num > 1 do\n    local\
    \ num = max_num + min_num\n    if num % 2 == 0 then\n      max_num = num\n   \
    \ else\n      min_num = num\n    end\n  end\n  return max_num\nend", "    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_between(lower, upper)\n        return lower <= upper and lower % 2 == 0\n\
    \    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n \
    \   local function is_in_range(lower, upper)\n        return lower <= upper and\
    \ lower % 2 ~= 0\n    end\n    local function is_in_range_or_even(n, lower, upper)\n\
    \        return is_in_range(lower, upper) or is_even(n)\n    end\n    local function\
    \ is_in_range_or_odd(n, lower, upper)\n        return is_in_range(lower, upper)\
    \ or is_odd(n)\n    end\n    local function is_in_range_or_odd_or_even(n, lower,\
    \ upper)\n        return is_in_range(lower, upper) or is_odd(n) or is_even(n)\n\
    \    end\n    local function is_in_range_or_odd_or_even(n, lower, upper)\n   \
    \     return is_in_range(lower, upper) or is_odd(n) or is_even(n)\n    end\n \
    \   local function is_in_range_or_odd_or_even(n, lower, upper)\n        return\
    \ is_in_range(lower, upper) or is_odd(n) or is_even(n)\n    end\n    local function\
    \ is_in_range_or_odd_or_even(n, lower, upper)\n        return is_in_range(lower,\
    \ upper) or is_odd(n) or is_even(n)\n    end\n    local function is_in_range_or_odd_or_even(n,\
    \ lower, upper)\n        return is_in_range(lower, upper) or is_odd(n) or is_even(n)\n\
    \    end\n    local function is_in_range_or_odd_or_even(n, lower, upper)\n   \
    \     return is_in_range(lower, upper) or is_odd(n) or is_even(n)\n    end\n \
    \   local function is_in_range_or_odd_or_even(n, lower, upper)\n        return\
    \ is_in_range(lower, upper) or is_odd(n) or is_even(n)\n    end\n    local function\
    \ is_in_range_or_odd_or_even(n, lower, upper)\n        return is_in_range(lower,\
    \ upper) or is_odd(n) or is_even(n)\n    end\n    local function is_in_range_or_odd_or_even(n,\
    \ lower, upper)\n        return is_in_range(lower, upper) or is_odd(n) or is_even(n)\n\
    \    end\n    local function is_in_range_or_odd_or_even(n, lower, upper)\n   \
    \     return is_in_range(lower, upper) or is_odd(n) or is_even(n)\n    end\n \
    \   local function is_in_range_or_odd_or_even(n, lower, upper)\n", "  if x > y\
    \ then\n    x, y = y, x\n  end\n  local function is_even(n)\n    return n % 2\
    \ == 0\n  end\n  local function is_odd(n)\n    return n % 2 == 1\n  end\n  local\
    \ function is_between(x, y)\n    return x >= y and x <= y\n  end\n  local function\
    \ is_in_range(n)\n    return is_even(n) or is_odd(n)\n  end\n  local function\
    \ is_in_range_or_not(n)\n    return is_in_range(n) or is_between(n, n + 2)\n \
    \ end\n  local function is_in_range_or_not_or_not(n)\n    return is_in_range_or_not(n)\
    \ or is_between(n, n + 3)\n  end\n  local function is_in_range_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not(n) or is_between(n, n + 4)\n  end\n  local\
    \ function is_in_range_or_not_or_not_or_not_or_not(n)\n    return is_in_range_or_not_or_not_or_not(n)\
    \ or is_between(n, n + 5)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not(n) or is_between(n, n + 6)\n\
    \  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 7)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 8)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 9)\n  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not(n) or is_between(n, n + 10)\n\
    \  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_or_not_or_not(n) or is_between(n, n + 11)\n\
    \  end\n  local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    return is_in_range_or_not_or_not_", "    local function is_even(n)\n    \
    \    return n % 2 == 0\n    end\n    local function is_between(a, b)\n       \
    \ return a <= n and n <= b\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between2(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd2(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between3(a, b)\n        return a <= n\
    \ and n <= b\n    end\n    local function is_odd3(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between4(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd4(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between5(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd5(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between6(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd6(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between7(a, b)\n        return a <= n and n <= b\n    end\n    local\
    \ function is_odd7(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between8(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd8(n)\n        return n % 2 == 1\n    end\n    local function is_between9(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd9(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between10(a, b)\n \
    \       return a <= n and n <= b\n    end\n    local function is_odd10(n)\n  \
    \      return n % 2 == 1\n    end\n    local function is_between11(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd11(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between12(a, b)\n     \
    \   return a <= n and n <= b\n    end\n    local function is_odd12(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between13(a, b)\n       \
    \ return a <= n and n <= b\n    end\n    local function is_odd13(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between14(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd14(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between15(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_", "  if x > y then\n    x, y =\
    \ y, x\n  end\n  local max_num = 0\n  local max_num_pos = nil\n  for i = x, y\
    \ do\n    if i % 2 == 0 then\n      if max_num < i then\n        max_num = i\n\
    \        max_num_pos = i\n      end\n    end\n  end\n  return max_num_pos if max_num\
    \ > 0 end\nend", "    if x < y then\n        local tmp = x\n        x = y\n  \
    \      y = tmp\n    end\n    local ans = -1\n    for i = x, y + 1 do\n       \
    \ if i ~= 0 then\n            if i ~= ans then\n                ans = i\n    \
    \        end\n        end\n    end\n    return ans\nend", "   if x < y then\n\
    \      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even\
    \ and y_even then\n         return x\n      else\n         return y\n      end\n\
    \   else\n      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n \
    \     if x_even and not y_even then\n         return x\n      else\n         return\
    \ y\n      end\n   end\nend", "   if x > y then\n      x, y = y, x\n   end\n \
    \  local max_num = 0\n   for i = x, y + 1 do\n      if max_num < i then\n    \
    \     max_num = i\n      end\n   end\n   return max_num\nend", "   if x < y then\n\
    \      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even\
    \ and y_even then\n         return x\n      else\n         return y\n      end\n\
    \   else\n      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n \
    \     if x_even and not y_even then\n         return x\n      else\n         return\
    \ y\n      end\n   end\nend", "  if x > y then\n    x, y = y, x\n  end\n  local\
    \ num = x\n  while num < y do\n    num = num + 2\n  end\n  return num\nend", " \
    \  if x > y then\n      x, y = y, x\n   end\n   if x < 1 then\n      x = 1\n \
    \  end\n   if y < 1 then\n      y = 1\n   end\n   if x == y then\n      return\
    \ x\n   end\n   if x % 2 == 0 and y % 2 == 0 then\n      return choose_num(x /\
    \ 2, y / 2)\n   elseif x % 2 == 0 and y % 2 == 1 then\n      return choose_num(x\
    \ / 2, y)\n   elseif x % 2 == 1 and y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   elseif x % 2 == 1 and y % 2 == 1 then\n      return choose_num(x,\
    \ y)\n   else\n      return -1\n   end\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between2(x, y)\n        return\
    \ x >= y and x <= y\n    end\n    local function is_odd2(n)\n        return n\
    \ % 2 == 1\n    end\n    local function is_between3(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_odd3(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between4(x, y)\n        return x >= y and\
    \ x <= y\n    end\n    local function is_odd4(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between5(x, y)\n        return x >= y and x <=\
    \ y\n    end\n    local function is_odd5(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between6(x, y)\n        return x >= y and x <= y\n    end\n\
    \    local function is_odd6(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between7(x, y)\n        return x >= y and x <= y\n    end\n    local\
    \ function is_odd7(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between8(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_odd8(n)\n        return n % 2 == 1\n    end\n    local function is_between9(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_odd9(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between10(x, y)\n \
    \       return x >= y and x <= y\n    end\n    local function is_odd10(n)\n  \
    \      return n % 2 == 1\n    end\n    local function is_between11(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_odd11(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between12(x, y)\n     \
    \   return x >= y and x <= y\n    end\n    local function is_odd12(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between13(x, y)\n       \
    \ return x >= y and x <= y\n    end\n    local function is_odd13(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between14(x, y)\n        return x\
    \ >= y and x <= y\n    end\n    local function is_odd14(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between15(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_odd15(n)\n        return n % 2\
    \ == 1\n    end\n    local function is_between16(x, y)\n        return x >= y\
    \ and x <= y\n    end\n    local function is_odd16(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function ", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end", "    if x > y then\n        x, y = y, x\n    end\n   \
    \ if x == y then\n        return x\n    end\n    if x % 2 == 0 then\n        return\
    \ choose_num(x / 2, y)\n    end\n    if y % 2 == 0 then\n        return choose_num(x,\
    \ y / 2)\n    end\n    if x > y then\n        return choose_num(x / 2, y / 2)\n\
    \    end\n    return choose_num(x / 2, y)\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between2(x, y)\n        return\
    \ x >= y and x <= y\n    end\n    local function is_odd2(n)\n        return n\
    \ % 2 == 1\n    end\n    local function is_between3(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_odd3(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between4(x, y)\n        return x >= y and\
    \ x <= y\n    end\n    local function is_odd4(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between5(x, y)\n        return x >= y and x <=\
    \ y\n    end\n    local function is_odd5(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between6(x, y)\n        return x >= y and x <= y\n    end\n\
    \    local function is_odd6(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between7(x, y)\n        return x >= y and x <= y\n    end\n    local\
    \ function is_odd7(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between8(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_odd8(n)\n        return n % 2 == 1\n    end\n    local function is_between9(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_odd9(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between10(x, y)\n \
    \       return x >= y and x <= y\n    end\n    local function is_odd10(n)\n  \
    \      return n % 2 == 1\n    end\n    local function is_between11(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_odd11(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between12(x, y)\n     \
    \   return x >= y and x <= y\n    end\n    local function is_odd12(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between13(x, y)\n       \
    \ return x >= y and x <= y\n    end\n    local function is_odd13(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between14(x, y)\n        return x\
    \ >= y and x <= y\n    end\n    local function is_odd14(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between15(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_odd15(n)\n        return n % 2\
    \ == 1\n    end\n    local function is_between16(x, y)\n        return x >= y\
    \ and x <= y\n    end\n    local function is_odd16(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function ", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end", "   if x < y then\n      return choose_num(y, x)\n   end\n\
    \   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   end\n   if y % 2 == 0 then\n      return choose_num(x,\
    \ y / 2)\n   end\n   if x > y then\n      return choose_num(y / 2, x)\n   end\n\
    \   if x < y then\n      return choose_num(y / 2, x)\n   end\n   return -1\nend",
  "   if x < y then\n      local x_even = x % 2\n      local y_even = y % 2\n    \
    \  local x_odd = x % 2 + 1\n      local y_odd = y % 2 + 1\n      local x_even\
    \ = x_even + y_even\n      local y_even = y_even + x_even\n      local x_odd =\
    \ x_odd + y_odd\n      local y_odd = y_odd + x_odd\n      return choose_num(x_even,\
    \ y_even)\n   else\n      return y\n   end\nend", "   if x < y then\n      local\
    \ z = x\n      x = y\n      y = z\n   end\n   local ans = 1\n   for i = x, y +\
    \ 1 do\n      ans = ans * i\n   end\n   return ans\nend", "    if x > y then\n\
    \        x, y = y, x\n    end\n    local max_num = x\n    local max_num_pos =\
    \ 1\n    for i = 1, y do\n        if max_num % 2 == 0 then\n            max_num\
    \ = max_num / 2\n        else\n            max_num = max_num * 3 + 1\n       \
    \ end\n        if max_num > x and max_num > max_num_pos then\n            max_num\
    \ = max_num_pos\n        end\n        max_num_pos = max_num\n    end\n    return\
    \ max_num\nend", "  if x > y then\n    x, y = y, x\n  end\n  local z = 1\n  while\
    \ z <= y do\n    z = z * 2 + 1\n  end\n  while z >= x do\n    z = z / 2 + 1\n\
    \  end\n  return z\nend", "   if x < y then\n      local m = x\n      x = y\n\
    \      y = m\n   end\n   local result = x\n   for i = y, 1, -1 do\n      result\
    \ = result * i\n      if result > x then\n         return result\n      end\n\
    \   end\n   return -1\nend", "   if x < y then\n      local x_even = x % 2\n \
    \     local y_even = y % 2\n      if x_even > y_even then\n         return choose_num(x\
    \ + 1, y)\n      else\n         return choose_num(x, y + 1)\n      end\n   else\n\
    \      local x_even = x % 2\n      local y_even = y % 2\n      if x_even < y_even\
    \ then\n         return choose_num(x + 1, y)\n      else\n         return choose_num(x,\
    \ y + 1)\n      end\n   end\nend", "   if x > y then\n      x, y = y, x\n   end\n\
    \   if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   else\n      return choose_num(3 * x + 1, y)\n   end\n\
    end", "    if x > y then\n        x, y = y, x\n    end\n    local max_num = 0\n\
    \    for i = x, y + 1 do\n        if max_num < i then\n            max_num = i\n\
    \        end\n    end\n    return max_num\nend", "    if x > y then\n        x,\
    \ y = y, x\n    end\n    if x == y then\n        return x\n    end\n    if x %\
    \ 2 == 0 then\n        return choose_num(x / 2, y)\n    end\n    if y % 2 == 0\
    \ then\n        return choose_num(x, y / 2)\n    end\n    return -1\nend", " \
    \  if x < y then\n      local x_even = x % 2 == 0\n      local y_even = y % 2\
    \ == 0\n      local x_odd = x % 2 ~= 0\n      local y_odd = y % 2 ~= 0\n     \
    \ if x_even and y_even then\n         return x\n      elseif x_even and y_odd\
    \ then\n         return y\n      elseif x_odd and y_even then\n         return\
    \ x\n      elseif x_odd and y_odd then\n         return y\n      else\n      \
    \   return -1\n      end\n   else\n      local x_even = x % 2 == 0\n      local\
    \ y_even = y % 2 == 0\n      local x_odd = x % 2 ~= 0\n      local y_odd = y %\
    \ 2 ~= 0\n      if x_even and y_even then\n         return y\n      elseif x_even\
    \ and y_odd then\n         return x\n      elseif x_odd and y_even then\n    \
    \     return x\n      elseif x_odd and y_odd then\n         return y\n      else\n\
    \         return -1\n      end\n   end\nend", "   if x > y then\n      x, y =\
    \ y, x\n   end\n   local max_num = 0\n   for i = x, y + 1 do\n      if i ~= 0\
    \ then\n         if max_num < i then\n            max_num = i\n         end\n\
    \      end\n   end\n   return max_num\nend", "   if x < y then\n      local x_even\
    \ = x % 2\n      local y_even = y % 2\n      if x_even > y_even then\n       \
    \  return choose_num(x + 1, y)\n      else\n         return choose_num(x, y +\
    \ 1)\n      end\n   else\n      local x_even = x % 2\n      local y_even = y %\
    \ 2\n      if x_even < y_even then\n         return choose_num(x + 1, y)\n   \
    \   else\n         return choose_num(x, y + 1)\n      end\n   end\nend", "   if\
    \ x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n     \
    \ return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n\
    \   else\n      return choose_num(3 * x + 1, y)\n   end\nend", "   if x < y then\n\
    \      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even\
    \ and y_even then\n         return x\n      elseif x_even then\n         return\
    \ y\n      else\n         return x\n      end\n   else\n      local x_even = x\
    \ % 2 == 0\n      local y_even = y % 2 == 0\n      if y_even and x_even then\n\
    \         return y\n      elseif y_even then\n         return x\n      else\n\
    \         return -1\n      end\n   end\nend", "   if x < y then\n      local x_even\
    \ = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even and y_even then\n\
    \         return x\n      elseif x_even then\n         return y\n      elseif\
    \ y_even then\n         return x\n      else\n         return -1\n      end\n\
    \   else\n      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n \
    \     if x_even and y_even then\n         return y\n      elseif x_even then\n\
    \         return x\n      elseif y_even then\n         return y\n      else\n\
    \         return -1\n      end\n   end\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end", "   if x < y then\n      local z = x\n \
    \     x = y\n      y = z\n   end\n   local ans = -1\n   for i = x, y + 1 do\n\
    \      local k = i\n      while k % 2 == 0 do\n         k = k >> 1\n      end\n\
    \      if k > ans then\n         ans = k\n      end\n   end\n   return ans\nend",
  "    local function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n", "    local function is_even(n)\n    \
    \    return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_in_range(n)\n        return is_even(n)\
    \ or is_odd(n)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n", "  if x > y then\n    x, y = y, x\n  end\n  local num = x\n  while\
    \ num < y do\n    num = num + 2\n  end\n  return num\nend", "   if x < y then\n\
    \      return choose_num(y, x)\n   end\n   if x == y then\n      return x\n  \
    \ end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n   if\
    \ y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   return -1\nend",
  "   if x < y then\n      local x_even = x % 2\n      local x_odd = x % 2 + 1\n \
    \     local y_even = y % 2\n      local y_odd = y % 2 + 1\n      if x_even > y_even\
    \ then\n         return choose_num(x_even, y_even)\n      else\n         return\
    \ choose_num(x_odd, y_odd)\n      end\n   else\n      return -1\n   end\nend",
  "    local function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_between(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between2(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd2(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between3(a, b)\n  \
    \      return a <= n and n <= b\n    end\n    local function is_odd3(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between4(a, b)\n      \
    \  return a <= n and n <= b\n    end\n    local function is_odd4(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between5(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd5(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between6(a, b)\n        return a <= n\
    \ and n <= b\n    end\n    local function is_odd6(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between7(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd7(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between8(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd8(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between9(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd9(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between10(a, b)\n        return a <= n and n <= b\n    end\n   \
    \ local function is_odd10(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between11(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd11(n)\n        return n % 2 == 1\n    end\n    local function is_between12(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd12(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between13(a, b)\n \
    \       return a <= n and n <= b\n    end\n    local function is_odd13(n)\n  \
    \      return n % 2 == 1\n    end\n    local function is_between14(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd14(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between15(a, b)\n     \
    \   return a <= n and n <= b\n    end\n    local function is_", "    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_in_range(n)\n \
    \       return is_even(n) or is_odd(n)\n    end\n    local function choose_even(x,\
    \ y)\n        if is_between(x, y) return x end\n        if is_in_range(x) and\
    \ is_in_range(y) return x end\n        if is_in_range(x) and is_between(y, y)\
    \ return x end\n        if is_in_range(y) and is_between(x, x) return y end\n\
    \        if is_in_range(y) and is_in_range(x) return y end\n        return -1\n\
    \    end\n    local function choose_odd(x, y)\n        if is_between(x, y) return\
    \ x end\n        if is_in_range(x) and is_in_range(y) return x end\n        if\
    \ is_in_range(x) and is_between(y, y) return x end\n        if is_in_range(y)\
    \ and is_between(x, x) return y end\n        if is_in_range(y) and is_in_range(x)\
    \ return y end\n        return -1\n    end\n    local function choose_num(x, y)\n\
    \        if is_between(x, y) return x end\n        if is_in_range(x) and is_in_range(y)\
    \ return x end\n        if is_in_range(x) and is_between(y, y) return x end\n\
    \        if is_in_range(y) and is_between(x, x) return y end\n        if is_in_range(y)\
    \ and is_in_range(x) return y end\n        return -1\n    end\n    return choose_num(x,\
    \ y)\nend", "    local function is_even(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_odd(n)\n        return n % 2 ~= 0\n    end\n    local function\
    \ is_between(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_in_range(n)\n        return is_even(n) and is_between(n - 1, n)\n    end\n\
    \    local function is_in_range_or_not(n)\n        return is_in_range(n) or is_odd(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_even(n)\n        return\
    \ is_in_range_or_not(n) and is_even(n)\n    end\n    local function is_in_range_or_not_and_not_odd(n)\n\
    \        return is_in_range_or_not(n) and is_odd(n)\n    end\n    local function\
    \ is_in_range_or_not_and_not_between(x, y)\n        return is_in_range_or_not(n)\
    \ and is_between(x, y)\n    end\n    local function is_in_range_or_not_and_not_in_range(x,\
    \ y)\n        return is_in_range_or_not(n) and is_in_range(x, y)\n    end\n  \
    \  local function is_in_range_or_not_and_not_in_range_or_not(x, y)\n        return\
    \ is_in_range_or_not(n) and is_in_range_or_not(x, y)\n    end\n    local function\
    \ is_in_range_or_not_and_not_in_range_or_not_and_not_even(x, y)\n        return\
    \ is_in_range_or_not(n) and is_in_range_or_not_and_not_even(x, y)\n    end\n \
    \   local function is_in_range_or_not_and_not_in_range_or_not_and_not_odd(x, y)\n\
    \        return is_in_range_or_not(n) and is_in_range_or_not_and_not_odd(x, y)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_between(x,\
    \ y)\n        return is_in_range_or_not(n) and is_in_range_or_not_and_not_between(x,\
    \ y)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range(x,\
    \ y)\n        return is_in_range_or_not(n) and is_in_range_or_not_and_not_in_range(x,\
    \ y)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not(x,\
    \ y)\n        return is_in_range_or_not(n) and is_in_range_or_not_and_not_in_range_or_not(x,\
    \ y)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_even(x,\
    \ y)\n        return is_in_range_or_not(n) and is_in_range_or_not_and_not_in_range_or_not_and_not_even(x,\
    \ y)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_",
  "   if x > y then\n      x, y = y, x\n   end\n   local num = x\n   while num < y\
    \ do\n      num = num * 2 + 1\n   end\n   return num\nend", "   if x > y then\n\
    \      x, y = y, x\n   end\n   local num = x\n   while num < y do\n      if num\
    \ % 2 == 0 then\n         return num\n      end\n      num = num + 1\n   end\n\
    \   return -1\nend", "    if x > y then\n        x, y = y, x\n    end\n    local\
    \ i = 1\n    while i <= y do\n        if x % 2 == 0 then\n            return x\n\
    \        end\n        x = x + 1\n    end\n    return -1\nend", "   if x > y then\n\
    \      x, y = y, x\n   end\n   if x == y then\n      return x\n   end\n   if x\
    \ % 2 == 0 and y % 2 == 0 then\n      return choose_num(x / 2, y / 2)\n   elseif\
    \ x % 2 == 0 and y % 2 ~= 0 then\n      return choose_num(x / 2, y)\n   elseif\
    \ x % 2 ~= 0 and y % 2 == 0 then\n      return choose_num(x, y / 2)\n   elseif\
    \ x % 2 ~= 0 and y % 2 ~= 0 then\n      return choose_num(x, y)\n   else\n   \
    \   return -1\n   end\nend", "  if x > y then\n    x, y = y, x\n  end\n  local\
    \ max_num = 1\n  local max_num_pos = 1\n  local max_num_neg = 1\n  for i = x,\
    \ y + 1 do\n    if i % 2 == 0 then\n      if max_num > i then\n        max_num\
    \ = i\n        max_num_pos = max_num_pos + 1\n      else\n        max_num_neg\
    \ = max_num_neg + 1\n      end\n    end\n  end\n  if max_num == 0 then\n    return\
    \ -1\n  end\n  if max_num_pos > max_num_neg then\n    return max_num\n  else\n\
    \    return max_num - 1\n  end\nend", "   if x > y then\n      x, y = y, x\n \
    \  end\n   local even = 1\n   local odd = 0\n   while even < y do\n      even\
    \ = even + 2\n   end\n   while odd < x do\n      odd = odd + 2\n   end\n   return\
    \ even\nend", "    local function is_even(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_in_range(n)\n        return is_even(n) or is_odd(n)\n    end\n    local function\
    \ is_in_range_or_not(n)\n        return is_in_range(n) or is_between(n - 1, n)\n\
    \    end\n    local function is_in_range_or_not_and_not_even(n)\n        return\
    \ is_in_range_or_not(n) and not is_even(n)\n    end\n    local function is_in_range_or_not_and_not_odd(n)\n\
    \        return is_in_range_or_not(n) and not is_odd(n)\n    end\n    local function\
    \ is_in_range_or_not_and_not_between(a, b)\n        return is_in_range_or_not(n)\
    \ and not is_between(a, b)\n    end\n    local function is_in_range_or_not_and_not_in_range(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range(n)\n    end\n    local\
    \ function is_in_range_or_not_and_not_in_range_or_not(n)\n        return is_in_range_or_not(n)\
    \ and not is_in_range_or_not(n)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_even(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_even(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_odd(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_odd(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_between(a,\
    \ b)\n        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_between(a,\
    \ b)\n    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_in_range(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_in_range_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_not_and_not_even(n)\n\
    \        return is_in_range_or_not(n) and not is_in_range_or_not_and_not_in_range_or_not_and_not_even(n)\n\
    \    end\n    local function is_in_range_or_not_and_not_in_range_or_not_and_not_in_range_or_",
  "   if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ < 1 then x = 1 end\n   if y < 1 then y = 1 end\n   if x == y then return x end\n\
    \   if x % 2 == 0 then return x end\n   if y % 2 == 0 then return y end\n   if\
    \ x > y then\n      local m = y\n      x = y\n      y = m\n   end\n   if x > 1\
    \ then x = 1 end\n   if y > 1 then y = 1 end\n   local i = 1\n   while i <= x\
    \ do\n      if x % i == 0 then\n         local m = i\n         x = i\n       \
    \  y = m\n      end\n      i = i + 1\n   end\n   if x > y then\n      local m\
    \ = y\n      x = y\n      y = m\n   end\n   if x > 1 then x = 1 end\n   if y >\
    \ 1 then y = 1 end\n   if x == y then return x end\n   if x % 2 == 0 then return\
    \ x end\n   if y % 2 == 0 then return y end\n   if x > y then\n      local m =\
    \ y\n      x = y\n      y = m\n   end\n   if x > 1 then x = 1 end\n   if y > 1\
    \ then y = 1 end\n   if x == y then return x end\n   if x % 2 == 0 then return\
    \ x end\n   if y % 2 == 0 then return y end\n   if x > y then\n      local m =\
    \ y\n      x = y\n      y = m\n   end\n   if x > 1 then x = 1 end\n   if y > 1\
    \ then y = 1 end\n   if x == y then return x end\n   if x % 2 == 0 then return\
    \ x end\n   if y % 2 == 0 then return y end\n   if x > y then\n      local m =\
    \ y\n      x = y\n      y = m\n   end\n   if x > 1 then x = 1 end\n   if y > 1\
    \ then y = 1 end\n   if x == y then return x end\n   if x % 2 == 0 then return\
    \ x end\n   if y % 2 == 0 then return y end\n   if x > y then\n      local m =\
    \ y\n      x = y\n      y = m\n   end\n   if x > 1 then x = 1 end\n   if y > 1\
    \ then y = 1 end\n   if x == y then return x end\n   if x % 2 == 0 then return\
    \ x end\n   if y % 2 == 0 then return y end", "   if x < y then\n      local x_even\
    \ = x % 2\n      local y_even = y % 2\n      if x_even > y_even then\n       \
    \  return choose_num(x - 1, y)\n      else\n         return choose_num(x, y -\
    \ 1)\n      end\n   else\n      return -1\n   end\nend", "   if x < y then\n \
    \     local max_num = x\n      local min_num = y\n   else\n      local max_num\
    \ = y\n      local min_num = x\n   end\n   local i = 1\n   while i <= max_num\
    \ do\n      if i % 2 == 0 then\n         return i\n      else\n         i = i\
    \ + 1\n      end\n   end\n   return -1\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function choose_even(x, y)\n        if is_between(x,\
    \ y) and is_even(y) then\n            return x\n        end\n        if is_between(y,\
    \ x) and is_even(x) then\n            return y\n        end\n        return -1\n\
    \    end\n    local function choose_odd(x, y)\n        if is_between(x, y) and\
    \ is_odd(y) then\n            return x\n        end\n        if is_between(y,\
    \ x) and is_odd(x) then\n            return y\n        end\n        return -1\n\
    \    end\n    local function choose_num(x, y)\n        if is_between(x, y) and\
    \ is_even(y) then\n            return x\n        end\n        if is_between(y,\
    \ x) and is_even(x) then\n            return y\n        end\n        if is_between(x,\
    \ y) and is_odd(y) then\n            return x\n        end\n        if is_between(y,\
    \ x) and is_odd(x) then\n            return y\n        end\n        return -1\n\
    \    end\n    return choose_num(x, y)\nend", "   if x > y then\n      x, y = y,\
    \ x\n   end\n   local function is_even(n)\n      return n % 2 == 0\n   end\n \
    \  local function is_odd(n)\n      return n % 2 == 1\n   end\n   local function\
    \ is_between(n1, n2)\n      return n1 <= n2 and n2 <= n1\n   end\n   if is_even(x)\
    \ and is_even(y) then\n      return x\n   elseif is_odd(x) and is_odd(y) then\n\
    \      return y\n   elseif is_between(x, y) and is_even(y) then\n      return\
    \ x\n   elseif is_between(x, y) and is_odd(y) then\n      return y\n   else\n\
    \      return -1\n   end\nend", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end\n    local function is_between(l, h)\n        return l <=\
    \ n and n <= h\n    end\n    local function is_odd(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between(l, h)\n        return l <= n and n\
    \ <= h\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n   \
    \ end\n    local function is_between(l, h)\n        return l <= n and n <= h\n\
    \    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n \
    \   local function is_between(l, h)\n        return l <= n and n <= h\n    end\n\
    \    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(l, h)\n        return l <= n and n <= h\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(l,\
    \ h)\n        return l <= n and n <= h\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(l, h)\n   \
    \     return l <= n and n <= h\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between(l, h)\n        return\
    \ l <= n and n <= h\n    end\n    local function is_odd(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between(l, h)\n        return l <= n\
    \ and n <= h\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between(l, h)\n        return l <= n and n <=\
    \ h\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between(l, h)\n        return l <= n and n <= h\n    end\n\
    \    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(l, h)\n        return l <= n and n <= h\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(l,\
    \ h)\n        return l <= n and n <= h\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(l, h)\n   \
    \     return l <= n and n <= h\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between(l, h)", "    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range_or_not(n)\n\
    \        return is_in_range(n) or is_between(x, y)\n    end\n    local function\
    \ is_in_range_or_not_or_not(n)\n        return is_in_range_or_not(n) or is_between(x,\
    \ y)\n    end\n    local function is_in_range_or_not_or_not_or_not(n)\n      \
    \  return is_in_range_or_not_or_not(n) or is_between(x, y)\n    end\n    local\
    \ function is_in_range_or_not_or_not_or_not_or_not(n)\n        return is_in_range_or_not_or_not_or_not(n)\
    \ or is_between(x, y)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not(n) or is_between(x, y)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(x,\
    \ y)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(x,\
    \ y)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\
    \ or is_between(x, y)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\
    \ or is_between(x, y)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\
    \ or is_between(x, y)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\
    \ or is_between(x, y)\n    end\n    local ", "   if x < y then\n      local m\
    \ = x\n      x = y\n      y = m\n   end\n   if x == y then\n      return x\n \
    \  end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   end\n   if\
    \ y % 2 == 0 then\n      return choose_num(x, y / 2)\n   end\n   if x > y then\n\
    \      return choose_num(x + 1, y)\n   end\n   if y > x then\n      return choose_num(x,\
    \ y + 1)\n   end\n   return -1\nend", "   if x < y then\n      local x_even =\
    \ math.floor(x/2)\n      local y_even = math.floor(y/2)\n      return choose_num(x_even,\
    \ y_even)\n   else\n      local x_even = math.floor(x/2)\n      local y_even =\
    \ math.floor(y/2)\n      local x_odd = math.floor(x/2 + 1)\n      local y_odd\
    \ = math.floor(y/2 + 1)\n      return choose_num(x_even, y_even) + choose_num(x_odd,\
    \ y_odd)\n   end\nend", "   if x < y then\n      local t = x\n      x = y\n  \
    \    y = t\n   end\n   if x < 2 then\n      return -1\n   end\n   if y < 2 then\n\
    \      return -1\n   end\n   local max_num = 2\n   for i = 2, y do\n      if x\
    \ % i == 0 then\n         max_num = i\n         break\n      end\n   end\n   return\
    \ max_num\nend", "   if x > y then return choose_num(y, x) end\n   if x == y then\
    \ return x end\n   if x % 2 == 0 then\n      if y % 2 == 0 then return x end\n\
    \      if y % 2 == 1 then return y end\n   end\n   if y % 2 == 0 then\n      if\
    \ x % 2 == 0 then return y end\n      if x % 2 == 1 then return x end\n   end\n\
    \   if x % 2 == 1 then\n      if y % 2 == 0 then return y end\n      if y % 2\
    \ == 1 then return x end\n   end\n   return -1\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_in_range(n)\n        return is_even(n)\
    \ or is_odd(n)\n    end\n    local function is_in_range_or_not(n)\n        return\
    \ is_in_range(n) or is_between(n, n + 2)\n    end\n    local function is_in_range_or_not_or_not(n)\n\
    \        return is_in_range_or_not(n) or is_between(n, n + 4)\n    end\n    local\
    \ function is_in_range_or_not_or_not_or_not(n)\n        return is_in_range_or_not_or_not(n)\
    \ or is_between(n, n + 8)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not(n) or is_between(n, n + 16)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not(n) or is_between(n, n\
    \ + 32)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 64)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_between(n,\
    \ n + 128)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\
    \ or is_between(n, n + 256)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\
    \ or is_between(n, n + 512)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\
    \ or is_between(n, n + 1024)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_",
  "   if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ < 2 then\n      return -1\n   end\n   if y < 2 then\n      return -1\n   end\n\
    \   local m = math.floor((x + y) / 2)\n   if m % 2 == 0 then\n      return m\n\
    \   else\n      return choose_num(x, y)\n   end\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between2(a, b)\n        return\
    \ a <= n and n <= b\n    end\n    local function is_odd2(n)\n        return n\
    \ % 2 == 0\n    end\n    local function is_between3(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_odd3(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between4(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd4(n)\n        return n % 2 == 0\n\
    \    end\n    local function is_between5(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd5(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between6(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd6(n)\n        return n % 2 == 0\n    end\n    local\
    \ function is_between7(a, b)\n        return a <= n and n <= b\n    end\n    local\
    \ function is_odd7(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between8(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd8(n)\n        return n % 2 == 0\n    end\n    local function is_between9(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd9(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between10(a, b)\n \
    \       return a <= n and n <= b\n    end\n    local function is_odd10(n)\n  \
    \      return n % 2 == 0\n    end\n    local function is_between11(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd11(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between12(a, b)\n     \
    \   return a <= n and n <= b\n    end\n    local function is_odd12(n)\n      \
    \  return n % 2 == 0\n    end\n    local function is_between13(a, b)\n       \
    \ return a <= n and n <= b\n    end\n    local function is_odd13(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between14(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd14(n)\n        return n %\
    \ 2 == 0\n    end\n    local function is_between15(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_", "   if x > y then\n      x,\
    \ y = y, x\n   end\n   for i = x, y + 1 do\n      if i ~= math.floor(i) then\n\
    \         return i\n      end\n   end\n   return -1\nend", "    if x > y then\n\
    \        x, y = y, x\n    end\n    for i = x, y + 1 do\n        if i % 2 == 0\
    \ then\n            return i\n        end\n    end\n    return -1\nend", "   if\
    \ x < y then\n      local tmp = x\n      x = y\n      y = tmp\n   end\n   if x\
    \ < 2 then\n      return -1\n   end\n   if y < 2 then\n      return -1\n   end\n\
    \   local ans = 1\n   while x < y do\n      ans = ans * 2\n      x = x + 1\n \
    \  end\n   return ans\nend", "   if x < y then\n      local tmp = x\n      x =\
    \ y\n      y = tmp\n   end\n   if x < 2 then\n      return -1\n   end\n   if y\
    \ < 2 then\n      return -1\n   end\n   local ans = 1\n   for i = 2, y do\n  \
    \    ans = ans * i\n      if ans > x then\n         return -1\n      end\n   end\n\
    \   return ans\nend", "    if x > y then\n        x, y = y, x\n    end\n    local\
    \ max_num = x\n    for i = y, 1, -1 do\n        if max_num % i == 0 then\n   \
    \         max_num = max_num / i\n        end\n    end\n    return max_num\nend",
  "   if x < y then\n      local x_even = x % 2\n      local y_even = y % 2\n    \
    \  if x_even > y_even then\n         return choose_num(x + 1, y)\n      else\n\
    \         return choose_num(x, y + 1)\n      end\n   else\n      return -1\n \
    \  end\nend", "    local function is_even(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_between(l, h)\n        return l <= n and n <= h\n    end\n\
    \    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(l, h)\n        return l <= n and n <= h\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(l,\
    \ h)\n        return l <= n and n <= h\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(l, h)\n   \
    \     return l <= n and n <= h\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between(l, h)\n        return\
    \ l <= n and n <= h\n    end\n    local function is_odd(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between(l, h)\n        return l <= n\
    \ and n <= h\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between(l, h)\n        return l <= n and n <=\
    \ h\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between(l, h)\n        return l <= n and n <= h\n    end\n\
    \    local function is_odd(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between(l, h)\n        return l <= n and n <= h\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(l,\
    \ h)\n        return l <= n and n <= h\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(l, h)\n   \
    \     return l <= n and n <= h\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between(l, h)\n        return\
    \ l <= n and n <= h\n    end\n    local function is_odd(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between(l, h)\n        return l <= n\
    \ and n <= h\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between(l, h)\n        return l <= n and n <=\
    \ h\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between(l, h)", "  if x > y then\n    x, y = y, x\n  end\n\
    \  local max_num = x\n  local max_num_pos = x\n  local max_num_neg = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n  local max_num_even = x\n  local max_num_odd = x\n  local\
    \ max_num_even = x\n  local max_num_odd = x\n  local max_num_even = x\n  local\
    \ max_num_odd = x\n", "  if x > y then\n    x, y = y, x\n  end\n  local max_num\
    \ = x\n  local min_num = y\n  while max_num - min_num > 1 do\n    local mid =\
    \ max_num + min_num / 2\n    if mid % 2 == 0 then\n      max_num = mid\n    else\n\
    \      min_num = mid\n    end\n  end\n  return max_num\nend", "   if x > y then\n\
    \      x, y = y, x\n   end\n   local max_num = x\n   for i = y, 1, -1 do\n   \
    \   if max_num % i == 0 then\n         max_num = max_num / i\n      else\n   \
    \      return -1\n      end\n   end\n   return max_num\nend", "   if x < y then\n\
    \      x, y = y, x\n   end\n   local max_num = x\n   for i = y, 1, -1 do\n   \
    \   if max_num % i == 0 then\n         max_num = max_num / i\n      else\n   \
    \      return -1\n      end\n   end\n   return max_num\nend", "   if x < y then\n\
    \      local x_even = x % 2\n      local y_even = y % 2\n      if x_even > y_even\
    \ then\n         return choose_num(x - 1, y)\n      else\n         return choose_num(x,\
    \ y - 1)\n      end\n   else\n      local x_even = x % 2\n      local y_even =\
    \ y % 2\n      if x_even < y_even then\n         return choose_num(x, y - 1)\n\
    \      else\n         return choose_num(x - 1, y)\n      end\n   end\nend", " \
    \   local function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_between(n1, n2)\n        return n1 <= n2 and n2 <= n1\n    end\n    local\
    \ function is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(n1,\
    \ n2)\n        return n1 <= n2 and n2 <= n1\n    end\n    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(n1, n2)\n \
    \       return n1 <= n2 and n2 <= n1\n    end\n    ", "   if x < y then\n    \
    \  local x_even = x % 2\n      local y_even = y % 2\n      if x_even > y_even\
    \ then\n         return x\n      else\n         return y\n      end\n   else\n\
    \      local x_even = x % 2\n      local y_even = y % 2\n      if x_even < y_even\
    \ then\n         return y\n      else\n         return x\n      end\n   end\n\
    end", "    if x > y then\n        x, y = y, x\n    end\n    local even = 1\n \
    \   local odd = 0\n    while even <= y do\n        even = even + 2\n        if\
    \ even > y then\n            even = even-1\n        end\n    end\n    while odd\
    \ <= x do\n        odd = odd + 2\n        if odd > x then\n            odd = odd-1\n\
    \        end\n    end\n    return even\nend", "   if x < y then\n      local z\
    \ = x\n      x = y\n      y = z\n   end\n   if x < 2 then\n      return -1\n \
    \  end\n   if y < 2 then\n      return -1\n   end\n   local ans = 1\n   for i\
    \ = 2, y do\n      ans = ans * i + (x - 1)\n   end\n   return ans\nend", "   if\
    \ x < y then\n      local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n\
    \      if x_even and y_even then\n         return x\n      elseif x_even then\n\
    \         return y\n      else\n         return x\n      end\n   else\n      local\
    \ x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even and y_even\
    \ then\n         return y\n      elseif x_even then\n         return x\n     \
    \ else\n         return y\n      end\n   end\nend", "  if x < y then\n    x, y\
    \ = y, x\n  end\n  local function is_even(n)\n    return n % 2 == 0\n  end\n \
    \ local function is_odd(n)\n    return not is_even(n)\n  end\n  local function\
    \ is_between(a, b)\n    return a <= b and a >= b\n  end\n  local function is_in_range(n)\n\
    \    return is_between(x - 1, y) and is_between(x, y - 1)\n  end\n  local function\
    \ is_in_range_or_even(n)\n    return is_in_range(n) or is_even(n)\n  end\n  local\
    \ function is_in_range_or_odd(n)\n    return is_in_range(n) or is_odd(n)\n  end\n\
    \  local function is_in_range_or_even_in_range(n)\n    return is_in_range_or_even(n)\
    \ and is_in_range_or_even(x + 1)\n  end\n  local function is_in_range_or_odd_in_range(n)\n\
    \    return is_in_range_or_odd(n) and is_in_range_or_odd(x + 1)\n  end\n  local\
    \ function is_in_range_or_even_in_range_or_odd(n)\n    return is_in_range_or_even_in_range(n)\
    \ or is_in_range_or_odd_in_range(n)\n  end\n  local function is_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_odd(n) or is_in_range_or_even_in_range(n)\n  end\n\
    \  local function is_in_range_or_even_in_range_or_odd_in_range(n)\n    return\
    \ is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range(n)\n  end\n \
    \ local function is_in_range_or_odd_in_range_or_even_in_range(n)\n    return is_in_range_or_odd_in_range(n)\
    \ or is_in_range_or_even_in_range(n)\n  end\n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \  end\n  local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_range_or_odd(n)\n\
    \  end\n  local function is_in_range_or_even_in_range_or_odd_in_range_or_even(n)\n\
    \    return is_in_range_or_even_in_range(n) or is_in_range_or_odd_in_range_or_even(n)\n\
    \  end\n  local function is_in_range_or_odd_in_range_or_even_in_range_or_odd(n)\n\
    \    return is_in_range_or_odd_in_range(n) or is_in_range_or_even_in_", "   if\
    \ x > y then\n      x, y = y, x\n   end\n   local num = x\n   while num < y do\n\
    \      if num % 2 == 0 then\n         return num\n      else\n         num = num\
    \ + 1\n      end\n   end\n   return -1\nend", "   if x < y then\n      local m\
    \ = x\n      x = y\n      y = m\n   end\n   if x > y then\n      local m = x\n\
    \      x = y\n      y = m\n   end\n   if x == y then\n      return x\n   end\n\
    \   local m = math.floor(x/y)\n   if m % 2 == 0 then\n      return m\n   else\n\
    \      return -1\n   end\nend", "  if x > y then\n    x, y = y, x\n  end\n  local\
    \ num = x\n  while true do\n    local next_num = y + 1\n    if next_num > num\
    \ then\n      num = next_num\n    else\n      y = next_num\n      break\n    end\n\
    \  end\n  return num\nend", "  if x > y then\n    x, y = y, x\n  end\n  local\
    \ max_num = x\n  local max_num_pos = 1\n  local max_num_neg = 1\n  local num_pos\
    \ = 1\n  local num_neg = 1\n  while num_pos < y do\n    if x % 2 == 0 then\n \
    \     num_pos = num_pos + 1\n    else\n      num_neg = num_neg + 1\n    end\n\
    \    x = x / 2\n  end\n  if num_neg > max_num_neg then\n    max_num_neg = num_neg\n\
    \    max_num = max_num * -1\n  end\n  if num_pos > max_num_pos then\n    max_num_pos\
    \ = num_pos\n    max_num = max_num * -1\n  end\n  return max_num\nend", "    local\
    \ function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(x,\
    \ lo, hi) \n        return x >= lo and x <= hi\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range_or_not(n)\n\
    \        return is_in_range(n) or is_between(n, x, y)\n    end\n    local function\
    \ is_in_range_or_not_or_not(n)\n        return is_in_range_or_not(n) or is_in_range_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not(n)\n        return\
    \ is_in_range_or_not_or_not(n) or is_in_range_or_not_or_not(n)\n    end\n    local\
    \ function is_in_range_or_not_or_not_or_not_or_not(n)\n        return is_in_range_or_not_or_not_or_not(n)\
    \ or is_in_range_or_not_or_not_or_not(n)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n) or is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n)\n\
    \        return is_in_range_or_not_or_not_", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_in_range(n)\n        return is_even(n)\
    \ or is_odd(n)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n    end\n    local function is_in_range(n)\n        return is_between(n,\
    \ n + 2)\n", "    if x < y then\n        x, y = y, x\n    end\n    local max_num\
    \ = x\n    for i = y, 1, -1 do\n        if max_num % i == 0 then\n           \
    \ max_num = max_num / i\n        else\n            return -1\n        end\n  \
    \  end\n    return max_num\nend", "    local function is_even(n)\n        return\
    \ n % 2 == 0\n    end\n    local function is_between(low, high)\n        return\
    \ low <= n and n <= high\n    end\n    local function is_bigger_than(x, y)\n \
    \       return is_even(x) and is_even(y) and is_between(x, y) and x > y\n    end\n\
    \    if is_bigger_than(x, y) return x end\n    if is_bigger_than(y, x) return\
    \ y end\n    if is_even(x) and is_even(y) then\n        local m = math.min(x,\
    \ y)\n        if m % 2 == 0 then return m end\n    end\n    return -1\nend", " \
    \  if x < y then\n      local x_even = x % 2 == 0\n      local y_even = y % 2\
    \ == 0\n      if x_even and y_even then\n         return x\n      elseif x_even\
    \ then\n         return y\n      elseif y_even then\n         return x\n     \
    \ else\n         return -1\n      end\n   else\n      local x_even = x % 2 ==\
    \ 0\n      local y_even = y % 2 == 0\n      if x_even and y_even then\n      \
    \   return y\n      elseif x_even then\n         return x\n      elseif y_even\
    \ then\n         return y\n      else\n         return -1\n      end\n   end\n\
    end", "    if x > y then\n        x, y = y, x\n    end\n    for i = x, y + 1 do\n\
    \        if i % 2 == 0 then\n            return i\n        end\n    end\n    return\
    \ -1\nend", "    if x < y then\n        x, y = y, x\n    end\n    local max_num\
    \ = -1\n    for i = x, y + 1 do\n        if max_num < i then\n            max_num\
    \ = i\n        end\n    end\n    return max_num\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between2(a, b)\n        return\
    \ a <= n and n <= b\n    end\n    local function is_odd2(n)\n        return n\
    \ % 2 == 0\n    end\n    local function is_between3(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_odd3(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between4(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd4(n)\n        return n % 2 == 0\n\
    \    end\n    local function is_between5(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd5(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between6(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd6(n)\n        return n % 2 == 0\n    end\n    local\
    \ function is_between7(a, b)\n        return a <= n and n <= b\n    end\n    local\
    \ function is_odd7(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between8(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd8(n)\n        return n % 2 == 0\n    end\n    local function is_between9(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd9(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between10(a, b)\n \
    \       return a <= n and n <= b\n    end\n    local function is_odd10(n)\n  \
    \      return n % 2 == 0\n    end\n    local function is_between11(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd11(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between12(a, b)\n     \
    \   return a <= n and n <= b\n    end\n    local function is_odd12(n)\n      \
    \  return n % 2 == 0\n    end\n    local function is_between13(a, b)\n       \
    \ return a <= n and n <= b\n    end\n    local function is_odd13(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between14(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd14(n)\n        return n %\
    \ 2 == 0\n    end\n    local function is_between15(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_", "   if x > y then\n      x,\
    \ y = y, x\n   end\n   if x == y then\n      return x\n   end\n   if x % 2 ==\
    \ 0 then\n      return choose_num(x / 2, y)\n   else\n      return choose_num(3\
    \ * x + 1, y)\n   end\nend", "    local function is_even(n)\n        return n\
    \ % 2 == 0\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_even_in_range(lower,\
    \ upper)\n        return is_between(lower, upper) and is_even(n - lower)\n   \
    \ end\n    local function is_even_in_range_or_none(lower, upper)\n        return\
    \ is_between(lower, upper) and is_even(n) or n == -1\n    end\n    local function\
    \ is_odd_in_range(lower, upper)\n        return is_between(lower, upper) and is_odd(n\
    \ - lower)\n    end\n    local function is_odd_in_range_or_none(lower, upper)\n\
    \        return is_between(lower, upper) and is_odd(n) or n == -1\n    end\n \
    \   local function is_odd_or_none(lower, upper)\n        return is_between(lower,\
    \ upper) and is_odd(n) or n == -1\n    end\n    local function is_odd_or_none_in_range(lower,\
    \ upper)\n        return is_between(lower, upper) and is_odd(n) or n == -1\n \
    \   end\n    local function is_odd_or_none_in_range_or_none(lower, upper)\n  \
    \      return is_between(lower, upper) and is_odd(n) or n == -1\n    end\n   \
    \ local function is_odd_or_none_in_range_or_none(lower, upper)\n        return\
    \ is_between(lower, upper) and is_odd(n) or n == -1\n    end\n    local function\
    \ is_odd_or_none_in_range_or_none(lower, upper)\n        return is_between(lower,\
    \ upper) and is_odd(n) or n == -1\n    end\n    local function is_odd_or_none_in_range_or_none(lower,\
    \ upper)\n        return is_between(lower, upper) and is_odd(n) or n == -1\n \
    \   end\n    local function is_odd_or_none_in_range_or_none(lower, upper)\n  \
    \      return is_between(lower, upper) and is_odd(n) or n == -1\n    end\n   \
    \ local function is_odd_or_none_in_range_or_none(lower, upper)\n        return\
    \ is_between(lower, upper) and is_odd(n) or n == -1\n    end\n    local function\
    \ is_odd_or_none_in_range_or_none(lower, upper)\n        return is_between(lower,\
    \ upper) and is_odd(n) or n == -1\n    end\n    local function is_odd_or_none_in_range_or_none(lower,\
    \ upper)\n        return is_between(lower, upper) and is_odd(n) or n == -1\n \
    \   end", "    local function is_even(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_between(a, b)\n        return a <= b and a >= b\n    end\n\
    \    local function is_even_between_num(a, b)\n        return is_between(a, b)\
    \ and is_even(a) and is_even(b)\n    end\n    local function is_odd_between_num(a,\
    \ b)\n        return is_between(a, b) and is_odd(a)\n    end\n    local function\
    \ is_odd_or_even_between_num(a, b)\n        return is_between(a, b) and is_odd(a)\
    \ or is_even(a)\n    end\n    local function is_odd_or_even_between_nums(a, b)\n\
    \        return is_between(a, b) and is_odd(a) or is_even(b)\n    end\n    local\
    \ function is_odd_or_even_between_nums(a, b)\n        return is_between(a, b)\
    \ and is_odd(a) or is_even(b)\n    end\n    local function is_odd_or_even_between_nums(a,\
    \ b)\n        return is_between(a, b) and is_odd(a) or is_even(b)\n    end\n \
    \   local function is_odd_or_even_between_nums(a, b)\n        return is_between(a,\
    \ b) and is_odd(a) or is_even(b)\n    end\n    local function is_odd_or_even_between_nums(a,\
    \ b)\n        return is_between(a, b) and is_odd(a) or is_even(b)\n    end\n \
    \   local function is_odd_or_even_between_nums(a, b)\n        return is_between(a,\
    \ b) and is_odd(a) or is_even(b)\n    end\n    local function is_odd_or_even_between_nums(a,\
    \ b)\n        return is_between(a, b) and is_odd(a) or is_even(b)\n    end\n \
    \   local function is_odd_or_even_between_nums(a, b)\n        return is_between(a,\
    \ b) and is_odd(a) or is_even(b)\n    end\n    local function is_odd_or_even_between_nums(a,\
    \ b)\n        return is_between(a, b) and is_odd(a) or is_even(b)\n    end\n \
    \   local function is_odd_or_even_between_nums(a, b)\n        return is_between(a,\
    \ b) and is_odd(a) or is_even(b)\n    end\n    local function is_odd_or_even_between_nums(a,\
    \ b)\n        return is_between(a, b) and is_odd(a) or is_even(b)\n    end\n \
    \   local function is_odd_or_even_between_nums(a, b)\n        return is_between(a,\
    \ b) and is_odd(a) or is_even(b)\n    end\n    local function is_odd_or_even_between_nums(a,\
    \ b)\n        return ", "   if x < y then\n      local m = x\n      x = y\n  \
    \    y = m\n   end\n   if x < 1 then\n      return -1\n   end\n   if y < 1 then\n\
    \      return -1\n   end\n   if x == y then\n      return x\n   end\n   if x %\
    \ 2 == 0 then\n      return choose_num(x / 2, y)\n   else\n      return choose_num(x\
    \ / 2, y + 1)\n   end\nend", "   if x > y then\n      x, y = y, x\n   end\n  \
    \ if x == y then\n      return x\n   end\n   if x % 2 == 0 then\n      return\
    \ choose_num(x / 2, y)\n   else\n      return choose_num(3 * x + 1, y)\n   end\n\
    end", "   if x < y then\n      x, y = y, x\n   end\n   if x == y then\n      return\
    \ x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   else\n\
    \      return choose_num(3 * x + 1, y)\n   end\nend", "   if x < y then\n    \
    \  local m = x\n      x = y\n      y = m\n   end\n   if x < 2 then\n      return\
    \ -1\n   end\n   if y < 2 then\n      return -1\n   end\n   if x == y then\n \
    \     return x\n   end\n   local m = math.floor((x + y) / 2)\n   if m % 2 == 0\
    \ then\n      return choose_num(m, y)\n   else\n      return choose_num(x, m)\n\
    \   end\nend", "   if x < y then\n      local x_even = math.floor(x/2)\n     \
    \ local y_even = math.floor(y/2)\n      return choose_num(x_even, y_even)\n  \
    \ else\n      return x\n   end\nend", "    local function is_even(n)\n       \
    \ return n % 2 == 0\n    end\n    local function is_between(low, high)\n     \
    \   return low <= n and n <= high\n    end\n    local function is_odd(n)\n   \
    \     return n % 2 == 1\n    end\n    local function is_between(low, high)\n \
    \       return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(low, high)\n\
    \        return low <= n and n <= high\n    end\n    local function is_odd(n)\n\
    \        return ", "   if x < y then\n      local x_even = math.floor(x/2)\n \
    \     local y_even = math.floor(y/2)\n      return choose_num(x_even, y_even)\n\
    \   else\n      local x_even = math.floor(x/2)\n      local y_even = math.floor(y/2)\n\
    \      return choose_num(x_even, y_even)\n   end\nend", "   if x < y then\n  \
    \    local x_even = x % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even\
    \ and y_even then\n         return x\n      elseif x_even then\n         return\
    \ y\n      else\n         return x\n      end\n   else\n      local x_even = x\
    \ % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even and y_even then\n\
    \         return y\n      elseif x_even then\n         return x\n      else\n\
    \         return y\n      end\n   end\nend", "  if x > y then\n    x, y = y, x\n\
    \  end\n  local max_num = x\n  local min_num = y\n  while max_num - min_num >\
    \ 1 do\n    local mid = (max_num + min_num) / 2\n    if mid % 2 == 0 then\n  \
    \    max_num = mid\n    else\n      min_num = mid\n    end\n  end\n  return max_num\n\
    end", "   if x > y then\n      x, y = y, x\n   end\n   local num = x\n   while\
    \ num < y do\n      if num % 2 == 0 then\n         return num\n      end\n   \
    \   num = num + 1\n   end\n   return -1\nend", "  if x < y then\n    x, y = y,\
    \ x\n  end\n  local max_num = x\n  local min_num = y\n  while max_num < min_num\
    \ do\n    max_num = max_num * 2 + 1\n    min_num = min_num * 2 - 1\n  end\n  return\
    \ max_num\nend", "    local function is_even(n)\n        return n % 2 == 0\n \
    \   end\n    local function is_between(x, y)\n        return x >= y and x <= y\n\
    \    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n \
    \   local function is_between2(x, y)\n        return x >= y and x <= y\n    end\n\
    \    local function is_odd2(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between3(x, y)\n        return x >= y and x <= y\n    end\n    local\
    \ function is_odd3(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between4(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_odd4(n)\n        return n % 2 == 1\n    end\n    local function is_between5(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_odd5(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between6(x, y)\n  \
    \      return x >= y and x <= y\n    end\n    local function is_odd6(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between7(x, y)\n      \
    \  return x >= y and x <= y\n    end\n    local function is_odd7(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between8(x, y)\n        return x\
    \ >= y and x <= y\n    end\n    local function is_odd8(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between9(x, y)\n        return x >= y\
    \ and x <= y\n    end\n    local function is_odd9(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between10(x, y)\n        return x >= y and\
    \ x <= y\n    end\n    local function is_odd10(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between11(x, y)\n        return x >= y and x <=\
    \ y\n    end\n    local function is_odd11(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between12(x, y)\n        return x >= y and x <= y\n   \
    \ end\n    local function is_odd12(n)\n        return n % 2 == 1\n    end\n  \
    \  local function is_between13(x, y)\n        return x >= y and x <= y\n    end\n\
    \    local function is_odd13(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between14(x, y)\n        return x >= y and x <= y\n    end\n   \
    \ local function is_odd14(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between15(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_odd15(n)\n        return n % 2 == 1\n    end\n    local function is_between16(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_odd16(n)\n\
    \        return n % 2 == 1\n    end\n    local function ", "  if x > y then\n\
    \    x, y = y, x\n  end\n  local max_num = x\n  local max_num_pos = y\n  while\
    \ max_num < y do\n    max_num = max_num + 2\n    if max_num > max_num_pos then\n\
    \      max_num_pos = max_num\n    end\n  end\n  return max_num_pos\nend", "  \
    \  local function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_between(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between2(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd2(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between3(a, b)\n  \
    \      return a <= n and n <= b\n    end\n    local function is_odd3(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between4(a, b)\n      \
    \  return a <= n and n <= b\n    end\n    local function is_odd4(n)\n        return\
    \ n % 2 == 0\n    end\n    local function is_between5(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd5(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between6(a, b)\n        return a <= n\
    \ and n <= b\n    end\n    local function is_odd6(n)\n        return n % 2 ==\
    \ 0\n    end\n    local function is_between7(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd7(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between8(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd8(n)\n        return n % 2 == 0\n    end\n\
    \    local function is_between9(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd9(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between10(a, b)\n        return a <= n and n <= b\n    end\n   \
    \ local function is_odd10(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_between11(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd11(n)\n        return n % 2 == 1\n    end\n    local function is_between12(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd12(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between13(a, b)\n \
    \       return a <= n and n <= b\n    end\n    local function is_odd13(n)\n  \
    \      return n % 2 == 1\n    end\n    local function is_between14(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd14(n)\n    \
    \    return n % 2 == 0\n    end\n    local function is_between15(a, b)\n     \
    \   return a <= n and n <= b\n    end\n    local function is_", "   if x < y then\n\
    \      local m = x\n      x = y\n      y = m\n   end\n   if x < 1 then\n     \
    \ return -1\n   end\n   if y < 1 then\n      return -1\n   end\n   if x == y then\n\
    \      return x\n   end\n   local m = math.floor(x/y)\n   if x % y == 0 then\n\
    \      return m\n   else\n      return choose_num(m, y)\n   end\nend", "   if\
    \ x < y then\n      local x_even = x % 2\n      local x_odd = x % 2 + 1\n    \
    \  local y_even = y % 2\n      local y_odd = y % 2 + 1\n      if x_even > y_even\
    \ then\n         return choose_num(x_even, y_even)\n      elseif x_odd > y_odd\
    \ then\n         return choose_num(x_odd, y_odd)\n      else\n         return\
    \ x\n      end\n   else\n      local x_even = x % 2\n      local x_odd = x % 2\
    \ + 1\n      local y_even = y % 2\n      local y_odd = y % 2 + 1\n      if x_even\
    \ < y_even then\n         return choose_num(x_even, y_even)\n      elseif x_odd\
    \ < y_odd then\n         return choose_num(x_odd, y_odd)\n      else\n       \
    \  return y\n      end\n   end\nend", "  if x > y then\n    x, y = y, x\n  end\n\
    \  local max_num = x\n  local max_num2 = y\n  while max_num2 ~= 0 do\n    max_num\
    \ = max_num * 2 + max_num2\n    max_num2 = max_num2 // 2\n  end\n  return max_num\n\
    end", "   if x < y then\n      local x_even = math.floor(x/2)\n      local y_even\
    \ = math.floor(y/2)\n      return choose_num(x_even, y_even)\n   else\n      local\
    \ x_even = math.floor(x/2)\n      local y_even = math.floor(y/2)\n      return\
    \ choose_num(x_even, y_even) + 1\n   end\nend", "   if x < y then\n      local\
    \ x_even = math.floor(x/2)\n      local y_even = math.floor(y/2)\n      return\
    \ choose_num(x_even, y_even)\n   else\n      local x_even = math.floor(x/2)\n\
    \      local y_even = math.floor(y/2)\n      return choose_num(x_even, y_even)\
    \ + 1\n   end\nend", "    local function is_even(n)\n        return n % 2 == 0\n\
    \    end\n    local function is_between(x, y)\n        return x >= y and x <=\
    \ y\n    end\n    local function is_odd(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between2(x, y)\n        return x >= y and x <= y\n    end\n\
    \    local function is_odd2(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between3(x, y)\n        return x >= y and x <= y\n    end\n    local\
    \ function is_odd3(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between4(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_odd4(n)\n        return n % 2 == 1\n    end\n    local function is_between5(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_odd5(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between6(x, y)\n  \
    \      return x >= y and x <= y\n    end\n    local function is_odd6(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between7(x, y)\n      \
    \  return x >= y and x <= y\n    end\n    local function is_odd7(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between8(x, y)\n        return x\
    \ >= y and x <= y\n    end\n    local function is_odd8(n)\n        return n %\
    \ 2 == 1\n    end\n    local function is_between9(x, y)\n        return x >= y\
    \ and x <= y\n    end\n    local function is_odd9(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between10(x, y)\n        return x >= y and\
    \ x <= y\n    end\n    local function is_odd10(n)\n        return n % 2 == 1\n\
    \    end\n    local function is_between11(x, y)\n        return x >= y and x <=\
    \ y\n    end\n    local function is_odd11(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between12(x, y)\n        return x >= y and x <= y\n   \
    \ end\n    local function is_odd12(n)\n        return n % 2 == 1\n    end\n  \
    \  local function is_between13(x, y)\n        return x >= y and x <= y\n    end\n\
    \    local function is_odd13(n)\n        return n % 2 == 1\n    end\n    local\
    \ function is_between14(x, y)\n        return x >= y and x <= y\n    end\n   \
    \ local function is_odd14(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between15(x, y)\n        return x >= y and x <= y\n    end\n    local function\
    \ is_odd15(n)\n        return n % 2 == 1\n    end\n    local function is_between16(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function is_odd16(n)\n\
    \        return n % 2 == 1\n    end\n    local function ", "    if x > y then\n\
    \        x, y = y, x\n    end\n    local max_num = x\n    for i = y, 1, -1 do\n\
    \        if max_num % i == 0 then\n            max_num = i\n        end\n    end\n\
    \    return max_num\nend", "    if x < y then\n        x, y = y, x\n    end\n\
    \    if x == y then\n        return x\n    end\n    if x % 2 == 0 and y % 2 ==\
    \ 0 then\n        return choose_num(x / 2, y / 2)\n    end\n    if x % 2 == 0\
    \ and y % 2 ~= 0 then\n        return choose_num(x / 2, y)\n    end\n    if x\
    \ % 2 ~= 0 and y % 2 == 0 then\n        return choose_num(x, y / 2)\n    end\n\
    \    if x % 2 ~= 0 and y % 2 ~= 0 then\n        return choose_num(x, y)\n    end\n\
    \    return -1\nend", "   if x < y then\n      local m = x\n      x = y\n    \
    \  y = m\n   end\n   if x < 2 then\n      return -1\n   end\n   if y < 2 then\n\
    \      return -1\n   end\n   local m = math.floor((x + y) / 2)\n   if m % 2 ==\
    \ 0 then\n      return m\n   else\n      return choose_num(x, y)\n   end\nend",
  "   if x < y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x\
    \ > y then\n      local m = y\n      x = y\n      y = m\n   end\n   if x == y\
    \ then\n      return x\n   end\n   local m = math.floor((x + y) / 2)\n   if m\
    \ % 2 == 0 then\n      return m\n   else\n      return -1\n   end\nend", "   if\
    \ x < y then\n      x, y = y, x\n   end\n   local max_num = x\n   for i = y, 1,\
    \ -1 do\n      if max_num % i == 0 then\n         max_num = i\n      end\n   end\n\
    \   return max_num\nend", "   if x < y then\n      x, y = y, x\n   end\n   local\
    \ max_num = x\n   for i = y, 1, -1 do\n      if max_num % i == 0 then\n      \
    \   max_num = max_num / i\n      else\n         return -1\n      end\n   end\n\
    \   return max_num\nend", "   if x > y then\n      x, y = y, x\n   end\n   local\
    \ num = x\n   while num < y do\n      if num % 2 == 0 then\n         return num\n\
    \      end\n      num = num + 1\n   end\n   return -1\nend", "   if x < y then\n\
    \      local m = x\n      x = y\n      y = m\n   end\n   if x == y then\n    \
    \  return x\n   end\n   local m = math.floor((x + y) / 2)\n   if m % 2 == 0 then\n\
    \      return m\n   else\n      return choose_num(x, y)\n   end\nend", "   if\
    \ x > y then\n      x, y = y, x\n   end\n   if x == y then\n      return x\n \
    \  end\n   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   else\n  \
    \    return choose_num(3 * x + 1, y)\n   end\nend", "   if x > y then\n      x,\
    \ y = y, x\n   end\n   local max_num = x\n   for i = y, 1, -1 do\n      if max_num\
    \ % i == 0 then\n         max_num = max_num / i\n      else\n         return -1\n\
    \      end\n   end\n   return max_num\nend", "    local function is_even(n)\n\
    \        return n % 2 == 0\n    end\n    local function is_between(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd(n)\n      \
    \  return n % 2 == 1\n    end\n    local function is_between2(a, b)\n        return\
    \ a <= n and n <= b\n    end\n    local function is_odd2(n)\n        return n\
    \ % 2 == 0\n    end\n    local function is_between3(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_odd3(n)\n        return n % 2 ==\
    \ 1\n    end\n    local function is_between4(a, b)\n        return a <= n and\
    \ n <= b\n    end\n    local function is_odd4(n)\n        return n % 2 == 0\n\
    \    end\n    local function is_between5(a, b)\n        return a <= n and n <=\
    \ b\n    end\n    local function is_odd5(n)\n        return n % 2 == 1\n    end\n\
    \    local function is_between6(a, b)\n        return a <= n and n <= b\n    end\n\
    \    local function is_odd6(n)\n        return n % 2 == 0\n    end\n    local\
    \ function is_between7(a, b)\n        return a <= n and n <= b\n    end\n    local\
    \ function is_odd7(n)\n        return n % 2 == 1\n    end\n    local function\
    \ is_between8(a, b)\n        return a <= n and n <= b\n    end\n    local function\
    \ is_odd8(n)\n        return n % 2 == 0\n    end\n    local function is_between9(a,\
    \ b)\n        return a <= n and n <= b\n    end\n    local function is_odd9(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between10(a, b)\n \
    \       return a <= n and n <= b\n    end\n    local function is_odd10(n)\n  \
    \      return n % 2 == 0\n    end\n    local function is_between11(a, b)\n   \
    \     return a <= n and n <= b\n    end\n    local function is_odd11(n)\n    \
    \    return n % 2 == 1\n    end\n    local function is_between12(a, b)\n     \
    \   return a <= n and n <= b\n    end\n    local function is_odd12(n)\n      \
    \  return n % 2 == 0\n    end\n    local function is_between13(a, b)\n       \
    \ return a <= n and n <= b\n    end\n    local function is_odd13(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between14(a, b)\n        return a\
    \ <= n and n <= b\n    end\n    local function is_odd14(n)\n        return n %\
    \ 2 == 0\n    end\n    local function is_between15(a, b)\n        return a <=\
    \ n and n <= b\n    end\n    local function is_", "   if x < y then\n      local\
    \ m = x\n      x = y\n      y = m\n   end\n   if x > y then\n      local m = x\n\
    \      x = y\n      y = m\n   end\n   if x == y then\n      return x\n   end\n\
    \   if x % 2 == 0 then\n      return choose_num(x / 2, y)\n   else\n      return\
    \ choose_num(3 * x + 1, y)\n   end\nend", "    local function is_even(n)\n   \
    \     return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(n1, n2)\n        return n1\
    \ <= n2 and n2 <= n1\n    end\n    local function is_in_range(n1, n2)\n      \
    \  return is_even(n1) and is_even(n2) and is_between(n1, n2)\n    end\n    local\
    \ function is_in_range_or_not(n1, n2)\n        return is_even(n1) and is_even(n2)\
    \ and is_in_range(n1, n2) or is_odd(n1)\n    end\n    local function is_in_range_or_not_or_not(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_in_range_or_not(n1, n2)\
    \ or is_odd(n1)\n    end\n    local function is_in_range_or_not_or_not_or_not(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_in_range_or_not_or_not(n1,\
    \ n2) or is_odd(n1)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_in_range_or_not_or_not_or_not(n1,\
    \ n2) or is_odd(n1)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_in_range_or_not_or_not_or_not_or_not(n1,\
    \ n2) or is_odd(n1)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_in_range_or_not_or_not_or_not_or_not(n1,\
    \ n2) or is_odd(n1)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_in_range_or_not_or_not_or_not_or_not_or_not(n1,\
    \ n2) or is_odd(n1)\n    end\n    local function is_in_range_or_not_or_not_or_not_or_not_or_not_or_not_or_not_or_not(n1,\
    \ n2)\n        return is_even(n1) and is_even(n2) and is_in_range_or_not_or_not_or_not_or_not_or_not(n1,\
    \ n2) or is_odd(n1)\n    end\n    local function is_in_range_", "    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_in_range(n)\n \
    \       return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n",
  "    local function is_even(n)\n        return n % 2 == 0\n    end\n    local function\
    \ is_odd(n)\n        return n % 2 == 1\n    end\n    local function is_between(x,\
    \ y)\n        return x >= y and x <= y\n    end\n    local function choose_even(x,\
    \ y)\n        if is_between(x, y) and is_even(y) then\n            return x\n\
    \        elseif is_between(x, y) and is_odd(y) then\n            return y\n  \
    \      else\n            return -1\n        end\n    end\n    local function choose_odd(x,\
    \ y)\n        if is_between(x, y) and is_odd(y) then\n            return x\n \
    \       elseif is_between(x, y) and is_even(y) then\n            return y\n  \
    \      else\n            return -1\n        end\n    end\n    local function choose_num(x,\
    \ y)\n        if is_between(x, y) and is_even(y) then\n            return x\n\
    \        elseif is_between(x, y) and is_odd(y) then\n            return y\n  \
    \      else\n            return -1\n        end\n    end\n    return choose_num(x,\
    \ y)\nend", "   if x > y then\n      x, y = y, x\n   end\n   local max_num = 0\n\
    \   for i = x, y + 1 do\n      if i ~= 0 then\n         if max_num < i then\n\
    \            max_num = i\n         end\n      end\n   end\n   return max_num\n\
    end", "   if x < y then\n      return choose_num(y, x)\n   end\n   if x == y then\n\
    \      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   else\n      return choose_num(3 * x + 1, y)\n   end\nend", "   if x <\
    \ y then\n      local m = x\n      x = y\n      y = m\n   end\n   if x == y then\n\
    \      return x\n   end\n   if x % 2 == 0 then\n      return choose_num(x / 2,\
    \ y)\n   else\n      return choose_num(3 * x + 1, y)\n   end\nend", "   if x >\
    \ y then\n      x, y = y, x\n   end\n   if x < y then\n      return -1\n   end\n\
    \   local max_num = 0\n   for i = x, y + 1 do\n      if i % 2 == 0 then\n    \
    \     if max_num < i then\n            max_num = i\n         end\n      end\n\
    \   end\n   return max_num\nend", "    if x < y then\n        local x_even = math.floor(x/2)\n\
    \        local y_even = math.floor(y/2)\n        if x_even > y_even then\n   \
    \         return x_even\n        else\n            return y_even\n        end\n\
    \    else\n        local x_even = math.floor(x/2)\n        local y_even = math.floor(y/2)\n\
    \        if x_even < y_even then\n            return y_even\n        else\n  \
    \          return x_even\n        end\n    end\nend", "   if x < y then\n    \
    \  local max_num = x\n      local min_num = y\n   else\n      local max_num =\
    \ y\n      local min_num = x\n   end\n   while min_num < max_num do\n      local\
    \ num = min_num\n      min_num = min_num + 1\n      if num % 2 == 0 then\n   \
    \      return num\n      end\n   end\n   return -1\nend", "   if x < y then\n\
    \      local x_even = x % 2\n      local y_even = y % 2\n      if x_even > y_even\
    \ then\n         return choose_num(x + 1, y)\n      else\n         return choose_num(x,\
    \ y + 1)\n      end\n   else\n      return x\n   end\nend", "    local function\
    \ is_even(n)\n        return n % 2 == 0\n    end\n    local function is_odd(n)\n\
    \        return n % 2 == 1\n    end\n    local function is_between(x, y)\n   \
    \     return x >= y and x <= y\n    end\n    local function is_in_range(n)\n \
    \       return is_even(n) or is_odd(n)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n    end\n    local function is_in_range(n)\n\
    \        return is_between(n, n + 2)\n", "    local function is_even(n)\n    \
    \    return n % 2 == 0\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(x, y)\n        return x >=\
    \ y and x <= y\n    end\n    local function is_in_range(n)\n        return is_even(n)\
    \ or is_odd(n)\n    end\n    local function is_in_range_or_none(x, y)\n      \
    \  if is_in_range(x) and is_in_range(y)\n            return n\n        end\n \
    \       return nil\n    end\n    local function is_in_range_or_none(x, y)\n  \
    \      if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n    end\n    local function is_in_range_or_none(x, y)\n \
    \       if is_in_range(x) and is_in_range(y)\n            return n\n        end\n\
    \        return nil\n", "    local function is_even(n)\n        return n % 2 ==\
    \ 0\n    end\n    local function is_between(lower, upper)\n        return lower\
    \ <= n and n <= upper\n    end\n    local function is_odd(n)\n        return n\
    \ % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n <= upper\n    end\n    local function is_odd(n)\n        return\
    \ n % 2 == 1\n    end\n    local function is_between(lower, upper)\n        return\
    \ lower <= n and n ", "   if x < y then\n      local x_even = x % 2 == 0\n   \
    \   local y_even = y % 2 == 0\n      if x_even and y_even then\n         return\
    \ x\n      else\n         return y\n      end\n   else\n      local x_even = x\
    \ % 2 == 0\n      local y_even = y % 2 == 0\n      if x_even and not y_even then\n\
    \         return x\n      else\n         return y\n      end\n   end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

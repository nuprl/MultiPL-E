language: lua
name: HumanEval_162_string_to_md5
results:
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n\
    \  return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmnera_ik.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpmnera_ik.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpmnera_ik.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5sum = ngx.md5(text)\n\
    \  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsjynqzoa.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpsjynqzoa.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpsjynqzoa.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp72ryzf0b.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp72ryzf0b.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp72ryzf0b.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0whgwse5.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp0whgwse5.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp0whgwse5.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if md5 ~= '' then\n    return md5:sub(1, 32)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnnbw8inh.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpnnbw8inh.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpnnbw8inh.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if text ~= \"\" then\n    return md5:sub(1, 16)\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp19lyh8y3.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp19lyh8y3.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmp19lyh8y3.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text == \"\" then\n    return nil\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0zw6hy4e.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp0zw6hy4e.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp0zw6hy4e.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptn_sxzby.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmptn_sxzby.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmptn_sxzby.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu_kf8mfm.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpu_kf8mfm.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpu_kf8mfm.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text == \"\" then\n    md5 = \"0000000000000000000000000000000000000000000000000000000000000000\"\
    \n  else\n    local md5_hash = md5.new()\n    md5_hash:update(text)\n    md5 =\
    \ md5_hash:hexdigest()\n  end\n  return md5\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqsah2qal.lua:8:\
    \ attempt to index a nil value (local 'md5')\nstack traceback:\n\t/tmp/tmpqsah2qal.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpqsah2qal.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptn_sxzby.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmptn_sxzby.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmptn_sxzby.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local hash = ngx.md5(text)\n\
    \  return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwo37xa8m.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpwo37xa8m.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwo37xa8m.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu_kf8mfm.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpu_kf8mfm.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpu_kf8mfm.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw859xkdr.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpw859xkdr.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpw859xkdr.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplumlbyyp.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplumlbyyp.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmplumlbyyp.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local hash = ngx.md5(text)\n\
    \  return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwo37xa8m.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpwo37xa8m.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwo37xa8m.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5\
    \ = \"00000000000000000000000000000000\"\n  end\n  return md5\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp50t00d8p.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp50t00d8p.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp50t00d8p.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5sum = ngx.md5(text)\n\
    \  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsjynqzoa.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpsjynqzoa.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpsjynqzoa.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if text ~= \"\" then\n    return md5:sub(1, 8)\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmposqr9h22.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmposqr9h22.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmposqr9h22.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5\
    \ = ''\n  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpc__n7y_m.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpc__n7y_m.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpc__n7y_m.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp72ryzf0b.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp72ryzf0b.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp72ryzf0b.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if text ~= \"\" then\n    return md5:sub(1, 8)\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmposqr9h22.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmposqr9h22.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmposqr9h22.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local hash = ngx.md5(text)\n\
    \  return hash:sub(1, 32)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsbllh2sw.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpsbllh2sw.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpsbllh2sw.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5()\n  md5:update(text)\n  return md5:final()\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzzer7378.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpzzer7378.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmpzzer7378.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplumlbyyp.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplumlbyyp.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmplumlbyyp.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp72ryzf0b.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp72ryzf0b.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp72ryzf0b.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplumlbyyp.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplumlbyyp.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmplumlbyyp.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text == \"\" then\n    return nil\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0zw6hy4e.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp0zw6hy4e.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp0zw6hy4e.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n\
    \  return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmnera_ik.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpmnera_ik.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpmnera_ik.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0whgwse5.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp0whgwse5.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp0whgwse5.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5sum\n  if text:len() > 0 then\n    md5sum = ngx.md5(text)\n  else\n\
    \    md5sum = \"\"\n  end\n  return md5sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsd0__h1w.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpsd0__h1w.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpsd0__h1w.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local hash = ngx.md5(text)\n\
    \  return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwo37xa8m.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpwo37xa8m.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwo37xa8m.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplumlbyyp.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplumlbyyp.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmplumlbyyp.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn93qva74.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn93qva74.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpn93qva74.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return nil end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu_kf8mfm.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpu_kf8mfm.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpu_kf8mfm.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if text ~= \"\" then\n    return md5:sub(1, md5:len()\
    \ - 1)\n  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmput_cx2bq.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmput_cx2bq.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmput_cx2bq.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n\
    \  return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmnera_ik.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpmnera_ik.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpmnera_ik.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local hash = ngx.md5(text)\n\
    \  return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwo37xa8m.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpwo37xa8m.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwo37xa8m.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5sum = ngx.md5(text)\n\
    \  return md5sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsjynqzoa.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpsjynqzoa.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpsjynqzoa.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1gh5l0ew.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp1gh5l0ew.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp1gh5l0ew.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5()\n  local len = #text\n  if len > 0 then\n    md5:update(text)\n\
    \  end\n  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp37pbe5gs.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp37pbe5gs.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmp37pbe5gs.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  else\n    md5\
    \ = \"00000000000000000000000000000000\"\n  end\n  return md5\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp50t00d8p.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp50t00d8p.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmp50t00d8p.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len()-1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkbkd7a0g.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpkbkd7a0g.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpkbkd7a0g.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn93qva74.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn93qva74.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpn93qva74.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local hash = ngx.md5(text)\n\
    \  return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwo37xa8m.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpwo37xa8m.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwo37xa8m.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplumlbyyp.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplumlbyyp.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmplumlbyyp.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5()\n  md5:update(text)\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptn_sxzby.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmptn_sxzby.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmptn_sxzby.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n\
    \  return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp26mt9lt6.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp26mt9lt6.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp26mt9lt6.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if text ~= \"\" then\n    return md5:sub(1, 8)\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmposqr9h22.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmposqr9h22.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmposqr9h22.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5()\n  local len = #text\n  if len == 0 then\n    return\
    \ nil\n  end\n  md5:update(text)\n  md5:update(ngx.encode_base64(len))\n  md5:update(ngx.encode_base64(text))\n\
    \  return md5:final()\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphs9c7kdb.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmphs9c7kdb.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmphs9c7kdb.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,\
    \ md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoe2lcrse.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpoe2lcrse.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpoe2lcrse.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5hash = ngx.md5(text)\n\
    \  return md5hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmnera_ik.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpmnera_ik.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpmnera_ik.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text:len() > 0 then\n    md5 = ngx.md5(text)\n  end\n  return\
    \ md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn93qva74.lua:6:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn93qva74.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpn93qva74.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if text ~= \"\" then\n    return md5:sub(1, 8)\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmposqr9h22.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmposqr9h22.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmposqr9h22.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplumlbyyp.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplumlbyyp.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmplumlbyyp.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local md5 = ngx.md5(text)\n  return md5:sub(1,8)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2cyqz6mq.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp2cyqz6mq.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmp2cyqz6mq.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 2)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmplumlbyyp.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmplumlbyyp.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmplumlbyyp.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text:len() == 0 then\n    return nil\n  end\n  local hash = ngx.md5(text)\n\
    \  return hash\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwo37xa8m.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpwo37xa8m.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpwo37xa8m.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvznsl4x4.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpvznsl4x4.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpvznsl4x4.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = string_to_md5\n    lu.assertEquals(candidate('Hello\
    \ world'), '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''),\
    \ None)\n    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbrn6nlft.lua:17: ''end'' expected (to close ''function'' at
    line 3) near <eof>

    '
  stdout: ''
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len() - 1)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp12qqayid.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp12qqayid.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp12qqayid.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then return end\n  local hash = ngx.md5(text)\n  return hash\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_to_md5\n\
    \    lu.assertEquals(candidate('Hello world'), '3e25960a79dbc69b674cd4ec67a72c62')\n\
    \    lu.assertEquals(candidate(''), None)\n    lu.assertEquals(candidate('A B\
    \ C'), '0ef78513b0cb8cef12743f5aeb35f888')\n    lu.assertEquals(candidate('password'),\
    \ '5f4dcc3b5aa765d61d8327deb882cf99')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzyy1vy88.lua:5:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpzyy1vy88.lua:5:\
    \ in local 'candidate'\n\t/tmp/tmpzyy1vy88.lua:12: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  if text == nil then\n    return nil\n  end\n  local md5 = ngx.md5(text)\n \
    \ return md5:sub(1, md5:len())\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn8mdtbnb.lua:7:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmpn8mdtbnb.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpn8mdtbnb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5\n  if text == \"\" then\n    return nil\n  else\n    md5 = ngx.md5(text)\n\
    \  end\n  return md5\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0zw6hy4e.lua:8:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmp0zw6hy4e.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp0zw6hy4e.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826
- exit_code: 1
  program: "-- Given a string 'text', return its md5 hash equivalent string.\n-- If\
    \ 'text' is an empty string, return None.\nlocal function string_to_md5(text)\n\
    \  local md5 = ngx.md5(text)\n  if text ~= \"\" then\n    return md5:sub(1, 8)\n\
    \  else\n    return nil\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = string_to_md5\n    lu.assertEquals(candidate('Hello world'),\
    \ '3e25960a79dbc69b674cd4ec67a72c62')\n    lu.assertEquals(candidate(''), None)\n\
    \    lu.assertEquals(candidate('A B C'), '0ef78513b0cb8cef12743f5aeb35f888')\n\
    \    lu.assertEquals(candidate('password'), '5f4dcc3b5aa765d61d8327deb882cf99')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmposqr9h22.lua:4:\
    \ attempt to index a nil value (global 'ngx')\nstack traceback:\n\t/tmp/tmposqr9h22.lua:4:\
    \ in local 'candidate'\n\t/tmp/tmposqr9h22.lua:15: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1660014826

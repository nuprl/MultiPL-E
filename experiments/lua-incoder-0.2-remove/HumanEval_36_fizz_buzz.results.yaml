language: lua
name: HumanEval_36_fizz_buzz
results:
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 11 do\n        if n % 11 == 1 then\n            count =\
    \ count + 1\n        end\n        n = math.floor(n/11)\n    end\n    while n >=\
    \ 13 do\n        if n % 13 == 1 then\n            count = count + 1\n        end\n\
    \        n = math.floor(n/13)\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2fct4tm3.lua:23:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp2fct4tm3.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 11)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_1venqse.lua:6:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp_1venqse.lua:6:\
    \ in function 'fizz_buzz'\n\t/tmp/tmp_1venqse.lua:6: in function 'fizz_buzz'\n\
    \t/tmp/tmp_1venqse.lua:6: in function 'fizz_buzz'\n\t/tmp/tmp_1venqse.lua:6: in\
    \ function 'fizz_buzz'\n\t/tmp/tmp_1venqse.lua:6: in function 'candidate'\n\t\
    /tmp/tmp_1venqse.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lmpcn7d.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp5lmpcn7d.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/11)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/13)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpctuu5kyd.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpctuu5kyd.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  local count = 0\n  while n >= 11 do\n    count\
    \ = count + 1\n    local remainder = n % 11\n    n = n / 11\n    if remainder\
    \ == 7 then\n      count = count + 1\n    end\n  end\n  while n >= 13 do\n   \
    \ count = count + 1\n    local remainder = n % 13\n    n = n / 13\n    if remainder\
    \ == 7 then\n      count = count + 1\n    end\n  end\n  return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1dyg_ngo.lua:29:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp1dyg_ngo.lua:29: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ n end\n  if n % 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9qffbkps.lua:14:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmp9qffbkps.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 0 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 0 then\n      count = count + 1\n    end\n    n = n / 13\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvjl1t4jb.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpvjl1t4jb.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 1000 and n >= 100 and n % 11 == 0 and n % 13 == 0\n    \
    \    do\n            count = count + 1\n            n = n / 10\n        end\n\
    \    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiy02f01g.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpiy02f01g.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 1 then\n      count = count + 1\n  \
    \  end\n    if n % 13 == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsea2muup.lua:20:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpsea2muup.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 11)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_1venqse.lua:6:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp_1venqse.lua:6:\
    \ in function 'fizz_buzz'\n\t/tmp/tmp_1venqse.lua:6: in function 'fizz_buzz'\n\
    \t/tmp/tmp_1venqse.lua:6: in function 'fizz_buzz'\n\t/tmp/tmp_1venqse.lua:6: in\
    \ function 'fizz_buzz'\n\t/tmp/tmp_1venqse.lua:6: in function 'candidate'\n\t\
    /tmp/tmp_1venqse.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if i % 11 == 0 and i % 13 == 0 then\n    \
    \        count = count + 1\n        end\n    end\n    return count\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84cbvy60.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp84cbvy60.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 1 then\n      count = count + 1\n  \
    \  end\n    if n % 13 == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsea2muup.lua:20:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpsea2muup.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  elseif n < 10 then\n    return 1\n  elseif n < 100 then\n\
    \    return 2\n  elseif n < 1000 then\n    return 3\n  elseif n < 10000 then\n\
    \    return 4\n  elseif n < 100000 then\n    return 5\n  elseif n < 1000000 then\n\
    \    return 6\n  elseif n < 10000000 then\n    return 7\n  elseif n < 100000000\
    \ then\n    return 8\n  elseif n < 1000000000 then\n    return 9\n  else\n   \
    \ return 10\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp86429b_7.lua:31:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmp86429b_7.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ n end\n  if n % 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9qffbkps.lua:14:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmp9qffbkps.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if\
    \ n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppnpwjtnt.lua:16:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmppnpwjtnt.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  local count = 0\n  for i = 1, n do\n    if i % 11 ==\
    \ 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp46t1r3hg.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp46t1r3hg.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  if n % 11 == 1 then return n end\n  if n % 13 ==\
    \ 1 then return n end\n  return nil\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpl_l8il6q.lua:14:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpl_l8il6q.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 13\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppfr1c39c.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmppfr1c39c.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  if n >= 13 then\n    count = count + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyd0acege.lua:21:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpyd0acege.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 1 then\n      count = count + 1\n  \
    \  end\n    if n % 13 == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsea2muup.lua:20:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpsea2muup.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 1 then\n    return\
    \ 3\n  end\n  if n % 13 == 1 then\n    return 4\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyfjw2hvk.lua:25:\
    \ expected: 2, actual: 3\nstack traceback:\n\t/tmp/tmpyfjw2hvk.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n / 10)\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n / 10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwqgib5e6.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpwqgib5e6.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lmpcn7d.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp5lmpcn7d.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 1000 and n <= 9999 do\n        if n % 11 == 0 and n % 13\
    \ == 0 then\n            count = count + 1\n        end\n        n = n / 10\n\
    \    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3cqtf4yp.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp3cqtf4yp.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  local count = 0\n  while n >= 11 do\n    count = count\
    \ + 1\n    n = math.floor(n/10)\n  end\n  while n >= 13 do\n    count = count\
    \ + 1\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgcuxey2a.lua:19:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpgcuxey2a.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp06fckv46.lua:13:\
    \ expected: 2, actual: 8\nstack traceback:\n\t/tmp/tmp06fckv46.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lmpcn7d.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp5lmpcn7d.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 11 do\n        if n % 11 == 1 then\n            count =\
    \ count + 1\n        end\n        n = n / 11\n    end\n    while n >= 13 do\n\
    \        if n % 13 == 1 then\n            count = count + 1\n        end\n   \
    \     n = n / 13\n    end\n    return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm08y5gf1.lua:23:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpm08y5gf1.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  elseif n < 10 then\n    return 1\n  elseif n < 100 then\n\
    \    return 2\n  elseif n < 1000 then\n    return 3\n  elseif n < 10000 then\n\
    \    return 4\n  elseif n < 100000 then\n    return 5\n  elseif n < 1000000 then\n\
    \    return 6\n  elseif n < 10000000 then\n    return 7\n  elseif n < 100000000\
    \ then\n    return 8\n  elseif n < 1000000000 then\n    return 9\n  elseif n <\
    \ 10000000000 then\n    return 10\n  elseif n < 100000000000 then\n    return\
    \ 11\n  elseif n < 1000000000000 then\n    return 12\n  elseif n < 10000000000000\
    \ then\n    return 13\n  else\n    return 14\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpik96ia8a.lua:39:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpik96ia8a.lua:39: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    local digit = n % 10\n    if digit == 7 then\n  \
    \    count = count + 1\n    end\n    n = math.floor(n/10)\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0gzvnt_r.lua:18:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp0gzvnt_r.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n == 0 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 0\n  end\n  if n % 11 == 1 then\n    return\
    \ 1\n  end\n  if n % 13 == 1 then\n    return 2\n  end\n  return 3\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprmu1oj1m.lua:24:\
    \ expected: 0, actual: 3\nstack traceback:\n\t/tmp/tmprmu1oj1m.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    local remainder = n % 10\n    if remainder == 7 then\n\
    \      if remainder == 11 then\n        count = count + 1\n      elseif remainder\
    \ == 13 then\n        count = count + 1\n      end\n    end\n    n = n / 10\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptoom2e0q.lua:22:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmptoom2e0q.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ n end\n  if n % 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9qffbkps.lua:14:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmp9qffbkps.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  local count = 0\n  local i = 1\n  while i <= n do\n \
    \   if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  \
    \  i = i + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx012mmu8.lua:19:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpx012mmu8.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if n % 11 == 0 and n % 13 == 0 then\n    \
    \        count = count + 1\n        end\n        n = n / 10\n    end\n    return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3l3qu4e.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpm3l3qu4e.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  local count = 0\n  local i = 1\n  while i <= n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \    i = i + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6srg9ydj.lua:21:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp6srg9ydj.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ n end\n  if n % 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9qffbkps.lua:14:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmp9qffbkps.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  elseif n < 10 then\n    return 1\n  elseif n < 100 then\n\
    \    return 2\n  elseif n < 1000 then\n    return 3\n  elseif n < 10000 then\n\
    \    return 4\n  elseif n < 100000 then\n    return 5\n  elseif n < 1000000 then\n\
    \    return 6\n  elseif n < 10000000 then\n    return 7\n  elseif n < 100000000\
    \ then\n    return 8\n  elseif n < 1000000000 then\n    return 9\n  elseif n <\
    \ 10000000000 then\n    return 10\n  elseif n < 100000000000 then\n    return\
    \ 11\n  elseif n < 1000000000000 then\n    return 12\n  elseif n < 10000000000000\
    \ then\n    return 13\n  else\n    return 0\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgb2aag2f.lua:39:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmpgb2aag2f.lua:39: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    n = math.floor(n/11)\n  end\n  while n >= 13 do\n    count = count + 1\n\
    \    local remainder = n % 13\n    n = math.floor(n/13)\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpquvo9z7l.lua:20:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpquvo9z7l.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n == 0 then\n    return 1\n  end\n  if n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return fizz_buzz(n / 10) + 1\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0g_je12x.lua:21:\
    \ expected: 0, actual: 327\nstack traceback:\n\t/tmp/tmp0g_je12x.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 1 then\n      count = count + 1\n  \
    \  end\n    if n % 13 == 1 then\n      count = count + 1\n    end\n    n = math.floor(n/10)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsea2muup.lua:20:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpsea2muup.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = n / 11\n  end\n  while\
    \ n >= 13 do\n    count = count + 1\n    n = n / 13\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjna_pz_i.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpjna_pz_i.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  local count = 0\n  for i = 1, n do\n    if i %\
    \ 11 == 0 and i % 13 == 0 then count = count + 1 end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwpve0luu.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpwpve0luu.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  local count = 0\n  for i = 1, n do\n    if i %\
    \ 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpszn7llia.lua:19:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpszn7llia.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lmpcn7d.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp5lmpcn7d.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 1 then\n    return\
    \ 3\n  end\n  if n % 13 == 1 then\n    return 4\n  end\n  return 5\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpokso16qb.lua:24:\
    \ expected: 0, actual: 5\nstack traceback:\n\t/tmp/tmpokso16qb.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if\
    \ n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppnpwjtnt.lua:16:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmppnpwjtnt.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 13\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppfr1c39c.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmppfr1c39c.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if n % 11 == 0 and n % 13 == 0 then\n    \
    \        count = count + 1\n        end\n        n = n / 10\n    end\n    return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3l3qu4e.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpm3l3qu4e.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lmpcn7d.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp5lmpcn7d.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n > 0 do\n        if n % 11 == 0 then\n            count = count\
    \ + 1\n        end\n        if n % 13 == 0 then\n            count = count + 1\n\
    \        end\n        n = math.floor(n/10)\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyk49rkhf.lua:20:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpyk49rkhf.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  if n < 10 then return n end\n  if n % 11 == 0 and n % 13\
    \ == 0 then return n end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 11)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjhgvkma4.lua:6:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpjhgvkma4.lua:6:\
    \ in function 'fizz_buzz'\n\t/tmp/tmpjhgvkma4.lua:6: in function 'fizz_buzz'\n\
    \t/tmp/tmpjhgvkma4.lua:6: in function 'fizz_buzz'\n\t/tmp/tmpjhgvkma4.lua:6: in\
    \ function 'fizz_buzz'\n\t/tmp/tmpjhgvkma4.lua:6: in function 'candidate'\n\t\
    /tmp/tmpjhgvkma4.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return 0 end\n  local count = 0\n  while n > 0 do\n    count = count +\
    \ 1\n    local remainder = n % 10\n    if remainder == 7 then\n      if remainder\
    \ == 11 then\n        count = count + 1\n      elseif remainder == 13 then\n \
    \       count = count + 1\n      end\n    end\n    n = n / 10\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3gl9khb8.lua:23:\
    \ expected: 0, actual: 326\nstack traceback:\n\t/tmp/tmp3gl9khb8.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 0\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 3\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoz1lqxs1.lua:24:\
    \ expected: 0, actual: 3\nstack traceback:\n\t/tmp/tmpoz1lqxs1.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lmpcn7d.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp5lmpcn7d.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7n2wraq.lua:23:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpn7n2wraq.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    local remainder = n % 10\n    if remainder == 7 then\n\
    \      count = count + 1\n    end\n    n = math.floor(n / 10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplc8_bdij.lua:18:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmplc8_bdij.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7n2wraq.lua:23:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpn7n2wraq.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if\
    \ n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppnpwjtnt.lua:16:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmppnpwjtnt.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ fizz_buzz(n / 11) end\n  if n % 13 == 0 then return fizz_buzz(n / 13) end\n\
    \  return n\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp106z_xnp.lua:13:\
    \ expected: 0, actual: 50\nstack traceback:\n\t/tmp/tmp106z_xnp.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/11)\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/13)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkpyrddl4.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpkpyrddl4.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  local count = 0\n  for i = 1, n do\n    if i % 11 ==\
    \ 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp46t1r3hg.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp46t1r3hg.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  local count = 0\n  while n >= 11 do\n    count\
    \ = count + 1\n    n = n / 11\n  end\n  while n >= 13 do\n    count = count +\
    \ 1\n    n = n / 13\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7um_rkhx.lua:21:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmp7um_rkhx.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if n % 11 == 0 and n % 13 == 0 then\n    \
    \        count = count + 1\n        end\n        n = n / 10\n    end\n    return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3l3qu4e.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpm3l3qu4e.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if n % 11 == 0 then count = count + 1 end\n\
    \        if n % 13 == 0 then count = count + 1 end\n        n = math.floor(n/10)\n\
    \    end\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyitjialu.lua:15:\
    \ expected: 0, actual: 96\nstack traceback:\n\t/tmp/tmpyitjialu.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 0 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 0 then\n      count = count + 1\n    end\n    n = n / 13\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvjl1t4jb.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpvjl1t4jb.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n > 0 do\n        if n % 11 == 0 then\n            count = count\
    \ + 1\n        end\n        if n % 13 == 0 then\n            count = count + 1\n\
    \        end\n        n = math.floor(n/10)\n    end\n    return count\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyk49rkhf.lua:20:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpyk49rkhf.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/11)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/13)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpctuu5kyd.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpctuu5kyd.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 0 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 0 then\n      count = count + 1\n    end\n    n = n / 13\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvjl1t4jb.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpvjl1t4jb.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if n % 11 == 0 and n % 13 == 0 then\n    \
    \        count = count + 1\n        end\n        n = n / 10\n    end\n    return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm3l3qu4e.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpm3l3qu4e.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 11 do\n        if n % 11 == 1 then\n            count =\
    \ count + 1\n        end\n        n = math.floor(n/11)\n    end\n    while n >=\
    \ 13 do\n        if n % 13 == 1 then\n            count = count + 1\n        end\n\
    \        n = math.floor(n/13)\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2fct4tm3.lua:23:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp2fct4tm3.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n > 0 do\n        if n % 11 == 0 then\n            count = count\
    \ + 1\n        end\n        if n % 13 == 0 then\n            count = count + 1\n\
    \        end\n        n = n / 10\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpam3_d7eq.lua:20:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpam3_d7eq.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn7n2wraq.lua:23:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmpn7n2wraq.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 13\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppfr1c39c.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmppfr1c39c.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  local count = 0\n  local i = 1\n  while i <= n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \    i = i + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6srg9ydj.lua:21:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp6srg9ydj.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 11 do\n        if n % 11 == 0 then\n            count =\
    \ count + 1\n        end\n        n = math.floor(n/11)\n    end\n    while n >=\
    \ 13 do\n        if n % 13 == 0 then\n            count = count + 1\n        end\n\
    \        n = math.floor(n/13)\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp111k5r82.lua:23:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp111k5r82.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  local count = 0\n  for i = 1, n do\n    if i %\
    \ 11 == 0 and i % 13 == 0 then count = count + 1 end\n  end\n  return count\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwpve0luu.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpwpve0luu.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n == 0 then\n    return 1\n  end\n  if n % 11\
    \ == 0 then\n    return fizz_buzz(n / 11) + 1\n  end\n  if n % 13 == 0 then\n\
    \    return fizz_buzz(n / 13) + 1\n  end\n  return 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaz496s0u.lua:22:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpaz496s0u.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  local count = 0\n  while n >= 11 do\n    count = count\
    \ + 1\n    n = math.floor(n/10)\n  end\n  while n >= 13 do\n    count = count\
    \ + 1\n    n = math.floor(n/10)\n  end\n  return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgcuxey2a.lua:19:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpgcuxey2a.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n == 0 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 1\n  end\n  if n % 11 == 1 then\n    return\
    \ 2\n  end\n  if n % 13 == 1 then\n    return 3\n  end\n  return 4\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd8xyfk7p.lua:24:\
    \ expected: 0, actual: 4\nstack traceback:\n\t/tmp/tmpd8xyfk7p.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  local count = 0\n  local i = 1\n  while i <= n\
    \ do\n    if i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n\
    \    i = i + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6srg9ydj.lua:21:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp6srg9ydj.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  local count = 0\n  while n >= 11 do\n    count = count\
    \ + 1\n    local remainder = n % 11\n    n = n / 11\n  end\n  while n >= 13 do\n\
    \    count = count + 1\n    local remainder = n % 13\n    n = n / 13\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppw7boqf9.lua:21:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmppw7boqf9.lua:21: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  return fizz_buzz(n - 10) + fizz_buzz(n - 13)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppu7d4ng2.lua:6:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmppu7d4ng2.lua:6:\
    \ in function 'fizz_buzz'\n\t/tmp/tmppu7d4ng2.lua:6: in function 'fizz_buzz'\n\
    \t/tmp/tmppu7d4ng2.lua:6: in function 'fizz_buzz'\n\t/tmp/tmppu7d4ng2.lua:6: in\
    \ function 'fizz_buzz'\n\t/tmp/tmppu7d4ng2.lua:6: in function 'candidate'\n\t\
    /tmp/tmppu7d4ng2.lua:12: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/11)\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/13)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkpyrddl4.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpkpyrddl4.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    if n % 11 == 1 then\n      count = count + 1\n\
    \    end\n    n = math.floor(n/11)\n  end\n  while n >= 13 do\n    if n % 13 ==\
    \ 1 then\n      count = count + 1\n    end\n    n = math.floor(n/13)\n  end\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn21mt375.lua:23:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpn21mt375.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  if n < 10 then return n end\n  if n % 11 == 0 and n % 13\
    \ == 0 then return n end\n  if n % 11 == 1 then return n end\n  if n % 13 == 1\
    \ then return n end\n  return fizz_buzz(n - 10)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9q4ohbz6.lua:14:\
    \ expected: 0, actual: 40\nstack traceback:\n\t/tmp/tmp9q4ohbz6.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return 0 end\n  if n < 10 then return 1 end\n  if n < 100 then return 2\
    \ end\n  if n < 1000 then return 3 end\n  if n < 10000 then return 4 end\n  if\
    \ n < 100000 then return 5 end\n  if n < 1000000 then return 6 end\n  if n < 10000000\
    \ then return 7 end\n  if n < 100000000 then return 8 end\n  if n < 1000000000\
    \ then return 9 end\n  if n < 10000000000 then return 10 end\n  if n < 100000000000\
    \ then return 11 end\n  if n < 1000000000000 then return 12 end\n  if n < 10000000000000\
    \ then return 13 end\n  return 14\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp26w3iq6k.lua:23:\
    \ expected: 0, actual: 2\nstack traceback:\n\t/tmp/tmp26w3iq6k.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp06fckv46.lua:13:\
    \ expected: 2, actual: 8\nstack traceback:\n\t/tmp/tmp06fckv46.lua:13: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  if n < 10 then return n end\n  if n % 11 == 0 and n % 13\
    \ == 0 then return n end\n  local count = 0\n  for i = 1, n do\n    if i % 11\
    \ == 0 and i % 13 == 0 then count = count + 1 end\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcs4frcdv.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpcs4frcdv.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n > 0 do\n    if n % 11 == 0 then count = count + 1 end\n    if\
    \ n % 13 == 0 then count = count + 1 end\n    n = math.floor(n/10)\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppnpwjtnt.lua:16:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmppnpwjtnt.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 2\n  end\n  if n % 11 == 0 then\n    return\
    \ 1\n  end\n  if n % 13 == 0 then\n    return 2\n  end\n  return 0\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5lmpcn7d.lua:26:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmp5lmpcn7d.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  local count = 0\n  local i = 1\n  while i <= n do\n    if\
    \ i % 11 == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n    i =\
    \ i + 1\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpa6n2dsyp.lua:19:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpa6n2dsyp.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ n end\n  if n % 13 == 0 then return n end\n  local count = 0\n  for i = 1, n\
    \ do\n    if i % 11 == 0 then count = count + 1 end\n    if i % 13 == 0 then count\
    \ = count + 1 end\n  end\n  return count\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg1sw9qv2.lua:18:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg1sw9qv2.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/11)\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = math.floor(n/13)\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkpyrddl4.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpkpyrddl4.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/11)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/13)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpctuu5kyd.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpctuu5kyd.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then\n    return 0\n  end\n  if n < 10 then\n    return 1\n  end\n  if n % 11\
    \ == 0 and n % 13 == 0 then\n    return 0\n  end\n  return fizz_buzz(n - 10)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbafvp1an.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpbafvp1an.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 11 do\n        if n % 11 == 1 then\n            count =\
    \ count + 1\n        end\n        n = n / 11\n    end\n    while n >= 13 do\n\
    \        if n % 13 == 1 then\n            count = count + 1\n        end\n   \
    \     n = n / 13\n    end\n    return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm08y5gf1.lua:23:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpm08y5gf1.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  if n < 10 then return n end\n  if n % 11 == 0 and n % 13\
    \ == 0 then return n end\n  local count = 0\n  for i = 1, n do\n    if i % 11\
    \ == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpihw0ajwf.lua:19:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpihw0ajwf.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    local remainder = n % 11\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 11\n\
    \  end\n  while n >= 13 do\n    count = count + 1\n    local remainder = n % 13\n\
    \    if remainder == 7 then\n      count = count + 1\n    end\n    n = n / 13\n\
    \  end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppfr1c39c.lua:26:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmppfr1c39c.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  local i = 1\n  while i <= n do\n    if i % 11 == 0 and i % 13 == 0 then\n\
    \      count = count + 1\n    end\n    i = i + 1\n  end\n  return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfyvby3mi.lua:18:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpfyvby3mi.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 then return\
    \ n end\n  if n % 13 == 0 then return n end\n  return fizz_buzz(n - 10)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9qffbkps.lua:14:\
    \ expected: 2, actual: 78\nstack traceback:\n\t/tmp/tmp9qffbkps.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if i % 11 == 0 and i % 13 == 0 then\n    \
    \        count = count + 1\n        end\n    end\n    return count\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp84cbvy60.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp84cbvy60.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return nil end\n  if n < 10 then return n end\n  if n % 11 == 0 and n %\
    \ 13 == 0 then return n end\n  if n % 11 == 0 then return \"11\" end\n  if n %\
    \ 13 == 0 then return \"13\" end\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkrm1ke8n.lua:14:\
    \ expected: 0, actual: nil\nstack traceback:\n\t/tmp/tmpkrm1ke8n.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    for i = 1, n do\n        if ((i % 11) == 0) or ((i % 13) == 0) then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg19z2_8_.lua:15:\
    \ expected: 0, actual: 7\nstack traceback:\n\t/tmp/tmpg19z2_8_.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return 0 end\n  if n < 10 then return 1 end\n  if n < 100 then return 2\
    \ end\n  if n < 1000 then return 3 end\n  if n < 10000 then return 4 end\n  if\
    \ n < 100000 then return 5 end\n  if n < 1000000 then return 6 end\n  if n < 10000000\
    \ then return 7 end\n  if n < 100000000 then return 8 end\n  if n < 1000000000\
    \ then return 9 end\n  if n < 10000000000 then return 10 end\n  if n < 100000000000\
    \ then return 11 end\n  if n < 1000000000000 then return 12 end\n  if n < 10000000000000\
    \ then return 13 end\n  if n < 100000000000000 then return 14 end\n  if n < 1000000000000000\
    \ then return 15 end\n  if n < 10000000000000000 then return 16 end\n  if n <\
    \ 100000000000000000 then return 17 end\n  if n < 1000000000000000000 then return\
    \ 18 end\n  if n < 10000000000000000000 then return 19 end\n  if n < 100000000000000000000\
    \ then return 20 end\n  if n < 1000000000000000000000 then return 21 end\n  if\
    \ n < 10000000000000000000000 then return 22 end\n  if n < 100000000000000000000000\
    \ then return 23 end\n  if n < 1000000000000000000000000 then return 24 end\n\
    \  if n < 10000000000000000000000000 then return 25 end\n  if n < 100000000000000000000000000\
    \ then return 26 end\n  if n < 1000000000000000000000000000 then return 27 end\n\
    \  if n < 10000000000000000000000000000 then return 28 end\n  if n < 100000000000000000000000000000\
    \ then return 29 end\n  if n < 1000000000000000000000000000000 then return 30\
    \ end\n  if n < 10000000000000000000000000000000 then return 31 end\n  if n <\
    \ 100000000000000000000000000000000 then return 32 end\n  if n < 1000000000000000000000000000000000\
    \ then return 33 end\n  if n < 10000000000000000000000000000000000 then return\
    \ 34 end\n  if n < 100000000000000000000000000000000000 then return 35 end\n \
    \ if n < 1000000000000000000000000000000000000 then return 36 end\n  if n < 10000000000000000000000000000000000000\
    \ then return 37 end\n  if n < 100000000000000000000000000000000000000 then return\
    \ 38 end\n  if n < 1000000000000000000000000000000000000000 then return 39 end\n\
    \  if n < 10000000000000000000000000000000000000000 then return 40 end\n  if n\
    \ < 100000000000000000000000000000000000000000 then return 41 end\n  if n < 1000000000000000000000000000000000000000000\
    \ then return 42 end\n  if n < 10000000000000000000000000000000000000000000 then\
    \ return 43 end\n  if n < 100000000000000000000000000000000000000000000 then return\
    \ 44 end\n  if n < 1000000000000000000000000000000000000000000000 then return\
    \ 45 end\n  if n < 10000000000000000000000000000000000000000000000 then return\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fizz_buzz\n\
    \    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78), 2)\n\
    \    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100), 3)\n\
    \    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpym3q9fjt.lua:50: ''end'' expected (to close ''if'' at line
    49) near ''=''

    '
  stdout: ''
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  while n >= 11 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  while n >= 13 do\n    count = count + 1\n    n = math.floor(n/10)\n \
    \ end\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpdaxt0z.lua:18:\
    \ expected: 0, actual: 1\nstack traceback:\n\t/tmp/tmpxpdaxt0z.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  local count = 0\n  while n > 0 do\n    count = count + 1\n\
    \    local remainder = n % 10\n    if remainder == 7 then\n      if remainder\
    \ == 11 then\n        count = count + 1\n      elseif remainder == 13 then\n \
    \       count = count + 1\n      end\n    end\n    n = n / 10\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy0ny8mbv.lua:23:\
    \ expected: 0, actual: 326\nstack traceback:\n\t/tmp/tmpy0ny8mbv.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return end\n  if n < 10 then return n end\n  if n % 11 == 0 and n % 13\
    \ == 0 then return n end\n  local count = 0\n  for i = 1, n do\n    if i % 11\
    \ == 0 and i % 13 == 0 then\n      count = count + 1\n    end\n  end\n  return\
    \ count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpihw0ajwf.lua:19:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmpihw0ajwf.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n >= 11 do\n        if n % 11 == 1 then\n            count =\
    \ count + 1\n        end\n        n = math.floor(n/11)\n    end\n    while n >=\
    \ 13 do\n        if n % 13 == 1 then\n            count = count + 1\n        end\n\
    \        n = math.floor(n/13)\n    end\n    return count\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2fct4tm3.lua:23:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmp2fct4tm3.lua:23: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  if n < 0\
    \ then return 0 end\n  if n < 10 then return 1 end\n  if n % 11 == 0 then return\
    \ 1 end\n  if n % 13 == 0 then return 2 end\n  return 0\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprj8yor0s.lua:15:\
    \ expected: 3, actual: 0\nstack traceback:\n\t/tmp/tmprj8yor0s.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n  local count\
    \ = 0\n  for i = 1, n do\n    if i % 11 == 0 and i % 13 == 0 then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = fizz_buzz\n    lu.assertEquals(candidate(50),\
    \ 0)\n    lu.assertEquals(candidate(78), 2)\n    lu.assertEquals(candidate(79),\
    \ 3)\n    lu.assertEquals(candidate(100), 3)\n    lu.assertEquals(candidate(200),\
    \ 6)\n    lu.assertEquals(candidate(4000), 192)\n    lu.assertEquals(candidate(10000),\
    \ 639)\n    lu.assertEquals(candidate(100000), 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0rj9hle1.lua:16:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp0rj9hle1.lua:16: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583
- exit_code: 1
  program: "-- Return the number of times the digit 7 appears in integers less than\
    \ n which are divisible by 11 or 13.\nlocal function fizz_buzz(n)\n    local count\
    \ = 0\n    while n > 0 do\n        if n % 11 == 0 and n % 13 == 0 then\n     \
    \       count = count + 1\n        end\n        n = math.floor(n/10)\n    end\n\
    \    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = fizz_buzz\n    lu.assertEquals(candidate(50), 0)\n    lu.assertEquals(candidate(78),\
    \ 2)\n    lu.assertEquals(candidate(79), 3)\n    lu.assertEquals(candidate(100),\
    \ 3)\n    lu.assertEquals(candidate(200), 6)\n    lu.assertEquals(candidate(4000),\
    \ 192)\n    lu.assertEquals(candidate(10000), 639)\n    lu.assertEquals(candidate(100000),\
    \ 8026)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4yexy3dv.lua:17:\
    \ expected: 2, actual: 0\nstack traceback:\n\t/tmp/tmp4yexy3dv.lua:17: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750583

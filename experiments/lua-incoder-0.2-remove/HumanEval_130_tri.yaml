name: HumanEval_130_tri
language: lua
prompt: "-- Everyone knows Fibonacci sequence, it was studied deeply by mathematicians\
  \ in \n-- the last couple centuries. However, what people don't know is Tribonacci\
  \ sequence.\n-- Tribonacci sequence is defined by the recurrence:\nlocal function\
  \ tri(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = tri\n\
  \    lu.assertEquals(candidate(3), {1, 3, 2.0, 8.0})\n    lu.assertEquals(candidate(4),\
  \ {1, 3, 2.0, 8.0, 3.0})\n    lu.assertEquals(candidate(5), {1, 3, 2.0, 8.0, 3.0,\
  \ 15.0})\n    lu.assertEquals(candidate(6), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0})\n\
  \    lu.assertEquals(candidate(7), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0})\n   \
  \ lu.assertEquals(candidate(8), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0})\n \
  \   lu.assertEquals(candidate(9), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0, 35.0})\n\
  \    lu.assertEquals(candidate(20), {1, 3, 2.0, 8.0, 3.0, 15.0, 4.0, 24.0, 5.0,\
  \ 35.0, 6.0, 48.0, 7.0, 63.0, 8.0, 80.0, 9.0, 99.0, 10.0, 120.0, 11.0})\n    lu.assertEquals(candidate(0),\
  \ {1})\n    lu.assertEquals(candidate(1), {1, 3})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: []
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

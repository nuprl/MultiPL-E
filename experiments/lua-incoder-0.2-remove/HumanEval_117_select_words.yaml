name: HumanEval_117_select_words
language: lua
prompt: "-- Given a string s and a natural number n, you have been tasked to implement\
  \ \n-- a function that returns a list of all words from string s that contain exactly\
  \ \n-- n consonants, in order these words appear in the string s.\n-- If the string\
  \ s is empty then the function should return an empty list.\n-- Note: you may assume\
  \ the input string contains only letters and spaces.\n-- Examples:\nlocal function\
  \ select_words(s, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = select_words\n\
  \    lu.assertEquals(candidate('Mary had a little lamb', 4), {'little'})\n    lu.assertEquals(candidate('Mary\
  \ had a little lamb', 3), {'Mary', 'lamb'})\n    lu.assertEquals(candidate('simple\
  \ white space', 2), {})\n    lu.assertEquals(candidate('Hello world', 4), {'world'})\n\
  \    lu.assertEquals(candidate('Uncle sam', 3), {'Uncle'})\n    lu.assertEquals(candidate('',\
  \ 4), {})\n    lu.assertEquals(candidate('a b c d e f', 1), {'b', 'c', 'd', 'f'})\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local words = {}\n    for i = 1, #s do\n        local c = s[i]\n\
    \        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or c == 'u' then\n  \
    \          words[#words + 1] = s\n        end\n    end\n    return words\nend",
  "  -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n      \
    \  if string.sub(s,i,i) == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n            table.insert(words, string.sub(s,i,i))\n        end\n    end\n\
    \    return words\nend", "    -- your code here\nend", "    local words = {}\n\
    \    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\"\
    , i) then\n            table.insert(words, string.sub(s, \"^\", i))\n        end\n\
    \    end\n    return words\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n          \
    \  table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n    return\
    \ words\nend", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,\
    \ i, i+n) == string.sub(s,1,n) then\n            table.insert(words, string.sub(s,1,n))\n\
    \        end\n    end\n    return words\nend", "    -- your code here\nend", " \
    \   local words = {}\n    local i = 0\n    while i < #s do\n        if string.sub(s,\
    \ i, i+n) == string.sub(s, i, i+n) then\n            table.insert(words, string.sub(s,\
    \ i, i+n))\n        end\n        i = i + 1\n    end\n    return words\nend", " \
    \ -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n     \
    \   if string.sub(s,i,i) == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n            table.insert(words, string.sub(s,i,i))\n        end\n    end\n\
    \    return words\nend", "    local words = {}\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n            table.insert(words,string.sub(s,i,i))\n        end\n    end\n\
    \    return words\nend", "    local words = {}\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n            table.insert(words, string.sub(s,1,i))\n        end\n    end\n\
    \    return words\nend", "    -- your code here\nend", "    -- your code here\n\
    end", "  -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n            table.insert(words,\
    \ string.sub(s, 1, n))\n        end\n    end\n    return words\nend", "  -- your\
    \ code here\nend", "   -- your code here\nend", "    local words = {}\n    for\
    \ i = 1, #s do\n        local char = s[i]\n        if char == \" \" then\n   \
    \         table.insert(words, \"\")\n        elseif char == \"a\" then\n     \
    \       table.insert(words, \"a\")\n        elseif char == \"e\" then\n      \
    \      table.insert(words, \"e\")\n        elseif char == \"i\" then\n       \
    \     table.insert(words, \"i\")\n        elseif char == \"o\" then\n        \
    \    table.insert(words, \"o\")\n        elseif char == \"u\" then\n         \
    \   table.insert(words, \"u\")\n        elseif char == \"y\" then\n          \
    \  table.insert(words, \"y\")\n        elseif char == \"A\" then\n           \
    \ table.insert(words, \"A\")\n        elseif char == \"E\" then\n            table.insert(words,\
    \ \"E\")\n        elseif char == \"I\" then\n            table.insert(words, \"\
    I\")\n        elseif char == \"O\" then\n            table.insert(words, \"O\"\
    )\n        elseif char == \"U\" then\n            table.insert(words, \"U\")\n\
    \        elseif char == \"Y\" then\n            table.insert(words, \"Y\")\n \
    \       elseif char == \"B\" then\n            table.insert(words, \"B\")\n  \
    \      elseif char == \"C\" then\n            table.insert(words, \"C\")\n   \
    \     elseif char == \"D\" then\n            table.insert(words, \"D\")\n    \
    \    elseif char == \"F\" then\n            table.insert(words, \"F\")\n     \
    \   elseif char == \"G\" then\n            table.insert(words, \"G\")\n      \
    \  elseif char == \"H\" then\n            table.insert(words, \"H\")\n       \
    \ elseif char == \"J\" then\n            table.insert(words, \"J\")\n        elseif\
    \ char == \"K\" then\n            table.insert(words, \"K\")\n        elseif char\
    \ == \"L\" then\n            table.insert(words, \"L\")\n        elseif char ==\
    \ \"M\" then\n            table.insert(words, \"M\")\n        elseif char == \"\
    N\" then\n            table.insert(words, \"N\")\n        elseif char == \"P\"\
    \ then\n            table.insert(words, \"P\")\n        elseif char == \"Q\" then\n\
    \            table.insert(words, \"Q\")\n        elseif char == \"R\" then\n \
    \           table.insert(words, \"R\")\n        elseif char == \"S\" then\n  \
    \          table.insert(words, \"S\")\n        elseif char == \"T\" then\n   \
    \         table.insert(words, \"T\")\n        elseif char == \"V\" then\n    \
    \        table.insert(words, \"V\")\n        elseif char == \"W\" then\n     \
    \       table.insert(words, \"W\")\n        elseif char == \"", "    local words\
    \ = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ \"^\", i) then\n            table.insert(words, string.sub(s, \"^\", i))\n \
    \       end\n    end\n    return words\nend", "    local words = {}\n    local\
    \ i = 0\n    while i < #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ \"^\", i) then\n            table.insert(words, string.sub(s, \"^\", i))\n \
    \       end\n        i = i + 1\n    end\n    return words\nend", "  -- your code\
    \ here\nend", "    -- your code here\nend", "    local words = {}\n    for i =\
    \ 1, #s do\n        local c = s[i]\n        if c == 'a' or c == 'e' or c == 'i'\
    \ or c == 'o' or c == 'u' then\n            table.insert(words, s)\n        end\n\
    \    end\n    return words\nend", "    -- your code here\nend", "    local words\
    \ = {}\n    for i = 1, #s do\n        if string.sub(s,i,i) ~= \" \" then\n   \
    \         table.insert(words, string.sub(s,i,i))\n        end\n    end\n    return\
    \ words\nend", "  -- your code here\nend", "    local words = {}\n    for i =\
    \ 1, #s do\n        if string.sub(s,i,i) == string.sub(s,i,i) then\n         \
    \   table.insert(words, string.sub(s,1,i))\n        end\n    end\n    return words\n\
    end", "  -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n          \
    \  table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n    return\
    \ words\nend", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,\
    \ i, i+n) == string.sub(s, \"^\", i) then\n            table.insert(words, string.sub(s,\
    \ \"^\", i))\n        end\n    end\n    return words\nend", "  -- your code here\n\
    end", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i) then\n     \
    \       table.insert(words, string.sub(s,1,i))\n        end\n    end\n    return\
    \ words\nend", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,\
    \ i, i+n) == string.sub(s, 1, n) then\n            table.insert(words, string.sub(s,\
    \ 1, n))\n        end\n    end\n    return words\nend", "  -- your code here\n\
    end", "  -- your code here\nend", "  -- your code here\nend", "    -- your code\
    \ here\nend", "    local words = {}\n    local i = 1\n    while i <= #s do\n \
    \       if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n            table.insert(words,\
    \ string.sub(s, 1, n))\n        end\n        i = i + 1\n    end\n    return words\n\
    end", "   -- Your code here\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n          \
    \  table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n    return\
    \ words\nend", "    local words = {}\n    \n    -- Your code here\n    \n    return\
    \ words\nend", "   -- Your code here\nend", "   -- your code here\nend", "   \
    \ -- your code here\nend", "    -- your code here\nend", "    local words = {}\n\
    \    for i = 1, #s do\n        local word = s:sub(i,i)\n        if word:sub(1,1)\
    \ == n then\n            table.insert(words, word)\n        end\n    end\n   \
    \ return words\nend", "  -- your code here\nend", "  -- your code here\nend",
  "    -- your code here\nend", "  -- Your code here\nend", "    local words = {}\n\
    \    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, 1, n)\
    \ then\n            table.insert(words, string.sub(s, 1, n))\n        end\n  \
    \  end\n    return words\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n            table.insert(words,\
    \ string.sub(s, 1, n))\n        end\n    end\n    return words\nend", "  -- your\
    \ code here\nend", "  -- your code here\nend", "    local words = {}\n    for\
    \ i = 1, #s do\n        if string.sub(s,i,i) == string.sub(s,i,i) and string.sub(s,i,i)\
    \ == string.sub(s,i,i) then\n            table.insert(words,string.sub(s,i,i))\n\
    \        end\n    end\n    return words\nend", "    local words = {}\n    for\
    \ i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n\
    \            table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n\
    \    return words\nend", "    local words = {}\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n            table.insert(words, string.sub(s,i,i))\n        end\n    end\n\
    \    return words\nend", "    local words = {}\n    local i = 1\n    while i <=\
    \ #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n  \
    \          table.insert(words, string.sub(s, \"^\", i))\n        end\n       \
    \ i = i + 1\n    end\n    return words\nend", "   -- Your code here\nend", " \
    \   -- your code here\nend", "  -- your code here\nend", "    local words = {}\n\
    \    local i = 0\n    while i <= #s do\n        if string.sub(s,i,i+n) == string.sub(s,i,i+n)\
    \ then\n            table.insert(words, string.sub(s,i,i+n))\n        end\n  \
    \      i = i + 1\n    end\n    return words\nend", "  -- your code here\nend",
  "  -- your code here\nend", "  -- your code here\nend", "    local words = {}\n\
    \    for i = 1, #s do\n        if string.sub(s,i,i) == string.sub(s,i,i) then\n\
    \            table.insert(words, string.sub(s,i,i))\n        end\n    end\n  \
    \  return words\nend", "   -- your code here\nend", "  -- your code here\nend",
  "    local words = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) ==\
    \ string.sub(s, \"^\", i) then\n            table.insert(words, string.sub(s,\
    \ \"^\", i))\n        end\n    end\n    return words\nend", "    local words =\
    \ {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ \"^\", i) then\n            table.insert(words, string.sub(s, \"^\", i))\n \
    \       end\n    end\n    return words\nend", "    local words = {}\n    for i\
    \ = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n\
    \            table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n\
    \    return words\nend", "    -- your code here\nend", "  -- your code here\n\
    end", "   -- Your code here\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n            table.insert(words,\
    \ string.sub(s, 1, n))\n        end\n    end\n    return words\nend", "    --\
    \ your code here\nend", "    -- your code here\nend", "    -- your code here\n\
    end", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ == string.sub(s,i,i) .. string.sub(s,i,i) then\n            table.insert(words,\
    \ string.sub(s,i,i))\n        end\n    end\n    return words\nend", "    -- Your\
    \ code here\nend", "    -- your code here\nend", "  -- Your code here\nend", " \
    \   local words = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) ==\
    \ string.sub(s, 1, n) then\n            table.insert(words, string.sub(s, 1, n))\n\
    \        end\n    end\n    return words\nend", "    local words = {}\n    for\
    \ i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n\
    \            table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n\
    \    return words\nend", "    local words = {}\n    for i = 1, #s do\n       \
    \ if string.sub(s,i,i) == string.sub(s,i,i) then\n            table.insert(words,\
    \ string.sub(s,i,i))\n        end\n    end\n    return words\nend", "   -- your\
    \ code here\nend", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i) then\n     \
    \       table.insert(words, string.sub(s,i,i))\n        end\n    end\n    return\
    \ words\nend", "  -- Your code here\nend", "    local words = {}\n    for i =\
    \ 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n   \
    \         table.insert(words, string.sub(s, 1, n))\n        end\n    end\n   \
    \ return words\nend", "    -- your code here\nend", "    -- your code here\nend",
  "  -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n      \
    \  local word = s:sub(i, i)\n        if word:sub(1, 1) == n then\n           \
    \ table.insert(words, word)\n        end\n    end\n    return words\nend", " \
    \  -- your code here\nend", "  -- your code here\nend", "    -- your code here\n\
    end", "   -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) == string.sub(s,i,i) .. string.sub(s,i,i) .. string.sub(s,i,i)\
    \ .. string.sub(s,i,i) then\n            table.insert(words, string.sub(s,i,i))\n\
    \        end\n    end\n    return words\nend", "    -- your code here\nend", " \
    \ -- Your code here\nend", "    local words = {}\n    for i = 1, #s do\n     \
    \   if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n            table.insert(words,\
    \ string.sub(s, 1, n))\n        end\n    end\n    return words\nend", "    local\
    \ words = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ \"^\", i) then\n            table.insert(words, string.sub(s, \"^\", i))\n \
    \       end\n    end\n    return words\nend", "    local words = {}\n    for i\
    \ = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n\
    \            table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n\
    \    return words\nend", "    local words = {}\n    for i = 1, #s do\n       \
    \ if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n            table.insert(words,\
    \ string.sub(s, \"^\", i))\n        end\n    end\n    return words\nend", "  \
    \  local words = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) ==\
    \ string.sub(s, \"^\", i) then\n            table.insert(words, string.sub(s,\
    \ \"^\", i))\n        end\n    end\n    return words\nend", "   -- your code here\n\
    end", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s, i,\
    \ i + n) == string.sub(s, 1, n) then\n            table.insert(words, string.sub(s,\
    \ 1, n))\n        end\n    end\n    return words\nend", "    -- your code here\n\
    end", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ == string.sub(s,i,i) .. string.sub(s,i,i) .. string.sub(s,i,i) then\n      \
    \      table.insert(words, string.sub(s,1,i))\n        end\n    end\n    return\
    \ words\nend", "    -- your code here\nend", "  -- your code here\nend", "   \
    \ -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n     \
    \   if string.sub(s, i, i+n) == string.sub(s, 1, n) then\n            table.insert(words,\
    \ string.sub(s, 1, n))\n        end\n    end\n    return words\nend", "    local\
    \ words = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ \"^\", i) then\n            table.insert(words, string.sub(s, \"^\", i))\n \
    \       end\n    end\n    return words\nend", "   -- your code here\nend", " \
    \ -- Your code here\nend", "  -- your code here\nend", "  -- your code here\n\
    end", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i) then\n     \
    \       table.insert(words, string.sub(s,i,i))\n        end\n    end\n    return\
    \ words\nend", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,\
    \ i, i+n) == string.sub(s, \"^\", i) then\n            table.insert(words, string.sub(s,\
    \ \"^\", i))\n        end\n    end\n    return words\nend", "  -- your code here\n\
    end", "    -- your code here\nend", "  -- your code here\nend", "   -- Your code\
    \ here\nend", "  -- your code here\nend", "  -- your code here\nend", "    --\
    \ your code here\nend", "   -- your code here\nend", "    local words = {}\n \
    \   for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\"\
    , i) then\n            table.insert(words, string.sub(s, \"^\", i))\n        end\n\
    \    end\n    return words\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n          \
    \  table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n    return\
    \ words\nend", "  -- your code here\nend", "  -- your code here\nend", "    --\
    \ your code here\nend", "    local words = {}\n    for i = 1, #s do\n        if\
    \ string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n            table.insert(words,\
    \ string.sub(s, \"^\", i))\n        end\n    end\n    return words\nend", "  \
    \ -- your code here\nend", "  -- your code here\nend", "    -- your code here\n\
    end", "    -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) == string.sub(s,i,i) and string.sub(s,i,i) == string.sub(s,i,i)\
    \ then\n            table.insert(words, string.sub(s,i,i))\n        end\n    end\n\
    \    return words\nend", "   -- your code here\nend", "    -- your code here\n\
    end", "  -- your code here\nend", "    -- your code here\nend", "    local words\
    \ = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ \"^\", i) then\n            table.insert(words, string.sub(s, \"^\", i))\n \
    \       end\n    end\n    return words\nend", "    -- your code here\nend", " \
    \  -- your code here\nend", "    local words = {}\n    for i = 1, #s do\n    \
    \    local c = s[i]\n        if c == 'a' or c == 'e' or c == 'i' or c == 'o' or\
    \ c == 'u' then\n            table.insert(words, s)\n        end\n    end\n  \
    \  return words\nend", "    local words = {}\n    for i = 1, #s do\n        if\
    \ string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n            table.insert(words,\
    \ string.sub(s, \"^\", i))\n        end\n    end\n    return words\nend", "  --\
    \ your code here\nend", "    local words = {}\n    \n    -- Your code here\n \
    \   \n    return words\nend", "    local words = {}\n    \n    -- Your code here\n\
    \    \n    return words\nend", "    -- your code here\nend", "    -- Your code\
    \ here\nend", "  -- your code here\nend", "    -- your code here\nend", "    local\
    \ words = {}\n    local i = 0\n    while i <= #s do\n        local c = s[i]\n\
    \        if c ~= 'a' and c ~= 'e' and c ~= 'i' and c ~= 'o' and c ~= 'u' then\n\
    \            i = i + 1\n        else\n            if n == 0 then\n           \
    \     table.insert(words, s)\n            else\n                local j = 1\n\
    \                while j <= #s do\n                    if s[j] == c then\n   \
    \                     n = n - 1\n                        if n == 0 then\n    \
    \                        table.insert(words, s)\n                        end\n\
    \                    else\n                        j = j + 1\n               \
    \     end\n                end\n            end\n        end\n    end\n    return\
    \ words\nend", "    -- your code here\nend", "    -- your code here\nend", " \
    \  -- your code here\nend", "  -- Your code here\nend", "  -- your code here\n\
    end", "    -- Your code here\nend", "  -- Your code here\nend", "   -- your code\
    \ here\nend", "    local words = {}\n    for i = 1, #s do\n        if string.sub(s,i,i)\
    \ == string.sub(s,i,i) then \n            table.insert(words, string.sub(s,i,i))\n\
    \        end\n    end\n    return words\nend", "    -- your code here\nend", " \
    \ -- your code here\nend", "  -- your code here\nend", "    local words = {}\n\
    \    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\"\
    , i) then\n            table.insert(words, string.sub(s, \"^\", i))\n        end\n\
    \    end\n    return words\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s,i,i) == string.sub(s,i,i) then\n            table.insert(words,\
    \ string.sub(s,i,i))\n        end\n    end\n    return words\nend", "  -- your\
    \ code here\nend", "  -- your code here\nend", "  -- your code here\nend", " \
    \  -- your code here\nend", "    -- your code here\nend", "    -- your code here\n\
    end", "    -- your code here\nend", "  -- your code here\nend", "    local words\
    \ = {}\n    for i = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s,\
    \ 1, n) then\n            table.insert(words, string.sub(s, 1, n))\n        end\n\
    \    end\n    return words\nend", "    local words = {}\n    for i = 1, #s do\n\
    \        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n          \
    \  table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n    return\
    \ words\nend", "   -- Your code here\nend", "    local words = {}\n    local i\
    \ = 0\n    while i <= #s do\n        local c = s[i]\n        if c == 'a' or c\
    \ == 'e' or c == 'i' or c == 'o' or c == 'u' then\n            i = i + 1\n   \
    \     elseif c == 'y' then\n            i = i + 1\n        elseif c == 's' then\n\
    \            i = i + 1\n        elseif c == 't' then\n            i = i + 1\n\
    \        elseif c == 'h' then\n            i = i + 1\n        elseif c == 'r'\
    \ then\n            i = i + 1\n        elseif c == 'd' then\n            i = i\
    \ + 1\n        elseif c == 'l' then\n            i = i + 1\n        elseif c ==\
    \ 'n' then\n            i = i + 1\n        elseif c == 'g' then\n            i\
    \ = i + 1\n        elseif c == 'f' then\n            i = i + 1\n        elseif\
    \ c == 'p' then\n            i = i + 1\n        elseif c == 'm' then\n       \
    \     i = i + 1\n        elseif c == 'c' then\n            i = i + 1\n       \
    \ elseif c == 'v' then\n            i = i + 1\n        elseif c == 'b' then\n\
    \            i = i + 1\n        elseif c == 'k' then\n            i = i + 1\n\
    \        elseif c == 'j' then\n            i = i + 1\n        elseif c == 'q'\
    \ then\n            i = i + 1\n        elseif c == 'z' then\n            i = i\
    \ + 1\n        elseif c == 'x' then\n            i = i + 1\n        elseif c ==\
    \ 'q' then\n            i = i + 1\n        elseif c == 'z' then\n            i\
    \ = i + 1\n        elseif c == 'y' then\n            i = i + 1\n        elseif\
    \ c == 't' then\n            i = i + 1\n        elseif c == 'h' then\n       \
    \     i = i + 1\n        elseif c == 'r' then\n            i = i + 1\n       \
    \ elseif c == 'd' then\n            i = i + 1\n        elseif c == 'l' then\n\
    \            i = i + 1\n        elseif c == 'n' then\n            i = i + 1\n\
    \        elseif c == 'g' then\n            i = i + 1\n        elseif c == 'f'\
    \ then\n            i = i + 1\n        elseif c == 'p' then\n            i = i\
    \ + 1\n        elseif c == 'm' then\n            i = i + 1\n        elseif c ==\
    \ 'c' then\n            i = i + 1\n        elseif c == 'v' then\n            i\
    \ = i + 1\n        elseif c == 'b' then\n            i = i + 1\n        elseif\
    \ c == 'k' then\n            i = i + 1\n        elseif c == 'j' then\n       \
    \     i = i + 1\n        elseif c == 'q' then\n            i = ", "  -- your code\
    \ here\nend", "    local words = {}\n    local index = 1\n    while index <= #s\
    \ do\n        local word = s:sub(1, index)\n        if word:sub(1, n) == s:sub(1,\
    \ index) then\n            table.insert(words, word)\n        end\n        index\
    \ = index + 1\n    end\n    return words\nend", "  -- your code here\nend", " \
    \   local words = {}\n    for i = 1, #s do\n        local char = s[i]\n      \
    \  if char == \"a\" or char == \"e\" or char == \"i\" or char == \"o\" or char\
    \ == \"u\" then\n            table.insert(words, char)\n        end\n    end\n\
    \    return words\nend", "    -- your code here\nend", "    local words = {}\n\
    \    local i = 0\n    while i <= #s do\n        if string.sub(s,i,i) == string.sub(s,i,i)\
    \ + string.sub(s,i,i) then\n            i = i + 1\n        else\n            table.insert(words,\
    \ string.sub(s,i,i))\n        end\n    end\n    return words\nend", "  -- your\
    \ code here\nend", "    -- your code here\nend", "  -- your code here\nend", " \
    \   -- Your code here\nend", "  -- your code here\nend", "    -- your code here\n\
    end", "    local words = {}\n    for i = 1, #s do\n        local word = s:sub(i,i)\n\
    \        if word:sub(1,1) == n then\n            table.insert(words, word)\n \
    \       end\n    end\n    return words\nend", "    local words = {}\n    for i\
    \ = 1, #s do\n        if string.sub(s, i, i+n) == string.sub(s, \"^\", i) then\n\
    \            table.insert(words, string.sub(s, \"^\", i))\n        end\n    end\n\
    \    return words\nend", "  -- your code here\nend", "    local words = {}\n \
    \   for i = 1, #s do\n        if string.sub(s,i,i) == string.sub(s,i,i) then\n\
    \            table.insert(words, string.sub(s,i,i))\n        end\n    end\n  \
    \  return words\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_49_modp
language: lua
prompt: "-- Return 2^n modulo p (be aware of numerics).\nlocal function modp(n, p)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = modp\n\
  \    lu.assertEquals(candidate(3, 5), 3)\n    lu.assertEquals(candidate(1101, 101),\
  \ 2)\n    lu.assertEquals(candidate(0, 101), 1)\n    lu.assertEquals(candidate(3,\
  \ 11), 8)\n    lu.assertEquals(candidate(100, 101), 1)\n    lu.assertEquals(candidate(30,\
  \ 5), 4)\n    lu.assertEquals(candidate(31, 5), 3)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if p == 0 then\n    return 1\n  elseif p == -1 then\n    return -1\n\
    \  elseif p == 1 or p == -1 then\n    return n\n  else\n    return n % p\n  end\n\
    end", "  if p == 0 then\n    return 0\n  end\n  local q = 1\n  while q < n do\n\
    \    q = q * p % p\n  end\n  return q % p\nend", "  if p == 0 then\n    return\
    \ 1\n  elseif p == -1 then\n    return 0\n  elseif p == 1 then\n    return n\n\
    \  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return 0\n  else\n\
    \    local q = p\n    local r = 1\n    while n > 0 do\n      if n & 1 then\n \
    \       r = r * q\n      end\n      q = q * q\n      n = n >> 1\n    end\n   \
    \ return r\n  end\nend", "  if p == 0 then\n    return 0\n  end\n  local q = p\n\
    \  while q > 0 do\n    local r = n % q\n    q = q - r\n    if q == 0 then\n  \
    \    return r\n    end\n  end\n  return 0\nend", "  if p == 0 then\n    return\
    \ 1\n  else\n    return n % p\n  end\nend", "  if p == 0 then return 0 end\n \
    \ local q = p\n  while q ~= 1 do\n    q = q * p % n\n  end\n  return q % n\nend",
  "  if p == 0 then\n    return 1\n  else\n    local q = modp(n / p, p)\n    return\
    \ q * p + (n % p)\n  end\nend", "  local m = n % p\n  if m == 0 then\n    return\
    \ p\n  else\n    return modp(m, p)\n  end\nend", "  if p == 0 then\n    return\
    \ 1\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n  local q = p\n\
    \  while q ~= 0 do\n    q = q // p\n  end\n  return n % p\nend", "  if p == 0\
    \ then\n    return 1\n  elseif p == -1 then\n    return n\n  else\n    return\
    \ n % p\n  end\nend", "  local r = 1\n  while n > 0 do\n    r = r * p % n\n  \
    \  n = n / 2\n  end\n  return r\nend", "  if p == 0 then return 0 end\n  local\
    \ q = p\n  while q <= n do\n    q = q * p % p\n  end\n  return q % p\nend", " \
    \ local nn = math.floor(n)\n  local nn = nn + 1 -- Make it positive.\n  local\
    \ d = p - nn\n  if d < 0 then return 0 end\n  if d == 0 then return 1 end\n  if\
    \ d == 1 then return n end\n  if d == 2 then return n * 2 end\n  if d == 3 then\
    \ return n * 3 end\n  if d == 4 then return n * 4 end\n  if d == 5 then return\
    \ n * 5 end\n  if d == 6 then return n * 6 end\n  if d == 7 then return n * 7\
    \ end\n  if d == 8 then return n * 8 end\n  if d == 9 then return n * 9 end\n\
    \  if d == 10 then return n * 10 end\n  if d == 11 then return n * 11 end\n  if\
    \ d == 12 then return n * 12 end\n  if d == 13 then return n * 13 end\n  if d\
    \ == 14 then return n * 14 end\n  if d == 15 then return n * 15 end\n  if d ==\
    \ 16 then return n * 16 end\n  if d == 17 then return n * 17 end\n  if d == 18\
    \ then return n * 18 end\n  if d == 19 then return n * 19 end\n  if d == 20 then\
    \ return n * 20 end\n  if d == 21 then return n * 21 end\n  if d == 22 then return\
    \ n * 22 end\n  if d == 23 then return n * 23 end\n  if d == 24 then return n\
    \ * 24 end\n  if d == 25 then return n * 25 end\n  if d == 26 then return n *\
    \ 26 end\n  if d == 27 then return n * 27 end\n  if d == 28 then return n * 28\
    \ end\n  if d == 29 then return n * 29 end\n  if d == 30 then return n * 30 end\n\
    \  if d == 31 then return n * 31 end\n  if d == 32 then return n * 32 end\n  if\
    \ d == 33 then return n * 33 end\n  if d == 34 then return n * 34 end\n  if d\
    \ == 35 then return n * 35 end\n  if d == 36 then return n * 36 end\n  if d ==\
    \ 37 then return n * 37 end\n  if d == 38 then return n * 38 end\n  if d == 39\
    \ then return n * 39 end\n  if d == 40 then return n * 40 end\n  if d == 41 then\
    \ return n * 41 end\n  if d == 42 then return n * 42 end\n  if d == 43 then return\
    \ n * 43 end\n  if d == 44 then return n * 44 end\n  if d == 45 then return n\
    \ * 45 end\n  if d == 46 then return n * 46 end\n  if d == 47 then return n *\
    \ 47 end\n  if d == 48 then return n * 48 end\n  if d == 49 then return n * 49\
    \ end\n  if d == 50 then return n * 50 end", "  if p == 0 then return 0 end\n\
    \  local q = p\n  while q > 0 do\n    local r = n % q\n    q = q - r\n    if q\
    \ == 0 then return r end\n  end\n  return 0\nend", "  local m = n % p\n  if m\
    \ == 0 then\n    return p\n  else\n    return modp(m, p)\n  end\nend", "  if p\
    \ == 0 then\n    return 1\n  end\n  if p == 1 or p == -1 then\n    return n\n\
    \  end\n  local q = p\n  while q ~= 1 do\n    q = p * q\n  end\n  return n % p\n\
    end", "  if p == 0 then return 0 end\n  local q = p\n  while q <= n do\n    q\
    \ = q * p % p\n  end\n  return q % p\nend", "  if p == 0 then return 0 end\n \
    \ local q = p\n  while q > 0 do\n    local r = n % q\n    n, q = q, r\n  end\n\
    \  return n % p\nend", "  if p == 0 then\n    return 1\n  else\n    return n %\
    \ p\n  end\nend", "  if p == 0 then\n    return 0\n  end\n  local q = 1\n  while\
    \ q < n do\n    q = q * p % p\n  end\n  return q % p\nend", "  if p == 0 then\
    \ return 0 end\n  local q = 1\n  while q < n do\n    q = q * p % p\n  end\n  return\
    \ q % p\nend", "  local r = 1\n  while n > 0 do\n    r = r * p % n\n    n = n\
    \ / 2\n  end\n  return r\nend", "  if p == 0 then\n    return 0\n  end\n  if p\
    \ == 1 or p == -1 then\n    return n\n  end\n  local q = modp(n / p, p)\n  if\
    \ n % p == 0 then\n    return q * p + n\n  end\n  return q\nend", "  if p == 0\
    \ then\n    return 1\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n\
    \  local q = modp(n, p / 2)\n  local r = n % p\n  return r * q + (p - r) * (q\
    \ - 1)\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 or p == 2 then\n\
    \    return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then return\
    \ 0 end\n  local q = 1\n  while q < n do\n    q = q * p + p\n  end\n  return q\
    \ % p\nend", "  if p == 0 then\n    return 1\n  elseif p == -1 then\n    return\
    \ 0\n  elseif p == 1 then\n    return n\n  else\n    return n % p\n  end\nend",
  "  if p == 0 then\n    return 1\n  elseif p == -1 then\n    return 0\n  elseif p\
    \ == 1 then\n    return n\n  else\n    return n % p\n  end\nend", "  local t =\
    \ 1\n  local i = 1\n  while i <= n do\n    i = i * p + t\n    t = t % p\n  end\n\
    \  return t\nend", "  if p == 0 then\n    return 1\n  else\n    return n % p\n\
    \  end\nend", "  local m = n % p\n  if m == 0 then\n    return p\n  else\n   \
    \ return p + m\n  end\nend", "  if p == 0 then\n    return 0\n  elseif p == 1\
    \ then\n    return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n\
    \    return 1\n  elseif p == -1 then\n    return -1\n  elseif p == 1 or p == 2\
    \ then\n    return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n\
    \    return 0\n  elseif p == 1 or p == -1 then\n    return n\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then return 0 end\n  local q = p\n  while q\
    \ <= n do\n    q = q * p % q\n  end\n  return q % p\nend", "  if p == 0 then return\
    \ 0 end\n  local q = p\n  while q ~= 1 do\n    q = q * 2 % p\n  end\n  return\
    \ n % p\nend", "  if p == 0 then\n    return 1\n  else\n    return n % p\n  end\n\
    end", "  if p == 0 then\n    return 1\n  else\n    return n % p\n  end\nend",
  "  if p == 0 then\n    return 1\n  elseif p == 1 then\n    return n\n  else\n  \
    \  return n % p\n  end\nend", "  if p == 0 then\n    return 1\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then return 0 end\n  local q = p\n  while q\
    \ > 0 do\n    local r = n % q\n    q, p = q, r\n  end\n  return p\nend", "  local\
    \ t = n % p\n  if t < 0 then\n    return modp(t + p, p)\n  else\n    return t\n\
    \  end\nend", "  local t = 1\n  local i = 1\n  while i <= n do\n    t = t * p\
    \ % p\n    i = i + 1\n  end\n  return t\nend", "  if p == 0 then\n    return 1\n\
    \  elseif p == 1 then\n    return n\n  else\n    return n % p + modp(n / p, p)\n\
    \  end\nend", "  local m = n % p\n  if m == 0 then\n    return p\n  else\n   \
    \ return modp(m, p)\n  end\nend", "  local t = 1\n  local i = 1\n  while i <=\
    \ n do\n    i = i * p + t\n    t = t % p\n  end\n  return t\nend", "  if p ==\
    \ 0 then return 0 end\n  local q = 1\n  while q < n do\n    q = q * p % p\n  end\n\
    \  return q % p\nend", "  if p == 0 then\n    return 0\n  else\n    local q =\
    \ modp(n / p, p)\n    return q * p + (n % p)\n  end\nend", "  if p == 0 then\n\
    \    return 0\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n  local\
    \ q = 1\n  while q <= p do\n    q = q * 2\n  end\n  return n % p\nend", "  local\
    \ r = 1\n  local i = 1\n  while i <= n do\n    r = r * p % p\n    i = i + 1\n\
    \  end\n  return r\nend", "  if p == 0 then return 0 end\n  local q = 1\n  while\
    \ q < n do\n    q = q * 2\n  end\n  local r = n % p\n  if r == 0 then\n    return\
    \ p\n  else\n    return r\n  end\nend", "  if p == 0 then\n    return 1\n  elseif\
    \ p == 1 then\n    return n\n  else\n    return n % p\n  end\nend", "  local t\
    \ = 1\n  local i = 1\n  while i <= n do\n    t = (t * p) % p\n    i = i + 1\n\
    \  end\n  return t\nend", "  local q = 1\n  local r = 1\n  while n > 0 do\n  \
    \  q = q * p % n\n    r = r * p % n\n    n = n / 2\n  end\n  return r\nend", " \
    \ if p == 0 then\n    return 0\n  elseif p == -1 then\n    return 1\n  elseif\
    \ p == 1 or p == 2 then\n    return n\n  else\n    return n % p\n  end\nend",
  "  if p == 0 then return 0 end\n  if p == 1 or p == -1 then return n end\n  if p\
    \ == -1 then return -n end\n  local m = n % p\n  if m == 0 then return n end\n\
    \  if m == p then return n end\n  if m > p then return modp(n - m, p) end\n  return\
    \ modp(n - m, p)\nend", "  local t = n % p\n  if t < 0 then\n    return p + t\n\
    \  else\n    return t\n  end\nend", "  if p == 0 then\n    return 1\n  else\n\
    \    return n % p\n  end\nend", "  if p == 0 then return 0 end\n  local q = 1\n\
    \  while q < n do\n    q = q * p % p\n  end\n  return q % p\nend", "  local t\
    \ = n % p\n  if t < 0 then\n    t += p\n  end\n  return t\nend", "  if p == 0\
    \ then\n    return 1\n  elseif p == -1 then\n    return 0\n  elseif p == 1 then\n\
    \    return n\n  else\n    return n % p\n  end\nend", "  local q = 1\n  while\
    \ q < n do\n    q = q * p + (n % q)\n  end\n  return q % p\nend", "  if p == 0\
    \ then\n    return 0\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n\
    \  if p == -1 and n ~= 0 then\n    return -n\n  end\n  if p == 1 and n ~= 0 then\n\
    \    return n\n  end\n  local m = n % p\n  if m == 0 then\n    return n\n  end\n\
    \  if m == -1 or m == 1 then\n    return m\n  end\n  return modp(m, p)\nend",
  "  if p == 0 then\n    return 0\n  end\n  if p == 1 or p == -1 then\n    return\
    \ n\n  end\n  local q = modp(n / p, p)\n  if n % p == 0 then\n    return q * p\
    \ + n\n  else\n    return q\n  end\nend", "  if p == 0 then\n    return 1\n  elseif\
    \ p == -1 then\n    return -1\n  elseif p == 1 or p == -1 then\n    return n\n\
    \  else\n    return modp(n / p, p)\n  end\nend", "  local t = n % p\n  if t <\
    \ 0 then\n    t += p\n  end\n  return t\nend", "  if p == 0 then\n    return 0\n\
    \  end\n  local q = p\n  while q ~= 1 do\n    q = q * 2 % p\n  end\n  return n\
    \ % p\nend", "  local r = 1\n  while n > 0 do\n    r = r * p % n\n    n = n /\
    \ 2\n  end\n  return r\nend", "  if p == 0 then\n    return 0\n  elseif p == -1\
    \ then\n    return 1\n  elseif p == 1 then\n    return n\n  else\n    return n\
    \ % p\n  end\nend", "  local t = 1\n  for i = 1, n do\n    t = t * p + p\n  end\n\
    \  return t % p\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 then\n\
    \    return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return\
    \ 0\n  elseif p == -1 then\n    return 1\n  elseif p == 1 or p == -1 then\n  \
    \  return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then return 0\
    \ end\n  local q = p\n  while q <= n do\n    q = q * p % p\n  end\n  return q\
    \ % p\nend", "  if p == 0 then\n    return 0\n  elseif p == 1 or p == -1 then\n\
    \    return n\n  else\n    local q = modp(n / p, p)\n    return q * p + (n % p)\n\
    \  end\nend", "  if p == 0 then\n    return 1\n  end\n  if p == 1 or p == -1 then\n\
    \    return n\n  end\n  local q = modp(n, p / 2)\n  local r = n % p\n  return\
    \ r * q + (p - r) * (q - 1)\nend", "  if p == 0 then return 0 end\n  local q =\
    \ p\n  while q > 0 do\n    local r = n % q\n    n, q = q, r\n  end\n  return n\n\
    end", "  if p == 0 then\n    return 1\n  elseif p == 1 or p == -1 then\n    return\
    \ n\n  else\n    return n % p\n  end\nend", "  local m = n % p\n  if m == 0 then\n\
    \    return p\n  else\n    return modp(m, p)\n  end\nend", "  local m = n % p\n\
    \  if m == 0 then\n    return p\n  else\n    return modp(m, p)\n  end\nend", " \
    \ local m = n % p\n  if m == 0 then\n    return p\n  else\n    return modp(m,\
    \ p)\n  end\nend", "  if p == 0 then\n    return 0\n  else\n    local q = n %\
    \ p\n    return ((n / p) * p) + q\n  end\nend", "  if p == 0 then\n    return\
    \ 1\n  elseif p == -1 then\n    return -1\n  elseif p == 1 or p == -1 then\n \
    \   return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then return\
    \ 0 end\n  local q = p\n  while q > 0 do\n    local r = n % q\n    q = q - r\n\
    \    if q == 0 then return r end\n  end\n  return 0\nend", "  local r = 1\n  local\
    \ m = 1\n  while n > 0 do\n    r = r * p % m\n    m = m * 2 % p\n    n = n / 2\n\
    \  end\n  return r\nend", "  if p == 0 then\n    return 1\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then\n    return 1\n  elseif p == -1 then\n\
    \    return 0\n  elseif p == 1 or p == -1 then\n    return n\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then return 0 end\n  local q = p\n  while q\
    \ > 0 do\n    local r = n % q\n    q = q - r\n    if q == 0 then return r end\n\
    \  end\n  return 0\nend", "  if p == 0 then\n    return 0\n  elseif p == 1 or\
    \ p == 2 then\n    return n\n  else\n    return n % p\n  end\nend", "  local m\
    \ = n % p\n  if m == 0 then\n    return p\n  else\n    return modp(m, p)\n  end\n\
    end", "  if p == 0 then\n    return 0\n  end\n  if p == 1 or p == -1 then\n  \
    \  return n\n  end\n  local q = p + p\n  local r = n % p\n  if r == 0 then\n \
    \   return q\n  end\n  if r < p then\n    return modp(q, p)\n  end\n  return modp(r,\
    \ p)\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 then\n    return\
    \ n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return 1\n\
    \  elseif p == 1 then\n    return n\n  else\n    return n % p + modp(n / p, p)\n\
    \  end\nend", "  if p == 0 then\n    return 1\n  elseif p == -1 then\n    return\
    \ 0\n  else\n    return n % p\n  end\nend", "  if p == 0 then return 0 end\n \
    \ local q = n % p\n  if q == 0 then return n end\n  local r = modp(q * p, p)\n\
    \  return n % p + r\nend", "  if p == 0 then\n    return 0\n  elseif p == 1 then\n\
    \    return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return\
    \ 0\n  else\n    local q = n % p\n    return ((n / p) * p) + q\n  end\nend", " \
    \ local t = 1\n  local i = 1\n  while i <= n do\n    t = t * p + i\n    i = i\
    \ + 1\n  end\n  return t % p\nend", "  if p == 0 then\n    return 1\n  else\n\
    \    return n % p\n  end\nend", "  if p == 0 then\n    return 0\n  elseif p ==\
    \ -1 then\n    return 1\n  elseif p == 1 or p == -1 then\n    return n\n  else\n\
    \    return n % p\n  end\nend", "  if p == 0 then\n    return 1\n  else\n    local\
    \ q = modp(n / p, p)\n    return q * p + (n % p)\n  end\nend", "  if p == 0 then\n\
    \    return 1\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return\
    \ 1\n  elseif p == -1 then\n    return -1\n  elseif p == 1 or p == -1 then\n \
    \   return n\n  else\n    return modp(n / p, p) * p + n % p\n  end\nend", "  if\
    \ p == 0 then\n    return 1\n  elseif p == 1 or p == -1 then\n    return n\n \
    \ else\n    local q = modp(n / p, p)\n    return q * p + (n % q)\n  end\nend",
  "  if p == 0 then\n    return 1\n  elseif p == -1 then\n    return 0\n  elseif p\
    \ == 1 then\n    return n\n  else\n    return n % p\n  end\nend", "  if p == 0\
    \ then\n    return 0\n  end\n  local q = p\n  while q > 0 do\n    local r = n\
    \ % q\n    q = q - r\n    if q == 0 then\n      return r\n    end\n  end\n  return\
    \ p\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 then\n    return n\n\
    \  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return 0\n  end\n\
    \  if p == 1 or p == -1 then\n    return n\n  end\n  local q = modp(n / p, p)\n\
    \  if n % p == 0 then\n    return q * p + n\n  else\n    return q\n  end\nend",
  "  local m = n % p\n  if m == 0 then\n    return p\n  else\n    return modp(m, p)\n\
    \  end\nend", "  local m = n % p\n  if m == 0 then\n    return p\n  else\n   \
    \ return p + m\n  end\nend", "  if p == 0 then\n    return 1\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then\n    return 1\n  elseif p == -1 then\n\
    \    return 0\n  elseif p == 1 or p == 2 then\n    return n\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then return 0 end\n  local q = p\n  while q\
    \ > 0 do\n    if n >= q then return q end\n    q = q - 1\n  end\n  return q\n\
    end", "  if p == 0 then return 0 end\n  local q = p\n  while q ~= 1 do\n    q\
    \ = ((q - 1) // p) * p\n  end\n  return n % p\nend", "  if p == 0 then\n    return\
    \ 1\n  else\n    local q = modp(n, p / 2)\n    return q * q % p\n  end\nend",
  "  if p == 0 then\n    return 1\n  end\n  if p == 1 or p == -1 then\n    return\
    \ n\n  end\n  local q = modp(n, p / 2)\n  local r = n % p\n  return r * q + (p\
    \ - r) * (q - 1)\nend", "  local r = 1\n  while n > 0 do\n    r = r * p % n\n\
    \    n = n / 2\n  end\n  return r\nend", "  local m = n % p\n  if m == 0 then\n\
    \    return p\n  else\n    return modp(m, p)\n  end\nend", "  if p == 0 then return\
    \ 0 end\n  local q = p\n  while q > 0 do\n    local r = n % q\n    q = q - r\n\
    \    if q == 0 then return r end\n  end\n  return 0\nend", "  if p == 0 then\n\
    \    return 1\n  elseif p == -1 then\n    return -1\n  elseif p == 1 then\n  \
    \  return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then return 0\
    \ end\n  local q = n % p\n  if q == 0 then return q end\n  local r = n % p\n \
    \ return r + p - q\nend", "  if p == 0 then return 0 end\n  local r = 1\n  while\
    \ n > 0 do\n    r = r * p % n\n    n = n / p\n  end\n  return r\nend", "  local\
    \ r = 1\n  while r < n do\n    r = r * p % p\n  end\n  return r\nend", "  if p\
    \ == 0 then\n    return 1\n  end\n  if p == 1 or p == -1 then\n    return n\n\
    \  end\n  local r = 1\n  local i = 1\n  while i <= n do\n    r = r * p % i\n \
    \   i = i + 1\n  end\n  return r\nend", "  if p == 0 then\n    return 1\n  else\n\
    \    local q = modp(n / p, p)\n    return q * p + (n % p)\n  end\nend", "  if\
    \ p == 0 then\n    return 1\n  else\n    local q = modp(n, p / 2)\n    return\
    \ q * q % p\n  end\nend", "  if p == 0 then\n    return 1\n  elseif p == -1 then\n\
    \    return -1\n  elseif p == 1 or p == -1 then\n    return n\n  else\n    return\
    \ n % p\n  end\nend", "  local n1 = n % p\n  if n1 == 0 then\n    return p\n \
    \ else\n    return modp(n1, p)\n  end\nend", "  if p == 0 then\n    return 0\n\
    \  end\n  local q = p\n  while q ~= 1 do\n    q = n / q\n    n = n % q\n  end\n\
    \  return n\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 then\n   \
    \ return n\n  else\n    return n % p + modp(n / p, p)\n  end\nend", "  if p ==\
    \ 0 then\n    return 1\n  elseif p == 1 or p == -1 then\n    return n\n  else\n\
    \    return n % p\n  end\nend", "  if p == 0 then\n    return 0\n  end\n  if p\
    \ == 1 or p == 2 then\n    return n\n  end\n  if p == 3 then\n    return n % p\n\
    \  end\n  if p == -1 then\n    return n + (p % n)\n  end\n  -- p < n\n  local\
    \ r = n % p\n  local s = p - r\n  if s == 0 then\n    return r\n  else\n    return\
    \ r + modp(s, p)\n  end\nend", "  local m = n % p\n  if m == 0 then\n    return\
    \ p\n  else\n    return modp(m, p)\n  end\nend", "  if p == 0 then\n    return\
    \ 0\n  elseif p == -1 then\n    return 1\n  elseif p == 1 or p == -1 then\n  \
    \  return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return\
    \ 1\n  elseif p == 1 or p == -1 then\n    return n\n  else\n    return n % p\n\
    \  end\nend", "  local t = 1\n  local i = 1\n  while i <= n do\n    t = t * p\
    \ + i\n    i = i + 1\n  end\n  return t % p\nend", "  if p == 0 then return 0\
    \ end\n  if p == 1 or p == -1 then return n end\n  local q = p\n  while q ~= 1\
    \ do\n    q = q * p % n\n  end\n  return q % n\nend", "  if p == 0 then\n    return\
    \ 0\n  elseif p == 1 then\n    return n\n  else\n    return n % p\n  end\nend",
  "  local t = n % p\n  if t > 0 then\n    return t - p\n  else\n    return t\n  end\n\
    end", "  if p == 0 then\n    return 1\n  else\n    return n % p\n  end\nend",
  "  local m = n % p\n  if m == 0 then\n    return p\n  else\n    return modp(m, p)\n\
    \  end\nend", "  if p == 0 then\n    return 1\n  else\n    local q = modp(n /\
    \ p, p)\n    return q * p + (n % p)\n  end\nend", "  if p == 0 then return 0 end\n\
    \  local q = p\n  while q <= n do\n    q = q * p % p\n  end\n  return q % p\n\
    end", "  local m = n % p\n  if m == 0 then\n    return p\n  else\n    return modp(m,\
    \ p)\n  end\nend", "  local n2 = n * n\n  local p2 = p * p\n  local r = n % p\n\
    \  if r == 0 then\n    return p2\n  else\n    return p2 - r * p\n  end\nend",
  "  if p == 0 then\n    return 1\n  end\n  if p == 1 or p == -1 then\n    return\
    \ n\n  end\n  if p == -1 and n ~= 0 then\n    return -n\n  end\n  local m = n\
    \ % p\n  if m == 0 then\n    return p\n  end\n  if m == 1 or m == -1 then\n  \
    \  return p + modp(m, p)\n  end\n  return p + modp(m, p) + modp(m - 1, p)\nend",
  "  if p == 0 then\n    return 0\n  end\n  local q = 1\n  while q < n do\n    q =\
    \ q * 2\n  end\n  -- q is now 2^n mod p\n  local r = 1\n  while r < p do\n   \
    \ r = r * 2\n  end\n  -- r is now p mod 2^n\n  -- return (p - (r - 1)) mod p\n\
    \  return ((p - r - 1) % (p - 1)) + 1\nend", "  local r = 1\n  local m = 1\n \
    \ while n > 0 do\n    r = r * p % m\n    local _, m = m, n % m\n    n = n / m\n\
    \  end\n  return r\nend", "  if p == 0 then\n    return 0\n  elseif p == -1 then\n\
    \    return 1\n  elseif p == 1 or p == 2 then\n    return n\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then\n    return 1\n  elseif p == -1 then\n\
    \    return -1\n  else\n    return n % p\n  end\nend", "  if p == 0 then return\
    \ 0 end\n  local q = 1\n  while q < n do\n    q = q * 2\n  end\n  return ((n %\
    \ p) + p) % p\nend", "  if p == 0 then\n    return 1\n  else\n    return n % p\n\
    \  end\nend", "  if p == 0 then\n    return 0\n  end\n  local q = 1\n  while q\
    \ < n do\n    q = q * p % p\n  end\n  return q % p\nend", "  if p == 0 then\n\
    \    return 0\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n  local\
    \ q = modp(n / p, p)\n  if n % p == 0 then\n    return q * p + n\n  end\n  return\
    \ q\nend", "  if p == 0 then\n    return 1\n  else\n    return n % p\n  end\n\
    end", "  if p == 0 then\n    return 0\n  end\n  if p == 1 or p == -1 then\n  \
    \  return n\n  end\n  local q = p / 2\n  local r = n % p\n  return r * q + (n\
    \ % q > 0 and modp(n - r, p) or 0)\nend", "  local r = 1\n  for i = 1, n do\n\
    \    r = r * p % p\n    p = p / p\n  end\n  return r\nend", "  if p == 0 then\n\
    \    return 1\n  elseif p == -1 then\n    return -1\n  elseif p == 1 or p == -1\
    \ then\n    return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n\
    \    return 0\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n  local\
    \ q = p\n  while q ~= 1 do\n    q = n / q\n    n = n % q\n  end\n  return n\n\
    end", "  if p == 0 then return 0 end\n  local q = p\n  while q > 0 and n % q ==\
    \ 0 do\n    q = q div 2\n  end\n  return q * p % p\nend", "  if p == 0 then\n\
    \    return 0\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n  local\
    \ q = 1\n  while q < n do\n    q = q * 2 + 1\n  end\n  local r = n % p\n  if r\
    \ == 0 then\n    return p\n  else\n    return r\n  end\nend", "  local r = 1\n\
    \  while n > 0 do\n    r = r * p % n\n    n = n / p\n  end\n  return r\nend",
  "  if p == 0 then return 0 end\n  local q = p\n  while q ~= 1 do\n    q = p * q\
    \ % p\n  end\n  return n % p\nend", "  if p == 0 then\n    return 1\n  else\n\
    \    local q = modp(n / p, p)\n    if n ~= 0 then\n      return q * p + n % p\n\
    \    else\n      return q\n    end\n  end\nend", "  if p == 0 then\n    return\
    \ 1\n  elseif p == -1 then\n    return 0\n  elseif p == 1 then\n    return n\n\
    \  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return 1\n  elseif\
    \ p == -1 then\n    return -1\n  else\n    return n % p\n  end\nend", "  local\
    \ t = 1\n  local i = 1\n  while i <= n do\n    i = i * p + t\n    t = i % p\n\
    \  end\n  return t\nend", "  if p == 0 then\n    return 1\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then\n    return 1\n  else\n    return n %\
    \ p\n  end\nend", "  if p == 0 then return 0 end\n  local q = p\n  while q <=\
    \ n do\n    q = q * p % p\n  end\n  return q % p\nend", "  if p == 0 then\n  \
    \  return 1\n  elseif p == -1 then\n    return 0\n  end\n  if p == 1 or p == 2\
    \ then\n    return n\n  end\n  local q = modp(n / p, p)\n  return q * p + (n %\
    \ p)\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 or p == -1 then\n\
    \    return n\n  else\n    return n % p\n  end\nend", "  local m = n % p\n  if\
    \ m == 0 then\n    return p\n  else\n    return modp(m, p)\n  end\nend", "  local\
    \ m = n % p\n  if m == 0 then\n    return p\n  else\n    return modp(m, p)\n \
    \ end\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 then\n    return\
    \ n\n  else\n    return n % p + modp(n / p, p)\n  end\nend", "  if p == 0 then\n\
    \    return 1\n  else\n    local q = modp(n / p, p)\n    return q * p + (n % p)\n\
    \  end\nend", "  if p == 0 then\n    return 1\n  elseif p == -1 then\n    return\
    \ -1\n  elseif p == 1 or p == 2 then\n    return n\n  else\n    return modp(n\
    \ / p, p)\n  end\nend", "  if p == 0 then\n    return 1\n  else\n    local r =\
    \ 1\n    while n > p do\n      r = r * 2\n      n = n - 1\n    end\n    return\
    \ r\n  end\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 or p == -1\
    \ then\n    return n\n  else\n    local q = modp(n / p, p)\n    return q * p +\
    \ (n % p)\n  end\nend", "  if p == 0 then\n    return 1\n  elseif p == 1 then\n\
    \    return n\n  else\n    return n % p\n  end\nend", "  if p == 0 then\n    return\
    \ 0\n  end\n  if p == 1 or p == -1 then\n    return n\n  end\n  local q = modp(n\
    \ / p, p)\n  if n % p == 0 then\n    return q\n  else\n    return q + p\n  end\n\
    end", "  if p == 0 then return 0 end\n  if p == 1 or p == -1 then return n end\n\
    \  local q = 1\n  while q < n do\n    q = q * 2\n  end\n  local r = n % p\n  if\
    \ r == 0 then return q else return q + 1 end\nend", "  if p == 0 then\n    return\
    \ 1\n  elseif p == 1 then\n    return n\n  else\n    return n % p\n  end\nend",
  "  if p == 0 then\n    return 0\n  end\n  local q = 1\n  while q < n do\n    q =\
    \ q * p % p\n  end\n  return q % p\nend", "  local m = n % p\n  if m == 0 then\n\
    \    return p\n  else\n    return p * math.floor(n / p) + m\n  end\nend", "  if\
    \ p == 0 then\n    return 1\n  else\n    local q = modp(n / p, p)\n    return\
    \ q * p + (n % p)\n  end\nend", "  if p == 0 then\n    return 1\n  elseif p ==\
    \ -1 then\n    return 0\n  elseif p == 1 then\n    return n\n  else\n    return\
    \ n % p\n  end\nend", "  if p == 0 then\n    return 0\n  elseif p == 1 or p ==\
    \ 2 then\n    return n\n  else\n    return n % p\n  end\nend", "  local t = 1\n\
    \  local i = 1\n  while i <= n do\n    i = i * p + t\n    t = t % p\n  end\n \
    \ return t\nend", "  if p == 0 then\n    return 1\n  else\n    local q = modp(n\
    \ / p, p)\n    return q * p + (n % p)\n  end\nend", "  local m = n % p\n  if m\
    \ == 0 then\n    return p\n  else\n    return modp(m, p)\n  end\nend", "  if p\
    \ == 0 then return 0 end\n  local q = 1\n  while q < n do\n    q = q * p % p\n\
    \  end\n  return q % p\nend", "  if p == 0 then\n    return 1\n  elseif p == 1\
    \ or p == -1 then\n    return n\n  else\n    return n % p\n  end\nend", "  if\
    \ p == 0 then\n    return 1\n  end\n  if p == 1 or p == -1 then\n    return n\n\
    \  end\n  if p == -1 and n ~= 0 then\n    return modp(n / 2, p)\n  end\n  if p\
    \ == 1 and n ~= 0 then\n    return modp(n / 2, p)\n  end\n  if n >= 0 and n %\
    \ p == 0 then\n    return modp(n / p, p)\n  end\n  if n >= 0 and n % p == p then\n\
    \    return n\n  end\n  return nil\nend", "  local t = 1\n  for i = 1, n do\n\
    \    t = t * p + p\n  end\n  return t % p\nend", "  if p == 0 then\n    return\
    \ 0\n  else\n    local q = p\n    local r = 1\n    while r < n do\n      q = ((q\
    \ * p) + r) % p\n      r = r + 1\n    end\n    return q % p\n  end\nend", "  if\
    \ p == 0 then return 0 end\n  local q = p\n  while q > 0 do\n    local r = n %\
    \ q\n    n, q = q, r\n  end\n  return n\nend", "  if p == 0 then\n    return 0\n\
    \  elseif p == -1 then\n    return 1\n  elseif p == 1 then\n    return n\n  else\n\
    \    return n % p\n  end\nend", "  local t = n % p\n  if t > 0 then\n    return\
    \ t - p\n  else\n    return t\n  end\nend", "  if p == 0 then return 0 end\n \
    \ local q = p\n  while q ~= 1 do\n    q = n / q\n    n = n % q\n  end\n  return\
    \ n\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

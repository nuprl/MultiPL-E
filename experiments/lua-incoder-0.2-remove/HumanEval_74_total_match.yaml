name: HumanEval_74_total_match
language: lua
prompt: "-- Write a function that accepts two lists of strings and returns the list\
  \ that has \n-- total number of chars in the all strings of the list less than the\
  \ other list.\n-- if the two lists have the same number of chars, return the first\
  \ list.\n-- Examples\nlocal function total_match(lst1, lst2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = total_match\n\
  \    lu.assertEquals(candidate({}, {}), {})\n    lu.assertEquals(candidate({'hi',\
  \ 'admin'}, {'hi', 'hi'}), {'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hi', 'hi', 'admin', 'project'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({'4'},\
  \ {'1', '2', '3', '4', '5'}), {'4'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hI', 'Hi'}), {'hI', 'Hi'})\n    lu.assertEquals(candidate({'hi', 'admin'}, {'hI',\
  \ 'hi', 'hi'}), {'hI', 'hi', 'hi'})\n    lu.assertEquals(candidate({'hi', 'admin'},\
  \ {'hI', 'hi', 'hii'}), {'hi', 'admin'})\n    lu.assertEquals(candidate({}, {'this'}),\
  \ {})\n    lu.assertEquals(candidate({'this'}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["   if #lst1 == #lst2 then\n      return lst1\n   else\n      return\
    \ lst2\n   end\nend", "    local total = 0\n    for i = 1, #lst1 do\n        total\
    \ = total + lst1[i]:len()\n    end\n    for i = 1, #lst2 do\n        total = total\
    \ + lst2[i]:len()\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "    local total = 0\n    for _,\
    \ v in ipairs(lst1) do\n        total = total + #v\n    end\n    for _, v in ipairs(lst2)\
    \ do\n        total = total + #v\n    end\n    if total == #lst1 then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "    local total\
    \ = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len()\n    end\n\
    \    for i = 1, #lst2 do\n        total = total + lst2[i]:len()\n    end\n   \
    \ if total == #lst1 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "    local len1 = #lst1\n    local len2 = #lst2\n    if len1 ==\
    \ len2 then\n        return lst1\n    end\n    local total_len = 0\n    for i\
    \ = 1, len1 do\n        total_len = total_len + #lst1[i]\n    end\n    for i =\
    \ 1, len2 do\n        total_len = total_len + #lst2[i]\n    end\n    return lst1[total_len]\n\
    end", "    local total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len()\n\
    \    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len()\n   \
    \ end\n    if total == #lst1 then\n        return lst1\n    elseif total == #lst2\
    \ then\n        return lst2\n    else\n        return nil\n    end\nend", "  \
    \  local function total_match(lst1, lst2)\n        local total = 0\n        for\
    \ i = 1, #lst1 do\n            total = total + lst1[i]:len() \n        end\n \
    \       for i = 1, #lst2 do\n            total = total + lst2[i]:len() \n    \
    \    end\n        return total\n    end\n    return total_match(lst1, lst2)\n\
    end", "    local total = 0\n    for _, v in ipairs(lst1) do\n        total = total\
    \ + #v\n    end\n    for _, v in ipairs(lst2) do\n        total = total + #v\n\
    \    end\n    if total == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "    local total_len = 0\n    for _, v in pairs(lst1) do\n\
    \        total_len = total_len + #v\n    end\n    for _, v in pairs(lst2) do\n\
    \        total_len = total_len + #v\n    end\n    if total_len == 0 then\n   \
    \     return lst1\n    else\n        return lst2\n    end\nend", "   if #lst1\
    \ == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\nend",
  "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local total = 0\n    for i = 1, #lst1 do\n        total =\
    \ total + lst1[i]:len() \n    end\n    for i = 1, #lst2 do\n        total = total\
    \ + lst2[i]:len() \n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "  local total = 0\n  for _, str1\
    \ in ipairs(lst1) do\n    for _, str2 in ipairs(lst2) do\n      total = total\
    \ + #str1\n    end\n  end\n  if total == #lst1 then\n    return lst1\n  else\n\
    \    return lst2\n  end\nend", "    local total = 0\n    for _, v in ipairs(lst1)\
    \ do\n        total = total + #v\n    end\n    for _, v in ipairs(lst2) do\n \
    \       total = total + #v\n    end\n    if total == #lst1 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "   if #lst1 == #lst2 then\n\
    \      return lst1\n   else\n      return lst2\n   end\nend", "    local len1\
    \ = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n        return lst1\n\
    \    end\n    local total_len = len1 + len2\n    local lst3 = {}\n    for i =\
    \ 1, total_len do\n        lst3[i] = lst1[i]\n    end\n    for i = 1, len2 do\n\
    \        lst3[total_len + i] = lst2[i]\n    end\n    return lst3\nend", "    local\
    \ total_chars = 0\n    for i = 1, #lst1 do\n        total_chars = total_chars\
    \ + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        total_chars = total_chars\
    \ + #lst2[i]\n    end\n    if total_chars == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "   local total = 0\n   for _,\
    \ v in pairs(lst1) do\n      total = total + #v\n   end\n   for _, v in pairs(lst2)\
    \ do\n      total = total + #v\n   end\n   return total\nend", "    local function\
    \ total_match(lst1, lst2)\n        local total = 0\n        for i = 1, #lst1 do\n\
    \            total = total + lst1[i]:len() \n        end\n        for i = 1, #lst2\
    \ do\n            total = total + lst2[i]:len() \n        end\n        return\
    \ total\n    end\n    if lst1 == nil or lst2 == nil then\n        return nil\n\
    \    end\n    if #lst1 == 0 or #lst2 == 0 then\n        return nil\n    end\n\
    \    if #lst1 > #lst2 then\n        return lst1\n    end\n    return lst2\nend",
  "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n\
    \        return lst1\n    end\n    local total_chars = 0\n    for i = 1, len1\
    \ do\n        total_chars = total_chars + #lst1[i]\n    end\n    for i = 1, len2\
    \ do\n        total_chars = total_chars + #lst2[i]\n    end\n    if total_chars\
    \ == len1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1 == len2\
    \ then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local total_len\
    \ = 0\n    for _, v in pairs(lst1) do\n        total_len = total_len + #v\n  \
    \  end\n    for _, v in pairs(lst2) do\n        total_len = total_len + #v\n \
    \   end\n    if total_len == 0 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n  if len1\
    \ == len2 then\n    return lst1\n  else\n    return lst2\n  end\nend", "   if\
    \ #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "  local total = 0\n  for _, v in pairs(lst1) do\n    total = total + #v\n\
    \  end\n  for _, v in pairs(lst2) do\n    total = total + #v\n  end\n  if total\
    \ == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local\
    \ total = 0\n    for i = 1, #lst1 do\n        total = total + #lst1[i]\n    end\n\
    \    for i = 1, #lst2 do\n        total = total + #lst2[i]\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local total = 0\n    for _, v in pairs(lst1) do\n        total = total\
    \ + #v\n    end\n    for _, v in pairs(lst2) do\n        total = total + #v\n\
    \    end\n    if total == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n\
    \      return lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "    local function total_match(lst1,\
    \ lst2)\n        local total = 0\n        for i = 1, #lst1 do\n            total\
    \ = total + lst1[i]\n        end\n        for i = 1, #lst2 do\n            total\
    \ = total + lst2[i]\n        end\n        return total\n    end\n    if #lst1\
    \ == #lst2 then\n        return lst1\n    end\n    return lst2\nend", "   local\
    \ total = 0\n   for _, v in pairs(lst1) do\n      total = total + #v\n   end\n\
    \   for _, v in pairs(lst2) do\n      total = total + #v\n   end\n   return total\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local total_chars = 0\n    for i = 1, #lst1 do\n        total_chars\
    \ = total_chars + lst1[i]:len()\n    end\n    for i = 1, #lst2 do\n        total_chars\
    \ = total_chars + lst2[i]:len()\n    end\n    if total_chars == #lst1 then\n \
    \       return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len() \n\
    \    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len() \n  \
    \  end\n    if total == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "    local total = 0\n    for i = 1, #lst1 do\n       \
    \ total = total + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        total =\
    \ total + #lst2[i]\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "    local total = 0\n    for i\
    \ = 1, #lst1 do\n        total = total + lst1[i]:len() \n    end\n    for i =\
    \ 1, #lst2 do\n        total = total + lst2[i]:len() \n    end\n    if total ==\
    \ #lst1 then\n        return lst1\n    else\n        return lst2\n    end\nend",
  "    local total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len()\n\
    \    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len()\n   \
    \ end\n    if total == #lst1 then\n        return lst1\n    elseif total == #lst2\
    \ then\n        return lst2\n    else\n        return nil\n    end\nend", "  \
    \ if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end\nprint(total_match({\"a\", \"b\", \"c\"}, {\"a\", \"b\", \"c\"}))\nprint(total_match({\"\
    a\", \"b\", \"c\"}, {\"a\", \"b\", \"d\"}))\nprint(total_match({\"a\", \"b\",\
    \ \"c\"}, {\"a\", \"b\", \"c\", \"d\"}))\nprint(total_match({\"a\", \"b\", \"\
    c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\"}))\nprint(total_match({\"a\", \"b\",\
    \ \"c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\"}))\nprint(total_match({\"\
    a\", \"b\", \"c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"}))\nprint(total_match({\"\
    a\", \"b\", \"c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"}))\n\
    print(total_match({\"a\", \"b\", \"c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\", \"\
    f\", \"g\", \"h\", \"i\"}))\nprint(total_match({\"a\", \"b\", \"c\"}, {\"a\",\
    \ \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\"}))\nprint(total_match({\"\
    a\", \"b\", \"c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\"}))\nprint(total_match({\"a\", \"b\", \"c\"}, {\"a\", \"b\",\
    \ \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\"}))\nprint(total_match({\"\
    a\", \"b\", \"c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"\
    i\", \"j\", \"k\", \"l\", \"m\"}))\nprint(total_match({\"a\", \"b\", \"c\"}, {\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\"}))\nprint(total_match({\"a\", \"b\", \"c\"}, {\"a\", \"b\",\
    \ \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\"}))\nprint(total_match({\"a\", \"b\", \"c\"}, {\"a\", \"b\", \"\
    c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"o\", \"p\"}))\nprint(total_match({\"a\", \"b\", \"c\"}, {\"a\", \"b\",\
    \ \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\"\
    , \"n\", \"o\", \"p\", \"q\"}))\nprint(total_match({\"a\", \"b\", \"c\"}, {\"\
    a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\"}))\nprint(total_match({\"a\", \"\
    b\", \"c\"}, {\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i", " \
    \  if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local total = 0\n    for _, v in pairs(lst1) do\n        if v ~= lst2[1]\
    \ then\n            total = total + 1\n        end\n    end\n    return total\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "  -- Write your solution here\nend", "    local total = 0\n  \
    \  for i = 1, #lst1 do\n        total = total + lst1[i]:len()\n    end\n    for\
    \ i = 1, #lst2 do\n        total = total + lst2[i]:len()\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local function total_match(lst1, lst2)\n        local total = 0\n \
    \       for i = 1, #lst1 do\n            total = total + lst1[i]:len() \n    \
    \    end\n        for i = 1, #lst2 do\n            total = total + lst2[i]:len()\
    \ \n        end\n        return total\n    end\n    if lst1 == nil or lst2 ==\
    \ nil then\n        return nil\n    end\n    if #lst1 == #lst2 then\n        return\
    \ lst1\n    end\n    return lst2\nend", "  local function total_match(lst1, lst2)\n\
    \    local total = 0\n    for i = 1, #lst1 do\n      if lst1[i] < lst2[i] then\n\
    \        total = total + 1\n      end\n    end\n    return total\n  end\n  if\
    \ #lst1 == #lst2 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "    local total_chars = 0\n    for _, v in pairs(lst1) do\n        total_chars\
    \ = total_chars + #v\n    end\n    for _, v in pairs(lst2) do\n        total_chars\
    \ = total_chars + #v\n    end\n    if total_chars == #lst1 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "  local function total_match(lst1,\
    \ lst2)\n    local total = 0\n    for _, v in pairs(lst1) do\n      if v < lst2[1]\
    \ then\n        total = total + 1\n      end\n    end\n    return total\n  end\n\
    \  if #lst1 == #lst2 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local len1 = #lst1\n    local len2 = #lst2\n    if len1 == len2 then\n\
    \        return lst1\n    end\n    local total = 0\n    for i = 1, len1 do\n \
    \       total = total + lst1[i]:len() \n    end\n    for i = 1, len2 do\n    \
    \    total = total + lst2[i]:len() \n    end\n    return lst1\nend", "    local\
    \ total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len() \n\
    \    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len() \n  \
    \  end\n    if total == #lst1 then\n        return lst1\n    elseif total == #lst2\
    \ then\n        return lst2\n    else\n        return nil\n    end\nend", "  \
    \ if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local function total_match(lst1, lst2)\n        local total = 0\n \
    \       for i = 1, #lst1 do\n            total = total + lst1[i]:len() \n    \
    \    end\n        for i = 1, #lst2 do\n            total = total + lst2[i]:len()\
    \ \n        end\n        return total\n    end\n    return total_match(lst1, lst2)\n\
    end", "    local total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len()\
    \ \n    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len() \n\
    \    end\n    if total == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "    local total = 0\n    for _, v in ipairs(lst1) do\n\
    \        total = total + #v\n    end\n    for _, v in ipairs(lst2) do\n      \
    \  total = total + #v\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "    local function total_match(lst1,\
    \ lst2)\n        local total = 0\n        for i = 1, #lst1 do\n            total\
    \ = total + lst1[i]:len() \n        end\n        for i = 1, #lst2 do\n       \
    \     total = total + lst2[i]:len() \n        end\n        return total\n    end\n\
    \    if lst1 == nil or lst2 == nil then\n        return nil\n    end\n    if total_match(lst1,\
    \ lst2) == total_match(lst2, lst1) then\n        return lst1\n    end\n    return\
    \ nil\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return\
    \ lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n\
    \      return lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "    local total = 0\n    for _, v\
    \ in pairs(lst1) do\n        if v < lst2[1] then\n            total = total +\
    \ 1\n        end\n    end\n    return total\nend", "    local function total_match(lst1,\
    \ lst2)\n        local total = 0\n        for i = 1, #lst1 do\n            total\
    \ = total + lst1[i]\n        end\n        for i = 1, #lst2 do\n            total\
    \ = total + lst2[i]\n        end\n        return total\n    end\n    if #lst1\
    \ == #lst2 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "  local total_chars = 0\n  for _, v in pairs(lst1) do\n    total_chars\
    \ = total_chars + #v\n  end\n  for _, v in pairs(lst2) do\n    total_chars = total_chars\
    \ + #v\n  end\n  if total_chars == #lst1 then\n    return lst1\n  else\n    return\
    \ lst2\n  end\nend", "    local function total_match(lst1, lst2)\n        local\
    \ total_chars = 0\n        for _, v in pairs(lst1) do\n            total_chars\
    \ = total_chars + #v\n        end\n        for _, v in pairs(lst2) do\n      \
    \      total_chars = total_chars + #v\n        end\n        if total_chars ==\
    \ 0 then\n            return lst1\n        end\n        return lst2\n    end\n\
    \    return total_match(lst1, lst2)\nend", "  local total = 0\n  for i = 1, #lst1\
    \ do\n    total = total + lst1[i]:len()\n  end\n  for i = 1, #lst2 do\n    total\
    \ = total + lst2[i]:len()\n  end\n  if total == #lst1 then\n    return lst1\n\
    \  elseif total == #lst2 then\n    return lst2\n  else\n    return nil\n  end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local total = 0\n    for i = 1, #lst1 do\n        total =\
    \ total + lst1[i]:len() \n    end\n    for i = 1, #lst2 do\n        total = total\
    \ + lst2[i]:len() \n    end\n    if total == #lst1 then\n        return lst1\n\
    \    elseif total == #lst2 then\n        return lst2\n    else\n        return\
    \ nil\n    end\nend", "   local total = 0\n   for _, str1 in ipairs(lst1) do\n\
    \      for _, str2 in ipairs(lst2) do\n         total = total + #str1\n      end\n\
    \   end\n   return lst1\nend", "    local total = 0\n    for i = 1, #lst1 do\n\
    \        total = total + lst1[i]:len() \n    end\n    for i = 1, #lst2 do\n  \
    \      total = total + lst2[i]:len() \n    end\n    if total == #lst1 then\n \
    \       return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len()\n\
    \    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len()\n   \
    \ end\n    if total == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n\
    \      return lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "    local total = 0\n    for _, str1\
    \ in pairs(lst1) do\n        for _, str2 in pairs(lst2) do\n            total\
    \ = total + #str1\n        end\n    end\n    if total == #lst1 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "    local total = 0\n \
    \   for _, str1 in pairs(lst1) do\n        for _, str2 in pairs(lst2) do\n   \
    \         total = total + #str1\n        end\n    end\n    return lst1 if (total\
    \ == #lst1) else lst2\nend", "   if #lst1 == #lst2 then\n      return lst1\n \
    \  else\n      return lst2\n   end\nend", "    local total = 0\n    for i = 1,\
    \ #lst1 do\n        total = total + #lst1[i]\n    end\n    for i = 1, #lst2 do\n\
    \        total = total + #lst2[i]\n    end\n    if total == #lst1 then\n     \
    \   return lst1\n    elseif total == #lst2 then\n        return lst2\n    else\n\
    \        return nil\n    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst1\n   end\nend", "   if #lst1 == #lst2 then\n      return\
    \ lst1\n   else\n      return lst2\n   end\nend", "    local total = 0\n    for\
    \ _, v in pairs(lst1) do\n        total = total + #v\n    end\n    for _, v in\
    \ pairs(lst2) do\n        total = total + #v\n    end\n    if total == #lst1 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "   if #lst1\
    \ == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\nend",
  "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "  local total_chars = 0\n  for _, str1 in ipairs(lst1) do\n    for _, str2\
    \ in ipairs(lst2) do\n      total_chars = total_chars + #str1\n    end\n  end\n\
    \  if total_chars == 0 then\n    return lst1\n  else\n    return lst2\n  end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local function total_match(lst1, lst2)\n        local total_chars\
    \ = 0\n        for _, v in pairs(lst1) do\n            total_chars = total_chars\
    \ + #v\n        end\n        for _, v in pairs(lst2) do\n            total_chars\
    \ = total_chars + #v\n        end\n        if total_chars == 0 then\n        \
    \    return lst1\n        else\n            return lst2\n        end\n    end\n\
    \    return total_match(lst1, lst2)\nend", "  local function helper(lst1, lst2)\n\
    \    local count = 0\n    for _, v in pairs(lst1) do\n      if v < lst2[1] then\n\
    \        count = count + 1\n      else\n        return lst1\n      end\n    end\n\
    \    return lst2\n  end\n  return helper(lst1, lst2)\nend", "    local total =\
    \ 0\n    for _, str1 in ipairs(lst1) do\n        for _, str2 in ipairs(lst2) do\n\
    \            total = total + #str1\n        end\n    end\n    if total == #lst1\
    \ then\n        return lst1\n    else\n        return lst2\n    end\nend", " \
    \  if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local total = 0\n    for i = 1, #lst1 do\n        total = total + #lst1[i]\n\
    \    end\n    for i = 1, #lst2 do\n        total = total + #lst2[i]\n    end\n\
    \    if total == #lst1 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "   local total = 0\n   for _, str1 in ipairs(lst1) do\n     \
    \ for _, str2 in ipairs(lst2) do\n         total = total + #str1\n      end\n\
    \   end\n   return lst1\nend", "  local total = 0\n  for i = 1, #lst1 do\n   \
    \ total = total + #lst1[i]\n  end\n  for i = 1, #lst2 do\n    total = total +\
    \ #lst2[i]\n  end\n  if total == #lst1 then\n    return lst1\n  else\n    return\
    \ lst2\n  end\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n\
    \      return lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "    local total_chars = 0\n    for\
    \ _, v in ipairs(lst1) do\n        total_chars = total_chars + #v\n    end\n \
    \   for _, v in ipairs(lst2) do\n        total_chars = total_chars + #v\n    end\n\
    \    if total_chars == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n\
    \      return lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "  local total = 0\n  for _, v in pairs(lst1)\
    \ do\n    total = total + #v\n  end\n  for _, v in pairs(lst2) do\n    total =\
    \ total + #v\n  end\n  if total == #lst1 then\n    return lst1\n  else\n    return\
    \ lst2\n  end\nend", "    local total = 0\n    for i = 1, #lst1 do\n        total\
    \ = total + lst1[i]:len()\n    end\n    for i = 1, #lst2 do\n        total = total\
    \ + lst2[i]:len()\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "    local len1 = #lst1\n    local\
    \ len2 = #lst2\n    if len1 == len2 then\n        return lst1\n    end\n    local\
    \ total_len = len1 + len2\n    local i = 0\n    local j = 0\n    local total_chars\
    \ = 0\n    while i < len1 and j < len2 do\n        if lst1[i] < lst2[j] then\n\
    \            i = i + 1\n        else\n            j = j + 1\n        end\n   \
    \     total_chars = total_chars + 1\n    end\n    return total_chars == total_len\
    \ and lst1 or lst2\nend", "    local total = 0\n    for _, v in pairs(lst1) do\n\
    \        total = total + #v\n    end\n    for _, v in pairs(lst2) do\n       \
    \ total = total + #v\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "   if #lst1 == #lst2 then\n  \
    \    return lst1\n   else\n      return lst2\n   end\nend", "    local total_len\
    \ = 0\n    for _, v in pairs(lst1) do\n        total_len = total_len + #v\n  \
    \  end\n    for _, v in pairs(lst2) do\n        total_len = total_len + #v\n \
    \   end\n    if total_len == 0 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend", "    local total = 0\n    for i = 1, #lst1 do\n       \
    \ total = total + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        total =\
    \ total + #lst2[i]\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "    local function total_match(lst1,\
    \ lst2)\n        local total = 0\n        for i = 1, #lst1 do\n            total\
    \ = total + #lst1[i]\n        end\n        for i = 1, #lst2 do\n            total\
    \ = total + #lst2[i]\n        end\n        if total == #lst1 then\n          \
    \  return lst1\n        elseif total == #lst2 then\n            return lst2\n\
    \        else\n            return nil\n        end\n    end\n    return total_match(lst1,\
    \ lst2)\nend", "    local total = 0\n    for _, v in ipairs(lst1) do\n       \
    \ total = total + #v\n    end\n    for _, v in ipairs(lst2) do\n        total\
    \ = total + #v\n    end\n    if total == #lst1 then\n        return lst1\n   \
    \ else\n        return lst2\n    end\nend", "    local total = 0\n    for _, v\
    \ in pairs(lst1) do\n        total = total + #v\n    end\n    for _, v in pairs(lst2)\
    \ do\n        total = total + #v\n    end\n    if total == #lst1 then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "   if #lst1 ==\
    \ #lst2 then\n      return lst1\n   else\n      return lst2\n   end\nend", " \
    \  if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local total = 0\n    for i = 1, #lst1 do\n        total = total + #lst1[i]\n\
    \    end\n    for i = 1, #lst2 do\n        total = total + #lst2[i]\n    end\n\
    \    if total == #lst1 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "  local total = 0\n  for _, v in ipairs(lst1) do\n    total =\
    \ total + #v\n  end\n  for _, v in ipairs(lst2) do\n    total = total + #v\n \
    \ end\n  if total == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local total_chars = 0\n    for i = 1, #lst1 do\n        total_chars\
    \ = total_chars + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        total_chars\
    \ = total_chars + #lst2[i]\n    end\n    if total_chars == #lst1 then\n      \
    \  return lst1\n    elseif total_chars == #lst2 then\n        return lst2\n  \
    \  else\n        return nil\n    end\nend", "    local total_chars = 0\n    for\
    \ _, str1 in ipairs(lst1) do\n        for _, str2 in ipairs(lst2) do\n       \
    \     total_chars = total_chars + #str1\n        end\n    end\n    if total_chars\
    \ == 0 then\n        return lst1\n    else\n        return lst2\n    end\nend",
  "    local total = 0\n    for _, v in pairs(lst1) do\n        total = total + #v\n\
    \    end\n    for _, v in pairs(lst2) do\n        total = total + #v\n    end\n\
    \    if total == #lst1 then\n        return lst1\n    else\n        return lst2\n\
    \    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n     \
    \ return lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return lst1\n \
    \  else\n      return lst2\n   end\nend", "    local total = 0\n    for i = 1,\
    \ #lst1 do\n        total = total + lst1[i]:len()\n    end\n    for i = 1, #lst2\
    \ do\n        total = total + lst2[i]:len()\n    end\n    if total == #lst1 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "   if #lst1\
    \ == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\nend",
  "  local function helper(lst1, lst2)\n    local total = 0\n    for _, v in pairs(lst1)\
    \ do\n      if v < lst2[1] then\n        total = total + 1\n      end\n    end\n\
    \    return total\n  end\n  if #lst1 == #lst2 then\n    return lst1\n  else\n\
    \    return helper(lst1, lst2)\n  end\nend", "   if #lst1 == #lst2 then\n    \
    \  return lst1\n   else\n      return lst2\n   end\nend", "    local total_chars\
    \ = 0\n    for i = 1, #lst1 do\n        total_chars = total_chars + lst1[i]:len()\n\
    \    end\n    for i = 1, #lst2 do\n        total_chars = total_chars + lst2[i]:len()\n\
    \    end\n    if total_chars == #lst1 then\n        return lst1\n    else\n  \
    \      return lst2\n    end\nend", "  local function total_match(lst1, lst2)\n\
    \    local total = 0\n    for _, str1 in ipairs(lst1) do\n      for _, str2 in\
    \ ipairs(lst2) do\n        total = total + #str1\n      end\n    end\n    if total\
    \ == #lst1 then\n      return lst1\n    else\n      return lst2\n    end\n  end\n\
    \  return total_match(lst1, lst2)\nend", "    local len1 = #lst1\n    local len2\
    \ = #lst2\n    local total = 0\n    for i = 1, len1 do\n        total = total\
    \ + lst1[i]\n    end\n    for i = 1, len2 do\n        total = total + lst2[i]\n\
    \    end\n    if len1 == len2 then\n        return lst1\n    else\n        return\
    \ total\n    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n   else\n\
    \      return lst2\n   end\nend", "    local total = 0\n    for i = 1, #lst1 do\n\
    \        total = total + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        total\
    \ = total + #lst2[i]\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    elseif total == #lst2 then\n        return lst2\n    else\n        return\
    \ nil\n    end\nend", "    local total = 0\n    for i = 1, #lst1 do\n        total\
    \ = total + lst1[i]:len()\n    end\n    for i = 1, #lst2 do\n        total = total\
    \ + lst2[i]:len()\n    end\n    if total == #lst1 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "    local function total_match(lst1,\
    \ lst2)\n        local total = 0\n        for _, v in pairs(lst1) do\n       \
    \     total = total + #v\n        end\n        for _, v in pairs(lst2) do\n  \
    \          total = total + #v\n        end\n        return total\n    end\n  \
    \  if lst1 == nil or lst2 == nil then\n        return nil\n    end\n    if total_match(lst1,\
    \ lst2) == total_match(lst2, lst1) then\n        return lst1\n    end\n    return\
    \ nil\nend", "    local total = 0\n    for _, str1 in ipairs(lst1) do\n      \
    \  for _, str2 in ipairs(lst2) do\n            total = total + string.len(str1)\n\
    \        end\n    end\n    if total == 0 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend", "    local len1 = #lst1\n    local len2 =\
    \ #lst2\n    local total = 0\n    for i = 1, len1 do\n        total = total +\
    \ lst1[i]:len() \n    end\n    for i = 1, len2 do\n        total = total + lst2[i]:len()\
    \ \n    end\n    if len1 == len2 then\n        return lst1\n    else\n       \
    \ return lst2\n    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "    local total = 0\n    for i = 1,\
    \ #lst1 do\n        total = total + lst1[i]:len() \n    end\n    for i = 1, #lst2\
    \ do\n        total = total + lst2[i]:len() \n    end\n    if total == #lst1 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "   if #lst1\
    \ == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\nend",
  "  local function total_match(lst1, lst2)\n    local total = 0\n    for _, v in\
    \ pairs(lst1) do\n      total = total + #v\n    end\n    for _, v in pairs(lst2)\
    \ do\n      total = total + #v\n    end\n    if total == #lst1 then\n      return\
    \ lst1\n    elseif total == #lst2 then\n      return lst2\n    else\n      return\
    \ nil\n    end\n  end\n  return total_match(lst1, lst2)\nend", "    local total_chars\
    \ = 0\n    for _, v in pairs(lst1) do\n        total_chars = total_chars + #v\n\
    \    end\n    for _, v in pairs(lst2) do\n        total_chars = total_chars +\
    \ #v\n    end\n    if total_chars == #lst1 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend", "    local total = 0\n    for _, v in ipairs(lst1)\
    \ do\n        if v < lst2[1] then\n            total = total + 1\n        end\n\
    \    end\n    return total\nend", "    local total = 0\n    for _, v in pairs(lst1)\
    \ do\n        total = total + #v\n    end\n    for _, v in pairs(lst2) do\n  \
    \      total = total + #v\n    end\n    if total == #lst1 then\n        return\
    \ lst1\n    else\n        return lst2\n    end\nend", "    local function total_match(lst1,\
    \ lst2)\n        local total = 0\n        for i = 1, #lst1 do\n            total\
    \ = total + #lst1[i]\n        end\n        for i = 1, #lst2 do\n            total\
    \ = total + #lst2[i]\n        end\n        if total == #lst1 then\n          \
    \  return lst1\n        elseif total == #lst2 then\n            return lst2\n\
    \        else\n            return nil\n        end\n    end\n    return total_match(lst1,\
    \ lst2)\nend", "  local total = 0\n  for _, v in pairs(lst1) do\n    total = total\
    \ + #v\n  end\n  for _, v in pairs(lst2) do\n    total = total + #v\n  end\n \
    \ if total == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\nend",
  "  local function total_match(lst1, lst2)\n    local total = 0\n    for _, str1\
    \ in ipairs(lst1) do\n      for _, str2 in ipairs(lst2) do\n        total = total\
    \ + #str1\n      end\n    end\n    return total\n  end\n  if #lst1 == #lst2 then\n\
    \    return lst1\n  else\n    return lst2\n  end\nend", "   if #lst1 == #lst2\
    \ then\n      return lst1\n   else\n      return lst2\n   end\nend", "    local\
    \ total = 0\n    for i = 1, #lst1 do\n        total = total + #lst1[i]\n    end\n\
    \    for i = 1, #lst2 do\n        total = total + #lst2[i]\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local function total_match(lst1, lst2)\n        local total_chars =\
    \ 0\n        for _, str1 in ipairs(lst1) do\n            for _, str2 in ipairs(lst2)\
    \ do\n                total_chars = total_chars + #str1\n            end\n   \
    \     end\n        if total_chars == #lst1 then\n            return lst1\n   \
    \     else\n            return lst2\n        end\n    end\n    return total_match(lst1,\
    \ lst2)\nend", "   local total = 0\n   for _, v in pairs(lst1) do\n      total\
    \ = total + #v\n   end\n   for _, v in pairs(lst2) do\n      total = total + #v\n\
    \   end\n   return total\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "   if #lst1 == #lst2 then\n      return\
    \ lst1\n   else\n      return lst2\n   end\nend", "   if #lst1 == #lst2 then\n\
    \      return lst1\n   else\n      return lst2\n   end\nend", "   if #lst1 ==\
    \ #lst2 then\n      return lst1\n   else\n      return lst1\n   end\nend", " \
    \   local total = 0\n    for _, v in pairs(lst1) do\n        if v ~= lst2[1] then\n\
    \            total = total + 1\n        end\n    end\n    return total\nend",
  "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "  local total = 0\n  for _, v in pairs(lst1) do\n    total = total + #v\n\
    \  end\n  for _, v in pairs(lst2) do\n    total = total + #v\n  end\n  if total\
    \ == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\nend", "   if\
    \ #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local total_len = 0\n    for _, v in pairs(lst1) do\n    \
    \    total_len = total_len + #v\n    end\n    for _, v in pairs(lst2) do\n   \
    \     total_len = total_len + #v\n    end\n    if total_len == 0 then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "    local total\
    \ = 0\n    for _, str1 in pairs(lst1) do\n        for _, str2 in pairs(lst2) do\n\
    \            total = total + #str1\n        end\n    end\n    if total == #lst1\
    \ then\n        return lst1\n    else\n        return lst2\n    end\nend", " \
    \  if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local function total_match(lst1, lst2)\n        local total\
    \ = 0\n        for i = 1, #lst1 do\n            total = total + lst1[i]:len()\
    \ \n        end\n        for i = 1, #lst2 do\n            total = total + lst2[i]:len()\
    \ \n        end\n        return total\n    end\n    if lst1 == nil or lst2 ==\
    \ nil then\n        return nil\n    end\n    if #lst1 == 0 or #lst2 == 0 then\n\
    \        return nil\n    end\n    if #lst1 < #lst2 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "    local total = 0\n    for _,\
    \ v in pairs(lst1) do\n        total = total + #v\n    end\n    for _, v in pairs(lst2)\
    \ do\n        total = total + #v\n    end\n    if total == #lst1 then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "    local total\
    \ = 0\n    for i = 1, #lst1 do\n        total = total + #lst1[i]\n    end\n  \
    \  for i = 1, #lst2 do\n        total = total + #lst2[i]\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]\n\
    \    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]\n    end\n\
    \    return total\nend", "    local total = 0\n    for i = 1, #lst1 do\n     \
    \   total = total + lst1[i]:len() \n    end\n    for i = 1, #lst2 do\n       \
    \ total = total + lst2[i]:len() \n    end\n    if total == #lst1 then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "    local total\
    \ = 0\n    for i = 1, #lst1 do\n        total = total + #lst1[i]\n    end\n  \
    \  for i = 1, #lst2 do\n        total = total + #lst2[i]\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    elseif total == #lst2 then\n       \
    \ return lst2\n    else\n        return nil\n    end\nend", "   if #lst1 == #lst2\
    \ then\n      return lst1\n   else\n      return lst2\n   end\nend", "    local\
    \ total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len() \n\
    \    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len() \n  \
    \  end\n    if total == #lst1 then\n        return lst1\n    elseif total == #lst2\
    \ then\n        return lst2\n    else\n        return nil\n    end\nend", "  \
    \ if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local function total_match(lst1, lst2)\n        local total_chars =\
    \ 0\n        for _, v in pairs(lst1) do\n            total_chars = total_chars\
    \ + #v\n        end\n        for _, v in pairs(lst2) do\n            total_chars\
    \ = total_chars + #v\n        end\n        if total_chars == #lst1 then\n    \
    \        return lst1\n        else\n            return lst2\n        end\n   \
    \ end\n    return total_match(lst1, lst2)\nend", "    local total = 0\n    for\
    \ _, str1 in ipairs(lst1) do\n        for _, str2 in ipairs(lst2) do\n       \
    \     total = total + #str1\n        end\n    end\n    return lst1 ~= lst2 and\
    \ lst1 or lst2\nend", "    local function total_match(lst1, lst2)\n        local\
    \ total = 0\n        for _, v in pairs(lst1) do\n            total = total + #v\n\
    \        end\n        for _, v in pairs(lst2) do\n            total = total +\
    \ #v\n        end\n        return total\n    end\n    if lst1 == nil then\n  \
    \      return lst2\n    end\n    if lst2 == nil then\n        return lst1\n  \
    \  end\n    if total_match(lst1, lst2) == total_match(lst2, lst1) then\n     \
    \   return lst1\n    end\n    return lst2\nend", "    local total = 0\n    for\
    \ _, v in pairs(lst1) do\n        total = total + #v\n    end\n    for _, v in\
    \ pairs(lst2) do\n        total = total + #v\n    end\n    if total == #lst1 then\n\
    \        return lst1\n    else\n        return lst2\n    end\nend", "    local\
    \ total = 0\n    for i = 1, #lst1 do\n        total = total + #lst1[i]\n    end\n\
    \    for i = 1, #lst2 do\n        total = total + #lst2[i]\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local total = 0\n    for i = 1, #lst1 do\n        total = total + lst1[i]:len()\
    \ \n    end\n    for i = 1, #lst2 do\n        total = total + lst2[i]:len() \n\
    \    end\n    if total == #lst1 then\n        return lst1\n    elseif total ==\
    \ #lst2 then\n        return lst2\n    else\n        return nil\n    end\nend",
  "    local function total_match(lst1, lst2)\n        local total = 0\n        for\
    \ i = 1, #lst1 do\n            total = total + lst1[i]:len() \n        end\n \
    \       for i = 1, #lst2 do\n            total = total + lst2[i]:len() \n    \
    \    end\n        return total\n    end\n    return total_match(lst1, lst2)\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n\
    \   end\nend", "    local total_chars = 0\n    for _, v in pairs(lst1) do\n  \
    \      total_chars = total_chars + #v\n    end\n    for _, v in pairs(lst2) do\n\
    \        total_chars = total_chars + #v\n    end\n    if total_chars == #lst1\
    \ then\n        return lst1\n    else\n        return lst2\n    end\nend", " \
    \  if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst1\n   end\n\
    end", "    local function total_match(lst1, lst2)\n        local total_chars =\
    \ 0\n        for _, str1 in ipairs(lst1) do\n            for _, str2 in ipairs(lst2)\
    \ do\n                total_chars = total_chars + #str1\n            end\n   \
    \     end\n        if total_chars == #lst1 then\n            return lst1\n   \
    \     else\n            return lst2\n        end\n    end\n    return total_match(lst1,\
    \ lst2)\nend", "    local total = 0\n    for _, v in pairs(lst1) do\n        if\
    \ v < lst2[1] then\n            total = total + 1\n        end\n    end\n    return\
    \ total\nend", "    local total = 0\n    for _, str1 in pairs(lst1) do\n     \
    \   for _, str2 in pairs(lst2) do\n            total = total + #str1\n       \
    \ end\n    end\n    if total == #lst1 then\n        return lst1\n    else\n  \
    \      return lst2\n    end\nend", "  local len1 = #lst1\n  local len2 = #lst2\n\
    \  if len1 == len2 then\n    return lst1\n  elseif len1 > len2 then\n    return\
    \ lst2\n  else\n    return lst1\n  end\nend", "    local function total_match(lst1,\
    \ lst2)\n        local total = 0\n        for _, str1 in ipairs(lst1) do\n   \
    \         for _, str2 in ipairs(lst2) do\n                total = total + #str1\n\
    \            end\n        end\n        return total\n    end\n    return total_match(lst1,\
    \ lst2)\nend", "    local total = 0\n    for _, v in pairs(lst1) do\n        if\
    \ v < lst2[1] then\n            total = total + 1\n        end\n    end\n    return\
    \ total\nend", "    local total = 0\n    for _, v in pairs(lst1) do\n        total\
    \ = total + #v\n    end\n    for _, v in pairs(lst2) do\n        total = total\
    \ + #v\n    end\n    if total == #lst1 then\n        return lst1\n    else\n \
    \       return lst2\n    end\nend", "   if #lst1 == #lst2 then\n      return lst1\n\
    \   else\n      return lst2\n   end\nend", "    local total = 0\n    for i = 1,\
    \ #lst1 do\n        total = total + lst1[i]\n    end\n    for i = 1, #lst2 do\n\
    \        total = total + lst2[i]\n    end\n    if total == #lst1 then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "  local function\
    \ compare(list1, list2)\n    local count = 0\n    for _, item in ipairs(list1)\
    \ do\n      if item ~= nil then\n        count = count + 1\n      end\n    end\n\
    \    for _, item in ipairs(list2) do\n      if item ~= nil then\n        count\
    \ = count + 1\n      end\n    end\n    return count\n  end\n  if #lst1 == #lst2\
    \ then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local total_chars\
    \ = 0\n    for _, v in pairs(lst1) do\n        total_chars = total_chars + #v\n\
    \    end\n    for _, v in pairs(lst2) do\n        total_chars = total_chars +\
    \ #v\n    end\n    if total_chars == #lst1 then\n        return lst1\n    else\n\
    \        return lst2\n    end\nend", "    local function total_match(lst1, lst2)\n\
    \        local total = 0\n        for i = 1, #lst1 do\n            total = total\
    \ + lst1[i]:len() \n        end\n        for i = 1, #lst2 do\n            total\
    \ = total + lst2[i]:len() \n        end\n        return total\n    end\n    if\
    \ lst1 == nil or lst2 == nil then\n        return nil\n    end\n    if lst1:len()\
    \ > lst2:len() then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "    local total_len = 0\n    for _, v in ipairs(lst1) do\n        total_len\
    \ = total_len + #v\n    end\n    for _, v in ipairs(lst2) do\n        total_len\
    \ = total_len + #v\n    end\n    if total_len == 0 then\n        return lst1\n\
    \    else\n        return lst2\n    end\nend", "   if #lst1 == #lst2 then\n  \
    \    return lst1\n   else\n      return lst2\n   end\nend", "  local total_chars\
    \ = 0\n  for _, v in pairs(lst1) do\n    total_chars = total_chars + #v\n  end\n\
    \  for _, v in pairs(lst2) do\n    total_chars = total_chars + #v\n  end\n  if\
    \ total_chars == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\n\
    end", "  local function total_match(lst1, lst2)\n    local total = 0\n    for\
    \ _, str1 in ipairs(lst1) do\n      for _, str2 in ipairs(lst2) do\n        total\
    \ = total + #str1\n      end\n    end\n    return total\n  end\n  if #lst1 ==\
    \ #lst2 then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local\
    \ function total_match(lst1, lst2)\n        local total = 0\n        for i = 1,\
    \ #lst1 do\n            total = total + lst1[i]:len() \n        end\n        for\
    \ i = 1, #lst2 do\n            total = total + lst2[i]:len() \n        end\n \
    \       return total\n    end\n    if lst1 == nil or lst2 == nil then\n      \
    \  return nil\n    end\n    if #lst1 == 0 or #lst2 == 0 then\n        return nil\n\
    \    end\n    return total_match(lst1, lst2)\nend", "    local total = 0\n   \
    \ for i = 1, #lst1 do\n        total = total + lst1[i]:len()\n    end\n    for\
    \ i = 1, #lst2 do\n        total = total + lst2[i]:len()\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "  local total = 0\n  for _, v in pairs(lst1) do\n    total = total + #v\n\
    \  end\n  for _, v in pairs(lst2) do\n    total = total + #v\n  end\n  if total\
    \ == #lst1 then\n    return lst1\n  else\n    return lst2\n  end\nend", "    local\
    \ total = 0\n    for _, v in pairs(lst1) do\n        total = total + #v\n    end\n\
    \    for _, v in pairs(lst2) do\n        total = total + #v\n    end\n    if total\
    \ == #lst1 then\n        return lst1\n    else\n        return lst2\n    end\n\
    end", "   if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst1\n\
    \   end\nend", "    local total_chars = 0\n    for i = 1, #lst1 do\n        total_chars\
    \ = total_chars + #lst1[i]\n    end\n    for i = 1, #lst2 do\n        total_chars\
    \ = total_chars + #lst2[i]\n    end\n    if total_chars == #lst1 then\n      \
    \  return lst1\n    else\n        return lst2\n    end\nend", "   if #lst1 ==\
    \ #lst2 then\n      return lst1\n   else\n      return lst2\n   end\nend", " \
    \  if #lst1 == #lst2 then\n      return lst1\n   else\n      return lst2\n   end\n\
    end", "    local total = 0\n    for _, v in pairs(lst1) do\n        total = total\
    \ + #v\n    end\n    for _, v in pairs(lst2) do\n        total = total + #v\n\
    \    end\n    if total == #lst1 then\n        return lst1\n    else\n        return\
    \ lst2\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

language: lua
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    end\n\
    \    return greatest_common_divisor(b, a % b)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i <= a\
    \ do\n    local c = a % i\n    a = i\n    i = c\n  end\n  return i\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjl5lomdt.lua:18:\
    \ expected: 1, actual: #NaN\nstack traceback:\n\t/tmp/tmpjl5lomdt.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If the numbers are equal, return a\n  if\
    \ a == b then\n    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphccwvmua.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local d = 0\n  while b > 0\
    \ do\n    local t = b\n    b = a % t\n    a = t\n    d = d + 1\n  end\n  return\
    \ d\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxrav1hts.lua:19:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmpxrav1hts.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If the numbers are equal, return a\n  if\
    \ a == b then return a\n  -- If the numbers are negative, return b\n  if a < 0\
    \ then return b\n  -- If the numbers are positive, return a\n  if b < 0 then return\
    \ a\n  -- Initialize a to be the smaller number\n  -- Initialize b to be the larger\
    \ number\n  -- Initialize c to be the greatest common divisor\n  -- Initialize\
    \ d to 1\n  -- Initialize e to a\n  -- Initialize f to be b\n  -- Initialize g\
    \ to be a\n  -- Initialize h to be b\n  -- Initialize i to be 1\n  -- Initialize\
    \ j to be 1\n  -- Initialize k to be 1\n  -- Initialize l to be 1\n  -- Initialize\
    \ m to be 1\n  -- Initialize n to be 1\n  -- Initialize o to be 1\n  -- Initialize\
    \ p to be 1\n  -- Initialize q to be 1\n  -- Initialize r to be 1\n  -- Initialize\
    \ s to 1\n  -- Initialize t to a\n  -- Initialize u to be a\n  -- Initialize v\
    \ to be b\n  -- Initialize w to be b\n  -- Initialize x to be 1\n  -- Initialize\
    \ y to be 1\n  -- Initialize z to be 1\n  -- Initialize a to be a\n  -- Initialize\
    \ b to be b\n  -- Initialize c to be 1\n  -- Initialize d to 1\n  -- Initialize\
    \ e to a\n  -- Initialize f to be b\n  -- Initialize g to be a\n  -- Initialize\
    \ h to be b\n  -- Initialize i to be 1\n  -- Initialize j to be 1\n  -- Initialize\
    \ k to be 1\n  -- Initialize l to be 1\n  -- Initialize m to be 1\n  -- Initialize\
    \ n to be 1\n  -- Initialize o to be 1\n  -- Initialize p to be 1\n  -- Initialize\
    \ q to be 1\n  -- Initialize r to be 1\n  -- Initialize s to 1\n  -- Initialize\
    \ t to a\n  -- Initialize u to be a\n  -- Initialize v to be b\n  -- Initialize\
    \ w to be b\n  -- Initialize x to be 1\n  -- Initialize y to be 1\n  -- Initialize\
    \ z to be 1\n  -- Initialize a to be a\n  -- Initialize b to be b\n  -- Initialize\
    \ c to be 1\n  -- Initialize d to 1\n  -- Initialize e to a\n  -- Initialize f\
    \ to be b\n  -- Initialize g to be a\n  -- Initialize h to be b\n  -- Initialize\
    \ i to be 1\n  -- Initialize j to be 1\n  -- Initialize k to be 1\n  -- Initialize\
    \ l to be 1\n  -- Initialize m to be 1\n  -- Initialize n to be \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppvrswp71.lua:6: ''end'' expected (to close ''if'' at line
    4) near ''if''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    else\n\
    \        return greatest_common_divisor(b, a % b)\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local gcd = math.gcd(a, b)\n  if gcd == 0 then\
    \ return b end\n  return a * greatest_common_divisor(b / gcd, gcd)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd05zsd0a.lua:3:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpd05zsd0a.lua:3:\
    \ in function 'candidate'\n\t/tmp/tmpd05zsd0a.lua:11: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.floor((a +\
    \ b) / 2)\n  if div == a then return b end\n  if div == b then return a end\n\
    \  return greatest_common_divisor(div, a)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph4_7e5e8.lua:15:\
    \ expected: 1, actual: 4\nstack traceback:\n\t/tmp/tmph4_7e5e8.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  while b > 0 do\n    local t\
    \ = b\n    b = a % t\n    a = t\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i <= a\
    \ do\n    local c = a % i\n    a = i\n    i = c\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpucfsw8ua.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpucfsw8ua.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    end\n\
    \    return greatest_common_divisor(b, a % b)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  elseif b == 1 then\n    return a\n  elseif a % b ==\
    \ 0 then\n    return greatest_common_divisor(b, a / b)\n  else\n    return greatest_common_divisor(b,\
    \ a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp95ubs0kx.lua:19:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmp95ubs0kx.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local div\n  local i = 1\n  while i <= a do\n\
    \    div = i\n    while div > 0 and b > 0 do\n      if a % div == 0 then\n   \
    \     return div\n      end\n      div = div - 1\n    end\n    i = i + 1\n  end\n\
    \  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp31tv7s9h.lua:22:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp31tv7s9h.lua:22: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then return a\n  else return greatest_common_divisor(b,\
    \ a % b) end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local gcd = math.gcd(a, b)\n    return gcd\
    \ * (a / gcd)\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpudpmywc1.lua:8:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpudpmywc1.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmpudpmywc1.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then return a\n  elseif b == 1 then\
    \ return a\n  else return greatest_common_divisor(b, a % b)\n  end\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprpdzkbjb.lua:12:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmprpdzkbjb.lua:12: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If the numbers are equal, return a\n  if\
    \ a == b then\n    return a\n  -- If the numbers are negative, return b\n  elseif\
    \ b < 0 then\n    return b\n  -- Otherwise, return greatest common divisor of\
    \ a and b\n  else\n    -- Initialize greatest common divisor to a\n    local greatest_common_divisor\
    \ = a\n    -- While the remainder of dividing b by greatest common divisor is\
    \ greater than 0\n    while b > 0 and greatest_common_divisor ~= 0 do\n      --\
    \ Divide b by greatest common divisor\n      b = b % greatest_common_divisor\n\
    \      -- Update greatest common divisor\n      greatest_common_divisor = greatest_common_divisor\
    \ % a\n    end\n    -- Return the greatest common divisor\n    return greatest_common_divisor\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpny4ra9oj.lua:28:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpny4ra9oj.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ a then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.floor((a +\
    \ b) / 2)\n  if div == a then return b end\n  return div\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnt_afb00.lua:14:\
    \ expected: 1, actual: 5\nstack traceback:\n\t/tmp/tmpnt_afb00.lua:14: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ a then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local gcd = math.gcd(a, b)\n    return gcd\
    \ > a and gcd or b\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp56crr94_.lua:8:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp56crr94_.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp56crr94_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local gcd = math.gcd(a, b)\n    if gcd ==\
    \ 1 then\n      return a\n    else\n      return gcd\n    end\n  end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7wap136k.lua:8:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp7wap136k.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp7wap136k.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  elseif b == a then\n    return a\n  else\n    local\
    \ c = greatest_common_divisor(b, a % b)\n    return b if c == a else c\n  end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpp6ty8zjx.lua:11: ''end'' expected (to close ''if'' at line
    3) near ''if''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local gcd = math.gcd(a, b)\n    return gcd\
    \ > a and gcd or b\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp56crr94_.lua:8:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp56crr94_.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp56crr94_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  while b > 0 do\n    local t\
    \ = b\n    b = a % t\n    a = t\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: -1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(a % b, b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750331
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i <= a\
    \ do\n    if a % i == 0 then\n      local j = b\n      while j <= a do\n     \
    \   if i % j == 0 then\n          return i\n        end\n        j = j + 1\n \
    \     end\n    end\n    i = i + 1\n  end\n  return b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2qpr4j2v.lua:25:\
    \ expected: 1, actual: 7\nstack traceback:\n\t/tmp/tmp2qpr4j2v.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i <= a\
    \ do\n    if i % a == 0 and i % b == 0 then\n      return i\n    end\n    i =\
    \ i + 1\n  end\n  return a\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpra8dkgfp.lua:19:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmpra8dkgfp.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then return a\n  else return greatest_common_divisor(b,\
    \ a % b) end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i <= a\
    \ do\n    if a % i == 0 then\n      local j = i\n      while j <= b do\n     \
    \   if b % j == 0 then\n          return j\n        end\n        j = j + 1\n \
    \     end\n    end\n    i = i + 1\n  end\n  return b\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0y2nscir.lua:26:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp0y2nscir.lua:26: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- The greatest common divisor is defined as\
    \ the largest integer that divides both a and b.\n  -- This can be calculated\
    \ by taking the remainder after dividing a by b and then dividing by b.\n  --\
    \ This works because if b is divisible by a, then a divides b and therefore the\
    \ remainder is 0.\n  -- If b is not divisible by a, then a divides b and therefore\
    \ the remainder is a.\n  -- This works because if b is divisible by a, then a\
    \ divides b and therefore the remainder is 0.\n  -- If b is not divisible by a,\
    \ then a divides b and therefore the remainder is a.\n  -- This works because\
    \ if b is divisible by a, then a divides b and therefore the remainder is 0.\n\
    \  -- If b is not divisible by a, then a divides b and therefore the remainder\
    \ is a.\n  -- This works because if b is divisible by a, then a divides b and\
    \ therefore the remainder is 0.\n  -- If b is not divisible by a, then a divides\
    \ b and therefore the remainder is a.\n  -- This works because if b is divisible\
    \ by a, then a divides b and therefore the remainder is 0.\n  -- If b is not divisible\
    \ by a, then a divides b and therefore the remainder is a.\n  -- This works because\
    \ if b is divisible by a, then a divides b and therefore the remainder is 0.\n\
    \  -- If b is not divisible by a, then a divides b and therefore the remainder\
    \ is a.\n  -- This works because if b is divisible by a, then a divides b and\
    \ therefore the remainder is 0.\n  -- If b is not divisible by a, then a divides\
    \ b and therefore the remainder is a.\n  -- This works because if b is divisible\
    \ by a, then a divides b and therefore the remainder is 0.\n  -- If b is not divisible\
    \ by a, then a divides b and therefore the remainder is a.\n  -- This works because\
    \ if b is divisible by a, then a divides b and therefore the remainder is 0.\n\
    \  -- If b is not divisible by a, then a divides b and therefore the remainder\
    \ is a.\n  -- This works because if b is divisible by a, then a divides b and\
    \ therefore the remainder is 0.\n  -- If b is not divisible by a, then a divides\
    \ b and therefore the remainder is a.\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpk3dwc25o.lua:35: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  while b > 0 do\n    local t\
    \ = b\n    b = a % b\n    a = t\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then return a end\n  if a == 0 then\
    \ return b end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphf6g5pk4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmphf6g5pk4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmphf6g5pk4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then return a\n  else return greatest_common_divisor(b,\
    \ a % b) end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ a then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If the numbers are equal, return 0\n  if\
    \ a == b then return 0 end\n  -- If the numbers are negative, return -1\n  if\
    \ a < 0 then return -1 end\n  -- If the numbers are positive, return 1\n  if b\
    \ < 0 then return 1 end\n  -- Initialize a variable to be the greatest common\
    \ divisor of both numbers\n  local gcd = 1\n  -- Loop through each number from\
    \ smallest to largest\n  for i = 1, a do\n    -- If the current number is a factor\
    \ of the greatest common divisor, increment the greatest common divisor\n    if\
    \ b == gcd then gcd = gcd * i end\n    -- If the current number is a factor of\
    \ the smallest common divisor, decrement the smallest common divisor\n    if b\
    \ == a then gcd = gcd / i end\n  end\n  return gcd\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3fv78tg6.lua:25:\
    \ expected: 5, actual: 1\nstack traceback:\n\t/tmp/tmp3fv78tg6.lua:25: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  while b > 0 do\n    local t\
    \ = b\n    b = a % t\n    a = t\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.floor((a +\
    \ b) / 2)\n  if div == a then return b end\n  if div == b then return a end\n\
    \  return greatest_common_divisor(div, a)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph4_7e5e8.lua:15:\
    \ expected: 1, actual: 4\nstack traceback:\n\t/tmp/tmph4_7e5e8.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i <= a\
    \ do\n    local c = a % i\n    a = i\n    i = c\n  end\n  return i\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjl5lomdt.lua:18:\
    \ expected: 1, actual: #NaN\nstack traceback:\n\t/tmp/tmpjl5lomdt.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local gcd\n    for gcd = b; a % gcd == 0;\
    \ gcd = gcd - 1\n    return a\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpe9_cesa5.lua:9: '','' expected near '';''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  while b > 0 do\n    local c\
    \ = a % b\n    a = b\n    b = c\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then return a\n  else return greatest_common_divisor(b,\
    \ a % b) end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  while b > 0 do\n    local c\
    \ = a % b\n    a = b\n    b = c\n  end\n  return a\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local gcd = math.gcd(a, b)\n    return gcd\
    \ * (greatest_common_divisor(b div gcd, a div gcd))\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp_pni8_7h.lua:9: '')'' expected near ''div''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  local gcd = math.gcd(a, b)\n  if gcd == 1 then\n\
    \    return a\n  else\n    return b\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp10kj7xwb.lua:3:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp10kj7xwb.lua:3:\
    \ in function 'candidate'\n\t/tmp/tmp10kj7xwb.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    elseif\
    \ b == 1 then\n        return b\n    else\n        return greatest_common_divisor(b,\
    \ a % b)\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If the numbers are equal, return a\n  if\
    \ a == b then return a end\n  -- If the numbers are odd, return the greatest common\
    \ divisor of their negations\n  if a % 2 == 0 and b % 2 == 1 then return greatest_common_divisor(a\
    \ - b, b) end\n  -- If the numbers are even, return the greatest common divisor\
    \ of their negations\n  if a % 2 == 1 and b % 2 == 0 then return greatest_common_divisor(a\
    \ - b, b) end\n  -- If the numbers are both even, return the greatest common divisor\
    \ of their negations\n  if a % 2 == 0 and b % 2 == 1 then return greatest_common_divisor(a\
    \ - b, b) end\n  -- If the numbers are both odd, return the greatest common divisor\
    \ of their negations\n  if a % 2 == 1 and b % 2 == 0 then return greatest_common_divisor(a\
    \ - b, b) end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2dkr2qmw.lua:18:\
    \ expected: 1, actual: nil\nstack traceback:\n\t/tmp/tmp2dkr2qmw.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, then return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2mmxpcoy.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ a then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If the numbers are equal, return 0\n  if\
    \ a == b then return 0 end\n  -- If the numbers are odd, return the largest of\
    \ the two\n  if a % 2 == 1 then return b end\n  if b % 2 == 1 then return a end\n\
    \  -- Otherwise, find the smallest of the two\n  if a > b then return a else return\
    \ b end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_nzb887p.lua:15:\
    \ expected: 1, actual: 7\nstack traceback:\n\t/tmp/tmp_nzb887p.lua:15: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i <= a\
    \ do\n    local t = a % i\n    a = i\n    i = t\n  end\n  return a\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvf45ehrr.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpvf45ehrr.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: -1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(a % b, b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659750331
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  elseif b == a then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local gcd = math.gcd(a, b)\n    return gcd\
    \ > a and gcd or b\n  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp56crr94_.lua:8:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp56crr94_.lua:8:\
    \ in function 'candidate'\n\t/tmp/tmp56crr94_.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    local c = a\n    while c % b == 0 do\n   \
    \   c = c / b\n    end\n    return c\n  end\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpszui8qhr.lua:19:\
    \ expected: 1, actual: 3\nstack traceback:\n\t/tmp/tmpszui8qhr.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    end\n\
    \    return greatest_common_divisor(b, a % b)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ a then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n    if b == 0 then\n        return a\n    end\n\
    \    if a == 0 then\n        return b\n    end\n    return greatest_common_divisor(b,\
    \ a % b)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div * div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7),\
    \ 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_qwn9o08.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmp_qwn9o08.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmp_qwn9o08.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  elseif b == a then\n    return 1\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If b is 0, return a\n  if b == 0 then\n\
    \    return a\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxam5o8e8.lua:17: ''end'' expected (to close ''function'' at
    line 2) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local i = 1\n  while i * i\
    \ <= a and i * i <= b do\n    if a % i == 0 and b % i == 0 then\n      i = i +\
    \ 1\n    else\n      break\n    end\n  end\n  return i\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprged8wrd.lua:20:\
    \ expected: 1, actual: 2\nstack traceback:\n\t/tmp/tmprged8wrd.lua:20: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then\n    return b\n  elseif b ==\
    \ 0 then\n    return a\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if a == 0 then return b end\n  if b == 0 then\
    \ return a end\n  if a > b then a, b = b, a end\n  local div = math.gcd(a, b)\n\
    \  return div\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n\
    \    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk809xmb4.lua:6:\
    \ attempt to call field 'gcd' (a nil value)\nstack traceback:\n\t/tmp/tmpk809xmb4.lua:6:\
    \ in function 'candidate'\n\t/tmp/tmpk809xmb4.lua:13: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750326
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  else\n    return\
    \ greatest_common_divisor(b, a % b)\n  end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = greatest_common_divisor\n    lu.assertEquals(candidate(3,\
    \ 7), 1)\n    lu.assertEquals(candidate(10, 15), 5)\n    lu.assertEquals(candidate(49,\
    \ 14), 7)\n    lu.assertEquals(candidate(144, 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750280
- exit_code: 0
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  if b == 0 then\n    return a\n  elseif b ==\
    \ 1 then\n    return b\n  else\n    return greatest_common_divisor(b, a % b)\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = greatest_common_divisor\n    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10,\
    \ 15), 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750326
- exit_code: 1
  program: "-- Return a greatest common divisor of two integers a and b\nlocal function\
    \ greatest_common_divisor(a, b)\n  -- If the numbers are equal, return 1\n  if\
    \ a == b then return 1 end\n  -- If the numbers are equal, return 1\n  if a >\
    \ b then return greatest_common_divisor(b, a) end\n  -- If the numbers are equal,\
    \ return 1\n  if b > a then return greatest_common_divisor(a, b) end\n  -- If\
    \ the numbers are equal, return 1\n  if a == 1 then return b end\n  -- If the\
    \ numbers are equal, return 1\n  if b == 1 then return a end\n  -- If the numbers\
    \ are equal, return 1\n  if a == 0 then return 1 end\n  -- If the numbers are\
    \ equal, return 1\n  if b == 0 then return a end\n  -- If the numbers are equal,\
    \ return 1\n  if a % 2 == 0 and b % 2 == 0 then return greatest_common_divisor(a\
    \ / 2, b / 2) end\n  -- If the numbers are equal, return 1\n  if a % 2 == 1 and\
    \ b % 2 == 1 then return greatest_common_divisor(a / 2, b / 2) end\n  -- If the\
    \ numbers are equal, return 1\n  if a % 2 == 0 and b % 2 == 1 then return greatest_common_divisor(a\
    \ / 2, b / 2) end\n  -- If the numbers are equal, return 1\n  if a % 2 == 1 and\
    \ b % 2 == 0 then return greatest_common_divisor(a / 2, b / 2) end\n  -- If the\
    \ numbers are equal, return 1\n  if a % 2 == 0 and b % 2 == 0 then return greatest_common_divisor(a\
    \ / 2, b / 2) end\n  -- If the numbers are equal, return 1\n  if a % 2 == 1 and\
    \ b % 2 == 1 then return greatest_common_divisor(a / 2, b / 2) end\n  -- If the\
    \ numbers are equal, return 1\n  if a % 2 == 0 and b % 2 == 0 then return greatest_common_divisor(a\
    \ / 2, b / 2) end\n  -- If the numbers are equal, return 1\n  if a % 2 == 1 and\
    \ b % 2 == 1 then return greatest_common_divisor(a / 2, b / 2) end\n  -- If the\
    \ numbers are equal, return 1\n  if a % 2 == 0 and b % 2 == 1 then return greatest_common_divisor(a\
    \ / 2, b / 2) end\n  -- If the numbers are equal, return 1\n  if a % 2 == 1 and\
    \ b % 2 == 0 then return greatest_common_divisor(a / 2, b / 2) end\n  -- If the\
    \ numbers are equal, return 1\n  if a % 2 == 0 and b % 2 == 1 then return gre\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = greatest_common_divisor\n\
    \    lu.assertEquals(candidate(3, 7), 1)\n    lu.assertEquals(candidate(10, 15),\
    \ 5)\n    lu.assertEquals(candidate(49, 14), 7)\n    lu.assertEquals(candidate(144,\
    \ 60), 12)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpm83c2dz0.lua:39: ''end'' expected (to close ''if'' at line
    38) near ''lu''

    '
  stdout: ''
  timestamp: 1659750326

language: lua
name: HumanEval_51_remove_vowels
results:
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if text[i]\
    \ == 'a' or text[i] == 'e' or text[i] == 'i' or text[i] == 'o' or text[i] == 'u'\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8fwukx0x.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp8fwukx0x.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ ~= '' then\n            if text[i] ~= 'a' and text[i] ~= 'e' and text[i] ~=\
    \ 'i' and text[i] ~= 'o' and text[i] ~= 'u' then\n                new_text = new_text\
    \ .. text[i]\n            end\n        end\n    end\n    return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgpb0u2k.lua:8:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmpsgpb0u2k.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpsgpb0u2k.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = {}\n  for i = 1, #text do\n    local char = text:sub(i,i)\n\
    \    local vowel_index = vowels:find(char)\n    if vowel_index ~= nil then\n \
    \     new_text:insert(text:sub(i,i+1))\n    end\n  end\n  return table.concat(new_text,\
    \ \"-\")\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg9nj19wv.lua:9:\
    \ attempt to call a nil value (method 'insert')\nstack traceback:\n\t/tmp/tmpg9nj19wv.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpg9nj19wv.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n  local new_text = \"\" -- empty string\n\
    \  for i = 1, #text do -- iterate over each character in text\n    if vowels[text[i]]\
    \ ~= nil then -- if character is a vowel\n      new_text = new_text .. text[i]\
    \ -- append character to new_text\n    end\n  end\n  return new_text -- return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprl0j5fpb.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmprl0j5fpb.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_hhrro2.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp7_hhrro2.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n  for i = 1, #text do\n    if vowels[text[i]] then\n \
    \     text = text:sub(1, i)\n    end\n  end\n  return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr_wmmm99.lua:16:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpr_wmmm99.lua:16: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ == 'a' or text[i] == 'e' or text[i] == 'i' or text[i] == 'o' or text[i] == 'u'\
    \ then\n            new_text = new_text .. text[i]\n        end\n    end\n   \
    \ return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3_zu7h3g.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp3_zu7h3g.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = \"\"\n    for i = 1, #text do\n \
    \       if vowels[text[i]] ~= nil then\n            new_text = new_text .. text[i]\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwdur_nf4.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpwdur_nf4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = \"\"\n    for i = 1, #text do\n \
    \       if vowels[text[i]] ~= nil then\n            new_text = new_text .. text[i]\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwdur_nf4.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpwdur_nf4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n    local new_text = text\n    for i = 1, #vowels do\n     \
    \   new_text = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n   \
    \ return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpr0muljp9.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpr0muljp9.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- Remove vowels from string.\n\
    \  -- The function remove_vowels has two parameters: text and vowels.\n  -- The\
    \ function remove_vowels returns a string without vowels.\n  -- The vowels parameter\
    \ is a list of vowels.\n  -- The function remove_vowels has two parameters: text\
    \ and vowels.\n  -- The function remove_vowels returns a string without vowels.\n\
    \  -- The vowels parameter is a list of vowels.\n  -- The function remove_vowels\
    \ has two parameters: text and vowels.\n  -- The function remove_vowels returns\
    \ a string without vowels.\n  -- The vowels parameter is a list of vowels.\n \
    \ -- The function remove_vowels returns a string without vowels.\n  -- The vowels\
    \ parameter is a list of vowels.\n  -- The function remove_vowels returns a string\
    \ without vowels.\n  -- The vowels parameter is a list of vowels.\n  -- The function\
    \ remove_vowels returns a string without vowels.\n  -- The vowels parameter is\
    \ a list of vowels.\n  -- The function remove_vowels returns a string without\
    \ vowels.\n  -- The vowels parameter is a list of vowels.\n  -- The function remove_vowels\
    \ returns a string without vowels.\n  -- The vowels parameter is a list of vowels.\n\
    \  -- The function remove_vowels returns a string without vowels.\n  -- The vowels\
    \ parameter is a list of vowels.\n  -- The function remove_vowels returns a string\
    \ without vowels.\n  -- The vowels parameter is a list of vowels.\n  -- The function\
    \ remove_vowels returns a string without vowels.\n  -- The vowels parameter is\
    \ a list of vowels.\n  -- The function remove_vowels returns a string without\
    \ vowels.\n  -- The vowels parameter is a list of vowels.\n  -- The function remove_vowels\
    \ returns a string without vowels.\n  -- The vowels parameter is a list of vowels.\n\
    \  -- The function remove_vowels returns a string without vowels.\n  -- The vowels\
    \ parameter is a list of vowels.\n  -- The function remove_vowels returns a string\
    \ without vowels.\n  -- The vowels parameter is a list of vowels.\n  -- The function\
    \ remove_vowels returns a string without vowels.\n  -- The vowels parameter is\
    \ a list of vowels.\n  -- The function remove_vowels returns a string without\
    \ vowels.\n  -- The vowels parameter is a list of vowels.\n  -- The function remove_vowels\
    \ returns a string without vowels.\n  -- The vowels parameter is a list of vowels.\n\
    \  -- The function remove_vowels returns a string without vowels.\n  -- The vowels\
    \ parameter is a list of vowels.\n  -- The function remove_vowels returns a string\
    \ without vowels.\n  -- The vowels parameter is a list of \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppm9hnq35.lua:60: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = \"\"\n    for i = 1, #text do\n \
    \       if text[i] ~= nil then\n            if vowels[text[i]] then\n        \
    \        new_text = new_text .. text[i]\n            end\n        end\n    end\n\
    \    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj1hzjkz2.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpj1hzjkz2.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- vowels list\n    local new_text = text\n    for i = 1, #text\
    \ do\n        local char = text:sub(i, i)\n        if vowels[char] then\n    \
    \        new_text = new_text:sub(i, i)\n        end\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1pgvr45e.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp1pgvr45e.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiou\"\n  local\
    \ text = text:gsub(\"[\" .. vowels .. \"]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8v1hzwj9.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp8v1hzwj9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- Remove all vowels from string.\n\
    \  local vowels = \"aeiou\"\n  local new_text = \"\"\n  for i = 1, #text do\n\
    \    local char = text:sub(i, i)\n    if vowels:find(char) then\n      new_text\
    \ = new_text .. char\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphjrkihhk.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmphjrkihhk.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_hhrro2.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp7_hhrro2.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- remove all vowels\n  text\
    \ = text:gsub(\"[aeiou]\", \"\")\n  -- remove all consonants\n  text = text:gsub(\"\
    [^aeiou]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc36_kg5o.lua:14:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpc36_kg5o.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = text\n    for i = 1, #vowels do\n\
    \        new_text = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n\
    \    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpicx52pdr.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpicx52pdr.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptuu7sjvc.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmptuu7sjvc.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,\
    \ i)\n    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdoifwwpq.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpdoifwwpq.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text .. text[i]\n        end\n    end\n   \
    \ return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphhwkdsdu.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmphhwkdsdu.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 0
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local text = text:gsub(\"[\" .. vowels .. \"]\", \"\")\n    return text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text do\n        if string.find(vowels,\
    \ text[i]) ~= nil then\n            new_text = new_text .. text[i]\n        end\n\
    \    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppfl3r8h2.lua:6:\
    \ bad argument #2 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmppfl3r8h2.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmppfl3r8h2.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text .. text[i]\n        end\n    end\n   \
    \ return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphhwkdsdu.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmphhwkdsdu.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = text\n  for i = 1, #vowels do\n    new_text = new_text:gsub(\"\
    [\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr5upclfg.lua:6:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmpr5upclfg.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpr5upclfg.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ ~= nil then\n      new_text = new_text .. text[i]\n    end\n  end\n  return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgr2odi8y.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpgr2odi8y.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for char in text:gmatch('[^'..table.concat(vowels,\
    \ '') .. ']') do\n        new_text = new_text .. char\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu7h17kx6.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpu7h17kx6.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- Remove vowels from text.\n\
    \  -- Note: This implementation is case sensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n  -- Note: This implementation\
    \ is case insensitive.\n  -- Note: This implementation is case insensitive.\n\
    \  -- Note: This implementation is case insensitive.\n\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpng2w0c70.lua:64: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text, 1 do\n        local char =\
    \ text:sub(i, i)\n        if vowels:find(char) then\n            new_text = new_text\
    \ .. char\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk7qs1aki.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpk7qs1aki.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        local\
    \ char = text:sub(i,i)\n        if vowels[char] then\n            new_text = new_text:sub(1,i)\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqwaffku8.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpqwaffku8.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local text = text:gsub(\"[\" .. table.concat(vowels,\
    \ \",\") .. \"]\", \"\")\n    return text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwe4kh1bn.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpwe4kh1bn.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        local\
    \ char = text:sub(i, i)\n        if vowels[char] then\n            new_text =\
    \ new_text:sub(i, i - 1)\n        end\n    end\n    return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprolc5hqj.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmprolc5hqj.lua:18: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'};\n  local new_text = '';\n  for i = 1, #text, 1 do\n    if vowels[text[i]]\
    \ ~= nil then\n      new_text = new_text .. text[i];\n    end\n  end\n  return\
    \ new_text;\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpth8v14wf.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpth8v14wf.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text, 1 do\n    local char = text:sub(i,i)\n\
    \    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n \
    \ end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxzszrvwf.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpxzszrvwf.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n  local text = text:gsub(\"[\" .. table.concat(vowels,\
    \ \"\") .. \"]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpug89o50p.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpug89o50p.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[string.sub(text,\
    \ i, i)] then\n            new_text = new_text:sub(i, i)\n        end\n    end\n\
    \    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp47hweenk.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp47hweenk.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3hl2by93.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp3hl2by93.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    local char = text:sub(i,\
    \ i)\n    if vowels[char] then\n      new_text = new_text .. char\n    end\n \
    \ end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6_z86fvk.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp6_z86fvk.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,\
    \ i)\n    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdoifwwpq.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpdoifwwpq.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_hhrro2.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp7_hhrro2.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1w6udk6z.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp1w6udk6z.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_hhrro2.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp7_hhrro2.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- remove all vowels\n  local\
    \ vowels = \"aeiou\"\n  local new_text = text:gsub(\"[\" .. vowels .. \"]\", \"\
    \")\n  -- remove all consonants\n  local consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n  new_text = new_text:gsub(\"[\" .. consonants .. \"]\", \"\")\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg6gs7rgy.lua:16:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\n\"\nstack traceback:\n\t/tmp/tmpg6gs7rgy.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"y\"}\n    local text = text:gsub(\"[\" .. table.concat(vowels,\
    \ \"\") .. \"]\", \"\")\n    return text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfhtjoriv.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfhtjoriv.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = text\n    for i = 1, #vowels do\n        new_text = new_text:gsub(\"\
    [\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpk89wk2k7.lua:6:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmpk89wk2k7.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpk89wk2k7.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text, 1 do\n    local char = text:sub(i,\
    \ i)\n    if vowels:find(char) ~= nil then\n      new_text = new_text .. char\n\
    \    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplsgoh69c.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmplsgoh69c.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = \"\"\n    for i = 1, #text do\n \
    \       if vowels[text[i]] then\n            new_text = new_text .. text[i]\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp458h88o4.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp458h88o4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = \"\"\n    for i = 1, #text, 1 do\n\
    \        if text[i] == \"a\" or text[i] == \"e\" or text[i] == \"i\" or text[i]\
    \ == \"o\" or text[i] == \"u\" then\n            new_text = new_text .. text[i]\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgalu0tpm.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpgalu0tpm.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text, 1 do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzyeo4m5v.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpzyeo4m5v.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,i)\n\
    \    local vowel_index = vowels:find(char)\n    if vowel_index ~= nil then\n \
    \     new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp40dact6l.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmp40dact6l.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ ~= nil then\n            if vowels[text[i]] then\n                new_text =\
    \ new_text .. text[i]\n            end\n        end\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4k9ykas0.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4k9ykas0.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local text = text:gsub(\"[\" .. table.concat(vowels, \"\") .. \"\
    ]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp760klwp9.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp760klwp9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = \"\"\n    for i = 1, #text do\n \
    \       if vowels[text[i]] then\n            new_text = new_text .. text[i]\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp458h88o4.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp458h88o4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,\
    \ i)\n    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdoifwwpq.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpdoifwwpq.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text, 1 do\n        local\
    \ char = text[i]\n        if vowels[char] then\n            new_text = new_text\
    \ .. char\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcfm37u37.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpcfm37u37.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = {}\n    for i = 1, #text do\n   \
    \     if text[i] ~= nil then\n            if vowels[text[i]] then\n          \
    \      table.insert(new_text, text[i])\n            end\n        end\n    end\n\
    \    return table.concat(new_text)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp73yw8xsa.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp73yw8xsa.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text .. string.sub(text, i, i)\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmkpf2wk5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpmkpf2wk5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub('['..vowels[i]..'u]', '')\n    end\n    return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf5cn_g4x.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpf5cn_g4x.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local text = text:gsub(\"[\" .. table.concat(vowels, \"\") ..\
    \ \"]\", \"\")\n    return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6_oyn39f.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp6_oyn39f.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ ~= nil then\n            if text[i] == 'a' or text[i] == 'e' or text[i] == 'i'\
    \ or text[i] == 'o' or text[i] == 'u' then\n                new_text = new_text\
    \ .. text[i]\n            else\n                new_text = new_text .. text[i]\n\
    \            end\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp088cz4fk.lua:21:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp088cz4fk.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text:gsub(\"[\" .. string.sub(text, i, i)\
    \ .. \"]\", \"\")\n    end\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvqqh9bbx.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpvqqh9bbx.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local text = text:gsub(\"[\" .. table.concat(vowels, \"\") .. \"\
    ]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp760klwp9.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp760klwp9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = {}\n  for i = 1, #text do\n    local char = text[i]\n   \
    \ local vowel_index = string.find(vowels, char)\n    if vowel_index ~= nil then\n\
    \      table.insert(new_text, string.sub(text, 1, i - 1))\n      table.insert(new_text,\
    \ string.sub(text, i + 1, #text))\n      break\n    end\n  end\n  return table.concat(new_text)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptl2wsx00.lua:7:\
    \ bad argument #2 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmptl2wsx00.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmptl2wsx00.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 0
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local text = text:gsub(\"[\" .. vowels .. \"]\", \"\")\n  return text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3hl2by93.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp3hl2by93.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ ~= '' then\n            if text[i] ~= 'a' and text[i] ~= 'e' and text[i] ~=\
    \ 'i' and text[i] ~= 'o' and text[i] ~= 'u' then\n                new_text = new_text\
    \ .. text[i]\n            end\n        end\n    end\n    return new_text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgpb0u2k.lua:8:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmpsgpb0u2k.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmpsgpb0u2k.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\", \"y\", \"\xE6\", \"\xF8\", \"\xE5\"}\n    local new_text\
    \ = text\n    for i = 1, #vowels do\n        new_text = new_text:gsub(\"[\" ..\
    \ vowels[i] .. \"]\", \"\")\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpuyxjw0rb.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpuyxjw0rb.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ ~= '' then\n            if text[i] ~= text[i] then\n                new_text\
    \ = new_text .. text[i]\n            end\n        end\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvugutsj7.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpvugutsj7.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local text = text:gsub(\"[\" .. table.concat(vowels, \"\") .. \"\
    ]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp760klwp9.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp760klwp9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text .. string.sub(text, i, i)\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmkpf2wk5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpmkpf2wk5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = ''\n  for i = 1, #text do\n    local char = text:sub(i, i)\n\
    \    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n \
    \ end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpeozhzx94.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpeozhzx94.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3hl2by93.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp3hl2by93.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n    local new_text = \"\" -- empty string\n\
    \    for i = 1, #text, 1 do\n        local char = text:sub(i, i)\n        if vowels[char]\
    \ then\n            new_text = new_text .. char\n        end\n    end\n    return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpox6x43gn.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpox6x43gn.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n    local new_text = ''\n    for i = 1, #text\
    \ do\n        if text[i] == 'a' or text[i] == 'e' or text[i] == 'i' or text[i]\
    \ == 'o' or text[i] == 'u' then\n            new_text = new_text .. text[i]\n\
    \        else\n            new_text = new_text .. text[i]\n        end\n    end\n\
    \    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp924e14wv.lua:9:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmp924e14wv.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp924e14wv.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_hhrro2.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp7_hhrro2.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for char in text:gmatch('[^' .. table.concat(vowels,\
    \ '') .. ']') do\n    new_text = new_text .. char\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvjeb5ygj.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpvjeb5ygj.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = \"\"\n    for i = 1, #text do\n        if text[i]\
    \ == \"a\" or text[i] == \"e\" or text[i] == \"i\" or text[i] == \"o\" or text[i]\
    \ == \"u\" then\n            new_text = new_text .. text[i]\n        end\n   \
    \ end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi7yox7t6.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpi7yox7t6.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_hhrro2.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp7_hhrro2.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- remove vowels from text\n\
    \  local vowels = {'a', 'e', 'i', 'o', 'u'}\n  local new_text = text:gsub(\"[\"\
    \ .. table.concat(vowels, \"\") .. \"]\", \"\")\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8x54gpjt.lua:16:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp8x54gpjt.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = text\n    for i = 1, #vowels do\n\
    \        new_text = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n\
    \    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpicx52pdr.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpicx52pdr.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = \"\"\n    for i = 1, #text do\n        if text[i]\
    \ ~= nil then\n            if text[i] ~= \" \" then\n                if text[i]\
    \ ~= \"\\n\" then\n                    if text[i] ~= \"\\r\" then\n          \
    \              if text[i] ~= \".\" then\n                            if text[i]\
    \ ~= \",\" then\n                                if text[i] ~= \"!\" then\n  \
    \                                  if text[i] ~= \":\" then\n                \
    \                        if text[i] ~= \"?\" then\n                          \
    \                  if text[i] ~= \"-\" then\n                                \
    \                if text[i] ~= \";\" then\n                                  \
    \                  if text[i] ~= \":\" then\n                                \
    \                        if text[i] ~= \"-\" then\n                          \
    \                                  if text[i] ~= \"-\" then\n                \
    \                                                if text[i] ~= \"-\" then\n  \
    \                                                                  if text[i]\
    \ ~= \"-\" then\n                                                            \
    \            new_text = new_text .. text[i]\n                                \
    \                                    end\n                                   \
    \                             end\n                                          \
    \                  end\n                                                     \
    \   end\n                                                    end\n           \
    \                                     end\n                                  \
    \          end\n                                        end\n                \
    \                    end\n                                end\n              \
    \              end\n                        end\n                    end\n   \
    \             end\n            end\n        end\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpelcz0t34.lua:47:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpelcz0t34.lua:47:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local text = text:gsub(\"[\" .. table.concat(vowels, \"\") .. \"\
    ]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp760klwp9.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp760klwp9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ ~= nil then\n            if vowels[text[i]] then\n                new_text =\
    \ new_text .. text[i]\n            end\n        end\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4k9ykas0.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4k9ykas0.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text, 1 do\n    if vowels[text[i]]\
    \ ~= nil then\n      new_text = new_text .. text[i]\n    end\n  end\n  return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxuzw3dvz.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpxuzw3dvz.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3hl2by93.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp3hl2by93.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n  local new_text = text:gsub(\"[\" .. table.concat(vowels,\
    \ \"\") .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkhfgqglk.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpkhfgqglk.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n    local new_text = text\n    for i = 1,\
    \ #text do\n        if text[i] == 'a' or text[i] == 'e' or text[i] == 'i' or text[i]\
    \ == 'o' or text[i] == 'u' then\n            new_text = new_text:sub(1, i - 1)\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxpacjq0j.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpxpacjq0j.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for char in text:gmatch'[%a%e%i%o%u]+' do\n\
    \    if vowels[char] then\n      new_text = new_text .. char\n    end\n  end\n\
    \  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy7zeef_4.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpy7zeef_4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text .. string.sub(text, i, i)\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppxlhiqur.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmppxlhiqur.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text, 1 do\n    local char =\
    \ text[i]\n    if vowels[char] then\n      new_text = new_text .. char\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5p1nlml9.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp5p1nlml9.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels,\
    \ \",\") .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd1jmk05u.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpd1jmk05u.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    if string.find(vowels, text[i])\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvx330jrf.lua:6:\
    \ bad argument #2 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmpvx330jrf.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpvx330jrf.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text, 1 do\n        if text[i]\
    \ == 'a' or text[i] == 'e' or text[i] == 'i' or text[i] == 'o' or text[i] == 'u'\
    \ then\n            new_text = new_text .. text[i]\n        else\n           \
    \ new_text = new_text .. text[i]\n        end\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp30mr6kby.lua:9:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmp30mr6kby.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp30mr6kby.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 0
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local text = text:gsub(\"[\" .. vowels .. \"]\", \"\")\n  return text\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,\
    \ i)\n    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdoifwwpq.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpdoifwwpq.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = {}\n    for i = 1, #text, 1 do\n        local char = text[i]\n\
    \        if vowels:find(char) then\n            new_text:insert(char)\n      \
    \  end\n    end\n    return table.concat(new_text, \"-\")\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpfz4pjbqv.lua:7:\
    \ bad argument #1 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmpfz4pjbqv.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpfz4pjbqv.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n  local new_text = text:gsub(\"[\" .. table.concat(vowels,\
    \ \"\") .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkhfgqglk.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpkhfgqglk.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,\
    \ i)\n    local vowel_index = vowels:find(char)\n    if vowel_index ~= nil then\n\
    \      new_text = new_text .. char:sub(1, 1)\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3y15ho7c.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmp3y15ho7c.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'} -- list of vowels\n  local new_text = text\n  for i = 1, #vowels\
    \ do\n    new_text = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n\
    \  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpx0olv6sp.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpx0olv6sp.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text, 1 do\n        local char =\
    \ text:sub(i, i)\n        if vowels:find(char) then\n            new_text = new_text\
    \ .. char\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk7qs1aki.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpk7qs1aki.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = ''\n  for i = 1, #text do\n    local char = text:sub(i,i)\n\
    \    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n \
    \ end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmil_ba6k.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpmil_ba6k.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if vowels:find(char) ~= nil then\n            new_text = new_text\
    \ .. char\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxz4oc2x3.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpxz4oc2x3.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text, 1 do\n        if text[i]\
    \ == 'a' or text[i] == 'e' or text[i] == 'i' or text[i] == 'o' or text[i] == 'u'\
    \ then\n            new_text = new_text .. text[i]\n        end\n    end\n   \
    \ return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplbg1yk1g.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmplbg1yk1g.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text, 1 do\n        local\
    \ char = text:sub(i, i)\n        if vowels[char] then\n            new_text =\
    \ new_text .. char\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7u8l0org.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp7u8l0org.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local text = text:gsub(\"[\" .. table.concat(vowels, \"\") .. \"\
    ]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp760klwp9.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp760klwp9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n    local text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmper29xxzl.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmper29xxzl.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3hl2by93.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp3hl2by93.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiou\"\n  local\
    \ new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i, i)\n  \
    \  if vowels:find(char) then\n      new_text = new_text .. char\n    end\n  end\n\
    \  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpznehglxj.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpznehglxj.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- We are going to remove all\
    \ vowels from the text\n  -- We are going to use gsub to remove vowels\n  -- gsub\
    \ is used to remove vowels from string\n  -- We are going to use gsub to remove\
    \ vowels\n  -- gsub is used to remove vowels from string\n  -- We are going to\
    \ use gsub to remove vowels\n  -- gsub is used to remove vowels from string\n\
    \  -- We are going to use gsub to remove vowels\n  -- gsub is used to remove vowels\
    \ from string\n  -- We are going to use gsub to remove vowels\n  -- gsub is used\
    \ to remove vowels from string\n  -- We are going to use gsub to remove vowels\n\
    \  -- gsub is used to remove vowels from string\n  -- We are going to use gsub\
    \ to remove vowels\n  -- gsub is used to remove vowels from string\n  -- We are\
    \ going to use gsub to remove vowels\n  -- gsub is used to remove vowels from\
    \ string\n  -- We are going to use gsub to remove vowels\n  -- gsub is used to\
    \ remove vowels from string\n  -- We are going to use gsub to remove vowels\n\
    \  -- gsub is used to remove vowels from string\n  -- We are going to use gsub\
    \ to remove vowels\n  -- gsub is used to remove vowels from string\n  -- We are\
    \ going to use gsub to remove vowels\n  -- gsub is used to remove vowels from\
    \ string\n  -- We are going to use gsub to remove vowels\n  -- gsub is used to\
    \ remove vowels from string\n  -- We are going to use gsub to remove vowels\n\
    \  -- gsub is used to remove vowels from string\n  -- We are going to use gsub\
    \ to remove vowels\n  -- gsub is used to remove vowels from string\n  -- We are\
    \ going to use gsub to remove vowels\n  -- gsub is used to remove vowels from\
    \ string\n  -- We are going to use gsub to remove vowels\n  -- gsub is used to\
    \ remove vowels from string\n  -- We are going to use gsub to remove vowels\n\
    \  -- gsub is used to remove vowels from string\n  -- We are going to use gsub\
    \ to remove vowels\n  -- gsub is used to remove vowels from string\n  -- We are\
    \ going to use gsub to remove vowels\n  -- gsub is used to remove vowels from\
    \ string\n  -- We are going to use gsub to remove vowels\n  -- gsub is used to\
    \ remove vowel\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyq6jcm8o.lua:59: ''end'' expected (to close ''function'' at
    line 2) near <eof>

    '
  stdout: ''
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiou\"\n  local\
    \ new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,i)\n   \
    \ if vowels:find(char) then\n      new_text = new_text .. char\n    end\n  end\n\
    \  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzfca471y.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpzfca471y.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text:sub(i, i)\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe40o07d5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpe40o07d5.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub('['..vowels[i]..'u]', '')\n  end\n  return new_text\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp645dydcs.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp645dydcs.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for i = 1, #text do\n        if text[i]\
    \ ~= nil then\n            if vowels[text[i]] then\n                new_text =\
    \ new_text .. text[i]\n            end\n        end\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp4k9ykas0.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp4k9ykas0.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if text[i]\
    \ ~= 'a' and text[i] ~= 'e' and text[i] ~= 'i' and text[i] ~= 'o' and text[i]\
    \ ~= 'u' then\n            new_text = new_text .. text[i]\n        end\n    end\n\
    \    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxwzct12j.lua:7:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmpxwzct12j.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmpxwzct12j.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for char in text:gmatch('[^'..table.concat(vowels,\
    \ '') .. ']') do\n    new_text = new_text .. char\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ilzrqgy.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp9ilzrqgy.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n    local new_text = \"\"\n    for i = 1, #text do\n \
    \       if vowels[text[i]] ~= nil then\n            new_text = new_text .. text[i]\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwdur_nf4.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpwdur_nf4.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if vowels:find(char) then\n            new_text = new_text .. char\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt_2dokng.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpt_2dokng.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3hl2by93.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp3hl2by93.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = ''\n    for char in text:gmatch('[^'..table.concat(vowels,\
    \ '') .. ']') do\n        new_text = new_text .. char\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu7h17kx6.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpu7h17kx6.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {\"a\", \"e\"\
    , \"i\", \"o\", \"u\"}\n  local new_text = text\n  for i = 1, #vowels do\n   \
    \ new_text = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt18j7yu9.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpt18j7yu9.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,i)\n\
    \    if vowels:find(char) then\n      new_text = new_text .. char\n    end\n \
    \ end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzykn46sz.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpzykn46sz.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text .. text[i]\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnx5v62b5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpnx5v62b5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local text = text:gsub(\"[\" .. table.concat(vowels, \"\") .. \"\
    ]\", \"\")\n  return text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp760klwp9.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp760klwp9.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text .. string.sub(text, i, i)\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmkpf2wk5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpmkpf2wk5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u', 'y'}\n    local new_text = ''\n    for i = 1, #text, 1 do\n      \
    \  if text[i] == 'a' or text[i] == 'e' or text[i] == 'i' or text[i] == 'o' or\
    \ text[i] == 'u' or text[i] == 'y' then\n            new_text = new_text .. text[i]\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfj_5xe3.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmphfj_5xe3.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text:sub(i, i)\n    end\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpaoi0ywq1.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmpaoi0ywq1.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ ~= nil then\n      new_text = new_text .. text[i]\n    end\n  end\n  return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgr2odi8y.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpgr2odi8y.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #vowels do\n        new_text\
    \ = new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n    end\n    return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpow8a8934.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpow8a8934.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text do\n        local char = text:sub(i,i)\n\
    \        if vowels:find(char) then\n            new_text = new_text .. char\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8u8icdu3.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmp8u8icdu3.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = text\n  for i = 1, #vowels do\n    new_text = new_text:gsub(\"\
    [\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr5upclfg.lua:6:\
    \ attempt to concatenate a nil value (field '?')\nstack traceback:\n\t/tmp/tmpr5upclfg.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmpr5upclfg.lua:14: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiou\"\n\
    \    local new_text = \"\"\n    for i = 1, #text do\n        if string.sub(text,\
    \ i, i) == vowels then\n            new_text = new_text .. string.sub(text, i,\
    \ i)\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu4zl8lbl.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpu4zl8lbl.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text, 1 do\n        local char =\
    \ text:sub(i, i)\n        if vowels:find(char) then\n            new_text = new_text\
    \ .. char\n        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk7qs1aki.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmpk7qs1aki.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = \"aeiouAEIOU\"\
    \n  local new_text = \"\"\n  for i = 1, #text do\n    local char = text:sub(i,i)\n\
    \    local vowel_index = vowels:find(char)\n    if vowel_index ~= nil then\n \
    \     new_text = new_text .. char\n    end\n  end\n  return new_text\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp40dact6l.lua:19:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"aei\"\nstack traceback:\n\t/tmp/tmp40dact6l.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[string.sub(text,\
    \ i, i)] then\n      new_text = new_text .. string.sub(text, i, i)\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmkpf2wk5.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpmkpf2wk5.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = \"aeiouAEIOU\"\
    \n    local new_text = \"\"\n    for i = 1, #text do\n        if string.find(vowels,\
    \ text[i]) then\n            new_text = new_text .. text[i]\n        end\n   \
    \ end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmptrv__xpl.lua:6:\
    \ bad argument #2 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmptrv__xpl.lua:6:\
    \ in local 'candidate'\n\t/tmp/tmptrv__xpl.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ ~= nil then\n      new_text = new_text .. text[i]\n    end\n  end\n  return\
    \ new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgr2odi8y.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmpgr2odi8y.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = ''\n  for i = 1, #text, 1 do\n    local char =\
    \ text[i]\n    if vowels[char] then\n      new_text = new_text .. char\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5p1nlml9.lua:18:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"\"\nstack traceback:\n\t/tmp/tmp5p1nlml9.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #vowels do\n    new_text =\
    \ new_text:gsub(\"[\" .. vowels[i] .. \"]\", \"\")\n  end\n  return new_text\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfe422eu_.lua:18:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpfe422eu_.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text\n    for i = 1, #text do\n        if vowels[text[i]]\
    \ then\n            new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n\
    \        end\n    end\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3hl2by93.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp3hl2by93.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text\n  for i = 1, #text do\n    if vowels[text[i]]\
    \ then\n      new_text = new_text:gsub(\"[\" .. text[i] .. \"]\", \"\")\n    end\n\
    \  end\n  return new_text\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = remove_vowels\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_o99my2k.lua:17:\
    \ expected: \n\"bcdf\nghjklm\"\nactual: \n\"abcdef\nghijklm\"\nstack traceback:\n\
    \t/tmp/tmp_o99my2k.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n  local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\")\
    \ .. \"]\", \"\")\n  return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj_szcnx7.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmpj_szcnx7.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n  -- remove vowels from text\n\
    \  local vowels = \"aeiouAEIOU\"\n  local vowels_idx = {}\n  for i = 1, #vowels\
    \ do\n    vowels_idx[vowels[i]] = i\n  end\n  local new_text = text:gsub(\"[\"\
    \ .. vowels .. \"]\", \"\")\n  -- remove vowels from new_text\n  local new_text_idx\
    \ = {}\n  for i = 1, #new_text do\n    new_text_idx[new_text[i]] = i\n  end\n\
    \  -- return new text without vowels\n  return new_text:sub(1, #new_text)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
    nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
    \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
    \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
    \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu6kyrfp_.lua:7:\
    \ table index is nil\nstack traceback:\n\t/tmp/tmpu6kyrfp_.lua:7: in local 'candidate'\n\
    \t/tmp/tmpu6kyrfp_.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659978060
- exit_code: 1
  program: "-- remove_vowels is a function that takes string and returns string without\
    \ vowels.\nlocal function remove_vowels(text)\n    local vowels = {'a', 'e', 'i',\
    \ 'o', 'u'}\n    local new_text = text:gsub(\"[\" .. table.concat(vowels, \"\"\
    ) .. \"]\", \"\")\n    return new_text\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = remove_vowels\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('abcdef\\nghijklm'), 'bcdf\\nghjklm')\n \
    \   lu.assertEquals(candidate('fedcba'), 'fdcb')\n    lu.assertEquals(candidate('eeeee'),\
    \ '')\n    lu.assertEquals(candidate('acBAA'), 'cB')\n    lu.assertEquals(candidate('EcBOO'),\
    \ 'cB')\n    lu.assertEquals(candidate('ybcd'), 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7_hhrro2.lua:15:\
    \ expected: \"cB\"\nactual: \"cBAA\"\nstack traceback:\n\t/tmp/tmp7_hhrro2.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659978059

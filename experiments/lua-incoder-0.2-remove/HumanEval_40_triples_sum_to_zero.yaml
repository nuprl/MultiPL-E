name: HumanEval_40_triples_sum_to_zero
language: lua
prompt: "-- triples_sum_to_zero takes a list of integers as an input.\n-- it returns\
  \ True if there are three distinct elements in the list that\n-- sum to zero, and\
  \ False otherwise.\nlocal function triples_sum_to_zero(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triples_sum_to_zero\n\
  \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -1}), false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 7}), false)\n    lu.assertEquals(candidate({1, 2, 5, 7}), false)\n    lu.assertEquals(candidate({2,\
  \ 4, -5, 3, 9, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -100}), false)\n    lu.assertEquals(candidate({100, 3, 5, -100}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local zeros = 0\n  local triples = 0\n  for i = 1, #l do\n    local\
    \ x = l[i]\n    if x == 0 then\n      zeros = zeros + 1\n    elseif x == x + x\
    \ then\n      triples = triples + 1\n    end\n  end\n  return zeros == triples\n\
    end", "  local sum = 0\n  for i = 1, #l do\n    sum = sum + l[i]\n    if sum >\
    \ 0 then\n      return false\n    end\n  end\n  return true\nend", "  local zeros\
    \ = 0\n  for i = 1, #l do\n    zeros = zeros + l[i]\n    if zeros == 3 then\n\
    \      return true\n    end\n  end\n  return false\nend", "  local num_triples\
    \ = 0\n  for i = 1, #l do\n    local triple = l[i]\n    local sum = 0\n    for\
    \ j = 1, #triple do\n      sum = sum + triple[j]\n    end\n    if sum == 0 then\n\
    \      num_triples = num_triples + 1\n    end\n  end\n  return num_triples ==\
    \ 3\nend", "  local num_triples = 0\n  for i = 1, #l do\n    local triple = l[i]\n\
    \    local sum = 0\n    for j = 1, #triple do\n      sum = sum + triple[j]\n \
    \   end\n    if sum == 0 then\n      num_triples = num_triples + 1\n    end\n\
    \  end\n  return num_triples == 3\nend", "  local sum = 0\n  for _, x in ipairs(l)\
    \ do\n    sum = sum + x\n    if sum > 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n\
    \    local e = l[i]\n    local s = e + zero\n    if s == zero then\n      three\
    \ = three + 1\n    elseif s == e then\n      three = three + 1\n    else\n   \
    \   return false\n    end\n  end\n  return three == 3\nend", "  local zeros =\
    \ 0\n  for _, v in ipairs(l) do\n    zeros = zeros + v\n    if zeros == 3 then\n\
    \      return true\n    end\n  end\n  return false\nend", "  local zeros = 0\n\
    \  local threes = 0\n  for _, v in pairs(l) do\n    zeros = zeros + v\n    if\
    \ zeros == 3 then\n      threes = threes + 1\n    end\n  end\n  return threes\
    \ == 3\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \    if sum > 0 then\n      return false\n    end\n  end\n  return true\nend",
  "  local n = 0\n  local s = nil\n  for i = 1, #l do\n    n = n + l[i]\n    if n\
    \ == 0 then\n      s = i\n      break\n    end\n  end\n  return s == nil\nend",
  "  local n = 1\n  local sum = 0\n  for i = 1, #l do\n    sum = sum + l[i]\n    if\
    \ sum == 0 then\n      n = n + 1\n      sum = l[i]\n    end\n  end\n  return n\
    \ == 3\nend", "  local zeros = 0\n  local triples = 0\n  for _, v in pairs(l)\
    \ do\n    if v == 0 then\n      zeros = zeros + 1\n    elseif v == 1 then\n  \
    \    triples = triples + 1\n    end\n  end\n  return zeros == triples\nend", " \
    \ local n = 0\n  local s = nil\n  for _, v in ipairs(l) do\n    n = n + 1\n  \
    \  s = s + v\n  end\n  if n == 3 then\n    return true\n  end\n  return false\n\
    end", "  local num_triples = 0\n  for _, v in pairs(l) do\n    local count = 0\n\
    \    for _, v2 in pairs(l) do\n      if v == v2 and v ~= 0 then\n        count\
    \ = count + 1\n      end\n    end\n    if count == 3 then\n      num_triples =\
    \ num_triples + 1\n    end\n  end\n  return num_triples == 3\nend", "  local zeros\
    \ = 0\n  for _, v in pairs(l) do\n    zeros = zeros + v\n    if zeros == 3 then\
    \ return true end\n  end\n  return false\nend", "  local function helper(l, i,\
    \ j)\n    if i == j then\n      return true\n    end\n    if i > j then\n    \
    \  return false\n    end\n    return helper(l, i - 1, j) or helper(l, i, j - 1)\n\
    \  end\n  return helper(l, #l, #l)\nend", "  local count = 0\n  for i = 1, #l\
    \ do\n    count = count + l[i]\n    if count > 2 then\n      return false\n  \
    \  end\n  end\n  return true\nend", "  local num_triples = 0\n  for i = 1, #l\
    \ do\n    local triple = l[i]\n    if triple[1] == 0 and triple[2] == 0 and triple[3]\
    \ == 0 then\n      num_triples = num_triples + 1\n    end\n  end\n  return num_triples\
    \ == 3\nend", "  local num_triples = 0\n  for i = 1, #l do\n    local a = l[i]\n\
    \    local b = l[i - 1]\n    local c = l[i - 2]\n    if a + b + c == 0 then\n\
    \      num_triples = num_triples + 1\n    end\n  end\n  return num_triples ==\
    \ 3\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n    local\
    \ e = l[i]\n    if e == zero or e == three then return false end\n    zero = zero\
    \ + e\n    three = three + e\n  end\n  return true\nend", "  local zero = 0\n\
    \  local three = 0\n  for _, v in ipairs(l) do\n    local t = v + zero\n    if\
    \ t == zero then\n      three = three + 1\n    elseif t == three then\n      return\
    \ true\n    end\n    zero = t\n  end\n  return false\nend", "  local zero = 0\n\
    \  local three = 0\n  for i = 1, #l do\n    local e = l[i]\n    if e == zero or\
    \ e == three then return false end\n    three = e + three\n  end\n  return true\n\
    end", "  local n = 0\n  for i = 1, #l do\n    n = n + l[i]\n  end\n  return n\
    \ == 0\nend", "  local function is_triple(l, i, j)\n    return l[i] == l[j] and\
    \ l[j] == l[i]\n  end\n  local function is_zero(l)\n    for i = 1, #l do\n   \
    \   if l[i] == 0 then return false end\n    end\n    return true\n  end\n  local\
    \ function is_three(l)\n    for i = 1, #l do\n      for j = 1, #l do\n       \
    \ if i == j and is_triple(l, i, j) then return true end\n      end\n    end\n\
    \    return false\n  end\n  local function is_two(l)\n    for i = 1, #l do\n \
    \     if l[i] == 0 and is_zero(l) then return true end\n    end\n    return false\n\
    \  end\n  local function is_one(l)\n    for i = 1, #l do\n      if l[i] == 1 and\
    \ is_zero(l) then return true end\n    end\n    return false\n  end\n  local function\
    \ is_zero(l)\n    for i = 1, #l do\n      if l[i] == 0 then return true end\n\
    \    end\n    return false\n  end\n  local function is_three(l)\n    for i = 1,\
    \ #l do\n      for j = 1, #l do\n        if i == j and is_triple(l, i, j) then\
    \ return true end\n      end\n    end\n    return false\n  end\n  local function\
    \ is_two(l)\n    for i = 1, #l do\n      if l[i] == 0 and is_zero(l) then return\
    \ true end\n    end\n    return false\n  end\n  local function is_one(l)\n   \
    \ for i = 1, #l do\n      if l[i] == 1 and is_zero(l) then return true end\n \
    \   end\n    return false\n  end\n  local function is_zero(l)\n    for i = 1,\
    \ #l do\n      if l[i] == 0 then return true end\n    end\n    return false\n\
    \  end\n  local function is_three(l)\n    for i = 1, #l do\n      for j = 1, #l\
    \ do\n        if i == j and is_triple(l, i, j) then return true end\n      end\n\
    \    end\n    return false\n  end\n  local function is_two(l)\n    for i = 1,\
    \ #l do\n      if l[i] == 0 and is_zero(l) then return true end\n    end\n   \
    \ return false\n  end\n  local function is_one(l)\n    for i = 1, #l do\n    \
    \  if l[i] == 1 and is_zero(l) then return true end\n    end\n    return false\n\
    \  end\n  local function is_zero(l)\n    for i = 1, #l do\n      if l[i] == 0\
    \ then return true end\n    end\n    return false\n  end\n  local function is_three(l)\n\
    \    for i = 1, #l do\n      for ", "  local zeros = 0\n  for _, v in pairs(l)\
    \ do\n    zeros = zeros + v\n  end\n  return zeros == 3\nend", "  local num_triples\
    \ = 0\n  for _, v in pairs(l) do\n    local num_triples = num_triples + 1\n  \
    \  if v == 0 then\n      return true\n    end\n  end\n  return false\nend", " \
    \ local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local num_triples\
    \ = 0\n  for i = 1, #l do\n    local triple = l[i]\n    local other_triple = l[i\
    \ - 2]\n    local third_triple = l[i - 3]\n    if triple + other_triple + third_triple\
    \ == 0 then\n      num_triples = num_triples + 1\n    end\n  end\n  return num_triples\
    \ == 3\nend", "  local num_triples = 0\n  for _, v in pairs(l) do\n    if v ==\
    \ 0 then\n      num_triples = num_triples + 1\n    end\n  end\n  return num_triples\
    \ == 3\nend", "  local sum = 0\n  for i = 1, #l do\n    sum = sum + l[i]\n   \
    \ if sum > 0 then\n      return false\n    end\n  end\n  return true\nend", " \
    \ local sum = 0\n  for _, v in pairs(l) do sum = sum + v end\n  return sum ==\
    \ 0\nend", "  local zeros = 0\n  for _, v in pairs(l) do\n    if v == 0 then zeros\
    \ = zeros + 1 end\n  end\n  return zeros == 3\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do sum = sum + v end\n  return sum == 0\nend", "  local function\
    \ is_triple(l, i, j)\n    return l[i] == l[j] and l[j] == l[i]\n  end\n  local\
    \ function is_zero(l)\n    return #l == 3 and is_triple(l, 1, 2) and is_triple(l,\
    \ 2, 3)\n  end\n  local function is_one(l)\n    return #l == 3 and is_triple(l,\
    \ 1, 1) and is_triple(l, 2, 2)\n  end\n  local function is_two(l)\n    return\
    \ #l == 3 and is_triple(l, 1, 1) and is_triple(l, 2, 1)\n  end\n  local function\
    \ is_three(l)\n    return #l == 3 and is_triple(l, 1, 2) and is_triple(l, 2, 2)\n\
    \  end\n  local function is_four(l)\n    return #l == 3 and is_triple(l, 1, 2)\
    \ and is_triple(l, 2, 1)\n  end\n  local function is_five(l)\n    return #l ==\
    \ 3 and is_triple(l, 1, 3) and is_triple(l, 2, 2)\n  end\n  local function is_six(l)\n\
    \    return #l == 3 and is_triple(l, 1, 3) and is_triple(l, 2, 1)\n  end\n  local\
    \ function is_seven(l)\n    return #l == 3 and is_triple(l, 1, 3) and is_triple(l,\
    \ 2, 1)\n  end\n  local function is_eight(l)\n    return #l == 3 and is_triple(l,\
    \ 1, 3) and is_triple(l, 2, 2)\n  end\n  local function is_nine(l)\n    return\
    \ #l == 3 and is_triple(l, 1, 3) and is_triple(l, 2, 1)\n  end\n  local function\
    \ is_ten(l)\n    return #l == 3 and is_triple(l, 1, 4) and is_triple(l, 2, 2)\n\
    \  end\n  local function is_eleven(l)\n    return #l == 3 and is_triple(l, 1,\
    \ 4) and is_triple(l, 2, 1)\n  end\n  local function is_twelve(l)\n    return\
    \ #l == 3 and is_triple(l, 1, 4) and is_triple(l, 2, 2)\n  end\n  local function\
    \ is_thirteen(l)\n    return #l == 3 and is_triple(l, 1, 4) and is_triple(l, 2,\
    \ 1)\n  end\n  local function is_fourteen(l)\n    return #l == 3 and is_triple(l,\
    \ 1, 5) and is_triple(l, 2, 2)\n  end\n  local function is_fifteen(l)\n    return\
    \ #l == 3 and is_triple(l, 1, 5) and is_triple(l, 2, 1)\n  end\n  local function\
    \ is_sixteen(l)\n    return #l == 3 and is_", "  local s = #l\n  local i = 0\n\
    \  while i < s do\n    local t = l[i]\n    i = i + 1\n    if t == t then return\
    \ false end\n    if t == t + t then return false end\n  end\n  return true\nend",
  "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n    local v = l[i]\n \
    \   if v == zero or v == three then return false end\n    zero = v\n    three\
    \ = three + v\n  end\n  return true\nend", "  local sum = 0\n  for i = 1, #l do\n\
    \    sum = sum + l[i]\n    if sum > 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local sum = 0\n  for _, x in ipairs(l) do\n    sum =\
    \ sum + x\n    if sum > 0 then\n      return false\n    end\n  end\n  return true\n\
    end", "  local sum = 0\n  for _, v in pairs(l) do sum = sum + v end\n  return\
    \ sum == 0\nend", "  local n = 0\n  local s = nil\n  for _, s in ipairs(l) do\n\
    \    n = n + 1\n    if n == 3 then\n      return true\n    end\n  end\n  return\
    \ false\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n    local\
    \ e = l[i]\n    if e == zero or e == three then\n      three = three + 1\n   \
    \ elseif e == zero then\n      zero = zero + 1\n    else\n      return false\n\
    \    end\n  end\n  return three == 3\nend", "  local s = #l\n  for i = 1, s do\n\
    \    local e = l[i]\n    for j = i + 1, s do\n      local f = l[j]\n      if e\
    \ + f == 0 then\n        return true\n      end\n    end\n  end\n  return false\n\
    end", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum\
    \ = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local s = #l\n  for i = 1, s do\n    local e = l[i]\n    for\
    \ j = i + 1, s do\n      local f = l[j]\n      if e + f == 0 then\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local num_triples = 0\n  for i = 1, #l\
    \ do\n    local triple = l[i]\n    if triple[1] == 0 and triple[2] == 0 and triple[3]\
    \ == 0 then\n      num_triples = num_triples + 1\n    end\n  end\n  return num_triples\
    \ == 3\nend", "  local s = #l\n  for i = 1, s do\n    local a, b, c = l[i], l[i\
    \ + 1], l[i + 2]\n    if a + b + c == 0 then\n      return true\n    end\n  end\n\
    \  return false\nend", "  local s = #l\n  for i = 1, s do\n    local e = l[i]\n\
    \    for j = i + 1, s do\n      local f = l[j]\n      if e + f == 0 then\n   \
    \     return true\n      end\n    end\n  end\n  return false\nend", "  local num_triples\
    \ = 0\n  for i = 1, #l do\n    local triple = l[i]\n    local sum = 0\n    for\
    \ j = 1, #triple do\n      sum = sum + triple[j]\n    end\n    if sum == 0 then\n\
    \      num_triples = num_triples + 1\n    end\n  end\n  return num_triples ==\
    \ 3\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n \
    \ end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n  end\n  return sum == 0\nend", "  local s = #l\n  for i =\
    \ 1, s do\n    local a = l[i]\n    for j = i + 1, s do\n      local b = l[j]\n\
    \      for k = j + 1, s do\n        local c = l[k]\n        if a + b + c == 0\
    \ then\n          return true\n        end\n      end\n    end\n  end\n  return\
    \ false\nend", "  local zeros = terralib.newlist()\n  local zeros_found = false\n\
    \  for i = 1, #l do\n    local value = l[i]\n    if value == 0 then\n      zeros:insert(i)\n\
    \      zeros_found = true\n    end\n  end\n  return zeros_found and #zeros ==\
    \ 3\nend", "  local function helper(l, i, j)\n    if i == j then\n      return\
    \ true\n    end\n    if l[i] == l[j] then\n      return helper(l, i + 1, j) or\
    \ helper(l, i, j + 1)\n    end\n    return false\n  end\n  return helper(l, 1,\
    \ #l)\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n\
    \    sum = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local s = #l\n  for i = 1, s do\n    local a = l[i]\n\
    \    for j = i + 1, s do\n      local b = l[j]\n      for k = j + 1, s do\n  \
    \      local c = l[k]\n        if a + b + c == 0 then\n          return true\n\
    \        end\n      end\n    end\n  end\n  return false\nend", "  local sum =\
    \ 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n    \
    \  return false\n    end\n  end\n  return true\nend", "  local zeros = { 0, 0,\
    \ 0 }\n  for i = 1, #l do\n    zeros[#zeros + 1] = 0\n    local a, b, c = l[i]\n\
    \    zeros[#zeros + 1] += a\n    zeros[#zeros + 1] += b\n    zeros[#zeros + 1]\
    \ += c\n  end\n  for i = 1, #zeros do\n    if zeros[i] ~= 0 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  local s = #l\n  for i = 1, s\
    \ do\n    local e = l[i]\n    for j = i + 1, s do\n      local f = l[j]\n    \
    \  if e + f == 0 then\n        return true\n      end\n    end\n  end\n  return\
    \ false\nend", "  local zero = 0\n  local triples = false\n  for i = 1, #l do\n\
    \    local value = l[i]\n    if value == zero then\n      triples = true\n   \
    \   break\n    end\n    zero = zero + value\n  end\n  return triples\nend", " \
    \ local zeros = 0\n  local triples = 0\n  for i = 1, #l do\n    local e = l[i]\n\
    \    if e == 0 then\n      zeros = zeros + 1\n    elseif e == e + e then\n   \
    \   triples = triples + 1\n    end\n  end\n  return zeros == 3 and triples ==\
    \ 3\nend", "  local zeros = 0\n  local triples = 0\n  for i = 1, #l do\n    local\
    \ e = l[i]\n    if e == 0 then\n      zeros = zeros + 1\n    elseif e == e + e\
    \ then\n      triples = triples + 1\n    end\n  end\n  return zeros == 3 and triples\
    \ == 3\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n    local\
    \ e = l[i]\n    local s = e + zero\n    if s == zero then\n      three = three\
    \ + 1\n    elseif s == e then\n      three = three + 1\n    else\n      zero =\
    \ s\n    end\n  end\n  return three == 3\nend", "  local zero = 0\n  local three\
    \ = 0\n  for i = 1, #l do\n    local e = l[i]\n    if e == zero or e == three\
    \ then return false end\n    zero = zero + e\n    three = three + e\n  end\n \
    \ return true\nend", "  local num_triples = 0\n  for _, v in pairs(l) do\n   \
    \ local num_triples = num_triples + 1\n    if v == 0 then\n      return true\n\
    \    end\n  end\n  return num_triples == 3\nend", "  local zeros = 0\n  local\
    \ triples = 0\n  for _, v in ipairs(l) do\n    if v == 0 then\n      zeros = zeros\
    \ + 1\n    elseif v == 1 then\n      triples = triples + 1\n    end\n  end\n \
    \ return zeros == 3 and triples == 3\nend", "  local zero = 0\n  local three =\
    \ 0\n  for i = 1, #l do\n    local x = l[i]\n    if x == zero or x == three then\
    \ return false end\n    zero = x\n    three = x + three\n  end\n  return true\n\
    end", "  local num_triples = 0\n  for _, v in pairs(l) do\n    local count = 0\n\
    \    for _, v2 in pairs(l) do\n      if v == v2 and v ~= 0 then\n        count\
    \ = count + 1\n      end\n    end\n    if count == 3 then\n      num_triples =\
    \ num_triples + 1\n    end\n  end\n  return num_triples == 3\nend", "  local zero\
    \ = 0\n  local three = 0\n  for i = 1, #l do\n    local e = l[i]\n    if e ==\
    \ zero or e == three then return false end\n    three = three + e\n  end\n  return\
    \ true\nend", "  local num_triples = 0\n  for _, v in pairs(l) do\n    local count\
    \ = 0\n    for _, v2 in pairs(l) do\n      if v == v2 and v > 0 then\n       \
    \ count = count + 1\n      end\n    end\n    if count == 3 then\n      num_triples\
    \ = num_triples + 1\n    end\n  end\n  return num_triples == 3\nend", "  local\
    \ sum = 0\n  for _, x in ipairs(l) do\n    sum = sum + x\n  end\n  return sum\
    \ == 0\nend", "  local zero = 0\n  local three = 0\n  for _, x in ipairs(l) do\n\
    \    zero = zero + x\n    if zero == 3 then\n      three = three + 1\n    end\n\
    \  end\n  return three == 3\nend", "  local num_triples = 0\n  for _, v in pairs(l)\
    \ do\n    local triples = v\n    for i = 1, #triples do\n      local a, b, c =\
    \ triples[i]\n      if a + b + c == 0 then\n        num_triples = num_triples\
    \ + 1\n      end\n    end\n  end\n  return num_triples == 3\nend", "  local num_triples\
    \ = 0\n  for _, v in pairs(l) do\n    if v == 0 then\n      num_triples = num_triples\
    \ + 1\n    end\n  end\n  return num_triples == 3\nend", "  local zeros = terralib.newlist()\n\
    \  local zero = nil\n  for i, v in ipairs(l) do\n    if v == 0 then\n      if\
    \ zero == nil then\n        zero = v\n      else\n        zeros = terralib.newlist()\n\
    \        zeros:insert(zero)\n        zero = v\n      end\n    end\n  end\n  if\
    \ #zeros > 3 then\n    return false\n  end\n  return #zeros == 3\nend", "  local\
    \ count = 0\n  for _, v in ipairs(l) do\n    count = count + 1\n    if count ==\
    \ 3 then\n      return true\n    end\n  end\n  return false\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n  \
    \    return false\n    end\n  end\n  return true\nend", "  local sum = 0\n  for\
    \ _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local n = 0\n  for _, v in pairs(l) do\n\
    \    n = n + v\n  end\n  return n == 0\nend", "  local zero = 0\n  local three\
    \ = 0\n  for i = 1, #l do\n    local e = l[i]\n    if e == zero or e == three\
    \ then return false end\n    zero = e + zero\n    three = three + e\n  end\n \
    \ return true\nend", "  local zeros = 0\n  for _, v in pairs(l) do\n    if v ==\
    \ 0 then\n      zeros = zeros + 1\n    end\n  end\n  return zeros == 3\nend",
  "  local s = #l\n  for i = 1, s do\n    local a, b, c = unpack(l)\n    if a + b\
    \ + c == 0 then\n      return true\n    end\n  end\n  return false\nend", "  local\
    \ zeros = 0\n  local triples = 0\n  for i = 1, #l do\n    local value = l[i]\n\
    \    if value == 0 then\n      zeros = zeros + 1\n    elseif value == -3 then\n\
    \      triples = triples + 1\n    end\n  end\n  return zeros == 3 and triples\
    \ == 3\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n\
    \  end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l) do sum\
    \ = sum + v end\n  return sum == 0\nend", "  local sum = 0\n  for _, v in pairs(l)\
    \ do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local zeros = 0\n\
    \  local triples = 0\n  for i = 1, #l do\n    if l[i] == 0 then\n      zeros =\
    \ zeros + 1\n    elseif l[i] == l[i - 1] + l[i - 2] then\n      triples = triples\
    \ + 1\n    end\n  end\n  return zeros == 3 and triples == 3\nend", "  local zero,\
    \ one = unpack(l)\n  local sum = 0\n  for i = 1, #l do\n    sum = sum + l[i]\n\
    \    if sum == zero then return true end\n  end\n  return false\nend", "  local\
    \ zero = 0\n  local three = 0\n  for _, x in ipairs(l) do\n    if x == zero then\n\
    \      three = three + 1\n    elseif x == three then\n      zero = zero + 1\n\
    \    else\n      return false\n    end\n  end\n  return true\nend", "  local s\
    \ = #l\n  for i = 1, s do\n    local t = l[i]\n    for j = i + 1, s do\n     \
    \ local u = l[j]\n      if t + u == 0 then\n        return true\n      end\n \
    \   end\n  end\n  return false\nend", "  local zeros = 0\n  local i = 1\n  while\
    \ i <= #l do\n    zeros = zeros + l[i]\n    i = i + 1\n  end\n  return zeros ==\
    \ 3\nend", "  local num_triples = 0\n  for _, v in pairs(l) do\n    if v == 0\
    \ then\n      num_triples = num_triples + 1\n    end\n  end\n  return num_triples\
    \ == 3\nend", "  local num_triples = 0\n  for i = 1, #l do\n    local triple =\
    \ l[i]\n    local sum = 0\n    for j = 1, #triple do\n      sum = sum + triple[j]\n\
    \    end\n    if sum == 0 then\n      num_triples = num_triples + 1\n    end\n\
    \  end\n  return num_triples == 3\nend", "  local zeros = 0\n  local triples =\
    \ 0\n  for i = 1, #l do\n    local value = l[i]\n    if value == 0 then\n    \
    \  zeros = zeros + 1\n    elseif value == 1 then\n      triples = triples + 1\n\
    \    else\n      return false\n    end\n  end\n  return zeros == 3 and triples\
    \ == 3\nend", "  local zeros = 0\n  local triples = 0\n  for i = 1, #l do\n  \
    \  local e = l[i]\n    if e == 0 then\n      zeros = zeros + 1\n    elseif e ==\
    \ e + e then\n      triples = triples + 1\n    end\n  end\n  return zeros == 3\
    \ and triples == 3\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l\
    \ do\n    local v = l[i]\n    if v == zero then\n      three = three + 1\n   \
    \ elseif v == three then\n      return true\n    end\n  end\n  return false\n\
    end", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if\
    \ sum > 0 then\n      return false\n    end\n  end\n  return true\nend", "  local\
    \ sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n  end\n  return sum ==\
    \ 0\nend", "  local sum = 0\n  for _, v in pairs(l) do sum = sum + v end\n  return\
    \ sum == 0\nend", "  local s = #l\n  local i = 1\n  while i < s do\n    local\
    \ t = l[i]\n    local j = i + 1\n    while j < s do\n      local tt = l[j]\n \
    \     if t == tt then\n        return false\n      elseif t + tt ~= 0 then\n \
    \       return true\n      end\n      j = j + 1\n    end\n    i = i + 1\n  end\n\
    \  return true\nend", "  local n = 0\n  for _, v in ipairs(l) do\n    n = n +\
    \ v\n  end\n  return n == 0\nend", "  local s = #l\n  for i = 1, s do\n    local\
    \ a, b, c = l[i], l[i + 1], l[i + 2]\n    if a + b + c == 0 then\n      return\
    \ true\n    end\n  end\n  return false\nend", "  local s = #l\n  for i = 1, s\
    \ - 1 do\n    local a = l[i]\n    for j = i + 1, s do\n      local b = l[j]\n\
    \      local c = l[j + 1]\n      if a + b + c == 0 then\n        return true\n\
    \      end\n    end\n  end\n  return false\nend", "  local n = 0\n  for _, v in\
    \ pairs(l) do\n    n = n + v\n  end\n  return n == 0\nend", "  local num_triples\
    \ = 0\n  for _, v in pairs(l) do\n    if v == 0 then\n      num_triples = num_triples\
    \ + 1\n    end\n  end\n  return num_triples == 3\nend", "  local num_triples =\
    \ 0\n  for i = 1, #l do\n    local triple = l[i]\n    local sum = 0\n    for j\
    \ = 1, #triple do\n      sum = sum + triple[j]\n    end\n    if sum == 0 then\n\
    \      num_triples = num_triples + 1\n    end\n  end\n  return num_triples ==\
    \ 3\nend", "  local zeros = 0\n  for _, v in pairs(l) do\n    zeros = zeros +\
    \ v\n  end\n  if zeros == 3 then\n    return true\n  else\n    return false\n\
    \  end\nend", "  local sum = 0\n  for _, x in ipairs(l) do\n    sum = sum + x\n\
    \    if sum > 0 then\n      return false\n    end\n  end\n  return true\nend",
  "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n    local e = l[i]\n \
    \   local s = e + zero\n    if s == zero then return false end\n    three = three\
    \ + 1\n    if s == e then three = three - 1 end\n    zero = s\n  end\n  return\
    \ three == 3\nend", "  local num_triples = 0\n  for i = 1, #l do\n    local a\
    \ = l[i]\n    local b = l[i - 1]\n    local c = l[i - 2]\n    if a + b + c ==\
    \ 0 then\n      num_triples = num_triples + 1\n    end\n  end\n  return num_triples\
    \ == 3\nend", "  local s = #l\n  for i = 1, s do\n    local t = l[i]\n    for\
    \ j = i + 1, s do\n      local u = l[j]\n      if t + u == 0 then\n        return\
    \ true\n      end\n    end\n  end\n  return false\nend", "  local n = 0\n  for\
    \ _, x in ipairs(l) do\n    n = n + x\n  end\n  return n == 0\nend", "  local\
    \ n = 0\n  for _, v in pairs(l) do\n    n = n + 1\n    if n == 3 then\n      return\
    \ true\n    end\n  end\n  return false\nend", "  local s = #l\n  local t = 0\n\
    \  for i = 1, s do\n    t = t + l[i]\n  end\n  return t == 0\nend", "  local s\
    \ = #l\n  local i = 0\n  while i < s do\n    local x = l[i]\n    i = i + 1\n \
    \   if x == 0 then\n      return true\n    end\n    if x > 0 then\n      s = s\
    \ - 1\n    end\n  end\n  return false\nend", "  local sum = 0\n  for _, x in ipairs(l)\
    \ do\n    sum = sum + x\n    if sum > 0 then\n      return false\n    end\n  end\n\
    \  return true\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n\
    \    local x = l[i]\n    if x == zero or x == three then return false end\n  \
    \  zero = x\n    three = three + x\n  end\n  return true\nend", "  local zero\
    \ = 0\n  local one = 0\n  local two = 0\n  for _, v in ipairs(l) do\n    if v\
    \ == zero then\n      one = one + 1\n    elseif v == one then\n      two = two\
    \ + 1\n    elseif v == two then\n      return true\n    end\n  end\n  return false\n\
    end", "  local zeros = 0\n  for _, v in pairs(l) do\n    if v == 0 then\n    \
    \  zeros = zeros + 1\n    end\n  end\n  return zeros == 3\nend", "  local zero,\
    \ one, two = 0, 0, 0\n  for _, v in ipairs(l) do\n    if v == zero then\n    \
    \  one = one + 1\n    elseif v == one then\n      two = two + 1\n    elseif v\
    \ == two then\n      return true\n    end\n  end\n  return false\nend", "  local\
    \ zeros = terralib.newlist()\n  local ones = terralib.newlist()\n  local twos\
    \ = terralib.newlist()\n  for i = 1, #l do\n    local e = l[i]\n    if e == 0\
    \ then\n      if #zeros == 0 then\n        zeros:insert(i)\n      else\n     \
    \   ones:insert(i)\n      end\n    elseif e == 1 then\n      if #ones == 0 then\n\
    \        ones:insert(i)\n      elseif #twos == 0 then\n        twos:insert(i)\n\
    \      else\n        zeros:insert(i)\n      end\n    elseif e == 2 then\n    \
    \  if #twos == 0 then\n        twos:insert(i)\n      else\n        ones:insert(i)\n\
    \      end\n    end\n  end", "  local zeros = 0\n  for _, v in pairs(l) do\n \
    \   if v == 0 then\n      zeros = zeros + 1\n    end\n  end\n  return zeros ==\
    \ 3\nend", "  local zeros = 0\n  for _, v in pairs(l) do\n    if v == 0 then\n\
    \      zeros = zeros + 1\n    end\n  end\n  return zeros == 3\nend", "  local\
    \ zeros = 0\n  local triples = 0\n  for i = 1, #l do\n    local e = l[i]\n   \
    \ if e == 0 then\n      zeros = zeros + 1\n    elseif e == e + e then\n      triples\
    \ = triples + 1\n    end\n  end\n  return zeros == 3 and triples == 3\nend", " \
    \ local num_triples = 0\n  for i = 1, #l do\n    local triple = l[i]\n    local\
    \ sum = 0\n    for j = 1, #triple do\n      sum = sum + triple[j]\n    end\n \
    \   if sum == 0 then\n      num_triples = num_triples + 1\n    end\n  end\n  return\
    \ num_triples == 3\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n    if sum > 0 then\n      return false\n    end\n  end\n  return\
    \ true\nend", "  local sum = 0\n  for _, v in pairs(l) do sum = sum + v end\n\
    \  return sum == 0\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum\
    \ = sum + v\n  end\n  return sum == 0\nend", "  local s = #l\n  for i = 1, s -\
    \ 1 do\n    local t = l[i] + l[i + 1] + l[i + 2]\n    if t ~= 0 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  local zeros = 0\n  for _, v in\
    \ ipairs(l) do\n    if v == 0 then zeros = zeros + 1 end\n  end\n  return zeros\
    \ == 3\nend", "  local zeros = 0\n  for _, v in pairs(l) do\n    if v == 0 then\n\
    \      zeros = zeros + 1\n    end\n  end\n  return zeros == 3\nend", "  local\
    \ num_triples = 0\n  for i = 1, #l do\n    local triple = l[i]\n    if triple[1]\
    \ == 0 and triple[2] == 0 and triple[3] == 0 then\n      num_triples = num_triples\
    \ + 1\n    end\n  end\n  return num_triples == 3\nend", "  local zeros = 0\n \
    \ local triples = 0\n  for i = 1, #l do\n    local x = l[i]\n    if x == 0 then\n\
    \      zeros = zeros + 1\n    elseif x == 1 then\n      triples = triples + 1\n\
    \    elseif x == 2 then\n      triples = triples + 1\n    elseif x == 3 then\n\
    \      triples = triples + 1\n    elseif x == -3 then\n      triples = triples\
    \ + 1\n    end\n  end\n  return zeros == 3 and triples == 3\nend", "  local sum\
    \ = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n    if sum > 0 then\n   \
    \   return false\n    end\n  end\n  return true\nend", "  local zero = 0\n  local\
    \ three = 0\n  for i = 1, #l do\n    local e = l[i]\n    if e == zero or e ==\
    \ three then\n      three = e + three\n    else\n      three = e + three\n   \
    \   zero = e + zero\n    end\n  end\n  return three == 0\nend", "  local s = #l\n\
    \  for i = 1, s do\n    local a, b, c = l[i], l[i + 1], l[i + 2]\n    if a + b\
    \ + c == 0 then\n      return true\n    end\n  end\n  return false\nend", "  local\
    \ sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum\
    \ == 0\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n    local\
    \ e = l[i]\n    if e == zero or e == three then return false end\n    zero = zero\
    \ + e\n    three = three + e\n  end\n  return true\nend", "  local sum = 0\n \
    \ for _, v in pairs(l) do\n    sum = sum + v\n    if sum > 0 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  local num_triples = 0\n  for\
    \ _, v in pairs(l) do\n    if v == 0 then\n      num_triples = num_triples + 1\n\
    \    end\n  end\n  return num_triples == 3\nend", "  local count = 0\n  for _,\
    \ x in ipairs(l) do\n    if x == 0 then\n      count = count + 1\n    end\n  end\n\
    \  return count == 3\nend", "  local s = #l\n  local i = 1\n  while i <= s do\n\
    \    local x = l[i]\n    local y = l[i - 1]\n    local z = l[i - 2]\n    if x\
    \ + y + z == 0 then\n      return true\n    end\n    i = i + 1\n  end\n  return\
    \ false\nend", "  local zeros = 0\n  local triples = 0\n  for i = 1, #l do\n \
    \   if l[i] == 0 then\n      zeros = zeros + 1\n    elseif l[i] == l[i - 1] +\
    \ l[i - 2] then\n      triples = triples + 1\n    end\n  end\n  return zeros ==\
    \ 3 and triples == 3\nend", "  local num_triples = 0\n  for _, v in pairs(l) do\n\
    \    local count = 0\n    for _, v2 in pairs(l) do\n      if v == v2 and v ~=\
    \ 0 then\n        count = count + 1\n      end\n    end\n    if count == 3 then\n\
    \      num_triples = num_triples + 1\n    end\n  end\n  return num_triples ==\
    \ 3\nend", "  local zero, one = unpack(l)\n  local two = zero + one\n  local three\
    \ = zero + two\n  return three == 0 and two == 0 and one == 0\nend", "  local\
    \ zero = 0\n  local one = 0\n  local two = 0\n  for i = 1, #l do\n    local e\
    \ = l[i]\n    if e == zero then\n      one = one + 1\n    elseif e == one then\n\
    \      two = two + 1\n    elseif e == two then\n      return false\n    end\n\
    \  end\n  return true\nend", "  local zeros = false\n  local zero\n  for _, zero\
    \ in ipairs(l) do\n    if zeros then\n      return false\n    end\n    zeros =\
    \ true\n  end\n  return true\nend", "  local zero = 0\n  local three = 0\n  for\
    \ i = 1, #l do\n    local e = l[i]\n    if e == zero or e == three then return\
    \ false end\n    zero = e + zero\n    three = three + e\n  end\n  return true\n\
    end", "  local s = #l\n  for i = 1, s do\n    local a, b, c = l[i], l[i + 1],\
    \ l[i + 2]\n    if a + b + c == 0 then\n      return true\n    end\n  end\n  return\
    \ false\nend", "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n\
    \    if sum > 0 then\n      return false\n    end\n  end\n  return true\nend",
  "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n    if sum > 0\
    \ then\n      return false\n    end\n  end\n  return true\nend", "  local zeros\
    \ = 0\n  local triples = 0\n  for _, x in ipairs(l) do\n    if x == 0 then\n \
    \     zeros = zeros + 1\n    elseif x == 1 then\n      triples = triples + 1\n\
    \    end\n  end\n  return zeros == 3 and triples == 3\nend", "  local s = #l\n\
    \  for i = 1, s do\n    local a, b, c = unpack(l)\n    if a + b + c ~= 0 then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local zero, one,\
    \ two = 0, 0, 0\n  for i = 1, #l do\n    local e = l[i]\n    if e == zero then\
    \ zero = one end\n    if e == one then one = two end\n    if e == two then two\
    \ = zero end\n  end\n  return one == zero and two == zero\nend", "  local function\
    \ helper(l, i, j)\n    if i == j then\n      return true\n    end\n    if l[i]\
    \ == l[j] then\n      return helper(l, i + 1, j) or helper(l, i + 1, j + 1)\n\
    \    end\n    return false\n  end\n  return helper(l, 1, #l)\nend", "  local sum\
    \ = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\n\
    end", "  local s = #l\n  for i = 1, s do\n    local t = l[i]\n    for j = i +\
    \ 1, s do\n      local u = l[j]\n      if t + u == 0 then\n        return true\n\
    \      end\n    end\n  end\n  return false\nend", "  local num_triples = 0\n \
    \ for i = 1, #l do\n    local a = l[i]\n    local b = l[i + 1]\n    local c =\
    \ l[i + 2]\n    if a + b + c == 0 then\n      num_triples = num_triples + 1\n\
    \    end\n  end\n  return num_triples == 3\nend", "  local zeros = false\n  local\
    \ zeros_count = 0\n  for i = 1, #l do\n    if l[i] == 0 then\n      zeros = true\n\
    \      zeros_count = zeros_count + 1\n    end\n  end\n  return zeros and zeros_count\
    \ == 3\nend", "  local s = #l\n  local t = 0\n  local i = 1\n  while i <= s do\n\
    \    t = t + l[i]\n    if t == 0 then\n      return true\n    end\n    i = i +\
    \ 1\n  end\n  return false\nend", "  local zeros = terralib.newlist()\n  local\
    \ threes = terralib.newlist()\n  for i = 1, #l do\n    local zero = false\n  \
    \  local three = false\n    for j = 1, #zeros do\n      local x = zeros[j]\n \
    \     if x + l[i] == 0 then\n        zero = true\n        break\n      elseif\
    \ x + l[i] == l[j] then\n        three = true\n        break\n      end\n    end\n\
    \    if zero then\n      table.insert(zeros, l[i])\n    elseif three then\n  \
    \    table.insert(threes, l[i])\n    end\n  end\n  return #zeros > 0 and #threes\
    \ > 0\nend", "  local zeros = terralib.newlist()\n  local zeros_count = 0\n  for\
    \ _, x in ipairs(l) do\n    if x == 0 then\n      zeros[zeros_count] = x\n   \
    \   zeros_count = zeros_count + 1\n    end\n  end\n  return zeros_count == 3\n\
    end", "  local zeros = { 0, 0, 0 }\n  for i = 1, #l do\n    zeros[#zeros + 1]\
    \ = l[i]\n  end\n  for i = 1, #zeros do\n    if zeros[i] > 0 then\n      return\
    \ false\n    end\n  end\n  return true\nend", "  local n = 0\n  for _, v in pairs(l)\
    \ do\n    n = n + v\n  end\n  return n == 0\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do\n    sum = sum + v\n    if sum > 0 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local s = #l\n  local sum = 0\n  for\
    \ i = 1, s do\n    sum = sum + l[i]\n    if sum > 0 then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local function helper(l, i, j)\n    if\
    \ i == j then\n      return true\n    end\n    if l[i] == l[j] then\n      return\
    \ helper(l, i + 1, j) or helper(l, i + 1, j + 1)\n    end\n    return false\n\
    \  end\n  local n = #l\n  local sum = 0\n  for i = 1, n do\n    sum = sum + l[i]\n\
    \    if helper(l, i, n - 1) then\n      return sum == 0\n    end\n  end\n  return\
    \ false\nend", "  local num_triples = 0\n  local triples_sum_to_zero = false\n\
    \  for i = 1, #l do\n    local triple = l[i]\n    local sum_to_zero = triple[1]\n\
    \    for j = 2, #triple do\n      sum_to_zero = sum_to_zero - triple[j]\n    \
    \  if sum_to_zero ~= 0 then\n        num_triples = num_triples + 1\n        triples_sum_to_zero\
    \ = true\n      end\n    end\n  end\n  return num_triples == 3\nend", "  local\
    \ num_triples = 0\n  local triples_sum_to_zero = false\n  for i = 1, #l do\n \
    \   local triple = l[i]\n    local sum_to_zero = triple[1]\n    if sum_to_zero\
    \ > 0 then\n      num_triples = num_triples + 1\n      if num_triples == 3 then\n\
    \        triples_sum_to_zero = true\n      end\n    end\n  end\n  return triples_sum_to_zero\n\
    end", "  local num_triples = 0\n  local triples_sum_to_zero = false\n  for i =\
    \ 1, #l do\n    local triple = l[i]\n    local next_triple = l[i + 1]\n    local\
    \ next_next_triple = l[i + 2]\n    if triple ~= next_triple and triple ~= next_next_triple\
    \ then\n      num_triples = num_triples + 1\n      if num_triples == 3 then\n\
    \        triples_sum_to_zero = true\n      end\n    end\n  end\n  return triples_sum_to_zero\n\
    end", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n  end\n\
    \  return sum == 0\nend", "  local function helper(l, sum)\n    if #l == 0 then\n\
    \      return sum == 0\n    elseif #l == 1 then\n      return sum == l[1]\n  \
    \  else\n      return helper(l[#l], sum + l[#l - 1]) or helper(l[#l - 1], sum)\n\
    \    end\n  end\n  return helper(l, 0)\nend", "  local sum = 0\n  for _, x in\
    \ ipairs(l) do\n    sum = sum + x\n    if sum > 0 then\n      return false\n \
    \   end\n  end\n  return true\nend", "  local zeros = false\n  local sum = 0\n\
    \  for i = 1, #l do\n    sum = sum + l[i]\n    if sum == 0 then\n      zeros =\
    \ true\n    end\n  end\n  return zeros\nend", "  local zero = 0\n  local three\
    \ = 0\n  for i = 1, #l do\n    local e = l[i]\n    if e == zero or e == three\
    \ then return false end\n    zero = zero + e\n    three = three + e\n  end\n \
    \ return true\nend", "  local zeros = 0\n  local i = 1\n  while i < #l do\n  \
    \  local x = l[i]\n    if x == 0 then\n      zeros = zeros + 1\n    elseif zeros\
    \ == 3 then\n      return true\n    end\n    i = i + 1\n  end\n  return false\n\
    end", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n    local x =\
    \ l[i]\n    local y = l[i + 1]\n    local z = l[i + 2]\n    local sum = x + y\
    \ + z\n    if sum == zero then\n      three = three + 1\n    elseif sum > zero\
    \ then\n      return false\n    end\n  end\n  return three == 3\nend", "  local\
    \ s = #l\n  for i = 1, s do\n    local a = l[i]\n    for j = i + 1, s do\n   \
    \   local b = l[j]\n      for k = j + 1, s do\n        local c = l[k]\n      \
    \  if a + b + c == 0 then\n          return true\n        end\n      end\n   \
    \ end\n  end\n  return false\nend", "  local n = 0\n  for _, x in ipairs(l) do\n\
    \    n = n + x\n  end\n  return n == 0\nend", "  local num_triples = 0\n  for\
    \ i = 1, #l do\n    local a = l[i]\n    local b = l[i + 1]\n    local c = l[i\
    \ + 2]\n    local triples = a + b + c\n    if triples == 0 then\n      num_triples\
    \ = num_triples + 1\n    end\n  end\n  return num_triples == 3\nend", "  local\
    \ s = #l\n  for i = 1, s do\n    local a, b, c = l[i], l[i + 1], l[i + 2]\n  \
    \  if a + b + c == 0 then\n      return true\n    end\n  end\n  return false\n\
    end", "  local s = #l\n  local i = 1\n  while i <= s do\n    local k = i - 1\n\
    \    while k >= 0 and l[k] == l[i] do\n      k = k - 1\n    end\n    if k == i\
    \ then\n      return true\n    end\n    i = i + 1\n  end\n  return false\nend",
  "  local zeros = 0\n  for _, v in ipairs(l) do\n    zeros = zeros + v\n    if zeros\
    \ == 3 then return true end\n  end\n  return false\nend", "  local count = 0\n\
    \  for _, v in pairs(l) do\n    count = count + 1\n    if v == 0 then\n      return\
    \ true\n    end\n  end\n  return count == 3\nend", "  local sum = 0\n  for _,\
    \ v in pairs(l) do\n    sum = sum + v\n  end\n  return sum == 0\nend", "  local\
    \ zeros = 0\n  local triples = 0\n  for i = 1, #l do\n    local v = l[i]\n   \
    \ if v == 0 then\n      zeros = zeros + 1\n    elseif v == 1 then\n      triples\
    \ = triples + 1\n    end\n  end\n  return zeros == 3 and triples == 3\nend", " \
    \ local num_triples = 0\n  for i = 1, #l do\n    local triple = l[i]\n    if triple[1]\
    \ == 0 and triple[2] == 0 and triple[3] == 0 then\n      num_triples = num_triples\
    \ + 1\n    end\n  end\n  return num_triples == 3\nend", "  local zeros = 0\n \
    \ for _, v in ipairs(l) do\n    if v == 0 then zeros = zeros + 1 end\n  end\n\
    \  return zeros == 3\nend", "  local num_triples = 0\n  local triples_sum_to_zero\
    \ = false\n  for i = 1, #l do\n    local triple = l[i]\n    local sum_to_zero\
    \ = triple[1]\n    for j = 2, #triple do\n      sum_to_zero = sum_to_zero - triple[j]\n\
    \      if sum_to_zero ~= 0 then\n        num_triples = num_triples + 1\n     \
    \   triples_sum_to_zero = true\n        break\n      end\n    end\n  end\n  return\
    \ num_triples == 3\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l\
    \ do\n    local e = l[i]\n    local s = e + zero\n    if s == zero then return\
    \ false end\n    if s == three then return true end\n    three = s\n  end\n  return\
    \ false\nend", "  local sum = 0\n  for _, v in ipairs(l) do\n    sum = sum + v\n\
    \    if sum > 0 then\n      return false\n    end\n  end\n  return true\nend",
  "  local sum = 0\n  for _, v in pairs(l) do\n    sum = sum + v\n    if sum > 0 then\n\
    \      return false\n    end\n  end\n  return true\nend", "  local zero = 0\n\
    \  local three = 0\n  for i = 1, #l do\n    local e = l[i]\n    local s = e +\
    \ zero\n    if s == zero then\n      three = three + 1\n    elseif s == e then\n\
    \      three = three + 1\n    else\n      return false\n    end\n  end\n  return\
    \ three == 3\nend", "  local zero = 0\n  local three = 0\n  for i = 1, #l do\n\
    \    local x = l[i]\n    if x == zero or x == three then return false end\n  \
    \  zero = x\n    three = three + x\n  end\n  return true\nend", "  local num_triples\
    \ = 0\n  for _, v in pairs(l) do\n    local count = 0\n    for _, v2 in pairs(l)\
    \ do\n      if v == v2 and v ~= 0 then\n        count = count + 1\n      end\n\
    \    end\n    if count == 3 then\n      num_triples = num_triples + 1\n    end\n\
    \  end\n  return num_triples == 3\nend", "  local num_triples = 0\n  for _, v\
    \ in pairs(l) do\n    if v == 0 then\n      num_triples = num_triples + 1\n  \
    \  end\n  end\n  return num_triples == 3\nend", "  local zero = 0\n  local three\
    \ = 0\n  for i = 1, #l do\n    local e = l[i]\n    if e == zero or e == three\
    \ then return false end\n    zero = e + zero\n    three = three + e\n  end\n \
    \ return true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

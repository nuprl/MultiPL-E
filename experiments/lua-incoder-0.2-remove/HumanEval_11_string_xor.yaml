name: HumanEval_11_string_xor
language: lua
prompt: "-- Input are two strings a and b consisting only of 1s and 0s.\n-- Perform\
  \ binary XOR on these inputs and return result also as a string.\nlocal function\
  \ string_xor(a, b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = string_xor\n\
  \    lu.assertEquals(candidate('111000', '101010'), '010010')\n    lu.assertEquals(candidate('1',\
  \ '1'), '0')\n    lu.assertEquals(candidate('0101', '0000'), '0101')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n   \
    \ result = (result and c) or (not c and result)\n  end\n  return result\nend",
  "  local xor_result = ''\n  for i = 1, #a do\n    xor_result = xor_result .. string.format(\"\
    %x\", a[i] ^ b[i])\n  end\n  return xor_result\nend", "  local result = \"\"\n\
    \  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result\
    \ = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n\
    \  return result\nend", "  local xor = ffi.new(\"unsigned char[1]\")\n  ffi.copy(\n\
    \    xor,\n    ffi.cast(\"const unsigned char[1]\", ffi.new(\"const unsigned char[1]\"\
    , a)),\n    ffi.sizeof(\"unsigned char[1]\")\n  )\n  ffi.copy(\n    xor,\n   \
    \ ffi.cast(\"const unsigned char[1]\", ffi.new(\"const unsigned char[1]\", b)),\n\
    \    ffi.sizeof(\"unsigned char[1]\")\n  )\n  return ffi.string(\n    ffi.cast(\"\
    char*\", ffi.cast(\"void*\", xor))\n  )\nend", "  local result = \"\"\n  for i\
    \ = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local res = \"\"\n  for i = 1, #a do\n    local c = a[i]\n\
    \    local d = b[i]\n    if c ~= d then\n      res = res .. \"0\"\n    else\n\
    \      res = res .. \"1\"\n    end\n  end\n  return res\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c\
    \ ~= d then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    result = (result .. tostring(c)) .. tostring(b[i])\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local res = \"\"\n  for i = 1, #a do\n    local c = a[i] ^\
    \ b[i]\n    if c > 0 then\n      res = res .. \"1\"\n    else\n      res = res\
    \ .. \"0\"\n    end\n  end\n  return res\nend", "  local xor_result = \"\"\n \
    \ for i = 1, #a do\n    xor_result = xor_result .. string.format(\"%x\", a[i]\
    \ ^ b[i])\n  end\n  return xor_result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "    local result\
    \ = \"\"\n    for i = 1, #a do\n        local c = a[i]\n        result = (result\
    \ .. b[i]) .. c\n    end\n    return result\nend", "  local res = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     res = res .. \"1\"\n    else\n      res = res .. \"0\"\n    end\n  end\n\
    \  return res\nend", "    local res = \"\"\n    for i = 1, #a do\n        local\
    \ c = a[i] ^ b[i]\n        if c > 0 then\n            res = res .. \"1\"\n   \
    \     else\n            res = res .. \"0\"\n        end\n    end\n    return res\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\n    else\n   \
    \   result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ binA = \"\"\n  local binB = \"\"\n  for i = 1, #a do\n    binA = binA .. tostring(a[i])\n\
    \  end\n  for i = 1, #b do\n    binB = binB .. tostring(b[i])\n  end\n  return\
    \ binA:gsub(\"1\", \"0\"):gsub(\"0\", \"1\"):gsub(\"10\", \"1\"):gsub(\"11\",\
    \ \"0\")\nend", "  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local\
    \ xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a,\
    \ \"rb\"), a, \"rb\")\n  local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n \
    \ local xor = assert(io.open(a, \"rb\"), a, \"rb\")\n", "    local result = \"\
    \"\n    for i = 1, #a do\n        local c = a[i]\n        result = (result ..\
    \ tostring(c)) .. tostring(b[i])\n    end\n    return result\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c\
    \ ~= d then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local xor_result = ''\n  for\
    \ i = 1, #a do\n    xor_result = xor_result .. tostring(a:byte(i)) .. tostring(b:byte(i))\n\
    \  end\n  return xor_result\nend", "    local result = \"\"\n    for i = 1, #a\
    \ do\n        result = result .. string.format(\"%x\", a[i] ^ b[i])\n    end\n\
    \    return result\nend", "    local res = \"\"\n    for i = 1, #a do\n      \
    \  res = res .. string.format(\"%x\", a[i] ^ b[i])\n    end\n    return res\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\n    else\n   \
    \   result = result .. \"0\"\n    end\n  end\n  return result\nend", "    local\
    \ xor = assert(io.open(\"/dev/urandom\", \"r\"), \n        \"/dev/urandom is not\
    \ available\")\n    local xorbuf = xor:read(\"*all\")\n    local xorbuflen = #xorbuf\n\
    \    local xorbuf2 = xor:read(\"*all\")\n    local xorbuf2len = #xorbuf2\n   \
    \ local xorbuf3 = xor:read(\"*all\")\n    local xorbuf3len = #xorbuf3\n    local\
    \ xorbuf4 = xor:read(\"*all\")\n    local xorbuf4len = #xorbuf4\n    local xorbuf5\
    \ = xor:read(\"*all\")\n    local xorbuf5len = #xorbuf5\n    local xorbuf6 = xor:read(\"\
    *all\")\n    local xorbuf6len = #xorbuf6\n    local xorbuf7 = xor:read(\"*all\"\
    )\n    local xorbuf7len = #xorbuf7\n    local xorbuf8 = xor:read(\"*all\")\n \
    \   local xorbuf8len = #xorbuf8\n    local xorbuf9 = xor:read(\"*all\")\n    local\
    \ xorbuf9len = #xorbuf9\n    local xorbuf10 = xor:read(\"*all\")\n    local xorbuf10len\
    \ = #xorbuf10\n    local xorbuf11 = xor:read(\"*all\")\n    local xorbuf11len\
    \ = #xorbuf11\n    local xorbuf12 = xor:read(\"*all\")\n    local xorbuf12len\
    \ = #xorbuf12\n    local xorbuf13 = xor:read(\"*all\")\n    local xorbuf13len\
    \ = #xorbuf13\n    local xorbuf14 = xor:read(\"*all\")\n    local xorbuf14len\
    \ = #xorbuf14\n    local xorbuf15 = xor:read(\"*all\")\n    local xorbuf15len\
    \ = #xorbuf15\n    local xorbuf16 = xor:read(\"*all\")\n    local xorbuf16len\
    \ = #xorbuf16\n    local xorbuf17 = xor:read(\"*all\")\n    local xorbuf17len\
    \ = #xorbuf17\n    local xorbuf18 = xor:read(\"*all\")\n    local xorbuf18len\
    \ = #xorbuf18\n    local xorbuf19 = xor:read(\"*all\")\n    local xorbuf19len\
    \ = #xorbuf19\n    local xorbuf20 = xor:read(\"*all\")\n    local xorbuf20len\
    \ = #xorbuf", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^\
    \ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local res = \"\"\
    \n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n\
    \      res = res .. \"1\"\n    else\n      res = res .. \"0\"\n    end\n  end\n\
    \  return res\nend", "  local bin1 = string.format(\"%016b\", tonumber(a))\n \
    \ local bin2 = string.format(\"%016b\", tonumber(b))\n  local res = bin1 .. bin2\n\
    \  return res\nend", '  local bina
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local t = c ^ d\n    local s = string.format(\"%x\", t)\n    result = result\
    \ .. s\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result\
    \ = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n\
    \  return result\nend", "  local xor_result = ''\n  for i = 1, #a do\n    xor_result\
    \ = xor_result .. string.rep('0', #b) .. a[i] .. b[i]\n  end\n  return xor_result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    result\
    \ = (result .. string.format(\"%c\", c)) .. b[i]\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local carry\
    \ = c\n    if d ~= 0 then\n      carry = d xor carry\n    end\n    if carry >\
    \ 0 then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n     \
    \ result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local xor_result = \"\"\n  for i = 1, #a do\n    xor_result\
    \ = xor_result .. string.format(\"%x\", a[i] ^ b[i])\n  end\n  return xor_result\n\
    end", "  local xor = assert(io.open(a, \"rb\"), \"wb\")\n  xor:write(b)\n  xor:close()\n\
    \  local xor = assert(io.open(a, \"rb\"), \"r\")\n  local result = xor:read(\"\
    *a\")\n  xor:close()\n  return result\nend", "    local result = \"\"\n    for\
    \ i = 1, #a do\n        local c = a[i]\n        result = (result .. string.format(\"\
    %c\", c ^ b[i]))\n    end\n    return result\nend", "  local result = \"\"\n \
    \ for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local carry =\
    \ c xor d\n    if carry > 0 then\n      result = result .. \"1\"\n    else\n \
    \     result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local carry = c xor d\n    if carry > 0 then\n      result = result .. \"\
    1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n\
    \    if c > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local xor_result = \"\"\n  for i = 1, #a do\n    xor_result\
    \ = xor_result .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n  end\n  return xor_result\n\
    end", "  local xor = ffi.new(\"char[?]\", #a + #b)\n  ffi.copy(xor, ffi.cast(\"\
    char *\", a), #a)\n  ffi.copy(xor, ffi.cast(\"char *\", b), #b)\n  return ffi.string(xor)\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    local temp = (c ^ d) % 2\n    if temp == 0 then\n      result\
    \ = result .. \"0\"\n    else\n      result = result .. \"1\"\n    end\n  end\n\
    \  return result\nend", "  local xor_result = ''\n  for i = 1, #a do\n    xor_result\
    \ = xor_result .. string.rep(a[i], #b[i])\n  end\n  return xor_result\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "    local result =\
    \ \"\"\n    for i = 1, #a do\n        local c = a[i]\n        local d = b[i]\n\
    \        local c1 = tostring(c):byte()\n        local d1 = tostring(d):byte()\n\
    \        if c1 ~= d1 then\n            result = result .. tostring(c1 ^ d1)\n\
    \        end\n    end\n    return result\nend", "  local s = ''\n  for i = 1,\
    \ #a do\n    s = s .. string.format('%x', a[i] xor b[i])\n  end\n  return s\n\
    end", "  local xor_table = {\n    ['0'] = {\n      ['1'] = '0',\n      ['0'] =\
    \ '1',\n    },\n    ['1'] = {\n      ['0'] = '1',\n      ['1'] = '0',\n    },\n\
    \  }\n  local xor = xor_table[a..b]\n  return xor['0']..xor['1']\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", '  local bina
  "  local xor_result = ''\n  for i = 1, #a do\n    xor_result = xor_result .. string.format('%x',\
    \ a[i] ^ b[i])\n  end\n  return xor_result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local carry = c\n\
    \    if d ~= 0 then\n      carry = d xor carry\n    end\n    if carry > 0 then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i]\n    result = (result .. tostring(c)) .. tostring(b[i])\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "    local xor = assert(io.open(a, \"rb\"), \"wb\")\n    xor:write(b)\n\
    \    xor:close()\n    local xor = assert(io.open(a, \"rb\"), \"r\")\n    local\
    \ result = xor:read(\"*a\")\n    xor:close()\n    return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d\
    \ then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "    local xor = assert(loadstring(string.format([[\n\
    \        local function xor(a, b)\n            local res = \"\"\n            for\
    \ i = 1, #a do\n                res = res .. tostring(a[i] ^ b[i])\n         \
    \   end\n            return res\n        end\n        return xor(\n          \
    \  [[%s]],\n            [[%s]]\n        )\n    ]]), a)\n    return xor\nend",
  "  local xor = \"\"\n  for i = 1, #a do\n    xor = xor .. tostring(a:byte(i)) ^\
    \ tostring(b:byte(i))\n  end\n  return xor\nend", "  local xor_result = ''\n \
    \ for i = 1, #a do\n    xor_result = xor_result .. tostring(a:byte(i)) .. tostring(b:byte(i))\n\
    \  end\n  return xor_result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\
    \ ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~=\
    \ d then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "  local xor_result = ''\n  for i\
    \ = 1, #a do\n    xor_result = xor_result .. string.format(\"%x\", a[i] ^ b[i])\n\
    \  end\n  return xor_result\nend", "    local result = \"\"\n    for i = 1, #a\
    \ do\n        local c = a[i] ^ b[i]\n        if c > 0 then\n            result\
    \ = result .. \"1\"\n        else\n            result = result .. \"0\"\n    \
    \    end\n    end\n    return result\nend", "  local xor_table = {\n    [0] =\
    \ \"0000\",\n    [1] = \"0001\",\n    [2] = \"0010\",\n    [3] = \"0011\",\n \
    \   [4] = \"0100\",\n    [5] = \"0101\",\n    [6] = \"0110\",\n    [7] = \"0111\"\
    ,\n    [8] = \"1000\",\n    [9] = \"1001\",\n    [10] = \"1010\",\n    [11] =\
    \ \"1011\",\n    [12] = \"1100\",\n    [13] = \"1101\",\n    [14] = \"1110\",\n\
    \    [15] = \"1111\",\n  }\n  local xor_result = \"\"\n  for i = 1, #a do\n  \
    \  xor_result = xor_result .. xor_table[tonumber(a[i]) xor tonumber(b[i])]\n \
    \ end\n  return xor_result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"), \n                      \"Could not open /dev/urandom\"\
    )\n  local xorbuf = xor:read(\"*all\")\n  xor:close()\n  local xorbuf2 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf3 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf4 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf5 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf6 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf7 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf8 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf9 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf10 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf11 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf12 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf13 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf14 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf15 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf16 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf17 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf18 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf19 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf20 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf21 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf22 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf23 = xor:read(\"\
    *all\")\n  xor:close()\n  local xorbuf24 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf25 = xor:read(\"*all\")\n  xor:close()\n  local xorbuf26 = xor:read(\"\
    *all\")\n  xor:close()\n  local ", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    local carry = c xor d\n    if carry\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local res = \"\"\n  for i = 1, #a do\n\
    \    local carry = a[i] ~= b[i]\n    if carry then\n      res = res .. \"1\"\n\
    \    else\n      res = res .. \"0\"\n    end\n  end\n  return res\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local carry = c\n    if d then\n      carry = d xor carry\n    end\n    if\
    \ carry then\n      result = string.format(\"%c\", carry)\n    else\n      result\
    \ = result .. c\n    end\n  end\n  return result\nend", "  local res = \"\"\n\
    \  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n\
    \      res = res .. \"1\"\n    else\n      res = res .. \"0\"\n    end\n  end\n\
    \  return res\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c =\
    \ a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\
    \n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\n    else\n   \
    \   result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ xor_result = ''\n  for i = 1, #a do\n    xor_result = xor_result .. string.format('%x',\
    \ a[i] ^ b[i])\n  end\n  return xor_result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local xor = \"\"\n  for i = 1, #a do\n\
    \    xor = xor .. tostring(a:byte(i)) ^ tostring(b:byte(i))\n  end\n  return xor\n\
    end", '  local bina
  '  local bina
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local carry = c\n    if d ~= 0 then\n      carry = d xor carry\n    end\n\
    \    if carry > 0 then\n      carry = 1\n    else\n      carry = 0\n    end\n\
    \    result = result .. string.format(\"%c\", tostring(carry))\n  end\n  return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #a do\n        local\
    \ c = a[i]\n        local d = b[i]\n        if c ~= d then\n            result\
    \ = result .. \"1\"\n        else\n            result = result .. \"0\"\n    \
    \    end\n    end\n    return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local carry = c\n    local\
    \ remainder\n    if d > 0 then\n      carry = 1\n      remainder = d % 2\n   \
    \   d = d / 2\n    end\n    if carry == 1 then\n      result = result .. \"1\"\
    \n    else\n      result = result .. \"0\"\n    end\n    if d > 0 then\n     \
    \ result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local xor_result = ''\n  for i = 1, #a do\n    xor_result =\
    \ xor_result .. tostring(a:byte(i)) .. tostring(b:byte(i))\n  end\n  return xor_result\n\
    end", "  local xor = assert(io.open(a, \"rb\"), \"wb\")\n  xor:write(b)\n  xor:close()\n\
    \  local xor = assert(io.open(a, \"rb\"), \"r\")\n  local result = xor:read(\"\
    *a\")\n  xor:close()\n  return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n     \
    \ result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i]\n    local d = b[i]\n    local carry = c xor d\n    if carry\
    \ > 0 then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    result = (result .. b[i]) .. c\n  end\n\
    \  return result\nend", "  local xor = assert(loadstring(string.format(\"return\
    \ require('%s').xor('%s', '%s');\", package.path, a, b)), \"Could not load XOR\
    \ module\")\n  return xor(a, b)\nend", "  local s = \"\"\n  for i = 1, #a do\n\
    \    s = s .. string.format(\"%x\", a[i] xor b[i])\n  end\n  return s\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local carry = c xor d\n    if carry > 0 then\n      result = result .. \"\
    1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\n    else\n   \
    \   result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d\
    \ then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local xor_table = {\n    [1] = \"0\",\n    [2] = \"1\",\n \
    \   [3] = \"1\",\n    [4] = \"0\",\n    [5] = \"1\",\n    [6] = \"1\",\n    [7]\
    \ = \"0\",\n    [8] = \"1\",\n    [9] = \"1\",\n    [10] = \"0\",\n    [11] =\
    \ \"1\",\n    [12] = \"1\",\n    [13] = \"0\",\n    [14] = \"1\",\n    [15] =\
    \ \"1\",\n    [16] = \"0\",\n    [17] = \"1\",\n    [18] = \"1\",\n    [19] =\
    \ \"0\",\n    [20] = \"1\",\n    [21] = \"1\",\n    [22] = \"1\",\n    [23] =\
    \ \"0\",\n    [24] = \"1\",\n    [25] = \"1\",\n    [26] = \"1\",\n    [27] =\
    \ \"1\",\n    [28] = \"0\",\n    [29] = \"1\",\n    [30] = \"1\",\n    [31] =\
    \ \"1\",\n    [32] = \"1\",\n    [33] = \"1\",\n    [34] = \"1\",\n    [35] =\
    \ \"1\",\n    [36] = \"1\",\n    [37] = \"1\",\n    [38] = \"1\",\n    [39] =\
    \ \"1\",\n    [40] = \"1\",\n    [41] = \"1\",\n    [42] = \"1\",\n    [43] =\
    \ \"1\",\n    [44] = \"1\",\n    [45] = \"1\",\n    [46] = \"1\",\n    [47] =\
    \ \"1\",\n    [48] = \"1\",\n    [49] = \"1\",\n    [50] = \"1\",\n    [51] =\
    \ \"1\",\n    [52] = \"1\",\n    [53] = \"1\",\n    [54] = \"1\",\n    [55] =\
    \ \"1\",\n    [56] = \"1\",\n    [57] = \"1\",\n    [58] = \"1\",\n    [59] =\
    \ \"1\",\n    [60] = \"1\",\n    [61] = \"1\",\n    [62] = \"1\",\n    [63] =\
    \ \"1\",\n    [64] = \"1\",\n    [65] = \"1\",\n    [66] = \"1\",\n    [67] =\
    \ \"1\",\n    [68] = \"1\",\n    [69] = \"1\",\n    [70] = \"1\",\n    [71] =\
    \ \"1\",\n    [72] = \"1\",\n    [73] = \"1\",\n    [74] = \"1\",\n    [75] =\
    \ \"1\",\n    [76] = \"1\",\n    [77] = \"1\",\n    [78] = \"1\",\n    [79] =\
    \ \"1\",\n    [80] = \"1\",\n    [81] = \"1\",\n    [82] = \"1\",\n    [83] =\
    \ \"1\",\n    [84] = \"1\",\n    [85] = \"1\",\n    [86] = \"1\",\n    [87] =\
    \ \"1\",\n    [88] = \"1\",\n    [89] = \"1\",\n    [90] = \"1\",\n    [91] =\
    \ \"1\",\n    [92] = \"1\",\n    [93] = \"1\",\n    [94] = \"1\",\n    [95] =\
    \ \"1\",\n    [96] = \"1\",\n    [97] = \"1\",\n    [98] = \"1\",\n", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local res = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      res = res .. \"1\"\n    else\n\
    \      res = res .. \"0\"\n    end\n  end\n  return res\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c\
    \ ~= d then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #a do\n        local c = a[i]\n        result = (result + c) ^ b[i]\n\
    \    end\n    return result\nend", "  local xor_result = \"\"\n  for i = 1, #a\
    \ do\n    xor_result = xor_result .. string.format(\"%x\", a[i] ^ b[i])\n  end\n\
    \  return xor_result\nend", "  local binary = a..b\n  local xor = binary:gsub(\"\
    1{2,}\", \"0\"):gsub(\"0{2,}\", \"1\")\n  return xor\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local\
    \ c1 = tostring(c):byte()\n    local d1 = tostring(d):byte()\n    local result\
    \ = result .. string.format(\"%x\", c1 xor d1)\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local carry = c\n    if d == \"1\" then\n      carry = carry ^ 1\n    else\n\
    \      carry = carry ^ 0\n    end\n    result = result .. string.format(\"%c\"\
    , carry)\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i]\n    result = (result + string.rep(\"0\", #b) + c) ..\
    \ b[i]\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i]\n    result = (result .. tostring(c) .. tostring(b[i]))\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local xor_result = \"\"\n  for i = 1, #a do\n    xor_result\
    \ = xor_result .. tostring(a:byte(i)) .. tostring(b:byte(i))\n  end\n  return\
    \ xor_result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c =\
    \ a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\
    \n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local binA = \"\"\n  local binB = \"\"\n  for i = 1, #a do\n    binA\
    \ = binA .. tostring(a[i])\n  end\n  for i = 1, #b do\n    binB = binB .. tostring(b[i])\n\
    \  end\n  return binA:gsub(\"1\", \"0\"):gsub(\"0\", \"1\")\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c\
    \ ~= d then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "    local result = \"\"\n   \
    \ for i = 1, #a do\n        local c = a[i]\n        result = (result .. b[i])\
    \ .. c\n    end\n    return result\nend", "  local result = \"\"\n  for i = 1,\
    \ #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result\
    \ = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ xor_result = ''\n  for i = 1, #a do\n    xor_result = xor_result .. string.format('%x',\
    \ a[i] ^ b[i])\n  end\n  return xor_result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    local carry = c\n    if d ~= 0 then\n\
    \      carry = d xor carry\n    end\n    result = string.format(\"%s%c\", result,\
    \ tostring(carry))\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local carry = c xor\
    \ d\n    if carry > 0 then\n      result = result .. \"1\"\n    else\n      result\
    \ = result .. \"0\"\n    end\n  end\n  return result\nend", "  local result =\
    \ \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local\
    \ carry = c xor d\n    if carry > 0 then\n      result = result .. \"1\"\n   \
    \ else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local xor_table = {\n    ['0'] = {\n      ['0'] = {\n        ['0'] = {\n    \
    \      ['0'] = {\n            ['0'] = {\n              ['0'] = {\n           \
    \     ['0'] = {\n                  ['0'] = {\n                    ['0'] = {\n\
    \                      ['0'] = {\n                        ['0'] = {\n        \
    \                  ['0'] = {\n                            ['0'] = {\n        \
    \                      ['0'] = {\n                                ['0'] = {\n\
    \                                  ['0'] = {\n                               \
    \     ['0'] = {\n                                      ['0'] = {\n           \
    \                             ['0'] = {\n                                    \
    \      ['0'] = {\n                                            ['0'] = {\n    \
    \                                          ['0'] = {\n                       \
    \                         ['0'] = {\n                                        \
    \          ['0'] = {\n                                                    ['0']\
    \ = {\n                                                      ['0'] = {\n     \
    \                                                   ['0'] = {\n              \
    \                                            ['0'] = {\n                     \
    \                                       ['0'] = {\n                          \
    \                                    ['0'] = {\n                             \
    \                                   ['0'] = {\n                              \
    \                                    ['0'] = {\n                             \
    \                                       ['0'] = {\n                          \
    \                                            ['0'] = {\n                     \
    \                                                   ['0'] = {\n              \
    \                                                            ['0'] = {\n     \
    \                                                                       ['0']\
    \ = {\n                                                                      \
    \        ['0'] = {\n                                                         \
    \                       ['0'] = {\n                                          \
    \                                        ['0'] = {\n                         \
    \                                                           ['0'] = {\n      \
    \                                                                            \
    \    ['0'] = {\n                                                             \
    \                           ['0'] = {\n                                      \
    \                                                    ['0'] = {\n             \
    \                                                                            \
    \   ['0'] = {\n                                                              \
    \                                ['0'] = {\n                                 \
    \                                                               ['0'] = {\n  \
    \                                                                            \
    \                    ['0'] = {\n                                             \
    \                                                       ['0'] = {\n          \
    \                                                                            \
    \                ['0'] = {\n                                                 \
    \                                                       ['0'] = {\n          \
    \                                                                            \
    \                    ['0'] = {\n                                             \
    \                                                               ['0'] = {\n  \
    \                                                                            \
    \                                ['0'] = {\n                                 \
    \                                                                            \
    \   ['0'] = {\n                                                              \
    \                                                    ['0'] = {\n             \
    \                                                                            \
    \                           ['0'] = {\n                                      \
    \                                                                            \
    \    ['0'] = {\n                                                             \
    \                                                           ['0'] = {\n      \
    \                                                                            \
    \                                        ['0'] = {\n                         \
    \                                                                            \
    \                       ['0'] = {\n                                          \
    \                                                                            \
    \        ['0'] = {\n                                                         \
    \                                                                       ['0']\
    \ = {\n                                                                      \
    \                                                            ['0'] = {\n     \
    \                                                                            \
    \                                                   ['0'] = {\n              \
    \                                                                            \
    \                                            ['0'] = {\n                     \
    \                                                                            \
    \                                       ['0'] = {\n                          \
    \                                                                            \
    \                                    ['0'] = {\n                             \
    \                                                                            \
    \                                   ['0'] = {\n                              \
    \                                                                            \
    \                                    ['0'] = {\n                             \
    \                                                                            \
    \                                       ['0'] = {\n                          \
    \                                                                            \
    \                                            ['0'] = {\n                     \
    \                                                                            \
    \                                                   ['0'] = {\n              \
    \                                                                            \
    \                                                            ['0'] = {\n     \
    \                                                                            \
    \                                                                       ['0']\
    \ = {\n                                                                      \
    \                                                                            \
    \        ['0'] = {\n                                                         \
    \       ", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n  \
    \  result = (result + string.format(\"%x\", c)) ^ b[i]\n  end\n  return result\n\
    end", "  local xor = assert(io.open(\"/dev/urandom\", \"r\"), \n             \
    \         \"/dev/urandom not found, please install urandom\")\n  local xorbuf\
    \ = xor:read(\"*all\")\n  local xorbuf2 = xor:read(\"*all\")\n  xor:close()\n\
    \  local xorbuf3 = xorbuf2 .. xorbuf\n  local xorbuf4 = xorbuf3 .. xorbuf\n  local\
    \ xorbuf5 = xorbuf4 .. xorbuf\n  local xorbuf6 = xorbuf5 .. xorbuf\n  local xorbuf7\
    \ = xorbuf6 .. xorbuf\n  local xorbuf8 = xorbuf7 .. xorbuf\n  local xorbuf9 =\
    \ xorbuf8 .. xorbuf\n  local xorbuf10 = xorbuf9 .. xorbuf\n  local xorbuf11 =\
    \ xorbuf10 .. xorbuf\n  local xorbuf12 = xorbuf11 .. xorbuf\n  local xorbuf13\
    \ = xorbuf12 .. xorbuf\n  local xorbuf14 = xorbuf13 .. xorbuf\n  local xorbuf15\
    \ = xorbuf14 .. xorbuf\n  local xorbuf16 = xorbuf15 .. xorbuf\n  local xorbuf17\
    \ = xorbuf16 .. xorbuf\n  local xorbuf18 = xorbuf17 .. xorbuf\n  local xorbuf19\
    \ = xorbuf18 .. xorbuf\n  local xorbuf20 = xorbuf19 .. xorbuf\n  local xorbuf21\
    \ = xorbuf20 .. xorbuf\n  local xorbuf22 = xorbuf21 .. xorbuf\n  local xorbuf23\
    \ = xorbuf22 .. xorbuf\n  local xorbuf24 = xorbuf23 .. xorbuf\n  local xorbuf25\
    \ = xorbuf24 .. xorbuf\n  local xorbuf26 = xorbuf25 .. xorbuf\n  local xorbuf27\
    \ = xorbuf26 .. xorbuf\n  local xorbuf28 = xorbuf27 .. xorbuf\n  local xorbuf29\
    \ = xorbuf28 .. xorbuf\n  local xorbuf30 = xorbuf29 .. xorbuf\n  local xorbuf31\
    \ = xorbuf30 .. xorbuf\n  local xorbuf32 = xorbuf31 .. xorbuf\n  local xorbuf33\
    \ = xorbuf32 .. xorbuf\n  local xorbuf34 = xorbuf33 .. xorbuf\n  local xorbuf35\
    \ = xorbuf34 .. xorbuf\n  local xorbuf36 = xorbuf35 .. xorbuf\n  local xorbuf37\
    \ = xorbuf36 .. xorbuf\n  local ", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #a do\n        local\
    \ c = a[i] ^ b[i]\n        if c > 0 then\n            result = \"1\" + result\n\
    \        else\n            result = \"0\" + result\n        end\n    end\n   \
    \ return result\nend", "    local result = \"\"\n    for i = 1, #a do\n      \
    \  local c = a[i] ^ b[i]\n        if c > 0 then\n            result = result ..\
    \ \"1\"\n        else\n            result = result .. \"0\"\n        end\n   \
    \ end\n    return result\nend", "  local result = \"\"\n  for i = 1, #a do\n \
    \   local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local xor_table =\
    \ {\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n\
    \    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['0']\
    \ = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['0']\
    \ = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n\
    \    ['0'] = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['0'] = '0',\n    ['1'] = '1',\n    ['1'] = '1',\n\
    \    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n    ['1']\
    \ = '1',\n    ['1'] = '1',\n    ['1'] = '1',\n", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local xor = assert(io.open(a, \"rb\"),\
    \ \"wb\")\n  xor:write(b)\n  xor:close()\n  local xor = assert(io.open(a, \"rb\"\
    ), \"r\")\n  local result = xor:read(\"*a\")\n  xor:close()\n  return result\n\
    end", "  local xor = string.byte(a ^ b)\n  return string.format(\"%x\", xor)\n\
    end", "  local xor = assert(loadstring(string.format([[\n    local function xor(a,\
    \ b)\n      local res = \"\"\n      for i = 1, #a do\n        local c = a[i]\n\
    \        local d = b[i]\n        if c ~= d then\n          res = res .. \"0\"\n\
    \        else\n          res = res .. \"1\"\n        end\n      end\n      return\
    \ res\n    end\n    xor(\"%s\", \"%s\")\n  ]], a, b)))\n  return xor\nend", " \
    \ local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"0\"\n    else\n      result =\
    \ result .. \"1\"\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d\
    \ then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local t = c ^ d\n    if\
    \ t > 0 then\n      result = result .. \"1\"\n    else\n      result = result\
    \ .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #a do\n        local\
    \ c = a[i]\n        local d = b[i]\n        if c ~= d then\n            result\
    \ = result .. \"1\"\n        else\n            result = result .. \"0\"\n    \
    \    end\n    end\n    return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n     \
    \ result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n  \
    \  local c = a[i]\n    local d = b[i]\n    local tmp = \"\"\n    if c ~= d then\n\
    \      tmp = string.format(\"%x\", c ^ d)\n    end\n    result = result .. tmp\n\
    \  end\n  return result\nend", "  local xor_result = ''\n  for i = 1, #a do\n\
    \    xor_result = xor_result .. tostring(a:byte(i)) .. tostring(b:byte(i))\n \
    \ end\n  return xor_result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n\
    \    local d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d\
    \ then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "  local xor_result = \"\"\n  for\
    \ i = 1, #a do\n    xor_result = xor_result .. tostring(a:byte(i)) .. tostring(b:byte(i))\n\
    \  end\n  return xor_result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local xor = \"\"\n  for i = 1, #a do\n    xor = xor .. tostring(a:byte(i))\
    \ ^ tostring(b:byte(i))\n  end\n  return xor\nend", "  local result = \"\"\n \
    \ for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n\
    \      result = result .. \"1\"\n    else\n      result = result .. \"0\"\n  \
    \  end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i]\n    local d = b[i]\n    local temp\n    if c ~= d then\n\
    \      temp = c ^ d\n      result = result .. string.format(\"%x\", temp)\n  \
    \  end\n  end\n  return result\nend", "  local xor = assert(io.open(\"/dev/urandom\"\
    , \"r\"), \n                      \"/dev/urandom not found, please install urandom\"\
    )\n  local s = assert(io.open(\"/dev/urandom\", \"r\"), \n                   \
    \   \"/dev/urandom not found, please install urandom\")\n  local result = assert(io.open(\"\
    /dev/urandom\", \"r\"), \n                          \"/dev/urandom not found,\
    \ please install urandom\")\n  local xor = assert(io.open(\"/dev/urandom\", \"\
    r\"), \n                      \"/dev/urandom not found, please install urandom\"\
    )\n  local s = assert(io.open(\"/dev/urandom\", \"r\"), \n                   \
    \   \"/dev/urandom not found, please install urandom\")\n  local result = assert(io.open(\"\
    /dev/urandom\", \"r\"), \n                          \"/dev/urandom not found,\
    \ please install urandom\")\n  local xor = assert(io.open(\"/dev/urandom\", \"\
    r\"), \n                      \"/dev/urandom not found, please install urandom\"\
    )\n  local s = assert(io.open(\"/dev/urandom\", \"r\"), \n                   \
    \   \"/dev/urandom not found, please install urandom\")\n  local result = assert(io.open(\"\
    /dev/urandom\", \"r\"), \n                          \"/dev/urandom not found,\
    \ please install urandom\")\n  local xor = assert(io.open(\"/dev/urandom\", \"\
    r\"), \n                      \"/dev/urandom not found, please install urandom\"\
    )\n  local s = assert(io.open(\"/dev/urandom\", \"r\"), \n                   \
    \   \"/dev/urandom not found, please install urandom\")\n  local result = assert(io.open(\"\
    /dev/urandom\", \"r\"), \n                          \"/dev/urandom not found,\
    \ please install urandom\")\n  local xor = assert(io.open(\"/dev/urandom\", \"\
    r\"), \n                      \"/dev/urandom not found, please install urandom\"\
    )\n  local s = assert(io.open(\"/dev/urandom\", \"r\"), \n                   \
    \   \"/dev/urandom not found, please install urandom\")\n  local result = assert(io.open(\"\
    /dev/urandom\", \"r\"), \n                          \"/dev/urandom not found,\
    \ please install urandom\")\n  local xor = assert(io.open(\"/dev/urandom\", \"\
    r\"), \n                      \"/dev/urandom not found, please install urandom\"\
    )\n  local s = assert(io.open(\"/dev/urandom\", \"r\"), \n                   \
    \   \"/dev/urandom not found, please install urandom\")\n  local result = assert(io.open(\"\
    /dev/urandom\", \"r\"), \n                          \"/dev/urandom not found,\
    \ please install urandom\")\n  local ", "  local result = \"\"\n  for i = 1, #a\
    \ do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result\
    \ = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n\
    \  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result .. \"\
    1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local\
    \ d = b[i]\n    local tmp = (c ~= d) and \"1\" or \"0\"\n    result = result ..\
    \ tmp\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result .. \"1\"\n\
    \    else\n      result = result .. \"0\"\n    end\n  end\n  return result\nend",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d\
    \ then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local carry = c\n    if\
    \ d > 0 then\n      carry = 1\n    else\n      carry = 0\n    end\n    result\
    \ = result .. string.format(\"%c\", (carry XOR d))\n  end\n  return result\nend",
  "  local s = ''\n  for i = 1, #a do\n    s = s .. string.format('%x', a[i] ^ b[i])\n\
    \  end\n  return s\nend", "  local xor = assert(io.open(a, \"rb\"), \"wb\")\n\
    \  xor:write(b)\n  xor:close()\n  local xor = assert(io.open(a, \"rb\"), \"r\"\
    )\n  local result = xor:read(\"*a\")\n  xor:close()\n  return result\nend", " \
    \   local result = \"\"\n    for i = 1, #a do\n        local c = a[i]\n      \
    \  local d = b[i]\n        if c ~= d then\n            result = result .. \"1\"\
    \n        else\n            result = result .. \"0\"\n        end\n    end\n \
    \   return result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local\
    \ c = a[i]\n    result = (result .. tostring(c)) .. tostring(b[i])\n  end\n  return\
    \ result\nend", "  local bina = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binb = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor2 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor3 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor4 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor5 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor6 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor7 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor8 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor9 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor10 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor11 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor12 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor13 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor14 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor15 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor16 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor17 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor18 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor19 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor20 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor21 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor22 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor23 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor24 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor25 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor26 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor27 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor28 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor29 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor30 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor31 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor32 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor33 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor34 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor35 = \"0000000000000000000000000000000000000000000000000000000000000011\"\
    \n  local binxor36 = \"0000000000000000000000000000000000000000000000000000000000000001\"\
    \n  local binxor37 = \"0000000000000000000000000000000000000000000000000000000000000010\"\
    \n  local binxor38 = \"00000000000000000000000000000000", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    local carry\
    \ = c xor d\n    local result = result .. string.format(\"%c\", carry)\n  end\n\
    \  return result\nend", "  local bina = \"00000000000000000000000000000000000000000000000000000000000000\"\
    \n  local binb = \"00000000000000000000000000000000000000000000000000000000000000\"\
    \n  local binc = \"00000000000000000000000000000000000000000000000000000000000000\"\
    \n  local i = 0\n  local j = 0\n  while i < #a do\n    bina = bina:gsub(\"1\"\
    , \"0\", 1, i)\n    binb = binb:gsub(\"1\", \"0\", 1, i)\n    binc = binc:gsub(\"\
    1\", \"0\", 1, i)\n    i = i + 1\n  end\n  i = 0\n  while i < #b do\n    binb\
    \ = binb:gsub(\"1\", \"0\", 1, i)\n    binc = binc:gsub(\"1\", \"0\", 1, i)\n\
    \    i = i + 1\n  end\n  bina = bina:gsub(\"0\", \"1\", 1, #a)\n  binb = binb:gsub(\"\
    0\", \"1\", 1, #b)\n  binc = binc:gsub(\"0\", \"1\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)\n  binc = binc:gsub(\"\
    1\", \"0\", 1, #c)\n  binc = binc:gsub(\"1\", \"0\", 1, #c)", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c\
    \ ~= d then\n      result = result .. \"1\"\n    else\n      result = result ..\
    \ \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "    local bin1 = string.format(\"%016b\", tonumber(a))\n    local\
    \ bin2 = string.format(\"%016b\", tonumber(b))\n    local bin3 = bin1 .. bin2\n\
    \    local bin4 = bin3:gsub(\"%016b\", function(x)\n        return string.format(\"\
    %016b\", tonumber(x) ^ tonumber(bin2))\n    end)\n    return bin4\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"0\"\n    else\n      result =\
    \ result .. \"1\"\n    end\n  end\n  return result\nend", "  local xor_result\
    \ = \"\"\n  for i = 1, #a do\n    xor_result = xor_result .. string.format(\"\
    %x\", a[i] ^ b[i])\n  end\n  return xor_result\nend", "  local result = \"\"\n\
    \  for i = 1, #a do\n    local c = a[i]\n    result = (result .. tostring(c))\
    \ .. tostring(b[i])\n  end\n  return result\nend", "  local result = \"\"\n  for\
    \ i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n      result = result\
    \ .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n\
    \    local d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local xor = assert(io.open(a,\
    \ \"rb\"), \"wb\")\n  xor:write(b)\n  xor:close()\n  local xor = assert(io.open(a,\
    \ \"rb\"), \"r\")\n  local result = xor:read(\"*a\")\n  xor:close()\n  return\
    \ result\nend", "    local result = \"\"\n    for i = 1, #a do\n        local\
    \ c = a[i]\n        local d = b[i]\n        if c ~= d then\n            result\
    \ = result .. \"1\"\n        else\n            result = result .. \"0\"\n    \
    \    end\n    end\n    return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    result = (result + c) ^ b[i]\n  end\n  return\
    \ result\nend", "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n\
    \    local d = b[i]\n    if c ~= d then\n      result = result .. \"1\"\n    else\n\
    \      result = result .. \"0\"\n    end\n  end\n  return result\nend", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    if c ~= d then\n      result = result .. \"1\"\n    else\n      result =\
    \ result .. \"0\"\n    end\n  end\n  return result\nend", "  local result = \"\
    \"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d\
    \ then\n      result = result .. \"1\"\n    else\n      result = result .. \"\
    0\"\n    end\n  end\n  return result\nend", "  local result = \"\"\n  for i =\
    \ 1, #a do\n    local c = a[i]\n    local d = b[i]\n    if c ~= d then\n     \
    \ result = result .. \"1\"\n    else\n      result = result .. \"0\"\n    end\n\
    \  end\n  return result\nend", "  local xor = assert(io.open(a, \"rb\"):read(\"\
    *a\"), \"Error reading file \" .. a)\n  local xor2 = assert(io.open(b, \"rb\"\
    ):read(\"*b\"), \"Error reading file \" .. b)\n  return xor:sub(1, xor:len())\
    \ .. xor2:sub(1, xor2:len())\nend", "  local xor = assert(io.open(a, \"r\"))\n\
    \  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a, \"r\"\
    ))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a, \"\
    r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.open(a,\
    \ \"r\"))\n  local xor = assert(io.open(a, \"r\"))\n  local xor = assert(io.",
  "  local result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local c1 = c ~= 0 and 1 or 0\n    local d1 = d ~= 0 and 1 or 0\n    local\
    \ c2 = c1 ~= 0 and 1 or 0\n    local d2 = d1 ~= 0 and 1 or 0\n    local c3 = c2\
    \ ~= 0 and 1 or 0\n    local d3 = d2 ~= 0 and 1 or 0\n    local c4 = c3 ~= 0 and\
    \ 1 or 0\n    local d4 = d3 ~= 0 and 1 or 0\n    local c5 = c4 ~= 0 and 1 or 0\n\
    \    local d5 = d4 ~= 0 and 1 or 0\n    local c6 = c5 ~= 0 and 1 or 0\n    local\
    \ d6 = d5 ~= 0 and 1 or 0\n    local c7 = c6 ~= 0 and 1 or 0\n    local d7 = d6\
    \ ~= 0 and 1 or 0\n    local c8 = c7 ~= 0 and 1 or 0\n    local d8 = d7 ~= 0 and\
    \ 1 or 0\n    local c9 = c8 ~= 0 and 1 or 0\n    local d9 = d8 ~= 0 and 1 or 0\n\
    \    local c10 = c9 ~= 0 and 1 or 0\n    local d10 = d9 ~= 0 and 1 or 0\n    local\
    \ c11 = c10 ~= 0 and 1 or 0\n    local d11 = d10 ~= 0 and 1 or 0\n    local c12\
    \ = c11 ~= 0 and 1 or 0\n    local d12 = d11 ~= 0 and 1 or 0\n    local c13 =\
    \ c12 ~= 0 and 1 or 0\n    local d13 = d12 ~= 0 and 1 or 0\n    local c14 = c13\
    \ ~= 0 and 1 or 0\n    local d14 = d13 ~= 0 and 1 or 0\n    local c15 = c14 ~=\
    \ 0 and 1 or 0\n    local d15 = d14 ~= 0 and 1 or 0\n    local c16 = c15 ~= 0\
    \ and 1 or 0\n    local d16 = d15 ~= 0 and 1 or 0\n    local c17 = c16 ~= 0 and\
    \ 1 or 0\n    local d17 = d16 ~= 0 and 1 or 0\n    local c18 = c17 ~= 0 and 1\
    \ or 0\n    local d18 = d17 ~= 0 and 1 or 0\n    local c19 = c18 ~= 0 and 1 or\
    \ 0\n    local d19 = d18 ~= 0 and 1 or 0\n    local c20 = c19 ~= 0 and 1 or 0\n\
    \    local d20 = d19 ~= 0 and 1 or 0\n    local c21 = c20 ~= 0 and 1 or 0\n  \
    \  local d21 = d", "  local res = \"\"\n  for i = 1, #a do\n    local c = a[i]\n\
    \    local d = b[i]\n    if c ~= d then\n      res = res .. \"1\"\n    else\n\
    \      res = res .. \"0\"\n    end\n  end\n  return res\nend", "  local result\
    \ = \"\"\n  for i = 1, #a do\n    local c = a[i] ^ b[i]\n    if c > 0 then\n \
    \     result = result .. \"1\"\n    else\n      result = result .. \"0\"\n   \
    \ end\n  end\n  return result\nend", "  local result = \"\"\n  for i = 1, #a do\n\
    \    local c = a[i]\n    local d = b[i]\n    local p = c\n    local q = d\n  \
    \  local r = c\n    local s = d\n    local t = c\n    local u = d -- Unroll the\
    \ loop\n    for j = 1, 8 do\n      p = p xor q\n      q = r xor s\n      r = t\
    \ xor u\n      t = p xor q\n      u = r xor s\n      s = t xor u\n    end\n  \
    \  result = result .. string.format(\"%c\", p)\n  end\n  return result\nend",
  "  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"\
    /dev/urandom\", \"r\"))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"\
    ))\n  local xor = assert(io.open(\"/dev/urandom\", \"r\"))\n  local ", "  local\
    \ result = \"\"\n  for i = 1, #a do\n    local c = a[i]\n    local d = b[i]\n\
    \    local carry = c xor d\n    if carry > 0 then\n      result = result .. \"\
    1\"\n    else\n      result = result .. \"0\"\n    end\n  end\n  return result\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

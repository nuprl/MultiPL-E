name: HumanEval_137_compare_one
language: lua
prompt: "-- Create a function that takes integers, floats, or strings representing\n\
  -- real numbers, and returns the larger variable in its given variable type.\n--\
  \ Return None if the values are equal.\n-- Note: If a real number is represented\
  \ as a string, the floating point might be . or ,\nlocal function compare_one(a,\
  \ b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare_one\n\
  \    lu.assertEquals(candidate(1, 2), 2)\n    lu.assertEquals(candidate(1, 2.5),\
  \ 2.5)\n    lu.assertEquals(candidate(2, 3), 3)\n    lu.assertEquals(candidate(5,\
  \ 6), 6)\n    lu.assertEquals(candidate(1, '2,3'), '2,3')\n    lu.assertEquals(candidate('5,1',\
  \ '6'), '6')\n    lu.assertEquals(candidate('1', '2'), '2')\n    lu.assertEquals(candidate('1',\
  \ 1), None)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if type(a) == type(b) then\n    if type(a) == \"number\" then\n \
    \     if type(b) == \"number\" then\n        if a == b then return end\n     \
    \ elseif type(b) == \"string\" then\n        if a == b then return end\n     \
    \ elseif type(b) == \"table\" then\n        if a == b then return end\n      elseif\
    \ type(b) == \"function\" then\n        if a == b then return end\n      else\n\
    \        assert(false, \"invalid type for compare_one\")\n      end\n    elseif\
    \ type(a) == \"string\" then\n      if type(b) == \"number\" then\n        if\
    \ a == \".\" or b == \",\" then return end\n      elseif type(b) == \"string\"\
    \ then\n        if a == \".\" or b == \",\" then return end\n      elseif type(b)\
    \ == \"table\" then\n        if a == \".\" or b == \",\" then return end\n   \
    \   elseif type(b) == \"function\" then\n        if a == \".\" or b == \",\" then\
    \ return end\n      else\n        assert(false, \"invalid type for compare_one\"\
    )\n      end\n    elseif type(a) == \"table\" then\n      if type(b) == \"number\"\
    \ then\n        if a == b then return end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then return end\n      elseif type(b) == \"table\" then\n\
    \        if a == b then return end\n      elseif type(b) == \"function\" then\n\
    \        if a == b then return end\n      else\n        assert(false, \"invalid\
    \ type for compare_one\")\n      end\n    elseif type(a) == \"function\" then\n\
    \      if type(b) == \"number\" then\n        if a == b then return end\n    \
    \  elseif type(b) == \"string\" then\n        if a == b then return end\n    \
    \  elseif type(b) == \"table\" then\n        if a == b then return end\n     \
    \ elseif type(b) == \"function\" then\n        if a == b then return end\n   \
    \   else\n        assert(false, \"invalid type for compare_one\")\n      end\n\
    \    else\n      assert(false, \"invalid type for compare_one\")\n    end\n  end\n\
    end", "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number'\
    \ then\n    if a == b then return true end\n    if a < b then return true end\n\
    \    if a > b then return false end\n  elseif type(a) == 'string' then\n    if\
    \ a == b then return true end\n    if a < b then return false end\n    if a >\
    \ b then return true end\n  elseif type(a) == 'table' then\n    if a == b then\
    \ return true end\n    if a < b then return false end\n    if a > b then return\
    \ true end\n  else\n    return false\n  end\nend", "  if type(a) == type(b) then\n\
    \    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n    \
    \    if a == b then\n          return true\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then\n          return true\n        end\n\
    \      end\n    end\n  end\n  return false\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a == b then return end\n    if a > b then return\
    \ b end\n    if a < b then return a end\n  end\n  if type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then return end\n    if a > b then return b\
    \ end\n    if a < b then return a end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'table' then\n    if a == b then return end\n    if a > b then return b end\n\
    \    if a < b then return a end\n  end\n  return nil\nend", "  if type(a) == type(b)\
    \ then\n    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n\
    \        if a == b then\n          return true\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then\n          return true\n        end\n\
    \      end\n    end\n  end\n  return false\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a == b then return end\n    if a < b then return\
    \ 'a' end\n    if a > b then return 'b' end\n  end\n  if type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a == b then return end\n    if a < b then return\
    \ 'a' end\n    if a > b then return 'b' end\n  end\n  if type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a == b then return end\n    if a < b then return\
    \ 'a' end\n    if a > b then return 'b' end\n  end\n  return nil\nend", "  if\
    \ type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if math.abs(a - b) < 1e-10 then\n          return\
    \ true\n        end\n      elseif type(b) == \"string\" then\n        if a ==\
    \ b then\n          return true\n        end\n      end\n    end\n  end\n  return\
    \ false\nend", "  if type(a) ~= type(b) then\n    return false\n  end\n  if type(a)\
    \ == 'string' then\n    return a:len() > b:len()\n  end\n  if type(a) == 'number'\
    \ then\n    return a > b\n  end\n  return false\nend", "  if type(a) == type(b)\
    \ then\n    if type(a) == \"number\" then\n      if a == b then\n        return\
    \ true\n      else\n        return false\n      end\n    elseif type(a) == \"\
    string\" then\n      if a:find(b) == 1 then\n        return true\n      else\n\
    \        return false\n      end\n    elseif type(a) == \"table\" then\n     \
    \ if a[1] == b then\n        return true\n      else\n        return false\n \
    \     end\n    elseif type(a) == \"function\" then\n      if a(b) == true then\n\
    \        return true\n      else\n        return false\n      end\n    end\n \
    \ else\n    return false\n  end\nend", "  if type(a) == 'number' and type(b) ==\
    \ 'number' then\n    if a > b then return b end\n    if a == b then return nil\
    \ end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then return b end\n    if a == b then return nil end\n  end\n  if type(a)\
    \ == 'table' and type(b) == 'table' then\n    if #a > #b then return b end\n \
    \   if #a == #b then return nil end\n  end\n  return a\nend", "  if type(a) ==\
    \ 'number' then\n    if type(b) == 'number' then\n      if a > b then\n      \
    \  return a\n      elseif a < b then\n        return b\n      else\n        return\
    \ nil\n      end\n    elseif type(b) == 'string' then\n      if a ~= b then\n\
    \        return nil\n      else\n        return a\n      end\n    else\n     \
    \ return nil\n    end\n  elseif type(a) == 'string' then\n    if type(b) == 'number'\
    \ then\n      if a ~= tostring(b) then\n        return nil\n      else\n     \
    \   return a\n      end\n    elseif type(b) == 'string' then\n      if a ~= b\
    \ then\n        return nil\n      else\n        return a\n      end\n    else\n\
    \      return nil\n    end\n  elseif type(a) == 'table' then\n    if type(b) ==\
    \ 'table' then\n      if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \        return a\n      else\n        return b\n      end\n    elseif type(b)\
    \ == 'string' then\n      if a ~= b then\n        return nil\n      else\n   \
    \     return a\n      end\n    else\n      return nil\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a > b then\n      return a\n    elseif a < b then\n      return b\n   \
    \ else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif a < b then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \      return a\n    else\n      return b\n    end\n  else\n    return nil\n \
    \ end\nend", "  if type(a) ~= type(b) then\n    return nil\n  end\n  if type(a)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ then\n    if a == b then\n      return nil\n    else\n      return a\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'string' then\n    a =\
    \ tonumber(a)\n  end\n  if type(b) == 'string' then\n    b = tonumber(b)\n  end\n\
    \  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n  \
    \    return a\n    else\n      return b\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\
    \ return b end\n    if a == b then return nil end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then return b end\n    if a == b\
    \ then return nil end\n  end\n  if type(a) == 'table' and type(b) == 'table' then\n\
    \    if a.__index > b.__index then return b end\n    if a.__index == b.__index\
    \ then return nil end\n  end\n  if type(a) == 'string' and type(b) == 'number'\
    \ then\n    if tonumber(a) > tonumber(b) then return b end\n    if tonumber(a)\
    \ == tonumber(b) then return nil end\n  end\n  if type(a) == 'number' and type(b)\
    \ == 'string' then\n    if tonumber(a) > tonumber(b) then return b end\n    if\
    \ tonumber(a) == tonumber(b) then return nil end\n  end\n  if type(a) == 'table'\
    \ and type(b) == 'table' then\n    if a.__index > b.__index then return b end\n\
    \    if a.__index == b.__index then return nil end\n  end\n  return a\nend", " \
    \ if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n  \
    \    return true\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if a == b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'table' and type(b) == 'number' then\n    if\
    \ a[1] == b then\n      return true\n    end\n  end\n  if type(a) == 'number'\
    \ and type(b) == 'table' then\n    if a == b[1] then\n      return true\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'table' then\n    if a == b[1]\
    \ then\n      return true\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'string' then\n    if a[1] == b then\n      return true\n    end\n  end\n\
    \  if type(a) == 'number' and type(b) == 'string' then\n    if a == b[1] then\n\
    \      return true\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if a[1] == b[1] then\n      return\
    \ true\n    end\n  end\n  if type(a) == 'number' and type(b) == 'table' then\n\
    \    if a[1] == b[1] then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'string' and type(b) == 'table' then\n    if a[1] == b[1] then\n      return\
    \ true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'string' then\n\
    \    if a[1] == b[1] then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'number' and type(b) == 'string' then\n    if a == b[1] then\n      return true\n\
    \    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return true\n    end\n  end\n  if type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a[1] == b[1] then\n      return true\n    end\n\
    \  end\n  if type(a) == 'number' and type(b) == 'table' then\n    if a[1] == b[1]\
    \ then\n      return true\n    end\n  end\n  if type(a) == 'string' and type(b)\
    \ == 'table' then\n    if a[1] == b[1] then\n      return true\n    end\n  end\n\
    \  if type(a) == 'table' and type(b) == 'string' then\n    if a[1] == b[1] then\n\
    \      return true\n    end\n  end\n  if type(a) == 'number' and type(b) == 'string'\
    \ then\n    if a == ", "  if type(a) == type(b) then\n    if type(a) == \"number\"\
    \ then\n      if type(b) == \"number\" then\n        if a == b then\n        \
    \  return true\n        end\n      elseif type(b) == \"string\" then\n       \
    \ if a == b then\n          return true\n        end\n      end\n    end\n  end\n\
    \  return false\nend", "  if type(a) == 'string' then\n    a = tonumber(a)\n \
    \ end\n  if type(b) == 'string' then\n    b = tonumber(b)\n  end\n  if a == b\
    \ then\n    return true\n  elseif type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10\
    \ then\n      return true\n    else\n      return false\n    end\n  else\n   \
    \ return false\n  end\nend", "  if type(a) == type(b) then\n    if type(a) ==\
    \ \"number\" then\n      if type(b) == \"number\" then\n        if a == b then\n\
    \          return a\n        else\n          return b\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then\n          return a\n   \
    \     else\n          return b\n        end\n      else\n        return nil\n\
    \      end\n    elseif type(a) == \"string\" then\n      if type(b) == \"number\"\
    \ then\n        if a == b then\n          return a\n        else\n          return\
    \ b\n        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return a\n        else\n          return b\n        end\n      else\n\
    \        return nil\n      end\n    elseif type(a) == \"table\" then\n      if\
    \ type(b) == \"table\" then\n        if compare_one(a[1], b[1]) then\n       \
    \   return compare_one(a[2], b[2])\n        else\n          return compare_one(a[1],\
    \ b[2])\n        end\n      elseif type(b) == \"string\" then\n        if compare_one(a[1],\
    \ b) then\n          return compare_one(a[2], b)\n        else\n          return\
    \ compare_one(a[1], b)\n        end\n      elseif type(b) == \"number\" then\n\
    \        if compare_one(a[1], b) then\n          return compare_one(a[2], b)\n\
    \        else\n          return compare_one(a[1], b)\n        end\n      else\n\
    \        return nil\n      end\n    elseif type(a) == \"function\" then\n    \
    \  if type(b) == \"function\" then\n        if compare_one(a[1], b[1]) then\n\
    \          return compare_one(a[2], b[2])\n        else\n          return compare_one(a[1],\
    \ b[2])\n        end\n      elseif type(b) == \"table\" then\n        if compare_one(a[1],\
    \ b[1]) then\n          return compare_one(a[2], b[2])\n        else\n       \
    \   return compare_one(a[1], b[2])\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if compare_one(a[1], b) then\n          return compare_one(a[2],\
    \ b)\n        else\n          return compare_one(a[1], b)\n        end\n     \
    \ elseif type(b) == \"number\" then\n        if compare_one(a[1], b) then\n  \
    \        return compare_one(a[2], b)\n        else\n          return compare_one(a[1],\
    \ b)\n        end\n      else\n        return nil\n      end\n    elseif type(a)\
    \ == \"cdata\" then\n      if type(b) == \"cdata\" then\n        if compare_one(a[1],\
    \ b[1]) then\n          return compare_one(a[2], b[2])\n        else\n       \
    \   return compare_one(a[1], b[2])\n        end\n      elseif type(b) == \"table\"\
    \ then\n        if compare_one(a[1], b[1]) then", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a > b then return b end\n    if a < b then\
    \ return a end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n\
    \    if a > b then return b end\n    if a < b then return a end\n  end\n  return\
    \ nil\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return a\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if b > a then\n          return b\n        else\n\
    \          return a\n        end\n      elseif type(b) == \"string\" then\n  \
    \      if b == a then\n          return b\n        else\n          return a\n\
    \        end\n      else\n        return a\n      end\n    elseif type(a) == \"\
    string\" then\n      if type(b) == \"number\" then\n        if a > b then\n  \
    \        return a\n        else\n          return b\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then\n          return a\n   \
    \     else\n          return b\n        end\n      else\n        return a\n  \
    \    end\n    elseif type(a) == \"table\" then\n      if type(b) == \"table\"\
    \ then\n        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n    \
    \      return a\n        else\n          return b\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if compare_one(a.x, b) then\n          return a\n\
    \        else\n          return b\n        end\n      elseif type(b) == \"number\"\
    \ then\n        if compare_one(a.x, b) then\n          return a\n        else\n\
    \          return b\n        end\n      else\n        return a\n      end\n  \
    \  elseif type(a) == \"function\" then\n      if type(b) == \"function\" then\n\
    \        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n          return\
    \ a\n        else\n          return b\n        end\n      elseif type(b) == \"\
    string\" then\n        if compare_one(a.x, b) then\n          return a\n     \
    \   else\n          return b\n        end\n      elseif type(b) == \"number\"\
    \ then\n        if compare_one(a.x, b) then\n          return a\n        else\n\
    \          return b\n        end\n      else\n        return a\n      end\n  \
    \  else\n      return a\n    end\n  else\n    return a\n  end\nend", "  if type(a)\
    \ ~= type(b) then return false end\n  if type(a) == 'number' then\n    if a <\
    \ b then return true end\n    if a == b then return false end\n  end\n  if type(a)\
    \ == 'string' then\n    if a:find(',') ~= nil then\n      local a_arr = a:split(',')\n\
    \      local b_arr = b:split(',')\n      if a_arr[1] < b_arr[1] then return true\
    \ end\n      if a_arr[1] == b_arr[1] then return false end\n    end\n  end\n \
    \ if type(a) == 'table' then\n    if a:size() > 1 then\n      local a_arr = a:toArray()\n\
    \      local b_arr = b:toArray()\n      if a_arr[1] < b_arr[1] then return true\
    \ end\n      if a_arr[1] == b_arr[1] then return false end\n    end\n  end\n \
    \ return false\nend", "  if type(a) ~= type(b) then return nil end\n  if type(a)\
    \ == 'string' then\n    if a:find(',') ~= nil then a = a:gsub(',', '.') end\n\
    \    if b:find(',') ~= nil then b = b:gsub(',', '.') end\n    if a:find('.') ~=\
    \ nil then a = a:gsub('.', '') end\n    if b:find('.') ~= nil then b = b:gsub('.',\
    \ '') end\n    if a:find('e') ~= nil then a = a:gsub('e', '') end\n    if b:find('e')\
    \ ~= nil then b = b:gsub('e', '') end\n  end\n  if a == b then return nil end\n\
    \  if a > b then return 'greater' end\n  if a < b then return 'smaller' end\n\
    \  return 'equal'\nend", "  if type(a) == type(b) then\n    if type(a) == 'number'\
    \ then\n      if type(b) == 'number' then\n        if a > b then\n          return\
    \ a\n        else\n          return b\n        end\n      elseif type(b) == 'string'\
    \ then\n        if a > b then\n          return b\n        else\n          return\
    \ a\n        end\n      else\n        return nil\n      end\n    elseif type(a)\
    \ == 'string' then\n      if type(b) == 'number' then\n        if a > b then\n\
    \          return b\n        else\n          return a\n        end\n      elseif\
    \ type(b) == 'string' then\n        if a > b then\n          return a\n      \
    \  else\n          return b\n        end\n      else\n        return nil\n   \
    \   end\n    elseif type(a) == 'table' then\n      if type(b) == 'table' then\n\
    \        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n          return\
    \ a\n        else\n          return b\n        end\n      elseif type(b) == 'string'\
    \ then\n        if compare_one(a.x, b) then\n          return a\n        else\n\
    \          return b\n        end\n      else\n        return nil\n      end\n\
    \    elseif type(b) == 'table' then\n      if type(a) == 'string' then\n     \
    \   if compare_one(a, b) then\n          return a\n        else\n          return\
    \ b\n        end\n      elseif type(a) == 'table' then\n        if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n          return a\n        else\n    \
    \      return b\n        end\n      else\n        return nil\n      end\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a == b then\n      return true\n    end\n  end\n  if type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a == b then\n      return true\n    end\n  end\n\
    \  if type(a) == 'table' and type(b) == 'number' then\n    if a[1] == b then\n\
    \      return true\n    end\n  end\n  if type(a) == 'number' and type(b) == 'table'\
    \ then\n    if a == b[1] then\n      return true\n    end\n  end\n  if type(a)\
    \ == 'string' and type(b) == 'table' then\n    if a == b[1] then\n      return\
    \ true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'string' then\n\
    \    if a == b[1] then\n      return true\n    end\n  end\n  if type(a) == 'number'\
    \ and type(b) == 'string' then\n    if a == b then\n      return true\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'number' then\n    if a[1] == b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'number' and type(b) == 'table' then\n    if\
    \ a == b[1] then\n      return true\n    end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'table' then\n    if a == b[1] then\n      return true\n    end\n\
    \  end\n  if type(a) == 'table' and type(b) == 'string' then\n    if a == b[1]\
    \ then\n      return true\n    end\n  end\n  if type(a) == 'number' and type(b)\
    \ == 'string' then\n    if a == b then\n      return true\n    end\n  end\n  if\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'number' then\n    if a[1] == b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'number' and type(b) == 'table' then\n    if\
    \ a == b[1] then\n      return true\n    end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'table' then\n    if a == b[1] then\n      return true\n    end\n\
    \  end\n  if ", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n\
    \      if type(b) == \"number\" then\n        if b > a then\n          return\
    \ b\n        else\n          return a\n        end\n      elseif type(b) == \"\
    string\" then\n        if b == a then\n          return b\n        else\n    \
    \      return a\n        end\n      end\n    elseif type(a) == \"string\" then\n\
    \      if a == b then\n        return a\n      else\n        return b\n      end\n\
    \    end\n  end\nend", "  if type(a) ~= type(b) then\n    return false\n  end\n\
    \  if type(a) == 'number' then\n    if a > b then\n      return true\n    elseif\
    \ b > a then\n      return false\n    else\n      return compare_one(string(a),\
    \ string(b))\n    end\n  elseif type(a) == 'string' then\n    if a > b then\n\
    \      return true\n    elseif b > a then\n      return false\n    else\n    \
    \  return compare_one(a, b)\n    end\n  else\n    return false\n  end\nend", " \
    \ if type(a) ~= type(b) then\n    return false\n  end\n  if type(a) == 'number'\
    \ then\n    return a > b\n  elseif type(a) == 'string' then\n    return a:lower()\
    \ > b:lower()\n  elseif type(a) == 'table' then\n    return compare_one(a[1],\
    \ a[2]) and compare_one(a[3], a[4])\n  else\n    return false\n  end\nend", " \
    \ if type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then\n          return true\n        end\n\
    \      elseif type(b) == \"string\" then\n        if a == b then\n          return\
    \ true\n        end\n      end\n    end\n  end\n  return false\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return true\n\
    \    elseif math.abs(a - b) < 1e-10 then\n      return true\n    else\n      return\
    \ false\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    if a == b then\n      return true\n    elseif a:sub(1, -1) == b:sub(1, -1)\
    \ then\n      return true\n    else\n      return false\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a:keys() ~= b:keys() then\n \
    \     return false\n    end\n    for _, k in pairs(a:keys()) do\n      if compare_one(a[k],\
    \ b[k]) then\n        return true\n      end\n    end\n    return false\n  else\n\
    \    return false\n  end\nend", "  if type(a) == type(b) then\n    if type(a)\
    \ == \"number\" then\n      if type(b) == \"number\" then\n        if b > a then\n\
    \          return b\n        else\n          return a\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if b == a then\n          return b\n   \
    \     else\n          return a\n        end\n      else\n        return a\n  \
    \    end\n    elseif type(a) == \"string\" then\n      if a == b then\n      \
    \  return a\n      else\n        return b\n      end\n    else\n      return a\n\
    \    end\n  else\n    return a\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    elseif math.abs(a\
    \ - b) < 1e-10 then\n      return true\n    end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return true\n    elseif\
    \ a:len() > b:len() then\n      return true\n    elseif a:len() < b:len() then\n\
    \      return false\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:len() == b:len() then\n      for k,v in pairs(a) do\n       \
    \ if compare_one(v, b[k]) then\n          return true\n        end\n      end\n\
    \      return false\n    end\n  end\n  return false\nend", "  if type(a) == type(b)\
    \ then\n    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n\
    \        if a == b then\n          return true\n        else\n          return\
    \ false\n        end\n      elseif type(b) == \"string\" then\n        if a ==\
    \ b then\n          return true\n        else\n          return false\n      \
    \  end\n      else\n        return false\n      end\n    elseif type(a) == \"\
    string\" then\n      if type(b) == \"number\" then\n        if a == b then\n \
    \         return true\n        else\n          return false\n        end\n   \
    \   elseif type(b) == \"string\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      else\n      \
    \  return false\n      end\n    else\n      return false\n    end\n  else\n  \
    \  return false\n  end\nend", "  if type(a) ~= type(b) then return false end\n\
    \  if type(a) == 'number' then\n    if a == b then return true end\n    if a <\
    \ b then return true end\n    if a > b then return false end\n  elseif type(a)\
    \ == 'string' then\n    if a == b then return true end\n    if a < b then return\
    \ false end\n    if a > b then return true end\n  end\n  return false\nend", " \
    \ if type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then return end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then return end\n      elseif type(b)\
    \ == \"table\" then\n        if a == b then return end\n      else\n        if\
    \ a == b then return end\n      end\n    elseif type(a) == \"string\" then\n \
    \     if type(b) == \"number\" then\n        if a == b then return end\n     \
    \ elseif type(b) == \"string\" then\n        if a == b then return end\n     \
    \ elseif type(b) == \"table\" then\n        if a == b then return end\n      else\n\
    \        if a == b then return end\n      end\n    elseif type(a) == \"table\"\
    \ then\n      if type(b) == \"number\" then\n        if a == b then return end\n\
    \      elseif type(b) == \"string\" then\n        if a == b then return end\n\
    \      elseif type(b) == \"table\" then\n        if a == b then return end\n \
    \     else\n        if a == b then return end\n      end\n    else\n      if a\
    \ == b then return end\n    end\n  end\nend", "  if type(a) == type(b) then\n\
    \    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n    \
    \    if a == b then\n          return a\n        else\n          return b\n  \
    \      end\n      else\n        if a == b then\n          return a\n        else\n\
    \          return b\n        end\n      end\n    elseif type(a) == \"string\"\
    \ then\n      if type(b) == \"string\" then\n        if a == b then\n        \
    \  return a\n        else\n          return b\n        end\n      else\n     \
    \   if a == b then\n          return a\n        else\n          return b\n   \
    \     end\n      end\n    else\n      if a == b then\n        return a\n     \
    \ else\n        return b\n      end\n    end\n  else\n    if type(a) == type(b)\
    \ then\n      if type(a) == \"number\" then\n        if type(b) == \"number\"\
    \ then\n          if math.abs(a - b) < 1e-10 then\n            return a\n    \
    \      else\n            return b\n          end\n        elseif math.abs(a -\
    \ b) < 1e-10 then\n          return a\n        else\n          return b\n    \
    \    end\n      elseif type(a) == \"string\" then\n        if type(b) == \"string\"\
    \ then\n          if a == b then\n            return a\n          else\n     \
    \       return b\n          end\n        else\n          if a == b then\n    \
    \        return a\n          else\n            return b\n          end\n     \
    \   end\n      else\n        if a == b then\n          return a\n        else\n\
    \          return b\n        end\n      end\n    else\n      if a == b then\n\
    \        return a\n      else\n        return b\n      end\n    end\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n   \
    \   return true\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if a == b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'table' and type(b) == 'number' then\n    if\
    \ a[1] == b then\n      return true\n    end\n  end\n  if type(a) == 'number'\
    \ and type(b) == 'table' then\n    if a == b[1] then\n      return true\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'table' then\n    if a == b[1]\
    \ then\n      return true\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'string' then\n    if a[1] == b then\n      return true\n    end\n  end\n\
    \  if type(a) == 'number' and type(b) == 'string' then\n    if a == b[1] then\n\
    \      return true\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  return false\n\
    end", "  if type(a) == type(b) then\n    if type(a) == 'number' then\n      if\
    \ type(b) == 'number' then\n        if a > b then\n          return a\n      \
    \  else\n          return b\n        end\n      elseif type(b) == 'string' then\n\
    \        if a ~= b then\n          return a\n        else\n          return b\n\
    \        end\n      end\n    elseif type(a) == 'string' then\n      if type(b)\
    \ == 'number' then\n        if a ~= b then\n          return a\n        else\n\
    \          return b\n        end\n      elseif type(b) == 'string' then\n    \
    \    if a ~= b then\n          return a\n        else\n          return b\n  \
    \      end\n      end\n    end\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    end\n  end\n  if\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:eq(b) then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'cdata' and type(b) == 'cdata' then\n    if a:eq(b) then\n      return true\n\
    \    end\n  end\n  if type(a) == 'cdata' and type(b) == 'number' then\n    if\
    \ a:eq(b) then\n      return true\n    end\n  end\n  if type(a) == 'number' and\
    \ type(b) == 'cdata' then\n    if a:eq(b) then\n      return true\n    end\n \
    \ end\n  if type(a) == 'string' and type(b) == 'cdata' then\n    if a:eq(b) then\n\
    \      return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:eq(b) then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a > b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a > b then\n      return true\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'table' then\n    if a:eq(b) then\n      return true\n    end\n  end\n  if\
    \ type(a) == 'cdata' and type(b) == 'cdata' then\n    if a:eq(b) then\n      return\
    \ true\n    end\n  end\n  if type(a) == 'cdata' and type(b) == 'number' then\n\
    \    if a:eq(b) then\n      return true\n    end\n  end\n  if type(a) == 'number'\
    \ and type(b) == 'cdata' then\n    if a:eq(b) then\n      return true\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'cdata' then\n    if a:eq(b) then\n\
    \      return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:eq(b) then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a < b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a < b then\n      return true\n    end\n  end\n  if type(a) == 'table' and type(b)\
    \ == 'table' then\n    if a:eq(b) then\n      return true\n    end", "  if type(a)\
    \ ~= type(b) then return false end\n  if type(a) == 'number' then\n    if a <\
    \ b then return true end\n    if a == b then return false end\n  end\n  if type(a)\
    \ == 'string' then\n    if a:find(b) == 1 then return true end\n    if a:find(b)\
    \ == -1 then return false end\n  end\n  if type(a) == 'table' then\n    if a:size()\
    \ > 1 then\n      local found = false\n      for i = 1, a:size() do\n        if\
    \ compare_one(a[i], b) then\n          found = true\n          break\n       \
    \ end\n      end\n      return found\n    end\n  end\n  return false\nend", " \
    \ if type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then\n          return true\n        else\n\
    \          return false\n        end\n      elseif type(b) == \"string\" then\n\
    \        if a:len() > b:len() then\n          return true\n        else\n    \
    \      return false\n        end\n      else\n        return false\n      end\n\
    \    elseif type(a) == \"string\" then\n      if a:len() > b:len() then\n    \
    \    return true\n      else\n        return false\n      end\n    else\n    \
    \  return false\n    end\n  else\n    return false\n  end\nend", "  if type(a)\
    \ == type(b) then\n    if type(a) == \"number\" then\n      if a == b then return\
    \ end\n      if a < b then return \"smaller\" end\n      if a > b then return\
    \ \"larger\" end\n      if a == a then return \"equal\" end\n      if a ~= a then\
    \ return \"unequal\" end\n    elseif type(a) == \"table\" then\n      if a ==\
    \ b then return end\n      if a < b then return \"smaller\" end\n      if a >\
    \ b then return \"larger\" end\n      if a == a then return \"equal\" end\n  \
    \    if a ~= a then return \"unequal\" end\n    elseif type(a) == \"string\" then\n\
    \      if a == b then return end\n      if a < b then return \"smaller\" end\n\
    \      if a > b then return \"larger\" end\n      if a == a then return \"equal\"\
    \ end\n      if a ~= a then return \"unequal\" end\n    elseif type(a) == \"boolean\"\
    \ then\n      if a == b then return end\n      if a < b then return \"smaller\"\
    \ end\n      if a > b then return \"larger\" end\n      if a == a then return\
    \ \"equal\" end\n      if a ~= a then return \"unequal\" end\n    elseif type(a)\
    \ == \"function\" then\n      if a == b then return end\n      if a < b then return\
    \ \"smaller\" end\n      if a > b then return \"larger\" end\n      if a == a\
    \ then return \"equal\" end\n      if a ~= a then return \"unequal\" end\n   \
    \ elseif type(a) == \"cdata\" then\n      if a == b then return end\n      if\
    \ a < b then return \"smaller\" end\n      if a > b then return \"larger\" end\n\
    \      if a == a then return \"equal\" end\n      if a ~= a then return \"unequal\"\
    \ end\n    elseif type(a) == \"external\" then\n      if a == b then return end\n\
    \      if a < b then return \"smaller\" end\n      if a > b then return \"larger\"\
    \ end\n      if a == a then return \"equal\" end\n      if a ~= a then return\
    \ \"unequal\" end\n    elseif type(a) == \"thread\" then\n      if a == b then\
    \ return end\n      if a < b then return \"smaller\" end\n      if a > b then\
    \ return \"larger\" end\n      if a == a then return \"equal\" end\n      if a\
    \ ~= a then return \"unequal\" end", "  if type(a) ~= type(b) then\n    return\
    \ false\n  end\n  if type(a) == 'number' then\n    return a > b\n  end\n  if type(a)\
    \ == 'string' then\n    return a:len() > b:len()\n  end\n  return false\nend",
  "  if type(a) ~= type(b) then return nil end\n  if type(a) == 'number' then\n  \
    \  if a == b then return nil end\n    if a < b then return 'smaller' end\n   \
    \ if a > b then return 'larger' end\n  elseif type(a) == 'table' then\n    if\
    \ a == b then return nil end\n    if a < b then return 'smaller' end\n    if a\
    \ > b then return 'larger' end\n  elseif type(a) == 'string' then\n    if a ==\
    \ b then return nil end\n    if a < b then return 'smaller' end\n    if a > b\
    \ then return 'larger' end\n  elseif type(a) == 'boolean' then\n    if a == b\
    \ then return nil end\n    if a < b then return 'smaller' end\n    if a > b then\
    \ return 'larger' end\n  elseif type(a) == 'function' then\n    if a == b then\
    \ return nil end\n    if a < b then return 'smaller' end\n    if a > b then return\
    \ 'larger' end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b)\
    \ then\n    return nil\n  end\n  if type(a) == 'number' then\n    if a == b then\n\
    \      return true\n    end\n    if a < b then\n      return true\n    end\n \
    \   return false\n  elseif type(a) == 'string' then\n    if a == b then\n    \
    \  return true\n    end\n    if a < b then\n      return true\n    end\n    return\
    \ false\n  elseif type(a) == 'table' then\n    if a == b then\n      return true\n\
    \    end\n    if a < b then\n      return true\n    end\n    return false\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-6\
    \ then\n      return true\n    else\n      return false\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, 1) == '-' and b:sub(1, 1) == '-' then\n      return compare_one(a:sub(2,\
    \ -2), b:sub(2, -2))\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) ~= '-' then\n\
    \      return false\n    elseif a:sub(1, 1) ~= '-' and b:sub(1, 1) == '-' then\n\
    \      return compare_one(a:sub(2, -2), b:sub(2, -2))\n    elseif a:sub(1, 1)\
    \ == '-' and b:sub(1, 1) ~= '-' then\n      return compare_one(a:sub(2, -2), b:sub(2,\
    \ -2))\n    elseif a:sub(1, 1) ~= '-' and b:sub(1, 1) ~= '-' then\n      return\
    \ compare_one(a:sub(2, -2), b:sub(2, -2))\n    elseif a:sub(1, 1) == '-' and b:sub(1,\
    \ 1) ~= '-' then\n      return compare_one(a:sub(2, -2), b:sub(2, -2))\n    elseif\
    \ a:sub(1, 1) ~= '-' and b:sub(1, 1) ~= '-' then\n      return compare_one(a:sub(2,\
    \ -2), b:sub(2, -2))\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) ~= '-' then\n\
    \      return compare_one(a:sub(2, -2), b:sub(2, -2))\n    elseif a:sub(1, 1)\
    \ ~= '-' and b:sub(1, 1) ~= '-' then\n      return compare_one(a:sub(2, -2), b:sub(2,\
    \ -2))\n    elseif a:sub(1, 1) == '-' and b:sub(1, 1) ~= '-' then\n      return\
    \ compare_one(a:sub(2, -2), b:sub(2, -2))\n    elseif a:sub(1, 1) ~= '-' and b:sub(1,\
    \ 1) ~= '-' then\n      return compare_one(a:sub(2, -2), b:sub(2, -2))\n    elseif\
    \ a:sub(1, 1) == '-' and b:sub(1, 1) ~= '-' then\n      return compare_one(a:sub(2,\
    \ -2), b:sub(2, -2))\n    elseif a:sub(1, 1) ~= '-' and b:sub(1, 1) ~= '-' then\n\
    \      return compare_one(a:sub(2, -2), b:sub(2, -2))\n    elseif a:sub(1, 1)\
    \ == '-' and b:sub(1, 1) ", "  if type(a) == 'number' then\n    if type(b) ==\
    \ 'number' then\n      if a == b then\n        return nil\n      else\n      \
    \  return b\n      end\n    elseif type(b) == 'string' then\n      if a == b then\n\
    \        return nil\n      else\n        return a\n      end\n    else\n     \
    \ return nil\n    end\n  elseif type(a) == 'string' then\n    if type(b) == 'number'\
    \ then\n      if a == b then\n        return nil\n      else\n        return a\n\
    \      end\n    elseif type(b) == 'string' then\n      if a == b then\n      \
    \  return nil\n      else\n        return b\n      end\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b)\
    \ then return false end\n  if type(a) == 'string' then\n    if a:find(',') ~=\
    \ nil then\n      a = tonumber(a:sub(1,-1))\n    elseif a:find('.') ~= nil then\n\
    \      a = tonumber(a:sub(1,-1))\n    else\n      a = tonumber(a)\n    end\n \
    \ end\n  if type(b) == 'string' then\n    if b:find(',') ~= nil then\n      b\
    \ = tonumber(b:sub(1,-1))\n    elseif b:find('.') ~= nil then\n      b = tonumber(b:sub(1,-1))\n\
    \    else\n      b = tonumber(b)\n    end\n  end\n  if a == b then return true\
    \ end\n  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\
    \ return true end\n    if a < b then return false end\n  end\n  return false\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n\
    \      return true\n    elseif math.abs(a - b) < 1e-10 then\n      return true\n\
    \    else\n      return false\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then\n      return true\n    elseif a:sub(1,\
    \ 1) == b:sub(1, 1) then\n      return true\n    else\n      return false\n  \
    \  end\n  else\n    return false\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return None\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return None\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return None\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == type(b) then\n\
    \    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n    \
    \    if a == b then\n          return true\n        else\n          return false\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    else\n        return false\n      end\n    elseif type(a) == \"string\" then\n\
    \      if type(b) == \"number\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then\n          return true\n        else\n\
    \          return false\n        end\n      else\n        return false\n     \
    \ end\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if a == b then\n          return true\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return true\n        end\n      end\n    end\n  end\n  return false\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if a == b then return end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then return end\n      elseif\
    \ type(b) == \"table\" then\n        if a == b then return end\n      elseif type(b)\
    \ == \"function\" then\n        if a == b then return end\n      else\n      \
    \  assert(false, \"Unknown type for comparison\")\n      end\n    elseif type(a)\
    \ == \"string\" then\n      if type(b) == \"number\" then\n        if a == \"\
    .\" then return b end\n      elseif type(b) == \"string\" then\n        if a ==\
    \ \".\" then return b end\n      elseif type(b) == \"table\" then\n        if\
    \ a == \".\" then return b end\n      elseif type(b) == \"function\" then\n  \
    \      if a == \".\" then return b end\n      else\n        assert(false, \"Unknown\
    \ type for comparison\")\n      end\n    elseif type(a) == \"table\" then\n  \
    \    if type(b) == \"number\" then\n        if a == b then return end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then return end\n      elseif\
    \ type(b) == \"table\" then\n        if a == b then return end\n      elseif type(b)\
    \ == \"function\" then\n        if a == b then return end\n      else\n      \
    \  assert(false, \"Unknown type for comparison\")\n      end\n    elseif type(a)\
    \ == \"function\" then\n      if type(b) == \"number\" then\n        if a == b\
    \ then return end\n      elseif type(b) == \"string\" then\n        if a == b\
    \ then return end\n      elseif type(b) == \"table\" then\n        if a == b then\
    \ return end\n      elseif type(b) == \"function\" then\n        if a == b then\
    \ return end\n      else\n        assert(false, \"Unknown type for comparison\"\
    )\n      end\n    else\n      assert(false, \"Unknown type for comparison\")\n\
    \    end\n  end\nend", "  if type(a) ~= type(b) then\n    return nil\n  elseif\
    \ type(a) == 'number' then\n    if a < b then\n      return a\n    elseif b <\
    \ a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' then\n    if a:find(b) then\n      return a\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == type(b)\
    \ then\n    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n\
    \        if a == b then\n          return true\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then\n          return true\n        end\n\
    \      end\n    end\n  end\n  return false\nend", "  if type(a) ~= type(b) then\
    \ return false end\n  if type(a) == 'number' then\n    if a == b then return true\
    \ end\n    if a < b then return true end\n    return false\n  end\n  if type(a)\
    \ == 'string' then\n    if a:find(b) == 1 then return true end\n    if a:find(b)\
    \ == -1 then return false end\n    return false\n  end\n  if type(a) == 'table'\
    \ then\n    if a:size() == 0 then return false end\n    if a:size() == 1 then\
    \ return compare_one(a[1], b) end\n    local i = 1\n    for v in a:keys() do\n\
    \      if compare_one(a[v], b) then return true end\n      if compare_one(a[v],\
    \ b) then return false end\n      i = i + 1\n    end\n    return false\n  end\n\
    \  return false\nend", "  if type(a) == type(b) then\n    if a == b then\n   \
    \   return true\n    elseif type(a) == \"number\" and type(b) == \"number\" then\n\
    \      if math.abs(a - b) < 1e-10 then\n        return true\n      else\n    \
    \    return false\n      end\n    elseif type(a) == \"string\" and type(b) ==\
    \ \"string\" then\n      if a == b then\n        return true\n      elseif a:sub(1,\
    \ 1) == \".\" and b:sub(1, 1) == \"-\" then\n        return false\n      elseif\
    \ a:sub(1, 1) == \",\" and b:sub(1, 1) == \".\" then\n        return false\n \
    \     elseif a:sub(1, 1) == \"-\" and b:sub(1, 1) == \",\" then\n        return\
    \ false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1, 1) == \"-\" then\n   \
    \     return false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1, 1) == \"-\"\
    \ then\n        return false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1, 1)\
    \ == \"-\" then\n        return false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1,\
    \ 1) == \"-\" then\n        return false\n      elseif a:sub(1, 1) == \"-\" and\
    \ b:sub(1, 1) == \"-\" then\n        return false\n      elseif a:sub(1, 1) ==\
    \ \"-\" and b:sub(1, 1) == \"-\" then\n        return false\n      elseif a:sub(1,\
    \ 1) == \"-\" and b:sub(1, 1) == \"-\" then\n        return false\n      elseif\
    \ a:sub(1, 1) == \"-\" and b:sub(1, 1) == \"-\" then\n        return false\n \
    \     elseif a:sub(1, 1) == \"-\" and b:sub(1, 1) == \"-\" then\n        return\
    \ false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1, 1) == \"-\" then\n   \
    \     return false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1, 1) == \"-\"\
    \ then\n        return false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1, 1)\
    \ == \"-\" then\n        return false\n      elseif a:sub(1, 1) == \"-\" and b:sub(1,\
    \ 1) == \"-\" then\n        return false\n      elseif a:sub(1, 1) == \"-\" and\
    \ b:sub(1, 1) == \"-\" then\n        return false\n      elseif a:sub(1, 1) ==\
    \ \"-\" and b:sub(1, 1) == \"-\" then\n        return false\n      elseif a:sub(1,\
    \ 1) == \"-\" and b:sub(1, 1) == \"-\" then\n        return false\n      elseif\
    \ a:sub(1, 1) == \"-\" and b:sub(1, 1) == \"-\" then\n        return false\n \
    \     ", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n  \
    \    if type(b) == \"number\" then\n        if b > a then\n          return b\n\
    \        else\n          return a\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if b == a then\n          return b\n        else\n          return\
    \ a\n        end\n      else\n        return a\n      end\n    elseif type(a)\
    \ == \"string\" then\n      if type(b) == \"number\" then\n        if b > a then\n\
    \          return b\n        else\n          return a\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then\n          return a\n   \
    \     else\n          return b\n        end\n      else\n        return a\n  \
    \    end\n    else\n      return a\n    end\n  else\n    return a\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then return\
    \ b end\n    if a == b then return nil end\n  end\n  if type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a > b then return b end\n    if a == b then\
    \ return nil end\n  end\n  if type(a) == 'table' and type(b) == 'table' then\n\
    \    if a.__index > b.__index then return b end\n    if a.__index == b.__index\
    \ then return nil end\n  end\n  return a\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a > b then\n      return a\n    elseif a <\
    \ b then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif a < b then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ and compare_one(a.y, b.y) then\n      return compare_one(a.z, b.z)\n    else\n\
    \      return compare_one(a.x, b.x)\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) ~= type(b) then\n    return false\n  end\n  if type(a) ==\
    \ 'string' then\n    a = tonumber(a)\n    b = tonumber(b)\n  end\n  if a == b\
    \ then\n    return true\n  end\n  if type(a) == 'number' then\n    if type(b)\
    \ == 'number' then\n      return a > b\n    end\n    return false\n  end\n  return\
    \ false\nend", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n\
    \      if type(b) == \"number\" then\n        if b > a then\n          return\
    \ b\n        else\n          return a\n        end\n      elseif type(b) == \"\
    string\" then\n        if b == \"inf\" then\n          return a\n        else\n\
    \          return b\n        end\n      else\n        return nil\n      end\n\
    \    elseif type(a) == \"string\" then\n      if a == \"inf\" then\n        return\
    \ b\n      else\n        return a\n      end\n    else\n      return nil\n   \
    \ end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    end\n  end\n  if\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n     \
    \ return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'string' and type(b) == 'number' then\n    if tonumber(a) == tonumber(b) then\n\
    \      return true\n    end\n  end\n  if type(a) == 'number' and type(b) == 'string'\
    \ then\n    if tonumber(a) == tonumber(b) then\n      return true\n    end\n \
    \ end\n  if type(a) == 'table' and type(b) == 'string' then\n    if a == b then\n\
    \      return true\n    end\n  end\n  if type(a) == 'string' and type(b) == 'table'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if a == b then\n      return true\n\
    \    end\n  end\n  return false\nend", "  if type(a) == type(b) then\n    if type(a)\
    \ == 'number' and type(b) == 'number' then\n      if a > b then\n        return\
    \ a\n      elseif b > a then\n        return b\n      else\n        return a\n\
    \      end\n    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b)\
    \ then return false end\n  if type(a) == 'number' then\n    if a < b then return\
    \ true end\n    if a == b then return false end\n  elseif type(a) == 'string'\
    \ then\n    if a:find(b) == 1 then return true end\n    if a:find(b) == -1 then\
    \ return false end\n  elseif type(a) == 'table' then\n    if a[1] < b[1] then\
    \ return true end\n    if a[1] == b[1] then return false end\n  else\n    return\
    \ false\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return a\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n\
    \      return a\n    elseif b > a then\n      return b\n    else\n      return\
    \ nil\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n  \
    \  if a > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ ~= type(b) then return nil end\n  if type(a) == 'number' then\n    if a < b\
    \ then return b end\n    if a == b then return nil end\n  end\n  if type(a) ==\
    \ 'string' then\n    if a:match('%f') then\n      local a_float = tonumber(a)\n\
    \      local b_float = tonumber(b)\n      if a_float == b_float then return nil\
    \ end\n    end\n  end\n  return a\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    elseif math.abs(a\
    \ - b) < 1e-10 then\n      return true\n    else\n      return false\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return true\n    elseif a:len() < b:len() then\n      return true\n   \
    \ else\n      return false\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if a:len() < b:len() then\n      return true\n    else\n \
    \     return false\n    end\n  else\n    return false\n  end\nend", "  if type(a)\
    \ ~= type(b) then return false end\n  if type(a) == 'string' then\n    if a ==\
    \ b then return true end\n    if a == '.' then return true end\n    if a == ','\
    \ then return true end\n  end\n  if type(a) == 'number' then\n    if a == b then\
    \ return true end\n  end\n  return false\nend", "  if type(a) == 'number' then\n\
    \    if type(b) == 'number' then\n      if a > b then\n        return a\n    \
    \  elseif a < b then\n        return b\n      else\n        return nil\n     \
    \ end\n    elseif type(b) == 'string' then\n      if a == b then\n        return\
    \ nil\n      else\n        return b\n      end\n    else\n      return nil\n \
    \   end\n  elseif type(a) == 'string' then\n    if type(b) == 'number' then\n\
    \      if a > b then\n        return b\n      elseif a < b then\n        return\
    \ a\n      else\n        return nil\n      end\n    elseif type(b) == 'string'\
    \ then\n      if a == b then\n        return nil\n      else\n        return a\n\
    \      end\n    else\n      return nil\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number'\
    \ then\n    if a == b then return true end\n    if a == nil then return false\
    \ end\n    if b == nil then return false end\n    if type(a) == 'string' then\n\
    \      local a_real = tonumber(a)\n      local b_real = tonumber(b)\n      if\
    \ a_real ~= b_real then return false end\n    elseif type(a) == 'table' then\n\
    \      if a[1] == 'number' then\n        if a[2] == b then return true end\n \
    \       if a[2] == nil then return false end\n      elseif a[1] == 'string' then\n\
    \        if a[2] == b then return true end\n        if a[2] == nil then return\
    \ false end\n      elseif a[1] == 'table' then\n        if a[2] == b then return\
    \ true end\n        if a[2] == nil then return false end\n      end\n    end\n\
    \  end\n  return false\nend", "  if type(a) == type(b) then\n    if type(a) ==\
    \ \"number\" then\n      if type(b) == \"number\" then\n        if b > a then\n\
    \          return b\n        else\n          return a\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if b == a then\n          return b\n   \
    \     else\n          return a\n        end\n      else\n        return a\n  \
    \    end\n    elseif type(a) == \"string\" then\n      if type(b) == \"number\"\
    \ then\n        if a > b then\n          return a\n        else\n          return\
    \ b\n        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return a\n        else\n          return b\n        end\n      else\n\
    \        return a\n      end\n    else\n      return a\n    end\n  else\n    return\
    \ a\n  end\nend", "  if type(a) == type(b) then\n    if type(a) == \"number\"\
    \ then\n      if type(b) == \"number\" then\n        if a == b then\n        \
    \  return nil\n        else\n          return a\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then\n          return nil\n        else\n\
    \          return b\n        end\n      else\n        return nil\n      end\n\
    \    elseif type(a) == \"string\" then\n      if type(b) == \"number\" then\n\
    \        if a == b then\n          return nil\n        else\n          return\
    \ b\n        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return nil\n        else\n          return a\n        end\n      else\n\
    \        return nil\n      end\n    elseif type(a) == \"table\" then\n      if\
    \ type(b) == \"table\" then\n        if compare_one(a.value, b.value) == nil then\n\
    \          return nil\n        else\n          return a.value\n        end\n \
    \     elseif type(b) == \"number\" then\n        if compare_one(a, b) == nil then\n\
    \          return nil\n        else\n          return b\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if compare_one(a, b) == nil then\n     \
    \     return nil\n        else\n          return a\n        end\n      else\n\
    \        return nil\n      end\n    elseif type(a) == \"function\" then\n    \
    \  if type(b) == \"function\" then\n        if compare_one(a.func, b.func) ==\
    \ nil then\n          return nil\n        else\n          return a.func\n    \
    \    end\n      elseif type(b) == \"number\" then\n        if compare_one(a, b)\
    \ == nil then\n          return nil\n        else\n          return b\n      \
    \  end\n      elseif type(b) == \"string\" then\n        if compare_one(a, b)\
    \ == nil then\n          return nil\n        else\n          return a\n      \
    \  end\n      else\n        return nil\n      end\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    elseif math.abs(a\
    \ - b) < 1e-15 then\n      return true\n    else\n      return false\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return true\n    elseif a:sub(1, -1) == b:sub(1, -1) then\n      return\
    \ true\n    else\n      return false\n    end\n  elseif type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a == b then\n      return true\n    elseif a:keys\
    \ == b:keys then\n      for _, k in ipairs(a:keys) do\n        if compare_one(a[k],\
    \ b[k]) then\n          return true\n        end\n      end\n      return false\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return nil\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a)\
    \ ~= type(b) then return false end\n  if type(a) == 'number' then\n    if a ==\
    \ b then return true end\n    if a < b then return true end\n    return false\n\
    \  end\n  if type(a) == 'string' then\n    if a:find(b) == 1 then return true\
    \ end\n    if a:find(b) == -1 then return true end\n    return false\n  end\n\
    \  if type(a) == 'table' then\n    if a:size() == 0 then return false end\n  \
    \  if a:size() == 1 then\n      if compare_one(a[1], b) then return true end\n\
    \      return false\n    end\n    if a:size() > 1 then\n      local c = a[1]\n\
    \      for i = 2, a:size() do\n        if compare_one(c, b) then return true end\n\
    \        c = a[i]\n      end\n      return false\n    end\n  end\n  return false\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if a == b then\n          return true\n\
    \        else\n          return false\n        end\n      elseif type(b) == \"\
    string\" then\n        if a == b then\n          return true\n        else\n \
    \         return false\n        end\n      else\n        return false\n      end\n\
    \    elseif type(a) == \"string\" then\n      if type(b) == \"number\" then\n\
    \        if a == b then\n          return true\n        else\n          return\
    \ false\n        end\n      elseif type(b) == \"string\" then\n        if a ==\
    \ b then\n          return true\n        else\n          return false\n      \
    \  end\n      else\n        return false\n      end\n    elseif type(a) == \"\
    table\" then\n      if type(b) == \"table\" then\n        if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n          return true\n        else\n \
    \         return false\n        end\n      elseif type(b) == \"string\" then\n\
    \        if a == b then\n          return true\n        else\n          return\
    \ false\n        end\n      elseif type(b) == \"number\" then\n        if a ==\
    \ b then\n          return true\n        else\n          return false\n      \
    \  end\n      else\n        return false\n      end\n    elseif type(a) == \"\
    function\" then\n      if type(b) == \"function\" then\n        if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n          return true\n        else\n \
    \         return false\n        end\n      elseif type(b) == \"table\" then\n\
    \        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"number\" then\n        if a == b then\n          return true\n        else\n\
    \          return false\n        end\n      else\n        return false\n     \
    \ end\n    elseif type(a) == \"cdata\" then\n      if type(b) == \"cdata\" then\n\
    \        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"table\" then\n        if compare_one(a.x, b.x) and compare_one(a.y, b.y)\
    \ then\n          return true\n        else\n          return false\n        end\n\
    \      elseif type(b) == \"number\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      else\n      \
    \  return false\n      end\n    elseif type(a) == \"external\" then\n      if\
    \ type(b) == \"external\" then\n        if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n          return true\n        else\n          return false\n   \
    \     end", "  if type(a) ~= type(b) then return false end\n  if type(a) == 'string'\
    \ then\n    a = a:match('%f+')\n    b = b:match('%f+')\n  end\n  if type(a) ==\
    \ 'number' then\n    if a < b then return true end\n    if a == b then return\
    \ true end\n  end\n  return false\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    elseif math.abs(a\
    \ - b) < 1e-14 then\n      return true\n    else\n      return false\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return true\n    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return true\n\
    \    else\n      return false\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'table' then\n    if a:size() == b:size() then\n      -- Both tables have\
    \ the same number of entries.\n      for i = 1, a:size() do\n        if not compare_one(a[i],\
    \ b[i]) then\n          return false\n        end\n      end\n      return true\n\
    \    else\n      return false\n    end\n  else\n    -- Both values are non-numbers.\n\
    \    return false\n  end\nend", "  if type(a) ~= type(b) then return false end\n\
    \  if type(a) == 'number' then\n    if a < b then return true end\n    if a ==\
    \ b then return false end\n  end\n  if type(a) == 'string' then\n    if a:find(',')\
    \ ~= nil then\n      local a_parts = a:split(',')\n      local b_parts = b:split(',')\n\
    \      local a_len = #a_parts\n      local b_len = #b_parts\n      local i = 0\n\
    \      while i < a_len do\n        if compare_one(a_parts[i], b_parts[i]) == false\
    \ then return false end\n        i = i + 1\n      end\n      while i < b_len do\n\
    \        if compare_one(a_parts[i], b_parts[i]) == true then return true end\n\
    \        i = i + 1\n      end\n    elseif a:find('.') ~= nil then\n      local\
    \ a_parts = a:split('.')\n      local b_parts = b:split('.')\n      local a_len\
    \ = #a_parts\n      local b_len = #b_parts\n      local i = 0\n      while i <\
    \ a_len do\n        if compare_one(a_parts[i], b_parts[i]) == false then return\
    \ false end\n        i = i + 1\n      end\n      while i < b_len do\n        if\
    \ compare_one(a_parts[i], b_parts[i]) == true then return true end\n        i\
    \ = i + 1\n      end\n    elseif a:find('-') ~= nil then\n      local a_parts\
    \ = a:split('-')\n      local b_parts = b:split('-')\n      local a_len = #a_parts\n\
    \      local b_len = #b_parts\n      local i = 0\n      while i < a_len do\n \
    \       if compare_one(a_parts[i], b_parts[i]) == false then return false end\n\
    \        i = i + 1\n      end\n      while i < b_len do\n        if compare_one(a_parts[i],\
    \ b_parts[i]) == true then return true end\n        i = i + 1\n      end\n   \
    \ elseif a:find('+') ~= nil then\n      local a_parts = a:split('+')\n      local\
    \ b_parts = b:split('+')\n      local a_len = #a_parts\n      local b_len = #b_parts\n\
    \      local i = 0\n      while i < a_len do\n        if compare_one(a_parts[i],\
    \ b_parts[i]) == false then return false end\n        i = i + 1\n      end\n \
    \     while i < b_len do\n        if compare_one(a_parts[i], b_parts[i]) == true\
    \ then return true end\n        i = i + 1\n      end\n    end\n  end\n  return\
    \ false\nend", "  if type(a) ~= type(b) then return false end\n  if type(a) ==\
    \ 'number' then\n    if a > b then return true end\n    if a == b then return\
    \ false end\n  end\n  if type(a) == 'string' then\n    if a ~= b then return false\
    \ end\n  end\n  return true\nend", "  if type(a) == type(b) then\n    if type(a)\
    \ == \"number\" then\n      if type(b) == \"number\" then\n        if math.abs(a\
    \ - b) < 1e-15 then\n          return true\n        else\n          return false\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    else\n        return false\n      end\n    elseif type(a) == \"string\" then\n\
    \      if a == b then\n        return true\n      else\n        return false\n\
    \      end\n    else\n      return false\n    end\n  else\n    return false\n\
    \  end\nend", "  if type(a) ~= type(b) then\n    return false\n  end\n  if type(a)\
    \ == 'number' then\n    return a > b\n  elseif type(a) == 'string' then\n    return\
    \ a:lower() > b:lower()\n  else\n    return false\n  end\nend", "  if type(a)\
    \ == type(b) then\n    if type(a) == \"number\" then\n      if type(b) == \"number\"\
    \ then\n        if b > a then\n          return b\n        else\n          return\
    \ a\n        end\n      elseif type(b) == \"string\" then\n        if b == a then\n\
    \          return b\n        else\n          return a\n        end\n      else\n\
    \        return a\n      end\n    elseif type(a) == \"string\" then\n      if\
    \ type(b) == \"number\" then\n        if b > a then\n          return b\n    \
    \    else\n          return a\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then\n          return a\n        else\n          return\
    \ b\n        end\n      else\n        return a\n      end\n    elseif type(a)\
    \ == \"table\" then\n      if type(b) == \"table\" then\n        if compare_one(a[1],\
    \ b[1]) then\n          return compare_one(a[2], b[2])\n        else\n       \
    \   return compare_one(a[1], b[2])\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then\n          return a\n        else\n          return\
    \ b\n        end\n      else\n        return a\n      end\n    else\n      return\
    \ a\n    end\n  else\n    return a\n  end\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a == b then return end\n    if a < b then return\
    \ 'number' end\n    if a > b then return 'number' end\n  end\n  if type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a == b then return end\n    if\
    \ a < b then return 'string' end\n    if a > b then return 'string' end\n  end\n\
    \  if type(a) == 'table' and type(b) == 'table' then\n    if a == b then return\
    \ end\n    if a < b then return 'table' end\n    if a > b then return 'table'\
    \ end\n  end\n  if type(a) == 'table' and type(b) == 'number' then\n    if a ==\
    \ b then return end\n    if a < b then return 'table' end\n    if a > b then return\
    \ 'number' end\n  end\n  if type(a) == 'number' and type(b) == 'table' then\n\
    \    if a == b then return end\n    if a < b then return 'number' end\n    if\
    \ a > b then return 'table' end\n  end\n  if type(a) == 'string' and type(b) ==\
    \ 'table' then\n    if a == b then return end\n    if a < b then return 'string'\
    \ end\n    if a > b then return 'table' end\n  end\n  if type(a) == 'table' and\
    \ type(b) == 'string' then\n    if a == b then return end\n    if a < b then return\
    \ 'table' end\n    if a > b then return 'string' end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then return end\n    if a < b then\
    \ return 'string' end\n    if a > b then return 'string' end\n  end\n  if type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a == b then return end\n    if\
    \ a < b then return 'table' end\n    if a > b then return 'table' end\n  end\n\
    \  if type(a) == 'table' and type(b) == 'number' then\n    if a == b then return\
    \ end\n    if a < b then return 'table' end\n    if a > b then return 'number'\
    \ end\n  end\n  if type(a) == 'number' and type(b) == 'table' then\n    if a ==\
    \ b then return end\n    if a < b then return 'number' end\n    if a > b then\
    \ return 'table' end\n  end\n  if type(a) == 'string' and type(b) == 'table' then\n\
    \    if a == b then return end\n    if a < b then return 'string", "  if type(a)\
    \ ~= type(b) then return false end\n  if type(a) == 'number' then\n    if a ==\
    \ b then return true end\n    if a < b then return true end\n    return false\n\
    \  end\n  if type(a) == 'string' then\n    if a:find(b) == 1 then return true\
    \ end\n    if a:find(b) == -1 then return true end\n    return false\n  end\n\
    \  if type(a) == 'table' then\n    if a:size() == 0 then return false end\n  \
    \  if a:size() == 1 then return compare_one(a[1], b) end\n    local max\n    for\
    \ i = 1, a:size() do\n      if max ~= nil then\n        if compare_one(a[i], b)\
    \ > 0 then return true end\n      else\n        max = a[i]\n      end\n    end\n\
    \    return false\n  end\n  return false\nend", "  if type(a) == 'number' and\
    \ type(b) == 'number' then\n    if a > b then\n      return a\n    else\n    \
    \  return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    if a > b then\n      return a\n    else\n      return b\n    end\n  else\n\
    \    return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then return end\n    if a < b then return b end\n    return\
    \ a\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a ==\
    \ b then return end\n    if a < b then return b end\n    return a\n  end\n  if\
    \ type(a) == 'table' and type(b) == 'table' then\n    if a == b then return end\n\
    \    if a < b then return b end\n    return a\n  end\n  return nil\nend", "  if\
    \ type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then return end\n      elseif type(b)\
    \ == \"string\" then\n        if a:find(b) == 1 then return end\n      elseif\
    \ type(b) == \"table\" then\n        if a:len() == b:len() then return end\n \
    \     elseif type(b) == \"function\" then\n        if a:len() == b:len() then\
    \ return end\n      elseif type(b) == \"boolean\" then\n        if a == b then\
    \ return end\n      elseif type(b) == \"table\" then\n        if a:len() == b:len()\
    \ then return end\n      elseif type(b) == \"function\" then\n        if a:len()\
    \ == b:len() then return end\n      elseif type(b) == \"string\" then\n      \
    \  if a:find(b) == 1 then return end\n      else\n        return nil\n      end\n\
    \    elseif type(a) == \"string\" then\n      if type(b) == \"number\" then\n\
    \        if a:find(b) == 1 then return end\n      elseif type(b) == \"string\"\
    \ then\n        if a:find(b) == 1 then return end\n      elseif type(b) == \"\
    table\" then\n        if a:len() == b:len() then return end\n      elseif type(b)\
    \ == \"function\" then\n        if a:len() == b:len() then return end\n      elseif\
    \ type(b) == \"boolean\" then\n        if a == b then return end\n      elseif\
    \ type(b) == \"table\" then\n        if a:len() == b:len() then return end\n \
    \     elseif type(b) == \"function\" then\n        if a:len() == b:len() then\
    \ return end\n      elseif type(b) == \"string\" then\n        if a:find(b) ==\
    \ 1 then return end\n      else\n        return nil\n      end\n    elseif type(a)\
    \ == \"table\" then\n      if type(b) == \"number\" then\n        if a:len() ==\
    \ b:len() then return end\n      elseif type(b) == \"string\" then\n        if\
    \ a:find(b) == 1 then return end\n      elseif type(b) == \"table\" then\n   \
    \     if a:len() == b:len() then return end\n      elseif type(b) == \"function\"\
    \ then\n        if a:len() == b:len() then return end\n      elseif type(b) ==\
    \ \"boolean\" then\n        if a == b then return end\n      elseif type(b) ==\
    \ \"table\" then\n        if a:len() == b:len() then return end\n      elseif\
    \ type(b) == \"function\" then\n        if a:len() == b:len() then return end\n\
    \      elseif type", "  if type(a) == 'number' then\n    if type(b) == 'number'\
    \ then\n      if a > b then\n        return a\n      elseif b > a then\n     \
    \   return b\n      else\n        return a\n      end\n    elseif type(b) == 'string'\
    \ then\n      if a == b then\n        return a\n      else\n        return b\n\
    \      end\n    else\n      return b\n    end\n  elseif type(a) == 'string' then\n\
    \    if type(b) == 'number' then\n      if a > b then\n        return b\n    \
    \  elseif b > a then\n        return a\n      else\n        return b\n      end\n\
    \    elseif type(b) == 'string' then\n      if a == b then\n        return a\n\
    \      else\n        return b\n      end\n    else\n      return b\n    end\n\
    \  else\n    return b\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-15\
    \ then\n      return true\n    else\n      return false\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return true\n    else\n   \
    \   return false\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:size() == b:size() then\n      for i = 1, a:size() do\n     \
    \   if compare_one(a[i], b[i]) then\n          return true\n        end\n    \
    \  end\n      return false\n    else\n      return false\n    end\n  else\n  \
    \  return false\n  end\nend", "  if type(a) == type(b) then\n    if type(a) ==\
    \ \"number\" then\n      if type(b) == \"number\" then\n        if a > b then\n\
    \          return a\n        else\n          return b\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a > b then\n          return b\n    \
    \    else\n          return a\n        end\n      else\n        return nil\n \
    \     end\n    elseif type(a) == \"string\" then\n      if type(b) == \"number\"\
    \ then\n        if a > b then\n          return b\n        else\n          return\
    \ a\n        end\n      elseif type(b) == \"string\" then\n        if a > b then\n\
    \          return a\n        else\n          return b\n        end\n      else\n\
    \        return nil\n      end\n    elseif type(a) == \"table\" then\n      if\
    \ type(b) == \"table\" then\n        if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n          return a\n        else\n          return b\n        end\n\
    \      elseif type(b) == \"string\" then\n        if compare_one(a.x, b) then\n\
    \          return a\n        else\n          return b\n        end\n      elseif\
    \ type(b) == \"number\" then\n        if compare_one(a.x, b) then\n          return\
    \ a\n        else\n          return b\n        end\n      else\n        return\
    \ nil\n      end\n    elseif type(a) == \"number\" then\n      if type(b) == \"\
    number\" then\n        if a > b then\n          return a\n        else\n     \
    \     return b\n        end\n      elseif type(b) == \"string\" then\n       \
    \ if a > b then\n          return b\n        else\n          return a\n      \
    \  end\n      else\n        return nil\n      end\n    elseif type(a) == \"boolean\"\
    \ then\n      if type(b) == \"boolean\" then\n        if a > b then\n        \
    \  return a\n        else\n          return b\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a > b then\n          return b\n        else\n\
    \          return a\n        end\n      else\n        return nil\n      end\n\
    \    else\n      return nil\n    end\n  else\n    return nil\n  end\nend", " \
    \ if type(a) ~= type(b) then return nil end\n  if type(a) == 'string' then\n \
    \   if a == b then return true end\n    if a == '.' then return true end\n   \
    \ if a == ',' then return true end\n    return false\n  end\n  if type(a) == 'number'\
    \ then\n    if a == b then return true end\n    return false\n  end\n  return\
    \ nil\nend", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n\
    \      if type(b) == \"number\" then\n        if b > a then\n          return\
    \ b\n        else\n          return a\n        end\n      elseif type(b) == \"\
    string\" then\n        if b == \"inf\" then\n          return a\n        else\n\
    \          return b\n        end\n      else\n        return b\n      end\n  \
    \  elseif type(a) == \"string\" then\n      if a == \"inf\" then\n        return\
    \ b\n      else\n        return a\n      end\n    else\n      return b\n    end\n\
    \  else\n    return b\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif a < b then\n      return\
    \ b\n    else\n      return a\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif a < b then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'number' then\n    if compare_one(a.x, b) then\n \
    \     return a\n    else\n      return b\n    end\n  elseif type(a) == 'number'\
    \ and type(b) == 'table' then\n    if compare_one(a, b) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'table' then\n    if compare_one(a, b) then\n      return a\n    else\n    \
    \  return b\n    end\n  elseif type(a) == 'table' and type(b) == 'string' then\n\
    \    if compare_one(a.x, b) then\n      return a\n    else\n      return b\n \
    \   end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then return\
    \ false end\n  if type(a) == 'number' then\n    if a == b then return true end\n\
    \    if a < b then return true end\n    if a > b then return false end\n  elseif\
    \ type(a) == 'string' then\n    if a == b then return true end\n    if a < b then\
    \ return false end\n    if a > b then return true end\n  elseif type(a) == 'table'\
    \ then\n    if a == b then return true end\n    if a < b then return false end\n\
    \    if a > b then return true end\n  else\n    return false\n  end\nend", " \
    \ if type(a) == type(b) then\n    if type(a) == 'number' then\n      if type(b)\
    \ == 'number' then\n        if a == b then\n          return nil\n        else\n\
    \          return a\n        end\n      elseif type(b) == 'string' then\n    \
    \    if a == b then\n          return nil\n        else\n          return b\n\
    \        end\n      else\n        return nil\n      end\n    elseif type(a) ==\
    \ 'string' then\n      if type(b) == 'number' then\n        if a == b then\n \
    \         return nil\n        else\n          return b\n        end\n      elseif\
    \ type(b) == 'string' then\n        if a == b then\n          return nil\n   \
    \     else\n          return a\n        end\n      else\n        return nil\n\
    \      end\n    else\n      return nil\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == type(b) then\n    if type(a) == 'number' and type(b) ==\
    \ 'number' then\n      if a > b then\n        return a\n      elseif b > a then\n\
    \        return b\n      else\n        return a\n      end\n    elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n      if a > b then\n        return\
    \ a\n      elseif b > a then\n        return b\n      else\n        return a\n\
    \      end\n    elseif type(a) == 'table' and type(b) == 'table' then\n      if\
    \ compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n        return a\n   \
    \   else\n        return b\n      end\n    elseif type(a) == 'table' and type(b)\
    \ == 'number' then\n      if compare_one(a.x, b) then\n        return a\n    \
    \  else\n        return b\n      end\n    elseif type(b) == 'table' and type(a)\
    \ == 'number' then\n      if compare_one(a, b) then\n        return a\n      else\n\
    \        return b\n      end\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then return b end\n    if a == b then return nil end\n  end\n\
    \  if type(a) == 'string' and type(b) == 'string' then\n    if a > b then return\
    \ b end\n    if a == b then return nil end\n  end\n  if type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a.__index > b.__index then return b end\n  \
    \  if a.__index == b.__index then return nil end\n  end\n  return a\nend", " \
    \ if type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then return end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then return end\n      else\n        return\
    \ nil\n      end\n    elseif type(a) == \"string\" then\n      if type(b) == \"\
    number\" then\n        if a == b then return end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then return end\n      else\n        return nil\n  \
    \    end\n    else\n      return nil\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number'\
    \ then\n    if a ~= b then return false end\n  elseif type(a) == 'string' then\n\
    \    if a:sub(1, 1) ~= b:sub(1, 1) then return false end\n  elseif type(a) ==\
    \ 'table' then\n    if compare_one(a[1], b[1]) == false then return false end\n\
    \    if compare_one(a[2], b[2]) == false then return false end\n    if compare_one(a[3],\
    \ b[3]) == false then return false end\n    if compare_one(a[4], b[4]) == false\
    \ then return false end\n    if compare_one(a[5], b[5]) == false then return false\
    \ end\n    if compare_one(a[6], b[6]) == false then return false end\n    if compare_one(a[7],\
    \ b[7]) == false then return false end\n    if compare_one(a[8], b[8]) == false\
    \ then return false end\n    if compare_one(a[9], b[9]) == false then return false\
    \ end\n    if compare_one(a[10], b[10]) == false then return false end\n    if\
    \ compare_one(a[11], b[11]) == false then return false end\n    if compare_one(a[12],\
    \ b[12]) == false then return false end\n    if compare_one(a[13], b[13]) == false\
    \ then return false end\n    if compare_one(a[14], b[14]) == false then return\
    \ false end\n    if compare_one(a[15], b[15]) == false then return false end\n\
    \    if compare_one(a[16], b[16]) == false then return false end\n    if compare_one(a[17],\
    \ b[17]) == false then return false end\n    if compare_one(a[18], b[18]) == false\
    \ then return false end\n    if compare_one(a[19], b[19]) == false then return\
    \ false end\n    if compare_one(a[20], b[20]) == false then return false end\n\
    \    if compare_one(a[21], b[21]) == false then return false end\n    if compare_one(a[22],\
    \ b[22]) == false then return false end\n    if compare_one(a[23], b[23]) == false\
    \ then return false end\n    if compare_one(a[24], b[24]) == false then return\
    \ false end\n    if compare_one(a[25], b[25]) == false then return false end\n\
    \    if compare_one(a[26], b[26]) == false then return false end\n    if compare_one(a[27],\
    \ b", "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n\
    \      return true\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if a == b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'table' and type(b) == 'number' then\n    if\
    \ a > b then\n      return true\n    end\n  end\n  if type(a) == 'number' and\
    \ type(b) == 'table' then\n    if a > b then\n      return true\n    end\n  end\n\
    \  if type(a) == 'string' and type(b) == 'table' then\n    if a > b then\n   \
    \   return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'string'\
    \ then\n    if a > b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'number' and type(b) == 'string' then\n    if a > b then\n      return true\n\
    \    end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if\
    \ a > b then\n      return true\n    end\n  end\n  return false\nend", "  if type(a)\
    \ == type(b) then\n    if type(a) == \"number\" then\n      if a == b then return\
    \ end\n      if a > b then return b end\n      if a < b then return b end\n  \
    \    if a >= b then return b end\n      if a <= b then return b end\n      if\
    \ a == nil then return b end\n      if b == nil then return b end\n      if a\
    \ == \"\" then return b end\n      if b == \"\" then return b end\n      if a\
    \ ~= b then return b end\n      if a ~= nil then return b end\n      if b ~= nil\
    \ then return b end\n      if a ~= \"\" then return b end\n      if b ~= \"\"\
    \ then return b end\n      if a ~= nil then return b end\n      if b ~= nil then\
    \ return b end\n      if a ~= \"\" then return b end\n      if b ~= \"\" then\
    \ return b end\n      if a ~= nil then return b end\n      if b ~= nil then return\
    \ b end\n      if a ~= \"\" then return b end\n      if b ~= \"\" then return\
    \ b end\n      if a ~= nil then return b end\n      if b ~= nil then return b\
    \ end\n      if a ~= \"\" then return b end\n      if b ~= \"\" then return b\
    \ end\n      if a ~= nil then return b end\n      if b ~= nil then return b end\n\
    \      if a ~= \"\" then return b end\n      if b ~= \"\" then return b end\n\
    \      if a ~= nil then return b end\n      if b ~= nil then return b end\n  \
    \    if a ~= \"\" then return b end\n      if b ~= \"\" then return b end\n  \
    \    if a ~= nil then return b end\n      if b ~= nil then return b end\n    \
    \  if a ~= \"\" then return b end\n      if b ~= \"\" then return b end\n    \
    \  if a ~= nil then return b end\n      if b ~= nil then return b end\n      if\
    \ a ~= \"\" then return b end\n      if b ~= \"\" then return b end\n      if\
    \ a ~= nil then return b end\n      if b ~= nil then return b end\n      if a\
    \ ~= \"\" then return b end\n      if b ~= \"\" then return b end\n      if a\
    \ ~= nil then return b end\n      if b ~= nil then return b end\n      if a ~=\
    \ \"\" then ", "  if type(a) == 'number' and type(b) == 'number' then\n    if\
    \ a == b then\n      return true\n    elseif math.abs(a) < math.abs(b) then\n\
    \      return true\n    else\n      return false\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return true\n    else\n   \
    \   return false\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:key() == b:key() then\n      return compare_one(a:value(), b:value())\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\nend",
  "  if type(a) == type(b) then\n    if type(a) == 'number' then\n      if type(b)\
    \ == 'number' then\n        if a == b then\n          return true\n        end\n\
    \      elseif type(b) == 'string' then\n        if a:find(b) == 1 then\n     \
    \     return true\n        end\n      end\n    end\n  end\n  return false\nend",
  "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then\n          return a\n        else\n\
    \          return b\n        end\n      else\n        if a == b then\n       \
    \   return a\n        else\n          return b\n        end\n      end\n    elseif\
    \ type(a) == \"string\" then\n      if type(b) == \"string\" then\n        if\
    \ a == b then\n          return a\n        else\n          return b\n        end\n\
    \      else\n        if a == b then\n          return a\n        else\n      \
    \    return b\n        end\n      end\n    elseif type(a) == \"table\" then\n\
    \      if type(b) == \"table\" then\n        if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n          return a\n        else\n          return b\n        end\n\
    \      else\n        if compare_one(a.x, b) and compare_one(a.y, b) then\n   \
    \       return a\n        else\n          return b\n        end\n      end\n \
    \   else\n      if a == b then\n        return a\n      else\n        return b\n\
    \      end\n    end\n  else\n    if type(a) == type(b) then\n      if type(a)\
    \ == \"number\" then\n        if type(b) == \"number\" then\n          if math.abs(a\
    \ - b) < 1e-10 then\n            return a\n          else\n            return\
    \ b\n          end\n        elseif math.abs(a - b) < 1e-10 then\n          return\
    \ a\n        else\n          return b\n        end\n      else\n        if math.abs(a\
    \ - b) < 1e-10 then\n          return a\n        else\n          return b\n  \
    \      end\n      end\n    elseif type(a) == \"string\" then\n      if type(b)\
    \ == \"string\" then\n        if math.abs(a - b) < 1e-10 then\n          return\
    \ a\n        else\n          return b\n        end\n      else\n        if math.abs(a\
    \ - b) < 1e-10 then\n          return a\n        else\n          return b\n  \
    \      end\n      end\n    elseif type(a) == \"table\" then\n      if type(b)\
    \ == \"table\" then\n        if compare_one(a.x, b.x) and compare_one(a.y, b.y)\
    \ then\n          return a\n        else\n          return b\n        end\n  \
    \    else\n        if compare_one(a.x, b) and compare_one(a.y, b) then\n     \
    \     return a\n        else\n          return b\n        end\n      end\n   \
    \ else\n      if math.abs(a - b) < 1e-10 then\n        return a\n      else\n\
    \        return b\n      end\n    end\n  end\nend", "  if type(a) == type(b) then\n\
    \    if a == b then return true end\n    if type(a) == \"number\" then\n     \
    \ if math.abs(a - b) < 1e-10 then return true end\n      if math.abs(a - b) <\
    \ 1e-6 then return false end\n      if math.abs(a - b) < 1e-3 then return true\
    \ end\n      if math.abs(a - b) < 1e-2 then return false end\n      if math.abs(a\
    \ - b) < 1e-1 then return true end\n      if math.abs(a - b) < 1e-0 then return\
    \ false end\n      if math.abs(a - b) < 1e-4 then return true end\n      if math.abs(a\
    \ - b) < 1e-5 then return false end\n      if math.abs(a - b) < 1e-6 then return\
    \ true end\n      if math.abs(a - b) < 1e-7 then return false end\n      if math.abs(a\
    \ - b) < 1e-8 then return true end\n      if math.abs(a - b) < 1e-9 then return\
    \ false end\n      if math.abs(a - b) < 1e-10 then return true end\n      if math.abs(a\
    \ - b) < 1e-11 then return false end\n      if math.abs(a - b) < 1e-12 then return\
    \ true end\n      if math.abs(a - b) < 1e-13 then return false end\n      if math.abs(a\
    \ - b) < 1e-14 then return true end\n      if math.abs(a - b) < 1e-15 then return\
    \ false end\n      if math.abs(a - b) < 1e-16 then return true end\n      if math.abs(a\
    \ - b) < 1e-17 then return false end\n      if math.abs(a - b) < 1e-18 then return\
    \ true end\n      if math.abs(a - b) < 1e-19 then return false end\n      if math.abs(a\
    \ - b) < 1e-20 then return true end\n      if math.abs(a - b) < 1e-21 then return\
    \ false end\n      if math.abs(a - b) < 1e-22 then return true end\n      if math.abs(a\
    \ - b) < 1e-23 then return false end\n      if math.abs(a - b) < 1e-24 then return\
    \ true end\n      if math.abs(a - b) < 1e-25 then return false end\n      if math.abs(a\
    \ - b) < 1e-26 then return true end\n      if math.abs(a - b) < 1e-27 then return\
    \ false end\n      if math.abs(a - b) < 1e-28 then return true end\n      if math.abs(a\
    \ - b) < 1e-29 then return false end\n      if math.abs(a - b) < 1e-30 then return\
    \ true end\n      if math.abs(a - b) < 1e-31 then return false end\n      if math.abs(a\
    \ - b) < 1e-32 then return true end\n      if math.abs(a - b) < 1e-33 then return\
    \ false end\n      if math.abs(a - b) < 1e-34 then return true end\n      if math.abs(",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif b > a then\n      return b\n    else\n      return a\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif b > a then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'number' then\n    if compare_one(a.x, b) then\n      return a\n    else\n \
    \     return b\n    end\n  elseif type(a) == 'number' and type(b) == 'table' then\n\
    \    if compare_one(a, b) then\n      return a\n    else\n      return b\n   \
    \ end\n  elseif type(a) == 'string' and type(b) == 'table' then\n    if compare_one(a,\
    \ b) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == type(b) then\n    if a == b then\n      return\
    \ true\n    elseif type(a) == 'number' and type(b) == 'number' then\n      if\
    \ math.abs(a - b) < 1e-10 then\n        return true\n      else\n        return\
    \ false\n      end\n    elseif type(a) == 'string' and type(b) == 'string' then\n\
    \      if a == b then\n        return true\n      elseif a:sub(1, -1) == b:sub(1,\
    \ -1) then\n        return true\n      else\n        return false\n      end\n\
    \    elseif type(a) == 'table' and type(b) == 'table' then\n      if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n        return true\n      else\n     \
    \   return false\n      end\n    elseif type(a) == 'cdata' and type(b) == 'cdata'\
    \ then\n      if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      \
    \  return true\n      else\n        return false\n      end\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x)\
    \ and compare_one(a.y, b.y) then\n      return a\n    else\n      return b\n \
    \   end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    else\n      return\
    \ false\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    if a == b then\n      return true\n    else\n      return false\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if a == b then\n\
    \      return true\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "  if type(a) == type(b) then\n    if type(a) == 'number'\
    \ then\n      if type(b) == 'number' then\n        if b > a then\n          return\
    \ b\n        else\n          return a\n        end\n      elseif type(b) == 'string'\
    \ then\n        if b == '.' then\n          return a\n        else\n         \
    \ return b\n        end\n      else\n        return b\n      end\n    elseif type(a)\
    \ == 'string' then\n      if a == '.' then\n        return b\n      else\n   \
    \     return a\n      end\n    else\n      return b\n    end\n  else\n    return\
    \ b\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n   \
    \ if a == b then return end\n    if a > b then return b end\n    if a < b then\
    \ return a end\n  end\n  if type(a) == 'string' and type(b) == 'string' then\n\
    \    if a == b then return end\n    if a > b then return b end\n    if a < b then\
    \ return a end\n  end\n  if type(a) == 'table' and type(b) == 'table' then\n \
    \   if a == b then return end\n    if a > b then return b end\n    if a < b then\
    \ return a end\n  end\n  return nil\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif a < b then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ a < b then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return compare_one(a.x,\
    \ b.x) or compare_one(a.y, b.y) or compare_one(a.z, b.z)\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then return b end\n    if a == b then return nil end\n  end\n\
    \  if type(a) == 'string' and type(b) == 'string' then\n    if a > b then return\
    \ b end\n    if a == b then return nil end\n  end\n  if type(a) == 'table' and\
    \ type(b) == 'table' then\n    if a.size > b.size then\n      return compare_one(a.size,\
    \ b.size)\n    end\n    if a.size == b.size then\n      for i = 1, a.size do\n\
    \        if compare_one(a[i], b[i]) == nil then return nil end\n      end\n  \
    \    return nil\n    end\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a > b then\n      return a\n    elseif\
    \ b > a then\n      return b\n    else\n      return nil\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return nil\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z, b.z)\n  \
    \  else\n      return nil\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a > b then return b\
    \ end\n    if a == b then return nil end\n  end\n  if type(a) == 'string' and\
    \ type(b) == 'string' then\n    if a > b then return b end\n    if a == b then\
    \ return nil end\n  end\n  if type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return compare_one(a.z,\
    \ b.z)\n    end\n  end\n  return nil\nend", "  if type(a) == type(b) then\n  \
    \  if type(a) == \"number\" then\n      if type(b) == \"number\" then\n      \
    \  if a == b then\n          return true\n        else\n          return false\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    else\n        return false\n      end\n    elseif type(a) == \"string\" then\n\
    \      if type(b) == \"number\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a == b then\n          return true\n        else\n\
    \          return false\n        end\n      else\n        return false\n     \
    \ end\n    else\n      return false\n    end\n  else\n    return false\n  end\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if a == b then\n          return true\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a:find(b) ==\
    \ 1 then\n          return true\n        end\n      end\n    end\n  end\n  return\
    \ false\nend", "  if type(a) ~= type(b) then\n    return false\n  end\n  if type(a)\
    \ == 'string' then\n    a = tonumber(a)\n    b = tonumber(b)\n  end\n  if a ==\
    \ b then\n    return true\n  end\n  if a > b then\n    return true\n  end\n  if\
    \ a < b then\n    return false\n  end\n  return nil\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return true\n    else\n\
    \      if math.abs(a - b) < 1e-6 then\n        return true\n      else\n     \
    \   return false\n      end\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then\n      return true\n    else\n      if\
    \ string.find(a, '.') == -1 and string.find(b, '.') == -1 then\n        return\
    \ true\n      else\n        return false\n      end\n    end\n  else\n    return\
    \ false\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a > b then\n      return a\n    elseif b > a then\n      return b\n  \
    \  else\n      return a\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n  \
    \    return b\n    else\n      return a\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == type(b) then\n    if type(a) == \"number\"\
    \ then\n      if a == b then return end\n      if a < b then return b end\n  \
    \    if a > b then return a end\n    elseif type(a) == \"string\" then\n     \
    \ if a == b then return end\n      if a < b then return b end\n      if a > b\
    \ then return a end\n    elseif type(a) == \"table\" then\n      if compare_one(a[1],\
    \ b[1]) then return end\n      if compare_one(a[2], b[2]) then return end\n  \
    \    if compare_one(a[3], b[3]) then return end\n      if compare_one(a[4], b[4])\
    \ then return end\n      if compare_one(a[5], b[5]) then return end\n      if\
    \ compare_one(a[6], b[6]) then return end\n      if compare_one(a[7], b[7]) then\
    \ return end\n      if compare_one(a[8], b[8]) then return end\n      if compare_one(a[9],\
    \ b[9]) then return end\n      if compare_one(a[10], b[10]) then return end\n\
    \      if compare_one(a[11], b[11]) then return end\n      if compare_one(a[12],\
    \ b[12]) then return end\n      if compare_one(a[13], b[13]) then return end\n\
    \      if compare_one(a[14], b[14]) then return end\n      if compare_one(a[15],\
    \ b[15]) then return end\n      if compare_one(a[16], b[16]) then return end\n\
    \      if compare_one(a[17], b[17]) then return end\n      if compare_one(a[18],\
    \ b[18]) then return end\n      if compare_one(a[19], b[19]) then return end\n\
    \      if compare_one(a[20], b[20]) then return end\n      if compare_one(a[21],\
    \ b[21]) then return end\n      if compare_one(a[22], b[22]) then return end\n\
    \      if compare_one(a[23], b[23]) then return end\n      if compare_one(a[24],\
    \ b[24]) then return end\n      if compare_one(a[25], b[25]) then return end\n\
    \      if compare_one(a[26], b[26]) then return end\n      if compare_one(a[27],\
    \ b[27]) then return end\n      if compare_one(a[28], b[28]) then return end\n\
    \      if compare_one(a[29], b[29]) then return end\n      if compare_one(a[30],\
    \ b[30]) then return end\n      if ", "  if type(a) ~= type(b) then return false\
    \ end\n  if type(a) == 'number' then\n    if a == b then return true end\n   \
    \ if a < b then return true end\n    return false\n  elseif type(a) == 'string'\
    \ then\n    if a == b then return true end\n    if a < b then return true end\n\
    \    return false\n  elseif type(a) == 'table' then\n    if a.__eq(b) then return\
    \ true end\n    if a < b then return true end\n    return false\n  else\n    return\
    \ false\n  end\nend", "  if type(a) == type(b) then\n    if type(a) == \"number\"\
    \ then\n      if type(b) == \"number\" then\n        if a == b then\n        \
    \  return true\n        end\n      elseif type(b) == \"string\" then\n       \
    \ if a == b then\n          return true\n        end\n      end\n    end\n  end\n\
    \  return false\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10 then\n\
    \      return true\n    end\n  end\n  if type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return true\n    elseif a:len() > b:len() then\n\
    \      return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:len() > b:len() then\n      return true\n    end\n  end\n  if\
    \ type(a) == 'table' and type(b) == 'number' then\n    if a:len() > b then\n \
    \     return true\n    end\n  end\n  if type(a) == 'number' and type(b) == 'table'\
    \ then\n    if a > b then\n      return true\n    end\n  end\n  if type(a) ==\
    \ 'string' and type(b) == 'table' then\n    if a:len() > b then\n      return\
    \ true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'string' then\n\
    \    if a:len() > b then\n      return true\n    end\n  end\n  if type(a) == 'number'\
    \ and type(b) == 'string' then\n    if a > b then\n      return true\n    end\n\
    \  end\n  if type(a) == 'table' and type(b) == 'table' then\n    if a:len() >\
    \ b:len() then\n      return true\n    end\n  end\n  return false\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n     \
    \ return a\n    elseif math.abs(a) < math.abs(b) then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    elseif a:sub(1, 1) == b:sub(1,\
    \ 1) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if a:key() == b:key() then\n   \
    \   return compare_one(a:value(), b:value())\n    else\n      return nil\n   \
    \ end\n  elseif type(a) == 'table' and type(b) == 'number' then\n    return compare_one(a:value(),\
    \ b)\n  elseif type(a) == 'number' and type(b) == 'table' then\n    return compare_one(a,\
    \ b:value())\n  elseif type(a) == 'string' and type(b) == 'table' then\n    return\
    \ compare_one(a, table.totable(b))\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == type(b) then\n    if type(a) == 'number' then\n      if type(b) ==\
    \ 'number' then\n        if math.abs(a - b) < 1e-10 then\n          return true\n\
    \        end\n      elseif type(b) == 'string' then\n        if a == b then\n\
    \          return true\n        end\n      end\n    end\n  end\n  return false\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if a == b then\n          return true\n\
    \        else\n          return false\n        end\n      elseif type(b) == \"\
    string\" then\n        if a:find(b) == 1 then\n          return true\n       \
    \ else\n          return false\n        end\n      else\n        return false\n\
    \      end\n    elseif type(a) == \"string\" then\n      if b:find(a) == 1 then\n\
    \        return true\n      else\n        return false\n      end\n    else\n\
    \      return false\n    end\n  else\n    return false\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return true\n\
    \    else\n      return false\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then\n      return true\n    else\n      return\
    \ false\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n  \
    \  if a == b then\n      return true\n    else\n      return false\n    end\n\
    \  else\n    return false\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a == b then\n      return true\n    elseif math.abs(a\
    \ - b) < 1e-14 then\n      return true\n    end\n  end\n  if type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a == b then\n      return true\n    elseif\
    \ a:sub(1, -1) == b:sub(1, -1) then\n      return true\n    end\n  end\n  return\
    \ false\nend", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n\
    \      if type(b) == \"number\" then\n        if a > b then\n          return\
    \ a\n        else\n          return b\n        end\n      elseif type(b) == \"\
    string\" then\n        if a > b then\n          return b\n        else\n     \
    \     return a\n        end\n      else\n        return nil\n      end\n    elseif\
    \ type(a) == \"string\" then\n      if type(b) == \"number\" then\n        if\
    \ a > b then\n          return b\n        else\n          return a\n        end\n\
    \      elseif type(b) == \"string\" then\n        if a > b then\n          return\
    \ a\n        else\n          return b\n        end\n      else\n        return\
    \ nil\n      end\n    elseif type(a) == \"table\" then\n      if type(b) == \"\
    table\" then\n        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n\
    \          return a\n        else\n          return b\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if compare_one(a.x, b) then\n          return\
    \ a\n        else\n          return b\n        end\n      else\n        return\
    \ nil\n      end\n    elseif type(b) == \"table\" then\n      if type(a) == \"\
    string\" then\n        if compare_one(a, b.x) then\n          return b\n     \
    \   else\n          return a\n        end\n      elseif type(a) == \"table\" then\n\
    \        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n          return\
    \ a\n        else\n          return b\n        end\n      else\n        return\
    \ nil\n      end\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) ~= type(b) then return false end\n  if type(a) ==\
    \ 'number' then\n    if a < b then return true end\n    if a == b then return\
    \ false end\n  end\n  if type(a) == 'string' then\n    if a:find(b) == 1 then\
    \ return true end\n    if a:find(b) == -1 then return false end\n  end\n  return\
    \ nil\nend", "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number'\
    \ then\n    if a == b then return true end\n    if a < b then return true end\n\
    \    if a > b then return false end\n  elseif type(a) == 'string' then\n    if\
    \ a == b then return true end\n    if a < b then return false end\n    if a >\
    \ b then return true end\n  elseif type(a) == 'table' then\n    if compare_one(a[1],\
    \ b[1]) then return true end\n    if compare_one(a[2], b[2]) then return true\
    \ end\n    if compare_one(a[3], b[3]) then return true end\n    if compare_one(a[4],\
    \ b[4]) then return true end\n    if compare_one(a[5], b[5]) then return true\
    \ end\n    if compare_one(a[6], b[6]) then return true end\n    if compare_one(a[7],\
    \ b[7]) then return true end\n    if compare_one(a[8], b[8]) then return true\
    \ end\n    if compare_one(a[9], b[9]) then return true end\n    if compare_one(a[10],\
    \ b[10]) then return true end\n    if compare_one(a[11], b[11]) then return true\
    \ end\n    if compare_one(a[12], b[12]) then return true end\n    if compare_one(a[13],\
    \ b[13]) then return true end\n    if compare_one(a[14], b[14]) then return true\
    \ end\n    if compare_one(a[15], b[15]) then return true end\n    if compare_one(a[16],\
    \ b[16]) then return true end\n    if compare_one(a[17], b[17]) then return true\
    \ end\n    if compare_one(a[18], b[18]) then return true end\n    if compare_one(a[19],\
    \ b[19]) then return true end\n    if compare_one(a[20], b[20]) then return true\
    \ end\n    if compare_one(a[21], b[21]) then return true end\n    if compare_one(a[22],\
    \ b[22]) then return true end\n    if compare_one(a[23], b[23]) then return true\
    \ end\n    if compare_one(a[24], b[24]) then return true end\n    if compare_one(a[25],\
    \ b[25]) then return true end\n    if compare_one(a[26], b[26]) then return true\
    \ end\n    if compare_one(a[27], b[27]) then return true end\n    if compare_one(a[28],\
    \ b[", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n    \
    \  if type(b) == \"number\" then\n        if a == b then\n          return true\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return true\n        end\n      end\n    end\n  end\n  return false\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if a == b then\n          return true\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return true\n        end\n      end\n    end\n  end\n  return false\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if math.abs(a - b) < 1e-10 then\n   \
    \       return true\n        end\n      elseif type(b) == \"string\" then\n  \
    \      if a:find(b) then\n          return true\n        end\n      end\n    end\n\
    \  end\n  return false\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a > b then\n      return a\n    elseif b > a then\n      return\
    \ b\n    else\n      return nil\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a > b then\n      return a\n    elseif b > a then\n\
    \      return b\n    else\n      return nil\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return compare_one(a.z, b.z)\n    else\n      return nil\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then return\
    \ nil end\n  if type(a) == 'number' then\n    if a < b then return b end\n   \
    \ if a > b then return a end\n  elseif type(a) == 'string' then\n    if a:match('%f')\
    \ then\n      if a:match('%f') ~= b:match('%f') then return nil end\n    elseif\
    \ a:match('%c') then\n      if a:match('%c') ~= b:match('%c') then return nil\
    \ end\n    elseif a:match('%d') then\n      if a:match('%d') ~= b:match('%d')\
    \ then return nil end\n    elseif a:match('%x') then\n      if a:match('%x') ~=\
    \ b:match('%x') then return nil end\n    elseif a:match('%e') then\n      if a:match('%e')\
    \ ~= b:match('%e') then return nil end\n    elseif a:match('%g') then\n      if\
    \ a:match('%g') ~= b:match('%g') then return nil end\n    elseif a:match('%p')\
    \ then\n      if a:match('%p') ~= b:match('%p') then return nil end\n    elseif\
    \ a:match('%s') then\n      if a:match('%s') ~= b:match('%s') then return nil\
    \ end\n    elseif a:match('%t') then\n      if a:match('%t') ~= b:match('%t')\
    \ then return nil end\n    elseif a:match('%n') then\n      if a:match('%n') ~=\
    \ b:match('%n') then return nil end\n    elseif a:match('%u') then\n      if a:match('%u')\
    \ ~= b:match('%u') then return nil end\n    elseif a:match('%v') then\n      if\
    \ a:match('%v') ~= b:match('%v') then return nil end\n    elseif a:match('%w')\
    \ then\n      if a:match('%w') ~= b:match('%w') then return nil end\n    elseif\
    \ a:match('%x') then\n      if a:match('%x') ~= b:match('%x') then return nil\
    \ end\n    elseif a:match('%y') then\n      if a:match('%y') ~= b:match('%y')\
    \ then return nil end\n    elseif a:match('%", "  if type(a) == type(b) then\n\
    \    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n    \
    \    if a == b then\n          return a\n        end\n      elseif type(b) ==\
    \ \"string\" then\n        if a == b then\n          return a\n        end\n \
    \     end\n    end\n  end\n  return nil\nend", "  if type(a) == type(b) then\n\
    \    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n    \
    \    if a == b then return end\n      elseif type(b) == \"string\" then\n    \
    \    if a:find(b) == 1 then return end\n      else\n        return nil\n     \
    \ end\n    elseif type(a) == \"string\" then\n      if b:find(a) == 1 then return\
    \ end\n    else\n      return nil\n    end\n  end\n  return a\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif a < b then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n      return\
    \ a\n    elseif a < b then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'table' and type(b) == 'number' then\n    if\
    \ compare_one(a.x, b) then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'number' and type(b) == 'table' then\n    if compare_one(a,\
    \ b) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'table' then\n    if compare_one(a, b) then\n   \
    \   return a\n    else\n      return b\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n     \
    \ if type(b) == \"number\" then\n        if a == b then\n          return true\n\
    \        else\n          return false\n        end\n      elseif type(b) == \"\
    string\" then\n        if a == b then\n          return true\n        else\n \
    \         return false\n        end\n      elseif type(b) == \"table\" then\n\
    \        if a == b then\n          return true\n        else\n          return\
    \ false\n        end\n      elseif type(b) == \"function\" then\n        if a\
    \ == b then\n          return true\n        else\n          return false\n   \
    \     end\n      elseif type(b) == \"boolean\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    elseif type(b) == \"table\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"function\" then\n        if a == b then\n          return true\n      \
    \  else\n          return false\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then\n          return true\n        else\n        \
    \  return false\n        end\n      elseif type(b) == \"number\" then\n      \
    \  if a == b then\n          return true\n        else\n          return false\n\
    \        end\n      elseif type(b) == \"boolean\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    elseif type(b) == \"table\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"function\" then\n        if a == b then\n          return true\n      \
    \  else\n          return false\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then\n          return true\n        else\n        \
    \  return false\n        end\n      elseif type(b) == \"number\" then\n      \
    \  if a == b then\n          return true\n        else\n          return false\n\
    \        end\n      elseif type(b) == \"boolean\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    elseif type(b) == \"table\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"function\" then\n        if a == b then\n          return true\n      \
    \  else\n          return false\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then\n          return true\n        else\n        \
    \  return false\n        end\n      elseif type(b) == \"number\" then\n      \
    \  if a == b then\n          return true\n        else\n          return false\n\
    \        end\n      elseif type(b) == \"boolean\" then\n        if a == b then\n\
    \          return true\n        else\n          return false", "  if type(a) ==\
    \ 'number' and type(b) == 'number' then\n    if a == b then\n      return true\n\
    \    elseif math.abs(a - b) < 1e-10 then\n      return true\n    else\n      return\
    \ false\n    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n\
    \    if a == b then\n      return true\n    elseif a:len() < b:len() then\n  \
    \    return true\n    else\n      return false\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'table' then\n    if a:len() < b:len() then\n      return true\n\
    \    else\n      return false\n    end\n  elseif type(a) == 'table' and type(b)\
    \ == 'number' then\n    if a:len() < b then\n      return true\n    else\n   \
    \   return false\n    end\n  elseif type(a) == 'number' and type(b) == 'table'\
    \ then\n    if a < b then\n      return true\n    else\n      return false\n \
    \   end\n  elseif type(a) == 'string' and type(b) == 'table' then\n    if a:len()\
    \ < b:len() then\n      return true\n    else\n      return false\n    end\n \
    \ else\n    return false\n  end\nend", "  if type(a) == type(b) then\n    if type(a)\
    \ == \"number\" then\n      if type(b) == \"number\" then\n        if a == b then\
    \ return end\n      elseif type(b) == \"string\" then\n        if a == b then\
    \ return end\n      elseif type(b) == \"table\" then\n        if a == b then return\
    \ end\n      else\n        return nil\n      end\n    elseif type(a) == \"string\"\
    \ then\n      if type(b) == \"number\" then\n        if a == b then return end\n\
    \      elseif type(b) == \"string\" then\n        if a == b then return end\n\
    \      elseif type(b) == \"table\" then\n        if a == b then return end\n \
    \     else\n        return nil\n      end\n    elseif type(a) == \"table\" then\n\
    \      if type(b) == \"number\" then\n        if a == b then return end\n    \
    \  elseif type(b) == \"string\" then\n        if a == b then return end\n    \
    \  elseif type(b) == \"table\" then\n        if a == b then return end\n     \
    \ else\n        return nil\n      end\n    else\n      return nil\n    end\n \
    \ else\n    return nil\n  end\nend", "  if type(a) ~= type(b) then\n    return\
    \ false\n  end\n  if type(a) == 'number' then\n    if a == b then\n      return\
    \ true\n    end\n    if a < b then\n      return true\n    end\n    if a > b then\n\
    \      return false\n    end\n  end\n  if type(a) == 'string' then\n    if a ==\
    \ b then\n      return true\n    end\n    if a < b then\n      return false\n\
    \    end\n    if a > b then\n      return true\n    end\n  end\n  return false\n\
    end", "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number'\
    \ then\n    if type(b) == 'number' then\n      if a == b then return true end\n\
    \    end\n  else\n    if type(b) == 'number' then\n      if a ~= b then return\
    \ false end\n    end\n  end\n  return true\nend", "  if type(a) ~= type(b) then\
    \ return false end\n  if type(a) == 'number' then\n    if a == b then return true\
    \ end\n    if a < b then return true end\n    return false\n  end\n  if type(a)\
    \ == 'string' then\n    if a:find(b) == 1 then return true end\n    return false\n\
    \  end\n  if type(a) == 'table' then\n    if a[1] == b then return true end\n\
    \    return false\n  end\n  return false\nend", "  if type(a) ~= type(b) then\n\
    \    return nil\n  end\n  if type(a) == 'number' then\n    return a > b\n  elseif\
    \ type(a) == 'string' then\n    return a:find(b) > -1\n  else\n    return nil\n\
    \  end\nend", "  if type(a) ~= type(b) then\n    return false\n  end\n  if type(a)\
    \ == 'number' then\n    if a == b then\n      return true\n    end\n    if a <\
    \ b then\n      return true\n    end\n    if a > b then\n      return false\n\
    \    end\n  end\n  if type(a) == 'string' then\n    if a:find(b) ~= nil then\n\
    \      return true\n    end\n    if a:find(b) == nil then\n      return false\n\
    \    end\n  end\n  return false\nend", "  if type(a) == type(b) then\n    if type(a)\
    \ == \"number\" then\n      if type(b) == \"number\" then\n        if a == b then\n\
    \          return a\n        end\n      elseif type(b) == \"string\" then\n  \
    \      if a == b then\n          return a\n        end\n      end\n    end\n \
    \ end\n  return nil\nend", "  if type(a) ~= type(b) then\n    return false\n \
    \ end\n  if type(a) == 'number' then\n    if a == b then\n      return true\n\
    \    end\n    if type(a) == 'string' then\n      local a_real = tonumber(a)\n\
    \      local b_real = tonumber(b)\n      if a_real ~= b_real then\n        return\
    \ false\n      end\n    end\n  end\n  return true\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return true\n    end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return true\n    end\n  end\n  if type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:size() == b:size() then\n      for i = 1, a:size() do\n     \
    \   if compare_one(a[i], b[i]) then\n          return true\n        end\n    \
    \  end\n    end\n  end\n  return false\nend", "  if type(a) == type(b) then\n\
    \    if type(a) == 'number' and type(b) == 'number' then\n      if a == b then\n\
    \        return true\n      else\n        return false\n      end\n    elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n      if a == b then\n   \
    \     return true\n      else\n        return false\n      end\n    elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n      if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n        return true\n      else\n        return false\n      end\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\nend",
  "  if type(a) == 'number' and type(b) == 'number' then\n    if a > b then\n    \
    \  return a\n    elseif a < b then\n      return b\n    else\n      return a\n\
    \    end\n  elseif type(a) == 'string' and type(b) == 'string' then\n    if a\
    \ > b then\n      return a\n    elseif a < b then\n      return b\n    else\n\
    \      return a\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n\
    \    if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n      return a\n\
    \    else\n      return b\n    end\n  else\n    return nil\n  end\nend", "  if\
    \ type(a) == 'number' and type(b) == 'number' then\n    if a == b then\n     \
    \ return true\n    elseif math.abs(a) > math.abs(b) then\n      return true\n\
    \    else\n      return false\n    end\n  elseif type(a) == 'string' and type(b)\
    \ == 'string' then\n    if a == b then\n      return true\n    elseif a:sub(1,\
    \ 1) == '-' and b:sub(1, 1) == '-' then\n      return true\n    else\n      return\
    \ false\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n  \
    \  if a:len() == b:len() then\n      for i = 1, a:len() do\n        if compare_one(a[i],\
    \ b[i]) then\n          return true\n        end\n      end\n      return false\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\nend",
  "  if type(a) ~= type(b) then\n    return nil\n  elseif type(a) == \"string\" then\n\
    \    return compare_one(a:sub(1,-1), b:sub(1,-1))\n  elseif type(a) == \"number\"\
    \ then\n    return compare_one(a:real(), b:real())\n  elseif type(a) == \"table\"\
    \ then\n    return compare_one(a:max(), b:max())\n  else\n    return nil\n  end\n\
    end", "  if type(a) ~= type(b) then\n    return false\n  end\n  if type(a) ==\
    \ 'number' then\n    if a > b then\n      return true\n    elseif b > a then\n\
    \      return false\n    else\n      return compare_one(string(a), string(b))\n\
    \    end\n  elseif type(a) == 'string' then\n    if a > b then\n      return true\n\
    \    elseif b > a then\n      return false\n    else\n      return compare_one(a,\
    \ b)\n    end\n  else\n    return false\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then return end\n    if a < b then\
    \ return b end\n    return a\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then return end\n    if a < b then return b end\n    return\
    \ a\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if a == b then\
    \ return end\n    if a < b then return b end\n    return a\n  end\nend", "  if\
    \ type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then\n          return true\n        end\n\
    \      elseif type(b) == \"string\" then\n        if a:find(b) == 1 then\n   \
    \       return true\n        end\n      end\n    end\n  end\n  return false\n\
    end", "  if type(a) == 'number' and type(b) == 'number' then\n    if a == b then\
    \ return end\n    if a > b then return b end\n    if a < b then return a end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'string' then\n    if a == b then\
    \ return end\n    if a > b then return b end\n    if a < b then return a end\n\
    \  end\n  if type(a) == 'table' and type(b) == 'table' then\n    if a == b then\
    \ return end\n    if a > b then return b end\n    if a < b then return a end\n\
    \  end\n  if type(a) == 'string' and type(b) == 'number' then\n    if tonumber(a)\
    \ > tonumber(b) then return b end\n    if tonumber(a) < tonumber(b) then return\
    \ a end\n  end\n  if type(a) == 'number' and type(b) == 'string' then\n    if\
    \ tonumber(a) > tonumber(b) then return b end\n    if tonumber(a) < tonumber(b)\
    \ then return a end\n  end\n  if type(a) == 'table' and type(b) == 'string' then\n\
    \    if tonumber(a) > tonumber(b) then return b end\n    if tonumber(a) < tonumber(b)\
    \ then return a end\n  end\n  if type(a) == 'string' and type(b) == 'table' then\n\
    \    if tonumber(a) > tonumber(b) then return b end\n    if tonumber(a) < tonumber(b)\
    \ then return a end\n  end\n  if type(a) == 'table' and type(b) == 'table' then\n\
    \    if a == b then return end\n    if a > b then return b end\n    if a < b then\
    \ return a end\n  end\n  return nil\nend", "  if type(a) ~= type(b) then return\
    \ false end\n  if type(a) == 'string' then\n    if a:find(',') ~= nil then a =\
    \ a:find(',') end\n    if a:find('.') ~= nil then a = a:find('.') end\n  end\n\
    \  if type(a) == 'number' then\n    if a < b then return true end\n    if a >\
    \ b then return false end\n  end\n  return false\nend", "  if type(a) == type(b)\
    \ then\n    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n\
    \        if a == b then\n          return true\n        else\n          return\
    \ false\n        end\n      elseif type(b) == \"string\" then\n        if a ==\
    \ b then\n          return true\n        else\n          return false\n      \
    \  end\n      else\n        return false\n      end\n    elseif type(a) == \"\
    string\" then\n      if type(b) == \"number\" then\n        if a == b then\n \
    \         return true\n        else\n          return false\n        end\n   \
    \   elseif type(b) == \"string\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      else\n      \
    \  return false\n      end\n    elseif type(a) == \"table\" then\n      if type(b)\
    \ == \"table\" then\n        if compare_one(a.x, b.x) and compare_one(a.y, b.y)\
    \ then\n          return true\n        else\n          return false\n        end\n\
    \      elseif type(b) == \"string\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      elseif type(b)\
    \ == \"number\" then\n        if a == b then\n          return true\n        else\n\
    \          return false\n        end\n      else\n        return false\n     \
    \ end\n    elseif type(a) == \"function\" then\n      if type(b) == \"function\"\
    \ then\n        if compare_one(a.x, b.x) and compare_one(a.y, b.y) then\n    \
    \      return true\n        else\n          return false\n        end\n      elseif\
    \ type(b) == \"table\" then\n        if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n          return true\n        else\n          return false\n   \
    \     end\n      elseif type(b) == \"string\" then\n        if a == b then\n \
    \         return true\n        else\n          return false\n        end\n   \
    \   elseif type(b) == \"number\" then\n        if a == b then\n          return\
    \ true\n        else\n          return false\n        end\n      else\n      \
    \  return false\n      end\n    elseif type(a) == \"boolean\" then\n      if type(b)\
    \ == \"boolean\" then\n        if a == b then\n          return true\n       \
    \ else\n          return false\n        end\n      elseif type(b) == \"table\"\
    \ then\n        if a == b then\n          return true\n        else\n        \
    \  return false\n        end\n      elseif type(b) == \"string\" then\n      \
    \  if a == b then\n          return true\n        else\n          return false\n\
    \        end\n      elseif type(b) == \"number\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    else\n        return false\n      end\n    elseif type(a) == \"cdata\" then\n\
    \      if type(b) == \"cdata", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-15\
    \ then\n      return true\n    else\n      return false\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return true\n    else\n   \
    \   return false\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:size() == b:size() then\n      for i = 1, a:size() do\n     \
    \   if compare_one(a[i], b[i]) then\n          return true\n        end\n    \
    \  end\n      return false\n    else\n      return false\n    end\n  else\n  \
    \  return false\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10\
    \ then\n      return true\n    else\n      return false\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:len() > b:len() then\n      return true\n    else\n      return\
    \ false\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n  \
    \  if a == b then\n      return true\n    elseif a:len() > b:len() then\n    \
    \  return true\n    else\n      return false\n    end\n  elseif type(a) == 'table'\
    \ and type(b) == 'number' then\n    if a:len() > b then\n      return true\n \
    \   else\n      return false\n    end\n  elseif type(a) == 'number' and type(b)\
    \ == 'table' then\n    if a == b then\n      return true\n    elseif a:len() >\
    \ b then\n      return true\n    else\n      return false\n    end\n  else\n \
    \   return false\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-15\
    \ then\n      return true\n    else\n      return false\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return true\n    else\n   \
    \   return false\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:all == b:all then\n      return true\n    else\n      return\
    \ false\n    end\n  else\n    return false\n  end\nend", "  if type(a) == type(b)\
    \ then\n    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n\
    \        if a == b then\n          return true\n        end\n      elseif type(b)\
    \ == \"string\" then\n        if a:find(b) == 1 then\n          return true\n\
    \        end\n      end\n    end\n  end\n  return false\nend", "  if type(a) ==\
    \ type(b) then\n    if type(a) == \"number\" then\n      if type(b) == \"number\"\
    \ then\n        if a == b then\n          return true\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then\n          return true\n\
    \        end\n      end\n    end\n  end\n  return false\nend", "  if type(a) ==\
    \ type(b) then\n    if type(a) == \"number\" then\n      if type(b) == \"number\"\
    \ then\n        if a == b then\n          return true\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then\n          return true\n\
    \        end\n      end\n    end\n  end\n  return false\nend", "  if type(a) ==\
    \ type(b) then\n    if type(a) == \"number\" then\n      if type(b) == \"number\"\
    \ then\n        if a == b then\n          return true\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a:find(b) == 1 then\n          return\
    \ true\n        end\n      end\n    end\n  end\n  return false\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a > b then\n      return a\n\
    \    elseif b > a then\n      return b\n    else\n      return a\n    end\n  elseif\
    \ type(a) == 'string' and type(b) == 'string' then\n    if a > b then\n      return\
    \ a\n    elseif b > a then\n      return b\n    else\n      return a\n    end\n\
    \  elseif type(a) == 'table' and type(b) == 'table' then\n    if compare_one(a.x,\
    \ b.x) and compare_one(a.y, b.y) then\n      return a\n    else\n      return\
    \ b\n    end\n  elseif type(a) == 'table' and type(b) == 'number' then\n    if\
    \ compare_one(a.x, b) then\n      return a\n    else\n      return b\n    end\n\
    \  elseif type(a) == 'number' and type(b) == 'table' then\n    if compare_one(a,\
    \ b) then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'table' then\n    if compare_one(a, b) then\n   \
    \   return a\n    else\n      return b\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number'\
    \ then\n    if a == b then return true end\n    if a < b then return true end\n\
    \    if a > b then return false end\n  elseif type(a) == 'string' then\n    if\
    \ a == b then return true end\n    if a < b then return false end\n    if a >\
    \ b then return true end\n  elseif type(a) == 'table' then\n    if a[1] == b[1]\
    \ then\n      if a[2] ~= b[2] then return false end\n      if a[3] ~= b[3] then\
    \ return false end\n      if a[4] ~= b[4] then return false end\n      if a[5]\
    \ ~= b[5] then return false end\n      if a[6] ~= b[6] then return false end\n\
    \      if a[7] ~= b[7] then return false end\n      if a[8] ~= b[8] then return\
    \ false end\n      if a[9] ~= b[9] then return false end\n      if a[10] ~= b[10]\
    \ then return false end\n      if a[11] ~= b[11] then return false end\n     \
    \ if a[12] ~= b[12] then return false end\n      if a[13] ~= b[13] then return\
    \ false end\n      if a[14] ~= b[14] then return false end\n      if a[15] ~=\
    \ b[15] then return false end\n      if a[16] ~= b[16] then return false end\n\
    \      if a[17] ~= b[17] then return false end\n      if a[18] ~= b[18] then return\
    \ false end\n      if a[19] ~= b[19] then return false end\n      if a[20] ~=\
    \ b[20] then return false end\n      if a[21] ~= b[21] then return false end\n\
    \      if a[22] ~= b[22] then return false end\n      if a[23] ~= b[23] then return\
    \ false end\n      if a[24] ~= b[24] then return false end\n      if a[25] ~=\
    \ b[25] then return false end\n      if a[26] ~= b[26] then return false end\n\
    \      if a[27] ~= b[27] then return false end\n      if a[28] ~= b[28] then return\
    \ false end\n      if a[29] ~= b[29] then return false end\n      if a[30] ~",
  "  if type(a) == type(b) then\n    if type(a) == \"number\" then\n      if type(b)\
    \ == \"number\" then\n        if a == b then\n          return nil\n        else\n\
    \          return a\n        end\n      elseif type(b) == \"string\" then\n  \
    \      if a == b then\n          return nil\n        else\n          return b\n\
    \        end\n      else\n        return nil\n      end\n    elseif type(a) ==\
    \ \"string\" then\n      if type(b) == \"number\" then\n        if a == b then\n\
    \          return nil\n        else\n          return b\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a == b then\n          return nil\n \
    \       else\n          return a\n        end\n      else\n        return nil\n\
    \      end\n    else\n      return nil\n    end\n  else\n    return nil\n  end\n\
    end", "  if type(a) == 'number' then\n    if type(b) == 'number' then\n      if\
    \ a > b then\n        return a\n      elseif b > a then\n        return b\n  \
    \    else\n        return nil\n      end\n    elseif type(b) == 'string' then\n\
    \      if a == b then\n        return nil\n      else\n        return b\n    \
    \  end\n    else\n      return nil\n    end\n  elseif type(a) == 'string' then\n\
    \    if type(b) == 'number' then\n      if a > b then\n        return b\n    \
    \  elseif b > a then\n        return a\n      else\n        return nil\n     \
    \ end\n    elseif type(b) == 'string' then\n      if a == b then\n        return\
    \ nil\n      else\n        return a\n      end\n    else\n      return nil\n \
    \   end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number' and type(b)\
    \ == 'number' then\n    if a > b then\n      return a\n    elseif a < b then\n\
    \      return b\n    else\n      return a\n    end\n  elseif type(a) == 'string'\
    \ and type(b) == 'string' then\n    if a > b then\n      return a\n    elseif\
    \ a < b then\n      return b\n    else\n      return a\n    end\n  elseif type(a)\
    \ == 'table' and type(b) == 'table' then\n    if compare_one(a.x, b.x) and compare_one(a.y,\
    \ b.y) then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return true\n    else\n      return false\n    end\n\
    \  elseif type(a) == 'string' and type(b) == 'string' then\n    if a == b then\n\
    \      return true\n    else\n      return false\n    end\n  elseif type(a) ==\
    \ 'table' and type(b) == 'table' then\n    if a == b then\n      return true\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\nend",
  "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number' then\n\
    \    if a == b then return true end\n    if a < b then return true end\n    return\
    \ false\n  elseif type(a) == 'string' then\n    if a == b then return true end\n\
    \    if a < b then return true end\n    return false\n  elseif type(a) == 'table'\
    \ then\n    if a[1] == b[1] then return compare_one(a[2], b[2]) end\n    if a[2]\
    \ < b[2] then return true end\n    return false\n  else\n    return false\n  end\n\
    end", "  if type(a) ~= type(b) then\n    return false\n  end\n  if type(a) ==\
    \ 'number' then\n    if a == b then\n      return true\n    end\n    if type(a)\
    \ == 'string' then\n      local a_real = tonumber(a)\n      local b_real = tonumber(b)\n\
    \      if a_real ~= b_real then\n        return false\n      end\n    end\n  end\n\
    \  return true\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10 then\n\
    \      return true\n    else\n      return false\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, -1) == b:sub(1, -1) then\n      return true\n    else\n \
    \     return false\n    end\n  else\n    return false\n  end\nend", "  if type(a)\
    \ == 'number' and type(b) == 'number' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'string' and type(b) ==\
    \ 'string' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n    if a ==\
    \ b then\n      return a\n    else\n      return b\n    end\n  else\n    return\
    \ nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n \
    \   if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10 then\n\
    \      return true\n    else\n      return false\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return true\n    else\n   \
    \   return false\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:size() == b:size() then\n      for i = 1, a:size() do\n     \
    \   if compare_one(a[i], b[i]) then\n          return true\n        end\n    \
    \  end\n      return false\n    else\n      return false\n    end\n  else\n  \
    \  return false\n  end\nend", "  if type(a) == type(b) then\n    if type(a) ==\
    \ \"number\" then\n      if type(b) == \"number\" then\n        if b > a then\n\
    \          return b\n        else\n          return a\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if b == a then\n          return b\n   \
    \     else\n          return a\n        end\n      end\n    end\n  end\nend",
  "  if type(a) ~= type(b) then return false end\n  if type(a) == 'number' then\n\
    \    if a == b then return true end\n    if a < b then return true end\n    if\
    \ a > b then return false end\n  elseif type(a) == 'string' then\n    if a ==\
    \ b then return true end\n    if a < b then return false end\n    if a > b then\
    \ return true end\n  elseif type(a) == 'table' then\n    if a == b then return\
    \ true end\n    if a < b then return false end\n    if a > b then return true\
    \ end\n  else\n    return false\n  end\nend", "  if type(a) == type(b) then\n\
    \    if type(a) == 'number' then\n      if type(b) == 'number' then\n        if\
    \ a == b then\n          return true\n        end\n      elseif type(b) == 'string'\
    \ then\n        if a == b then\n          return true\n        end\n      end\n\
    \    end\n  end\n  return false\nend", "  if type(a) == type(b) then\n    if type(a)\
    \ == \"number\" then\n      if type(b) == \"number\" then\n        if a == b then\n\
    \          return true\n        else\n          return false\n        end\n  \
    \    elseif type(b) == \"string\" then\n        if a:find(b) == 1 then\n     \
    \     return true\n        else\n          return false\n        end\n      else\n\
    \        return false\n      end\n    elseif type(a) == \"string\" then\n    \
    \  if b:find(a) == 1 then\n        return true\n      else\n        return false\n\
    \      end\n    else\n      return false\n    end\n  else\n    return false\n\
    \  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n    if a\
    \ == b then\n      return a\n    else\n      return b\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return a\n\
    \    else\n      return b\n    end\n  elseif type(a) == 'table' and type(b) ==\
    \ 'table' then\n    if a == b then\n      return a\n    else\n      return b\n\
    \    end\n  else\n    return nil\n  end\nend", "  if type(a) == type(b) then\n\
    \    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n    \
    \    if a == b then\n          return a\n        else\n          return b\n  \
    \      end\n      elseif type(b) == \"string\" then\n        if a == b then\n\
    \          return a\n        else\n          return b\n        end\n      else\n\
    \        return nil\n      end\n    elseif type(a) == \"string\" then\n      if\
    \ type(b) == \"number\" then\n        if a == b then\n          return a\n   \
    \     else\n          return b\n        end\n      elseif type(b) == \"string\"\
    \ then\n        if a == b then\n          return a\n        else\n          return\
    \ b\n        end\n      else\n        return nil\n      end\n    else\n      return\
    \ nil\n    end\n  else\n    return nil\n  end\nend", "  if type(a) == 'number'\
    \ and type(b) == 'number' then\n    if a == b then\n      return a\n    else\n\
    \      return b\n    end\n  elseif type(a) == 'string' and type(b) == 'string'\
    \ then\n    if a == b then\n      return a\n    else\n      return b\n    end\n\
    \  else\n    return nil\n  end\nend", "  if type(a) == 'number' then\n    if type(b)\
    \ == 'number' then\n      if a > b then\n        return a\n      elseif b > a\
    \ then\n        return b\n      else\n        return nil\n      end\n    elseif\
    \ type(b) == 'string' then\n      if a > b then\n        return b\n      elseif\
    \ b > a then\n        return a\n      else\n        return nil\n      end\n  \
    \  elseif type(b) == 'table' then\n      if compare_one(a[1], b[1]) then\n   \
    \     return compare_one(a[2], b[2])\n      else\n        return nil\n      end\n\
    \    else\n      return nil\n    end\n  elseif type(a) == 'string' then\n    if\
    \ type(b) == 'number' then\n      if a > b then\n        return b\n      elseif\
    \ b > a then\n        return a\n      else\n        return nil\n      end\n  \
    \  elseif type(b) == 'string' then\n      if a > b then\n        return a\n  \
    \    elseif b > a then\n        return b\n      else\n        return nil\n   \
    \   end\n    elseif type(b) == 'table' then\n      if compare_one(a[1], b[1])\
    \ then\n        return compare_one(a[2], b[2])\n      else\n        return nil\n\
    \      end\n    else\n      return nil\n    end\n  elseif type(a) == 'table' then\n\
    \    if type(b) == 'number' then\n      if compare_one(a[1], b) then\n       \
    \ return a\n      else\n        return nil\n      end\n    elseif type(b) == 'string'\
    \ then\n      if compare_one(a[1], b) then\n        return a\n      else\n   \
    \     return nil\n      end\n    elseif type(b) == 'table' then\n      if compare_one(a[1],\
    \ b[1]) then\n        return compare_one(a[2], b[2])\n      else\n        return\
    \ nil\n      end\n    else\n      return nil\n    end\n  else\n    return nil\n\
    \  end\nend", "  if type(a) == type(b) then\n    if type(a) == 'number' then\n\
    \      if type(b) == 'number' then\n        if b > a then\n          return b\n\
    \        else\n          return a\n        end\n      elseif type(b) == 'string'\
    \ then\n        if b == '.' then\n          return a\n        else\n         \
    \ return b\n        end\n      else\n        return nil\n      end\n    elseif\
    \ type(a) == 'string' then\n      if a == '.' then\n        return b\n      else\n\
    \        return a\n      end\n    else\n      return nil\n    end\n  else\n  \
    \  return nil\n  end\nend", "  if type(a) == 'number' and type(b) == 'number'\
    \ then\n    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10\
    \ then\n      return true\n    else\n      return false\n    end\n  elseif type(a)\
    \ == 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif math.abs(a - b) < 1e-10 then\n      return true\n    else\n      return\
    \ false\n    end\n  elseif type(a) == 'table' and type(b) == 'table' then\n  \
    \  if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10 then\n\
    \      return true\n    else\n      return false\n    end\n  else\n    return\
    \ false\n  end\nend", "  if type(a) == 'number' and type(b) == 'number' then\n\
    \    if a == b then\n      return true\n    elseif math.abs(a - b) < 1e-10 then\n\
    \      return true\n    else\n      return false\n    end\n  elseif type(a) ==\
    \ 'string' and type(b) == 'string' then\n    if a == b then\n      return true\n\
    \    elseif a:sub(1, 1) == b:sub(1, 1) then\n      return true\n    else\n   \
    \   return false\n    end\n  elseif type(a) == 'table' and type(b) == 'table'\
    \ then\n    if a:key() == b:key() then\n      return compare_one(a:value(), b:value())\n\
    \    else\n      return false\n    end\n  else\n    return false\n  end\nend",
  "  if type(a) == type(b) then\n    if type(a) == 'number' then\n      if type(b)\
    \ == 'number' then\n        if a == b then\n          return true\n        end\n\
    \      elseif type(b) == 'string' then\n        if a == b then\n          return\
    \ true\n        end\n      end\n    end\n  end\n  return false\nend", "  if type(a)\
    \ == type(b) then\n    if type(a) == \"number\" then\n      if type(b) == \"number\"\
    \ then\n        if a == b then\n          return true\n        end\n      elseif\
    \ type(b) == \"string\" then\n        if a:find(b) == 1 then\n          return\
    \ true\n        end\n      end\n    end\n  end\n  return false\nend", "  if type(a)\
    \ ~= type(b) then return false end\n  if type(a) == 'string' then\n    if a:find(',')\
    \ ~= nil then\n      a = a:gsub(',', '.')\n    end\n    if a:find('.') ~= nil\
    \ then\n      a = a:gsub('.', ':')\n    end\n    if a:find(':') ~= nil then\n\
    \      a = a:gsub(':', '.')\n    end\n  end\n  if type(a) == 'number' then\n \
    \   if a < b then return true end\n    if a > b then return false end\n  end\n\
    \  return nil\nend", "  if type(a) ~= type(b) then return false end\n  if type(a)\
    \ == 'string' then\n    if a:find(',') ~= nil then\n      a = a:gsub(',', '.')\n\
    \    end\n    if a:find('.') ~= nil then\n      a = a:gsub('.', 'e')\n    end\n\
    \    if a:find('e') ~= nil then\n      a = a:gsub('e', '.')\n    end\n  end\n\
    \  if type(a) == 'number' then\n    if a < b then return true end\n    if a >\
    \ b then return false end\n  end\n  return false\nend", "  if type(a) == type(b)\
    \ then\n    if type(a) == \"number\" then\n      if type(b) == \"number\" then\n\
    \        if a > b then\n          return a\n        else\n          return b\n\
    \        end\n      elseif type(b) == \"string\" then\n        if a ~= b then\n\
    \          return a\n        else\n          return b\n        end\n      end\n\
    \    end\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

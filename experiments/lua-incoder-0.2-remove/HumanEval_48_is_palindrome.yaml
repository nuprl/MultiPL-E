name: HumanEval_48_is_palindrome
language: lua
prompt: "-- Checks if given string is a palindrome\nlocal function is_palindrome(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_palindrome\n\
  \    lu.assertEquals(candidate(''), true)\n    lu.assertEquals(candidate('aba'),\
  \ true)\n    lu.assertEquals(candidate('aaaaa'), true)\n    lu.assertEquals(candidate('zbcd'),\
  \ false)\n    lu.assertEquals(candidate('xywyx'), true)\n    lu.assertEquals(candidate('xywyz'),\
  \ false)\n    lu.assertEquals(candidate('xywzx'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local reversed = text:reverse()\n    return text == reversed\n\
    end", "    local text = text:lower()\n    local i, j = text:len(), text:len()\n\
    \    while i > 0 and j > 0 do\n        if text:sub(i, i) ~= text:sub(j, j) then\n\
    \            return false\n        end\n        i = i - 1\n        j = j - 1\n\
    \    end\n    return true\nend", "    local i, j = 1, #text\n    while i < j do\n\
    \        if text[i] ~= text[j] then\n            return false\n        end\n \
    \       i = i + 1\n        j = j - 1\n    end\n    return true\nend", "    local\
    \ i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j] then\n \
    \           return false\n        end\n        i = i + 1\n        j = j - 1\n\
    \    end\n    return true\nend", "    local text = text:lower()\n    local reversed\
    \ = text:reverse()\n    return text == reversed\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text[i]\n    end\n    return reversed\n  end\n  return reverse(text) == text\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return\
    \ reversed\n  end\n  return reverse(text) == text\nend", "    local function reverse(text)\n\
    \        local result = \"\"\n        for i = #text, 1, -1 do\n            result\
    \ = result .. text[i]\n        end\n        return result\n    end\n    return\
    \ reverse(text) == text\nend", "  local function reverse(text)\n    local result\
    \ = \"\"\n    for i = #text, 1, -1 do\n      result = result .. text[i]\n    end\n\
    \    return result\n  end\n  return reverse(text) == text\nend", "  local function\
    \ reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1 do\n    \
    \  reversed = reversed .. text[i]\n    end\n    return reversed\n  end\n  return\
    \ reverse(text) == text\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n\
    \    end\n    return reversed\n  end\n  return reverse(text) == text\nend", " \
    \   local reversed = text:reverse()\n    return text == reversed\nend", "    local\
    \ function reverse(text)\n        local reversed = \"\"\n        for i = #text,\
    \ 1, -1 do\n            reversed = reversed .. text[i]\n        end\n        return\
    \ reversed\n    end\n    return reverse(text) == text\nend", "    local i, j =\
    \ 1, #text\n    while i <= j do\n        if text[i] ~= text[j] then\n        \
    \    return false\n        end\n        i = i + 1\n        j = j - 1\n    end\n\
    \    return true\nend", "    local function reverse(text)\n        local reversed\
    \ = \"\"\n        for i = #text, 1, -1 do\n            reversed = reversed ..\
    \ text[i]\n        end\n        return reversed\n    end\n    local function is_palindrome_helper(text,\
    \ start, end)\n        if start > end then\n            return true\n        end\n\
    \        if start == end then\n            return text[start] == text[start]\n\
    \        end\n        return is_palindrome_helper(text, start + 1, end - 1)\n\
    \    end\n    return is_palindrome_helper(text, 1, #text)\nend", "    local function\
    \ reverse(text)\n        local result = \"\"\n        for i = #text, 1, -1 do\n\
    \            result = result .. text[i]\n        end\n        return result\n\
    \    end\n    return reverse(text) == text\nend", "    local function reverse(text)\n\
    \        local result = \"\"\n        for i = #text, 1, -1 do\n            result\
    \ = result .. text[i]\n        end\n        return result\n    end\n    return\
    \ reverse(text) == text\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n\
    \    end\n    return reversed\n  end\n  return reverse(text) == text\nend", " \
    \ local function reverse(text)\n    local reversed = \"\"\n    for i = #text,\
    \ 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local function reverse(text)\n\
    \        local result = \"\"\n        for i = #text, 1, -1 do\n            result\
    \ = result .. text[i]\n        end\n        return result\n    end\n    return\
    \ reverse(text) == text\nend", "    local s = text:lower()\n    local i = #s -\
    \ 1\n    while i >= 0 do\n        if s[i] ~= s[#s] then\n            return false\n\
    \        end\n        i = i - 1\n    end\n    return true\nend", "    local reversed\
    \ = text:reverse()\n    return text == reversed\nend", "    local function reverse(text)\n\
    \        local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed..text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "    local function reverse(text)\n        local\
    \ result = \"\"\n        for i = #text, 1, -1 do\n            result = result\
    \ .. text[i]\n        end\n        return result\n    end\n    return reverse(text)\
    \ == text\nend", "    local reversed = text:reverse()\n    return text == reversed\n\
    end", "    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "    local text = text:lower()\n    local\
    \ reversed = text:reverse()\n    return text == reversed\nend", "    local reversed\
    \ = text:reverse()\n    return text == reversed\nend", "    local i, j = 1, #text\n\
    \    while i <= j do\n        if text[i] ~= text[j] then\n            return false\n\
    \        end\n        i = i + 1\n        j = j - 1\n    end\n    return true\n\
    end", "    local function reverse(text)\n        local result = \"\"\n       \
    \ for i = #text, 1, -1 do\n            result = result .. text[i]\n        end\n\
    \        return result\n    end\n    return reverse(text) == text\nend", "  local\
    \ function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1\
    \ do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n  end\n\
    \  local function is_palindrome_recursive(text, left, right)\n    if left > right\
    \ then\n      return true\n    end\n    if text[left] == text[right] then\n  \
    \    return is_palindrome_recursive(text, left + 1, right - 1)\n    end\n    return\
    \ false\n  end\n  return is_palindrome_recursive(text, 1, #text - 1)\nend", " \
    \   local function reverse(text)\n        local result = \"\"\n        for i =\
    \ #text, 1, -1 do\n            result = result .. text[i]\n        end\n     \
    \   return result\n    end\n    return reverse(text) == text\nend", "    local\
    \ function reverse(text)\n        local reversed = \"\"\n        for i = #text,\
    \ 1, -1 do\n            reversed = reversed .. text[i]\n        end\n        return\
    \ reversed\n    end\n    return reverse(text) == text\nend", "  local function\
    \ reverse(text)\n    local result = \"\"\n    for i = #text, 1, -1 do\n      result\
    \ = result .. text[i]\n    end\n    return result\n  end\n  local result = reverse(text)\n\
    \  return result == text\nend", "    local function reverse(text)\n        local\
    \ result = \"\"\n        for i = #text, 1, -1 do\n            result = result\
    \ .. text[i]\n        end\n        return result\n    end\n    return reverse(text)\
    \ == text\nend", "    local function reverse(text)\n        local result = \"\"\
    \n        for i = #text, 1, -1 do\n            result = result .. text[i]\n  \
    \      end\n        return result\n    end\n    return reverse(text) == text\n\
    end", "    local text = text:lower()\n    local reverse = \"\"\n    for i = #text,\
    \ 1, -1 do\n        reverse = reverse .. text[i]\n    end\n    return reverse\
    \ == text\nend", "    local i, j = 1, #text\n    while i <= j do\n        if text[i]\
    \ ~= text[j] then\n            return false\n        end\n        i = i + 1\n\
    \        j = j - 1\n    end\n    return true\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "    local i, j = 1, #text\n    while i <\
    \ j do\n        if text[i] ~= text[j] then\n            return false\n       \
    \ end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend", " \
    \ local function reverse(text)\n    local result = \"\"\n    for i = #text, 1,\
    \ -1 do\n      result = result .. text[i]\n    end\n    return result\n  end\n\
    \  return reverse(text) == text\nend", "    local i, j = 1, #text\n    while i\
    \ <= j do\n        if text[i] ~= text[j] then\n            return false\n    \
    \    end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend",
  "    local reversed = text:reverse()\n    return text == reversed\nend", "  local\
    \ function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1\
    \ do\n      reversed = reversed .. text:sub(i, i)\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "    local reversed = text:reverse()\n   \
    \ return text == reversed\nend", "  local text = text:lower()\n  local reversed\
    \ = text:reverse()\n  return text == reversed\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "    local i, j = 1, #text\n    while i <\
    \ j do\n        if text[i] ~= text[j] then\n            return false\n       \
    \ end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend", " \
    \ local function reverse(text)\n    local reversed = \"\"\n    for i = #text,\
    \ 1, -1 do\n      reversed = reversed..text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local i, j = 1, #text - 1\n\
    \    while i <= j do\n        if text[i] ~= text[j] then\n            return false\n\
    \        end\n        i = i + 1\n        j = j - 1\n    end\n    return true\n\
    end", "  local function reverse(text)\n    local result = \"\"\n    for i = #text,\
    \ 1, -1 do\n      result = result .. text[i]\n    end\n    return result\n  end\n\
    \  return reverse(text) == text\nend", "  local i, j = 1, #text\n  while i <=\
    \ j do\n    if text[i] ~= text[j] then\n      return false\n    end\n    i = i\
    \ + 1\n    j = j - 1\n  end\n  return true\nend", "    local function reverse(text)\n\
    \        local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed .. text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "    local function reverse(text)\n        local\
    \ reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed = reversed\
    \ .. text[i]\n        end\n        return reversed\n    end\n    return reverse(text)\
    \ == text\nend", "    local text = text:lower()\n    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "    local i, j = 1, #text - 1\n    while\
    \ i <= j do\n        if text[i] ~= text[j] then\n            return false\n  \
    \      end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend",
  "    local reversed = text:reverse()\n    return text == reversed\nend", "  local\
    \ function reverse(text)\n    local result = \"\"\n    for i = #text, 1, -1 do\n\
    \      result = result .. text[i]\n    end\n    return result\n  end\n  return\
    \ reverse(text) == text\nend", "    local function reverse(text)\n        local\
    \ reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed = reversed\
    \ .. text[i]\n        end\n        return reversed\n    end\n    return reverse(text)\
    \ == text\nend", "    local text = text:lower()\n    local i, j = text:len(),\
    \ 1\n    while i do\n        if text:sub(i, i) ~= text:sub(j, j) then\n      \
    \      return false\n        end\n        i, j = i + 1, j - 1\n    end\n    return\
    \ true\nend", "    local function reverse(text)\n        local reversed = \"\"\
    \n        for i = #text, 1, -1 do\n            reversed = reversed .. text[i]\n\
    \        end\n        return reversed\n    end\n    local function is_palindrome_recursive(text,\
    \ start, end)\n        if start > end then\n            return true\n        end\n\
    \        if text[start] ~= text[end] then\n            return false\n        end\n\
    \        return is_palindrome_recursive(text, start + 1, end - 1)\n    end\n \
    \   return is_palindrome_recursive(text, 1, #text - 1)\nend", "    local reversed\
    \ = text:reverse()\n    return text == reversed\nend", "    local text = text:lower()\n\
    \    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  local function reverse(text)\n   \
    \ local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text:sub(i, i)\n    end\n    return reversed\n  end\n  return reverse(text)\
    \ == text\nend", "    local i, j = 1, #text\n    while i <= j do\n        if text[i]\
    \ ~= text[j] then\n            return false\n        end\n        i = i + 1\n\
    \        j = j - 1\n    end\n    return true\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "  local i, j = 1, #text\n  while i <= j do\n\
    \    if text[i] ~= text[j] then\n      return false\n    end\n    i = i + 1\n\
    \    j = j - 1\n  end\n  return true\nend", "  local text = text:lower()\n  local\
    \ reversed = text:reverse()\n  return text == reversed\nend", "  local i, j =\
    \ 1, #text\n  while i <= j do\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", "  local function\
    \ reverse(text)\n    local result = \"\"\n    for i = #text, 1, -1 do\n      result\
    \ = result .. text[i]\n    end\n    return result\n  end\n  return reverse(text)\
    \ == text\nend", "    local function reverse(text)\n        local reversed = \"\
    \"\n        for i = #text, 1, -1 do\n            reversed = reversed .. text[i]\n\
    \        end\n        return reversed\n    end\n    return reverse(text) == text\n\
    end", "  local function reverse(text)\n    local result = \"\"\n    for i = #text,\
    \ 1, -1 do\n      result = result .. text[i]\n    end\n    return result\n  end\n\
    \  local function compare(text)\n    return reverse(text) == text\n  end\n  return\
    \ compare(text)\nend", "    local function reverse(text)\n        local reversed\
    \ = \"\"\n        for i = #text, 1, -1 do\n            reversed = reversed ..\
    \ text[i]\n        end\n        return reversed\n    end\n    return reverse(text)\
    \ == text\nend", "    local function reverse(text)\n        local result = \"\"\
    \n        for i = #text, 1, -1 do\n            result = result .. text[i]\n  \
    \      end\n        return result\n    end\n    return reverse(text) == text\n\
    end", "    local reversed = text:reverse()\n    return text == reversed\nend",
  "  local function reverse(text)\n    local result = \"\"\n    for i = #text, 1,\
    \ -1 do\n      result = result .. text:sub(i, i)\n    end\n    return result\n\
    \  end\n  return reverse(text) == text\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "  local function reverse(text)\n    local\
    \ reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i,\
    \ i)\n    end\n    return reversed\n  end\n  return reverse(text) == text\nend",
  "    local text = text:lower()\n    local reverse = \"\"\n    for i = #text, 1,\
    \ -1 do\n        reverse = reverse .. text[i]\n    end\n    return reverse ==\
    \ text\nend", "    local function reverse(text)\n        local result = \"\"\n\
    \        for i = #text, 1, -1 do\n            result = result .. text:sub(i, i)\n\
    \        end\n        return result\n    end\n    return reverse(text) == text\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local function reverse(text)\n\
    \        local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed .. text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "    local text = text:lower()\n    local i, j\
    \ = text:len(), 1\n    while i ~= 0 do\n        if text:sub(i, i) ~= text:sub(j,\
    \ j) then\n            return false\n        end\n        i = i - 1\n        j\
    \ = j + 1\n    end\n    return true\nend", "  local function reverse(text)\n \
    \   local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text[i]\n    end\n    return reversed\n  end\n  local function is_palindrome_helper(text,\
    \ start, end)\n    if start > end then\n      return true\n    end\n    if start\
    \ == end then\n      return text[start] == text[start]\n    end\n    return is_palindrome_helper(text,\
    \ start, start - 1) and\n      is_palindrome_helper(text, start + 1, end)\n  end\n\
    \  return is_palindrome_helper(text, 1, #text)\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text[i]\n    end\n    return reversed\n  end\n  return reverse(text) == text\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  local function is_palindrome_recursive(text, i, j)\n    if i == j then\n\
    \      return true\n    end\n    if text[i] ~= text[j] then\n      return false\n\
    \    end\n    return is_palindrome_recursive(text, i + 1, j - 1)\n  end\n  return\
    \ is_palindrome_recursive(text, 1, #text - 1)\nend", "    local text = text:lower()\n\
    \    local reversed = text:reverse()\n    return text == reversed\nend", "  local\
    \ i, j = 1, #text\n  while i < j do\n    if text[i] ~= text[j] then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \   local text = text:lower()\n    local reverse = \"\"\n    for i = #text, 1,\
    \ -1 do\n        reverse = reverse .. text[i]\n    end\n    return reverse ==\
    \ text\nend", "    local i, j = 1, #text\n    while i < j do\n        if text[i]\
    \ ~= text[j] then\n            return false\n        end\n        i = i + 1\n\
    \        j = j - 1\n    end\n    return true\nend", "    local i, j = 1, #text\n\
    \    while i <= j do\n        if text[i] ~= text[j] then\n            return false\n\
    \        end\n        i = i + 1\n        j = j - 1\n    end\n    return true\n\
    end", "    local reversed = text:reverse()\n    return text == reversed\nend",
  "    local i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j] then\n\
    \            return false\n        end\n        i = i + 1\n        j = j - 1\n\
    \    end\n    return true\nend", "    local function reverse(text)\n        local\
    \ reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed = reversed\
    \ .. text[i]\n        end\n        return reversed\n    end\n    return reverse(text)\
    \ == text\nend", "    local text = text:lower()\n    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "    local i, j = 1, #text\n    while i <\
    \ j do\n        if text[i] ~= text[j] then\n            return false\n       \
    \ end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend", " \
    \ local function reverse(text)\n    local reversed = \"\"\n    for i = #text,\
    \ 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local function reverse(text)\n\
    \        local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed .. text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "    local text = text:lower()\n    local reverse\
    \ = \"\"\n    for i = #text, 1, -1 do\n        reverse = reverse .. text[i]\n\
    \    end\n    return reverse == text\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "  local function reverse(text)\n    local\
    \ reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed..text[i]\n\
    \    end\n    return reversed\n  end\n  return reverse(text) == text\nend", " \
    \   local i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j] then\n\
    \            return false\n        end\n        i = i + 1\n        j = j - 1\n\
    \    end\n    return true\nend", "    local function reverse(text)\n        local\
    \ result = \"\"\n        for i = #text, 1, -1 do\n            result = result\
    \ .. text[i]\n        end\n        return result\n    end\n    return reverse(text)\
    \ == text\nend", "  local function reverse(str)\n    local reversed = \"\"\n \
    \   for i = #str, 1, -1 do\n      reversed = reversed .. str:sub(i, i)\n    end\n\
    \    return reversed\n  end\n  local function is_palindrome_helper(text, start,\
    \ end)\n    if start > end then\n      return true\n    end\n    if start == end\
    \ then\n      return text:sub(1, 1) == text:sub(1, 1)\n    end\n    return is_palindrome_helper(text,\
    \ start - 1, end) and\n           is_palindrome_helper(text, start + 1, end)\n\
    \  end\n  return is_palindrome_helper(text, 1, #text)\nend", "    local text =\
    \ text:lower()\n    local reversed = text:reverse()\n    return text == reversed\n\
    end", "    local text = text:lower()\n    local reversed = text:reverse()\n  \
    \  return text == reversed\nend", "    local reversed = text:reverse()\n    return\
    \ text == reversed\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n\
    \    end\n    return reversed\n  end\n  return reverse(text) == text\nend", " \
    \   local text = text:lower()\n    local text_length = #text\n    local text_reversed\
    \ = text:reverse()\n    local text_reversed_length = #text_reversed\n    return\
    \ text_length == text_reversed_length\nend", "    local text = text:lower()\n\
    \    local i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "  local function reverse(text)\n    local\
    \ reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n\
    \    end\n    return reversed\n  end\n  local function is_palindrome_helper(text,\
    \ start, end)\n    if start > end then\n      return true\n    end\n    if start\
    \ == end then\n      return text[start] == text[start] and is_palindrome_helper(text,\
    \ start + 1, end - 1)\n    end\n    return text[start] == text[end] and is_palindrome_helper(text,\
    \ start + 1, end - 1)\n  end\n  return is_palindrome_helper(text, 1, #text - 1)\n\
    end", "    local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "    local function reverse(text)\n \
    \       local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed .. text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "    local reversed = text:reverse()\n    return\
    \ text == reversed\nend", "    local i, j = 1, #text\n    while i < j do\n   \
    \     if text[i] ~= text[j] then\n            return false\n        end\n    \
    \    i = i + 1\n        j = j - 1\n    end\n    return true\nend", "    local\
    \ i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j] then\n  \
    \          return false\n        end\n        i = i + 1\n        j = j - 1\n \
    \   end\n    return true\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i,\
    \ i)\n    end\n    return reversed\n  end\n  return reverse(text) == text\nend",
  "  local function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1,\
    \ -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local text = text:lower()\n\
    \    local reversed = text:reverse()\n    return text == reversed\nend", "   \
    \ local reversed = text:reverse()\n    return text == reversed\nend", "  local\
    \ function reverse(text)\n    local result = \"\"\n    for i = #text, 1, -1 do\n\
    \      result = result .. text:sub(i, i)\n    end\n    return result\n  end\n\
    \  return reverse(text) == text\nend", "  local function reverse(text)\n    local\
    \ reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text:sub(i,\
    \ i)\n    end\n    return reversed\n  end\n  return reverse(text) == text\nend",
  "    local text = text:lower()\n    local reverse = \"\"\n    for i = #text, 1,\
    \ -1 do\n        reverse = reverse .. text[i]\n    end\n    return reverse ==\
    \ text\nend", "    local reversed = text:reverse()\n    return text == reversed\n\
    end", "  local function reverse(text)\n    local result = \"\"\n    for i = #text,\
    \ 1, -1 do\n      result = result .. text[i]\n    end\n    return result\n  end\n\
    \  return reverse(text) == text\nend", "    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "    local i, j = 1, #text\n    while i <=\
    \ j do\n        if text[i] ~= text[j] then\n            return false\n       \
    \ end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend", " \
    \   local text = text:lower()\n    local i, j = 1, #text\n    while i < j do\n\
    \        if text[i] ~= text[j] then\n            return false\n        end\n \
    \       i = i + 1\n        j = j - 1\n    end\n    return true\nend", "    local\
    \ i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j] then\n  \
    \          return false\n        end\n        i = i + 1\n        j = j - 1\n \
    \   end\n    return true\nend", "    local s = text:lower()\n    local i = #s\
    \ - 1\n    while i >= 0 do\n        if s[i] ~= s[#s] then\n            return\
    \ false\n        end\n        i = i - 1\n    end\n    return true\nend", "  local\
    \ function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1\
    \ do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n  end\n\
    \  local function is_palindrome_helper(text, start, end)\n    if start > end then\n\
    \      return true\n    end\n    if start == end then\n      return text[start]\
    \ == text[start]\n    end\n    return is_palindrome_helper(text, start + 1, end\
    \ - 1)\n  end\n  return is_palindrome_helper(text, 1, #text - 1)\nend", "    local\
    \ function reverse(text)\n        local reversed = \"\"\n        for i = #text,\
    \ 1, -1 do\n            reversed = reversed .. text[i]\n        end\n        return\
    \ reversed\n    end\n    return reverse(text) == text\nend", "    local text =\
    \ text:lower()\n    local reversed = text:reverse()\n    return text == reversed\n\
    end", "    local i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j]\
    \ then\n            return false\n        end\n        i = i + 1\n        j =\
    \ j - 1\n    end\n    return true\nend", "  local function reverse(text)\n   \
    \ local result = \"\"\n    for i = #text, 1, -1 do\n      result = result .. text[i]\n\
    \    end\n    return result\n  end\n  return reverse(text) == text\nend", "  \
    \  local i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j] then\n\
    \            return false\n        end\n        i = i + 1\n        j = j - 1\n\
    \    end\n    return true\nend", "    local function reverse(text)\n        local\
    \ reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed = reversed\
    \ .. text[i]\n        end\n        return reversed\n    end\n    return reverse(text)\
    \ == text\nend", "    local i, j = 1, #text\n    while i <= j do\n        if text[i]\
    \ ~= text[j] then\n            return false\n        end\n        i = i + 1\n\
    \        j = j - 1\n    end\n    return true\nend", "    local i, j = 1, #text\n\
    \    while i <= j do\n        if text[i] ~= text[j] then\n            return false\n\
    \        end\n        i = i + 1\n        j = j - 1\n    end\n    return true\n\
    end", "    local text = text:lower()\n    local i, j = 1, #text\n    while i <=\
    \ j do\n        if text[i] ~= text[j] then\n            return false\n       \
    \ end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend", " \
    \   local i, j = 1, #text\n    while i < j do\n        if text[i] ~= text[j] then\n\
    \            return false\n        end\n        i = i + 1\n        j = j - 1\n\
    \    end\n    return true\nend", "    local reversed = text:reverse()\n    return\
    \ text == reversed\nend", "    local text = text:lower()\n    local reversed =\
    \ text:reverse()\n    return text == reversed\nend", "  local function reverse(text)\n\
    \    local result = \"\"\n    for i = #text, 1, -1 do\n      result = result ..\
    \ text[i]\n    end\n    return result\n  end\n  return reverse(text) == text\n\
    end", "  local function reverse(text)\n    local reversed = \"\"\n    for i =\
    \ #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local text = text:lower()\n\
    \    local reversed = text:reverse()\n    return text == reversed\nend", "   \
    \ local function reverse(text)\n        local result = \"\"\n        for i = #text,\
    \ 1, -1 do\n            result = result .. text[i]\n        end\n        return\
    \ result\n    end\n    return reverse(text) == text\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text[i]\n    end\n    return reversed\n  end\n  return reverse(text) == text\n\
    end", "    local function reverse(text)\n        local result = \"\"\n       \
    \ for i = #text, 1, -1 do\n            local char = text:sub(i, i)\n         \
    \   result = result .. char\n        end\n        return result\n    end\n   \
    \ return reverse(text) == text\nend", "  local function reverse(text)\n    local\
    \ reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n\
    \    end\n    return reversed\n  end\n  local function is_palindrome_helper(text,\
    \ start, end)\n    if start > end then\n      return false\n    end\n    if start\
    \ == end then\n      return true\n    end\n    return is_palindrome_helper(text,\
    \ start + 1, end - 1) and\n      reverse(text) == reverse(text)\n  end\n  return\
    \ is_palindrome_helper(text, 1, #text)\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed\
    \ .. text[i]\n    end\n    return reversed\n  end\n  return reverse(text) == text\n\
    end", "    local text = text:lower()\n    local reversed = text:reverse()\n  \
    \  return text == reversed\nend", "  local function reverse(str)\n    local result\
    \ = \"\"\n    for i = #str, 1, -1 do\n      result = result .. str:sub(i, i)\n\
    \    end\n    return result\n  end\n  return reverse(text) == text\nend", "  local\
    \ function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1\
    \ do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n  end\n\
    \  return reverse(text) == text\nend", "    local i, j = 1, #text\n    while i\
    \ < j do\n        if text[i] ~= text[j] then\n            return false\n     \
    \   end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend",
  "  local function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1,\
    \ -1 do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n\
    \  end\n  return reverse(text) == text\nend", "    local function reverse(text)\n\
    \        local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed .. text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "    local function reverse(text)\n        local\
    \ result = \"\"\n        for i = #text, 1, -1 do\n            result = result\
    \ .. text[i]\n        end\n        return result\n    end\n    return reverse(text)\
    \ == text\nend", "  local text = text:lower()\n  local i, j = text:len(), 1\n\
    \  while i <= j do\n    if text:sub(i, i) ~= text:sub(j, j) then\n      return\
    \ false\n    end\n    i = i + 1\n    j = j - 1\n  end\n  return true\nend", " \
    \   local text = text:lower()\n    local reversed = text:reverse()\n    return\
    \ text == reversed\nend", "  local i, j = 1, #text\n  while i <= j do\n    if\
    \ text[i] ~= text[j] then\n      return false\n    end\n    i = i + 1\n    j =\
    \ j - 1\n  end\n  return true\nend", "    local s = text:lower()\n    local reversed\
    \ = s:reverse()\n    return s == reversed\nend", "    local function reverse(text)\n\
    \        local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed .. text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "    local i, j = 1, #text\n    while i < j do\n\
    \        if text[i] ~= text[j] then\n            return false\n        end\n \
    \       i = i + 1\n        j = j - 1\n    end\n    return true\nend", "  local\
    \ function reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1\
    \ do\n      reversed = reversed .. text[i]\n    end\n    return reversed\n  end\n\
    \  return reverse(text) == text\nend", "    local i, j = 1, #text - 1\n    while\
    \ i <= j do\n        if text[i] ~= text[j] then\n            return false\n  \
    \      end\n        i = i + 1\n        j = j - 1\n    end\n    return true\nend",
  "    local function reverse(text)\n        local result = \"\"\n        for i =\
    \ #text, 1, -1 do\n            result = result .. text[i]\n        end\n     \
    \   return result\n    end\n    return reverse(text) == text\nend", "    local\
    \ text = text:lower()\n    local reversed = text:reverse()\n    return text ==\
    \ reversed\nend", "    local text = text:lower()\n    local reversed = text:reverse()\n\
    \    return text == reversed\nend", "    local reversed_text = text:reverse()\n\
    \    return text == reversed_text\nend", "    local function reverse(text)\n \
    \       local reversed = \"\"\n        for i = #text, 1, -1 do\n            reversed\
    \ = reversed .. text[i]\n        end\n        return reversed\n    end\n    return\
    \ reverse(text) == text\nend", "  local function reverse(text)\n    local reversed\
    \ = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n\
    \    end\n    return reversed\n  end\n  return reverse(text) == text\nend", " \
    \   local function reverse(text)\n        local reversed = \"\"\n        for i\
    \ = #text, 1, -1 do\n            reversed = reversed .. text[i]\n        end\n\
    \        return reversed\n    end\n    return reverse(text) == text\nend", " \
    \ local function reverse(text)\n    local result = \"\"\n    for i = #text, 1,\
    \ -1 do\n      result = result .. text[i]\n    end\n    return result\n  end\n\
    \  return reverse(text) == text\nend", "  local function reverse(text)\n    local\
    \ result = \"\"\n    for i = #text, 1, -1 do\n      result = result .. text[i]\n\
    \    end\n    return result\n  end\n  return reverse(text) == text\nend", "  local\
    \ function reverse(text)\n    local result = \"\"\n    for i = #text, 1, -1 do\n\
    \      result = result .. text[i]\n    end\n    return result\n  end\n  local\
    \ function is_palindrome_recursive(text, start, end)\n    if start > end then\n\
    \      return true\n    end\n    if text[start] ~= text[end] then\n      return\
    \ false\n    end\n    return is_palindrome_recursive(text, start + 1, end - 1)\n\
    \  end\n  return is_palindrome_recursive(text, 1, #text - 1)\nend", "    local\
    \ i, j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j] then\n \
    \           return false\n        end\n        i = i + 1\n        j = j - 1\n\
    \    end\n    return true\nend", "    local s = text:lower()\n    local reversed\
    \ = s:reverse()\n    return s == reversed\nend", "    local i, j = 1, #text\n\
    \    while i < j do\n        if text[i] ~= text[j] then\n            return false\n\
    \        end\n        i = i + 1\n        j = j - 1\n    end\n    return true\n\
    end", "    local text = text:lower()\n    local reversed = text:reverse()\n  \
    \  return text == reversed\nend", "    local reversed = text:reverse()\n    return\
    \ text == reversed\nend", "    local i, j = 1, #text\n    while i < j do\n   \
    \     if text[i] ~= text[j] then\n            return false\n        end\n    \
    \    i = i + 1\n        j = j - 1\n    end\n    return true\nend", "    local\
    \ function reverse(text)\n        local reversed = \"\"\n        for i = #text,\
    \ 1, -1 do\n            reversed = reversed .. text[i]\n        end\n        return\
    \ reversed\n    end\n    return reverse(text) == text\nend", "  local function\
    \ reverse(text)\n    local reversed = \"\"\n    for i = #text, 1, -1 do\n    \
    \  reversed = reversed .. text:sub(i, i)\n    end\n    return reversed\n  end\n\
    \  return reverse(text) == text\nend", "    local text = text:lower()\n    local\
    \ reversed = text:reverse()\n    return text == reversed\nend", "    local i,\
    \ j = 1, #text\n    while i <= j do\n        if text[i] ~= text[j] then\n    \
    \        return false\n        end\n        i = i + 1\n        j = j - 1\n   \
    \ end\n    return true\nend", "    local reversed = text:reverse()\n    return\
    \ text == reversed\nend", "    local i, j = 1, #text\n    while i < j do\n   \
    \     if text[i] ~= text[j] then\n            return false\n        end\n    \
    \    i = i + 1\n        j = j - 1\n    end\n    return true\nend", "    local\
    \ function reverse(text)\n        local reversed = \"\"\n        for i = #text,\
    \ 1, -1 do\n            reversed = reversed .. text[i]\n        end\n        return\
    \ reversed\n    end\n    return reverse(text) == text\nend", "  local function\
    \ reverse(str)\n    local reversed = \"\"\n    for i = #str, 1, -1 do\n      reversed\
    \ = reversed .. str:sub(i, i)\n    end\n    return reversed\n  end\n  return reverse(text)\
    \ == text\nend", "    local function reverse(text)\n        local result = \"\"\
    \n        for i = #text, 1, -1 do\n            result = result .. text[i]\n  \
    \      end\n        return result\n    end\n    return reverse(text) == text\n\
    end", "  local text = text:lower()\n  local i, j = 1, #text\n  while i <= j do\n\
    \    if text[i] ~= text[j] then\n      return false\n    end\n    i = i + 1\n\
    \    j = j - 1\n  end\n  return true\nend", "  local function reverse(text)\n\
    \    local reversed = \"\"\n    for i = #text, 1, -1 do\n      reversed = reversed..text[i]\n\
    \    end\n    return reversed\n  end\n  return reverse(text) == text\nend", " \
    \   local text = text:lower()\n    local reversed = text:reverse()\n    return\
    \ text == reversed\nend", "    local function reverse(text)\n        local reversed\
    \ = \"\"\n        for i = #text, 1, -1 do\n            reversed = reversed ..\
    \ text[i]\n        end\n        return reversed\n    end\n    return reverse(text)\
    \ == text\nend", "  local function reverse(text)\n    local reversed = \"\"\n\
    \    for i = #text, 1, -1 do\n      reversed = reversed .. text[i]\n    end\n\
    \    return reversed\n  end\n  return reverse(text) == text\nend", "    local\
    \ reversed = text:reverse()\n    return text == reversed\nend", "    local text\
    \ = text:lower()\n    local text_reversed = text:reverse()\n    return text ==\
    \ text_reversed\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_102_choose_num
language: py
prompt: "def choose_num(x: int, y: int) -> int:\n    \"\"\"This function takes two\
  \ positive numbers x and y and returns the\n    biggest even integer number that\
  \ is in the range [x, y] inclusive. If \n    there's no such number, then the function\
  \ should return -1.\n\n    For example:\n            \"\"\"\n"
tests: "def check(candidate):\n    assert candidate(12, 15) == 14\n    assert candidate(13,\
  \ 12) == -1\n    assert candidate(33, 12354) == 12354\n    assert candidate(5234,\
  \ 5233) == -1\n    assert candidate(6, 29) == 28\n    assert candidate(27, 10) ==\
  \ -1\n    assert candidate(7, 7) == -1\n    assert candidate(546, 546) == 546\n\n\
  def test_check():\n    check(choose_num)\n\ntest_check()\n"
completions: ["            # choose_num(4,8) \u2192 6\n            choose_num(7, 1)\
    \ \u2192 1\n            choose_num(0, 0) \u2192 -1\n            choose_num(3,3)\
    \ \u2192 3\n            choose_num(-5, 8) \u2192 8\n            choose_num(-7,\
    \ -7) \u2192 -7\n\n    \"\"\"\n    if x <= 0 or y <= 0:\n        return -1\n\n\
    \    x, y = x - y, x + y\n    while x <= y:\n        if x % 2 == 0:\n        \
    \    x = x + y\n        else:\n            y = y - x\n            x = x + y\n\n\
    \    return x - y\n\n", "            x = 13\n            y = 4\n            print(choose_num(x,\
    \ y))\n            # output should be 8\n            print(choose_num(6, 10))\n\
    \            # output should be -1\n            \"\"\"\n    \"\"\"\n    if x ==\
    \ y:\n        return -1\n    elif x % 2 == 0:\n        return x - 1\n    else:\n\
    \        if y % 2 == 0:\n            return x + y\n        else:\n           \
    \ return x - y\n\n", "    >>> choose_num(1, 10)\n    4\n    >>> choose_num(3,\
    \ 2)\n    -1\n    \"\"\"\n    if x == 0 and y == 0:\n        return 1\n    \n\
    \    elif x == 1:\n        return y\n    \n    elif y == 2:\n        return x\
    \ \n    \n    elif x >= 0 and y > 0:\n        if x % 2 == 0:\n            if x\
    \ // 2 > y:\n                return x // 2\n            else:\n              \
    \  return y\n        elif y % 2 == 0:\n            return y\n\n    elif x <= 0\
    \ and y > 0:\n        if y % 2 == 0:\n            if y // 2 > x:\n           \
    \     return y // 2\n            else:\n                return x\n        elif\
    \ x % 2 == 0:\n            return x\n\n    elif x <= 0 and y < 0:\n        if\
    \ y % 2 == 0:\n            if x // 2 > y:\n                return x // 2\n   \
    \         else:\n                return y\n        elif x % 2 == 0:\n        \
    \    return x\n    \n    else:\n        if x % 2 == 0:\n            if x // 2\
    \ > y:\n                return x // 2\n            else:\n                return\
    \ y\n        elif y % 2 == 0:\n            return y\n    \n    return -1\n    ",
  "            choose_num(1, 5)\n            # Output: 4\n            choose_num(1,\
    \ 2)\n            # Output: -1\n            choose_num(12, 3)\n            # Output:\
    \ 6\n            choose_num(9, 8)\n            # Output: -1\n            choose_num(8,\
    \ 9)\n            # Output: -1\n            choose_num(11, 17)\n            #\
    \ Output: 15\n            \"\"\"\n    \"\"\"\n\n    # 1. Initialize \"even\" and\
    \ \"odd\" lists\n    even = []\n    odd = []\n\n    # 2. Initialize \"even\" and\
    \ \"odd\" ranges\n    if x < y:\n        x = y\n    if x % 2 == 0 and x != 0 and\
    \ y % 2 == 0:\n        even.append(x)\n        if x % 2 != 0:\n            odd.append(x\
    \ + 1)\n    if x % 2 != 0 and x != 0 and y % 2 != 0:\n        odd.append(x)\n\
    \        if x % 2 == 0:\n            even.append(x + 1)\n    if x % 2 == 0 and\
    \ x != 0 and y % 2 != 0:\n        even.append(x)\n        if y % 2 == 0:\n   \
    \         odd.append(x + 1)\n    if x % 2 != 0 and x != 0 and y % 2 == 0:\n  \
    \      odd.append(x)\n        if y % 2 != 0:\n            even.append(x + 1)\n\
    \n    # 3. Go through all \"even\" and \"odd\" ranges\n    biggest_even = -1\n\
    \    biggest_odd = -1\n\n    for num in even:\n        num = num + 1\n       \
    \ if num > biggest_even:\n            biggest_even = num\n    for num in odd:\n\
    \        num = num + 1\n        if num > biggest_odd:\n            biggest_odd\
    \ = num\n\n    # 4. Check if biggest_even > biggest_odd\n    if biggest_even >\
    \ biggest_odd:\n        return biggest_even\n    else:\n        return biggest_odd\n\
    \n", "            >>>choose_num(100, 150)\n            200\n            >>>choose_num(99,\
    \ 102)\n            -1\n            \"\"\"\n    \"\"\"\n    even = []\n    if\
    \ x % 2 == 0 and y % 2 == 0:\n        even.append(x)\n        even.append(y)\n\
    \    else:\n        even.append(y)\n        even.append(x)\n\n    even = [e for\
    \ e in even if int(e) >= 0]\n\n    if even == []:\n        return -1\n\n    even\
    \ = sorted(even)\n\n    even = [e % 2 if e % 2 != 0 else e for e in even]\n  \
    \  num = (even[0] + even[1]) / 2\n\n    return num\n\n", "    >>> choose_num(1,\
    \ 3)\n    3\n    >>> choose_num(1, 4)\n    4\n    >>> choose_num(100, 100) \n\
    \    -1\n    \"\"\"\n    if x < y:\n        nums_between = range(x, y + 1)\n \
    \   else:\n        nums_between = range(y, x + 1)\n    for num in nums_between:\n\
    \        if num%2 == 0:\n            return num\n    return -1\n\n", "       \
    \ x, y = 6, 6\n        choose_num(x, y)\n        choose_num(4, 2)\n        choose_num(6,\
    \ 4)\n        choose_num(6, 6)\n        choose_num(4, 4)\n        choose_num(6,\
    \ 4)\n        choose_num(6, 3)\n        choose_num(6, 4)\n        choose_num(6,\
    \ 1)\n        choose_num(6, 4)\n        choose_num(6, 4)\n        choose_num(6,\
    \ 6)\n        choose_num(6, 6)\n        choose_num(4, 6)\n        choose_num(4,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 2)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(6, 3)\n        choose_num(6,\
    \ 3)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)\n        choose_num(3,\
    \ 4)\n        choose_num(3, 4)\n        choose_num(3, 4)", "            x, y =\
    \ 1, 5\n            choose_num(x, y)\n            # 2\n            x, y = -1,\
    \ 5\n            choose_num(x, y)\n            # -1\n\n    Time Complexity: O(log(n))\n\
    \    Space Complexity: O(1)\n    \"\"\"\n    # your code here\n    if x < 0 or\
    \ y < x:\n        return -1\n    if x % 2 == 0:\n        divisor = x // 2\n  \
    \      for i in range(1, x):\n            if i % divisor == 0:\n             \
    \   divisor = i\n                break\n        return divisor\n    else:\n  \
    \      divisor = y - x // 2\n        for i in range(1, y):\n            if i %\
    \ divisor == 0:\n                divisor = i\n                break\n        return\
    \ divisor\n", "            print(choose_num(3, 4))\n            >>5\n        \
    \    print(choose_num(6, 7))\n            >>-1\n            print(choose_num(6,\
    \ 0))\n            >>-1\n            \"\"\"\n    \"\"\"\n    if x > y:\n     \
    \   if x % 2 != 0:\n            return -1\n        else: return x\n    elif x\
    \ > 0 and y > 0:\n        return max(x//2, y)\n    elif x == 0 and y > 0:\n  \
    \      return -1\n    elif x % 2 != 0 and y > 0:\n        return -1\n    else:\n\
    \        if x % 2 != 0:\n            return -1\n        else:\n            return\
    \ y\n", "    > choose_num(6, 4)\n    5\n    > choose_num(6, 6)\n    -1\n     \
    \       \"\"\"\n    \n    \n    pass\n    \n", "    choose_num(7, 5)\n    \"\"\
    \"\n    if x > y:\n        x, y = y, x\n    \n    i = 2\n    while True:\n   \
    \     if x <= y or i % 2 == 0 and i not in (x, y):\n            return i\n   \
    \     i += 1\n\n", "    x = 1\n    y = 4\n    assert choose_num(x, y) == 3\n \
    \   x = 2\n    y = 3\n    assert choose_num(x, y) == 1\n    x = 2\n    y = 8\n\
    \    assert choose_num(x, y) == -1\n    x = 9\n    y = 9\n    assert choose_num(x,\
    \ y) == -1\n    x = 10\n    y = 10\n    assert choose_num(x, y) == -1\n    \"\"\
    \"\n\n    if x < 0 or y < 0:\n        return -1\n\n    num = 2\n    while y >\
    \ x:\n        if x % num == 0 and y % num == 0:\n            return num\n    \
    \    num += 1\n\n    return -1\n\n", "    numbers = [2, 5, 9, 11, 18, 25, 32,\
    \ 40, 52, 61, 66, 78, 90]\n    # numbers = input(\"Enter a list of numbers: \"\
    ).split()\n    numbers.sort()\n    for number in numbers:\n        if number %\
    \ 2 == 0:\n            smallest = number\n            break\n    for number in\
    \ numbers:\n        if number <= smallest:\n            smallest = number\n  \
    \          break\n    return smallest\n\n", "            x = 4\n            y\
    \ = 3\n            result = choose_num(x, y)\n            print(result)\n    \
    \        >>>4\n\n    \"\"\"\n    if x <= 0 or y <= 0:\n        return -1\n   \
    \ \n    num = x * y\n    if num % 2 == 0:\n        return x if x > y else y\n\
    \    \n    ", "            x := 20\n            y := 10\n            choose_num(x,\
    \ y)\n            x := 30\n            y := 10\n            choose_num(x, y)\n\
    \            x := 30\n            y := 30\n            choose_num(x, y)\n    \
    \        x := 40\n            y := 30\n            choose_num(x, y)\n        \
    \    x := 40\n            y := 40\n            choose_num(x, y)\n            x\
    \ := 60\n            y := 40\n            choose_num(x, y)\n            x := 60\n\
    \            y := 60\n            choose_num(x, y)\n            x := 70\n    \
    \        y := 60\n            choose_num(x, y)\n            x := 70\n        \
    \    y := 70\n            choose_num(x, y)\n            x := 80\n            y\
    \ := 70\n            choose_num(x, y)\n            x := 80\n            y := 80\n\
    \            choose_num(x, y)\n            x := 90\n            y := 80\n    \
    \        choose_num(x, y)\n            x := 90\n            y := 90\n        \
    \    choose_num(x, y)\n            x := 100\n            y := 90\n           \
    \ choose_num(x, y)\n            x := 100\n            y := 100\n            choose_num(x,\
    \ y)\n            x := 110\n            y := 100\n            choose_num(x, y)\n\
    \            x := 110\n            y := 110\n            choose_num(x, y)\n  \
    \          x := 120\n            y := 110\n            choose_num(x, y)\n    \
    \        x := 120\n            y := 120\n            choose_num(x, y)\n      \
    \      x := 130\n            y := 120\n            choose_num(x, y)\n        \
    \    x := 130\n            y := 130\n            choose_num(x, y)\n          \
    \  x := 140\n            y := 130\n            choose_num(x, y)\n            x\
    \ := 140\n            y := 140\n            choose_num(x, y)\n            x :=\
    \ 150\n            y := 140\n            choose_num(x, y)\n            x := 150\n\
    \            y := 150\n            choose_num(x, y)\n            x := 160\n  \
    \          y := 150\n            choose_num(x, y)\n            x := 160\n    \
    \        y := 160\n            choose_num(x, y)\n            x := 170\n      \
    \      y := 160\n            choose_num(x, y)\n            x := 170\n        \
    \    y := 170\n            choose_num(x, y)\n            x := 180\n          \
    \  y := 170\n            choose_num(x, y)\n            x := 180\n            y\
    \ := 180\n            choose_num(x, y)\n            x := 190\n            y :=\
    \ 180\n            choose_num(x, y)\n", "            Input:\n            x: 1\n\
    \            y: 3\n            Output:\n            0\n            \"\"\"\n\n\
    \    \"\"\"\n    if x>y or x<0:\n        x = -abs(x)\n        y = -abs(y)\n  \
    \  if y<=0:\n        return -1\n    elif x<=0:\n        return -1\n    z = x +\
    \ (y-x)\n    if z%2==0 and z>0:\n        return z\n    else:\n        return -1\n",
  "            choose_num(3, 7) --> 3\n            choose_num(11, 14) --> 11\n   \
    \         choose_num(5, 9) --> 9\n            choose_num(5, 10) --> -1\n     \
    \       \"\"\"\n            \n    Args:\n        x (int): the number to be checked.\n\
    \        y (int): the number to be checked.\n\n    Returns:\n        int: the\
    \ biggest even number that is in the range [x, y] inclusive.\n        If there\
    \ is no such number, the function returns -1.\n    \"\"\"\n    \n    # If the\
    \ numbers are equal, it doesn't matter which number is greater\n    if x == y:\n\
    \        return -1\n    \n    # If the first number is bigger than the second,\
    \ then it can't be an\n    # even number since it's bigger than the first number.\n\
    \    if x > y:\n        return -1\n    \n    # If the second number is bigger\
    \ than the first, then we cannot make \n    # the number even since it's bigger\
    \ than the second number.\n    if x < y:\n        return -1\n    \n    # At this\
    \ point, the numbers are equal. Now we need to decide which \n    # number is\
    \ greater. Since x is the bigger, the number is greater.\n    return x if x %\
    \ 2 == 0 else y\n\n", "    >>> choose_num(4, 9)\n    6\n    >>> choose_num(-5,\
    \ -7)\n    -1\n    \"\"\"\n    if x <= 0 or y <= 0:\n        return -1\n    if\
    \ x >= y and y >= 0:\n        if x % 2 == 0 and y % 2 == 0:\n            return\
    \ x\n        else:\n            return y\n    elif x <= y and y > 0:\n       \
    \ if x % 2 == 0:\n            return x\n        else:\n            return y\n\
    \    elif y > x and x > 0:\n        if y % 2 == 0:\n            return y\n   \
    \     else:\n            return x\n    else:\n        return -1\n\n", "      \
    \      choose_num(4,10)\n            # > 7\n    \n    \n    Args:\n        x (int):\
    \ \n        y (int): \n\n    Returns:\n        int: \n\n    \"\"\"\n    if x >\
    \ y:\n        x, y = y, x\n    while x != y:\n        while x % 2 != 0 and y %\
    \ 2 != 0:\n            x += 1\n            y -= 1\n        elif x % 2 == 0:\n\
    \            x -= 1\n            y -= 1\n        else:\n            x -= 1\n \
    \   return x if x >= y else -1\n\n", "    >>> choose_num(1, 2)\n    4\n    >>>\
    \ choose_num(2, 6)\n    4\n    >>> choose_num(10, 1)\n    1\n    >>> choose_num(0,\
    \ -1)\n    -1\n    \"\"\"\n    if x > y:\n        x, y = y, x\n    while x < y:\n\
    \        if x % 2 == 0:\n            x += 1\n        else:\n            x -= 1\n\
    \    return x\n\n", "            choose_num(5, 5)\n            1\n           \
    \ choose_num(5, 6)\n            -1\n            choose_num(5, 7)\n           \
    \ -1\n            choose_num(5, 8)\n            -1\n            choose_num(7,\
    \ 8)\n            -1\n            choose_num(12, 9)\n            -1\n        \
    \    \"\"\"\n    \n    \"\"\"\n    \n    \n    \"\"\"\n    if x > y:\n       \
    \ x,y = y,x\n    \n    if x == 0:\n        return -1\n    \n    if y == 0:\n \
    \       return -1\n    \n    num1 = -1\n    num2 = -1\n    \n    while x>0:\n\
    \        num1 = num1 + x%10\n        x = x//10\n    \n    while y>0:\n       \
    \ num2 = num2 + y%10\n        y = y//10\n    \n    if num1==0 and num2==0:\n \
    \       return -1\n    \n    if num1==0 and num2>0:\n        return num2\n   \
    \ \n    if num1>0 and num2==0:\n        return num1\n    \n    if num1>0 and num2>0:\n\
    \        return num1\n    ", "    >>> choose_num(0, 0)\n    -1\n    >>> choose_num(3,\
    \ 3)\n    4\n    >>> choose_num(6, 4)\n    7\n    >>> choose_num(8, 10)\n    -1\n\
    \    \"\"\"\n    if x >= y:\n        x = y\n    if x == 0:\n        x = 3\n  \
    \  if y == 0:\n        y = 3\n    total = 0\n    for i in range (x, y+1):\n  \
    \      if i % 2 == 0:\n            total += i\n    return total\n\n", "      \
    \      choose_num(12, 4)\n            >>>> 12\n\n            choose_num(13, 4)\n\
    \            >>>> 13\n\n            choose_num(12, 5)\n            >>>> -1\n \
    \           \"\"\"\n    \"\"\"\n    if x > y and x % 2 == 0 and y % 2 == 0:\n\
    \        return y\n    elif x > y and x % 2 == 1 and y % 2 == 1:\n        return\
    \ x + 1\n    elif x < y and x % 2 == 1 and y % 2 == 0:\n        return y + 1\n\
    \    elif x < y and x % 2 == 0 and y % 2 == 1:\n        return x + 1\n    else:\n\
    \        return -1\n</cell>\n<cell>", "            Input:\n                  \
    \  x = 8\n                    y = 14\n            Output:\n                  \
    \  8\n            Input:\n                    x = 4\n                    y = 12\n\
    \            Output:\n                    4\n            Input:\n            \
    \        x = 11\n                    y = 18\n            Output:\n           \
    \         -1\n            \"\"\"\n    \"\"\"\n    \n    \n    while x < y:\n \
    \       if (x % 2) == 0:\n            x = x + 1\n        else:\n            x\
    \ = x + 1\n    return x \n</cell>\n<cell>", "    >>> choose_num(12,22)\n    32\n\
    \    >>> choose_num(12,-2)\n    -1\n    \"\"\"\n    numbers_found = []\n    #\
    \ x is the lower limit\n    # y is the upper limit\n    # numbers_found is a list\
    \ that stores the even numbers found\n    while x != y:\n        # x is increased\
    \ by 2 until it reaches the upper limit\n        x = x + 2\n        # while there\
    \ are still even numbers in numbers_found\n        while x % 2 == 0:\n       \
    \     # check if the number is already in the list\n            # if it is, append\
    \ the new even number\n            if x not in numbers_found:\n              \
    \  numbers_found.append(x)\n            # if the number is not in the list, increase\
    \ x\n            else:\n                x += 1\n    # if the last number in numbers_found\
    \ is even\n    # then return it\n    if numbers_found[len(numbers_found)-1] %\
    \ 2 == 0:\n        return numbers_found[len(numbers_found)-1]\n    else:\n   \
    \     return -1\n\n", "    >>> choose_num(3, 4)\n    5\n\n    Time Complexity:\
    \ O(1)\n    \"\"\"\n    while x < y:\n        if x % 2 == 0:\n            x =\
    \ x + 1\n        else:\n            x = x - 1\n    return x\n\n", "          \
    \  print(choose_num(1, 100)) # should print 100\n            print(choose_num(100,\
    \ 100)) # should print 100\n            print(choose_num(100, 1)) # should print\
    \ -1\n            print(choose_num(100, 500)) # should print 500\n           \
    \ print(choose_num(300, 300)) # should print -1\n            print(choose_num(300,\
    \ 500)) # should print 500\n            print(choose_num(1000, 100)) # should\
    \ print -1\n            print(choose_num(1000, 400)) # should print -1\n     \
    \       print(choose_num(10000, 10000)) # should print -1\n            \"\"\"\n\
    \    \"\"\"\n    if x >= y:\n        return -1\n    \n    elif x%2 != 0 and y%2\
    \ != 0:\n        return x if (x == y) else y\n    \n    elif x%2 != 0 and y%2\
    \ == 0:\n        return x if (x == y) else -1\n    \n    elif x%2 == 0 and y%2\
    \ != 0:\n        return -1\n    \n    else:\n        return -1\n", "    >>> print(choose_num(1,\
    \ 3))\n    3\n    \"\"\"\n    if x < y:\n        a = y\n        b = x\n    else:\n\
    \        a = x\n        b = y\n    while a < b:\n        mid = (a + b) // 2\n\
    \        if even_check(mid):\n            b = mid\n        else:\n           \
    \ a = mid\n    return a\n", "    >>> print(choose_num(1, 10)) \n    \"\"\"\n \
    \   # write code here\n    if x <= 0 or y <= 0:\n        return -1\n    elif x\
    \ % 2 != 0 or y % 2 != 0:\n        return -1\n    elif x != y and (x-y)%2 == 0\
    \ and (x+y)%2 == 0:\n        return x+y\n    elif (x-y)%2 != 0 and (x+y)%2 !=\
    \ 0:\n        return x-y\n    else:\n        return -1\n</cell>\n<cell>", "  \
    \          Input:\n            4\n            3\n\n            Output:\n     \
    \       5\n            \"\"\"\n\n    Function Description:\n            This function\
    \ is used to test the correctness of our algorithm\n            by comparing the\
    \ return value with the expected output.\n            Function Argument:\n   \
    \             x: an integer\n                y: an integer\n\n            Function\
    \ Return Value:\n                int: integer number that is in the range [x,\
    \ y] inclusive\n                    or -1 if there's no such number\n    \"\"\"\
    \n    while x > y:\n        x, y = y, x\n    if x == y:\n        return -1\n \
    \   return x + (y - x + 1) / 2\n", "    \"\"\"\n    if x == 0:\n        return\
    \ -1\n    if y == 0:\n        return -1\n    if x == 1 or y == 1 or x > y:\n \
    \       return -1\n    if x % 2 != 0:\n        return -1\n    if y % 2 != 0:\n\
    \        return -1\n    if x > y:\n        return -1\n    nums = []\n    for i\
    \ in range(1, y):\n        nums.append(i)\n    nums.append(y)\n    evens = []\n\
    \    for i in range(1, x):\n        if x % i == 0:\n            evens.append(i)\n\
    \    evens.append(x)\n    odd_nums = x + y\n    evens = evens[len(evens) // 2\
    \ :]\n    if evens:\n        evens = sorted(evens, reverse=True)\n        odd_nums\
    \ = odd_nums - evens[0]\n    if len(odds) > 1:\n        odd_nums = odd_nums -\
    \ odds[-1]\n    if odd_nums < nums[0]:\n        odd_nums = nums[0]\n    for i\
    \ in range(0, len(evens)):\n        if evens[i] < odd_nums:\n            return\
    \ -1\n    for i in range(0, len(nums)):\n        if nums[i] < odd_nums:\n    \
    \        return -1\n    evens.sort()\n    if evens:\n        return evens[0]\n\
    \    else:\n        return -1\n\n", "    x = 1\n    y = 10\n    \n    print(choose_num(x,\
    \ y))\n\n    \"\"\"\n    if x >= y and x >= y:\n        if x % 2 == 0:\n     \
    \       return x\n        else:\n            return y\n    else:\n        if y\
    \ % 2 == 0:\n            return y\n        else:\n            return x\n\n", " \
    \           x = 5\n            y = 10\n            n = choose_num(x, y)\n    \
    \        \n            # In this case, choose_num(5, 10) should return 5.\n  \
    \          # But choose_num(6, 10) should return -1, since there's no even\n \
    \           # number between 6 and 10.\n    \"\"\"\n    \n    # If the lower bound\
    \ of x and y is equal, return -1\n    if x == y:\n        return -1\n        \n\
    \    # Check if the number should be between x and y\n    # inclusive. If yes,\
    \ return this number. If not, return -1.\n    if x <= y and x >= 0 and y >= 0:\n\
    \        return x\n    else:\n        return -1\n        ", "    >>> choose_num(1,\
    \ 3)\n    3\n    >>> choose_num(1, 10)\n    -1\n    >>> choose_num(9, 15)\n  \
    \  5\n    >>> choose_num(-5, 0)\n    -1\n    >>> choose_num(5, -5)\n    -1\n \
    \   >>> choose_num(-5, -5)\n    -1\n    >>> choose_num(-5, -10)\n    -1\n    \"\
    \"\"\n\n    if x < y or x < 0 and y < 0:\n        return -1\n    if x > y:\n \
    \       return -1\n\n    evens = 1\n    for i in range(y):\n        if i % 2 ==\
    \ 0:\n            evens += 1\n        if evens == x:\n            return i\n \
    \   return -1\n\n", "            choose_num(5, 10)\n            > 15\n       \
    \     choose_num(1, 10)\n            > -1\n            \"\"\"\n    Args:\n   \
    \     x (int): First number in the range [x, y].\n        y (int): Second number\
    \ in the range [x, y].\n    Returns:\n        int: The biggest even number in\
    \ the given range.\n    Raises:\n        ValueError: If the given numbers are\
    \ invalid.\n    \"\"\"\n    if x <= y or x > y:\n        raise ValueError('x is\
    \ out of range, should be between {} and {}'\n                         .format(x,\
    \ y))\n\n    even_list = []\n    for a in range(1, y + 1):\n        if y % a ==\
    \ 0:\n            even_list.append(a)\n    if len(even_list) == 0:\n        return\
    \ -1\n\n    even = max(even_list)\n    biggest = even + even_list[-1]\n    count\
    \ = 0\n    for a in even_list:\n        if a <= biggest:\n            count +=\
    \ 1\n            if count == len(even_list):\n                return a\n    return\
    \ -1\n\n", "            choose_num(8, 10) --> 3\n            choose_num(20, 16)\
    \ --> 6\n            choose_num(20, 40) --> 10\n            choose_num(8, 10)\
    \ --> -1\n            \"\"\"\n    \"\"\"\n    if x < y:\n        x, y = y, x\n\
    \    count = 0\n    while x < y:\n        if x % 2 == 0 and y % 2 == 0:\n    \
    \        count += 1\n        if x % 2 == 0 and y % 2 == 1:\n            count\
    \ += 1\n        if x % 2 == 1 and y % 2 == 0:\n            count += 1\n      \
    \  if x % 2 == 1 and y % 2 == 1:\n            count += 1\n        x += 1\n   \
    \     y -= 1\n    if count > 2:\n        return -1\n    if count == 1:\n     \
    \   return int(y)\n    return int(x)\n\n", "    print(choose_num(5, 7))\n    print(choose_num(7,\
    \ 7))\n    print(choose_num(9, 10))\n    print(choose_num(9, 12))\n\n    print(choose_num(5,\
    \ 6))\n    print(choose_num(5, 9))\n    print(choose_num(5, 10))\n    print(choose_num(9,\
    \ 11))\n    \"\"\"\n    if x%2==0 and y%2==0:\n        if x>=y:\n            x=y\n\
    \        \n        while x%2==0 and y%2==0:\n            x=x//2\n            y=y//2\n\
    \        return x+y\n    elif x%2==0 and y%2!=0:\n        return -1\n    elif\
    \ x%2!=0 and y%2==0:\n        return -1\n    elif x%2!=0 and y%2!=0:\n       \
    \ x=x//2\n        y=y//2\n        return choose_num(x, y)\n    ", "          \
    \  choose_num(7, 10)\n\n            returns: 7\n            \"\"\"\n\n    Args:\n\
    \        x (int): the minimum number of the range\n        y (int): the maximum\
    \ number of the range\n\n    Returns:\n        int: the biggest even number in\
    \ the range\n    \"\"\"\n\n    while x < y:\n        if x % 2 == 0 and y % 2 ==\
    \ 0 and x > y:\n            return x\n        elif x % 2 == 0 and y % 2 == 0 and\
    \ x == y:\n            return x\n        elif x % 2 != 0 and y % 2 == 0 and x\
    \ > y:\n            return y\n        elif x % 2 != 0 and y % 2 == 0 and x ==\
    \ y:\n            return y\n        x += 1\n        y -= 1\n\n    return -1\n\n",
  "            choose_num(1, 10)\n            >5\n\n            choose_num(5, 10)\n\
    \            >5\n\n            choose_num(15, 10)\n            >10\n\n       \
    \     choose_num(10, 12)\n            >10\n\n            choose_num(10, 1)\n \
    \           >-1\n            \"\"\"\n    \n    if x is y:\n        return -1\n\
    \    elif x > y:\n        x, y = y, x\n    \n    lower_limit = x + y - 1\n   \
    \ upper_limit = x + y\n    \n    difference = lower_limit - upper_limit\n    \n\
    \    while difference % 2 == 0:\n        difference = difference // 2 \n    \n\
    \    if lower_limit % 2 == 1 and lower_limit != upper_limit:\n        lower_limit\
    \ = lower_limit + 1\n    \n    return lower_limit\n\n", "    >>>choose_num(7,\
    \ 5)\n    4\n    >>>choose_num(13, 15)\n    6\n    >>>choose_num(100, 200)\n \
    \   -1\n    >>>choose_num(-10, -5)\n    -1\n    >>>choose_num(100, -10)\n    -1\n\
    \    >>>choose_num(100, 400)\n    -1\n    \"\"\"\n    if x < 0 or y < 0 or x >\
    \ y or x % 2 != 0 or y % 2 != 0:\n        return -1\n    \n    if x % 2 == 0 and\
    \ y % 2 == 0:\n        return x\n    if x % 2 == 1 and y % 2 == 1:\n        return\
    \ y\n\n    count = 0\n    \n    while True:\n        x1 = x // 2\n        y1 =\
    \ y // 2\n        if x1 == 0 and y1 == 0 and count < 4:\n            return x\n\
    \        if x1 == 0 and y1 == 1 and count < 3:\n            return y\n       \
    \ if x1 == 1 and y1 == 0 and count < 3:\n            return x\n        if x1 ==\
    \ 1 and y1 == 1 and count < 2:\n            return y\n\n        x -= x1\n    \
    \    y -= y1\n        count += 1\n        ", "    \n    num = choose_num(12, 20)\n\
    \    # num = choose_num(8, 10)\n    if num != -1: \n        print(num, \"is the\
    \ biggest even number between 12 and 20\")\n    else: \n        print(\"There\
    \ is no even number between 12 and 20\")\n    \"\"\"\n    \n    if x > y: \n \
    \       x, y = y, x \n    \n    if x % 2 == 0: \n        return x \n    else:\
    \ \n        return choose_num(x + 1, y)\n", "    num = choose_num(1, 10)\n   \
    \ if num == -1:\n        print(\"No such number\")\n    else:\n        print(num)\n\
    \    \"\"\"\n    num = 0\n    while x >= y:\n        if x % 2 != 0:\n        \
    \    x = x + 1\n        else:\n            num = x\n            x = x - 1\n  \
    \  return num\n", "            choose_num(100, 50)\n            # returns 50\n\
    \n            choose_num(7, 12)\n            # returns -1\n            \"\"\"\n\
    \n    \"\"\"\n    if x % 2 == 0 or y % 2 == 0:\n        if x % 2 == 0 and y %\
    \ 2 == 0:\n            return max(x, y)\n        elif x % 2 == 0 and y % 2 !=\
    \ 0:\n            return x\n        elif x % 2 != 0 and y % 2 == 0:\n        \
    \    return y\n        else:\n            return -1\n\n    if x < y:\n       \
    \ if x % 2 == 0:\n            return choose_num(x - 1, y)\n        else:\n   \
    \         return choose_num(x, y - 1)\n    else:\n        if y % 2 == 0:\n   \
    \         return choose_num(x, y - 1)\n        else:\n            return choose_num(x\
    \ - 1, y)\n\n", "            >>> choose_num(10, 20)\n            4\n         \
    \   >>> choose_num(8, 10)\n            -1\n            >>> choose_num(8, 20)\n\
    \            10\n            \"\"\"\n\n    Args:\n        x (int): the starting\
    \ range of numbers.\n        y (int): the ending range of numbers.\n    \n   \
    \ Returns:\n        int: the biggest even number in the range [x, y] inclusive.\n\
    \    \n    Raises:\n        ValueError: if there is no such number. \n    \"\"\
    \"\n    if x <= y:\n        return -1\n\n    largest = min(x, y)\n    smaller\
    \ = max(x-1, y-1)\n\n    while smaller <= largest:\n        if (smaller + largest)\
    \ %2 ==0:\n            return smaller # even\n        smaller += 1\n    \n   \
    \ return -1\n", "    \n    >>> choose_num(2, 6)\n    6\n    \"\"\"\n\n    even\
    \ = True\n    if y > x:\n        even = False\n\n    candidate = y\n    while\
    \ even and candidate <= x:\n        candidate *= 2\n        even ^= True\n\n \
    \   if even and candidate == x:\n        candidate -= 1\n    return candidate\n\
    \n", "            print(choose_num(1, 2))\n            print(choose_num(4, 4))\n\
    \            print(choose_num(10, 10))\n            print(choose_num(-5, 2))\n\
    \            print(choose_num(-3, 10))\n            \"\"\"\n    Output:\n    \
    \        2\n            4\n            10\n            -1\n            -1\n  \
    \  \"\"\"\n    if x < 0 or y < 0 or x < y or y > x:\n        return -1\n    if\
    \ x == y:\n        return -1\n    elif x % 2 == 0:\n        even = True\n    \
    \    while x % 2 == 0 and y % 2 == 0:\n            x = x // 2\n            y =\
    \ y // 2\n            even = False\n        if even:\n            return x\n \
    \       else:\n            return y\n    else:\n        even = True\n        while\
    \ x % 2 == 1 and y % 2 == 0:\n            x = x // 2\n            y = y // 2\n\
    \            even = False\n        if even:\n            return y\n        else:\n\
    \            return x\n\n", "    print(choose_num(4,6))\n    >> 6\n\n    print(choose_num(4,0))\n\
    \    >> -1\n\n    print(choose_num(4,3))\n    >> 3\n    \"\"\"\n    return -1\n\
    </code>\n<|/ a dscore=0 |>\n<| a tags=python,python-3.x |>\n<code>", "       \
    \     choose_num(1, 3)\n            choose_num(3, 2)\n            choose_num(3,\
    \ 7)\n            choose_num(4, 9)\n            choose_num(6, 5)\n           \
    \ choose_num(6, 8)\n            choose_num(6, 12)\n            choose_num(6, 15)\n\
    \            choose_num(7, 5)\n            choose_num(8, 5)\n            choose_num(8,\
    \ 7)\n            choose_num(8, 9)\n            choose_num(9, 8)\n           \
    \ choose_num(9, 11)\n            choose_num(9, 14)\n            choose_num(9,\
    \ 16)\n            choose_num(10, 8)\n            choose_num(10, 12)\n       \
    \     choose_num(10, 15)\n            choose_num(10, 17)\n            choose_num(11,\
    \ 8)\n            choose_num(11, 12)\n            choose_num(11, 15)\n       \
    \     choose_num(11, 17)\n            choose_num(12, 9)\n            choose_num(12,\
    \ 15)\n            choose_num(12, 18)\n            choose_num(12, 19)\n      \
    \      choose_num(13, 16)\n            choose_num(14, 11)\n            choose_num(14,\
    \ 17)\n            choose_num(14, 19)\n            choose_num(14, 20)\n      \
    \      choose_num(15, 16)\n            choose_num(15, 17)\n            choose_num(15,\
    \ 18)\n            choose_num(15, 19)\n            choose_num(15, 20)\n      \
    \      choose_num(16, 13)\n            choose_num(16, 15)\n            choose_num(16,\
    \ 18)\n            choose_num(16, 20)\n            choose_num(16, 23)\n      \
    \      choose_num(17, 14)\n            choose_num(17, 20)\n            choose_num(17,\
    \ 23)\n            choose_num(17, 24)\n            choose_num(17, 25)\n      \
    \      choose_num(17, 26)\n            choose_num(17, 27)\n            choose_num(17,\
    \ 28)\n            choose_num(18, 17)\n            choose_num(18, 20)\n      \
    \      choose_num(18, 21)\n            choose_num(18, 24)\n            choose_num(18,\
    \ 27)\n            choose_num(18, 28)\n            choose_num(18, 29)\n      \
    \      choose_num(18, 30)\n            choose_num(18, 31)\n            choose_num(19,\
    \ 18)\n            choose_num(19, 20)\n            choose_num(19, 21)\n      \
    \      choose_num(", "    >>> choose_num(10, 15)\n    >>> choose_num(10, 30)\n\
    \    >>> choose_num(10, 50)\n    >>> choose_num(10, 100)\n    >>> choose_num(10,\
    \ 400)\n    >>> choose_num(10, 600)\n    >>> choose_num(10, 800)\n    >>> choose_num(10,\
    \ 100)\n    >>> choose_num(10, 500)\n    >>> choose_num(10, 200)\n    \"\"\"\n\
    \    i = y\n    while x > 0:\n        if x % 2 == 0:\n            x //= 2\n  \
    \      else:\n            i *= 2\n            x -= 1\n            if x > y:\n\
    \                return -1\n    return i\n\n", "            print(choose_num(1,\
    \ 10))\n            print(choose_num(12, 20))\n            print(choose_num(15,\
    \ 6))\n            print(choose_num(9, 15))\n            print(choose_num(5, -1))\n\
    \            print(choose_num(-5, -1))\n            print(choose_num(-5, 3))\n\
    \            print(choose_num(6, 1))\n            print(choose_num(1, 1))\n  \
    \          print(choose_num(1, 0))\n            print(choose_num(1, 100))\n  \
    \          print(choose_num(100, 1))\n            \"\"\"\n    \"\"\"\n    if x\
    \ < y and x % 2 == 0:\n        return y\n    else:\n        if y % 2 == 0 and\
    \ y >= x:\n            return y\n        else:\n            if y < x:\n      \
    \          return -1\n            else:\n                return y\n\n", "    \
    \        choose_num(2, 4)\n            choose_num(12, 8)\n            choose_num(12,\
    \ 11)\n            choose_num(-2, 4)\n            choose_num(-5, 11)\n       \
    \     choose_num(-5, 12)\n            choose_num(-9, 12)\n            choose_num(-5,\
    \ 0)\n            choose_num(1, 1)\n            choose_num(3, 5)\n           \
    \ choose_num(2, 1)\n            choose_num(-9, 1)\n            choose_num(-3,\
    \ -1)\n            choose_num(-1, 9)\n            choose_num(6, -2)\n        \
    \    choose_num(1, -4)\n            choose_num(-3, -7)\n            choose_num(-2,\
    \ -2)\n            choose_num(-9, -9)\n            choose_num(-6, -6)\n      \
    \      choose_num(-3, -4)\n            choose_num(-2, -6)\n            choose_num(-2,\
    \ -9)\n            choose_num(-3, -8)\n            choose_num(-9, -9)\n      \
    \      choose_num(-3, -1)\n            choose_num(9, 9)\n            choose_num(5,\
    \ 5)\n            choose_num(1, 3)\n            choose_num(3, 3)\n           \
    \ choose_num(1, -2)\n            choose_num(0, -3)\n            choose_num(-3,\
    \ -3)\n            choose_num(-2, -3)\n            choose_num(-2, -2)\n      \
    \      choose_num(-4, -1)\n            choose_num(-3, -4)\n            choose_num(-3,\
    \ -6)\n            choose_num(-9, -8)\n            choose_num(-3, -2)\n      \
    \      choose_num(11, 11)\n            choose_num(8, 8)\n            choose_num(7,\
    \ 7)\n            choose_num(0, 6)\n            choose_num(12, 12)\n         \
    \   choose_num(0, -5)\n            choose_num(-3, -5)\n            choose_num(-2,\
    \ -5)\n            choose_num(-2, -3)\n            choose_num(-4, -2)\n      \
    \      choose_num(-4, -1)\n            choose_num(-6, -2)\n            choose_num(-4,\
    \ -2)\n            choose_num(-3, -7)\n            choose_num(-3, -5)\n      \
    \      choose_num(-2, -4)\n            choose_num(-3, -4)\n            choose_num(-9,\
    \ -4)\n            choose_num(-6, -4)\n            choose_num(-9, -6)\n      \
    \      choose_num(-9, -3)\n            cho", "            print(choose_num(4,\
    \ 7))\n            print(choose_num(20, 1))\n            print(choose_num(20,\
    \ 100))\n            print(choose_num(100, 20))\n    \"\"\"\n    # code goes here\n\
    \    if y <= x:\n        return -1\n    if y > x and y % 2 == 0:\n        return\
    \ y\n    while x <= y:\n        x += 1\n        if x % 2 == 0:\n            return\
    \ x\n", "            choose_num(7, 11)\n            Out[13]: 21\n\n          \
    \  choose_num(7, -1)\n            Out[14]: -1\n            \"\"\"\n    \"\"\"\n\
    \    if x >= y:\n        if x % 2 == 0:\n            return x\n        else:\n\
    \            return y\n    if y % 2 == 0:\n        return y\n    if x % 2 == 0\
    \ and y % 2 == 0:\n        if x % 4 == 0 and y % 4 == 0:\n            if x % 8\
    \ == 0 and y % 8 == 0:\n                if x % 16 == 0 and y % 16 == 0:\n    \
    \                return x\n                else:\n                    return y\n\
    \            else:\n                return y\n        else:\n            return\
    \ y\n    else:\n        return -1\n\n", "            print(choose_num(1, 6)) #\
    \ prints 6\n            print(choose_num(7, 8)) # prints 8\n            print(choose_num(7,\
    \ 9)) # prints -1\n            print(choose_num(-1, 6)) # prints 6\n    \"\"\"\
    \n    biggest = 0\n    if x > y:\n        biggest = y\n    else:\n        biggest\
    \ = x\n    # prints \"biggest is 7 and x is 7\"\n    # prints \"biggest is 7 and\
    \ y is 8\"\n    # prints \"biggest is -1 and x is 6\"\n    # prints \"biggest\
    \ is -1 and y is -1\"\n    while biggest >= 0 and x >= biggest and y > biggest:\n\
    \        biggest -= 1\n        if biggest < 0:\n            return -1\n    if\
    \ x >= biggest:\n        return -1\n    if y >= biggest:\n        return -1\n\
    \    return biggest\n\n", "    >>> choose_num(1, 4)\n    2\n    >>> choose_num(5,\
    \ 10)\n    5\n    \"\"\"\n    if x > y:\n        x, y = y, x\n    \n    if x %\
    \ 2 == 0:\n        lower = x // 2\n        upper = x + 1\n    else:\n        lower\
    \ = x + 1\n        upper = x // 2\n    \n    if y % 2 == 0:\n        lower2 =\
    \ y // 2\n        upper2 = y + 1\n    else:\n        lower2 = y + 1\n        upper2\
    \ = y // 2\n    \n    lower = min(lower, lower2)\n    upper = max(upper, upper2)\n\
    \    \n    return lower\n\n", "            choose_num(2, 4)\n            \"\"\"\
    \n\n            Output: 4\n            Example: \n            \"\"\"\n       \
    \     choose_num(10, 2)\n            \"\"\"\n\n            Output: 2\n       \
    \     \n            Args:\n            x (int): the x value \n            y (int):\
    \ the y value \n\n            Returns:\n            int: biggest even number in\
    \ [x, y] inclusive\n    \"\"\"\n    even_number = -2\n    \n    even_number +=\
    \ x if x <= y else y\n\n    return even_number\n\n", "            choose_num(4,\
    \ 8)\n            choose_num(8, 4)\n            choose_num(6, 8)\n           \
    \ choose_num(8, 6)\n            choose_num(20, 30)\n            choose_num(20,\
    \ 20)\n            choose_num(30, 30)\n            choose_num(30, 0)\n       \
    \     choose_num(-30, 0)\n            choose_num(-30, 30)\n            choose_num(0,\
    \ 30)\n            choose_num(0, 0)\n            choose_num(-1, 1)\n         \
    \   choose_num(-2, 2)\n            choose_num(-3, 3)\n            choose_num(-4,\
    \ 4)\n            choose_num(-5, 5)\n            choose_num(-6, 6)\n         \
    \   choose_num(-7, 7)\n            choose_num(0, -30)\n            choose_num(0,\
    \ -1)\n            choose_num(0, 1)\n            choose_num(0, 0)\n          \
    \  choose_num(0, 0)\n            choose_num(-1, -1)\n            choose_num(-1,\
    \ -2)\n            choose_num(-1, -3)\n            choose_num(-1, -4)\n      \
    \      choose_num(-1, -5)\n            choose_num(-1, -6)\n            choose_num(-1,\
    \ -7)\n            choose_num(-1, -30)\n            choose_num(-1, -9)\n     \
    \       choose_num(-1, -8)\n            choose_num(-1, -7)\n            choose_num(-1,\
    \ -7)\n            choose_num(-1, -7)\n            choose_num(-1, -7)\n      \
    \      choose_num(-1, -7)\n            choose_num(-1, -7)\n            choose_num(-1,\
    \ -7)\n            choose_num(-1, -7)\n            choose_num(-1, -7)\n      \
    \      choose_num(-1, -7)\n            choose_num(-1, -7)\n            choose_num(-1,\
    \ -7)\n            choose_num(-1, -7)\n            choose_num(-1, -7)\n      \
    \      choose_num(-1, -7)\n            choose_num(-1, -7)\n            choose_num(-1,\
    \ -7)\n            choose_num(-1, -7)\n            choose_num(-1, -7)\n      \
    \      choose_num(-1, -7)\n            choose_num(-1, -7)\n            choose_num(-1,\
    \ -7)\n            choose_num(-1, -7)\n            choose_num(-1, -7)\n      \
    \      choose_num(-1, -7)\n            choose_num(-1, -7)\n            choose_num(-1,\
    \ -7)\n            choose_num(-1, -7)\n            choose_num(-1, -7)\n      \
    \      choose_num(-1, -7)\n            choose_num(-1, -7)\n            choose_num",
  "            print choose_num(13, 8)\n            #> 13\n            print choose_num(13,\
    \ 4)\n            #> -1\n            print choose_num(10, 5)\n            #> 13\n\
    \            \"\"\"\n\n    \n    Args:\n        x (int): a positive integer\n\
    \        y (int): a positive integer\n\n    Returns:\n        int: the biggest\
    \ even integer number in the range [x, y] inclusive\n    \"\"\"\n    if x > 0:\n\
    \        y = y - 1\n        while y > 0:\n            x, y = y // 2, x\n     \
    \   if y & 1:\n            return x\n        else:\n            return -1\n  \
    \  else:\n        return -1\n    ", "    >>> choose_num(7,2)\n    7\n    \"\"\"\
    \n    if x >= y:\n        return -1\n    elif x >= 2:\n        return x // 2\n\
    \    elif y >= 2:\n        return y // 2\n    elif x % 2 == 0 and y % 2 == 0:\n\
    \        return x // 2\n    elif x % 2 != 0:\n        return y // 2\n    else:\n\
    \        return -1\n", "            choose_num(8, 1)\n            >>>3\n     \
    \       choose_num(7, 2)\n            >>>5\n            choose_num(12, 3)\n  \
    \          >>>-1\n    \"\"\"\n    biggest_num = -1\n    \n    if x > y:\n    \
    \    biggest_num = x\n    \n    elif y == x or x == y:\n        biggest_num =\
    \ y\n        \n    elif x <= y:\n        biggest_num = x\n        for i in range(y,\
    \ x+2):\n            if i%2 == 0:\n                biggest_num = biggest_num *\
    \ i\n                \n    else:\n        biggest_num = x\n        for i in range(y,\
    \ x+2):\n            if i%2 != 0:\n                biggest_num = biggest_num *\
    \ i\n    \n    return biggest_num\n", "    >>> choose_num(1, 2)\n    2\n    >>>\
    \ choose_num(2, 1)\n    1\n    >>> choose_num(1, 2)\n    -1\n    \"\"\"\n    if\
    \ x > y:\n        x = y\n    elif y > x:\n        y = x\n    \n    while x <=\
    \ y:\n        if x % 2 == 0:\n            x += 1\n        elif y % 2 == 0:\n \
    \           y -= 1\n        elif x % 2 == 1 and y % 2 == 1:\n            x +=\
    \ y\n            y -= 1\n        else:\n            x += 1\n            y -= 1\n\
    \    return x if (x == y) else -1\n", "            print(choose_num(1, 4))\n \
    \           print(choose_num(10, 11))\n            print(choose_num(100, 105))\n\
    \            print(choose_num(100, 9))\n            print(choose_num(1, 4))\n\
    \            \"\"\"\n    Will print:\n            4\n            -1\n        \
    \    -1\n            -1\n            4\n    \"\"\"\n    \n    # Checks if the\
    \ number is in the range, if not then return -1\n    if x > y or x<0 or y<0:\n\
    \        return -1\n\n    # Finds the odd numbers bigger than the numbers in the\
    \ range\n    odd_numbers = []\n    for n in range(x, y+1):\n        if n % 2 ==\
    \ 1:\n            odd_numbers.append(n)\n    \n    # Checks if the number is in\
    \ the range, if not then return -1\n    if len(odd_numbers) == 0:\n        return\
    \ -1\n    \n    # Finds the even numbers bigger than the numbers in the range\n\
    \    even_numbers = []\n    for n in range(x, y, 2):\n        if n % 2 == 0:\n\
    \            even_numbers.append(n)\n\n    # Checks if there are even numbers\
    \ in the range\n    if len(even_numbers) == 0:\n        return -1\n    \n    #\
    \ Finds the biggest even number in the range\n    max_odd_number = max(odd_numbers)\n\
    \    \n    # Checks if there is an even number bigger than the numbers in the\
    \ range\n    if max_odd_number > len(even_numbers):\n        return -1\n    \n\
    \    # Finds the biggest odd number in the range\n    max_even_number = max(even_numbers)\n\
    \    \n    # Checks if there is an odd number bigger than the numbers in the range\n\
    \    if max_even_number > len(odd_numbers):\n        return -1\n    \n    # Returns\
    \ biggest even number if the two numbers are equal\n    if max_odd_number == max_even_number:\n\
    \        return max_odd_number\n    \n    # Returns -1\n    return -1\n</cell>\n\
    <cell>", "    x = choose_num(3,20)\n    print(x)\n\n    y = choose_num(20,30)\n\
    \    print(y)\n    \"\"\"\n    if y > x:\n        temp = x\n        x = y\n  \
    \      y = temp\n    while x > y:\n        if x % 2 == 0:\n            x = x -\
    \ 1\n        else:\n            y = y + 1\n    if x == y and x > 0:\n        x\
    \ = x + 1\n    return x\n\n", "    num = choose_num(3, 11)\n    print(num)\n \
    \   \"\"\"\n    if x <= y or y == 0:\n        return -1\n    elif x > y:\n   \
    \     return -1\n    else:\n        even = 1\n        biggest = y\n        smaller\
    \ = x\n        while(even > 0):\n            biggest = biggest + 1 if biggest\
    \ % 2 == 0 else biggest / 2\n            even = even - 1\n            smaller\
    \ = smaller - 1 if (smaller % 2 == 0 and biggest % 2 != 0) \\\n              \
    \                      else smaller\n        return biggest\n\n", "    >>> choose_num(1,\
    \ 2)\n    1\n    >>> choose_num(4, 1)\n    4\n    >>> choose_num(2, 2)\n    2\n\
    \    >>> choose_num(7, 5)\n    7\n    \"\"\"\n    if x <= y and y > x:\n     \
    \   for z in range(x, y + 1):\n            if z % 2 == 0:\n                return\
    \ z\n    else:\n        return -1\n\n", "            print(choose_num(6, 5))\n\
    \            # output: 7\n            print(choose_num(3, 2))\n            # output:\
    \ 5\n            print(choose_num(-2, 3))\n            # output: -1\n        \
    \    print(choose_num(1, 0))\n            # output: -1\n            print(choose_num(-1,\
    \ 1))\n            # output: 0\n            print(choose_num(-1, -1))\n      \
    \      # output: -1\n\n    \"\"\"\n    if x >= y:\n        return -1\n    else:\n\
    \        if x % 2 == 0:\n            return x // 2\n        else:\n          \
    \  return x - 1\n\n", "            choose_num(1, 10)\n            >> 13\n    \
    \        choose_num(9, 10)\n            >> -1\n            \"\"\"\n    \"\"\"\n\
    \    even = True\n    if x > y:\n        x, y = y, x\n    for z in range(y, 0,\
    \ -2):\n        if x % z == 0 and x // z >= y - 2:\n            return z\n   \
    \     elif even:\n            if x % z == 0 and x // z >= y - 1:\n           \
    \     return z\n            elif x % z == 0 and x // z <= y:\n               \
    \ return z\n            even = False\n    return -1\n\n", "            Input:\
    \ x = 1, y = 5\n            Output: 4\n            Explanation: 1 is the biggest\
    \ even number in [1, 5]\n            \"\"\"\n\n    Parameters:\n    x - a positive\
    \ integer\n    y - a positive integer\n    Returns:\n    x - the biggest even\
    \ number in the range [x, y] inclusive\n    \"\"\"\n\n    while x < y:\n     \
    \   if x % 2 == 0:\n            x += 2\n            if x % 2 == 0:\n         \
    \       return x\n            if x % 2 == 1:\n                x += 1\n       \
    \         return x\n            if x % 2 == 1:\n                x += 1\n     \
    \           if x % 2 == 0:\n                    return x\n                x +=\
    \ 2\n                if x % 2 == 0:\n                    return x\n          \
    \      x += 1\n                if x % 2 == 0:\n                    return x\n\
    \                x += 2\n                if x % 2 == 0:\n                    return\
    \ x\n                x += 1\n                if x % 2 == 0:\n                \
    \    return x\n                x += 1\n                if x % 2 == 0:\n      \
    \              return x\n                x += 1\n                if x % 2 == 0:\n\
    \                    return x\n                x += 1\n                if x %\
    \ 2 == 0:\n                    return x\n                x += 1\n            \
    \    if x % 2 == 0:\n                    return x\n                x += 1\n  \
    \              if x % 2 == 0:\n                    return x\n                x\
    \ += 1\n                if x % 2 == 0:\n                    return x\n       \
    \         x += 2\n                if x % 2 == 0:\n                    return x\n\
    \                x += 1\n                if x % 2 == 0:\n                    return\
    \ x\n                x += 1\n                if x % 2 == 0:\n                \
    \    return x\n                x += 1\n                if x % 2 == 0:\n      \
    \              return x\n                x += 1\n                if x % 2 == 0:\n\
    \                    return x\n                x += 1\n                if x %\
    \ 2 == 0:\n                    return x\n                x += 2\n            \
    \    if x % 2 == 0:\n                    return x\n                x += 1\n  \
    \              if x % 2 == 0:\n                    return x\n                x\
    \ += 1\n                if x % 2 == 0:\n                    return x\n       \
    \         x += 1\n                if x % 2 == 0:\n                    return x\n\
    \                x += 1\n                if x % 2 == 0:\n                    return\
    \ x\n                x += 1\n                if x % 2 == 0:\n                \
    \    return x\n                x += 2\n                if x % 2 == 0:\n      \
    \              return x\n                x += 1\n                if x % 2 == 0:\n\
    \                    return x\n                x += 1\n                if x %\
    \ 2 == 0:\n                    return x\n                x += 1\n            \
    \    if x % 2 == 0:\n                    return x\n                x += 1\n  \
    \              if x % 2 == 0:\n                    return x\n                x\
    \ += 1\n                if x % 2 == 0:\n                    return x\n       \
    \         x += 2\n                if x % 2 == 0:\n                    return x\n\
    \                x += 1\n                if x % 2 == 0:\n                    return\
    \ x\n                x += 1\n                if ", "    >>> choose_num(7, 10)\n\
    \    9\n    >>> choose_num(7, 13)\n    -1\n    >>> choose_num(7, 14)\n    -1\n\
    \    \"\"\"\n    if x >= y:\n        return -1\n    if y % 2 == 0:\n        if\
    \ x % 2 == 0:\n            return -1\n        return x\n    elif x % 2 == 0 and\
    \ y % 2 != 0:\n        return -1\n    else:\n        if x % 2 == 0 and y % 2 !=\
    \ 0:\n            return x - 1\n        return x + 1\n\n", "    >>> choose_num(40,\
    \ 10)\n    40\n    >>> choose_num(10, 5)\n    5\n    >>> choose_num(10, 11)\n\
    \    10\n    >>> choose_num(40, 30)\n    -1\n    \"\"\"\n\n    if x > y:\n   \
    \     x, y = y, x\n\n    if x % 2 == 0:\n        if y % 2 == 0:\n            if\
    \ y % 4 == 0:\n                return y\n            else:\n                return\
    \ -1\n        else:\n            return x\n    else:\n        if y % 2 == 0:\n\
    \            if y % 4 == 0:\n                return -1\n            else:\n  \
    \              return y\n        else:\n            return x\n\n", "         \
    \   \n            print(choose_num(1, 8))\n            print(choose_num(1, 5))\n\
    \            print(choose_num(2, 8))\n            print(choose_num(3, 2))\n  \
    \          print(choose_num(5, 5))\n            print(choose_num(8, 8))\n    \
    \        print(choose_num(10, 7))\n            print(choose_num(-1, 2))\n    \
    \        print(choose_num(-10, 9))\n            \"\"\"\n    \n    The output of\
    \ the above example is:\n            \n            8\n            5\n        \
    \    8\n            2\n            -1\n            -1\n            -1\n      \
    \      -1\n            -1\n            -1\n            -1\n            -1\n  \
    \          -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n", "            choose_num(10, 20)\n        \
    \    >> 20\n            choose_num(10, 4)\n            >> -1\n            \"\"\
    \"\n    Args:\n        x (int, required): the first input of the function\n  \
    \      y (int, required): the second input of the function\n    \"\"\"\n    if\
    \ y >= x:\n        return -1\n    else:\n        count = 0\n        \n       \
    \ while y >= x:\n            count += 1\n            y -= 1\n            if y\
    \ >= x:\n                return y\n        \n        return -1\n", "    >>>choose_num(5,\
    \ 10)\n    5\n    >>>choose_num(5, 3)\n    -1\n    \"\"\"\n    if x >= y and y\
    \ >= x:\n        if x % 2 == y % 2 == 0:\n            return x\n        else:\n\
    \            return y\n    if y >= x:\n        return -1\n    if x % 2 == y %\
    \ 2 == 0:\n        return y\n    else:\n        return x\n", "    choose_num(3,\
    \ 7)\n    -> 6\n    choose_num(4, 7)\n    -> -1\n            \"\"\"\n    \"\"\"\
    \n    choose_num(x, y)\n    if x > y:\n        if x % 2 == 0 or y % 2 == 0:\n\
    \            return x\n        else:\n            return y\n    else:\n      \
    \  if y % 2 == 0 or x % 2 == 0:\n            return y\n        else:\n       \
    \     return x\n", "            \n            choose_num(7, 3)\n            \n\
    \            >>>4\n            \n            choose_num(7, 4)\n            \n\
    \            >>>4\n            \n            choose_num(7, 5)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 6)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 7)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 8)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 9)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 10)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 11)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 12)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 13)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 14)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 15)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 16)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 17)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 18)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 19)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 20)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 21)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 22)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 23)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 24)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 25)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 26)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 27)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 28)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 29)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 30)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 31)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 32)\n            \n\
    \            >>>-1\n            \n            choose_num(7, 33)\n            \n\
    \            >>>-1\n            \n            choose_num(7, ", "    >>> choose_num(10,\
    \ 5)\n    5\n    >>> choose_num(9, 5)\n    -1\n    \"\"\"\n    while x >= y:\n\
    \        x = x - y\n        if x % 2 == 0:\n            return x\n    return -1\n",
  "            choose_num(2, 7)\n            choose_num(12, 13)\n            choose_num(-12,\
    \ -1)\n            choose_num(13, -13)\n            choose_num(-2, -5)\n     \
    \       choose_num(2, -6)\n            choose_num(-7, -8)\n            choose_num(-8,\
    \ -9)\n            choose_num(-7, -6)\n            choose_num(-1, -4)\n      \
    \      choose_num(-3, -4)\n            choose_num(-2, -4)\n            choose_num(-5,\
    \ -4)\n            choose_num(-3, -4)\n            choose_num(1, -4)\n       \
    \     choose_num(2, -4)\n            choose_num(-9, -4)\n            choose_num(-8,\
    \ -4)\n            choose_num(-7, -4)\n            choose_num(-3, -4)\n      \
    \      choose_num(-5, -4)\n            choose_num(-2, -4)\n            choose_num(-9,\
    \ -4)\n            choose_num(-8, -4)\n            choose_num(-6, -4)\n      \
    \      choose_num(-3, -4)\n            choose_num(-5, -4)\n            choose_num(-2,\
    \ -4)\n            choose_num(-9, -4)\n            choose_num(-8, -4)\n      \
    \      choose_num(-6, -4)\n            choose_num(-3, -4)\n            choose_num(-5,\
    \ -4)\n            choose_num(-2, -4)\n            choose_num(-9, -4)\n      \
    \      choose_num(-8, -4)\n            choose_num(-6, -4)\n            choose_num(-3,\
    \ -4)\n            choose_num(-5, -4)\n            choose_num(-2, -4)\n      \
    \      choose_num(-9, -4)\n            choose_num(-8, -4)\n            choose_num(-6,\
    \ -4)\n            choose_num(-3, -4)\n            choose_num(-5, -4)\n      \
    \      choose_num(-2, -4)\n            choose_num(-9, -4)\n            choose_num(-8,\
    \ -4)\n            choose_num(-6, -4)\n            choose_num(-3, -4)\n      \
    \      choose_num(-5, -4)\n            choose_num(-2, -4)\n            choose_num(-9,\
    \ -4)\n            choose_num(-8, -4)\n            choose_num(-6, -4)\n      \
    \      choose_num(-3, -4)\n            choose_num(-5, -4)\n            choose_num(-2,\
    \ -", "    >>> choose_num(40, 50)\n    20\n    >>> choose_num(50, 50)\n    -1\n\
    \    \"\"\"\n\n    # Initialize a variable to hold the result\n    res: int =\
    \ 0\n\n    # Find the smaller number between x and y, i.e. the number that\n \
    \   # divides the biggest even number between x and y\n    while x > y:\n    \
    \    if x % 2 == 0:\n            # x divides evenly, so add it to res first\n\
    \            res = x + res\n            # Then subtract one from x to make it\
    \ even\n            x -= 1\n        else:\n            # x does not divide evenly,\
    \ so add it to res first\n            res = y + res\n            # Then subtract\
    \ one from y to make it even\n            y -= 1\n    return res\n\n", "    x,\
    \ y = 2, 5\n    print(choose_num(x, y))\n    x, y = 5, 3\n    print(choose_num(x,\
    \ y))\n    x, y = 1, 2\n    print(choose_num(x, y))\n    x, y = 1, 5\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 1\n    print(choose_num(x, y))\n    x, y = 2, 3\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 3\n    print(choose_num(x, y))\n    x, y = 5, 2\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 6\n    print(choose_num(x, y))\n    x, y = 5, 4\n    print(choose_num(x,\
    \ y))\n    x, y = 10, 10\n    print(choose_num(x, y))\n    x, y = 10, 5\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 10\n    print(choose_num(x, y))\n    x, y = 1, 5\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 1\n    print(choose_num(x, y))\n    x, y = 5, 2\n    print(choose_num(x,\
    \ y))\n    x, y = 10, 10\n    print(choose_num(x, y))\n    x, y = 10, 5\n    print(choose_num(x,\
    \ y))\n    x, y = 10, 10\n    print(choose_num(x, y))\n    x, y = 2, 3\n    print(choose_num(x,\
    \ y))\n    x, y = 1, 10\n    print(choose_num(x, y))\n    x, y = 1, 4\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 4\n    print(choose_num(x, y))\n    x, y = 1, 2\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 4\n    print(choose_num(x, y))\n    x, y = 5, 3\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 3\n    print(choose_num(x, y))\n    x, y = 10, 6\n    print(choose_num(x,\
    \ y))\n    x, y = 10, 4\n    print(choose_num(x, y))\n    x, y = 5, 5\n    print(choose_num(x,\
    \ y))\n    x, y = 2, 5\n    print(choose_num(x, y))\n    x, y = 10, 2\n    print(choose_num(x,\
    \ y))\n    x, y = 10, 6\n    print(choose_num(x, y))\n    x, y = 1, 3\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 6\n    print(choose_num(x, y))\n    x, y = 5, 4\n    print(choose_num(x,\
    \ y))\n    x, y = 1, 2\n    print(choose_num(x, y))\n    x, y = 5, 2\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 3\n    print(choose_num(x, y))\n    x, y = 5, 2\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 1\n    print(choose_num(x, y))\n    x, y = 5, 2\n    print(choose_num(x,\
    \ y))\n    x, y = 5, 3\n    print(choose_", "            n = choose_num(1, 2)\n\
    \            print(n)\n            \"\"\"\n            Output:\n            4\n\
    \    \"\"\"\n    \n    if x > y:\n        x,y = y,x\n        \n    if x%2 == 0:\n\
    \        x = x/2\n    \n    if y%2 == 0:\n        y = y/2\n    \n    \n    for\
    \ i in range(x,y+1):\n        if i%2 == 0 and i>0:\n            return i\n   \
    \ \n    return -1\n    \nprint(choose_num(100,200))\n</cell>\n<cell>", "     \
    \       Input: x = 1, y = 2\n            Output: 2\n\n            Input: x = 1,\
    \ y = 3\n            Output: -1\n            \"\"\"\n    \"\"\"\n    if x > y:\n\
    \        x = y\n    if x == y:\n        return x\n    if x%2 == 0:\n        if\
    \ x != 1 and x != 3:\n            return x\n        else:\n            return\
    \ -1\n\n    if y%2 == 0:\n        if y != 1 and y != 3:\n            return y\n\
    \        else:\n            return -1\n\n    for num in range((x//2), y+1):\n\
    \        if num % 2 == 0:\n            if num != 1 and num != 3:\n           \
    \     return num\n\n    return -1\n\n\n\n@numba.jit(nopython=True)", "       \
    \     choose_num(1, 6)\n            Output: 6\n            choose_num(1, 6)\n\
    \            Output: 6\n            choose_num(1, 4)\n            Output: -1\n\
    \            \"\"\"\n    \"\"\"\n    \n    if x == 0 and y == 0:\n        return\
    \ 0\n    elif x < 0:\n        return -1\n    elif y < 0:\n        return -1\n\
    \    elif y == 0:\n        return -1\n    else:\n        if x % 2 == 0:\n    \
    \        return x // 2 + x\n        else:\n            return x + y // 2\n\n",
  "    >>>> choose_num(100, 200)\n    200\n    >>>> choose_num(100, 200)\n    -1\n\
    \    >>>> choose_num(100, 200)\n    -1\n    >>>> choose_num(100, 199)\n    -1\n\
    \    >>>> choose_num(100, 200)\n    -1\n    >>>> choose_num(100, -1)\n    -1\n\
    \    \"\"\"\n    if x>=0 and y>=0 and x<=y and y>=x:\n        if y%2 ==0:\n  \
    \          for n in range(x,y,2):\n                if n%2 ==0 :\n            \
    \        return n\n            return -1\n        if x%2 ==0:\n            for\
    \ n in range(x,y,2):\n                if n%2 ==1 :\n                    return\
    \ n\n            return -1\n    else :\n        return -1\n</code>\n<|/ a dscore=0\
    \ |>\n<| c |>\nPlease don't post \"try this\" answers. Especially when it is an\
    \ answer that doesn't help the OP or future readers. Please try to add some explanation\
    \ to your answer.\n<|/ c |>\n<| c |>\nThanks , I added some explanation to the\
    \ code and also added some examples on how to use.\n<|/ c |>\n<| a tags=python,python-3.x,function\
    \ |>\nThis simple code will find the biggest even number that occurs twice in\
    \ a given range.\n<code>", "            choose_num(10, 15)  # should return 10\n\
    \            choose_num(7, 9)    # should return 7\n            choose_num(7,\
    \ 7)     # should return -1\n            \"\"\"\n    Args:\n        x: Positive\
    \ integer\n        y: Positive integer\n\n    Returns:\n        The biggest even\
    \ number in the range [x, y] inclusive.\n\n    \"\"\"\n    if x >= y:\n      \
    \  return -1\n    elif y >= x:\n        return x\n    \n    while True:\n    \
    \    # find smallest number\n        small = min(x, y)\n        # find smallest\
    \ number that is even\n        small2 = next((n for n in range(small) if is_even(n)),\
    \ -1)\n        if small2 == small:\n            # smallest number was even, so\
    \ return it\n            return small2\n        elif small2 > small:\n       \
    \     # smallest number was odd, so increment x by 1\n            x += 1\n   \
    \     else:\n            # smallest number was even, so increment y by 1\n   \
    \         y += 1\n\n", "            choose_num(5, 3)\n            > 4\n      \
    \      \"\"\"\n    \"\"\"\n    if x > y and y > x // 2:\n        return -1\n \
    \   elif x == y and x % 2 == 1:\n        return x // 2\n    elif x < y and y >\
    \ x // 2:\n        return -1\n    elif y == x and y % 2 == 1:\n        return\
    \ x // 2\n    elif y < x and x > y // 2:\n        return -1\n    elif x < y and\
    \ x < y // 2 and x % 2 == 0:\n        return x\n    elif x == y and y % 2 == 0:\n\
    \        return y // 2\n    elif x > y and x > y // 2:\n        return x // 2\n\
    \    elif x == y and x > y // 2:\n        return x\n    elif y < x and x < y //\
    \ 2:\n        return y // 2\n    else:\n        return -1\n\n", "            print(choose_num(1,\
    \ 11))\n            print(choose_num(1, 12))\n            print(choose_num(2,\
    \ 5))\n            print(choose_num(3, 12))\n            print(choose_num(3, 9))\n\
    \            print(choose_num(10, 15))\n            print(choose_num(100, 200))\n\
    \            print(choose_num(100, 100))\n            print(choose_num(100, 10))\n\
    \            print(choose_num(-1, 0))\n            print(choose_num(-1, -1))\n\
    \            print(choose_num(10, 1))\n            print(choose_num(10, 10))\n\
    \            print(choose_num(10, 100))\n            print(choose_num(10, 10))\n\
    \            print(choose_num(10, -1))\n            print(choose_num(10, 0))\n\
    \            print(choose_num(11, 11))\n            \"\"\"\n\n    Args:\n    \
    \    x (int): the left bound\n        y (int): the right bound\n\n    Returns:\n\
    \        int: the even number in the range [x, y]\n\n    Raises:\n        AssertionError:\
    \ if x or y is not positive\n    \"\"\"\n\n    assert x > 0\n    assert y > 0\n\
    \    if x == y:\n        return x\n    \n    # First check if there's a number\
    \ between x and y\n    if x <= y:\n        return -1\n\n    # Now we have the\
    \ possibility that there's only one even number\n    if x % 2 == 0:\n        return\
    \ x\n\n    # Now we have the possibility that there's only one odd number\n  \
    \  if y % 2 == 0:\n        return y\n\n    # Since both x and y are odd, they\
    \ can be even numbers now\n\n    while y % 2 == 1:\n        y //= 2\n    while\
    \ x % 2 == 1:\n        x //= 2\n\n    return min(x, y)\n\n", "    x = 7\n    y\
    \ = 10\n    print(choose_num(x, y))\n            5\n    \"\"\"\n    \n    \n \
    \   while x <= y:\n        if x % 2 == 0:\n            x += 1\n        elif y\
    \ % 2 == 0:\n            y -= 1\n        else:\n            x += y\n         \
    \   y -= x\n        \n        if x == y: return x\n    \n    return -1\n\n", " \
    \           For x = 1 and y = 10, the function should return 4\n            \"\
    \"\"\n            \n            For x = 1 and y = 8, the function should return\
    \ -1\n            \"\"\"\n    \n    Args:\n        x (int): x value from range\n\
    \        y (int): y value from range\n    \n    Returns:\n        int: The biggest\
    \ even integer number that is in the range [x, y] inclusive\n    \"\"\"\n    \n\
    \    if x >= y:\n        return -1\n    \n    even = 1 if x % 2 == 0 else 0\n\
    \    \n    if y % 2 == 0:\n        while y % 2 != 0:\n            y //= 2\n  \
    \          even += 1\n        \n    return x * pow(2, even)\n\n", "          \
    \  x, y = 4, 8\n            choose_num(x, y)\n            >> 16\n            choose_num(x,\
    \ y)\n            >> 16\n            choose_num(x, y)\n            >> 16\n   \
    \         choose_num(x, y)\n            >> -1\n            choose_num(x, y)\n\
    \            >> -1\n            \"\"\"\n    \"\"\"\n\n    if x >= y and x < y:\n\
    \        return y\n    elif y >= x and x < x:\n        return x\n    else:\n \
    \       return -1\n\n\n\"\"\"\n    Problem 2\n    \n    Given a list of positive\
    \ numbers list1 that consists of some integers\n    and a list of positive numbers\
    \ list2 that consists of some integers, \n    your function should return the\
    \ number of numbers in list1 that are equal\n    to any numbers in list2.\n\n\
    \    For example:\n            list1 = [4, 3, 5, 5, 6, 8]\n            list2 =\
    \ [3, 4, 7, 9, 10, 12]\n            choose_num(list1, list2)\n            >> 2\n\
    \            list1 = [4, 3, 5, 5, 6, 8]\n            list2 = [4, 3, 3, 5, 9, 12]\n\
    \            choose_num(list1, list2)\n            >> 4\n            list1 = [4,\
    \ 3, 5, 5, 6, 8]\n            list2 = [3, 5, 4, 3, 9, 12]\n            choose_num(list1,\
    \ list2)\n            >> 0\n            \"\"\"\n\n", "            x = 3\n    \
    \        y = 12\n            print(choose_num(x, y))\n            # Output: 12\n\
    \            \"\"\"\n    \"\"\"\n\n    # Write your code here\n    if x > y:\n\
    \        x, y = y, x\n    while x != y:\n        while x % 2 == 0 and y % 2 ==\
    \ 0:\n            x = x // 2\n            y = y // 2\n        elif x % 2 == 0\
    \ and y % 2 != 0:\n            x = x // 2\n        elif x % 2 != 0 and y % 2 ==\
    \ 0:\n            y = y // 2\n    return -1\n", "    choose_num(5,7)\n    \"\"\
    \"\n    if x > y:\n        x, y = y, x\n\n    for n in range((x + 1) // 2, y -\
    \ 1, -1):\n        if n % 2 == 0 and n >= x:\n            return n\n\n    return\
    \ -1\n\n", "    Input: x = 5, y = 7\n    Output: 12\n            \"\"\"\n    \"\
    \"\"\n    Input: x = 5, y = 7\n    Output: 12\n    \"\"\"\n    if x < 0 or y <\
    \ 0:\n        return -1\n    if x == y:\n        return x\n    if x % 2 == 0:\n\
    \        even = choose_num(x - 1, y)\n        if even != -1:\n            return\
    \ even\n    even = choose_num(x - 1, y)\n    if even != -1:\n        return even\n\
    \    if y % 2 == 0:\n        even = choose_num(x, y - 1)\n        if even != -1:\n\
    \            return even\n    even = choose_num(x, y - 1)\n    if even != -1:\n\
    \        return even\n    return -1\n\n", "    >>> choose_num(1, 2)\n    3\n \
    \   >>> choose_num(1, 4)\n    -1\n    \"\"\"\n    # Your code here\n    if x <\
    \ y:\n        if x % 2 == 0:\n            if y % 2 == 0:\n                return\
    \ x\n            else:\n                return y\n        elif y % 2 == 0:\n \
    \           return x\n        elif x % 2 == 1 and y % 2 == 1:\n            return\
    \ x\n        else:\n            return y\n    else:\n        if x % 2 == 0:\n\
    \            if y % 2 == 0:\n                return y\n            else:\n   \
    \             return x\n        elif y % 2 == 0:\n            return y\n     \
    \   elif x % 2 == 1 and y % 2 == 1:\n            return x\n        else:\n   \
    \         return y\n\n", "            choose_num(1, 20)\n            > 20\n  \
    \          choose_num(20, 1)\n            > -1\n            \"\"\"\n    \"\"\"\
    \n    if x > y:\n        x, y = y, x\n    if y % 2 == 0:\n        y = y // 2\n\
    \    if x % 2 == 0:\n        return x\n    elif x % 2 == 0 and y % 2 == 1:\n \
    \       return y + 1\n    elif x % 2 == 1 and y % 2 == 0:\n        return y +\
    \ 2\n\n    else:\n        return -1\n\n", "    x = -1\n    y = -2\n    \n    biggest_num\
    \ = choose_num(x, y)\n    \n    biggest_num\n    \"\"\"\n    if x >= y:\n    \
    \    if x % 2 == 0:\n            return x\n        else:\n            return -1\n\
    \    elif y >= x:\n        if y % 2 == 0:\n            return y\n        else:\n\
    \            return -1\n    elif x < y:\n        return -1\n    else:\n      \
    \  x2 = x + 1\n        y2 = y + 1\n        while x2 <= y2:\n            if ((x2\
    \ % 2) == 0 and (y2 % 2) == 0):\n                return x2\n            elif ((x2\
    \ % 2) == 0 and (y2 % 2) == 1):\n                return y2\n            elif ((x2\
    \ % 2) == 1 and (y2 % 2) == 0):\n                return y2\n            elif ((x2\
    \ % 2) == 1 and (y2 % 2) == 1):\n                return x2\n            else:\n\
    \                x2, y2 = x2 - 1, y2 - 1\n        return -1\n\n", "          \
    \  x = 10\n            y = 16\n            num = choose_num(x, y)\n          \
    \  # num = 7\n            # num = -1\n            # num = -1\n\n    Args:\n  \
    \      x: the integer that determines the left bounds of the range.\n        y:\
    \ the integer that determines the right bounds of the range.\n\n    Returns:\n\
    \        int: the biggest even integer number that is in the range [x, y].\n \
    \   \"\"\"\n    if x > y:\n        x, y = y, x\n    if x == 0:\n        return\
    \ y\n    if y == 0:\n        return x\n    \n    odd_count = int(x / 2)\n    if\
    \ odd_count > odd_count % 2 and y % 2 == 1:\n        return -1\n    elif odd_count\
    \ > odd_count % 2:\n        return odd_count\n    elif odd_count < odd_count %\
    \ 2:\n        return odd_count + 1\n    else:\n        return 1\n", "    \"\"\"\
    \n    if (x >= y) or (x < 0 or y <= 0):\n        return -1\n\n    if x % 2 ==\
    \ 0:\n        left = x\n    else:\n        left = y\n\n    right = y\n\n    while\
    \ left >= right:\n        if left % 2 == 0:\n            left -= 1\n        else:\n\
    \            right -= 1\n\n    return left\n\n", "    \n    x = int(input())\n\
    \    y = int(input())\n\n    ans = choose_num(x, y)\n    if ans != -1:\n     \
    \   print(ans)\n    else:\n        print(\"There is no even number in the range\
    \ [x, y].\")\n\n\nchoose_num(1, 2)\n</cell>\n<text>\nProblem 12\nLet us write\
    \ a function that takes an integer x and returns an integer y such that:\n\ny\
    \ is divisible by x and y is an odd number.\n\n\n</text>\n<cell>", "         \
    \   print(choose_num(2, 4))\n            print(choose_num(3, 4))\n           \
    \ print(choose_num(-3, 4))\n            print(choose_num(-2, 4))\n           \
    \ print(choose_num(-2, 0))\n            print(choose_num(3, -1))\n           \
    \ print(choose_num(-3, -1))\n            print(choose_num(-3, 0))\n          \
    \  print(choose_num(6, -2))\n            print(choose_num(0, -1))\n          \
    \  print(choose_num(-4, 0))\n            print(choose_num(1, -4))\n          \
    \  print(choose_num(-4, -1))\n            print(choose_num(-5, -1))\n        \
    \    print(choose_num(7, -6))\n            print(choose_num(7, 7))\n         \
    \   print(choose_num(7, 8))\n            print(choose_num(6, 8))\n           \
    \ print(choose_num(6, 7))\n            print(choose_num(-4, 3))\n            print(choose_num(-5,\
    \ 3))\n            print(choose_num(7, -5))\n            print(choose_num(-6,\
    \ -1))\n            print(choose_num(-7, 0))\n            print(choose_num(-7,\
    \ -1))\n            print(choose_num(-7, 1))\n            print(choose_num(-7,\
    \ 2))\n            print(choose_num(-7, 3))\n            print(choose_num(-7,\
    \ 4))\n            print(choose_num(7, -5))\n            print(choose_num(8, -6))\n\
    \            print(choose_num(7, 8))\n            print(choose_num(6, 9))\n  \
    \          print(choose_num(7, 9))\n            print(choose_num(-4, 5))\n   \
    \         print(choose_num(-5, 5))\n            print(choose_num(7, -5))\n   \
    \         print(choose_num(-6, 0))\n            print(choose_num(-6, 1))\n   \
    \         print(choose_num(-6, 2))\n            print(choose_num(-6, 3))\n   \
    \         print(choose_num(-6, 4))\n            print(choose_num(-6, 5))\n   \
    \         print(choose_num(6, -5))\n            print(choose_num(6, 6))\n    \
    \        print(choose_num(-4, 0))\n            print(choose_num(-3, 0))\n    \
    \        print(choose_num(-1, 0))\n            print(choose_num(0, 0))\n     \
    \       print(choose_num(1, 0))\n            print(choose_num(2, 0))\n       \
    \     print(choose_num(3, 0))\n            print(choose_num(4, 0))\n         \
    \   print(choose_num(5, 0))\n            print(choose_num(6, 0))\n           \
    \ print(choose_num(7, 0))\n            print(choose_num(8, 0))\n            print(choose_num(9,\
    \ 0))\n            print(choose_num(12, 0))\n            print(choose_num(13,\
    \ 0))\n            print(choose_num(14, 0))\n            print(choose_num(15,\
    \ 0))\n            print(choose_num(16, 0))\n            print(choose_num(17,\
    \ 0))\n            print(cho", "    >>> choose_num(4, 7)\n    4\n    >>> choose_num(1,\
    \ 1)\n    -1\n    \"\"\"\n    if x > y:\n        x, y = y, x\n    if x % 2 ==\
    \ 0:\n        if y % 2 == 0:\n            if x % 4 == 0 and y % 4 == 0:\n    \
    \            return x\n            elif x % 4 == 0 and y % 4 == 1:\n         \
    \       return y + 1\n            elif x % 4 == 1 and y % 4 == 0:\n          \
    \      return y - 1\n            elif x % 4 == 1 and y % 4 == 1:\n           \
    \     return y + 2\n            else:\n                return -1\n        else:\n\
    \            return -1\n    else:\n        if y % 2 == 0:\n            if x %\
    \ 4 == 0 and y % 4 == 1:\n                return x + 1\n            elif x % 4\
    \ == 0 and y % 4 == 0:\n                return y - 1\n            elif x % 4 ==\
    \ 1 and y % 4 == 0:\n                return y - 2\n            elif x % 4 == 1\
    \ and y % 4 == 1:\n                return y + 3\n            else:\n         \
    \       return -1\n        else:\n            return -1", "    >>> choose_num(1,\
    \ 10)\n    7\n    >>> choose_num(9, 10)\n    -1\n    \"\"\"\n\n    if x > y:\n\
    \        x, y = y, x\n\n    if x % 2 == 0:\n        x = x + 1\n\n    for i in\
    \ range(y, 0, -1):\n        if i % 2 == 0:\n            x += 1\n\n    return x\n\
    \n", "    \"\"\"\n    if x < 0 or x > y:\n        return -1\n\n    if x == y:\n\
    \        return x\n\n    if x%2 == 0 and y%2 == 0:\n        for i in range(3,\
    \ x + 1, 2):\n            if i%2 == 0:\n                return i\n    else:\n\
    \        for i in range(y, x + 1, 2):\n            if i%2 == 0:\n            \
    \    return i\n\n    return -1\n\n", "            choose_num(5, 7)\n         \
    \   choose_num(3, 4)\n            choose_num(12, 15)\n            choose_num(4,\
    \ 2)\n            choose_num(-2, -2)\n            choose_num(-1, 3)\n        \
    \    choose_num(0, 3)\n            choose_num(13, 19)\n            choose_num(13,\
    \ 0)\n            choose_num(-2, 5)\n            choose_num(15, 16)\n        \
    \    choose_num(14, 4)\n            choose_num(15, 0)\n            choose_num(15,\
    \ 13)\n            choose_num(-2, -2)\n            choose_num(-2, -3)\n      \
    \      choose_num(-1, 3)\n            choose_num(0, 3)\n            choose_num(0,\
    \ -3)\n            choose_num(-2, 5)\n            choose_num(15, 16)\n       \
    \     choose_num(14, 4)\n            choose_num(15, 0)\n            choose_num(15,\
    \ 13)\n            choose_num(-2, -2)\n            choose_num(-2, -3)\n      \
    \      choose_num(-1, 3)\n            choose_num(0, 3)\n            choose_num(0,\
    \ -3)\n            choose_num(-2, 5)\n            choose_num(15, 16)\n       \
    \     choose_num(14, 4)\n            choose_num(15, 0)\n            choose_num(15,\
    \ 13)\n            choose_num(-2, -2)\n            choose_num(-2, -3)\n      \
    \      choose_num(-1, 3)\n            choose_num(0, 3)\n            choose_num(0,\
    \ -3)\n            choose_num(-2, 5)\n            choose_num(15, 16)\n       \
    \     choose_num(14, 4)\n            choose_num(15, 0)\n            choose_num(15,\
    \ 13)\n            choose_num(-2, -2)\n            choose_num(-2, -3)\n      \
    \      choose_num(-1, 3)\n            choose_num(0, 3)\n            choose_num(0,\
    \ -3)\n            choose_num(-2, 5)\n            choose_num(15, 16)\n       \
    \     choose_num(14, 4)\n            choose_num(15, 0)\n            choose_num(15,\
    \ 13)\n            choose_num(-2, -2)\n            choose_num(-2, -3)\n      \
    \      choose_num(-1, 3)\n            choose_num(0, 3)\n            choose_num(0,\
    \ -3)\n            choose_num(-2, 5)\n            choose_num(15, 16)\n       \
    \     choose_num(14, 4)\n            choose_num(15, 0)\n            choose_num(15,\
    \ 13)\n            choose_", "            \n            choose_num(1, 2)\n   \
    \         >>> 3\n\n            choose_num(1, 2)\n            >>> -1\n\n      \
    \      choose_num(1, 2)\n            >>> -1\n            \n            choose_num(1,\
    \ 2)\n            >>> -1\n\n            choose_num(1, 2)\n            >>> -1\n\
    \n            choose_num(1, 2)\n            >>> -1\n            \n           \
    \ choose_num(1, 2)\n            >>> -1\n\n            choose_num(1, 2)\n     \
    \       >>> -1\n            \n            choose_num(1, 2)\n            >>> -1\n\
    \n            choose_num(1, 2)\n            >>> -1\n            \n           \
    \ choose_num(1, 2)\n            >>> -1\n\n            choose_num(1, 2)\n     \
    \       >>> -1\n            \n            choose_num(1, 2)\n            >>> -1\n\
    \n            choose_num(1, 2)\n            >>> -1\n            \n           \
    \ choose_num(1, 2)\n            >>> -1\n\n            choose_num(1, 2)\n     \
    \       >>> -1\n            \n            choose_num(1, 2)\n            >>> -1\n\
    \n            choose_num(1, 2)\n            >>> -1\n            \n           \
    \ choose_num(1, 2)\n            >>> -1\n\n            choose_num(1, 2)\n     \
    \       >>> -1\n            \n            choose_num(1, 2)\n            >>> -1\n\
    \n            choose_num(1, 2)\n            >>> -1\n            \n           \
    \ choose_num(1, 2)\n            >>> -1\n\n            choose_num(1, 2)\n     \
    \       >>> -1\n            \n            choose_num(1, 2)\n            >>> -1\n\
    \n            choose_num(1, 2)\n            >>> -1\n            \n           \
    \ choose_num(1, 2)\n            >>> -1\n\n            choose_num(1, 2)\n     \
    \       >>> -1\n            \n            choose_num(1, 2)\n            >>> -1\n\
    \n            choose_num(1, 2)\n            >>> -1\n            \n           \
    \ choose_num(1, 2)\n            >>> -1\n\n            choose_num(1, 2)\n     \
    \       >>> -1\n            \n            choose_num(1, 2)\n            >>> -1\n\
    \            \n            choose_num(1, 2)\n            >>> -1\n\n          \
    \  choose_num(1, 2)\n            >>> -1\n            \n            choose_num(1,\
    \ 2)\n            >>> -1\n\n            choose_num(1, 2)\n            >>> -1\n\
    \            \n            choose_num(1, 2)\n            >>> -1\n\n          \
    \  choose_num(1, 2)\n            >>> -1\n            \n            choose_num(1,\
    \ 2)\n            >>> -1\n\n            choose_num(1, 2)\n            >>> -1\n\
    \            \n            choose_num(1, 2)\n            >>> -1\n\n          \
    \  choose_num(1, 2)\n            >>> -1\n            \n            choose_num(1,\
    \ 2)\n            >>> -1\n\n            choose_num(1, 2)\n            >>> -1\n\
    \            \n            choose_num(1, 2)\n            >>> -1\n\n          \
    \  choose_num(1, 2)\n            >>> -1\n            \n            choose_num(1,\
    \ 2)\n            >>> -1\n\n            choose_num(1, 2)\n            >>> -1\n\
    \            \n            choose_num(1, 2)\n            >>> -1\n\n          \
    \  choose_num(1, 2)\n            >>> -1\n            \n            ", "    \n\
    \    # Example 1:\n    # Input: x = 3, y = 9\n    # Output: 6\n    # Example 2:\n\
    \    # Input: x = -2, y = 10\n    # Output: -1\n    # Example 3:\n    # Input:\
    \ x = 0, y = 2\n    # Output: -1\n\n    assert x >= 0 and y >= 0\n    if x ==\
    \ y:\n        return -1\n    elif x % 2 == 0:\n        y = y // 2\n        return\
    \ x + y\n    else:\n        y = y // 2\n        x = x // 2\n        return x +\
    \ y\n\n\n\"\"\"", "    >>> choose_num(1, 10)\n    1\n    >>> choose_num(8, 11)\n\
    \    8\n    >>> choose_num(-2, 10)\n    -1\n    >>> choose_num(5, 10)\n    -1\n\
    \    \"\"\"\n    if x > y:\n        x, y = y, x\n    if x < 0:\n        x, y =\
    \ y, x\n    if x % 2 == 0:\n        if y % 2 == 0:\n            return x\n   \
    \     else:\n            return -1\n    if y % 2 == 0:\n        return x\n   \
    \ else:\n        return -1\n</cell>\n<cell>\nchoose_num(12, 11)\n</cell>\n<cell>\n\
    choose_num(12, 13)\n</cell>\n<cell>\nchoose_num(12, 15)\n</cell>\n<cell>\nchoose_num(12,\
    \ 17)\n</cell>\n<cell>\nchoose_num(12, 18)\n</cell>\n<cell>\nchoose_num(12, 19)\n\
    </cell>\n<cell>\nchoose_num(12, 20)\n</cell>\n<cell>\nchoose_num(12, 21)\n</cell>\n\
    <cell>\nchoose_num(12, 23)\n</cell>\n<cell>\nchoose_num(12, 24)\n</cell>\n<cell>\n\
    choose_num(12, 25)\n</cell>\n<cell>\nchoose_num(12, 26)\n</cell>\n<cell>\nchoose_num(12,\
    \ 27)\n</cell>\n<cell>\nchoose_num(12, 28)\n</cell>\n<cell>\nchoose_num(12, 29)\n\
    </cell>\n<cell>\nchoose_num(12, 30)\n</cell>\n<cell>\nchoose_num(12, 31)\n</cell>\n\
    <cell>\nchoose_num(12, 32)\n</cell>\n<cell>\nchoose_num(12, 33)\n</cell>\n<cell>\n\
    choose_num(12, 34)\n</cell>\n<cell>\nchoose_num(12, 35)\n</cell>\n<cell>\nchoose_num(12,\
    \ 36)\n</cell>\n<cell>\nchoose_num(12, 37)\n</cell>\n<cell>\nchoose_num(12, 38)\n\
    </cell>\n<cell>\nchoose_num(12, 39)\n</cell>\n<cell>\nchoose_num(12, 40)\n</cell>\n\
    <cell>\nchoose_num(12, 41)", "    >>> choose_num(100, 120)\n    140\n    >>> choose_num(100,\
    \ 99)\n    -1\n    >>> choose_num(100, 100)\n    100\n    \"\"\"\n    if x >=\
    \ y:\n        return -1\n    \n    for i in range(y, x + 1, 2):\n        if x\
    \ % i == 0:\n            return i\n    return -1\n</cell>\n<cell>", "        \
    \    choose_num(1, 3)\n            1\n            choose_num(4, 5)\n         \
    \   4\n            choose_num(3, 4)\n            -1\n            choose_num(4,\
    \ 6)\n            5\n            choose_num(6, 7)\n            -1\n\n    NOTE:\
    \ x and y must be integers.\n\n    Time Complexity: O(1)\"\"\"\n    if x < y:\n\
    \        y, x = x, y\n    ans = -1\n    while (x >= y):\n        if x % 2 == 0:\n\
    \            ans = x\n            break\n        x -= 1\n    return ans\n\n",
  "    >>> choose_num(2, 10)\n    4\n    >>> choose_num(3, 9)\n    7\n    >>> choose_num(8,\
    \ 3)\n    -1\n    \"\"\"\n    # your code here\n\n    ", "            \n     \
    \       choose_num(7,6)\n\n            >>>8\n            \n            choose_num(3,1)\n\
    \n            >>>-1\n    \"\"\"\n    for i in range(x-1, y+1):\n        if x %\
    \ i == 0:\n            return i\n    return -1\n", "            Input: x = 10,\
    \ y = 5\n            Output: 9\n            \"\"\"\n\n    Args:\n        x: First\
    \ integer number that should be checked in the range\n        y: The second integer\
    \ number that should be checked in the range\n\n    Returns:\n        The biggest\
    \ even integer number that is in the range [x, y] inclusive\n\n    Raises:\n \
    \       ValueError: If the range [x, y] contains two integers that are not\n \
    \       positive.\n    \"\"\"\n    if x >= y or x < 0 or y < 0:\n        raise\
    \ ValueError(\n            \"The range [x, y] should contain two positive integer\
    \ numbers!\"\n        )\n    even_numbers = []\n    for i in range(x + 1, y +\
    \ 1):\n        if i % 2 == 0:\n            even_numbers.append(i)\n    even_numbers.sort()\n\
    \    return even_numbers[-1]\n\n", "            print(choose_num(7, 9))\n    \
    \        \"\"\"\n            output: 17\n\n    Args:\n            x (int): The\
    \ first number to test.\n            y (int): The second number to test.\n\n \
    \   Returns:\n            int: The biggest even number in the range [x, y] inclusive.\
    \ \n            If there's no such number, then function should return -1.\n \
    \   \"\"\"\n    if x > y:\n        x, y = y, x\n    # Find all even numbers in\
    \ [x, y]\n    evens = [i for i in range(x, y) if i % 2 == 0]\n    evens.sort()\n\
    \    if evens:\n        return evens[-1]\n    return -1\n\n", "        >>> choose_num(1,\
    \ 10)\n        7\n        >>> choose_num(2, 10)\n        8\n        >>> choose_num(3,\
    \ 10)\n        8\n        >>> choose_num(6, 10)\n        -1\n        >>> choose_num(10,\
    \ 20)\n        -1\n        >>> choose_num(10, 30)\n        -1\n        \"\"\"\n\
    \    if x < y:\n        largest_even = x\n    else:\n        largest_even = y\n\
    \    for i in range(x + 1, y):\n        if i % 2 == 0:\n            if i > largest_even:\n\
    \                largest_even = i\n        else:\n            if i > largest_even:\n\
    \                largest_even = -1\n    if largest_even == -1:\n        return\
    \ -1\n    return largest_even\n</code>\nThe code above is written for Python 3.7.\
    \ Python 3.6 and earlier versions do not support f-strings. You might want to\
    \ use print(choose_num(x, y)) instead.\n<|/ a dscore=0 |>\n<| a tags=python-3.x,python,python-2.7\
    \ |>\nA more pythonic version of your code would be:\n<code>", "            x\
    \ = 7\n            y = 18\n            num = choose_num(x, y)\n            # num\
    \ = 17\n    \n    Args:\n        x: Positive number from which the range is determined.\n\
    \        y: Positive number from which the range is determined.\n\n    Returns:\n\
    \        The biggest even number that is in the range [x, y] inclusive, or\n \
    \       -1 if there is no such number.\n    \"\"\"\n    for num in range(y, x+1):\n\
    \        if num % 2 == 0:\n            return num\n    return -1\n", "       \
    \     choose_num(3, 9)\n            > 6\n            choose_num(5, 7)\n      \
    \      > 5\n            choose_num(5, 10)\n            > -1\n            choose_num(11,\
    \ 20)\n            > 11\n            choose_num(16, 15)\n            > 17\n  \
    \          choose_num(19, 18)\n            > 19\n            choose_num(20, 30)\n\
    \            > -1\n            choose_num(15, 15)\n            > -1\n        \
    \    \"\"\"\n    \"\"\"\n    \n    if x < y:\n        x1, x2 = x, y + 1\n    else:\n\
    \        x1, x2 = y + 1, x\n    \n    while x1 < x2:\n        mid = (x1 + x2)\
    \ // 2\n        if mid % 2 == 0: x1 += 1 # move the odd num to the next odd num\n\
    \        else: x2 -= 1\n    return x1\n    ", "    >>> choose_num(7, 2)\n    7\n\
    \    >>> choose_num(6, 3)\n    -1\n    \"\"\"\n    if x > y:\n        x, y = y,\
    \ x\n    num = 0\n    while x <= y:\n        if x % 2 == 0:\n            num +=\
    \ 1\n        x += 1\n    return -1 if num == 0 else num\n\n", "            choose_num(1,\
    \ 5) # Should return 5 because 5 is evenly divisible by 2\n            choose_num(4,\
    \ 3) # Should return -1 because there's no even number in the range [4, 3]\n \
    \           choose_num(-3, -1) # Should return -1 because there's no even number\
    \ in the range [-3, -1]\n            choose_num(0, 1) # Should return 1 because\
    \ 0 is evenly divisible by 2\n            choose_num(0, 5) # Should return 5 because\
    \ 0 is evenly divisible by 2\n            choose_num(1, 6) # Should return 5 because\
    \ 1 is evenly divisible by 2\n            choose_num(100, 200) # Should return\
    \ 200 because 100 is evenly divisible by 2\n            choose_num(101, 200) #\
    \ Should return -1 because there's no even number in the range [101, 200]\n  \
    \          choose_num(-10, 99) # Should return -1 because there's no even number\
    \ in the range [-10, 99]\n            \"\"\"\n    \n    \n    \n    if x >= y:\n\
    \        return -1\n\n    evens = []\n    for n in range(x):\n        if n % 2\
    \ == 0:\n            evens.append(n)\n    for n in range(y, -1, -1):\n       \
    \ if n % 2 == 0:\n            evens.append(n)\n\n    if len(evens) == 0:\n   \
    \     return -1\n\n    return max(evens)\n\n", "            num = choose_num(5,\
    \ 7)\n            # num = 6\n            \"\"\"\n    \n    Args:\n        x(int):\
    \ The upper range for x coordinate\n        y(int): The upper range for y coordinate\n\
    \n    Returns:\n        int: The biggest even number that is in the range [x,\
    \ y] inclusive.\n            If there's no such number, then this function returns\
    \ -1.\n\n    Examples:\n        Examples are available in the tutorial.\n    \"\
    \"\"\n    return -1\n", "    x = 10\n    y = 20\n    num1 = choose_num(x, y)\n\
    \    if num1 == -1:\n        print(\"There is no even number in that range.\"\
    )\n    else:\n        print(num1)\n    \"\"\"\n    while x != y:\n        if x\
    \ % 2 == 0:\n            x += 1\n        else:\n            x = x + 1\n      \
    \  \n    while x != y:\n        if y % 2 == 0:\n            y -= 1\n        else:\n\
    \            y = y - 1\n    if x == y:\n        z = x - 1\n        z = z if z\
    \ % 2 == 0 else z + 1\n        return z\n    else:\n        return -1\n    ",
  "            choose_num(5, 10)\n            \"\"\"\n            will return the\
    \ number 11\n    \"\"\"\n    \n    if x >= y:\n        x, y = y, x\n    \n   \
    \ even = True\n    while even and x >= y:\n        x, y = y, x - y\n        even\
    \ = not even\n    \n    if x >= y:\n        x = y + 1\n    \n    while x >= y:\n\
    \        x = x - y\n        even = not even\n    \n    return x if not even else\
    \ -1\n\n", "            choose_num(3, 7)\n            choose_num(7, 3)\n     \
    \       choose_num(6, 10)\n            choose_num(10, 6)\n            choose_num(13,\
    \ 15)\n            choose_num(15, 13)\n            choose_num(-3, -7)\n      \
    \      choose_num(-7, -3)\n            choose_num(-6, -10)\n            choose_num(-10,\
    \ -6)\n            choose_num(-13, -15)\n            choose_num(-15, -13)\n  \
    \          choose_num(-7, -3)\n            choose_num(-3, -7)\n            choose_num(-3,\
    \ -7)\n            choose_num(-3, -7)\n            choose_num(-3, -7)\n      \
    \      choose_num(8, 10)\n            choose_num(10, 8)\n            choose_num(8,\
    \ 10)\n            choose_num(12, 16)\n            choose_num(16, 12)\n      \
    \      choose_num(14, 18)\n            choose_num(18, 14)\n            choose_num(14,\
    \ 18)\n            choose_num(19, 23)\n            choose_num(23, 19)\n      \
    \      choose_num(21, 25)\n            choose_num(25, 21)\n            choose_num(21,\
    \ 25)\n            choose_num(25, 21)\n            choose_num(25, 21)\n      \
    \      choose_num(25, 21)\n            choose_num(25, 21)\n            choose_num(25,\
    \ 21)\n            choose_num(25, 21)\n            choose_num(25, 21)\n      \
    \      choose_num(25, 21)\n            choose_num(25, 21)\n            choose_num(25,\
    \ 21)\n            choose_num(25, 21)\n            choose_num(25, 21)\n      \
    \      choose_num(25, 21)\n            choose_num(25, 21)\n            choose_num(25,\
    \ 21)\n            choose_num(25, 21)\n            choose_num(25, 21)\n      \
    \      choose_num(25, 21)\n            choose_num(25, 21)\n            choose_num(25,\
    \ 21)\n            choose_num(25, 21)\n            choose_num(25, 21)\n      \
    \      choose_num(25, 21)\n            choose_num(25, 21)\n            choose_num(25,\
    \ 21)\n            choose_num(25, 21)\n            choose_num(25, 21)\n      \
    \      choose_num(25, 21)\n            choose_num(25, 21)\n            choose_num(25,\
    \ 21)\n            choose_num(25, 21)\n            choose_num(25, 21)\n      \
    \      choose_num(25, 21)", "    >>> choose_num(1, 6)\n    4\n    >>> choose_num(6,\
    \ 3)\n    -1\n    >>> choose_num(7, 5)\n    -1\n    >>> choose_num(2, 5)\n   \
    \ -1\n    \"\"\"\n    biggest = y\n    smallest = x\n    \n    if x == y:\n  \
    \      if x % 2 == 0:\n            return x\n        else:\n            return\
    \ -1\n    \n    while smallest < biggest:\n        if smallest % 2 == 0:\n   \
    \         biggest = biggest - 1\n        else:\n            smallest = smallest\
    \ + 1\n    \n    if smallest > y:\n        return -1\n    elif smallest < y:\n\
    \        return smallest\n    else:\n        return -1\n</cell>\n<cell>", "  \
    \  >>> choose_num(1, 10)\n    10\n    >>> choose_num(3, 5)\n    5\n    >>> choose_num(2,\
    \ 15)\n    -1\n    \"\"\"\n    if y <= x:\n        return -1\n    elif x <= y\
    \ and x % 2 == 0:\n        return x \n    elif x > y and x % 2 != 0:\n       \
    \ return x\n    else:\n        return y\n\n", "            choose_num(40, 10)\n\
    \            >>>60\n            \n            choose_num(6, 10)\n            >>>-1\n\
    \    \"\"\"\n    if x < y and (x % 2 == 0) and (y % 2 == 0):\n        if x >=\
    \ y:\n            return x - y\n        else:\n            return y - x\n    else:\n\
    \        return -1\n", "            def choose_num(7, 5):\n                # This\
    \ function returns 6 as there is an even number between 7 and 5.\n           \
    \     assert 7 <= x <= 5\n                assert 5 <= y <= 5\n               \
    \ return 6\n            choose_num(7, 5)\n            # 6\n            choose_num(7,\
    \ 0)\n            # -1\n            choose_num(0, 5)\n            # -1\n     \
    \       choose_num(0, 0)\n            # -1\n            \"\"\"\n    The function\
    \ does not check if x is larger than y.\n\n    For example:\n            \"\"\"\
    \n            def choose_num(7, 5):\n                # This function returns -1\
    \ because the number is out of range.\n                assert 7 <= x <= 5\n  \
    \              assert 5 <= y <= 5\n                return -1\n            choose_num(7,\
    \ 5)\n            # -1\n            choose_num(7, 0)\n            # -1\n     \
    \       choose_num(0, 5)\n            # -1\n            choose_num(0, 0)\n   \
    \         # -1\n            \"\"\"\n    Args:\n        x: the first parameter\
    \ to be tested.\n        y: the second parameter to be tested.\n    Returns:\n\
    \        The largest even integer number that is in the range [x, y] inclusive.\n\
    \    Raises:\n        AssertionError: This function raises an AssertionError when\
    \ the first parameter is \n            larger than the second parameter.\n   \
    \ \"\"\"\n    assert 7 <= x <= 5\n    assert 5 <= y <= 5\n    if x >= y:\n   \
    \     return -1\n    num = x * y\n    if num % 2 == 0:\n        return num\n \
    \   return -1\n\n", "            choose_num(1, 5)\n            \"\"\"\n      \
    \      returns 3\n            choose_num(2, 4)\n            \"\"\"\n         \
    \   returns -1\n            \"\"\"\n            choose_num(2, 0)\n           \
    \ \"\"\"\n            returns -1\n            \"\"\"\n            choose_num(0,\
    \ 2)\n            \"\"\"\n            returns -1\n            \"\"\"\n       \
    \     choose_num(5, 0)\n            \"\"\"\n            returns -1\n         \
    \   \"\"\"\n    \"\"\"\n    if x > y:\n        if x % 2 == 0:\n            return\
    \ y\n        else:\n            return x\n    else:\n        if y % 2 == 0:\n\
    \            return x\n        else:\n            return y\n\n", "           \
    \ \n            choose_num(5, 15) should return 10\n            choose_num(15,\
    \ 5) should return 10\n            choose_num(12, 25) should return -1\n     \
    \       choose_num(0, 20) should return -1\n            choose_num(20, 0) should\
    \ return -1\n            \"\"\"\n    \"\"\"\n    if x > y:\n        if x > 10**8:\n\
    \            biggest_num = -1\n            return biggest_num\n        else:\n\
    \            biggest_num = int(x / 10)\n            if biggest_num % 2 == 0:\n\
    \                biggest_num *= 10\n            elif biggest_num < 10:\n     \
    \           biggest_num += 10\n            return biggest_num\n    elif x == y:\n\
    \        return -1\n    elif y < x:\n        biggest_num = int(y / 10)\n     \
    \   if biggest_num % 2 == 0:\n            biggest_num *= 10\n        elif biggest_num\
    \ < 10:\n            biggest_num += 10\n        return biggest_num\n    else:\n\
    \        biggest_num = int(y / 10)\n        if biggest_num % 2 == 0:\n       \
    \     biggest_num *= 10\n        elif biggest_num < 10:\n            biggest_num\
    \ += 10\n        return biggest_num\n\n", "    choose_num(2, 4)\n    # returns\
    \ 2\n    \"\"\"\n    if x > y:\n        smaller = x\n        greater = y\n   \
    \ else:\n        smaller = y\n        greater = x\n    \n    while smaller <=\
    \ greater:\n        smaller_2 = smaller * 2\n        greater_2 = greater * 2\n\
    \        if smaller_2 <= greater_2:\n            return smaller_2\n        else:\n\
    \            smaller += 2\n            greater += 2\n    return -1\n\n", "   \
    \ choose_num(3, 10)\n        \n            \n    \"\"\"\n    while x > 0 and y\
    \ > 0:\n        if x % 2 == 0 and y % 2 == 0:\n            return x\n        elif\
    \ x % 2 != 0 and y % 2 != 0:\n            return y\n        x -= 1\n        y\
    \ -= 1\n    return -1\n\n", "            choose_num(4, 5) # should return 4\n\
    \            choose_num(10, 11) # should return 10\n            choose_num(6,\
    \ 6) # should return 6\n            choose_num(7, 7) # should return 7\n     \
    \       choose_num(8, 8) # should return 10\n            choose_num(9, 9) # should\
    \ return -1\n            choose_num(-10, 10) # should return -1\n            choose_num(-9,\
    \ 10) # should return 10\n            choose_num(-1, 10) # should return -1\n\
    \            choose_num(-1, -1) # should return -1\n            choose_num(10,\
    \ 100) # should return -1\n            \"\"\"\n\n    if x > y:\n        x, y =\
    \ y, x\n    if x % 2 == 0 | y % 2 == 0:\n        if x % 2 == 0:\n            x\
    \ = x - 1\n        else:\n            y = y - 1\n        if y > x:\n         \
    \   return x\n        else:\n            return y\n    else:\n        if x > y:\n\
    \            return y\n        elif x < y:\n            return x\n        else:\n\
    \            return -1\n\n", "        choose_num(4,6)\n        choose_num(9,11)\n\
    \        choose_num(3,4)\n        choose_num(5,3)\n        choose_num(5,4)\n \
    \       choose_num(5,6)\n        choose_num(5,6)\n        choose_num(7,9)\n  \
    \      choose_num(8,10)\n        choose_num(9,10)\n        choose_num(12,13)\n\
    \        choose_num(12,12)\n        choose_num(12,12)\n        choose_num(12,12)\n\
    \        choose_num(15,20)\n        choose_num(16,18)\n        choose_num(16,20)\n\
    \        choose_num(16,20)\n        choose_num(16,20)\n        choose_num(19,19)\n\
    \        choose_num(20,21)\n        choose_num(21,20)\n        choose_num(21,20)\n\
    \        choose_num(21,20)\n        choose_num(22,23)\n        choose_num(23,22)\n\
    \        choose_num(23,22)\n        choose_num(23,22)\n        choose_num(25,24)\n\
    \        choose_num(25,24)\n        choose_num(25,24)\n        choose_num(25,24)\n\
    \        choose_num(25,24)\n        choose_num(25,24)\n        choose_num(25,24)\n\
    \        choose_num(27,27)\n        choose_num(28,29)\n        choose_num(29,28)\n\
    \        choose_num(29,28)\n        choose_num(29,28)\n        choose_num(30,30)\n\
    \        choose_num(31,30)\n        choose_num(31,30)\n        choose_num(31,30)\n\
    \        choose_num(31,30)\n        choose_num(33,33)\n        choose_num(33,33)\n\
    \        choose_num(34,34)\n        choose_num(34,34)\n        choose_num(34,34)\n\
    \        choose_num(34,34)\n        choose_num(34,34)\n        choose_num(34,34)\n\
    \        choose_num(34,34)\n        choose_num(34,34)\n        choose_num(34,34)\n\
    \        choose_num(34,34)\n        choose_num(34,34)\n        choose_num(35,36)\n\
    \        choose_num(36,35)\n        choose_num(36,35)", "    \n    x = 6\n   \
    \ y = 10\n    print(choose_num(x, y))\n    \"\"\"\n\n    if x > y and x >= 2:\n\
    \        return min(x, y)\n    elif y > x and y >= 2:\n        return min(y, x)\n\
    \    else:\n        if x == 2:\n            return y\n        elif y == 2:\n \
    \           return x\n        else:\n            if x % 2 == 0:\n            \
    \    return x\n            else:\n                return y\n\n\"\"\"\nQuestion\
    \ #3:\n\"\"\"", "            print(choose_num(3, 6))\n            print(choose_num(15,\
    \ 12))\n            print(choose_num(6, 10))\n            print(choose_num(-1,\
    \ 10))\n            print(choose_num(30, 1))\n            print(choose_num(20,\
    \ 2))\n            print(choose_num(25, 4))\n            print(choose_num(15,\
    \ 20))\n            print(choose_num(6, 19))\n            print(choose_num(6,\
    \ 17))\n            print(choose_num(0, 0))\n            \"\"\"\n    \n    The\
    \ result should be like this:\n    \n            8\n            -1\n         \
    \   20\n            -1\n            25\n            19\n            -1\n     \
    \       30\n            1\n            2\n            4\n            19\n    \
    \        -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n", "    choose_num(3, 8)\n            -> 8\n            -> 6\n\
    \            -> 0\n            -> -1\n    \"\"\"\n    \n    # code goes here\n\
    \    \n    return x\n\n", "    >>> choose_num(4, 3)\n    6\n    >>> choose_num(-4,\
    \ 3)\n    -1\n    >>> choose_num(6, -4)\n    -1\n    \"\"\"\n    if x == y:\n\
    \        return -1\n    if x > y:\n        x, y = y, x\n    if x < y or x % 2\
    \ == 0:\n        return x\n    high = y\n    low = x / 2\n    while low < high:\n\
    \        if low % 2 == 0:\n            low += 1\n        else:\n            high\
    \ -= 1\n    return high\n\n", "    x = 8\n    y = 10\n    print(choose_num(x,\
    \ y))\n    \"\"\"\n    if x > y:\n        if x % 2 == 0:\n            return x\n\
    \    else:\n        if y % 2 == 0:\n            return y\n        elif x > y:\n\
    \            if x % 2 == 0:\n                return x\n            else:\n   \
    \             return y\n        else:\n            if y % 2 == 0:\n          \
    \      return y\n            else:\n                return x\n            ", " \
    \           x = 3\n            y = 7\n            num = choose_num(x, y)\n   \
    \         print(num) \n            # >> 4\n            \"\"\"\n            x =\
    \ 3\n            y = 7\n            num = choose_num(x, y)\n            print(num)\
    \ \n            # >> -1\n    \"\"\"\n    if x > y:\n        tmp = x\n        x\
    \ = y\n        y = tmp\n    if x >= y and x % 2 == 0:\n        return x \n   \
    \ elif y % 2 == 0:\n        return y\n    elif x % 2 > y % 2:\n        return\
    \ y\n    else:\n        return x\n\n", "        choose_num(4, 9)\n        >> 4\n\
    \n        choose_num(2, 15)\n        >> 13\n\n        choose_num(13, 15)\n   \
    \     >> -1\n    \"\"\"\n    if x <= y:\n        if x % 2 != 0:\n            return\
    \ -1\n        for i in range(y, 0, -2):\n            if x % i == 0:\n        \
    \        return i\n    else:\n        if y % 2 != 0:\n            return -1\n\
    \        for i in range(y, 0, -2):\n            if y % i == 0:\n             \
    \   return i\n    return -1\n\n", "    >>> choose_num(1, 3)\n    3\n    >>> choose_num(5,\
    \ 6)\n    5\n    >>> choose_num(14, 15)\n    -1\n    \"\"\"\n    if x == 1:\n\
    \        if y > 1:\n            return y\n        else:\n            return -1\n\
    \    elif x > y:\n        return -1\n    elif x%2 != 0 and y % 2 != 0:\n     \
    \   for i in range(1, min(y, x)+1):\n            if i%2 == 0 and not i%(x-y) ==\
    \ 0:\n                return i\n            elif i%2 != 0 and not i%(x-y) == 0:\n\
    \                return -1\n            else:\n                return -1\n   \
    \ else:\n        return -1\n\n", "            print (choose_num(1, 3))\n     \
    \       print (choose_num(4, 5))\n            print (choose_num(12, 7))\n    \
    \        print (choose_num(23, 25))\n            print (choose_num(100, 30))\n\
    \            print (choose_num(1001, 30))\n    \"\"\"\n    numbers_range = [i\
    \ for i in range(x, y) if i % 2 == 0]\n    if len(numbers_range) == 0:\n     \
    \   return -1\n    elif len(numbers_range) == 1:\n        return numbers_range[0]\n\
    \    else:\n        numbers_range.sort()\n        return numbers_range[-1]\n</cell>\n\
    <cell>\nnumbers_range = choose_num(1, 3)\nprint (numbers_range)\n</cell>\n<cell>",
  "            >>>choose_num(3, 5)\n            3\n            >>>choose_num(3, 7)\n\
    \            4\n            >>>choose_num(3, 8)\n            -1\n            >>>choose_num(4,\
    \ 2)\n            -1\n            >>>choose_num(7, 10)\n            3\n      \
    \      >>>choose_num(8, 15)\n            8\n            >>>choose_num(8, 16)\n\
    \            -1\n            >>>choose_num(8, 17)\n            -1\n          \
    \  >>>choose_num(8, 18)\n            -1\n            >>>choose_num(17, 18)\n \
    \           -1\n            >>>choose_num(17, 19)\n            -1\n          \
    \  >>>choose_num(17, 20)\n            -1\n            >>>choose_num(17, 21)\n\
    \            -1\n            >>>choose_num(17, 22)\n            -1\n         \
    \   >>>choose_num(17, 23)\n            -1\n            >>>choose_num(17, 24)\n\
    \            -1\n            >>>choose_num(17, 25)\n            -1\n         \
    \   >>>choose_num(17, 26)\n            -1\n            >>>choose_num(17, 27)\n\
    \            -1\n            >>>choose_num(17, 28)\n            -1\n         \
    \   >>>choose_num(17, 29)\n            -1\n            >>>choose_num(17, 30)\n\
    \            -1\n            >>>choose_num(17, 31)\n            -1\n         \
    \   >>>choose_num(17, 32)\n            -1\n            >>>choose_num(17, 33)\n\
    \            -1\n            >>>choose_num(17, 34)\n            -1\n         \
    \   >>>choose_num(17, 35)\n            -1\n            >>>choose_num(17, 36)\n\
    \            -1\n            >>>choose_num(17, 37)\n            -1\n         \
    \   >>>choose_num(17, 38)\n            -1\n            >>>choose_num(17, 39)\n\
    \            -1\n            >>>choose_num(17, 40)\n            -1\n         \
    \   >>>choose_num(17, 41)\n            -1\n            >>>choose_num(17, 42)\n\
    \            -1\n            >>>choose_num(17, 43)\n            -1\n         \
    \   >>>choose_num(17, 44)\n            -1\n            >>>choose_num(17, 45)\n\
    \            -1\n            >>>choose_num(17, 46)\n            -1\n         \
    \   >>>choose_num(17, 47)\n            -1\n            >>>choose_num(17, 48)\n\
    \            -1\n            >>>choose_num(17, 49)\n            -1\n         \
    \   >>>", "    >>> choose_num(1, 2)\n    3\n    >>> choose_num(10, 5)\n    15\n\
    \    >>> choose_num(20, 2)\n    -1\n    >>> choose_num(0, 10)\n    -1\n    >>>\
    \ choose_num(9, 0)\n    -1\n    \"\"\"\n    if x > y:\n        return -1\n\n \
    \   i = x\n    j = y\n    k = x\n    \n    even = False\n    while k > 0:\n  \
    \      even = not even\n        \n        if i % 2 == 0 and i % 4 != 0:\n    \
    \        k = k - 1\n        elif (i // 2) % 2 == 0:\n            k = k - 1\n \
    \       else:\n            i = i - 2\n    \n    if even:\n        k = k + 1\n\n\
    \    return k\n\n", "    >>> choose_num(12, 50)\n    40\n    >>> choose_num(-2,\
    \ 1)\n    -1\n    \n    \"\"\"\n    if x < 0 or y < 0 or x > y:\n        return\
    \ -1\n    else:\n        evens = range(x+1,y+1)\n        \n    evens = [x for\
    \ x in evens if x % 2 == 0]\n    \n    if len(evens) != 0:\n        return max(evens)\n\
    \    else:\n        return -1\n\n", "            choose_num(7, 8) # Output: 7\n\
    \            choose_num(8, 7) # Output: 7\n            choose_num(1, 3) # Output:\
    \ -1\n\n    There are many variants of choose_num. Try implementing them and\n\
    \    test them.\"\"\"\n    # Your code here\n    \n    if x < y :\n        if\
    \ x % 2 != 0 : \n            return x\n        return y\n    elif y % 2 != 0 :\
    \ \n        return y\n    return x \n\n", "    >>> choose_num(1, 3)\n    3\n \
    \   \n    >>> choose_num(3, 3)\n    -1\n    \n    >>> choose_num(7, 7)\n    -1\n\
    \    \"\"\"\n    if x >= y and y > x:\n        return -1\n    elif x >= y:\n \
    \       return x if (x-y)%2==0 else y\n    elif x > y:\n        return y if (y-x)%2==0\
    \ else x\n", "            Example 1:\n            Input: x = 2, y = 4\n      \
    \      Output: 3\n            Explanation: All of the even numbers between (2,\
    \ 4] are 3.\n            Example 2:\n            Input: x = 10, y = 0\n      \
    \      Output: -1\n\n            Example 3:\n            Input: x = 1, y = 4\n\
    \            Output: -1\n            \"\"\"\n    \"\"\"\n    Your code here!\n\
    \    \"\"\"\n    if x > (y + 1) or (x <= 0 or y <= 0):\n        return -1\n  \
    \  \n    while x < y:\n        if x % 2 == 0:\n            x += 1\n          \
    \  y -= 1\n        else:\n            x -= 1\n            y += 1\n    return y\n\
    \n", "            \n            Inputs:\n                    x = 7\n         \
    \           y = 8\n            \n            Outputs:\n                    10\n\
    \n            Explanation:\n                    7 is the smallest even number\
    \ that exists in the range \n                    [7, 8]. 8 is the next biggest\
    \ even number that exists \n                    in the range [7, 8], and so on.\n\
    \            \"\"\"\n    \"\"\"\n    return x if x % 2 == 0 \\\n        else y\
    \ if y % 2 == 0 \\\n        else x + y if x > y \\\n        else y + x\n</cell>\n\
    <cell>\nassert choose_num(4,5) == 7\n</cell>\n<cell>\nassert choose_num(4,10)\
    \ == -1\n</cell>\n<cell>\nassert choose_num(7,8) == 10\n</cell>\n<cell>\nassert\
    \ choose_num(5,6) == -1\n</cell>\n<text>\nQuestion:\nWhat is the value of choose_num(100,\
    \ 120) using the Python debugger tool?\n\nUse the Python debugger tool to find\
    \ the value of choose_num(100, 120) when run with a breakpoint at the first line\
    \ of the function choose_num(100, 120). What is the value of choose_num(100, 120)?\n\
    \n\n</text>\n<text>\nAnswer:\n\n</text>\n<cell>", "            choose_num(4,5)\
    \ --> 4\n            choose_num(4,8) --> 8\n            choose_num(-4,5) --> -1\n\
    \            choose_num(3,-2) --> -1\n            choose_num(-3,-2) --> -1\n \
    \           choose_num(3,5) --> 5\n            choose_num(-3,5) --> 5\n      \
    \      choose_num(3,-4) --> -5\n            choose_num(-3,-4) --> -5\n       \
    \     \"\"\"\n\n    Parameters:\n    x (int): The first number to search in.\n\
    \    y (int): The second number to search in.\n\n    Returns:\n    int: The biggest\
    \ even number between x and y that is in the range [x, y] inclusive.\n\n    \"\
    \"\"\n\n    if x == 0 and y == 0:\n        return 0\n    elif x <= 0:\n      \
    \  return -1\n    elif y <= 0:\n        return -1\n    \n    even = 1\n    while\
    \ even < x:\n        even += 2\n    \n    even = 1\n    while even < y:\n    \
    \    even += 2\n        \n    while even <= x:\n        even += 2\n    \n    while\
    \ even <= y:\n        even += 2\n    \n    even = 1\n    while even < x:\n   \
    \     even += 2\n    \n    even = 1\n    while even < y:\n        even += 2\n\
    \    \n    even = 1\n    while even < x:\n        even += 2\n    \n    while even\
    \ < y:\n        even += 2\n        \n    return even\n", "    >>> choose_num(3,4)\n\
    \    5\n    \"\"\"\n    \n    if x > y:\n        x, y = (y, x)\n\n    biggest_even_number\
    \ = -1\n    smallest_even_number = x\n    \n    even_numbers_range = range(smallest_even_number,\
    \ biggest_even_number+1)\n    \n    while x != y:\n        if x % 2 == 0:\n  \
    \          even_numbers_range = range(smallest_even_number, x+1)\n           \
    \ x = x + 1\n        else:\n            even_numbers_range = range(x, biggest_even_number+1)\n\
    \            x = x - 1\n        \n        \n        for even_number in even_numbers_range:\n\
    \            if even_number % 2 == 0:\n                if even_number > biggest_even_number:\n\
    \                    biggest_even_number = even_number\n                elif even_number\
    \ < smallest_even_number:\n                    smallest_even_number = even_number\n\
    \            else:\n                if even_number > biggest_even_number:\n  \
    \                  biggest_even_number = even_number\n                elif even_number\
    \ < smallest_even_number:\n                    smallest_even_number = even_number\n\
    \    \n    return biggest_even_number\n    \n    \n    \n    \n\"\"\"\n    \n\
    \    \n    ", "            choose_num(5, 7)\n            > 4\n            \n \
    \           choose_num(7, 5)\n            > 4\n            \n            choose_num(1,\
    \ 3)\n            > 3\n            \n            choose_num(2, 2)\n          \
    \  > -1\n    \"\"\"\n    for i in range(x + 1):\n        if i % 2 == 0 and i <=\
    \ y:\n            return i\n    return -1\n\n", "            # >>> choose_num(1,\
    \ 10)\n            # 4\n            # >>> choose_num(11, 11)\n            # -1\n\
    \            # >>> choose_num(5, 6)\n            # 8\n            # \"\"\"\n \
    \   \"\"\"\n\n    if x > y:\n        x, y = y, x\n        \n    sum = 0\n    \n\
    \    while x <= y:\n        if x%2 == 0:\n            sum += x\n        x += 1\n\
    \    \n    if sum % 2 == 0 and sum == x:\n        return sum\n    else:\n    \
    \    return -1\n    \n</cell>\n<cell>", "    choose_num(3, 4) -> 5\n    choose_num(3,\
    \ 6) -> -1\n    choose_num(1, 10) -> -1\n    \"\"\"\n    return int(max(x+y-1,\
    \ x-y+1))\n", "    >>> choose_num(23, 13)\n    13\n    >>> choose_num(23, 4)\n\
    \    4\n    \"\"\"\n    z = -1\n    while y < x:\n        z = y*y+z\n        if\
    \ z > x:\n            break\n        if z % 2 == 0:\n            y = y/2\n   \
    \     else:\n            y = y*3+1\n    return z\n", "    >>> choose_num(0, 10)\n\
    \    1\n    >>> choose_num(10, 0)\n    5\n    \"\"\"\n    \n    if x <= y or x\
    \ <= 0:\n        return -1\n    \n    if x % 2 == 0:\n        if y % 2 == 0:\n\
    \            return x + y\n        else:\n            return x\n    else:\n  \
    \      if y % 2 == 0:\n            return y\n        else:\n            return\
    \ x - y\n\n", "    \n    Input: x = 3, y = 0\n    Output: 2\n    \n    \n    Input:\
    \ x = 3, y = 2\n    Output: 3\n\n    Input: x = 3, y = 3\n    Output: 3\n    \"\
    \"\"\n    \n    odd_list = []\n    even_numbers = []\n    \n    for i in range(x,\
    \ y + 1):\n        if i % 2 == 0:\n            even_numbers.append(i)\n      \
    \  else:\n            odd_list.append(i)\n    \n    if even_numbers:\n       \
    \ return max(even_numbers)\n    else:\n        return -1\n", "    >>> choose_num(1,\
    \ 2)\n    -1\n    >>> choose_num(6, 5)\n    6\n    >>> choose_num(15, 15)\n  \
    \  -1\n    >>> choose_num(15, 17)\n    17\n    \"\"\"\n    if y >= x:\n      \
    \  if y % 2 == 0:\n            return y\n        return -1\n    if x % 2 == 0:\n\
    \        return -1\n    if y % 2 == 0:\n        return y\n    return -1\n\n",
  "            x = 3\n            y = 6\n            result = choose_num(x, y)\n \
    \           print(result)\n            \"\"\"\n            The output should be\n\
    \            5\n            \"\"\"\n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n            \n            \n\
    \            \n            \n            \n            \n            \n      \
    \      \n            \n            \n            \n", "            choose_num(11,\
    \ 16)\n            >> 12\n            choose_num(21, 33)\n            >> 17\n\
    \            choose_num(14, 20)\n            >> -1\n    \"\"\"\n    if x < 0 or\
    \ y < 0 or x > (y - 1) or y > (x - 1):\n        return -1\n    if y == 0:\n  \
    \      if x % 2 == 0:\n            return x\n        else:\n            return\
    \ -1\n    if x == 0:\n        if y % 2 == 0:\n            return y\n        else:\n\
    \            return -1\n    else:\n        small_num = x\n        large_num =\
    \ y\n        even = 1\n        while even != 0:\n            even = 0\n      \
    \      small_num //= 2\n            large_num //= 2\n            if small_num\
    \ == large_num:\n                even = 1\n        return large_num\n\n", "  \
    \  >>> choose_num(2, 4)\n    3\n    >>> choose_num(0, 5)\n    1\n    >>> choose_num(-5,\
    \ -5)\n    -1\n    \"\"\"\n    if x > y:\n        a, b = y, x\n    else:\n   \
    \     a, b = x, y\n\n    for num in range(a, b + 1):\n        if num % 2 == 0\
    \ and num > 0 and num < y:\n            return num\n\n", "    choose_num(25, 40)\n\
    \    >> 20\n    choose_num(1, 0)\n    >> -1\n    choose_num(5, 0)\n    >> -1\n\
    \n    Arguments:\n    x -- a positive integer\n    y -- a positive integer\n \
    \   \"\"\"\n    # your code here\n    if x >= y:\n        return -1\n    else:\n\
    \        mid = x + (y - x) // 2\n        return x if is_even(mid) else y\n", " \
    \           num = choose_num(30, 52)\n            assert num == 42\n\n       \
    \     num = choose_num(30, 0)\n            assert num == -1\n\n            num\
    \ = choose_num(0, 0)\n            assert num == -1\n\n            \"\"\"\n   \
    \ :param x:\n    :param y:\n    :return:\n    \"\"\"\n    if y > x:\n        y,\
    \ x = x, y\n\n    flag = 1\n    while y < x:\n        if x%2 == 0:\n         \
    \   x += 1\n            continue\n        if y%2 == 0:\n            y += 1\n \
    \           continue\n        flag = 0\n        y += 1\n\n    if flag == 0:\n\
    \        return x\n    else:\n        return -1\n\n", "            Input:\n  \
    \          8\n            9\n            15\n            20\n            33\n\
    \            30\n            44\n            34\n            37\n            45\n\
    \            50\n            49\n            60\n            49\n            80\n\
    \            90\n            80\n            100\n            90\n           \
    \ 100\n            110\n            110\n            120\n            -1\n   \
    \         -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            -1\n            -1\n            -1\n            -1\n            -1\n\
    \            ", "            choose_num(1, 10) #should return 5\n            choose_num(17,\
    \ 10) #should return -1\n            choose_num(15, 10) #should return -1\n  \
    \          choose_num(100, 100) #should return -1\n            choose_num(7, 100)\
    \ #should return -1\n            choose_num(7, 7) #should return 7\n         \
    \   choose_num(7, 8) #should return -1\n            choose_num(7, 7) #should return\
    \ -1\n            \"\"\"\n    \n    \n    num = x\n    while num < y:\n      \
    \  if num%2 == 0 and num >= x and num <= y:\n            return num\n        num\
    \ += 1\n    \n    return -1\n\n", "            print(choose_num(3, 10)) # 4\n\
    \            print(choose_num(12, 10)) # -1\n            print(choose_num(20,\
    \ 10)) # -1\n            print(choose_num(0, 10)) # -1\n            print(choose_num(10,\
    \ 10)) # -1\n            print(choose_num(9, 10)) # -1\n            print(choose_num(19,\
    \ 10)) # -1\n            print(choose_num(20, 10)) # -1\n            print(choose_num(15,\
    \ 10)) # -1\n            print(choose_num(12, 10)) # -1\n            print(choose_num(15,\
    \ 10)) # -1\n            print(choose_num(-5, 10)) # 5\n            print(choose_num(-11,\
    \ 10)) # -1\n            print(choose_num(-1, 10)) # -1\n            print(choose_num(-8,\
    \ 10)) # -1\n            print(choose_num(-3, 10)) # -1\n            print(choose_num(-6,\
    \ 10)) # -1\n            print(choose_num(-3, 10)) # -1\n            print(choose_num(-8,\
    \ 10)) # -1\n            print(choose_num(-8, 10)) # -1\n            \"\"\"\n\
    \    \n    if x > y:\n        x, y = y, x\n    \n    return max([x for x in range(y,\
    \ x, 2) if is_even_number(x)])\n\n", "            choose_num(2, 10)\n        \
    \    Output: 8\n            \"\"\"\n\n    Args:\n        x (int): The first number\
    \ in the range\n        y (int): The second number in the range\n\n    Returns:\n\
    \        int: The largest even number in [x, y] inclusive\n    \"\"\"\n    smallest\
    \ = min(x, y)\n    largest = max(x, y)\n    evens = []\n    for number in range(smallest,\
    \ largest, 2):\n        if number % 2 == 0:\n            evens.append(number)\n\
    \    if len(evens) == 0:\n        return -1\n    else:\n        return max(evens)\n\
    \n", "            choose_num(4, 6)\n            >4\n\n    \"\"\"\n    even_integers\
    \ = []\n    for number in range(x, y + 1):\n        if number % 2 == 0:\n    \
    \        even_integers.append(number)\n    for even_integer in even_integers:\n\
    \        if even_integer > y:\n            even_integer = -1\n    return even_integer\n\
    </cell>\n<cell>", "    >>> choose_num(0, 0)\n    -1\n    >>> choose_num(1, 1)\n\
    \    -1\n    >>> choose_num(1, 2)\n    -1\n    >>> choose_num(2, 2)\n    1\n \
    \   >>> choose_num(3, 3)\n    1\n    \"\"\"\n    if x > y:\n        x, y = y,\
    \ x\n    if x < 0 or y < 0:\n        return -1\n    if x == 0:\n        return\
    \ y\n    elif y == 0 or x % 2 == y % 2:\n        return x\n    elif x % 2 > y\
    \ % 2:\n        return choose_num(x//2, y)\n    else:\n        return choose_num(x,\
    \ y//2)\n", "        x =  4\n        y = 14\n        choose_num(x, y)\n      \
    \  # 4\n        \"\"\"\n\n    if x >= y:\n        return -1\n    if x < 0:\n \
    \       x = -x\n    if y < 0:\n        y = -y\n    if x <= y:\n        while x\
    \ % 2 != 0:\n            x -= 1\n        while y % 2 != 0:\n            y -= 1\n\
    \    while x != y:\n        if x > 0:\n            x -= 1\n        if y > 0:\n\
    \            y -= 1\n        if x > y:\n            x -= 1\n            y -= 1\n\
    \    return x if x % 2 == 0 else -1\n\n", "    >>> choose_num(20, 30)\n    28\n\
    \    \"\"\"\n    if (x < y and not x%2==0 and y%2==0) or (x > y and x%2==0 and\
    \ y%2==0):\n        return x\n    else:\n        return -1\n", "            choose_num(4,5)\n\
    \            > 6\n            choose_num(5,5)\n            > -1\n            \"\
    \"\"\n\n    Args:\n        x: The first number.\n        y: The second number.\n\
    \n    Returns:\n        int: The biggest even number in the range [x, y] inclusive.\n\
    \    \"\"\"\n    assert type(x) == int and type(y) == int and x >= 0 and y >=\
    \ 0 \\\n        and x <= y, 'x and y must be positive ints'\n\n    if x == y:\n\
    \        return 0\n    elif x % 2 == 0:\n        return y\n    elif y % 2 == 0:\n\
    \        return x\n\n    mid = (x + y)//2\n\n    if mid % 2 == 0:\n        return\
    \ mid\n    else:\n        return choose_num(x, mid)\n\n", "            >>>choose_num(0,\
    \ 10)\n            5\n            >>>choose_num(3, 10)\n            -1\n\n   \
    \         >>>choose_num(1, 3)\n            0\n\n            >>>choose_num(2, 2)\n\
    \            2\n\n            >>>choose_num(10, 10)\n            -1\n        \
    \    \"\"\"\n    \n    for num in range(x,y):\n        if num % 2 == 0 and num\
    \ > 0:\n            return num\n    return -1\n", "            num1 = 6\n    \
    \        num2 = 13\n            print(choose_num(num1, num2))\n            #Output:\
    \ 17\n            \"\"\"\n    \"\"\"\n    \n    if (x > y) and ((x & 1) != 0):\n\
    \        return x >> 1\n    \n    if (y > x) and ((y & 1) != 0):\n        return\
    \ y >> 1\n    \n    if (x > y) and ((y & 1) != 0):\n        return y >> 1\n  \
    \  \n    if (y > x) and ((x & 1) != 0):\n        return x >> 1\n    \n    return\
    \ -1\n</cell>\n<cell>", "            \n    x = 5\n    y = 30\n    print(choose_num(x,\
    \ y))\n\n    print(choose_num(-1, 50))\n\n    print(choose_num(-10, 50))\n\n \
    \   Output:\n            \"\"\"\n    \n    30\n    -1\n    -1\n\n    \"\"\"\n\
    \    \n    range_x, range_y = sorted([x, y])\n    \n    while range_x < range_y:\n\
    \        \n        if range_x % 2 == 0:\n            return range_x\n        \n\
    \        range_x += range_x + 1\n        \n    return -1\n", "            print(choose_num(3,\
    \ 6))\n            # OUTPUT: 8\n            print(choose_num(-3, -6))\n      \
    \      # OUTPUT: -1\n            \"\"\"\n    \"\"\"\n    return max(x // 2 if\
    \ x % 2 == 0 else x * 2 + y, -1)\n</cell>\n<cell>\nchoose_num(3, 6)\n</cell>\n\
    <cell>\nchoose_num(-3, -6)\n</cell>\n<text>\nProblem 4\nWrite a program that prints\
    \ out all prime numbers up to a user-defined limit.\n\nUse the following test\
    \ data:\n\nTest data 1: limit 10.\nTest data 2: limit 10.\nTest data 3: limit\
    \ 10.\nTest data 4: limit 100.\nTest data 5: limit 20.\n\n\n</text>\n<cell>",
  "            n = choose_num(1, 20)\n            print(n)\n            # => 24\n\
    \            n = choose_num(9, 13)\n            print(n)\n            # => 15\n\
    \n    \"\"\"\n    if y > x:\n        x = y\n    if y <= x:\n        return -1\n\
    \    elif y >= x + 1:\n        return y + 1\n    else:\n        while y <= x:\n\
    \            y = (y + 1) // 2\n        return y\n\n", "            choose_num(4,\
    \ 6)\n            choose_num(6, 4)\n            choose_num(4, 4)\n           \
    \ choose_num(1, 0)\n            choose_num(0, 6)\n            choose_num(6, 0)\n\
    \            choose_num(0, 0)\n            choose_num(-1, 0)\n            choose_num(0,\
    \ -1)\n            choose_num(-1, -1)\n            choose_num(-1, 1)\n       \
    \     choose_num(1, -1)\n            choose_num(-1, -2)\n            choose_num(1,\
    \ 1)\n            choose_num(1, 2)\n            choose_num(1, 3)\n           \
    \ choose_num(1, 4)\n            choose_num(1, 5)\n            choose_num(1, 6)\n\
    \            choose_num(1, 2)\n            choose_num(1, 3)\n            choose_num(1,\
    \ 4)\n            choose_num(1, 5)\n            choose_num(1, 6)\n           \
    \ choose_num(1, 4)\n            choose_num(1, 5)\n            choose_num(1, 6)\n\
    \            choose_num(1, 3)\n            choose_num(1, 4)\n            choose_num(1,\
    \ 5)\n            choose_num(1, 6)\n            choose_num(1, 5)\n           \
    \ choose_num(1, 6)\n            choose_num(1, 4)\n            choose_num(1, 5)\n\
    \            choose_num(1, 6)\n            choose_num(1, 5)\n            choose_num(1,\
    \ 6)\n            choose_num(1, 5)\n            choose_num(1, 6)\n           \
    \ choose_num(1, 4)\n            choose_num(1, 5)\n            choose_num(1, 6)\n\
    \            choose_num(1, 5)\n            choose_num(1, 6)\n            choose_num(1,\
    \ 5)\n            choose_num(1, 6)\n            choose_num(1, 4)\n           \
    \ choose_num(1, 5)\n            choose_num(1, 6)\n            choose_num(1, 5)\n\
    \            choose_num(1, 6)\n            choose_num(1, 4)\n            choose_num(1,\
    \ 5)\n            choose_num(1, 6)\n            choose_num(1, 5)\n           \
    \ choose_num(1, 6)\n            choose_num(1, 4)\n            choose_num(1, 5)\n\
    \            choose_num(1, 6)\n            choose_num(1, 5)\n            choose_num(1,\
    \ 6)\n            choose_num(1, 4)\n            choose_num(1, 5)\n           \
    \ choose_num(1, 6)\n            choose_num(1, 5)\n            choose_num(1, 6)\n\
    \            choose_num(1, 4)\n            choose_num(1, 5)\n            choose_num(1,\
    \ 6)\n            choose_num(1, 5)\n            choose_num(1, 6)\n           \
    \ choose_num(1, 4)\n", "    >>> choose_num(4, 3)\n    4\n    >>> choose_num(8,\
    \ 0)\n    -1\n    >>> choose_num(9, 8)\n    4\n    >>> choose_num(9, 9)\n    -1\n\
    \    >>> choose_num(0, 0)\n    -1\n    >>> choose_num(-1, 3)\n    -1\n    \"\"\
    \"\n    if x % 2 == 0:\n        if y % 2 == 0:\n            if x == y:\n     \
    \           return x\n            else:\n                return y\n        else:\n\
    \            return -1\n    else:\n        if y % 2 == 0:\n            return\
    \ -1\n        else:\n            return x\n        ", "            choose_num(3,\
    \ 7)\n            choose_num(100, 7)\n            choose_num(100, -1)\n      \
    \      choose_num(-1, 100)\n            choose_num(0, 0)\n            choose_num(7,\
    \ 100)\n            choose_num(7, 0)\n            choose_num(0, 7)\n         \
    \   choose_num(7, 100)\n            choose_num(20, 4)\n            choose_num(20,\
    \ -1)\n            choose_num(-1, 20)\n            choose_num(-7, 0)\n       \
    \     choose_num(7, -100)\n            choose_num(-9, -2)\n            choose_num(-9,\
    \ -10)\n            choose_num(-100, -100)\n            choose_num(-20, -2)\n\
    \            choose_num(-3, -2)\n            choose_num(-3, -100)\n          \
    \  choose_num(-3, -3)\n            choose_num(-3, -20)\n            choose_num(-3,\
    \ -15)\n            choose_num(-3, -7)\n            choose_num(-3, -4)\n     \
    \       choose_num(-3, -4)\n            choose_num(-2, 3)\n            choose_num(-1,\
    \ 3)\n            choose_num(-1, 0)\n            choose_num(-1, -2)\n        \
    \    choose_num(-1, -2)\n            choose_num(-1, -2)\n            choose_num(-1,\
    \ -2)\n            choose_num(-1, -2)\n            choose_num(-1, -2)\n      \
    \      choose_num(-1, -2)\n            choose_num(-1, -2)\n            choose_num(-1,\
    \ -2)\n            choose_num(-1, -2)\n            choose_num(-1, -2)\n      \
    \      choose_num(-1, -2)\n            choose_num(-1, -2)\n            choose_num(-1,\
    \ -2)\n            choose_num(-1, -2)\n            choose_num(-1, -2)\n      \
    \      choose_num(-1, -2)\n            choose_num(-1, -2)\n            choose_num(-1,\
    \ -2)\n            choose_num(-1, -2)\n            choose_num(-1, -2)\n      \
    \      choose_num(-1, -2)\n            choose_num(-1, -2)\n            choose_num(-1,\
    \ -2)\n            choose_num(-1, -2)\n            choose_num(-1, -2)\n      \
    \      choose_num(-1, -2)\n            choose_num(-1, -2)\n            choose_num(-1,\
    \ -2)\n            choose_num(-1, -2)\n            choose_num(-1, -2)\n      \
    \      choose_num(-1, -2)\n            choose_num(-1, -2)\n            choose_num(-1,\
    \ -2)\n            choose_", "            x=100\n            y=200\n\n       \
    \     choose_num(x,y)\n            # should return 200\n\n            x=100\n\
    \            y=10\n\n            choose_num(x,y)\n            # should return\
    \ 100\n\n            x=-1\n            y=-1\n\n            choose_num(x,y)\n \
    \           # should return -1\n            \n            \"\"\"\n\n    \n   \
    \ while (x!=y) and (y%2 == 0):\n        y=y//2\n    x= x if x>=y else y\n    return\
    \ x", "            choose_num(9, 0)\n            choose_num(9, 4)\n          \
    \  choose_num(10, 4)\n            choose_num(-9, 4)\n            choose_num(-9,\
    \ 0)\n            choose_num(-10, 4)\n            choose_num(7, 4)\n         \
    \   choose_num(7, 0)\n            choose_num(0, 4)\n            choose_num(0,\
    \ 0)\n            choose_num(1, 4)\n            choose_num(1, 2)\n           \
    \ choose_num(3, 4)\n            choose_num(2, 4)\n            choose_num(5, 4)\n\
    \            choose_num(6, 4)\n            choose_num(8, 4)\n            choose_num(9,\
    \ 4)\n            choose_num(10, 4)\n            choose_num(11, 4)\n         \
    \   choose_num(14, 4)\n            choose_num(15, 4)\n            choose_num(16,\
    \ 4)\n            choose_num(17, 4)\n            choose_num(21, 4)\n         \
    \   choose_num(22, 4)\n            choose_num(23, 4)\n            choose_num(24,\
    \ 4)\n            choose_num(25, 4)\n            choose_num(26, 4)\n         \
    \   choose_num(29, 4)\n            choose_num(30, 4)\n            choose_num(33,\
    \ 4)\n            choose_num(35, 4)\n            choose_num(36, 4)\n         \
    \   choose_num(38, 4)\n            choose_num(39, 4)\n            choose_num(40,\
    \ 4)\n            choose_num(41, 4)\n            choose_num(42, 4)\n         \
    \   choose_num(43, 4)\n            choose_num(44, 4)\n            choose_num(46,\
    \ 4)\n            choose_num(47, 4)\n            choose_num(48, 4)\n         \
    \   choose_num(49, 4)\n            choose_num(50, 4)\n            choose_num(51,\
    \ 4)\n            choose_num(52, 4)\n            choose_num(53, 4)\n         \
    \   choose_num(54, 4)\n            choose_num(57, 4)\n            choose_num(58,\
    \ 4)\n            choose_num(59, 4)\n            choose_num(60, 4)\n         \
    \   choose_num(62, 4)\n            choose_num(63, 4)\n            choose_num(64,\
    \ 4)\n            choose_num(65, 4)\n            choose_num(67, 4)\n         \
    \   choose_num(68, 4)\n            choose_num(71, 4)\n            choose_num(72,\
    \ 4)\n            choose_num(73, 4)\n            ", "            choose_num(7,12)\n\
    \            # should return 16\n            \"\"\"\n    \"\"\"\n    evens = []\n\
    \    even_num = -1\n\n    for i in range(x-1, y+1):\n        if i%2 == 0:\n  \
    \          evens.append(i)\n    if evens:\n        even_num = max(evens)\n\n \
    \   return even_num\n", "            num = choose_num(3, 10)\n            # num\
    \ should be 9\n            # because 3 is the biggest even number in the range\
    \ [3, 10]\n    \"\"\"\n    \n    for i in range(x, y + 1):\n        \n       \
    \ if i % 2 == 0:\n            return i\n    return -1\n", "            >>>choose_num(1,7)\n\
    \            6\n            >>>choose_num(2,7)\n            -1\n            >>>choose_num(3,7)\n\
    \            -1\n            >>>choose_num(1,8)\n            -1\n            \"\
    \"\"\n    Args:\n        x (int): the first number to be tested.\n        y (int):\
    \ second number to be tested.\n    \n    Returns:\n        int: the biggest even\
    \ number in the range [x, y] inclusive.\n    \"\"\"\n    return max( filter(lambda\
    \ x: x%2 ==0, range(x,y)) )\n</cell>\n<cell>\nchoose_num(3,7)\n</cell>\n<cell>\n\
    choose_num(3,10)\n</cell>\n<text>\nProblem 8: Choose the number\n Your function\
    \ should take two positive numbers as parameters and return an integer.\n\nIf\
    \ you need help with your function, you can find it in the code block above. \n\
    You should write your function so that it returns the correct number for any two\
    \ positive integer numbers.\nThe number that your function returns should always\
    \ be in the range [1,n] where n is the number of elements in the given list.\n\
    The function should work for any list with any number of elements.\n\nFor example:\n\
    If the list is: [4,3,6,7,8,1]\n\nthe function should return 5, because it's the\
    \ biggest even number in this list.\nIf the list is: [1,5,3]\n\nthe function should\
    \ return -1. \nIf the list is: [5,1]\n\nthe function should return -1\nIf the\
    \ list is: []\n\nthe function should return -1\n\n</text>\n<cell>", "    >>> choose_num(10,\
    \ 20)\n    20\n    >>> choose_num(3, 3)\n    -1\n            \"\"\"\n    \"\"\"\
    \n    biggest = y\n    while x <= y:\n        if x % 2 == 0:\n            biggest\
    \ = x\n            x += 1\n        else:\n            x += 1\n    return biggest\n\
    \n", "            print(choose_num(2, 7))\n            print(choose_num(3, 6))\n\
    \            print(choose_num(6, 3))\n            print(choose_num(7, 7))\n  \
    \          print(choose_num(-1, -1))\n            print(choose_num(-1, 10))\n\
    \            print(choose_num(10, -1))\n            print(choose_num(11, -1))\n\
    \    \"\"\"\n    if x < 0:\n        x = -x\n    if y < 0:\n        y = -y\n  \
    \  for i in range(x, y + 1):\n        if i % 2 != 0:\n            return i\n \
    \   return -1\n\n", "            choose_num(1, 5)\n            >>6\n         \
    \   choose_num(8, 5)\n            >>10\n            choose_num(13, 8)\n      \
    \      >>10\n            choose_num(14, 8)\n            >>-1\n            choose_num(-14,\
    \ 8)\n            >>-1\n            choose_num(-13, 8)\n            >>-1\n   \
    \         choose_num(-2, 15)\n            >>-1\n\n    \"\"\"\n    while x >= y:\n\
    \        if x % 2 == 0:\n            x //= 2\n        elif y % 2 == 0:\n     \
    \       y //= 2\n        else:\n            return -1\n\n    while x % 2 == 0\
    \ and y % 2 == 0:\n        x //= 2\n        y //= 2\n\n    if x >= y:\n      \
    \  return x\n    else:\n        return y\n\n", "    >>> choose_num(100, -2)\n\
    \    -1\n    \"\"\"\n    if x >= y and x >= y:\n        return -1\n    elif x\
    \ < y and y < x:\n        return -1\n    elif y < x and x > y:\n        return\
    \ -1\n    elif x < y and y < x:\n        return -1\n    elif x < y and x > y:\n\
    \        return -1\n    elif x > y:\n        even_numbers = [i for i in range(x,\
    \ y + 1, 2)]\n        return max(even_numbers)\n    else:\n        return -1\n\
    \n", "            choose_num(2, 3)\n            >>>4\n            choose_num(2,\
    \ 4)\n            >>>-1\n            choose_num(2, 5)\n            >>>-1\n   \
    \         choose_num(3, 1)\n            >>>-1\n            choose_num(3, 2)\n\
    \            >>>2\n            choose_num(3, 3)\n            >>>2\n          \
    \  \"\"\"\n    \"\"\"\n", "            Input:\n                x = 2\n       \
    \         y = 3\n            Output:\n                4\n            \"\"\"\n\
    \    \"\"\"\n\n    while x < y:\n        if x % 2 == 0:\n            if y % 2\
    \ == 0:\n                return x\n            else:\n                return -1\n\
    \        else:\n            y -= 1\n\n    return -1\n\n", "    >>> choose_num(2,\
    \ 5)\n    5\n    >>> choose_num(25, 15)\n    15\n    >>> choose_num(0, 0)\n  \
    \  -1\n    >>> choose_num(10, -2)\n    -1\n    \"\"\"\n    if x <= y or x > y:\n\
    \        return -1\n\n    if y > x:\n        greater = choose_num(y, x)\n    \
    \    if greater > 0:\n            return greater\n\n    if x > y:\n        greater\
    \ = choose_num(x, y)\n        if greater > 0:\n            return greater\n  \
    \  return x if x % 2 == 0 else y\n\n", "        choose_num(2, 3)\n        choose_num(4,\
    \ 6)\n        choose_num(1, 2)\n        choose_num(-1, -2)\n        choose_num(0,\
    \ 4)\n        choose_num(1, -2)\n        choose_num(1, 0)\n        choose_num(-1,\
    \ 2)\n        choose_num(-1, -1)\n        choose_num(-1, 0)\n        choose_num(11,\
    \ 100)\n        choose_num(-100, 100)\n        choose_num(-8, 8)\n        choose_num(-5,\
    \ 5)\n        choose_num(-6, -2)\n        choose_num(-4, 4)\n        choose_num(-7,\
    \ 7)\n        choose_num(-5, -2)\n        choose_num(-2, 4)\n        choose_num(-5,\
    \ -1)\n        choose_num(-3, 5)\n        choose_num(-2, -3)\n        choose_num(-1,\
    \ -2)\n        choose_num(0, 0)\n        choose_num(0, 1)\n        choose_num(0,\
    \ -2)\n        choose_num(0, 0)\n        choose_num(-2, 0)\n        choose_num(2,\
    \ 2)\n        choose_num(-2, 2)\n        choose_num(-1, 2)\n        choose_num(0,\
    \ 2)\n        choose_num(2, -1)\n        choose_num(2, 3)\n        choose_num(-2,\
    \ 3)\n        choose_num(-1, -3)\n        choose_num(0, -2)\n        choose_num(0,\
    \ -1)\n        choose_num(0, 0)\n        choose_num(0, 1)\n        choose_num(0,\
    \ 2)\n        choose_num(0, 3)\n        choose_num(0, -3)\n        choose_num(0,\
    \ 0)\n        choose_num(0, 1)\n        choose_num(1, 1)\n        choose_num(0,\
    \ -2)\n        choose_num(1, 0)\n        choose_num(2, 2)\n        choose_num(0,\
    \ 2)\n        choose_num(-2, 2)\n        choose_num(2, 0)\n        choose_num(2,\
    \ 2)\n        choose_num(-1, -2)\n        choose_num(2, -1)\n        choose_num(-2,\
    \ -1)\n        choose_num(-1, 1)\n        choose_num(2, -1)\n        choose_num(2,\
    \ -2)\n        choose_num(-1, -2)\n        choose_num(-1, -2)\n        choose_num(1,\
    \ 1)\n        choose_num(2, 0)\n        choose_num(2, 1)\n        choose_num(0,\
    \ 2)\n        choose_num(2, 1)\n        choose_num(2, 1)\n        choose_num(2,\
    \ 0)\n        choose_num(0, 3)\n        choose_num", "            x = 4\n    \
    \        y = 10\n            choose_num(x, y)\n            # Output: 4\n     \
    \       \"\"\"\n    Args:\n        x: first number\n        y: second number\n\
    \n    Returns:\n        int: the biggest even number that is in [x, y] inclusive.\n\
    \        -1: there is no such even number.\n    \"\"\"\n    # your code here\n",
  "            >>> choose_num(5, 10)\n            4\n            >>> choose_num(-5,\
    \ 10)\n            -1\n            \"\"\"\n            if x < 0 or y < 0 or x\
    \ > y or x % 2 == 0 or y % 2 == 0:\n                return -1\n            else:\n\
    \                even = x + y - 1\n                even = (even + (1 if (even\
    \ % 2 == 0) else 0)) // 2\n                return even\n\n        Explanation:\n\
    \            We start at x+y-1, which is equivalent to x+y + (y-x)+1 which is\
    \ \n            equivalent to\n            \"\"\"\n            x = x + y\n   \
    \         y = x - y\n            x = x + (y-x)+1\n            \"\"\"\n       \
    \     We then add 1 to the result if even (x+y-1)%2 == 0, and divide by 2 \n \
    \           if even (x+y-1)%2 != 0\n            \"\"\"\n\n    \"\"\"\n    if x\
    \ < 0 or y < 0 or x > y or x % 2 == 0 or y % 2 == 0:\n        return -1\n    else:\n\
    \        even = x + y - 1\n        even = (even + (1 if (even % 2 == 0) else 0))\
    \ // 2\n        return even\n\n", "    \n    x <- 5\n    y <- 7\n    \n    choose_num(x,\
    \ y)\n    \n    Output: 7\n    \"\"\"\n\n    biggest_num = 1\n    \n    for n\
    \ in range(x, y + 1):\n        if n % 2 == 0 and n % 4 == 0:\n            biggest_num\
    \ = n\n        \n    return biggest_num\n</cell>\n<cell>", "            >>> choose_num(2,\
    \ 4)\n            5\n            >>> choose_num(-2, -4)\n            -1\n    \
    \        >>> choose_num(1, 1)\n            -1\n            >>> choose_num(2, -2)\n\
    \            -1\n            >>> choose_num(7, 7)\n            7\n           \
    \ >>> choose_num(7, 8)\n            8\n            >>> choose_num(8, 7)\n    \
    \        -1\n            >>> choose_num(8, 2)\n            -1\n    \"\"\"\n  \
    \  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\
    \    \n    \n    \n    ", "    >>> choose_num(12, 4)\n    6\n    >>> choose_num(5,\
    \ 5)\n    -1\n    \"\"\"\n    if x <= y:\n        larger_num = x\n    else:\n\
    \        larger_num = y\n        \n    smaller_num = (larger_num + 1)\n    \n\
    \    sum_of_even_numbers = 0\n    \n    while smaller_num != 0:\n        if smaller_num\
    \ % 2 == 0:\n            sum_of_even_numbers += smaller_num\n            smaller_num\
    \ = smaller_num // 2\n        else:\n            smaller_num = smaller_num - 1\n\
    \            \n    if sum_of_even_numbers == larger_num:\n        return larger_num\n\
    \    elif sum_of_even_numbers < larger_num:\n        return -1\n    else:\n  \
    \      return -1\n\n    ", "            choose_num(17, 25)\n            >> 16\n\
    \            \"\"\"\n    Args:\n        x: integer number one less than the upper\
    \ bound for the number \n            of integers being searched\n        y: integer\
    \ number one less than the upper bound for the number \n            of integers\
    \ being searched\n    Raises:\n        ValueError: if the input arguments are\
    \ less than zero or too large\n\n    Returns:\n        An integer number less\
    \ than x and bigger than y that is an even \n        number. -1 if not an even\
    \ number\n    \"\"\"\n    if x < 0 or y < 0 or x > y or x > 100 or y > 100 or\
    \ x % 2 != 0 or y % 2 != 0:\n        raise ValueError(\"Invalid parameters: x,\
    \ y\")\n    return -1\n\n", "            choose_num(7, 10)\n            7\n  \
    \          \"\"\"\n\n    Args:\n        x (int): the lower bound\n        y (int):\
    \ the upper bound\n\n    Returns:\n        int: biggest even number in the given\
    \ range [x, y]\n    \"\"\"\n    # Your code here\n    \n    if x % 2 == 0 and\
    \ y % 2 == 0:\n        if x != y:\n            if x == y - 1:\n              \
    \  return x\n            else:\n                return x + 1\n        elif x ==\
    \ y:\n            return x\n        elif x == y - 1:\n            return y\n \
    \       else:\n            return y\n    else:\n        return -1\n", "    >>>\
    \ choose_num(6, 9)\n    6\n    \"\"\"\n    nums = [i for i in range(x, y + 1)\
    \ if i % 2 == 0]\n    num = max(nums)\n    return num\n\n", "    >>> choose_num(1,\
    \ 3)\n    3\n    >>> choose_num(3, 7)\n    6\n    >>> choose_num(10, 5)\n    -1\n\
    \    \"\"\"\n    if y <= x:\n        raise ValueError(\"y should be bigger than\
    \ or equal x\")\n    if y%2 != 0 or x%2 != 0:\n        raise ValueError(\"x and\
    \ y should be both positive integers\")\n    for i in range(y, x, 2):\n      \
    \  if i%2 == 0:\n            return i\n    return -1\n</cell>\n<cell>\nchoose_num(1,\
    \ 3)\n</cell>\n<cell>\nchoose_num(11, 5)\n</cell>\n<text>\nExercise: Implement\
    \ a function that takes in a list of integers and returns the list with the even\
    \ numbers removed.\n\nThe function should raise a ValueError exception if the\
    \ list contains an odd number.\n\n\n</text>\n<cell>"]
stop_tokens:
- "\ndef"
- "\n#"
- "\nif"
- "\nclass"

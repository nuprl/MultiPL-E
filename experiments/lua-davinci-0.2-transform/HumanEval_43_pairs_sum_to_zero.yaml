name: HumanEval_43_pairs_sum_to_zero
language: lua
prompt: "-- pairs_sum_to_zero takes a list of integers as an input.\n-- it returns\
  \ True if there are two distinct elements in the list that\n-- sum to zero, and\
  \ False otherwise.\n-- >>> pairs_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> pairs_sum_to_zero({1,\
  \ 3, -2, 1})\n-- false\n-- >>> pairs_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
  \ pairs_sum_to_zero({2, 4, -5, 3, 5, 7})\n-- true\n-- >>> pairs_sum_to_zero({1})\n\
  -- false\nlocal function pairs_sum_to_zero(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pairs_sum_to_zero\n\
  \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, -2, 1}), false)\n    lu.assertEquals(candidate({1, 2, 3, 7}), false)\n    lu.assertEquals(candidate({2,\
  \ 4, -5, 3, 5, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({-3,\
  \ 9, -1, 3, 2, 30}), true)\n    lu.assertEquals(candidate({-3, 9, -1, 3, 2, 31}),\
  \ true)\n    lu.assertEquals(candidate({-3, 9, -1, 4, 2, 30}), false)\n    lu.assertEquals(candidate({-3,\
  \ 9, -1, 4, 2, 31}), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v]\
    \ then\n            return true\n        end\n        seen[v] = true\n    end\n\
    \    return false\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    local t = {}\n    for _, v in ipairs(l) do\n        if t[-v] then\n\
    \            return true\n        end\n        t[v] = true\n    end\n    return\
    \ false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v]\
    \ then\n            return true\n        end\n        s[v] = true\n    end\n \
    \   return false\nend", "  local s = {}\n  for _, v in ipairs(l) do\n    if s[-v]\
    \ then\n      return true\n    end\n    s[v] = true\n  end\n  return false\nend",
  "  local seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n      return\
    \ true\n    end\n    seen[v] = true\n  end\n  return false\nend", "    local seen\
    \ = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n            return\
    \ true\n        end\n        seen[v] = true\n    end\n    return false\nend",
  "    -- TODO: implement this function\nend", "    for i = 1, #l do\n        for\
    \ j = i + 1, #l do\n            if l[i] + l[j] == 0 then\n                return\
    \ true\n            end\n        end\n    end\n    return false\nend", "    local\
    \ seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n        \
    \    return true\n        end\n        seen[v] = true\n    end\n    return false\n\
    end", "  local seen = {}\n  for i = 1, #l do\n    if seen[-l[i]] then\n      return\
    \ true\n    end\n    seen[l[i]] = true\n  end\n  return false\nend", "    local\
    \ seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n        \
    \    return true\n        end\n        seen[v] = true\n    end\n    return false\n\
    end", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n\
    \            return true\n        end\n        s[v] = true\n    end\n    return\
    \ false\nend", "    -- YOUR CODE HERE\n    return false\nend", "    -- YOUR CODE\
    \ HERE\n    local num = 0\n    local num2 = 0\n    for i,v in ipairs(l) do\n \
    \       for j,w in ipairs(l) do\n            if v == -w and i ~= j then\n    \
    \            num = num + 1\n            end\n        end\n    end\n    if num\
    \ > 0 then\n        return true\n    else\n        return false\n    end\nend",
  "    -- YOUR CODE HERE\n    return false\nend", "  local seen = {}\n  for _, v in\
    \ ipairs(l) do\n    if seen[-v] then\n      return true\n    end\n    seen[v]\
    \ = true\n  end\n  return false\nend", "    -- TODO: implement this function\n\
    \    return false\nend", "  -- TODO: implement this function\n  return false\n\
    end", "  -- your code here\n  return false\nend", "    local seen = {}\n    for\
    \ _, v in ipairs(l) do\n        if seen[-v] then\n            return true\n  \
    \      end\n        seen[v] = true\n    end\n    return false\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "  -- your code here\n  local\
    \ set = {}\n  for i, v in ipairs(l) do\n    if set[v] then\n      return true\n\
    \    else\n      set[-v] = true\n    end\n  end\n  return false\nend", "    --\
    \ your code here\n    local set = {}\n    for _, v in ipairs(l) do\n        if\
    \ set[-v] then\n            return true\n        end\n        set[v] = true\n\
    \    end\n    return false\nend", "    local seen = {}\n    for _, v in ipairs(l)\
    \ do\n        if seen[-v] then\n            return true\n        end\n       \
    \ seen[v] = true\n    end\n    return false\nend", "    local seen = {}\n    for\
    \ i, v in ipairs(l) do\n        if seen[-v] then\n            return true\n  \
    \      end\n        seen[v] = true\n    end\n    return false\nend", "  local\
    \ s = {}\n  for _, v in ipairs(l) do\n    if s[-v] then\n      return true\n \
    \   end\n    s[v] = true\n  end\n  return false\nend", "    local s = {}\n   \
    \ for _, v in ipairs(l) do\n        if s[-v] then\n            return true\n \
    \       end\n        s[v] = true\n    end\n    return false\nend", "  local s\
    \ = {}\n  for i, v in ipairs(l) do\n    if s[-v] then\n      return true\n   \
    \ end\n    s[v] = true\n  end\n  return false\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "  local seen = {}\n  for _, v in ipairs(l)\
    \ do\n    if seen[-v] then\n      return true\n    end\n    seen[v] = true\n \
    \ end\n  return false\nend", "  local t = {}\n  for _, v in ipairs(l) do\n   \
    \ if t[-v] then\n      return true\n    end\n    t[v] = true\n  end\n  return\
    \ false\nend", "    -- TODO: implement this function\n    return false\nend",
  "  local seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n      return\
    \ true\n    end\n    seen[v] = true\n  end\n  return false\nend", "    local seen\
    \ = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n            return\
    \ true\n        end\n        seen[v] = true\n    end\n    return false\nend",
  "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n       \
    \     return true\n        end\n        s[v] = true\n    end\n    return false\n\
    end", "  -- TODO: implement this function\n  return false\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    local seen = {}\n    for\
    \ _, v in ipairs(l) do\n        if seen[-v] then\n            return true\n  \
    \      end\n        seen[v] = true\n    end\n    return false\nend", "    local\
    \ found = false\n    for i, v in ipairs(l) do\n        for j, w in ipairs(l) do\n\
    \            if i ~= j and v + w == 0 then\n                found = true\n   \
    \         end\n        end\n    end\n    return found\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    -- TODO: implement this function\n\
    \    return false\nend", "    local set = {}\n    for _, v in ipairs(l) do\n \
    \       if set[-v] then\n            return true\n        end\n        set[v]\
    \ = true\n    end\n    return false\nend", "    local seen = {}\n    for _, v\
    \ in ipairs(l) do\n        if seen[-v] then\n            return true\n       \
    \ end\n        seen[v] = true\n    end\n    return false\nend", "  -- TODO: implement\
    \ this function\n  return false\nend", "    local s = {}\n    for _, v in ipairs(l)\
    \ do\n        if s[-v] then\n            return true\n        end\n        s[v]\
    \ = true\n    end\n    return false\nend", "    local seen = {}\n    for _, v\
    \ in ipairs(l) do\n        if seen[-v] then\n            return true\n       \
    \ end\n        seen[v] = true\n    end\n    return false\nend", "    local seen\
    \ = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n            return\
    \ true\n        end\n        seen[v] = true\n    end\n    return false\nend",
  "    local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n \
    \           return true\n        end\n        seen[v] = true\n    end\n    return\
    \ false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v]\
    \ then\n            return true\n        end\n        s[v] = true\n    end\n \
    \   return false\nend", "  -- TODO: implement this function\n  local s = {}\n\
    \  for i, v in ipairs(l) do\n    if s[v] then\n      return true\n    else\n \
    \     s[-v] = true\n    end\n  end\n  return false\nend", "    -- YOUR CODE HERE\n\
    \    return false\nend", "    local seen = {}\n    for _, v in ipairs(l) do\n\
    \        if seen[-v] then\n            return true\n        end\n        seen[v]\
    \ = true\n    end\n    return false\nend", "    -- TODO: implement this function\n\
    \    return false\nend", "  -- TODO: implement this function\n  return false\n\
    end", "  local s = {}\n  for _, v in ipairs(l) do\n    if s[-v] then\n      return\
    \ true\n    end\n    s[v] = true\n  end\n  return false\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "  local s = {}\n  for _, v in ipairs(l)\
    \ do\n    if s[-v] then\n      return true\n    end\n    s[v] = true\n  end\n\
    \  return false\nend", "    local seen = {}\n    for _, v in ipairs(l) do\n  \
    \      if seen[-v] then\n            return true\n        end\n        seen[v]\
    \ = true\n    end\n    return false\nend", "    -- YOUR CODE HERE\n    local n\
    \ = #l\n    for i = 1, n do\n        for j = i + 1, n do\n            if l[i]\
    \ + l[j] == 0 then\n                return true\n            end\n        end\n\
    \    end\n    return false\nend", "  local s = {}\n  for _, v in ipairs(l) do\n\
    \    if s[-v] then\n      return true\n    end\n    s[v] = true\n  end\n  return\
    \ false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v]\
    \ then\n            return true\n        end\n        s[v] = true\n    end\n \
    \   return false\nend", "    local seen = {}\n    for _, v in ipairs(l) do\n \
    \       if seen[-v] then\n            return true\n        end\n        seen[v]\
    \ = true\n    end\n    return false\nend", "  for i = 1, #l do\n    for j = i\
    \ + 1, #l do\n      if l[i] + l[j] == 0 then\n        return true\n      end\n\
    \    end\n  end\n  return false\nend", "  local s = {}\n  for _, v in ipairs(l)\
    \ do\n    if s[-v] then\n      return true\n    end\n    s[v] = true\n  end\n\
    \  return false\nend", "  local seen = {}\n  for _, v in ipairs(l) do\n    if\
    \ seen[-v] then\n      return true\n    end\n    seen[v] = true\n  end\n  return\
    \ false\nend", "    local set = {}\n    for _, v in ipairs(l) do\n        if set[-v]\
    \ then\n            return true\n        end\n        set[v] = true\n    end\n\
    \    return false\nend", "    -- YOUR CODE HERE\n    return false\nend", "   \
    \ local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n        \
    \    return true\n        end\n        s[v] = true\n    end\n    return false\n\
    end", "  local seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n \
    \     return true\n    end\n    seen[v] = true\n  end\n  return false\nend", " \
    \   -- your code here\n    local set = {}\n    for _, v in ipairs(l) do\n    \
    \    if set[v] then\n            return true\n        end\n        set[-v] = true\n\
    \    end\n    return false\nend", "    local seen = {}\n    for _, v in ipairs(l)\
    \ do\n        if seen[-v] then\n            return true\n        end\n       \
    \ seen[v] = true\n    end\n    return false\nend", "  local seen = {}\n  for _,\
    \ v in ipairs(l) do\n    if seen[-v] then\n      return true\n    end\n    seen[v]\
    \ = true\n  end\n  return false\nend", "  local s = {}\n  for _, v in ipairs(l)\
    \ do\n    if s[-v] then\n      return true\n    end\n    s[v] = true\n  end\n\
    \  return false\nend", "  local s = {}\n  for _, v in ipairs(l) do\n    if s[-v]\
    \ then\n      return true\n    end\n    s[v] = true\n  end\n  return false\nend",
  "    local set = {}\n    for _, v in ipairs(l) do\n        if set[-v] then\n   \
    \         return true\n        end\n        set[v] = true\n    end\n    return\
    \ false\nend", "  local seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v]\
    \ then\n      return true\n    end\n    seen[v] = true\n  end\n  return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "  -- YOUR\
    \ CODE HERE\n  local sum = 0\n  for i = 1, #l do\n    for j = 1, #l do\n     \
    \ if i ~= j then\n        sum = l[i] + l[j]\n        if sum == 0 then\n      \
    \    return true\n        end\n      end\n    end\n  end\n  return false\nend",
  "    for i = 1, #l do\n        for j = i + 1, #l do\n            if l[i] + l[j]\
    \ == 0 then\n                return true\n            end\n        end\n    end\n\
    \    return false\nend", "    local n = #l\n    for i = 1, n - 1 do\n        for\
    \ j = i + 1, n do\n            if l[i] + l[j] == 0 then\n                return\
    \ true\n            end\n        end\n    end\n    return false\nend", "    local\
    \ seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n        \
    \    return true\n        end\n        seen[v] = true\n    end\n    return false\n\
    end", "    -- YOUR CODE HERE\n    return false\nend", "  -- YOUR CODE HERE\n \
    \ local sum = 0\n  for i,v in ipairs(l) do\n    for j,w in ipairs(l) do\n    \
    \  if i ~= j then\n        sum = v + w\n        if sum == 0 then\n          return\
    \ true\n        end\n      end\n    end\n  end\n  return false\nend", "  -- TODO:\
    \ implement this function\n  return false\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "  local seen = {}\n  for _, v in ipairs(l)\
    \ do\n    if seen[-v] then\n      return true\n    end\n    seen[v] = true\n \
    \ end\n  return false\nend", "    local seen = {}\n    for _, v in ipairs(l) do\n\
    \        if seen[-v] then\n            return true\n        end\n        seen[v]\
    \ = true\n    end\n    return false\nend", "  -- TODO: implement this function\n\
    \  return false\nend", "    -- TODO: implement this function\n    return false\n\
    end", "  for i = 1, #l do\n    for j = i + 1, #l do\n      if l[i] + l[j] == 0\
    \ then\n        return true\n      end\n    end\n  end\n  return false\nend",
  "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n       \
    \     return true\n        end\n        s[v] = true\n    end\n    return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    for\
    \ i = 1, #l do\n        for j = i + 1, #l do\n            if l[i] + l[j] == 0\
    \ then\n                return true\n            end\n        end\n    end\n \
    \   return false\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    local t = {}\n    for _, v in ipairs(l) do\n        if t[-v] then\n\
    \            return true\n        end\n        t[v] = true\n    end\n    return\
    \ false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v]\
    \ then\n            return true\n        end\n        s[v] = true\n    end\n \
    \   return false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n    \
    \    if s[-v] then\n            return true\n        end\n        s[v] = true\n\
    \    end\n    return false\nend", "    -- your code here\n    return false\nend",
  "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n       \
    \     return true\n        end\n        s[v] = true\n    end\n    return false\n\
    end", "  local set = {}\n  for _, v in ipairs(l) do\n    if set[-v] then\n   \
    \   return true\n    end\n    set[v] = true\n  end\n  return false\nend", "  local\
    \ seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n      return true\n\
    \    end\n    seen[v] = true\n  end\n  return false\nend", "    local seen = {}\n\
    \    for _, v in ipairs(l) do\n        if seen[-v] then\n            return true\n\
    \        end\n        seen[v] = true\n    end\n    return false\nend", "    local\
    \ s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n            return\
    \ true\n        end\n        s[v] = true\n    end\n    return false\nend", " \
    \ local seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n      return\
    \ true\n    end\n    seen[v] = true\n  end\n  return false\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    local s = {}\n    for\
    \ _, v in ipairs(l) do\n        if s[-v] then\n            return true\n     \
    \   end\n        s[v] = true\n    end\n    return false\nend", "    -- YOUR CODE\
    \ HERE\n    for i = 1, #l do\n        for j = i + 1, #l do\n            if l[i]\
    \ + l[j] == 0 then\n                return true\n            end\n        end\n\
    \    end\n    return false\nend", "  local seen = {}\n  for _, v in ipairs(l)\
    \ do\n    if seen[-v] then\n      return true\n    end\n    seen[v] = true\n \
    \ end\n  return false\nend", "  -- TODO: implement this function\nend", "    --\
    \ TODO: implement this function\n    return false\nend", "    local set = {}\n\
    \    for _, v in ipairs(l) do\n        if set[-v] then\n            return true\n\
    \        end\n        set[v] = true\n    end\n    return false\nend", "    local\
    \ s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n            return\
    \ true\n        end\n        s[v] = true\n    end\n    return false\nend", " \
    \   local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n      \
    \      return true\n        end\n        s[v] = true\n    end\n    return false\n\
    end", "    -- YOUR CODE HERE\n    for i = 1, #l do\n        for j = i + 1, #l\
    \ do\n            if l[i] + l[j] == 0 then\n                return true\n    \
    \        end\n        end\n    end\n    return false\nend", "    local s = {}\n\
    \    for _, v in ipairs(l) do\n        if s[-v] then\n            return true\n\
    \        end\n        s[v] = true\n    end\n    return false\nend", "    -- YOUR\
    \ CODE HERE\n    for i = 1, #l do\n        for j = i + 1, #l do\n            if\
    \ l[i] + l[j] == 0 then\n                return true\n            end\n      \
    \  end\n    end\n    return false\nend", "  -- TODO\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    local set = {}\n    for _, v in\
    \ ipairs(l) do\n        if set[-v] then\n            return true\n        end\n\
    \        set[v] = true\n    end\n    return false\nend", "    local seen = {}\n\
    \    for _, v in ipairs(l) do\n        if seen[-v] then\n            return true\n\
    \        end\n        seen[v] = true\n    end\n    return false\nend", "    local\
    \ set = {}\n    for _, v in ipairs(l) do\n        if set[-v] then\n          \
    \  return true\n        end\n        set[v] = true\n    end\n    return false\n\
    end", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n\
    \            return true\n        end\n        s[v] = true\n    end\n    return\
    \ false\nend", "  local set = {}\n  for _, v in ipairs(l) do\n    if set[-v] then\n\
    \      return true\n    end\n    set[v] = true\n  end\n  return false\nend", " \
    \   local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n\
    \            return true\n        end\n        seen[v] = true\n    end\n    return\
    \ false\nend", "    -- TODO: implement this function\n    return false\nend",
  "    -- TODO: implement this function\n    return false\nend", "    local t = {}\n\
    \    for _, v in ipairs(l) do\n        if t[-v] then\n            return true\n\
    \        end\n        t[v] = true\n    end\n    return false\nend", "    local\
    \ s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n            return\
    \ true\n        end\n        s[v] = true\n    end\n    return false\nend", " \
    \   local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n      \
    \      return true\n        end\n        s[v] = true\n    end\n    return false\n\
    end", "    local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v]\
    \ then\n            return true\n        end\n        seen[v] = true\n    end\n\
    \    return false\nend", "  -- TODO: implement this function\n  return false\n\
    end", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n\
    \            return true\n        end\n        s[v] = true\n    end\n    return\
    \ false\nend", "  -- TODO: implement this function\n  local sum = 0\n  for i =\
    \ 1, #l do\n    for j = i + 1, #l do\n      if l[i] + l[j] == 0 then\n       \
    \ return true\n      end\n    end\n  end\n  return false\nend", "    local seen\
    \ = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n            return\
    \ true\n        end\n        seen[v] = true\n    end\n    return false\nend",
  "    local set = {}\n    for _, v in ipairs(l) do\n        if set[-v] then\n   \
    \         return true\n        end\n        set[v] = true\n    end\n    return\
    \ false\nend", "    -- TODO: implement this function\n    return false\nend",
  "    -- TODO: implement this function\n    return false\nend", "    for i = 1, #l\
    \ do\n        for j = i + 1, #l do\n            if l[i] + l[j] == 0 then\n   \
    \             return true\n            end\n        end\n    end\n    return false\n\
    end", "    local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v]\
    \ then\n            return true\n        end\n        seen[v] = true\n    end\n\
    \    return false\nend", "  local s = {}\n  for _, v in ipairs(l) do\n    if s[-v]\
    \ then\n      return true\n    end\n    s[v] = true\n  end\n  return false\nend",
  "  -- your code here\n  local n = #l\n  for i = 1, n do\n    for j = i + 1, n do\n\
    \      if l[i] + l[j] == 0 then\n        return true\n      end\n    end\n  end\n\
    \  return false\nend", "  -- your code here\n  local count = 0\n  for i, v in\
    \ ipairs(l) do\n    for j, w in ipairs(l) do\n      if v + w == 0 and i ~= j then\n\
    \        count = count + 1\n      end\n    end\n  end\n  if count > 0 then\n \
    \   return true\n  else\n    return false\n  end\nend", "    local seen = {}\n\
    \    for _, x in ipairs(l) do\n        if seen[-x] then\n            return true\n\
    \        end\n        seen[x] = true\n    end\n    return false\nend", "    --\
    \ TODO: implement this function\n    return false\nend", "    local s = {}\n \
    \   for _, v in ipairs(l) do\n        if s[-v] then\n            return true\n\
    \        end\n        s[v] = true\n    end\n    return false\nend", "    local\
    \ seen = {}\n    for i = 1, #l do\n        local x = l[i]\n        if seen[-x]\
    \ then\n            return true\n        end\n        seen[x] = true\n    end\n\
    \    return false\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v]\
    \ then\n            return true\n        end\n        seen[v] = true\n    end\n\
    \    return false\nend", "  -- TODO: implement this function\n  return false\n\
    end", "    for i, v in ipairs(l) do\n        for j, w in ipairs(l) do\n      \
    \      if i ~= j and v + w == 0 then\n                return true\n          \
    \  end\n        end\n    end\n    return false\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    -- TODO: implement this function\n\
    \    return false\nend", "  local seen = {}\n  for _, v in ipairs(l) do\n    if\
    \ seen[-v] then\n      return true\n    end\n    seen[v] = true\n  end\n  return\
    \ false\nend", "    local seen = {}\n    for _, v in ipairs(l) do\n        if\
    \ seen[-v] then\n            return true\n        end\n        seen[v] = true\n\
    \    end\n    return false\nend", "    local s = {}\n    for _, v in ipairs(l)\
    \ do\n        if s[-v] then\n            return true\n        end\n        s[v]\
    \ = true\n    end\n    return false\nend", "  return false\nend", "  local s =\
    \ {}\n  for _, v in ipairs(l) do\n    if s[-v] then\n      return true\n    end\n\
    \    s[v] = true\n  end\n  return false\nend", "    local seen = {}\n    for _,\
    \ v in ipairs(l) do\n        if seen[-v] then\n            return true\n     \
    \   end\n        seen[v] = true\n    end\n    return false\nend", "    local seen\
    \ = {}\n    for _, x in ipairs(l) do\n        if seen[-x] then\n            return\
    \ true\n        end\n        seen[x] = true\n    end\n    return false\nend",
  "  -- TODO: implement this function\n  return false\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    local seen = {}\n    for _, v in\
    \ ipairs(l) do\n        if seen[-v] then\n            return true\n        end\n\
    \        seen[v] = true\n    end\n    return false\nend", "  local seen = {}\n\
    \  for _, v in ipairs(l) do\n    if seen[-v] then\n      return true\n    end\n\
    \    seen[v] = true\n  end\n  return false\nend", "  local seen = {}\n  for _,\
    \ v in ipairs(l) do\n    if seen[-v] then\n      return true\n    end\n    seen[v]\
    \ = true\n  end\n  return false\nend", "  -- TODO: implement this function\n \
    \ return false\nend", "    -- TODO: implement this function\n    return false\n\
    end", "    local t = {}\n    for _, v in ipairs(l) do\n        if t[-v] then\n\
    \            return true\n        end\n        t[v] = true\n    end\n    return\
    \ false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v]\
    \ then\n            return true\n        end\n        s[v] = true\n    end\n \
    \   return false\nend", "  -- TODO: implement this function\n  -- Hint: use a\
    \ helper function\n  local function helper(l, i)\n    if i == #l then\n      return\
    \ false\n    elseif l[i] + l[i+1] == 0 then\n      return true\n    else\n   \
    \   return helper(l, i+1)\n    end\n  end\n  return helper(l, 1)\nend", "  local\
    \ seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n      return true\n\
    \    end\n    seen[v] = true\n  end\n  return false\nend", "    -- YOUR CODE HERE\n\
    \    return false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n   \
    \     if s[-v] then\n            return true\n        end\n        s[v] = true\n\
    \    end\n    return false\nend", "  -- YOUR CODE HERE\n  local set = {}\n  for\
    \ i = 1, #l do\n    if set[l[i]] then\n      return true\n    else\n      set[-l[i]]\
    \ = true\n    end\n  end\n  return false\nend", "    -- YOUR CODE HERE\n    local\
    \ set = {}\n    for _, v in ipairs(l) do\n        if set[-v] then\n          \
    \  return true\n        end\n        set[v] = true\n    end\n    return false\n\
    end", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n\
    \            return true\n        end\n        s[v] = true\n    end\n    return\
    \ false\nend", "    local set = {}\n    for _, v in ipairs(l) do\n        if set[-v]\
    \ then\n            return true\n        end\n        set[v] = true\n    end\n\
    \    return false\nend", "  local seen = {}\n  for _, v in ipairs(l) do\n    if\
    \ seen[-v] then\n      return true\n    end\n    seen[v] = true\n  end\n  return\
    \ false\nend", "  local seen = {}\n  for _, x in ipairs(l) do\n    if seen[-x]\
    \ then\n      return true\n    end\n    seen[x] = true\n  end\n  return false\n\
    end", "    -- TODO: implement this function\n    return false\nend", "    local\
    \ seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n        \
    \    return true\n        end\n        seen[v] = true\n    end\n    return false\n\
    end", "  local seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n \
    \     return true\n    end\n    seen[v] = true\n  end\n  return false\nend", " \
    \   local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n\
    \            return true\n        end\n        seen[v] = true\n    end\n    return\
    \ false\nend", "    for i = 1, #l do\n        for j = i + 1, #l do\n         \
    \   if l[i] + l[j] == 0 then\n                return true\n            end\n \
    \       end\n    end\n    return false\nend", "    local s = {}\n    for i = 1,\
    \ #l do\n        if s[-l[i]] then\n            return true\n        end\n    \
    \    s[l[i]] = true\n    end\n    return false\nend", "    local dict = {}\n \
    \   for i, v in ipairs(l) do\n        if dict[v] then\n            return true\n\
    \        end\n        dict[-v] = true\n    end\n    return false\nend", "    local\
    \ set = {}\n    for _, v in ipairs(l) do\n        if set[-v] then\n          \
    \  return true\n        end\n        set[v] = true\n    end\n    return false\n\
    end", "  -- TODO: implement this function\n  return false\nend", "    local n\
    \ = #l\n    if n < 2 then\n        return false\n    end\n    local i = 1\n  \
    \  local j = 1\n    while i <= n do\n        j = i + 1\n        while j <= n do\n\
    \            if l[i] + l[j] == 0 then\n                return true\n         \
    \   end\n            j = j + 1\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v]\
    \ then\n            return true\n        end\n        s[v] = true\n    end\n \
    \   return false\nend", "    -- YOUR CODE HERE\n    local count = 0\n    for i\
    \ = 1, #l do\n        for j = i + 1, #l do\n            if l[i] + l[j] == 0 then\n\
    \                count = count + 1\n            end\n        end\n    end\n  \
    \  if count > 0 then\n        return true\n    else\n        return false\n  \
    \  end\nend", "    -- TODO: implement this function\n    -- Hint: you can use\
    \ the function `contains` from the previous exercise\n    -- to check if a list\
    \ contains a given element.\n    -- Hint: you can use the function `contains`\
    \ from the previous exercise\n    -- to check if a list contains a given element.\n\
    \    for i, v in ipairs(l) do\n        if contains(l, -v) and v ~= -v then\n \
    \           return true\n        end\n    end\n    return false\nend", "    local\
    \ seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v] then\n        \
    \    return true\n        end\n        seen[v] = true\n    end\n    return false\n\
    end", "    local seen = {}\n    for _, v in ipairs(l) do\n        if seen[-v]\
    \ then\n            return true\n        end\n        seen[v] = true\n    end\n\
    \    return false\nend", "    local s = {}\n    for _, v in ipairs(l) do\n   \
    \     if s[-v] then\n            return true\n        end\n        s[v] = true\n\
    \    end\n    return false\nend", "    local seen = {}\n    for _, v in ipairs(l)\
    \ do\n        if seen[-v] then\n            return true\n        end\n       \
    \ seen[v] = true\n    end\n    return false\nend", "    local seen = {}\n    for\
    \ _, v in ipairs(l) do\n        if seen[-v] then\n            return true\n  \
    \      end\n        seen[v] = true\n    end\n    return false\nend", "  local\
    \ seen = {}\n  for _, v in ipairs(l) do\n    if seen[-v] then\n      return true\n\
    \    end\n    seen[v] = true\n  end\n  return false\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    local seen = {}\n    for _, v in\
    \ ipairs(l) do\n        if seen[-v] then\n            return true\n        end\n\
    \        seen[v] = true\n    end\n    return false\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

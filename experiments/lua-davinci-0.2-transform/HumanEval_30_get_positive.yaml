name: HumanEval_30_get_positive
language: lua
prompt: "-- Return only positive numbers in the list.\n-- >>> get_positive({-1, 2,\
  \ -4, 5, 6})\n-- {2, 5, 6}\n-- >>> get_positive({5, 3, -5, 2, -3, 3, 9, 0, 123,\
  \ 1, -10})\n-- {5, 3, 2, 3, 9, 123, 1}\nlocal function get_positive(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_positive\n\
  \    lu.assertEquals(candidate({-1, -2, 4, 5, 6}), {4, 5, 6})\n    lu.assertEquals(candidate({5,\
  \ 3, -5, 2, 3, 3, 9, 0, 123, 1, -10}), {5, 3, 2, 3, 3, 9, 123, 1})\n    lu.assertEquals(candidate({-1,\
  \ -2}), {})\n    lu.assertEquals(candidate({}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local r = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n   \
    \   r[#r + 1] = v\n    end\n  end\n  return r\nend", "    local res = {}\n   \
    \ for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local r = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            r[#r + 1] = v\n        end\n\
    \    end\n    return r\nend", "    local res = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            res[#res + 1] = v\n        end\n    end\n\
    \    return res\nend", "    local res = {}\n    for i = 1, #l do\n        if l[i]\
    \ > 0 then\n            res[#res + 1] = l[i]\n        end\n    end\n    return\
    \ res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend",
  "    local res = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n          \
    \  res[#res + 1] = l[i]\n        end\n    end\n    return res\nend", "    local\
    \ result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n         \
    \   table.insert(result, v)\n        end\n    end\n    return result\nend", " \
    \   local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n    \
    \        table.insert(res, v)\n        end\n    end\n    return res\nend", " \
    \   local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n    \
    \        table.insert(res, v)\n        end\n    end\n    return res\nend", " \
    \   local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n      \
    \      r[#r + 1] = v\n        end\n    end\n    return r\nend", "    local r =\
    \ {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(r,\
    \ v)\n        end\n    end\n    return r\nend", "    local result = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(result,\
    \ v)\n        end\n    end\n    return result\nend", "    local r = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(r, v)\n\
    \        end\n    end\n    return r\nend", "  local r = {}\n  for i = 1, #l do\n\
    \    if l[i] > 0 then\n      r[#r + 1] = l[i]\n    end\n  end\n  return r\nend",
  "  local result = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(result,\
    \ v)\n    end\n  end\n  return result\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local result = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(result, v)\n\
    \        end\n    end\n    return result\nend", "    local res = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local result = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(result, v)\n\
    \        end\n    end\n    return result\nend", "    local res = {}\n    for i,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "  local r = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n  return r\nend",
  "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            r[#r + 1] = v\n        end\n    end\n\
    \    return r\nend", "    local res = {}\n    for i = 1, #l do\n        if l[i]\
    \ > 0 then\n            res[#res + 1] = l[i]\n        end\n    end\n    return\
    \ res\nend", "    local res = {}\n    for i, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            res[#res + 1] = v\n        end\n    end\n    return res\nend", " \
    \   local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n      \
    \      r[#r + 1] = v\n        end\n    end\n    return r\nend", "  local result\
    \ = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(result,\
    \ v)\n    end\n  end\n  return result\nend", "  local r = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n  return r\nend",
  "    local new_list = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n     \
    \       new_list[#new_list + 1] = l[i]\n        end\n    end\n    return new_list\n\
    end", "    local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "  local new_list = {}\n  for i = 1, #l do\n    if l[i] > 0 then\n     \
    \ new_list[#new_list + 1] = l[i]\n    end\n  end\n  return new_list\nend", " \
    \ local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "  local res = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return\
    \ res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            res[#res + 1] = v\n        end\n    end\n    return res\n\
    end", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(res, v)\n        end\n    end\n    return res\nend",
  "    local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n  \
    \          table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local new_list = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(new_list, v)\n        end\n    end\n    return\
    \ new_list\nend", "    local r = {}\n    for _, v in ipairs(l) do\n        if\
    \ v > 0 then\n            table.insert(r, v)\n        end\n    end\n    return\
    \ r\nend", "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n\
    \      table.insert(res, v)\n    end\n  end\n  return res\nend", "    local res\
    \ = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "  local new_list = {}\n  for i =\
    \ 1, #l do\n    if l[i] > 0 then\n      new_list[#new_list + 1] = l[i]\n    end\n\
    \  end\n  return new_list\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(r, v)\n        end\n   \
    \ end\n    return r\nend", "    local res = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "    local ret = {}\n    for _, v in ipairs(l) do\n   \
    \     if v > 0 then\n            table.insert(ret, v)\n        end\n    end\n\
    \    return ret\nend", "    local positive = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(positive, v)\n        end\n \
    \   end\n    return positive\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local res = {}\n    for i = 1, #l do\n   \
    \     if l[i] > 0 then\n            res[#res + 1] = l[i]\n        end\n    end\n\
    \    return res\nend", "  local res = {}\n  for _, v in ipairs(l) do\n    if v\
    \ > 0 then\n      table.insert(res, v)\n    end\n  end\n  return res\nend", " \
    \ local r = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      r[#r + 1]\
    \ = v\n    end\n  end\n  return r\nend", "  local res = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return\
    \ res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local new_list = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(new_list, v)\n        end\n    end\n    return new_list\n\
    end", "    local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local new_list = {}\n    for i, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(new_list, v)\n        end\n    end\n    return\
    \ new_list\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if\
    \ v > 0 then\n            res[#res + 1] = v\n        end\n    end\n    return\
    \ res\nend", "    local res = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n\
    \            res[#res + 1] = l[i]\n        end\n    end\n    return res\nend",
  "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n       \
    \     table.insert(r, v)\n        end\n    end\n    return r\nend", "  local r\
    \ = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      r[#r + 1] = v\n \
    \   end\n  end\n  return r\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            r[#r + 1] = v\n        end\n    end\n\
    \    return r\nend", "  local r = {}\n  for _, v in ipairs(l) do\n    if v > 0\
    \ then\n      r[#r + 1] = v\n    end\n  end\n  return r\nend", "  local res =\
    \ {}\n  for i = 1, #l do\n    if l[i] > 0 then\n      res[#res + 1] = l[i]\n \
    \   end\n  end\n  return res\nend", "    local result = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(result, v)\n        end\n\
    \    end\n    return result\nend", "    local res = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            r[#r + 1] = v\n        end\n    end\n    return\
    \ r\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            r[#r + 1] = v\n        end\n    end\n    return r\nend", "    local\
    \ res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "  local r = {}\n  for _, v\
    \ in ipairs(l) do\n    if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n  return\
    \ r\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local res = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n  \
    \          res[#res + 1] = l[i]\n        end\n    end\n    return res\nend", " \
    \   local res = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n         \
    \   res[#res + 1] = l[i]\n        end\n    end\n    return res\nend", "    local\
    \ result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n         \
    \   table.insert(result, v)\n        end\n    end\n    return result\nend", " \
    \   local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n \
    \           table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(res, v)\n        end\n    end\n    return res\nend",
  "  local r = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      r[#r + 1]\
    \ = v\n    end\n  end\n  return r\nend", "    local result = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(result, v)\n\
    \        end\n    end\n    return result\nend", "  local res = {}\n  for _, v\
    \ in ipairs(l) do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n\
    \  return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n     \
    \   if v > 0 then\n            table.insert(res, v)\n        end\n    end\n  \
    \  return res\nend", "\tlocal res = {}\n\tfor _, v in ipairs(l) do\n\t\tif v >\
    \ 0 then\n\t\t\ttable.insert(res, v)\n\t\tend\n\tend\n\treturn res\nend", "  \
    \  local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n  \
    \          table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(res, v)\n        end\n    end\n    return res\nend",
  "    local result = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n  \
    \          table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            r[#r + 1] = v\n        end\n    end\n    return r\nend", "    local\
    \ r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            r[#r\
    \ + 1] = v\n        end\n    end\n    return r\nend", "    local res = {}\n  \
    \  for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local r = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(r, v)\n      \
    \  end\n    end\n    return r\nend", "    local result = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(result, v)\n        end\n\
    \    end\n    return result\nend", "  local res = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return\
    \ res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local ret = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(ret, v)\n        end\n    end\n    return ret\nend",
  "  local res = {}\n  for i = 1, #l do\n    if l[i] > 0 then\n      res[#res + 1]\
    \ = l[i]\n    end\n  end\n  return res\nend", "  local r = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n  return r\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local new_list = {}\n    for i\
    \ = 1, #l do\n        if l[i] > 0 then\n            new_list[#new_list + 1] =\
    \ l[i]\n        end\n    end\n    return new_list\nend", "  local r = {}\n  for\
    \ i, v in ipairs(l) do\n    if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n\
    \  return r\nend", "    local res = {}\n    for _, v in ipairs(l) do\n       \
    \ if v > 0 then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend",
  "    local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n  \
    \          table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local r = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n\
    \            r[#r + 1] = v\n        end\n    end\n    return r\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local res = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "    local res = {}\n    for i, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n    \
    \    end\n    end\n    return res\nend", "  return filter(l, function(x) return\
    \ x > 0 end)\nend", "  local res = {}\n  for _, v in ipairs(l) do\n    if v >\
    \ 0 then\n      table.insert(res, v)\n    end\n  end\n  return res\nend", "  \
    \  local new_list = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n     \
    \       new_list[#new_list + 1] = l[i]\n        end\n    end\n    return new_list\n\
    end", "  local new_list = {}\n  for i = 1, #l do\n    if l[i] > 0 then\n     \
    \ new_list[#new_list + 1] = l[i]\n    end\n  end\n  return new_list\nend", " \
    \ local result = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(result,\
    \ v)\n    end\n  end\n  return result\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local r = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(r, v)\n      \
    \  end\n    end\n    return r\nend", "    local r = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            r[#r + 1] = v\n        end\n    end\n\
    \    return r\nend", "    local res = {}\n    for i, v in ipairs(l) do\n     \
    \   if v > 0 then\n            table.insert(res, v)\n        end\n    end\n  \
    \  return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n     \
    \   if v > 0 then\n            table.insert(res, v)\n        end\n    end\n  \
    \  return res\nend", "    local result = {}\n    for _, v in ipairs(l) do\n  \
    \      if v > 0 then\n            table.insert(result, v)\n        end\n    end\n\
    \    return result\nend", "    local res = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "  local res = {}\n  for i = 1, #l do\n    if l[i] > 0\
    \ then\n      res[#res + 1] = l[i]\n    end\n  end\n  return res\nend", "    local\
    \ res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            res[#res\
    \ + 1] = v\n        end\n    end\n    return res\nend", "    local r = {}\n  \
    \  for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(r,\
    \ v)\n        end\n    end\n    return r\nend", "    local res = {}\n    for k,\
    \ v in pairs(l) do\n        if v > 0 then\n            res[#res + 1] = v\n   \
    \     end\n    end\n    return res\nend", "  local ret = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(ret, v)\n    end\n  end\n  return\
    \ ret\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if v >\
    \ 0 then\n            table.insert(res, v)\n        end\n    end\n    return res\n\
    end", "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(res, v)\n        end\n    end\n    return res\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local result = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(result, v)\n\
    \        end\n    end\n    return result\nend", "  local result = {}\n  for _,\
    \ v in ipairs(l) do\n    if v > 0 then\n      table.insert(result, v)\n    end\n\
    \  end\n  return result\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "  local r = {}\n  for _, v in ipairs(l) do\n \
    \   if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n  return r\nend", "  \
    \  local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n  \
    \          table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            r[#r + 1] = v\n        end\n    end\n    return r\nend", "    local\
    \ res = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n            res[#res\
    \ + 1] = l[i]\n        end\n    end\n    return res\nend", "    local r = {}\n\
    \    for i, v in ipairs(l) do\n        if v > 0 then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return r\nend", "    local result = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(result,\
    \ v)\n        end\n    end\n    return result\nend", "    local res = {}\n   \
    \ for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "  local r = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n  return r\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "  local res = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return\
    \ res\nend", "    local result = {}\n    for _, v in ipairs(l) do\n        if\
    \ v > 0 then\n            table.insert(result, v)\n        end\n    end\n    return\
    \ result\nend", "    local res = {}\n    for _, v in ipairs(l) do\n        if\
    \ v > 0 then\n            table.insert(res, v)\n        end\n    end\n    return\
    \ res\nend", "    local res = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n\
    \            res[#res + 1] = l[i]\n        end\n    end\n    return res\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  \
    \  local r = {}\n    for i, v in ipairs(l) do\n        if v > 0 then\n       \
    \     r[#r + 1] = v\n        end\n    end\n    return r\nend", "    local res\
    \ = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local result = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(result, v)\n\
    \        end\n    end\n    return result\nend", "  local res = {}\n  for _, v\
    \ in ipairs(l) do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n\
    \  return res\nend", "  local result = {}\n  for _, v in ipairs(l) do\n    if\
    \ v > 0 then\n      table.insert(result, v)\n    end\n  end\n  return result\n\
    end", "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n     \
    \ table.insert(res, v)\n    end\n  end\n  return res\nend", "    local res = {}\n\
    \    for i = 1, #l do\n        if l[i] > 0 then\n            res[#res + 1] = l[i]\n\
    \        end\n    end\n    return res\nend", "    local r = {}\n    for _, v in\
    \ ipairs(l) do\n        if v > 0 then\n            table.insert(r, v)\n      \
    \  end\n    end\n    return r\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local result = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(result, v)\n        end\n\
    \    end\n    return result\nend", "    local res = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(res, v)\n        end\n \
    \   end\n    return res\nend", "    local result = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(result, v)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(result, v)\n        end\n\
    \    end\n    return result\nend", "  local res = {}\n  for _, v in ipairs(l)\
    \ do\n    if v > 0 then\n      table.insert(res, v)\n    end\n  end\n  return\
    \ res\nend", "    local r = {}\n    for _, v in ipairs(l) do\n        if v > 0\
    \ then\n            table.insert(r, v)\n        end\n    end\n    return r\nend",
  "    local result = {}\n    for i = 1, #l do\n        if l[i] > 0 then\n       \
    \     result[#result + 1] = l[i]\n        end\n    end\n    return result\nend",
  "    local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n     \
    \       table.insert(res, v)\n        end\n    end\n    return res\nend", "  local\
    \ res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return res\nend", "    local r = {}\n    for _, v in ipairs(l)\
    \ do\n        if v > 0 then\n            r[#r + 1] = v\n        end\n    end\n\
    \    return r\nend", "    local new_list = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(new_list, v)\n        end\n \
    \   end\n    return new_list\nend", "  local r = {}\n  for i = 1, #l do\n    if\
    \ l[i] > 0 then\n      r[#r + 1] = l[i]\n    end\n  end\n  return r\nend", " \
    \   local res = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n    \
    \        table.insert(res, v)\n        end\n    end\n    return res\nend", " \
    \   local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n \
    \           table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n\
    \            table.insert(result, v)\n        end\n    end\n    return result\n\
    end", "  local res = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n     \
    \ table.insert(res, v)\n    end\n  end\n  return res\nend", "    local result\
    \ = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(result,\
    \ v)\n        end\n    end\n    return result\nend", "    local res = {}\n   \
    \ for i, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res,\
    \ v)\n        end\n    end\n    return res\nend", "    local res = {}\n    for\
    \ _, v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "    local res = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n \
    \       end\n    end\n    return res\nend", "    local res = {}\n    for i = 1,\
    \ #l do\n        if l[i] > 0 then\n            res[#res + 1] = l[i]\n        end\n\
    \    end\n    return res\nend", "    local result = {}\n    for i, v in ipairs(l)\
    \ do\n        if v > 0 then\n            table.insert(result, v)\n        end\n\
    \    end\n    return result\nend", "    local res = {}\n    for i = 1, #l do\n\
    \        if l[i] > 0 then\n            res[#res + 1] = l[i]\n        end\n   \
    \ end\n    return res\nend", "    local res = {}\n    for _, v in ipairs(l) do\n\
    \        if v > 0 then\n            table.insert(res, v)\n        end\n    end\n\
    \    return res\nend", "  return filter(l, function(x) return x > 0 end)\nend",
  "  local r = {}\n  for _, v in ipairs(l) do\n    if v > 0 then\n      r[#r + 1]\
    \ = v\n    end\n  end\n  return r\nend", "    local result = {}\n    for _, v\
    \ in ipairs(l) do\n        if v > 0 then\n            table.insert(result, v)\n\
    \        end\n    end\n    return result\nend", "    local res = {}\n    for _,\
    \ v in ipairs(l) do\n        if v > 0 then\n            table.insert(res, v)\n\
    \        end\n    end\n    return res\nend", "  local r = {}\n  for i, v in ipairs(l)\
    \ do\n    if v > 0 then\n      r[#r + 1] = v\n    end\n  end\n  return r\nend",
  "    local result = {}\n    for _, v in ipairs(l) do\n        if v > 0 then\n  \
    \          table.insert(result, v)\n        end\n    end\n    return result\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

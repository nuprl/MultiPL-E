name: HumanEval_77_iscube
language: lua
prompt: "-- Write a function that takes an integer a and returns True \n-- if this\
  \ ingeger is a cube of some integer number.\n-- Note: you may assume the input is\
  \ always valid.\n-- Examples:\n-- >>> iscube(1)\n-- true\n-- >>> iscube(2)\n-- false\n\
  -- >>> iscube(-1)\n-- true\n-- >>> iscube(64)\n-- true\n-- >>> iscube(0)\n-- true\n\
  -- >>> iscube(180)\n-- false\nlocal function iscube(a)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = iscube\n\
  \    lu.assertEquals(candidate(1), true)\n    lu.assertEquals(candidate(2), false)\n\
  \    lu.assertEquals(candidate(-1), true)\n    lu.assertEquals(candidate(64), true)\n\
  \    lu.assertEquals(candidate(180), false)\n    lu.assertEquals(candidate(1000),\
  \ true)\n    lu.assertEquals(candidate(0), true)\n    lu.assertEquals(candidate(1729),\
  \ false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    -- your code here\n    return false\nend", "\tif a < 0 then\n\t\
    \ta = -a\n\tend\n\tlocal i = 0\n\twhile i * i * i <= a do\n\t\tif i * i * i ==\
    \ a then\n\t\t\treturn true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend",
  "    -- TODO: implement this function\n    return true\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    return a == 0 or a == 1 or a ==\
    \ -1 or a == 8 or a == 27 or a == -8 or a == -27\nend", "    return a == 0 or\
    \ (a > 0 and math.floor(math.pow(a, 1/3))^3 == a)\nend", "    -- TODO: implement\
    \ this function\n    return false\nend", "    -- your code here\n    return false\n\
    end", "    return a == 0 or a == 1 or a == -1 or math.sqrt(a) % 1 == 0\nend",
  "\tif a == 0 then\n\t\treturn true\n\tend\n\tif a < 0 then\n\t\ta = -a\n\tend\n\t\
    local x = math.floor(math.pow(a, 1/3))\n\treturn x * x * x == a\nend", "    --\
    \ TODO: implement this function\n    return false\nend", "    if a == 0 then\n\
    \        return true\n    end\n    if a < 0 then\n        a = -a\n    end\n  \
    \  local i = 1\n    while i * i * i <= a do\n        if i * i * i == a then\n\
    \            return true\n        end\n        i = i + 1\n    end\n    return\
    \ false\nend", "    -- your code here\n    local i = 1\n    while i*i*i < a do\n\
    \        i = i + 1\n    end\n    if i*i*i == a then\n        return true\n   \
    \ else\n        return false\n    end\nend", "    local i = 0\n    while i * i\
    \ * i < a do\n        i = i + 1\n    end\n    return i * i * i == a\nend", " \
    \   -- TODO: implement this function\n    return false\nend", '    return (a ==
    0) or (a == 1) or (a == -1) or (a == 8) or (a == 27) or (a == 64) or (a == 125)
    or (a == 216) or (a == 343) or (a == 512) or (a == 729) or (a == 1000) or (a ==
    1331) or (a == 1728) or (a == 2197) or (a == 2744) or (a == 3375) or (a == 4096)
    or (a == 4913) or (a == 5832) or (a == 6859) or (a == 8000) or (a == 9261) or
    (a == 10648) or (a == 12167) or (a == 13824) or (a == 15625) or (a == 17576) or
    (a == 19683) or (a == 21952) or (a == 24389) or (a == 27000) or (a == 29791) or
    (a == 32768) or (a == 35937) or (a == 39304) or (a == 42875) or (a == 46656) or
    (a == 50653) or (a == 54872) or (a == 59319) or (a == 64000) or (a == 68921) or
    (a == 74088) or (a == 79507) or (a == 85184) or (a == 91125) or (a == 97336) or
    (a == 103823) or (a == 110592) or (a == 117649) or (a == 125000) or (a == 132651)
    or (a == 140608) or (a == 148877) or (a == 157464) or (a == 166375) or (a == 175616)
    or (a == 185193) or (a == 195112) or (a == 205379) or (a == 216000) or (a == 226981)
    or (a == 238328) or (a == 250047) or (a == 262144) or (a == 274625) or (a == 287496)
    or (a == 300763) or (a == 314432) or (a == 328509) or (a == 343000) or (', "\t\
    local i = 1\n\twhile i * i * i <= a do\n\t\tif i * i * i == a then\n\t\t\treturn\
    \ true\n\t\tend\n\t\ti = i + 1\n\tend\n\treturn false\nend", "    -- your code\
    \ here\n    if a == 0 then\n        return true\n    end\n    if a < 0 then\n\
    \        a = -a\n    end\n    local i = 1\n    while i * i * i <= a do\n     \
    \   if i * i * i == a then\n            return true\n        end\n        i =\
    \ i + 1\n    end\n    return false\nend", "    -- your code here\n    if a ==\
    \ 0 then\n        return true\n    end\n    if a < 0 then\n        a = -a\n  \
    \  end\n    local i = 1\n    while i * i * i <= a do\n        if i * i * i ==\
    \ a then\n            return true\n        end\n        i = i + 1\n    end\n \
    \   return false\nend", "    if a == 0 then\n        return true\n    end\n  \
    \  if a < 0 then\n        a = -a\n    end\n    local b = math.floor(math.pow(a,\
    \ 1/3))\n    if b * b * b == a then\n        return true\n    else\n        return\
    \ false\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

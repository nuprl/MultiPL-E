name: HumanEval_141_file_name_check
language: lua
prompt: "-- Create a function which takes a string representing a file's name, and\
  \ returns\n-- 'Yes' if the the file's name is valid, and returns 'No' otherwise.\n\
  -- A file's name is considered to be valid if and only if all the following conditions\
  \ \n-- are met:\n-- - There should not be more than three digits ('0'-'9') in the\
  \ file's name.\n-- - The file's name contains exactly one dot '.'\n-- - The substring\
  \ before the dot should not be empty, and it starts with a letter from \n-- the\
  \ latin alphapet ('a'-'z' and 'A'-'Z').\n-- - The substring after the dot should\
  \ be one of these: ['txt', 'exe', 'dll']\n-- Examples:\n-- >>> file_name_check('example.txt')\n\
  -- 'Yes'\n-- >>> file_name_check('1example.dll')\n-- 'No'\nlocal function file_name_check(file_name)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = file_name_check\n\
  \    lu.assertEquals(candidate('example.txt'), 'Yes')\n    lu.assertEquals(candidate('1example.dll'),\
  \ 'No')\n    lu.assertEquals(candidate('s1sdf3.asd'), 'No')\n    lu.assertEquals(candidate('K.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('MY16FILE3.exe'), 'Yes')\n    lu.assertEquals(candidate('His12FILE94.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('_Y.txt'), 'No')\n    lu.assertEquals(candidate('?aREYA.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('/this_is_valid.dll'), 'No')\n    lu.assertEquals(candidate('this_is_valid.wow'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_valid.txt'), 'Yes')\n    lu.assertEquals(candidate('this_is_valid.txtexe'),\
  \ 'No')\n    lu.assertEquals(candidate('#this2_i4s_5valid.ten'), 'No')\n    lu.assertEquals(candidate('@this1_is6_valid.exe'),\
  \ 'No')\n    lu.assertEquals(candidate('this_is_12valid.6exe4.txt'), 'No')\n   \
  \ lu.assertEquals(candidate('all.exe.txt'), 'No')\n    lu.assertEquals(candidate('I563_No.exe'),\
  \ 'Yes')\n    lu.assertEquals(candidate('Is3youfault.txt'), 'Yes')\n    lu.assertEquals(candidate('no_one#knows.dll'),\
  \ 'Yes')\n    lu.assertEquals(candidate('1I563_Yes3.exe'), 'No')\n    lu.assertEquals(candidate('I563_Yes3.txtt'),\
  \ 'No')\n    lu.assertEquals(candidate('final..txt'), 'No')\n    lu.assertEquals(candidate('final132'),\
  \ 'No')\n    lu.assertEquals(candidate('_f4indsartal132.'), 'No')\n    lu.assertEquals(candidate('.txt'),\
  \ 'No')\n    lu.assertEquals(candidate('s.'), 'No')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local digits = 0\n    local dot = 0\n    local ext = ''\n    for\
    \ i = 1, #file_name do\n        local c = file_name:sub(i, i)\n        if c ==\
    \ '.' then\n            dot = dot + 1\n        elseif c:match('%d') then\n   \
    \         digits = digits + 1\n        elseif dot == 0 then\n            if not\
    \ c:match('%a') then\n                return 'No'\n            end\n        else\n\
    \            ext = ext .. c\n        end\n    end\n    if digits > 3 or dot ~=\
    \ 1 or ext == '' or not ext:match('^txt$|^exe$|^dll$') then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    local dot_index = string.find(file_name,\
    \ '.')\n    local extension = string.sub(file_name, dot_index + 1)\n    local\
    \ digits_count = 0\n    local valid_extensions = {'txt', 'exe', 'dll'}\n    local\
    \ valid_extension = false\n    for i = 1, #valid_extensions do\n        if valid_extensions[i]\
    \ == extension then\n            valid_extension = true\n            break\n \
    \       end\n    end\n    for i = 1, #file_name do\n        local char = string.sub(file_name,\
    \ i, i)\n        if char >= '0' and char <= '9' then\n            digits_count\
    \ = digits_count + 1\n        end\n    end\n    if digits_count > 3 then\n   \
    \     return 'No'\n    end\n    if not valid_extension then\n        return 'No'\n\
    \    end\n    if string.sub(file_name, 1, dot_index - 1) == '' then\n        return\
    \ 'No'\n    end\n    local first_char = string.sub(file_name, 1, 1)\n    if not\
    \ (first_char >= 'a' and first_char <= 'z' or first_char >= 'A' and first_char\
    \ <= 'Z') then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ dot_index = string.find(file_name, '.')\n    local prefix = string.sub(file_name,\
    \ 1, dot_index - 1)\n    local suffix = string.sub(file_name, dot_index + 1)\n\
    \    local digit_count = 0\n    for i = 1, string.len(prefix) do\n        if string.byte(prefix,\
    \ i) >= string.byte('0') and string.byte(prefix, i) <= string.byte('9') then\n\
    \            digit_count = digit_count + 1\n        end\n    end\n    if digit_count\
    \ > 3 then\n        return 'No'\n    end\n    if string.len(prefix) == 0 or (string.byte(prefix,\
    \ 1) < string.byte('a') or string.byte(prefix, 1) > string.byte('z')) and (string.byte(prefix,\
    \ 1) < string.byte('A') or string.byte(prefix, 1) > string.byte('Z')) then\n \
    \       return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and suffix\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ dot_pos = string.find(file_name, '.')\n    if dot_pos == nil then\n        return\
    \ 'No'\n    end\n    local prefix = string.sub(file_name, 1, dot_pos - 1)\n  \
    \  local suffix = string.sub(file_name, dot_pos + 1)\n    if string.len(prefix)\
    \ == 0 or string.find(prefix, '%d') == 1 then\n        return 'No'\n    end\n\
    \    local digit_count = 0\n    for i = 1, string.len(prefix) do\n        if string.find(prefix,\
    \ '%d', i) ~= nil then\n            digit_count = digit_count + 1\n        end\n\
    \    end\n    if digit_count > 3 then\n        return 'No'\n    end\n    if suffix\
    \ ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "  -- TODO: implement this function\nend", " \
    \ -- TODO: implement this function\nend", "    -- TODO: implement this function\n\
    end", "    local digits = 0\n    local dot = false\n    local ext = false\n  \
    \  local ext_list = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name do\n    \
    \    local c = file_name:sub(i, i)\n        if c == '.' then\n            if dot\
    \ then\n                return 'No'\n            end\n            dot = true\n\
    \        elseif c:match('%d') then\n            digits = digits + 1\n        \
    \    if digits > 3 then\n                return 'No'\n            end\n      \
    \  elseif dot then\n            if not ext then\n                ext = true\n\
    \                for _, e in ipairs(ext_list) do\n                    if file_name:sub(i,\
    \ i + #e - 1) == e then\n                        return 'Yes'\n              \
    \      end\n                end\n                return 'No'\n            end\n\
    \        elseif not c:match('%a') then\n            return 'No'\n        end\n\
    \    end\n    return 'No'\nend", "    local dot_index = file_name:find('.')\n\
    \    if not dot_index then\n        return 'No'\n    end\n    local prefix = file_name:sub(1,\
    \ dot_index - 1)\n    local suffix = file_name:sub(dot_index + 1)\n    if #prefix\
    \ == 0 or #prefix > 8 or #suffix == 0 or #suffix > 3 then\n        return 'No'\n\
    \    end\n    if not prefix:match('^[a-zA-Z]') then\n        return 'No'\n   \
    \ end\n    if not suffix:match('^txt$') and not suffix:match('^exe$') and not\
    \ suffix:match('^dll$') then\n        return 'No'\n    end\n    if prefix:match('%d')\
    \ and prefix:match('%d') > 3 then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    -- TODO: implement this function\nend", "    local dot_index = string.find(file_name,\
    \ '.')\n    local extension = string.sub(file_name, dot_index + 1)\n    local\
    \ name = string.sub(file_name, 1, dot_index - 1)\n    local digits = 0\n    for\
    \ i = 1, #name do\n        if string.find(name, '[0-9]') then\n            digits\
    \ = digits + 1\n        end\n    end\n    if digits > 3 then\n        return 'No'\n\
    \    end\n    if not string.find(name, '[a-zA-Z]') then\n        return 'No'\n\
    \    end\n    if not (extension == 'txt' or extension == 'exe' or extension ==\
    \ 'dll') then\n        return 'No'\n    end\n    return 'Yes'\nend", "  local\
    \ count = 0\n  local dot_count = 0\n  local dot_index = 0\n  local ext_index =\
    \ 0\n  local ext = ''\n  local ext_list = {'txt', 'exe', 'dll'}\n  local valid_ext\
    \ = false\n  local valid_name = false\n  local valid_extension = false\n  local\
    \ valid_file_name = false\n  for i = 1, #file_name do\n    if file_name:sub(i,\
    \ i) == '.' then\n      dot_count = dot_count + 1\n      dot_index = i\n    end\n\
    \    if file_name:sub(i, i):match('%d') then\n      count = count + 1\n    end\n\
    \  end\n  if count > 3 then\n    valid_name = false\n  else\n    valid_name =\
    \ true\n  end\n  if dot_count == 1 then\n    valid_extension = true\n  else\n\
    \    valid_extension = false\n  end\n  ext_index = dot_index + 1\n  ext = file_name:sub(ext_index,\
    \ #file_name)\n  for i = 1, #ext_list do\n    if ext == ext_list[i] then\n   \
    \   valid_ext = true\n    end\n  end\n  if valid_name and valid_extension and\
    \ valid_ext then\n    valid_file_name = true\n  else\n    valid_file_name = false\n\
    \  end\n  if valid_file_name then\n    return 'Yes'\n  else\n    return 'No'\n\
    \  end\nend", "    local count = 0\n    local dot_count = 0\n    local sub_str\
    \ = ''\n    local sub_str_after_dot = ''\n    for i = 1, #file_name do\n     \
    \   if file_name:sub(i, i) == '.' then\n            dot_count = dot_count + 1\n\
    \        end\n        if file_name:sub(i, i) >= '0' and file_name:sub(i, i) <=\
    \ '9' then\n            count = count + 1\n        end\n    end\n    if count\
    \ > 3 then\n        return 'No'\n    end\n    if dot_count ~= 1 then\n       \
    \ return 'No'\n    end\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            sub_str = file_name:sub(1, i - 1)\n            sub_str_after_dot\
    \ = file_name:sub(i + 1, #file_name)\n        end\n    end\n    if sub_str ==\
    \ '' then\n        return 'No'\n    end\n    if sub_str:sub(1, 1) < 'A' or sub_str:sub(1,\
    \ 1) > 'z' then\n        return 'No'\n    end\n    if sub_str_after_dot ~= 'txt'\
    \ and sub_str_after_dot ~= 'exe' and sub_str_after_dot ~= 'dll' then\n       \
    \ return 'No'\n    end\n    return 'Yes'\nend", "    local dot_index = file_name:find('.')\n\
    \    if not dot_index then\n        return 'No'\n    end\n    local prefix = file_name:sub(1,\
    \ dot_index - 1)\n    local suffix = file_name:sub(dot_index + 1)\n    if #prefix\
    \ == 0 or prefix:match('%d') or not prefix:match('%a') then\n        return 'No'\n\
    \    end\n    if #suffix == 0 or not suffix:match('^txt$') and not suffix:match('^exe$')\
    \ and not suffix:match('^dll$') then\n        return 'No'\n    end\n    if #prefix:gsub('%d',\
    \ '') > 3 then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local ext =\
    \ \"\"\n    local ext_valid = false\n    local ext_list = {\"txt\", \"exe\", \"\
    dll\"}\n    local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_ext_count = false\n    local valid_ext_start = false\n\
    \    local valid_ext_end = false\n    local valid_ext_start_char = false\n   \
    \ local valid_ext_end_char = false\n    local valid_ext_start_char_code = false\n\
    \    local valid_ext_end_char_code = false\n    local valid_ext_start_char_code_range\
    \ = false\n    local valid_ext_end_char_code_range = false\n    local valid_ext_start_char_code_range_lower\
    \ = false\n    local valid_ext_end_char_code_range_lower = false\n    local valid_ext_start_char_code_range_upper\
    \ = false\n    local valid_ext_end_char_code_range_upper = false\n    local valid_ext_start_char_code_range_upper_lower\
    \ = false\n    local valid_ext_end_char_code_range_upper_lower = false\n    local\
    \ valid_ext_start_char_code_range_upper_lower_lower = false\n    local valid_ext_end_char_code_range_upper_lower_lower\
    \ = false\n    local valid_ext_start_char_code_range_upper_lower_lower_lower =\
    \ false\n    local valid_ext_end_char_code_range_upper_lower_lower_lower = false\n\
    \    local valid_ext_start_char_code_range_upper_lower_lower_lower_lower = false\n\
    \    local valid_ext_end_char_code_range_upper_lower_lower_lower_lower = false\n\
    \    local valid_ext_start_char_code_range_upper_lower_lower_lower_lower_lower\
    \ = false\n    local valid_ext_end_char_code_range_upper_lower_lower_lower_lower_lower\
    \ = false\n    local valid_ext_start_char", "    -- TODO: implement the function\n\
    end", "  -- TODO: Implement this function.\nend", "    local digits = 0\n    local\
    \ dot_count = 0\n    local ext = ''\n    for i = 1, #file_name do\n        local\
    \ c = file_name:sub(i, i)\n        if c == '.' then\n            dot_count = dot_count\
    \ + 1\n        elseif c >= '0' and c <= '9' then\n            digits = digits\
    \ + 1\n        elseif dot_count == 0 then\n            if not (c >= 'a' and c\
    \ <= 'z' or c >= 'A' and c <= 'Z') then\n                return 'No'\n       \
    \     end\n        elseif dot_count == 1 then\n            ext = ext .. c\n  \
    \      end\n    end\n    if dot_count ~= 1 or digits > 3 or ext ~= 'txt' and ext\
    \ ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local digits = 0\n    local dot_count = 0\n    local after_dot = ''\n\
    \    local before_dot = ''\n    for i = 1, #file_name do\n        local char =\
    \ file_name:sub(i, i)\n        if char:match('%d') then\n            digits =\
    \ digits + 1\n        elseif char == '.' then\n            dot_count = dot_count\
    \ + 1\n        elseif dot_count == 0 then\n            before_dot = before_dot\
    \ .. char\n        else\n            after_dot = after_dot .. char\n        end\n\
    \    end\n    if digits > 3 or dot_count ~= 1 or #before_dot == 0 or not before_dot:match('^[a-zA-Z]')\
    \ or not (after_dot == 'txt' or after_dot == 'exe' or after_dot == 'dll') then\n\
    \        return 'No'\n    else\n        return 'Yes'\n    end\nend", "    local\
    \ count = 0\n    local dot_count = 0\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9'\
    \ then\n            count = count + 1\n        elseif c == '.' then\n        \
    \    dot_count = dot_count + 1\n        end\n    end\n    if count > 3 or dot_count\
    \ ~= 1 then\n        return 'No'\n    end\n    local dot_pos = file_name:find('.')\n\
    \    local ext = file_name:sub(dot_pos + 1)\n    if ext ~= 'txt' and ext ~= 'exe'\
    \ and ext ~= 'dll' then\n        return 'No'\n    end\n    local name = file_name:sub(1,\
    \ dot_pos - 1)\n    if #name == 0 then\n        return 'No'\n    end\n    local\
    \ c = name:sub(1, 1)\n    if (c < 'a' or c > 'z') and (c < 'A' or c > 'Z') then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local function check_extension(extension)\n\
    \        return extension == 'txt' or extension == 'exe' or extension == 'dll'\n\
    \    end", "    local dot_pos = string.find(file_name, '.')\n    if dot_pos ==\
    \ nil then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ local prefix_len = string.len(prefix)\n    local suffix_len = string.len(suffix)\n\
    \    if prefix_len == 0 or suffix_len == 0 then\n        return 'No'\n    end\n\
    \    local prefix_digit_count = 0\n    for i = 1, prefix_len do\n        local\
    \ c = string.sub(prefix, i, i)\n        if c >= '0' and c <= '9' then\n      \
    \      prefix_digit_count = prefix_digit_count + 1\n        end\n    end\n   \
    \ if prefix_digit_count > 3 then\n        return 'No'\n    end\n    local prefix_first_char\
    \ = string.sub(prefix, 1, 1)\n    if (prefix_first_char < 'a' or prefix_first_char\
    \ > 'z') and\n        (prefix_first_char < 'A' or prefix_first_char > 'Z') then\n\
    \        return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and\
    \ suffix ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    -- TODO: Implement this function.\nend", "    local dot_pos = string.find(file_name,\
    \ '.')\n    if not dot_pos then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.len(prefix) == 0 or string.len(suffix) == 0 then\n\
    \        return 'No'\n    end\n    local prefix_digit_count = 0\n    for i = 1,\
    \ string.len(prefix) do\n        local c = string.sub(prefix, i, i)\n        if\
    \ c >= '0' and c <= '9' then\n            prefix_digit_count = prefix_digit_count\
    \ + 1\n        end\n    end\n    if prefix_digit_count > 3 then\n        return\
    \ 'No'\n    end\n    if not (string.sub(prefix, 1, 1) >= 'a' and string.sub(prefix,\
    \ 1, 1) <= 'z') and\n       not (string.sub(prefix, 1, 1) >= 'A' and string.sub(prefix,\
    \ 1, 1) <= 'Z') then\n        return 'No'\n    end\n    if suffix ~= 'txt' and\
    \ suffix ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n    end\n   \
    \ return 'Yes'\nend", "    -- TODO: implement this function\nend", "    local\
    \ digits = 0\n    local dot_index = 0\n    local dot_count = 0\n    local extension\
    \ = ''\n    local extension_valid = false\n    local valid_extensions = {'txt',\
    \ 'exe', 'dll'}\n    local valid_extensions_count = #valid_extensions\n    local\
    \ valid_extensions_index = 1\n    local valid_extensions_current = ''\n    local\
    \ valid_extensions_current_count = 0\n    local valid_extensions_current_index\
    \ = 1\n    local valid_extensions_current_char = ''\n    local valid_extensions_current_char_code\
    \ = 0\n    local valid_extensions_current_char_code_lower = 0\n    local valid_extensions_current_char_code_upper\
    \ = 0\n    local file_name_count = #file_name\n    local file_name_index = 1\n\
    \    local file_name_char = ''\n    local file_name_char_code = 0\n    local file_name_char_code_lower\
    \ = 0\n    local file_name_char_code_upper = 0\n    local file_name_char_code_zero\
    \ = string.byte('0')\n    local file_name_char_code_nine = string.byte('9')\n\
    \    local file_name_char_code_dot = string.byte('.')\n    local file_name_char_code_a\
    \ = string.byte('a')\n    local file_name_char_code_z = string.byte('z')\n   \
    \ local file_name_char_code_A = string.byte('A')\n    local file_name_char_code_Z\
    \ = string.byte('Z')\n    local file_name_char_code_lower_range = file_name_char_code_a\
    \ - file_name_char_code_A\n    local file_name_char_code_upper_range = file_name_char_code_Z\
    \ - file_name_char_code_A\n    local file_name_char_code_digit_range = file_name_char_code_nine\
    \ - file_name_char_code_zero\n    local file_name_char_code_lower_range_count\
    \ = file_name_char_code", "    local digits = 0\n    local dot_pos = 0\n    local\
    \ dot_count = 0\n    local ext = ''\n    for i = 1, #file_name do\n        local\
    \ c = file_name:sub(i, i)\n        if c >= '0' and c <= '9' then\n           \
    \ digits = digits + 1\n        elseif c == '.' then\n            dot_pos = i\n\
    \            dot_count = dot_count + 1\n        end\n    end\n    if digits >\
    \ 3 or dot_count ~= 1 then\n        return 'No'\n    end\n    ext = file_name:sub(dot_pos\
    \ + 1)\n    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return\
    \ 'No'\n    end\n    if dot_pos == 1 then\n        return 'No'\n    end\n    local\
    \ name = file_name:sub(1, dot_pos - 1)\n    if #name == 0 then\n        return\
    \ 'No'\n    end\n    local c = name:sub(1, 1)\n    if (c < 'a' or c > 'z') and\
    \ (c < 'A' or c > 'Z') then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local digits = 0\n    local dot_count = 0\n    local dot_index = 0\n\
    \    local extension = ''\n    local extension_valid = false\n    local valid_extensions\
    \ = {'txt', 'exe', 'dll'}\n    local valid_extensions_count = 3\n    local valid_extensions_index\
    \ = 1\n    local valid_extensions_index_max = valid_extensions_count\n    local\
    \ valid_extensions_index_min = 1\n    local valid_extensions_index_mid = math.floor(valid_extensions_count\
    \ / 2)\n    local valid_extensions_index_mid_max = valid_extensions_index_mid\n\
    \    local valid_extensions_index_mid_min = valid_extensions_index_mid\n    local\
    \ valid_extensions_index_mid_new = valid_extensions_index_mid\n    local valid_extensions_index_mid_new_max\
    \ = valid_extensions_index_mid_new\n    local valid_extensions_index_mid_new_min\
    \ = valid_extensions_index_mid_new\n    local valid_extensions_index_mid_new_mid\
    \ = valid_extensions_index_mid_new\n    local valid_extensions_index_mid_new_mid_max\
    \ = valid_extensions_index_mid_new_mid\n    local valid_extensions_index_mid_new_mid_min\
    \ = valid_extensions_index_mid_new_mid\n    local valid_extensions_index_mid_new_mid_new\
    \ = valid_extensions_index_mid_new_mid\n    local valid_extensions_index_mid_new_mid_new_max\
    \ = valid_extensions_index_mid_new_mid_new\n    local valid_extensions_index_mid_new_mid_new_min\
    \ = valid_extensions_index_mid_new_mid_new\n    local valid_extensions_index_mid_new_mid_new_mid\
    \ = valid_extensions_index_mid_new_mid_new\n    local valid_extensions_index_mid_new_mid_new_mid_max\
    \ = valid_extensions_index_mid_new_mid_new_mid\n    local valid_", "    -- TODO:\
    \ implement the function\nend", "    local count = 0\n    local dot_count = 0\n\
    \    local dot_index = 0\n    local ext = ''\n    for i = 1, #file_name do\n \
    \       if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n            dot_index = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    if dot_index == 1\
    \ then\n        return 'No'\n    end\n    if not file_name:sub(1, dot_index -\
    \ 1):match('^[a-zA-Z]') then\n        return 'No'\n    end\n    ext = file_name:sub(dot_index\
    \ + 1, #file_name)\n    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local dot_index =\
    \ string.find(file_name, '.')\n    if dot_index == nil then\n        return 'No'\n\
    \    end\n    local prefix = string.sub(file_name, 1, dot_index - 1)\n    local\
    \ suffix = string.sub(file_name, dot_index + 1)\n    if string.len(prefix) ==\
    \ 0 or string.len(suffix) == 0 then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end\n    if string.match(prefix,\
    \ '[0-9]') == nil then\n        return 'No'\n    end", "    local count = 0\n\
    \    local dot_count = 0\n    local dot_index = 0\n    local ext_index = 0\n \
    \   local ext_len = 0\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i) >= '0' and file_name:sub(i,\
    \ i) <= '9' then\n            count = count + 1\n        end\n    end\n    if\
    \ count > 3 or dot_count ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ 1) < 'A' or file_name:sub(1, 1) > 'z' or file_name:sub(1, 1) > 'Z' and file_name:sub(1,\
    \ 1) < 'a' then\n        return 'No'\n    end\n    ext_index = dot_index + 1\n\
    \    ext_len = #file_name - dot_index\n    if file_name:sub(ext_index, ext_index\
    \ + 2) ~= 'txt' and file_name:sub(ext_index, ext_index + 2) ~= 'exe' and file_name:sub(ext_index,\
    \ ext_index + 2) ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    -- TODO: implement this function\nend", "    local digits = 0\n   \
    \ local dot_count = 0\n    local dot_index = 0\n    local extension = ''\n   \
    \ for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n        if\
    \ c == '.' then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        elseif c:match('%d') then\n            digits = digits + 1\n  \
    \      end\n    end\n    if dot_count ~= 1 then\n        return 'No'\n    end\n\
    \    local prefix = file_name:sub(1, dot_index - 1)\n    if #prefix == 0 or not\
    \ prefix:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    extension\
    \ = file_name:sub(dot_index + 1)\n    if digits > 3 or not extension:match('^txt$|^exe$|^dll$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local count\
    \ = 0\n    local dot_count = 0\n    local dot_index = 0\n    local file_name_len\
    \ = string.len(file_name)\n    local sub_str_after_dot = ''\n    local sub_str_before_dot\
    \ = ''\n    local valid_extensions = {'txt', 'exe', 'dll'}\n    local valid_extensions_len\
    \ = #valid_extensions\n    local valid_extensions_count = 0\n    local valid_extensions_index\
    \ = 0\n    local valid_extensions_flag = false\n    local valid_extensions_flag_index\
    \ = 0\n    local valid_extensions_flag_count = 0\n    local valid_extensions_flag_count_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag = false\n    local valid_extensions_flag_count_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_flag = false\n \
    \   local valid_extensions_flag_count_index_flag_index_flag_index = 0\n    local\
    \ valid_extensions_flag_count_index_flag_index_flag_index_flag = false\n    local\
    \ valid_extensions_flag_count_index_flag_index_flag_index_flag_index = 0\n   \
    \ local valid_extensions_flag_count_index_flag_index_flag_index_flag_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_flag_index_flag_index_flag_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_flag_index_flag_index_flag_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_flag_index_flag_index_flag_index_flag_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_flag_index_flag_index_flag_index_flag_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_flag_index_flag_index_flag_index_flag_index_flag_index_flag_index\
    \ = 0\n    local valid_", "  local count = 0\n  local dot_index = 0\n  local dot_count\
    \ = 0\n  local extension = ''\n  local extension_list = {'txt', 'exe', 'dll'}\n\
    \  local valid_extension = false\n  local valid_name = false\n  local valid_digit\
    \ = true\n  for i = 1, #file_name do\n    if file_name:sub(i, i) == '.' then\n\
    \      dot_index = i\n      dot_count = dot_count + 1\n    end\n    if file_name:sub(i,\
    \ i):match('%d') then\n      count = count + 1\n    end\n  end\n  if count > 3\
    \ then\n    valid_digit = false\n  end\n  if dot_count == 1 then\n    valid_name\
    \ = true\n  end\n  if file_name:sub(1, 1):match('%a') then\n    valid_name = true\n\
    \  end\n  if file_name:sub(dot_index + 1, dot_index + 3) == 'txt' or file_name:sub(dot_index\
    \ + 1, dot_index + 3) == 'exe' or file_name:sub(dot_index + 1, dot_index + 3)\
    \ == 'dll' then\n    valid_extension = true\n  end\n  if valid_digit and valid_name\
    \ and valid_extension then\n    return 'Yes'\n  else\n    return 'No'\n  end\n\
    end", "    local dot_index = file_name:find('.')\n    if not dot_index then\n\
    \        return 'No'\n    end\n    local prefix = file_name:sub(1, dot_index -\
    \ 1)\n    local suffix = file_name:sub(dot_index + 1)\n    if not prefix:match('^[a-zA-Z]')\
    \ or prefix:match('%d') or prefix:match('%d%d%d') then\n        return 'No'\n\
    \    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: Implement\
    \ this function\nend", "  local count = 0\n  local dot_index = 0\n  local ext_index\
    \ = 0\n  for i = 1, #file_name do\n    if file_name:sub(i, i) == '.' then\n  \
    \    dot_index = i\n    end\n    if file_name:sub(i, i) >= '0' and file_name:sub(i,\
    \ i) <= '9' then\n      count = count + 1\n    end\n  end\n  if count > 3 then\n\
    \    return 'No'\n  end\n  if dot_index == 0 then\n    return 'No'\n  end\n  if\
    \ file_name:sub(1, 1) < 'A' or file_name:sub(1, 1) > 'z' then\n    return 'No'\n\
    \  end\n  ext_index = dot_index + 1\n  if file_name:sub(ext_index, ext_index +\
    \ 2) ~= 'txt' and\n     file_name:sub(ext_index, ext_index + 2) ~= 'exe' and\n\
    \     file_name:sub(ext_index, ext_index + 2) ~= 'dll' then\n    return 'No'\n\
    \  end\n  return 'Yes'\nend", "    local count = 0\n    local dot_count = 0\n\
    \    local ext = ''\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot_count = dot_count + 1\n        end\n       \
    \ if file_name:sub(i, i):match('%d') then\n            count = count + 1\n   \
    \     end\n    end\n    if dot_count == 1 then\n        ext = file_name:sub(file_name:find('%.')\
    \ + 1)\n    end\n    if count > 3 or dot_count ~= 1 or file_name:sub(1, 1):match('%d')\
    \ or ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n\
    \    else\n        return 'Yes'\n    end\nend", "    local count = 0\n    local\
    \ dot_count = 0\n    local ext = {'txt', 'exe', 'dll'}\n    local ext_count =\
    \ 0\n    local ext_name = ''\n    local ext_name_count = 0\n    local ext_name_count_2\
    \ = 0\n    local ext_name_count_3 = 0\n    local ext_name_count_4 = 0\n    local\
    \ ext_name_count_5 = 0\n    local ext_name_count_6 = 0\n    local ext_name_count_7\
    \ = 0\n    local ext_name_count_8 = 0\n    local ext_name_count_9 = 0\n    local\
    \ ext_name_count_10 = 0\n    local ext_name_count_11 = 0\n    local ext_name_count_12\
    \ = 0\n    local ext_name_count_13 = 0\n    local ext_name_count_14 = 0\n    local\
    \ ext_name_count_15 = 0\n    local ext_name_count_16 = 0\n    local ext_name_count_17\
    \ = 0\n    local ext_name_count_18 = 0\n    local ext_name_count_19 = 0\n    local\
    \ ext_name_count_20 = 0\n    local ext_name_count_21 = 0\n    local ext_name_count_22\
    \ = 0\n    local ext_name_count_23 = 0\n    local ext_name_count_24 = 0\n    local\
    \ ext_name_count_25 = 0\n    local ext_name_count_26 = 0\n    local ext_name_count_27\
    \ = 0\n    local ext_name_count_28 = 0\n    local ext_name_count_29 = 0\n    local\
    \ ext_name_count_30 = 0\n    local ext_name_count_31 = 0\n    local ext_name_count_32\
    \ = 0\n    local ext_name_count_33 = 0\n    local ext_name_count_34 = 0\n    local\
    \ ext_name_count_35 = 0\n    local ext_name_count_36 = 0\n    local ext_name_count_37\
    \ = 0\n    local ext_name_count_38 = 0\n    local ext_name_count_39 = 0", "  local\
    \ dot_pos = string.find(file_name, '.')\n  if not dot_pos then return 'No' end\n\
    \  local before_dot = string.sub(file_name, 1, dot_pos - 1)\n  local after_dot\
    \ = string.sub(file_name, dot_pos + 1)\n  if #before_dot == 0 or not string.match(before_dot,\
    \ '^[a-zA-Z]') then return 'No' end\n  if #string.gsub(before_dot, '%d', '') >\
    \ 3 then return 'No' end\n  if after_dot ~= 'txt' and after_dot ~= 'exe' and after_dot\
    \ ~= 'dll' then return 'No' end\n  return 'Yes'\nend", "  -- TODO: implement this\
    \ function\nend", "    local count = 0\n    for i = 1, #file_name do\n       \
    \ if file_name:sub(i, i) == '.' then\n            count = count + 1\n        end\n\
    \    end\n    if count ~= 1 then\n        return 'No'\n    end\n    local dot_index\
    \ = file_name:find('.')\n    local before_dot = file_name:sub(1, dot_index - 1)\n\
    \    local after_dot = file_name:sub(dot_index + 1, #file_name)\n    if #before_dot\
    \ == 0 or not before_dot:match('^[a-zA-Z]') then\n        return 'No'\n    end\n\
    \    if not after_dot:match('^txt$') and not after_dot:match('^exe$') and not\
    \ after_dot:match('^dll$') then\n        return 'No'\n    end\n    local digits\
    \ = 0\n    for i = 1, #before_dot do\n        if before_dot:sub(i, i):match('^[0-9]$')\
    \ then\n            digits = digits + 1\n        end\n    end\n    if digits >\
    \ 3 then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local function\
    \ is_valid_file_name(file_name)\n        local function is_valid_extension(extension)\n\
    \            return extension == 'txt' or extension == 'exe' or extension == 'dll'\n\
    \        end", "    local count = 0\n    local dot_count = 0\n    local ext =\
    \ ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n  \
    \      if c == '.' then\n            dot_count = dot_count + 1\n        elseif\
    \ c >= '0' and c <= '9' then\n            count = count + 1\n        end\n   \
    \ end\n    if count > 3 or dot_count ~= 1 then\n        return 'No'\n    end\n\
    \    local ext = file_name:sub(file_name:find('.') + 1)\n    if ext == 'txt' or\
    \ ext == 'exe' or ext == 'dll' then\n        return 'Yes'\n    else\n        return\
    \ 'No'\n    end\nend", "    -- TODO: Implement this function.\nend", "    local\
    \ dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n    \
    \    return 'No'\n    end\n    local prefix = string.sub(file_name, 1, dot_index\
    \ - 1)\n    local postfix = string.sub(file_name, dot_index + 1)\n    local digit_count\
    \ = 0\n    for i = 1, #prefix do\n        local c = string.sub(prefix, i, i)\n\
    \        if c >= '0' and c <= '9' then\n            digit_count = digit_count\
    \ + 1\n        end\n    end\n    if digit_count > 3 then\n        return 'No'\n\
    \    end\n    if string.len(prefix) == 0 then\n        return 'No'\n    end\n\
    \    local first_char = string.sub(prefix, 1, 1)\n    if (first_char < 'a' or\
    \ first_char > 'z') and (first_char < 'A' or first_char > 'Z') then\n        return\
    \ 'No'\n    end\n    if postfix ~= 'txt' and postfix ~= 'exe' and postfix ~= 'dll'\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local num_digits\
    \ = 0\n    local dot_found = false\n    local ext_found = false\n    local ext_valid\
    \ = false\n    local ext_start = 1\n    local ext_end = 1\n    local ext_len =\
    \ 0\n    local ext_str = ''\n    local ext_list = {'txt', 'exe', 'dll'}\n    local\
    \ i = 1\n    local c = ''\n    local len = string.len(file_name)\n    while i\
    \ <= len do\n        c = string.sub(file_name, i, i)\n        if c == '.' then\n\
    \            if dot_found then\n                return 'No'\n            end\n\
    \            dot_found = true\n            ext_start = i + 1\n        elseif c\
    \ >= '0' and c <= '9' then\n            num_digits = num_digits + 1\n        \
    \    if num_digits > 3 then\n                return 'No'\n            end\n  \
    \      end\n        i = i + 1\n    end\n    if not dot_found then\n        return\
    \ 'No'\n    end\n    ext_end = len + 1\n    ext_len = ext_end - ext_start\n  \
    \  ext_str = string.sub(file_name, ext_start, ext_end - 1)\n    for i = 1, #ext_list\
    \ do\n        if ext_list[i] == ext_str then\n            ext_valid = true\n \
    \           break\n        end\n    end\n    if not ext_valid then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: implement this function\n\
    end", "    -- TODO: implement the function\nend", "    local dot_index = string.find(file_name,\
    \ '.')\n    if dot_index == nil then\n        return 'No'\n    end\n    local\
    \ prefix = string.sub(file_name, 1, dot_index - 1)\n    local suffix = string.sub(file_name,\
    \ dot_index + 1)\n    if string.len(prefix) == 0 then\n        return 'No'\n \
    \   end\n    local prefix_digit_count = 0\n    for i = 1, string.len(prefix) do\n\
    \        local c = string.sub(prefix, i, i)\n        if c >= '0' and c <= '9'\
    \ then\n            prefix_digit_count = prefix_digit_count + 1\n        end\n\
    \    end\n    if prefix_digit_count > 3 then\n        return 'No'\n    end\n \
    \   if string.sub(prefix, 1, 1) < 'A' or string.sub(prefix, 1, 1) > 'z' then\n\
    \        return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and\
    \ suffix ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    local digits = 0\n    local dot = false\n    local extension = false\n    local\
    \ first_letter = false\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c >= '0' and c <= '9' then\n            digits = digits + 1\n\
    \        elseif c == '.' then\n            dot = true\n        elseif c >= 'a'\
    \ and c <= 'z' or c >= 'A' and c <= 'Z' then\n            first_letter = true\n\
    \        end\n    end\n    if digits > 3 or not dot or not first_letter then\n\
    \        return 'No'\n    end\n    local ext = file_name:sub(#file_name - 2, #file_name)\n\
    \    if ext == 'txt' or ext == 'exe' or ext == 'dll' then\n        return 'Yes'\n\
    \    end\n    return 'No'\nend", "    local digits = 0\n    local dot_pos = -1\n\
    \    local ext = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c >= '0' and c <= '9' then\n            digits = digits + 1\n\
    \        elseif c == '.' then\n            dot_pos = i\n        end\n    end\n\
    \    if digits > 3 then\n        return 'No'\n    end\n    if dot_pos == -1 then\n\
    \        return 'No'\n    end\n    if dot_pos == 1 then\n        return 'No'\n\
    \    end\n    if dot_pos == #file_name then\n        return 'No'\n    end\n  \
    \  ext = file_name:sub(dot_pos + 1)\n    if ext ~= 'txt' and ext ~= 'exe' and\
    \ ext ~= 'dll' then\n        return 'No'\n    end\n    local first_char = file_name:sub(1,\
    \ 1)\n    if not (first_char >= 'a' and first_char <= 'z' or first_char >= 'A'\
    \ and first_char <= 'Z') then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local dot_pos = string.find(file_name, '.')\n    if dot_pos == nil\
    \ then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ local prefix_digit_count = 0\n    for i = 1, #prefix do\n        local c = string.sub(prefix,\
    \ i, i)\n        if c >= '0' and c <= '9' then\n            prefix_digit_count\
    \ = prefix_digit_count + 1\n        end\n    end\n    if prefix_digit_count >\
    \ 3 then\n        return 'No'\n    end\n    if string.len(prefix) == 0 then\n\
    \        return 'No'\n    end\n    local first_char = string.sub(prefix, 1, 1)\n\
    \    if (first_char < 'a' or first_char > 'z') and (first_char < 'A' or first_char\
    \ > 'Z') then\n        return 'No'\n    end\n    if suffix ~= 'txt' and suffix\
    \ ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local count = 0\n    local dot_pos = 0\n    local ext = ''\n\
    \    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n  \
    \          dot_pos = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ then\n        return 'No'\n    end\n    if dot_pos == 0 then\n        return\
    \ 'No'\n    end\n    if dot_pos == 1 then\n        return 'No'\n    end\n    if\
    \ not file_name:sub(1, dot_pos - 1):match('[a-zA-Z]') then\n        return 'No'\n\
    \    end\n    ext = file_name:sub(dot_pos + 1, #file_name)\n    if ext ~= 'txt'\
    \ and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    -- TODO: Implement this function.\nend", "    local dot_pos\
    \ = string.find(file_name, '.')\n    if dot_pos == nil then\n        return 'No'\n\
    \    end\n    local prefix = string.sub(file_name, 1, dot_pos - 1)\n    local\
    \ suffix = string.sub(file_name, dot_pos + 1)\n    local prefix_valid = string.match(prefix,\
    \ '^[a-zA-Z][a-zA-Z0-9]*$') ~= nil\n    local suffix_valid = suffix == 'txt' or\
    \ suffix == 'exe' or suffix == 'dll'\n    return (prefix_valid and suffix_valid)\
    \ and 'Yes' or 'No'\nend", "    local count = 0\n    local dot_count = 0\n   \
    \ local dot_index = 0\n    local ext = ''\n    for i = 1, #file_name do\n    \
    \    local c = file_name:sub(i, i)\n        if c == '.' then\n            dot_count\
    \ = dot_count + 1\n            dot_index = i\n        end\n        if c:match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    local prefix = file_name:sub(1,\
    \ dot_index - 1)\n    if #prefix == 0 or not prefix:match('^[a-zA-Z]') then\n\
    \        return 'No'\n    end\n    ext = file_name:sub(dot_index + 1)\n    if\
    \ ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n \
    \   end\n    return 'Yes'\nend", "    -- TODO: implement this function\nend",
  "    local dot_index = string.find(file_name, '.')\n    local prefix = string.sub(file_name,\
    \ 1, dot_index - 1)\n    local suffix = string.sub(file_name, dot_index + 1)\n\
    \    local digit_count = 0\n    for i = 1, string.len(prefix) do\n        if string.byte(prefix,\
    \ i) >= string.byte('0') and string.byte(prefix, i) <= string.byte('9') then\n\
    \            digit_count = digit_count + 1\n        end\n    end\n    if digit_count\
    \ > 3 then\n        return 'No'\n    end\n    if string.len(prefix) == 0 or (string.byte(prefix,\
    \ 1) < string.byte('a') or string.byte(prefix, 1) > string.byte('z')) and (string.byte(prefix,\
    \ 1) < string.byte('A') or string.byte(prefix, 1) > string.byte('Z')) then\n \
    \       return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and suffix\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    --\
    \ TODO: Implement this function.\nend", "    local count = 0\n    local dot_count\
    \ = 0\n    local dot_index = 0\n    local file_type = ''\n    local file_name_without_extension\
    \ = ''\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n\
    \            dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i):match('%d') then\n            count = count +\
    \ 1\n        end\n    end\n    if count > 3 or dot_count ~= 1 then\n        return\
    \ 'No'\n    end\n    file_type = file_name:sub(dot_index + 1)\n    file_name_without_extension\
    \ = file_name:sub(1, dot_index - 1)\n    if file_name_without_extension:match('%a')\
    \ and (file_type == 'txt' or file_type == 'exe' or file_type == 'dll') then\n\
    \        return 'Yes'\n    end\n    return 'No'\nend", "    -- TODO: implement\
    \ this function\nend", "    local count = 0\n    local dot_count = 0\n    local\
    \ dot_index = 0\n    local extension = ''\n    local file_name_without_extension\
    \ = ''\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n\
    \            dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i):match('%d') then\n            count = count +\
    \ 1\n        end\n    end\n    if count > 3 or dot_count ~= 1 then\n        return\
    \ 'No'\n    end\n    file_name_without_extension = file_name:sub(1, dot_index\
    \ - 1)\n    extension = file_name:sub(dot_index + 1, #file_name)\n    if file_name_without_extension:match('^%a')\
    \ and \n        (extension == 'txt' or extension == 'exe' or extension == 'dll')\
    \ then\n        return 'Yes'\n    end\n    return 'No'\nend", "    -- TODO: your\
    \ code here\nend", "    local dot_pos = string.find(file_name, '.')\n    if dot_pos\
    \ == nil then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n   \
    \ if string.len(prefix) == 0 or string.len(suffix) == 0 then\n        return 'No'\n\
    \    end\n    local prefix_digit_count = 0\n    for i = 1, string.len(prefix)\
    \ do\n        local c = string.sub(prefix, i, i)\n        if c >= '0' and c <=\
    \ '9' then\n            prefix_digit_count = prefix_digit_count + 1\n        end\n\
    \    end\n    if prefix_digit_count > 3 then\n        return 'No'\n    end\n \
    \   local c = string.sub(prefix, 1, 1)\n    if (c < 'a' or c > 'z') and (c < 'A'\
    \ or c > 'Z') then\n        return 'No'\n    end\n    if suffix ~= 'txt' and suffix\
    \ ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local count = 0\n    local dot_count = 0\n    local ext =\
    \ ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n  \
    \      if c == '.' then\n            dot_count = dot_count + 1\n        elseif\
    \ c:match('%d') then\n            count = count + 1\n        end\n    end\n  \
    \  if dot_count ~= 1 then\n        return 'No'\n    end\n    local ext = file_name:match('%.(%w+)$')\n\
    \    if ext == nil or not (ext == 'txt' or ext == 'exe' or ext == 'dll') then\n\
    \        return 'No'\n    end\n    if count > 3 then\n        return 'No'\n  \
    \  end\n    if not file_name:match('^%a') then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    local dot_index = string.find(file_name, '.')\n\
    \    local extension = string.sub(file_name, dot_index + 1)\n    local valid_extensions\
    \ = {'txt', 'exe', 'dll'}\n    local valid_extension = false\n    for _, ext in\
    \ ipairs(valid_extensions) do\n        if ext == extension then\n            valid_extension\
    \ = true\n            break\n        end\n    end\n    if not valid_extension\
    \ then\n        return 'No'\n    end\n    local prefix = string.sub(file_name,\
    \ 1, dot_index - 1)\n    local first_char = string.sub(prefix, 1, 1)\n    if not\
    \ (first_char >= 'a' and first_char <= 'z' or first_char >= 'A' and first_char\
    \ <= 'Z') then\n        return 'No'\n    end\n    local digit_count = 0\n    for\
    \ i = 1, #prefix do\n        local char = string.sub(prefix, i, i)\n        if\
    \ char >= '0' and char <= '9' then\n            digit_count = digit_count + 1\n\
    \        end\n    end\n    if digit_count > 3 then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    local count = 0\n    local dot_count = 0\n    local\
    \ dot_index = 0\n    local extension = ''\n    local valid_extensions = {'txt',\
    \ 'exe', 'dll'}\n    local valid_extension = false\n    local valid_name = false\n\
    \    local valid_digits = false\n    local valid_dot = false\n    local valid_extension\
    \ = false\n    local valid_file_name = false", "  local dot_pos = file_name:find('.')\n\
    \  if not dot_pos then\n    return 'No'\n  end\n  local prefix = file_name:sub(1,\
    \ dot_pos - 1)\n  local suffix = file_name:sub(dot_pos + 1)\n  local digit_count\
    \ = 0\n  for i = 1, #prefix do\n    local c = prefix:sub(i, i)\n    if c >= '0'\
    \ and c <= '9' then\n      digit_count = digit_count + 1\n    end\n  end\n  if\
    \ digit_count > 3 then\n    return 'No'\n  end\n  if not (prefix:match('^[a-zA-Z]')\
    \ and suffix:match('^txt$|^exe$|^dll$')) then\n    return 'No'\n  end\n  return\
    \ 'Yes'\nend", "    -- Your code here\nend", "    local dot_pos = string.find(file_name,\
    \ '.')\n    if not dot_pos then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if not string.match(prefix, '^[a-zA-Z][a-zA-Z0-9]*$') then\n\
    \        return 'No'\n    end\n    if not string.match(suffix, '^txt$|^exe$|^dll$')\
    \ then\n        return 'No'\n    end\n    local digits = string.match(prefix,\
    \ '%d+')\n    if digits and #digits > 3 then\n        return 'No'\n    end\n \
    \   return 'Yes'\nend", "    local digits = 0\n    local dot_count = 0\n    local\
    \ ext = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n\
    \        if c == '.' then\n            dot_count = dot_count + 1\n        elseif\
    \ c:match('%d') then\n            digits = digits + 1\n        elseif dot_count\
    \ == 0 then\n            if not c:match('%a') then\n                return 'No'\n\
    \            end\n        else\n            ext = ext .. c\n        end\n    end\n\
    \    if dot_count ~= 1 or digits > 3 or ext == '' or not ext:match('^txt$|^exe$|^dll$')\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local count\
    \ = 0\n    local dot_count = 0\n    local dot_index = 0\n    local ext = ''\n\
    \    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n  \
    \          dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i):match('%d') then\n            count = count +\
    \ 1\n        end\n    end\n    if count > 3 or dot_count ~= 1 then\n        return\
    \ 'No'\n    end\n    ext = file_name:sub(dot_index + 1, #file_name)\n    if ext\
    \ ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n\
    \    if file_name:sub(1, dot_index - 1):match('^%a+$') then\n        return 'Yes'\n\
    \    end\n    return 'No'\nend", "    local digits = 0\n    local dot_pos = 0\n\
    \    local ext_pos = 0\n    local ext = ''\n    for i = 1, #file_name do\n   \
    \     local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9' then\n \
    \           digits = digits + 1\n        elseif c == '.' then\n            dot_pos\
    \ = i\n        end\n    end\n    if digits > 3 then\n        return 'No'\n   \
    \ end\n    if dot_pos == 0 then\n        return 'No'\n    end\n    if dot_pos\
    \ == 1 then\n        return 'No'\n    end\n    if dot_pos == #file_name then\n\
    \        return 'No'\n    end\n    ext_pos = dot_pos + 1\n    ext = file_name:sub(ext_pos)\n\
    \    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    local dot_pos = string.find(file_name,\
    \ '.')\n    if dot_pos == nil then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.len(prefix) == 0 or string.len(suffix) == 0 then\n\
    \        return 'No'\n    end\n    if string.find(prefix, '%d') == nil then\n\
    \        return 'No'\n    end\n    if string.len(prefix) - string.len(string.gsub(prefix,\
    \ '%d', '')) > 3 then\n        return 'No'\n    end\n    if not (string.find(prefix,\
    \ '^[a-zA-Z]') and (suffix == 'txt' or suffix == 'exe' or suffix == 'dll')) then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n\
    \    local dot_count = 0\n    local dot_index = 0\n    local extension = ''\n\
    \    local valid_extensions = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name\
    \ do\n        local c = file_name:sub(i, i)\n        if c == '.' then\n      \
    \      dot_count = dot_count + 1\n            dot_index = i\n        end\n   \
    \     if c:match('%d') then\n            count = count + 1\n        end\n    end\n\
    \    if count > 3 then\n        return 'No'\n    end\n    if dot_count ~= 1 then\n\
    \        return 'No'\n    end\n    if dot_index == 1 then\n        return 'No'\n\
    \    end\n    if not file_name:sub(1, 1):match('%a') then\n        return 'No'\n\
    \    end\n    extension = file_name:sub(dot_index + 1)\n    for _, ext in ipairs(valid_extensions)\
    \ do\n        if ext == extension then\n            return 'Yes'\n        end\n\
    \    end\n    return 'No'\nend", "    local count = 0\n    local dot_count = 0\n\
    \    local dot_index = 0\n    local ext = ''\n    local ext_valid = false\n  \
    \  local ext_list = {'txt', 'exe', 'dll'}\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n            dot_index = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ then\n        valid_count = false\n    else\n        valid_count = true\n  \
    \  end\n    if dot_count == 1 then\n        ext = file_name:sub(dot_index + 1)\n\
    \        for i = 1, #ext_list do\n            if ext == ext_list[i] then\n   \
    \             valid_ext = true\n            end\n        end\n    end\n    if\
    \ file_name:sub(1, 1):match('%a') and #file_name:sub(1, dot_index - 1) > 0 then\n\
    \        valid_name = true\n    end\n    if valid_name and valid_ext and valid_count\
    \ then\n        return 'Yes'\n    else\n        return 'No'\n    end\nend", " \
    \   local digits = 0\n    local dot_pos = 0\n    local dot_found = false\n   \
    \ local ext_found = false\n    local ext_pos = 0\n    local ext_len = 0\n    local\
    \ ext_list = {'txt', 'exe', 'dll'}\n    local ext_list_len = #ext_list\n    local\
    \ ext_list_len_i = 0\n    local ext_list_i = nil\n    local ext_list_i_len = 0\n\
    \    local ext_list_i_len_i = 0\n    local ext_list_i_i = nil\n    local ext_list_i_i_char\
    \ = nil\n    local ext_list_i_i_char_code = 0\n    local ext_list_i_i_char_code_is_valid\
    \ = false\n    local ext_list_i_i_char_code_is_valid_i = 0\n    local ext_list_i_i_char_code_is_valid_i_char_code\
    \ = 0\n    local ext_list_i_i_char_code_is_valid_i_char_code_is_valid = false\n\
    \    local ext_list_i_i_char_code_is_valid_i_char_code_is_valid_i = 0\n    local\
    \ ext_list_i_i_char_code_is_valid_i_char_code_is_valid_i_char_code = 0\n    local\
    \ ext_list_i_i_char_code_is_valid_i_char_code_is_valid_i_char_code_is_valid =\
    \ false\n    local ext_list_i_i_char_code_is_valid_i_char_code_is_valid_i_char_code_is_valid_i\
    \ = 0\n    local ext_list_i_i_char_code_is_valid_i_char_code_is_valid_i_char_code_is_valid_i_char_code\
    \ = 0\n    local ext_list_i_i_char_code_is_valid_i_char_code_is_valid_i_char_code_is_valid_i_char_code_is_valid\
    \ = false\n", "    local dot_index = string.find(file_name, '.')\n    if dot_index\
    \ == nil then\n        return 'No'\n    end\n    local name = string.sub(file_name,\
    \ 1, dot_index - 1)\n    local ext = string.sub(file_name, dot_index + 1)\n  \
    \  if string.len(name) == 0 or string.len(ext) == 0 then\n        return 'No'\n\
    \    end\n    local digit_count = 0\n    for i = 1, string.len(name) do\n    \
    \    local c = string.sub(name, i, i)\n        if string.find(c, '%d') ~= nil\
    \ then\n            digit_count = digit_count + 1\n        end\n    end\n    if\
    \ digit_count > 3 then\n        return 'No'\n    end\n    local first_char = string.sub(name,\
    \ 1, 1)\n    if string.find(first_char, '[a-zA-Z]') == nil then\n        return\
    \ 'No'\n    end\n    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: implement\
    \ the function\nend", "    local count = 0\n    local dot_count = 0\n    local\
    \ dot_index = 0\n    local extension = \"\"\n    local valid_extensions = {\"\
    txt\", \"exe\", \"dll\"}\n    for i = 1, #file_name do\n        local char = file_name:sub(i,\
    \ i)\n        if char == \".\" then\n            dot_count = dot_count + 1\n \
    \           dot_index = i\n        end\n        if char:match(\"%d\") then\n \
    \           count = count + 1\n        end\n    end\n    if count > 3 then\n \
    \       return \"No\"\n    end\n    if dot_count ~= 1 then\n        return \"\
    No\"\n    end\n    if dot_index == 1 then\n        return \"No\"\n    end\n  \
    \  if not file_name:sub(1, 1):match(\"%a\") then\n        return \"No\"\n    end\n\
    \    extension = file_name:sub(dot_index + 1)\n    for i = 1, #valid_extensions\
    \ do\n        if extension == valid_extensions[i] then\n            return \"\
    Yes\"\n        end\n    end\n    return \"No\"\nend", "    local digits = 0\n\
    \    local dot = false\n    local ext = false\n    for i = 1, #file_name do\n\
    \        local c = file_name:sub(i, i)\n        if c == '.' then\n           \
    \ if dot then\n                return 'No'\n            end\n            dot =\
    \ true\n        elseif c >= '0' and c <= '9' then\n            digits = digits\
    \ + 1\n            if digits > 3 then\n                return 'No'\n         \
    \   end\n        elseif c >= 'a' and c <= 'z' or c >= 'A' and c <= 'Z' then\n\
    \            if dot then\n                if c == 't' then\n                 \
    \   ext = 'txt'\n                elseif c == 'e' then\n                    ext\
    \ = 'exe'\n                elseif c == 'd' then\n                    ext = 'dll'\n\
    \                else\n                    return 'No'\n                end\n\
    \            end\n        else\n            return 'No'\n        end\n    end\n\
    \    if not dot or not ext then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "  local count = 0\n  local dot_count = 0\n  local ext = ''\n  local ext_count\
    \ = 0\n  for i = 1, #file_name do\n    if file_name:sub(i, i) == '.' then\n  \
    \    dot_count = dot_count + 1\n    end\n    if file_name:sub(i, i) == '.' then\n\
    \      ext = file_name:sub(i + 1, #file_name)\n    end\n    if file_name:sub(i,\
    \ i) == '.' and ext == 'txt' then\n      ext_count = ext_count + 1\n    end\n\
    \    if file_name:sub(i, i) == '.' and ext == 'exe' then\n      ext_count = ext_count\
    \ + 1\n    end\n    if file_name:sub(i, i) == '.' and ext == 'dll' then\n    \
    \  ext_count = ext_count + 1\n    end\n    if file_name:sub(i, i) == '0' or file_name:sub(i,\
    \ i) == '1' or file_name:sub(i, i) == '2' or file_name:sub(i, i) == '3' or file_name:sub(i,\
    \ i) == '4' or file_name:sub(i, i) == '5' or file_name:sub(i, i) == '6' or file_name:sub(i,\
    \ i) == '7' or file_name:sub(i, i) == '8' or file_name:sub(i, i) == '9' then\n\
    \      count = count + 1\n    end\n  end\n  if count > 3 then\n    return 'No'\n\
    \  end\n  if dot_count ~= 1 then\n    return 'No'\n  end\n  if file_name:sub(1,\
    \ 1) ~= 'a' and file_name:sub(1, 1) ~= 'b' and file_name:sub(1, 1) ~= 'c' and\
    \ file_name:sub(1, 1) ~= 'd' and file_name:sub(1, 1) ~= 'e' and file_name:sub(1",
  "    local count = 0\n    local dot_index = 0\n    local dot_count = 0\n    local\
    \ extension = ''\n    local valid_extensions = {'txt', 'exe', 'dll'}\n    local\
    \ valid_extensions_count = 0\n    local valid_extensions_index = 0\n    local\
    \ valid_extensions_flag = false\n    local valid_extensions_flag_index = 0\n \
    \   local valid_extensions_flag_count = 0\n    local valid_extensions_flag_count_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag = false\n    local valid_extensions_flag_count_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count = 0\n    local\
    \ valid_extensions_flag_count_index_flag_index_count_index = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index_count\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index_count_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index_count_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_", "    local num_digits\
    \ = 0\n    local dot_found = false\n    local dot_index = 0\n    local extension\
    \ = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n\
    \        if c >= '0' and c <= '9' then\n            num_digits = num_digits +\
    \ 1\n        elseif c == '.' then\n            dot_found = true\n            dot_index\
    \ = i\n        end\n    end\n    if num_digits > 3 or not dot_found then\n   \
    \     return 'No'\n    end\n    local prefix = file_name:sub(1, dot_index - 1)\n\
    \    if #prefix == 0 or not (prefix:sub(1, 1) >= 'a' and prefix:sub(1, 1) <= 'z'\
    \ or prefix:sub(1, 1) >= 'A' and prefix:sub(1, 1) <= 'Z') then\n        return\
    \ 'No'\n    end\n    extension = file_name:sub(dot_index + 1, #file_name)\n  \
    \  if extension ~= 'txt' and extension ~= 'exe' and extension ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n\
    \    local dot_count = 0\n    local ext = ''\n    local ext_list = {'txt', 'exe',\
    \ 'dll'}\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.'\
    \ then\n            dot_count = dot_count + 1\n            ext = file_name:sub(i\
    \ + 1, #file_name)\n        end\n        if file_name:sub(i, i):match('%d') then\n\
    \            count = count + 1\n        end\n    end\n    if count > 3 or dot_count\
    \ ~= 1 or not file_name:sub(1, 1):match('%a') or not ext_list[ext] then\n    \
    \    return 'No'\n    end\n    return 'Yes'\nend", "    local dot_pos = file_name:find('.')\n\
    \    if dot_pos == nil then\n        return 'No'\n    end\n    local prefix =\
    \ file_name:sub(1, dot_pos - 1)\n    local suffix = file_name:sub(dot_pos + 1)\n\
    \    if prefix:match('%d') == nil and suffix:match('%d') == nil and\n        prefix:match('%a')\
    \ ~= nil and suffix:match('%a') == nil and\n        suffix:match('[^txt]') ==\
    \ nil then\n        return 'Yes'\n    end\n    return 'No'\nend", "    local digits\
    \ = 0\n    local dot = 0\n    local ext = ''\n    for i = 1, #file_name do\n \
    \       local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9' then\n\
    \            digits = digits + 1\n        elseif c == '.' then\n            dot\
    \ = dot + 1\n        elseif dot == 0 then\n            if not (c >= 'a' and c\
    \ <= 'z' or c >= 'A' and c <= 'Z') then\n                return 'No'\n       \
    \     end\n        else\n            ext = ext .. c\n        end\n    end\n  \
    \  if digits > 3 or dot ~= 1 or ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll'\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local digits\
    \ = 0\n    local dot_found = false\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9'\
    \ then\n            digits = digits + 1\n        elseif c == '.' then\n      \
    \      dot_found = true\n        elseif dot_found then\n            ext = ext\
    \ .. c\n        end\n    end\n    if digits > 3 or not dot_found or ext == ''\
    \ or not (ext == 'txt' or ext == 'exe' or ext == 'dll') then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    local dot_pos = string.find(file_name,\
    \ '.')\n    local before_dot = string.sub(file_name, 1, dot_pos - 1)\n    local\
    \ after_dot = string.sub(file_name, dot_pos + 1)\n    local num_digits = 0\n \
    \   for i = 1, #before_dot do\n        local c = string.sub(before_dot, i, i)\n\
    \        if c >= '0' and c <= '9' then\n            num_digits = num_digits +\
    \ 1\n        end\n    end\n    if num_digits > 3 then\n        return 'No'\n \
    \   end\n    local first_char = string.sub(before_dot, 1, 1)\n    if not (first_char\
    \ >= 'a' and first_char <= 'z' or first_char >= 'A' and first_char <= 'Z') then\n\
    \        return 'No'\n    end\n    if after_dot ~= 'txt' and after_dot ~= 'exe'\
    \ and after_dot ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local count_digits = 0\n    local count_dots = 0\n    local count_letters\
    \ = 0\n    local count_letters_after_dot = 0\n    local count_letters_before_dot\
    \ = 0\n    local count_letters_after_dot_txt = 0\n    local count_letters_after_dot_exe\
    \ = 0\n    local count_letters_after_dot_dll = 0\n    local dot_position = 0\n\
    \    local is_valid = true\n    local is_valid_after_dot = false\n    local is_valid_before_dot\
    \ = false\n    local is_valid_after_dot_txt = false\n    local is_valid_after_dot_exe\
    \ = false\n    local is_valid_after_dot_dll = false\n    local is_valid_count_digits\
    \ = false\n    local is_valid_count_dots = false\n    local is_valid_count_letters\
    \ = false\n    local is_valid_count_letters_after_dot = false\n    local is_valid_count_letters_before_dot\
    \ = false\n    local is_valid_count_letters_after_dot_txt = false\n    local is_valid_count_letters_after_dot_exe\
    \ = false\n    local is_valid_count_letters_after_dot_dll = false\n    local is_valid_dot_position\
    \ = false\n    local is_valid_after_dot_txt_exe_dll = false\n    local is_valid_before_dot_letter\
    \ = false\n    local is_valid_after_dot_txt_exe_dll_letter = false\n    local\
    \ is_valid_after_dot_txt_exe_dll_letter_count = false\n    local is_valid_after_dot_txt_exe_dll_letter_count_txt\
    \ = false\n    local is_valid_after_dot_txt_exe_dll_letter_count_exe = false\n\
    \    local is_valid_after_dot_txt_exe_dll_letter_count_dll = false\n    local\
    \ is_valid_after_dot_txt_exe_dll_letter_count_txt_exe_dll = false\n    local is_valid_after_dot_txt_exe_dll_letter_count_txt_exe_dll_letter",
  "    local dot_pos = file_name:find('.')\n    if not dot_pos then\n        return\
    \ 'No'\n    end\n    local name = file_name:sub(1, dot_pos - 1)\n    local ext\
    \ = file_name:sub(dot_pos + 1)\n    if not name:match('^[a-zA-Z]') or name:match('%d%d%d')\
    \ or not (ext == 'txt' or ext == 'exe' or ext == 'dll') then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    return 'Yes'\nend", "    local count =\
    \ 0\n    local dot_count = 0\n    local dot_index = 0\n    local last_letter_index\
    \ = 0\n    local last_letter = ''\n    local last_digit_index = 0\n    local last_digit\
    \ = ''\n    local first_letter_index = 0\n    local first_letter = ''\n    local\
    \ first_digit_index = 0\n    local first_digit = ''\n    local extension = ''\n\
    \    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n  \
    \          dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i) >= '0' and file_name:sub(i, i) <= '9' then\n \
    \           count = count + 1\n            last_digit_index = i\n            last_digit\
    \ = file_name:sub(i, i)\n        end\n        if file_name:sub(i, i) >= 'a' and\
    \ file_name:sub(i, i) <= 'z' or file_name:sub(i, i) >= 'A' and file_name:sub(i,\
    \ i) <= 'Z' then\n            last_letter_index = i\n            last_letter =\
    \ file_name:sub(i, i)\n        end\n    end\n    if dot_count ~= 1 then\n    \
    \    return 'No'\n    end\n    if count > 3 then\n        return 'No'\n    end\n\
    \    if dot_index == 1 then\n        return 'No'\n    end\n    if dot_index ==\
    \ #file_name then\n        return 'No'\n    end\n    if last_letter_index == 0\
    \ then\n        return 'No'\n    end\n    if last_digit_index == 0 then\n    \
    \    return 'No'\n    end\n    if last_letter_index > last_digit_index then\n\
    \        first_letter_index = 1\n        first_letter = file_name:sub(1, 1)\n\
    \    else\n        first_digit_index = 1\n        first_digit = file_name:sub(1,\
    \ 1)\n    end\n    if first_letter_index == 0 and first_digit_", "    local count\
    \ = 0\n    local dot_index = 0\n    local extension = ''\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot_index = i\n\
    \        end\n        if file_name:sub(i, i):match('%d') then\n            count\
    \ = count + 1\n        end\n    end\n    if count > 3 then\n        return 'No'\n\
    \    end\n    if dot_index == 0 then\n        return 'No'\n    end\n    if dot_index\
    \ == 1 then\n        return 'No'\n    end\n    if not file_name:sub(1, dot_index\
    \ - 1):match('%a') then\n        return 'No'\n    end\n    extension = file_name:sub(dot_index\
    \ + 1, #file_name)\n    if extension ~= 'txt' and extension ~= 'exe' and extension\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ count = 0\n    local dot_index = 0\n    local dot_count = 0\n    local extension\
    \ = ''\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n\
    \            dot_index = i\n            dot_count = dot_count + 1\n        end\n\
    \        if file_name:sub(i, i):match('%d') then\n            count = count +\
    \ 1\n        end\n    end\n    if count > 3 or dot_count ~= 1 then\n        return\
    \ 'No'\n    end\n    if file_name:sub(1, 1):match('%a') then\n        extension\
    \ = file_name:sub(dot_index + 1, #file_name)\n        if extension == 'txt' or\
    \ extension == 'exe' or extension == 'dll' then\n            return 'Yes'\n  \
    \      end\n    end\n    return 'No'\nend", "    local count = 0\n    local dot_count\
    \ = 0\n    local dot_index = 0\n    local extension = ''\n    local valid_extensions\
    \ = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match('%d') then\n        \
    \    count = count + 1\n        end\n    end\n    if count > 3 then\n        return\
    \ 'No'\n    end\n    if dot_count ~= 1 then\n        return 'No'\n    end\n  \
    \  if file_name:sub(1, dot_index - 1) == '' then\n        return 'No'\n    end\n\
    \    if not file_name:sub(1, dot_index - 1):match('%a') then\n        return 'No'\n\
    \    end\n    extension = file_name:sub(dot_index + 1, #file_name)\n    for i\
    \ = 1, #valid_extensions do\n        if extension == valid_extensions[i] then\n\
    \            return 'Yes'\n        end\n    end\n    return 'No'\nend", "    local\
    \ digits = 0\n    local dot_pos = 0\n    local dot_found = false\n    local ext\
    \ = ''\n    local ext_valid = false\n    local ext_valid_list = {'txt', 'exe',\
    \ 'dll'}\n    local name = ''\n    local name_valid = false\n    local name_valid_chars\
    \ = {'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o',\
    \ 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z', 'A', 'B', 'C', 'D', 'E',\
    \ 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M', 'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U',\
    \ 'V', 'W', 'X', 'Y', 'Z'}\n    local name_valid_chars_len = #name_valid_chars\n\
    \    local name_valid_chars_len_minus_one = name_valid_chars_len - 1\n    local\
    \ name_valid_chars_len_minus_two = name_valid_chars_len - 2\n    local name_valid_chars_len_minus_three\
    \ = name_valid_chars_len - 3\n    local name_valid_chars_len_minus_four = name_valid_chars_len\
    \ - 4\n    local name_valid_chars_len_minus_five = name_valid_chars_len - 5\n\
    \    local name_valid_chars_len_minus_six = name_valid_chars_len - 6\n    local\
    \ name_valid_chars_len_minus_seven = name_valid_chars_len - 7\n    local name_valid_chars_len_minus_eight\
    \ = name_valid_chars_len - 8\n    local name_valid_chars_len_minus_nine = name_valid_chars_len\
    \ - 9\n    local name_valid_chars_len_minus_ten = name_valid_ch", "    local i,\
    \ j = string.find(file_name, '%.')\n    if i == nil or j == nil then\n       \
    \ return 'No'\n    end\n    local pre = string.sub(file_name, 1, i - 1)\n    local\
    \ post = string.sub(file_name, j + 1)\n    if string.find(pre, '%d') ~= nil then\n\
    \        return 'No'\n    end\n    if string.find(pre, '%d') ~= nil then\n   \
    \     return 'No'\n    end\n    if string.find(post, '%d') ~= nil then\n     \
    \   return 'No'\n    end\n    if post ~= 'txt' and post ~= 'exe' and post ~= 'dll'\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: implement\
    \ this function\nend", "    local dot_pos = string.find(file_name, '.')\n    local\
    \ ext = string.sub(file_name, dot_pos + 1)\n    local ext_list = {'txt', 'exe',\
    \ 'dll'}\n    local ext_valid = false\n    for _, v in ipairs(ext_list) do\n \
    \       if v == ext then\n            ext_valid = true\n            break\n  \
    \      end\n    end\n    if not ext_valid then\n        return 'No'\n    end\n\
    \    local name = string.sub(file_name, 1, dot_pos - 1)\n    local name_valid\
    \ = true\n    local digit_count = 0\n    for i = 1, #name do\n        local c\
    \ = string.sub(name, i, i)\n        if c >= '0' and c <= '9' then\n          \
    \  digit_count = digit_count + 1\n        end\n    end\n    if digit_count > 3\
    \ then\n        name_valid = false\n    end\n    if string.len(name) == 0 then\n\
    \        name_valid = false\n    end\n    if not (string.sub(name, 1, 1) >= 'a'\
    \ and string.sub(name, 1, 1) <= 'z') and\n        not (string.sub(name, 1, 1)\
    \ >= 'A' and string.sub(name, 1, 1) <= 'Z') then\n        name_valid = false\n\
    \    end\n    if name_valid then\n        return 'Yes'\n    else\n        return\
    \ 'No'\n    end\nend", "    local dot_pos = string.find(file_name, '.')\n    if\
    \ not dot_pos then\n        return 'No'\n    end\n    local name = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local ext = string.sub(file_name, dot_pos + 1)\n    if\
    \ string.len(name) == 0 or string.len(ext) == 0 then\n        return 'No'\n  \
    \  end\n    local num_digits = 0\n    for i = 1, string.len(name) do\n       \
    \ local c = string.sub(name, i, i)\n        if c >= '0' and c <= '9' then\n  \
    \          num_digits = num_digits + 1\n        end\n    end\n    if num_digits\
    \ > 3 then\n        return 'No'\n    end\n    local first_char = string.sub(name,\
    \ 1, 1)\n    if not (first_char >= 'a' and first_char <= 'z' or first_char >=\
    \ 'A' and first_char <= 'Z') then\n        return 'No'\n    end\n    if ext ~=\
    \ 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n\
    \    return 'Yes'\nend", "    local digits = 0\n    local dot_count = 0\n    local\
    \ extension = ''\n    local extension_valid = false\n    local extension_valid_list\
    \ = {'txt', 'exe', 'dll'}\n    local valid_extensions = {}\n    for i, v in ipairs(extension_valid_list)\
    \ do\n        valid_extensions[v] = true\n    end\n    for i = 1, #file_name do\n\
    \        local c = file_name:sub(i, i)\n        if c == '.' then\n           \
    \ dot_count = dot_count + 1\n        elseif c:match('%d') then\n            digits\
    \ = digits + 1\n        elseif dot_count == 0 then\n            if not c:match('%a')\
    \ then\n                return 'No'\n            end\n        elseif dot_count\
    \ == 1 then\n            extension = extension .. c\n        end\n    end\n  \
    \  if dot_count ~= 1 then\n        return 'No'\n    end\n    if digits > 3 then\n\
    \        return 'No'\n    end\n    if valid_extensions[extension] then\n     \
    \   return 'Yes'\n    end\n    return 'No'\nend", "    -- TODO: implement this\
    \ function\nend", "    local count = 0\n    local dot_index = 0\n    local ext\
    \ = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n\
    \        if c == '.' then\n            dot_index = i\n        elseif c:match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ then\n        return 'No'\n    end\n    if dot_index == 0 then\n        return\
    \ 'No'\n    end\n    if dot_index == 1 then\n        return 'No'\n    end\n  \
    \  ext = file_name:sub(dot_index + 1)\n    if ext ~= 'txt' and ext ~= 'exe' and\
    \ ext ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \   local digits = 0\n    local dot_count = 0\n    local dot_index = 0\n    local\
    \ extension = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c >= '0' and c <= '9' then\n            digits = digits + 1\n\
    \        elseif c == '.' then\n            dot_count = dot_count + 1\n       \
    \     dot_index = i\n        end\n    end\n    if dot_count ~= 1 then\n      \
    \  return 'No'\n    end\n    if digits > 3 then\n        return 'No'\n    end\n\
    \    if dot_index == 1 then\n        return 'No'\n    end\n    if dot_index ==\
    \ #file_name then\n        return 'No'\n    end\n    local first_part = file_name:sub(1,\
    \ dot_index - 1)\n    local second_part = file_name:sub(dot_index + 1)\n    if\
    \ #first_part == 0 then\n        return 'No'\n    end\n    if not (first_part:sub(1,\
    \ 1) >= 'a' and first_part:sub(1, 1) <= 'z' or\n            first_part:sub(1,\
    \ 1) >= 'A' and first_part:sub(1, 1) <= 'Z') then\n        return 'No'\n    end\n\
    \    if second_part ~= 'txt' and second_part ~= 'exe' and second_part ~= 'dll'\
    \ then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local digits\
    \ = 0\n    local dot = 0\n    local ext = ''\n    local name = ''\n    for i =\
    \ 1, #file_name do\n        local c = file_name:sub(i, i)\n        if c == '.'\
    \ then\n            dot = dot + 1\n        elseif c:match('%d') then\n       \
    \     digits = digits + 1\n        end\n    end\n    if dot ~= 1 or digits > 3\
    \ then\n        return 'No'\n    end\n    name, ext = file_name:match('^([^.]+)%.(%w+)$')\n\
    \    if not name or not ext then\n        return 'No'\n    end\n    if not name:match('^%a')\
    \ or not ext:match('^txt$|^exe$|^dll$') then\n        return 'No'\n    end\n \
    \   return 'Yes'\nend", "    local dot_index = file_name:find('.')\n    if not\
    \ dot_index then\n        return 'No'\n    end\n    local prefix = file_name:sub(1,\
    \ dot_index - 1)\n    local suffix = file_name:sub(dot_index + 1)\n    if not\
    \ prefix:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if prefix:match('%d')\
    \ then\n        return 'No'\n    end\n    if prefix:match('%d%d%d') then\n   \
    \     return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and suffix\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ dot_index = string.find(file_name, '.')\n    if dot_index == nil then\n    \
    \    return 'No'\n    end\n    local extension = string.sub(file_name, dot_index\
    \ + 1)\n    if extension ~= 'txt' and extension ~= 'exe' and extension ~= 'dll'\
    \ then\n        return 'No'\n    end\n    local name = string.sub(file_name, 1,\
    \ dot_index - 1)\n    if string.len(name) == 0 then\n        return 'No'\n   \
    \ end\n    local first_char = string.sub(name, 1, 1)\n    if not (string.find(first_char,\
    \ '[a-zA-Z]') == 1) then\n        return 'No'\n    end\n    local digits_count\
    \ = 0\n    for i = 1, string.len(name) do\n        local char = string.sub(name,\
    \ i, i)\n        if string.find(char, '[0-9]') == 1 then\n            digits_count\
    \ = digits_count + 1\n        end\n    end\n    if digits_count > 3 then\n   \
    \     return 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n   \
    \ local dot_count = 0\n    local dot_index = 0\n    local ext_index = 0\n    local\
    \ ext_len = 0\n    local ext = ''\n    local valid_ext = {'txt', 'exe', 'dll'}\n\
    \    local valid_ext_count = 0\n    local valid_ext_index = 0\n    local valid_ext_len\
    \ = 0\n    local valid_ext_str = ''\n    local valid_ext_str_len = 0\n    local\
    \ valid_ext_str_index = 0\n    local valid_ext_str_count = 0\n    local valid_ext_str_count_index\
    \ = 0\n    local valid_ext_str_count_len = 0\n    local valid_ext_str_count_str\
    \ = ''\n    local valid_ext_str_count_str_len = 0\n    local valid_ext_str_count_str_index\
    \ = 0\n    local valid_ext_str_count_str_count = 0\n    local valid_ext_str_count_str_count_index\
    \ = 0\n    local valid_ext_str_count_str_count_len = 0\n    local valid_ext_str_count_str_count_str\
    \ = ''\n    local valid_ext_str_count_str_count_str_len = 0\n    local valid_ext_str_count_str_count_str_index\
    \ = 0\n    local valid_ext_str_count_str_count_str_count = 0\n    local valid_ext_str_count_str_count_str_count_index\
    \ = 0\n    local valid_ext_str_count_str_count_str_count_len = 0\n    local valid_ext_str_count_str_count_str_count_str\
    \ = ''\n    local valid_ext_str_count_str_count_str_count_str_len = 0\n    local\
    \ valid_ext_str_count_str_count_str_count_str_index = 0\n    local valid_ext_str_count_str_count_str_count_str_count\
    \ = 0\n    local valid_ext_str_count_str_count_str_count_str_count_index = 0\n\
    \    local valid_ext", "    local digits = 0\n    local dot_count = 0\n    local\
    \ ext = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n\
    \        if c >= '0' and c <= '9' then\n            digits = digits + 1\n    \
    \    elseif c == '.' then\n            dot_count = dot_count + 1\n        elseif\
    \ dot_count == 0 then\n            if not (c >= 'a' and c <= 'z' or c >= 'A' and\
    \ c <= 'Z') then\n                return 'No'\n            end\n        else\n\
    \            ext = ext .. c\n        end\n    end\n    if digits > 3 or dot_count\
    \ ~= 1 or ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    local digits = 0\n    local dot_index\
    \ = 0\n    local dot_count = 0\n    local extension = ''\n    local valid_extensions\
    \ = {'txt', 'exe', 'dll'}\n    local valid_extension = false\n    local valid_prefix\
    \ = false\n    local prefix = ''\n    for i = 1, #file_name do\n        local\
    \ char = file_name:sub(i, i)\n        if char == '.' then\n            dot_count\
    \ = dot_count + 1\n            dot_index = i\n        elseif char:match('%d')\
    \ then\n            digits = digits + 1\n        end\n    end\n    if dot_count\
    \ == 1 and digits <= 3 then\n        prefix = file_name:sub(1, dot_index - 1)\n\
    \        extension = file_name:sub(dot_index + 1)\n        valid_prefix = prefix:match('^[a-zA-Z]')\n\
    \        for _, ext in ipairs(valid_extensions) do\n            if ext == extension\
    \ then\n                valid_extension = true\n                break\n      \
    \      end\n        end\n    end\n    return valid_prefix and valid_extension\
    \ and 'Yes' or 'No'\nend", "    local digits = 0\n    local dot_count = 0\n  \
    \  local dot_index = 0\n    local extension = ''\n    for i = 1, #file_name do\n\
    \        local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9' then\n\
    \            digits = digits + 1\n        elseif c == '.' then\n            dot_count\
    \ = dot_count + 1\n            dot_index = i\n        end\n    end\n    if digits\
    \ > 3 or dot_count ~= 1 or dot_index == 1 then\n        return 'No'\n    end\n\
    \    local prefix = file_name:sub(1, dot_index - 1)\n    extension = file_name:sub(dot_index\
    \ + 1)\n    if not (prefix:match('^[a-zA-Z]') and (extension == 'txt' or extension\
    \ == 'exe' or extension == 'dll')) then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local num_digits = 0\n    local dot_found = false\n    local\
    \ extension = nil\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c >= '0' and c <= '9' then\n            num_digits = num_digits\
    \ + 1\n        elseif c == '.' then\n            dot_found = true\n        elseif\
    \ dot_found then\n            extension = extension and extension .. c or c\n\
    \        end\n    end\n    if num_digits > 3 or not dot_found or not extension\
    \ then\n        return 'No'\n    end\n    if extension == 'txt' or extension ==\
    \ 'exe' or extension == 'dll' then\n        return 'Yes'\n    end\n    return\
    \ 'No'\nend", "    local dot_index = string.find(file_name, '.')\n    local ext\
    \ = string.sub(file_name, dot_index + 1)\n    local name = string.sub(file_name,\
    \ 1, dot_index - 1)\n    local digits = 0\n    for i = 1, #name do\n        if\
    \ string.find(name, '[0-9]') then\n            digits = digits + 1\n        end\n\
    \    end\n    if digits > 3 then\n        return 'No'\n    end\n    if string.find(name,\
    \ '[a-zA-Z]') ~= 1 then\n        return 'No'\n    end\n    if ext ~= 'txt' and\
    \ ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local dot_index = file_name:find('.')\n    if not dot_index\
    \ then\n        return 'No'\n    end\n    local prefix = file_name:sub(1, dot_index\
    \ - 1)\n    local suffix = file_name:sub(dot_index + 1)\n    local prefix_digit_count\
    \ = 0\n    for i = 1, #prefix do\n        local c = prefix:sub(i, i)\n       \
    \ if c >= '0' and c <= '9' then\n            prefix_digit_count = prefix_digit_count\
    \ + 1\n        end\n    end\n    if prefix_digit_count > 3 then\n        return\
    \ 'No'\n    end\n    if not (prefix:sub(1, 1) >= 'a' and prefix:sub(1, 1) <= 'z'\
    \ or\n            prefix:sub(1, 1) >= 'A' and prefix:sub(1, 1) <= 'Z') then\n\
    \        return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and\
    \ suffix ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    local i, j = string.find(file_name, '%.')\n    if i == nil or j == nil then\n\
    \        return 'No'\n    end\n    local pre_dot = string.sub(file_name, 1, i\
    \ - 1)\n    local post_dot = string.sub(file_name, j + 1)\n    if string.match(pre_dot,\
    \ '%d') == nil and string.match(pre_dot, '%a') ~= nil and\n        (post_dot ==\
    \ 'txt' or post_dot == 'exe' or post_dot == 'dll') then\n        return 'Yes'\n\
    \    else\n        return 'No'\n    end\nend", "    local count = 0\n    local\
    \ dot_index = 0\n    local dot_count = 0\n    local extension = ''\n    local\
    \ valid_extensions = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name do\n   \
    \     local char = file_name:sub(i, i)\n        if char == '.' then\n        \
    \    dot_index = i\n            dot_count = dot_count + 1\n        elseif char:match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    extension = file_name:sub(dot_index\
    \ + 1)\n    for _, ext in ipairs(valid_extensions) do\n        if ext == extension\
    \ then\n            return 'Yes'\n        end\n    end\n    return 'No'\nend",
  "    local dot_index = file_name:find('.')\n    if not dot_index then\n        return\
    \ 'No'\n    end\n    local name = file_name:sub(1, dot_index - 1)\n    local ext\
    \ = file_name:sub(dot_index + 1)\n    if #name == 0 or not name:match('^[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if #name:gsub('%d', '') ~= #name then\n\
    \        return 'No'\n    end\n    if #name:gsub('%d', '') > 3 then\n        return\
    \ 'No'\n    end\n    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local dot_pos = string.find(file_name,\
    \ '.')\n    local prefix = string.sub(file_name, 1, dot_pos - 1)\n    local suffix\
    \ = string.sub(file_name, dot_pos + 1)\n    local num_digits = 0\n    for i =\
    \ 1, #prefix do\n        local c = string.sub(prefix, i, i)\n        if c >= '0'\
    \ and c <= '9' then\n            num_digits = num_digits + 1\n        end\n  \
    \  end\n    if num_digits > 3 then\n        return 'No'\n    end\n    if not (string.sub(prefix,\
    \ 1, 1) >= 'a' and string.sub(prefix, 1, 1) <= 'z' or\n            string.sub(prefix,\
    \ 1, 1) >= 'A' and string.sub(prefix, 1, 1) <= 'Z') then\n        return 'No'\n\
    \    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n\
    \    local index = 0\n    local sub_string = ''\n    local sub_string_1 = ''\n\
    \    local sub_string_2 = ''\n    local sub_string_3 = ''\n    local sub_string_4\
    \ = ''\n    local sub_string_5 = ''\n    local sub_string_6 = ''\n    local sub_string_7\
    \ = ''\n    local sub_string_8 = ''\n    local sub_string_9 = ''\n    local sub_string_10\
    \ = ''\n    local sub_string_11 = ''\n    local sub_string_12 = ''\n    local\
    \ sub_string_13 = ''\n    local sub_string_14 = ''\n    local sub_string_15 =\
    \ ''\n    local sub_string_16 = ''\n    local sub_string_17 = ''\n    local sub_string_18\
    \ = ''\n    local sub_string_19 = ''\n    local sub_string_20 = ''\n    local\
    \ sub_string_21 = ''\n    local sub_string_22 = ''\n    local sub_string_23 =\
    \ ''\n    local sub_string_24 = ''\n    local sub_string_25 = ''\n    local sub_string_26\
    \ = ''\n    local sub_string_27 = ''\n    local sub_string_28 = ''\n    local\
    \ sub_string_29 = ''\n    local sub_string_30 = ''\n    local sub_string_31 =\
    \ ''\n    local sub_string_32 = ''\n    local sub_string_33 = ''\n    local sub_string_34\
    \ = ''\n    local sub_string_35 = ''\n    local sub_string_36 = ''\n    local\
    \ sub_string_37 = ''\n    local sub_string_38 = ''\n    local sub_string_39 =\
    \ ''\n    local sub_string_40 = ''\n    local sub_string_41 = ''\n    local sub_string_42\
    \ = ''\n    local sub_string_43 = ''\n    local sub_string_44 = ''\n    local\
    \ sub_string_45 = ''\n    local sub_string_46 = ''\n    local sub_string_47 =\
    \ ''\n    local sub_string_48 = ''\n    local sub_string_49 = ''\n   ", "    local\
    \ count = 0\n    local dot_count = 0\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n        end\n        if file_name:sub(i, i):match('%d') then\n        \
    \    count = count + 1\n        end\n    end\n    if dot_count ~= 1 then\n   \
    \     return 'No'\n    end\n    if count > 3 then\n        return 'No'\n    end\n\
    \    if file_name:sub(1, 1):match('%a') == nil then\n        return 'No'\n   \
    \ end\n    if file_name:sub(1, #file_name - 4):match('%a') == nil then\n     \
    \   return 'No'\n    end\n    ext = file_name:sub(#file_name - 2, #file_name)\n\
    \    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    local dot_pos = string.find(file_name,\
    \ '.')\n    if dot_pos == nil then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.match(prefix, '%d') == nil and\n        string.match(prefix,\
    \ '%a') ~= nil and\n        string.match(suffix, '%a') ~= nil and\n        string.match(suffix,\
    \ '%d') == nil and\n        string.match(suffix, '%a') ~= nil and\n        (suffix\
    \ == 'txt' or suffix == 'exe' or suffix == 'dll') then\n        return 'Yes'\n\
    \    else\n        return 'No'\n    end\nend", "    local dot_pos = file_name:find('.')\n\
    \    local name = file_name:sub(1, dot_pos - 1)\n    local ext = file_name:sub(dot_pos\
    \ + 1)\n    local digits = 0\n    for i = 1, #name do\n        if name:sub(i,\
    \ i):match('%d') then\n            digits = digits + 1\n        end\n    end\n\
    \    if digits > 3 or digits == 0 then\n        return 'No'\n    end\n    if not\
    \ name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if ext ~= 'txt'\
    \ and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local count = 0\n    local dot_count = 0\n    local dot_index\
    \ = 0\n    local ext_index = 0\n    local ext_len = 0\n    local ext_str = ''\n\
    \    local ext_list = {'txt', 'exe', 'dll'}\n    local ext_valid = false\n   \
    \ local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_dot = false\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false\n    local valid_dot = false\n\
    \    local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_dot = false\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false\n    local valid_dot = false\n\
    \    local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_dot = false\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false\n    local valid_dot = false\n\
    \    local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_dot = false\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false\n    local valid_dot = false\n\
    \    local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_dot = false\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false\n    local valid_dot = false\n\
    \    local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_dot = false\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false\n    local valid_dot = false\n\
    \    local valid_ext = false\n    local valid_name = false\n    local valid_count\
    \ = false\n    local valid_dot = false\n    local valid_ext = false\n    local\
    \ valid_name = false\n    local valid_count = false", "    local digits = 0\n\
    \    local dot_count = 0\n    local ext = ''\n    for i = 1, #file_name do\n \
    \       local c = file_name:sub(i, i)\n        if c == '.' then\n            dot_count\
    \ = dot_count + 1\n        elseif c >= '0' and c <= '9' then\n            digits\
    \ = digits + 1\n        elseif dot_count == 0 then\n            if not (c >= 'a'\
    \ and c <= 'z' or c >= 'A' and c <= 'Z') then\n                return 'No'\n \
    \           end\n        elseif dot_count == 1 then\n            ext = ext ..\
    \ c\n        end\n    end\n    if digits > 3 or dot_count ~= 1 or ext ~= 'txt'\
    \ and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local count_digits = 0\n    local count_dots = 0\n    local\
    \ dot_index = 0\n    local extension = ''\n    local valid_extensions = {'txt',\
    \ 'exe', 'dll'}\n    for i = 1, #file_name do\n        if file_name:sub(i, i)\
    \ == '.' then\n            count_dots = count_dots + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match('%d') then\n        \
    \    count_digits = count_digits + 1\n        end\n    end\n    if count_dots\
    \ ~= 1 then\n        return 'No'\n    end\n    if count_digits > 3 then\n    \
    \    return 'No'\n    end\n    if dot_index == 1 then\n        return 'No'\n \
    \   end\n    if not file_name:sub(1, dot_index - 1):match('%a') then\n       \
    \ return 'No'\n    end\n    extension = file_name:sub(dot_index + 1, #file_name)\n\
    \    for i = 1, #valid_extensions do\n        if extension == valid_extensions[i]\
    \ then\n            return 'Yes'\n        end\n    end\n    return 'No'\nend",
  "    local count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local\
    \ extension = ''\n    local valid_extensions = {'txt', 'exe', 'dll'}\n    for\
    \ i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n         \
    \   dot_count = dot_count + 1\n            dot_index = i\n        end\n      \
    \  if file_name:sub(i, i):match('%d') then\n            count = count + 1\n  \
    \      end\n    end\n    if dot_count == 1 and count <= 3 then\n        extension\
    \ = file_name:sub(dot_index + 1)\n        if file_name:sub(1, dot_index - 1):match('^[a-zA-Z]')\
    \ and\n            table.contains(valid_extensions, extension) then\n        \
    \    return 'Yes'\n        end\n    end\n    return 'No'\nend", "    local dot_pos\
    \ = string.find(file_name, '.')\n    if not dot_pos then\n        return 'No'\n\
    \    end\n    local name_part = string.sub(file_name, 1, dot_pos - 1)\n    local\
    \ ext_part = string.sub(file_name, dot_pos + 1)\n    if string.len(name_part)\
    \ == 0 or string.len(ext_part) == 0 then\n        return 'No'\n    end\n    local\
    \ name_part_digit_count = 0\n    for i = 1, string.len(name_part) do\n       \
    \ local c = string.sub(name_part, i, i)\n        if c >= '0' and c <= '9' then\n\
    \            name_part_digit_count = name_part_digit_count + 1\n        end\n\
    \    end\n    if name_part_digit_count > 3 then\n        return 'No'\n    end\n\
    \    local c = string.sub(name_part, 1, 1)\n    if not (c >= 'a' and c <= 'z'\
    \ or c >= 'A' and c <= 'Z') then\n        return 'No'\n    end\n    if ext_part\
    \ ~= 'txt' and ext_part ~= 'exe' and ext_part ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    local count = 0\n    local dot_index =\
    \ 0\n    local dot_count = 0\n    local ext = ''\n    for i = 1, #file_name do\n\
    \        if file_name:sub(i, i) == '.' then\n            dot_index = i\n     \
    \       dot_count = dot_count + 1\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ 1):match('%a') and file_name:sub(dot_index + 1, dot_index + 1):match('%a') then\n\
    \        ext = file_name:sub(dot_index + 1, #file_name)\n        if ext == 'txt'\
    \ or ext == 'exe' or ext == 'dll' then\n            return 'Yes'\n        end\n\
    \    end\n    return 'No'\nend", "    local count = 0\n    local dot_count = 0\n\
    \    local dot_index = 0\n    local extension = ''\n    local valid_extensions\
    \ = {'txt', 'exe', 'dll'}\n    local valid_extension = false\n    local valid_name\
    \ = false\n    local valid_name_count = 0\n    local valid_name_count_max = 0\n\
    \    local valid_name_count_min = 0\n    local valid_name_count_max_index = 0\n\
    \    local valid_name_count_min_index = 0\n    local valid_name_count_max_index_char\
    \ = ''\n    local valid_name_count_min_index_char = ''\n    local valid_name_count_max_index_char_valid\
    \ = false\n    local valid_name_count_min_index_char_valid = false\n    local\
    \ valid_name_count_max_index_char_valid_ascii = 0\n    local valid_name_count_min_index_char_valid_ascii\
    \ = 0\n    local valid_name_count_max_index_char_valid_ascii_min = 0\n    local\
    \ valid_name_count_min_index_char_valid_ascii_min = 0\n    local valid_name_count_max_index_char_valid_ascii_max\
    \ = 0\n    local valid_name_count_min_index_char_valid_ascii_max = 0\n    local\
    \ valid_name_count_max_index_char_valid_ascii_min_valid = false\n    local valid_name_count_min_index_char_valid_ascii_min_valid\
    \ = false\n    local valid_name_count_max_index_char_valid_ascii_max_valid = false\n\
    \    local valid_name_count_min_index_char_valid_ascii_max_valid = false\n   \
    \ local valid_name_count_max_index_char_valid_ascii_min_valid_ascii = 0\n    local\
    \ valid_name_count_min_index_char_valid_ascii_min_valid_ascii = 0\n    local valid_name_count_max_index_char",
  "    local dot_pos = string.find(file_name, '.')\n    if dot_pos == nil then\n \
    \       return 'No'\n    end\n    local prefix = string.sub(file_name, 1, dot_pos\
    \ - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n    if string.find(prefix,\
    \ '[0-9]') ~= nil then\n        return 'No'\n    end\n    if string.find(prefix,\
    \ '[a-zA-Z]') == nil then\n        return 'No'\n    end\n    if string.find(suffix,\
    \ 'txt') == nil and string.find(suffix, 'exe') == nil and string.find(suffix,\
    \ 'dll') == nil then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \   local dot_pos = string.find(file_name, '.')\n    if dot_pos == nil then\n\
    \        return 'No'\n    end\n    local prefix = string.sub(file_name, 1, dot_pos\
    \ - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n    if string.len(prefix)\
    \ == 0 or\n       string.len(suffix) == 0 or\n       string.find(prefix, '%d')\
    \ == nil or\n       string.find(prefix, '%d') > 1 or\n       string.find(prefix,\
    \ '%d%d%d') ~= nil or\n       string.find(prefix, '%a') ~= 1 or\n       string.find(suffix,\
    \ 'txt') == nil and\n       string.find(suffix, 'exe') == nil and\n       string.find(suffix,\
    \ 'dll') == nil then\n        return 'No'\n    end\n    return 'Yes'\nend", " \
    \   local digits = 0\n    local dot_count = 0\n    local ext = ''\n    for i =\
    \ 1, #file_name do\n        local c = file_name:sub(i, i)\n        if c == '.'\
    \ then\n            dot_count = dot_count + 1\n        elseif c >= '0' and c <=\
    \ '9' then\n            digits = digits + 1\n        elseif dot_count == 0 then\n\
    \            if not (c >= 'a' and c <= 'z' or c >= 'A' and c <= 'Z') then\n  \
    \              return 'No'\n            end\n        elseif dot_count == 1 then\n\
    \            ext = ext .. c\n        end\n    end\n    if digits > 3 or dot_count\
    \ ~= 1 or ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    local dot_pos = string.find(file_name,\
    \ '.')\n    if dot_pos == nil then\n        return 'No'\n    end\n    local prefix\
    \ = string.sub(file_name, 1, dot_pos - 1)\n    local suffix = string.sub(file_name,\
    \ dot_pos + 1)\n    if string.len(prefix) == 0 or string.len(suffix) == 0 then\n\
    \        return 'No'\n    end\n    local prefix_digit_count = 0\n    for i = 1,\
    \ string.len(prefix) do\n        local c = string.sub(prefix, i, i)\n        if\
    \ c >= '0' and c <= '9' then\n            prefix_digit_count = prefix_digit_count\
    \ + 1\n        end\n    end\n    if prefix_digit_count > 3 then\n        return\
    \ 'No'\n    end\n    local prefix_first_char = string.sub(prefix, 1, 1)\n    if\
    \ (prefix_first_char < 'a' or prefix_first_char > 'z') and (prefix_first_char\
    \ < 'A' or prefix_first_char > 'Z') then\n        return 'No'\n    end\n    if\
    \ suffix ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: implement this function\n\
    end", "    local count = 0\n    local dot_index = 0\n    local ext_index = 0\n\
    \    local ext = ''\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot_index = i\n        end\n        if file_name:sub(i,\
    \ i) >= '0' and file_name:sub(i, i) <= '9' then\n            count = count + 1\n\
    \        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n \
    \   if dot_index == 0 then\n        return 'No'\n    end\n    if dot_index ==\
    \ 1 then\n        return 'No'\n    end\n    if file_name:sub(1, 1) < 'A' or file_name:sub(1,\
    \ 1) > 'z' then\n        return 'No'\n    end\n    ext_index = dot_index + 1\n\
    \    ext = file_name:sub(ext_index, #file_name)\n    if ext ~= 'txt' and ext ~=\
    \ 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local count = 0\n    local dot_count = 0\n    local dot_index = 0\n\
    \    local ext = ''\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match('%d') then\n        \
    \    count = count + 1\n        end\n    end\n    if count > 3 or dot_count ~=\
    \ 1 then\n        return 'No'\n    end\n    if file_name:sub(1, 1):match('%a')\
    \ then\n        ext = file_name:sub(dot_index + 1, #file_name)\n        if ext\
    \ == 'txt' or ext == 'exe' or ext == 'dll' then\n            return 'Yes'\n  \
    \      end\n    end\n    return 'No'\nend", "    local count = 0\n    local dot_count\
    \ = 0\n    local dot_index = 0\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n            dot_index = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ dot_index - 1):match('%a') == nil then\n        return 'No'\n    end\n    ext\
    \ = file_name:sub(dot_index + 1, #file_name)\n    if ext ~= 'txt' and ext ~= 'exe'\
    \ and ext ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend",
  "    local digits = 0\n    local dot_pos = 0\n    local ext = ''\n    for i = 1,\
    \ #file_name do\n        local c = file_name:sub(i, i)\n        if c >= '0' and\
    \ c <= '9' then\n            digits = digits + 1\n        elseif c == '.' then\n\
    \            dot_pos = i\n        end\n    end\n    if digits > 3 then\n     \
    \   return 'No'\n    end\n    if dot_pos == 0 then\n        return 'No'\n    end\n\
    \    if dot_pos == 1 then\n        return 'No'\n    end\n    if dot_pos == #file_name\
    \ then\n        return 'No'\n    end\n    ext = file_name:sub(dot_pos + 1)\n \
    \   if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n\
    \    end\n    return 'Yes'\nend", "    local count = 0\n    local dot_count =\
    \ 0\n    local dot_index = 0\n    local last_index = 0\n    local first_letter\
    \ = false\n    local first_letter_index = 0\n    local last_letter_index = 0\n\
    \    local last_letter = false\n    local last_letter_index = 0\n    local last_letter\
    \ = false\n    local last_letter_index = 0\n    local last_letter = false\n  \
    \  local last_letter_index = 0\n    local last_letter = false\n    local last_letter_index\
    \ = 0\n    local last_letter = false\n    local last_letter_index = 0\n    local\
    \ last_letter = false\n    local last_letter_index = 0\n    local last_letter\
    \ = false\n    local last_letter_index = 0\n    local last_letter = false\n  \
    \  local last_letter_index = 0\n    local last_letter = false\n    local last_letter_index\
    \ = 0\n    local last_letter = false\n    local last_letter_index = 0\n    local\
    \ last_letter = false\n    local last_letter_index = 0\n    local last_letter\
    \ = false\n    local last_letter_index = 0\n    local last_letter = false\n  \
    \  local last_letter_index = 0\n    local last_letter = false\n    local last_letter_index\
    \ = 0\n    local last_letter = false\n    local last_letter_index = 0\n    local\
    \ last_letter = false\n    local last_letter_index = 0\n    local last_letter\
    \ = false\n    local last_letter_index = 0\n    local last_letter = false\n  \
    \  local last_letter_index = 0\n    local last_letter = false\n    local last_letter_index\
    \ = 0\n    local last_letter = false\n    local last_letter_index = 0\n    local\
    \ last_letter = false\n    local last_letter_index = 0\n    local last_letter\
    \ = false\n    local last_letter_index = 0\n    local last_letter = false\n  \
    \  local last_letter_index = 0\n    local last_letter = false\n    local last_letter_index\
    \ = 0\n    local last_letter = false\n    local last_letter_index = 0\n    local\
    \ last", "    local count = 0\n    local dot_count = 0\n    local dot_index =\
    \ 0\n    local extension = ''\n    local valid_extensions = {'txt', 'exe', 'dll'}\n\
    \    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n  \
    \          dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i):match('%d') then\n            count = count +\
    \ 1\n        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n\
    \    if dot_count ~= 1 then\n        return 'No'\n    end\n    if not file_name:sub(1,\
    \ dot_index - 1):match('^[a-zA-Z]') then\n        return 'No'\n    end\n    extension\
    \ = file_name:sub(dot_index + 1)\n    for i = 1, #valid_extensions do\n      \
    \  if extension == valid_extensions[i] then\n            return 'Yes'\n      \
    \  end\n    end\n    return 'No'\nend", "    local dot_index = file_name:find('.')\n\
    \    if not dot_index then\n        return 'No'\n    end\n    local extension\
    \ = file_name:sub(dot_index + 1)\n    if not (extension == 'txt' or extension\
    \ == 'exe' or extension == 'dll') then\n        return 'No'\n    end\n    local\
    \ name = file_name:sub(1, dot_index - 1)\n    if name:find('%d') then\n      \
    \  return 'No'\n    end\n    local digits_count = 0\n    for i = 1, name:len()\
    \ do\n        local c = name:sub(i, i)\n        if c >= '0' and c <= '9' then\n\
    \            digits_count = digits_count + 1\n        end\n    end\n    if digits_count\
    \ > 3 then\n        return 'No'\n    end\n    return 'Yes'\nend", "    -- TODO:\
    \ implement the function\nend", "    local digits = 0\n    local dot_pos = 0\n\
    \    local ext = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c == '.' then\n            dot_pos = i\n        elseif c:match('%d')\
    \ then\n            digits = digits + 1\n        end\n    end\n    if digits >\
    \ 3 then\n        return 'No'\n    end\n    if dot_pos == 0 then\n        return\
    \ 'No'\n    end\n    if dot_pos == 1 then\n        return 'No'\n    end\n    if\
    \ not file_name:sub(1, dot_pos - 1):match('^[a-zA-Z]') then\n        return 'No'\n\
    \    end\n    ext = file_name:sub(dot_pos + 1)\n    if ext ~= 'txt' and ext ~=\
    \ 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local digits_count = 0\n    local dot_count = 0\n    local dot_index\
    \ = 0\n    local extension = ''\n    local extension_valid = false\n    local\
    \ valid_extensions = {'txt', 'exe', 'dll'}\n    local valid_extensions_count =\
    \ 3\n    local valid_extensions_index = 1\n    local valid_extensions_found =\
    \ false\n    local valid_extensions_found_count = 0\n    local valid_extensions_found_index\
    \ = 1\n    local valid_extensions_found_index_max = 0\n    local valid_extensions_found_index_min\
    \ = 0\n    local valid_extensions_found_index_min_max = 0\n    local valid_extensions_found_index_min_max_count\
    \ = 0\n    local valid_extensions_found_index_min_max_index = 1\n    local valid_extensions_found_index_min_max_index_max\
    \ = 0\n    local valid_extensions_found_index_min_max_index_min = 0\n    local\
    \ valid_extensions_found_index_min_max_index_min_max = 0\n    local valid_extensions_found_index_min_max_index_min_max_count\
    \ = 0\n    local valid_extensions_found_index_min_max_index_min_max_index = 1\n\
    \    local valid_extensions_found_index_min_max_index_min_max_index_max = 0\n\
    \    local valid_extensions_found_index_min_max_index_min_max_index_min = 0\n\
    \    local valid_extensions_found_index_min_max_index_min_max_index_min_max =\
    \ 0\n    local valid_extensions_found_index_min_max_index_min_max_index_min_max_count\
    \ = 0\n    local valid_extensions_found_index_min_max_index_min_max_index_min_max_index\
    \ = 1\n    local valid_extensions_found_index_min_max_index_min_max_index_min_max_index_max\
    \ = 0\n    local valid_extensions_found_index_min_max_index_", "    local function\
    \ check_extension(extension)\n        if extension == 'txt' or extension == 'exe'\
    \ or extension == 'dll' then\n            return true\n        else\n        \
    \    return false\n        end\n    end", "    -- TODO: implement this function\n\
    end", "    local dot_pos = file_name:find('.')\n    local file_name_before_dot\
    \ = file_name:sub(1, dot_pos - 1)\n    local file_name_after_dot = file_name:sub(dot_pos\
    \ + 1)\n    local digit_count = 0\n    for i = 1, #file_name_before_dot do\n \
    \       local c = file_name_before_dot:sub(i, i)\n        if c:find('%d') then\n\
    \            digit_count = digit_count + 1\n        end\n    end\n    if digit_count\
    \ > 3 then\n        return 'No'\n    end\n    if not file_name_before_dot:find('%a')\
    \ then\n        return 'No'\n    end\n    if not (file_name_after_dot == 'txt'\
    \ or file_name_after_dot == 'exe' or file_name_after_dot == 'dll') then\n    \
    \    return 'No'\n    end\n    return 'Yes'\nend", "    -- TODO: implement this\
    \ function\nend", "    -- TODO: implement this function\nend", "    local digits_count\
    \ = 0\n    local dot_count = 0\n    local dot_index = 0\n    local extension =\
    \ ''\n    local valid_extensions = {'txt', 'exe', 'dll'}\n    local valid_extension\
    \ = false\n    local valid_name = false\n    local valid_digits = false\n    local\
    \ valid_dot = false\n    local valid_extension = false\n    local valid_name =\
    \ false\n    local valid_digits = false\n    local valid_dot = false\n    local\
    \ valid_extension = false\n    local valid_name = false\n    local valid_digits\
    \ = false\n    local valid_dot = false\n    local valid_extension = false\n  \
    \  local valid_name = false\n    local valid_digits = false\n    local valid_dot\
    \ = false\n    local valid_extension = false\n    local valid_name = false\n \
    \   local valid_digits = false\n    local valid_dot = false\n    local valid_extension\
    \ = false\n    local valid_name = false\n    local valid_digits = false\n    local\
    \ valid_dot = false\n    local valid_extension = false\n    local valid_name =\
    \ false\n    local valid_digits = false\n    local valid_dot = false\n    local\
    \ valid_extension = false\n    local valid_name = false\n    local valid_digits\
    \ = false\n    local valid_dot = false\n    local valid_extension = false\n  \
    \  local valid_name = false\n    local valid_digits = false\n    local valid_dot\
    \ = false\n    local valid_extension = false\n    local valid_name = false\n \
    \   local valid_digits = false\n    local valid_dot = false\n    local valid_extension\
    \ = false\n    local valid_name = false\n    local valid_digits = false\n    local\
    \ valid_dot = false\n    local valid_extension = false\n    local valid_name =\
    \ false\n    local valid_digits = false\n    local valid_dot = false\n    local\
    \ valid_extension = false\n    local valid_name = false\n    local valid_digits\
    \ = false\n    local valid_dot = false\n    local valid_extension = false\n  \
    \  local valid_name = false\n    local valid", "    local digits = 0\n    local\
    \ dot_found = false\n    local ext_found = false\n    local ext = ''\n    for\
    \ i = 1, #file_name do\n        local c = file_name:sub(i, i)\n        if c ==\
    \ '.' then\n            dot_found = true\n        elseif dot_found then\n    \
    \        ext = ext .. c\n        elseif c:match('%d') then\n            digits\
    \ = digits + 1\n        end\n    end\n    if digits > 3 then\n        return 'No'\n\
    \    end\n    if not dot_found then\n        return 'No'\n    end\n    if not\
    \ file_name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    if ext\
    \ == 'txt' or ext == 'exe' or ext == 'dll' then\n        return 'Yes'\n    end\n\
    \    return 'No'\nend", "    local count = 0\n    local dot_position = 0\n   \
    \ local extension = ''\n    local valid_extensions = {'txt', 'exe', 'dll'}\n \
    \   local valid_extensions_count = 0\n    local valid_extensions_index = 0\n \
    \   local valid_extensions_index_found = false\n    local valid_extensions_index_found_count\
    \ = 0\n    local valid_extensions_index_found_count_max = 0\n    local valid_extensions_index_found_count_max_index\
    \ = 0\n    local valid_extensions_index_found_count_max_index_found = false\n\
    \    local valid_extensions_index_found_count_max_index_found_count = 0\n    local\
    \ valid_extensions_index_found_count_max_index_found_count_max = 0\n    local\
    \ valid_extensions_index_found_count_max_index_found_count_max_index = 0\n   \
    \ local valid_extensions_index_found_count_max_index_found_count_max_index_found\
    \ = false\n    local valid_extensions_index_found_count_max_index_found_count_max_index_found_count\
    \ = 0\n    local valid_extensions_index_found_count_max_index_found_count_max_index_found_count_max\
    \ = 0\n    local valid_extensions_index_found_count_max_index_found_count_max_index_found_count_max_index\
    \ = 0\n    local valid_extensions_index_found_count_max_index_found_count_max_index_found_count_max_index_found\
    \ = false\n    local valid_extensions_index_found_count_max_index_found_count_max_index_found_count_max_index_found_count\
    \ = 0\n    local valid_extensions_index_found_count_max_index_found_count_max_index_found_count_max_index_found_count_max\
    \ = 0\n    local valid_extensions_index_found_count_max_index_found_count_max_index_found_count_max_index_found_count_max_index\
    \ = 0\n    local", "    local cnt = 0\n    local dot_idx = 0\n    local ext =\
    \ ''\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n\
    \            dot_idx = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            cnt = cnt + 1\n        end\n    end\n    if cnt > 3 then\n\
    \        return 'No'\n    end\n    if dot_idx == 0 then\n        return 'No'\n\
    \    end\n    if dot_idx == 1 then\n        return 'No'\n    end\n    if not file_name:sub(1,\
    \ dot_idx - 1):match('%a') then\n        return 'No'\n    end\n    ext = file_name:sub(dot_idx\
    \ + 1, #file_name)\n    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n\
    \    local dot_count = 0\n    local ext = ''\n    local name = ''\n    for i =\
    \ 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n            dot_count\
    \ = dot_count + 1\n            name = file_name:sub(1, i - 1)\n            ext\
    \ = file_name:sub(i + 1, #file_name)\n        end\n        if file_name:sub(i,\
    \ i):match('%d') then\n            count = count + 1\n        end\n    end\n \
    \   if count > 3 or dot_count ~= 1 or name:match('%a') == nil or (ext ~= 'txt'\
    \ and ext ~= 'exe' and ext ~= 'dll') then\n        return 'No'\n    else\n   \
    \     return 'Yes'\n    end\nend", "    local digits = 0\n    local dot_found\
    \ = false\n    local extension = ''\n    for i = 1, #file_name do\n        local\
    \ c = file_name:sub(i, i)\n        if c >= '0' and c <= '9' then\n           \
    \ digits = digits + 1\n        elseif c == '.' then\n            dot_found = true\n\
    \        elseif dot_found then\n            extension = extension .. c\n     \
    \   end\n    end\n    if digits > 3 or not dot_found or extension == '' or extension\
    \ == 'txt' or extension == 'exe' or extension == 'dll' then\n        return 'No'\n\
    \    else\n        return 'Yes'\n    end\nend", "    local digits = 0\n    local\
    \ dot = 0\n    local ext = 0\n    for i = 1, #file_name do\n        local c =\
    \ file_name:sub(i, i)\n        if c >= '0' and c <= '9' then\n            digits\
    \ = digits + 1\n        elseif c == '.' then\n            dot = dot + 1\n    \
    \    elseif i == #file_name then\n            if c == 't' then\n             \
    \   ext = ext + 1\n            elseif c == 'x' then\n                ext = ext\
    \ + 2\n            elseif c == 'd' then\n                ext = ext + 3\n     \
    \       end\n        end\n    end\n    return (digits <= 3 and dot == 1 and ext\
    \ > 0) and 'Yes' or 'No'\nend", "    local count = 0\n    local dot_count = 0\n\
    \    local dot_index = 0\n    local flag = false\n    for i = 1, #file_name do\n\
    \        if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n            dot_index = i\n        end\n        if file_name:sub(i, i)\
    \ >= '0' and file_name:sub(i, i) <= '9' then\n            count = count + 1\n\
    \        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n \
    \   if dot_count ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ dot_index - 1) == '' then\n        return 'No'\n    end\n    if file_name:sub(dot_index\
    \ + 1, #file_name) ~= 'txt' and file_name:sub(dot_index + 1, #file_name) ~= 'exe'\
    \ and file_name:sub(dot_index + 1, #file_name) ~= 'dll' then\n        return 'No'\n\
    \    end\n    for i = 1, dot_index - 1 do\n        if file_name:sub(i, i) >= 'a'\
    \ and file_name:sub(i, i) <= 'z' then\n            flag = true\n        end\n\
    \        if file_name:sub(i, i) >= 'A' and file_name:sub(i, i) <= 'Z' then\n \
    \           flag = true\n        end\n    end\n    if flag == false then\n   \
    \     return 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n   \
    \ local dot = false\n    local ext = false\n    for i = 1, #file_name do\n   \
    \     local c = file_name:sub(i, i)\n        if c == '.' then\n            if\
    \ dot then\n                return 'No'\n            end\n            dot = true\n\
    \        elseif c >= '0' and c <= '9' then\n            count = count + 1\n  \
    \          if count > 3 then\n                return 'No'\n            end\n \
    \       elseif dot then\n            if c == 't' then\n                ext = true\n\
    \            elseif c == 'x' and ext then\n                ext = true\n      \
    \      elseif c == 'e' and ext then\n                return 'Yes'\n          \
    \  else\n                return 'No'\n            end\n        elseif not (c >=\
    \ 'a' and c <= 'z' or c >= 'A' and c <= 'Z') then\n            return 'No'\n \
    \       end\n    end\n    return 'No'\nend", "    local digits = 0\n    local\
    \ dot_found = false\n    local extension = ''\n    for i = 1, #file_name do\n\
    \        local c = file_name:sub(i, i)\n        if c == '.' then\n           \
    \ dot_found = true\n        elseif c:match('%d') then\n            digits = digits\
    \ + 1\n        elseif dot_found then\n            extension = extension .. c\n\
    \        end\n    end\n    if digits > 3 or not dot_found or not file_name:match('^[a-zA-Z]')\
    \ or not\n        (extension == 'txt' or extension == 'exe' or extension == 'dll')\
    \ then\n        return 'No'\n    else\n        return 'Yes'\n    end\nend", " \
    \   local dot_pos = string.find(file_name, '.')\n    if dot_pos == nil then\n\
    \        return 'No'\n    end\n    local prefix = string.sub(file_name, 1, dot_pos\
    \ - 1)\n    local suffix = string.sub(file_name, dot_pos + 1)\n    if string.len(prefix)\
    \ == 0 or string.len(suffix) == 0 then\n        return 'No'\n    end\n    local\
    \ digit_count = 0\n    for i = 1, string.len(prefix) do\n        local c = string.sub(prefix,\
    \ i, i)\n        if c >= '0' and c <= '9' then\n            digit_count = digit_count\
    \ + 1\n        end\n    end\n    if digit_count > 3 then\n        return 'No'\n\
    \    end\n    local c = string.sub(prefix, 1, 1)\n    if (c < 'a' or c > 'z')\
    \ and (c < 'A' or c > 'Z') then\n        return 'No'\n    end\n    if suffix ~=\
    \ 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n        return 'No'\n  \
    \  end\n    return 'Yes'\nend", "    local dot_pos = file_name:find('.')\n   \
    \ if not dot_pos then\n        return 'No'\n    end\n    local prefix = file_name:sub(1,\
    \ dot_pos - 1)\n    local suffix = file_name:sub(dot_pos + 1)\n    if prefix:match('%d')\
    \ or prefix:match('%D') ~= prefix or #prefix == 0 then\n        return 'No'\n\
    \    end\n    if suffix ~= 'txt' and suffix ~= 'exe' and suffix ~= 'dll' then\n\
    \        return 'No'\n    end\n    return 'Yes'\nend", "    local digits = 0\n\
    \    local dot_count = 0\n    local dot_index = 0\n    local extension = ''\n\
    \    local prefix = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c == '.' then\n            dot_count = dot_count + 1\n      \
    \      dot_index = i\n        elseif c:match('%d') then\n            digits =\
    \ digits + 1\n        end\n    end\n    if dot_count ~= 1 or digits > 3 then\n\
    \        return 'No'\n    end\n    prefix = file_name:sub(1, dot_index - 1)\n\
    \    extension = file_name:sub(dot_index + 1)\n    if #prefix == 0 or not prefix:match('^[a-zA-Z]')\
    \ then\n        return 'No'\n    end\n    if extension ~= 'txt' and extension\
    \ ~= 'exe' and extension ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local num_digits = 0\n    local num_dots = 0\n    local num_letters\
    \ = 0\n    local num_letters_after_dot = 0\n    local num_letters_before_dot =\
    \ 0\n    local num_letters_after_dot_txt = 0\n    local num_letters_after_dot_exe\
    \ = 0\n    local num_letters_after_dot_dll = 0\n    local num_letters_before_dot_a\
    \ = 0\n    local num_letters_before_dot_z = 0\n    local num_letters_before_dot_A\
    \ = 0\n    local num_letters_before_dot_Z = 0\n    local num_letters_before_dot_a_z\
    \ = 0\n    local num_letters_before_dot_A_Z = 0\n    local num_letters_before_dot_a_z_A_Z\
    \ = 0\n    local num_letters_before_dot_a_z_A_Z_txt = 0\n    local num_letters_before_dot_a_z_A_Z_exe\
    \ = 0\n    local num_letters_before_dot_a_z_A_Z_dll = 0\n    local num_letters_before_dot_a_z_A_Z_txt_exe_dll\
    \ = 0\n    local num_letters_before_dot_a_z_A_Z_txt_exe_dll_dot = 0\n    local\
    \ num_letters_before_dot_a_z_A_Z_txt_exe_dll_dot_letters_after_dot = 0\n    local\
    \ num_letters_before_dot_a_z_A_Z_txt_exe_dll_dot_letters_after_dot_txt = 0\n \
    \   local num_letters_before_dot_a_z_A_Z_txt_exe_dll_dot_letters_after_dot_exe\
    \ = 0\n    local num_letters_before_dot_a_z_A_Z_txt_exe_dll_dot_letters_after_dot_dll\
    \ = 0\n    local num_letters_before_dot_a_z_A_Z_txt_exe_dll_dot_letters_after_dot_txt_exe_dll\
    \ = 0\n    local num_letters_before_dot", "    local count = 0\n    local dot_count\
    \ = 0\n    local ext = ''\n    local ext_ok = false\n    local ext_list = {'txt',\
    \ 'exe', 'dll'}\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c == '.' then\n            dot_count = dot_count + 1\n      \
    \  elseif c:match('%d') then\n            count = count + 1\n        end\n   \
    \ end\n    if dot_count == 1 then\n        ext = file_name:match('%.(%w+)$')\n\
    \        for _, e in ipairs(ext_list) do\n            if ext == e then\n     \
    \           ext_ok = true\n                break\n            end\n        end\n\
    \    end\n    if count > 3 or dot_count ~= 1 or not ext_ok then\n        return\
    \ 'No'\n    else\n        return 'Yes'\n    end\nend", "    local count = 0\n\
    \    local dot_count = 0\n    local dot_index = 0\n    local extension = ''\n\
    \    local file_name_without_extension = ''\n    local valid_extensions = {'txt',\
    \ 'exe', 'dll'}\n    for i = 1, #file_name do\n        if file_name:sub(i, i)\
    \ == '.' then\n            dot_count = dot_count + 1\n            dot_index =\
    \ i\n        end\n        if file_name:sub(i, i):match('%d') then\n          \
    \  count = count + 1\n        end\n    end\n    if count > 3 or dot_count ~= 1\
    \ then\n        return 'No'\n    end\n    file_name_without_extension = file_name:sub(1,\
    \ dot_index - 1)\n    extension = file_name:sub(dot_index + 1, #file_name)\n \
    \   if not file_name_without_extension:match('^[a-zA-Z]') or #file_name_without_extension\
    \ == 0 then\n        return 'No'\n    end\n    for i = 1, #valid_extensions do\n\
    \        if valid_extensions[i] == extension then\n            return 'Yes'\n\
    \        end\n    end\n    return 'No'\nend", "    local count = 0\n    local\
    \ dot_count = 0\n    local dot_index = 0\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n            dot_index = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    ext = file_name:sub(dot_index\
    \ + 1)\n    if ext ~= 'txt' and ext ~= 'exe' and ext ~= 'dll' then\n        return\
    \ 'No'\n    end\n    if file_name:sub(1, dot_index - 1):match('%a') then\n   \
    \     return 'Yes'\n    end\n    return 'No'\nend", "    -- TODO: implement the\
    \ function\nend", "    local digits = 0\n    local dot_pos = 0\n    local dot_count\
    \ = 0\n    local ext_pos = 0\n    local ext_len = 0\n    local ext_valid = false\n\
    \    local ext_valid_list = {\n        ['txt'] = true,\n        ['exe'] = true,\n\
    \        ['dll'] = true\n    }\n    local i = 1\n    while i <= #file_name do\n\
    \        local c = file_name:sub(i, i)\n        if c >= '0' and c <= '9' then\n\
    \            digits = digits + 1\n        elseif c == '.' then\n            dot_pos\
    \ = i\n            dot_count = dot_count + 1\n        end\n        i = i + 1\n\
    \    end\n    if dot_count ~= 1 then\n        return 'No'\n    end\n    if digits\
    \ > 3 then\n        return 'No'\n    end\n    if dot_pos == 1 then\n        return\
    \ 'No'\n    end\n    if dot_pos == #file_name then\n        return 'No'\n    end\n\
    \    ext_pos = dot_pos + 1\n    ext_len = #file_name - ext_pos + 1\n    ext_valid\
    \ = ext_valid_list[file_name:sub(ext_pos, ext_pos + ext_len - 1)]\n    if not\
    \ ext_valid then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ count = 0\n    local dot_index = 0\n    local dot_count = 0\n    local extension\
    \ = ''\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n\
    \            dot_index = i\n            dot_count = dot_count + 1\n        end\n\
    \        if file_name:sub(i, i):match('%d') then\n            count = count +\
    \ 1\n        end\n    end\n    if count > 3 or dot_count ~= 1 then\n        return\
    \ 'No'\n    end\n    if file_name:sub(1, dot_index - 1):match('^[a-zA-Z]') ==\
    \ nil then\n        return 'No'\n    end\n    extension = file_name:sub(dot_index\
    \ + 1, #file_name)\n    if extension ~= 'txt' and extension ~= 'exe' and extension\
    \ ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\nend", "    local\
    \ count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local extension\
    \ = ''\n    local name = ''\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match('%d') then\n        \
    \    count = count + 1\n        end\n    end\n    if count > 3 or dot_count ~=\
    \ 1 then\n        return 'No'\n    end\n    extension = file_name:sub(dot_index\
    \ + 1)\n    name = file_name:sub(1, dot_index - 1)\n    if name:match('^%a') and\
    \ (extension == 'txt' or extension == 'exe' or extension == 'dll') then\n    \
    \    return 'Yes'\n    end\n    return 'No'\nend", "    local count = 0\n    local\
    \ dot_count = 0\n    local dot_index = 0\n    local ext_index = 0\n    local ext_len\
    \ = 0\n    local ext_list = {'txt', 'exe', 'dll'}\n    local ext_list_len = #ext_list\n\
    \    local ext_list_index = 0\n    local ext_list_item = ''\n    local ext_list_item_len\
    \ = 0\n    local ext_list_item_index = 0\n    local ext_list_item_char = ''\n\
    \    local ext_list_item_char_code = 0\n    local ext_char = ''\n    local ext_char_code\
    \ = 0\n    local ext_char_code_lower = 0\n    local ext_char_code_upper = 0\n\
    \    local ext_char_code_lower_diff = 0\n    local ext_char_code_upper_diff =\
    \ 0\n    local file_name_len = #file_name\n    local file_name_index = 0\n   \
    \ local file_name_char = ''\n    local file_name_char_code = 0\n    local file_name_char_code_lower\
    \ = 0\n    local file_name_char_code_upper = 0\n    local file_name_char_code_lower_diff\
    \ = 0\n    local file_name_char_code_upper_diff = 0\n    local file_name_char_code_diff\
    \ = 0\n    local file_name_char_code_diff_lower = 0\n    local file_name_char_code_diff_upper\
    \ = 0\n    local file_name_char_code_diff_lower_diff = 0\n    local file_name_char_code_diff_upper_diff\
    \ = 0\n    local file_name_char_code_diff_lower_diff_lower = 0\n    local file_name_char_code_diff_lower_diff_upper\
    \ = 0\n    local file_name_char_code_diff_upper_diff_lower = 0\n    local file_name_char_code_diff_upper_diff_upper\
    \ = 0\n    local file_name_char_code_diff_lower_diff_lower_diff = 0\n    local\
    \ file_name_char_code_diff_lower", "    local count = 0\n    local dot_count =\
    \ 0\n    local dot_index = 0\n    local ext = ''\n    local ext_list = {'txt',\
    \ 'exe', 'dll'}\n    local ext_valid = false\n    local valid_ext = false\n  \
    \  local valid_name = false\n    local valid_count = false\n    local valid_dot\
    \ = false\n    local valid_ext = false\n    local valid_name = false\n    local\
    \ valid_count = false\n    local valid_dot = false\n    local valid_ext = false\n\
    \    local valid_name = false\n    local valid_count = false\n    local valid_dot\
    \ = false\n    local valid_ext = false\n    local valid_name = false\n    local\
    \ valid_count = false\n    local valid_dot = false\n    local valid_ext = false\n\
    \    local valid_name = false\n    local valid_count = false\n    local valid_dot\
    \ = false\n    local valid_ext = false\n    local valid_name = false\n    local\
    \ valid_count = false\n    local valid_dot = false\n    local valid_ext = false\n\
    \    local valid_name = false\n    local valid_count = false\n    local valid_dot\
    \ = false\n    local valid_ext = false\n    local valid_name = false\n    local\
    \ valid_count = false\n    local valid_dot = false\n    local valid_ext = false\n\
    \    local valid_name = false\n    local valid_count = false\n    local valid_dot\
    \ = false\n    local valid_ext = false\n    local valid_name = false\n    local\
    \ valid_count = false\n    local valid_dot = false\n    local valid_ext = false\n\
    \    local valid_name = false\n    local valid_count = false\n    local valid_dot\
    \ = false\n    local valid_ext = false\n    local valid_name = false\n    local\
    \ valid_count = false\n    local valid_dot = false\n    local valid_ext = false\n\
    \    local valid_name = false\n    local valid_count = false\n    local valid_dot\
    \ = false\n    local valid_ext = false\n    local valid_name = false\n    local\
    \ valid_count = false\n    local valid_dot = false\n    local valid_ext = false\n\
    \   ", "    local dot_pos = string.find(file_name, '.')\n    local digits_count\
    \ = 0\n    local extension = string.sub(file_name, dot_pos + 1)\n    local valid_extensions\
    \ = {'txt', 'exe', 'dll'}\n    local valid_extension = false\n    local valid_name\
    \ = false\n    local valid_digits = false\n    local valid_dot = false", "  local\
    \ count = 0\n  local dot_count = 0\n  local dot_index = 0\n  local extension =\
    \ ''\n  local valid_extensions = {'txt', 'exe', 'dll'}\n  for i = 1, #file_name\
    \ do\n    if file_name:sub(i, i) == '.' then\n      dot_count = dot_count + 1\n\
    \      dot_index = i\n    end\n    if file_name:sub(i, i):match('%d') then\n \
    \     count = count + 1\n    end\n  end\n  if count > 3 or dot_count ~= 1 then\n\
    \    return 'No'\n  end\n  if file_name:sub(1, dot_index - 1):match('%a') == nil\
    \ then\n    return 'No'\n  end\n  extension = file_name:sub(dot_index + 1, #file_name)\n\
    \  for i = 1, #valid_extensions do\n    if extension == valid_extensions[i] then\n\
    \      return 'Yes'\n    end\n  end\n  return 'No'\nend", "    -- TODO: implement\
    \ this function\nend", "    -- TODO: implement this function\nend", "    local\
    \ digits = 0\n    local dot_count = 0\n    local dot_index = 0\n    local extension\
    \ = ''\n    for i = 1, #file_name do\n        local c = file_name:sub(i, i)\n\
    \        if c == '.' then\n            dot_count = dot_count + 1\n           \
    \ dot_index = i\n        elseif c:match('%d') then\n            digits = digits\
    \ + 1\n        end\n    end\n    if dot_count ~= 1 then\n        return 'No'\n\
    \    end\n    local prefix = file_name:sub(1, dot_index - 1)\n    if #prefix ==\
    \ 0 or not prefix:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    extension\
    \ = file_name:sub(dot_index + 1)\n    if digits > 3 or not (extension == 'txt'\
    \ or extension == 'exe' or extension == 'dll') then\n        return 'No'\n   \
    \ end\n    return 'Yes'\nend", "  -- TODO: Implement this function.\nend", " \
    \   local count = 0\n    local dot_index = 0\n    local ext_index = 0\n    local\
    \ ext_list = {'txt', 'exe', 'dll'}\n    local ext = ''\n    for i = 1, #file_name\
    \ do\n        if file_name:sub(i, i) == '.' then\n            dot_index = i\n\
    \        end\n        if file_name:sub(i, i) >= '0' and file_name:sub(i, i) <=\
    \ '9' then\n            count = count + 1\n        end\n    end\n    if count\
    \ > 3 then\n        return 'No'\n    end\n    if dot_index == 0 then\n       \
    \ return 'No'\n    end\n    if file_name:sub(1, 1) < 'A' or file_name:sub(1, 1)\
    \ > 'z' then\n        return 'No'\n    end\n    ext_index = dot_index + 1\n  \
    \  ext = file_name:sub(ext_index, #file_name)\n    for i = 1, #ext_list do\n \
    \       if ext == ext_list[i] then\n            return 'Yes'\n        end\n  \
    \  end\n    return 'No'\nend", "  local digits = 0\n  local dot = 0\n  local extension\
    \ = ''\n  local name = ''\n  for i = 1, #file_name do\n    local c = file_name:sub(i,\
    \ i)\n    if c == '.' then\n      dot = dot + 1\n    elseif c:match('%d') then\n\
    \      digits = digits + 1\n    end\n  end\n  if digits > 3 or dot ~= 1 then\n\
    \    return 'No'\n  end\n  name, extension = file_name:match('(.*)%.(.*)')\n \
    \ if name:match('^%a') and extension == 'txt' or extension == 'exe' or extension\
    \ == 'dll' then\n    return 'Yes'\n  end\n  return 'No'\nend", "    local digits\
    \ = 0\n    local dot = false\n    local ext = false\n    local ext_list = {'txt',\
    \ 'exe', 'dll'}\n    for i = 1, #file_name do\n        local c = file_name:sub(i,\
    \ i)\n        if c == '.' then\n            if dot then\n                return\
    \ 'No'\n            end\n            dot = true\n        elseif c:match('%d')\
    \ then\n            digits = digits + 1\n            if digits > 3 then\n    \
    \            return 'No'\n            end\n        elseif dot then\n         \
    \   if ext then\n                return 'No'\n            end\n            ext\
    \ = true\n            local ext_name = file_name:sub(i)\n            for _, v\
    \ in ipairs(ext_list) do\n                if ext_name == v then\n            \
    \        return 'Yes'\n                end\n            end\n            return\
    \ 'No'\n        else\n            if not c:match('%a') then\n                return\
    \ 'No'\n            end\n        end\n    end\n    return 'No'\nend", "    local\
    \ count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local extension\
    \ = ''\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n\
    \            dot_count = dot_count + 1\n            dot_index = i\n        end\n\
    \        if file_name:sub(i, i):match('%d') then\n            count = count +\
    \ 1\n        end\n    end\n    if count > 3 then\n        return 'No'\n    end\n\
    \    if dot_count ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ dot_index - 1) == '' then\n        return 'No'\n    end\n    if not file_name:sub(1,\
    \ dot_index - 1):match('%a') then\n        return 'No'\n    end\n    extension\
    \ = file_name:sub(dot_index + 1, #file_name)\n    if extension ~= 'txt' and extension\
    \ ~= 'exe' and extension ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend", "    local function check_extension(extension)\n        if extension\
    \ == 'txt' or extension == 'exe' or extension == 'dll' then\n            return\
    \ true\n        else\n            return false\n        end\n    end", "    --\
    \ TODO: implement the function\nend", "    local dot_index = file_name:find('.')\n\
    \    if dot_index == nil then\n        return 'No'\n    end\n    local prefix\
    \ = file_name:sub(1, dot_index - 1)\n    local suffix = file_name:sub(dot_index\
    \ + 1)\n    if #prefix == 0 or #prefix > 8 or #suffix == 0 or #suffix > 3 then\n\
    \        return 'No'\n    end\n    if prefix:find('%d') or prefix:find('%D') ==\
    \ nil then\n        return 'No'\n    end\n    if suffix ~= 'txt' and suffix ~=\
    \ 'exe' and suffix ~= 'dll' then\n        return 'No'\n    end\n    return 'Yes'\n\
    end", "    local dot_pos = string.find(file_name, '.')\n    if not dot_pos then\n\
    \        return 'No'\n    end\n    local name_before_dot = string.sub(file_name,\
    \ 1, dot_pos - 1)\n    local name_after_dot = string.sub(file_name, dot_pos +\
    \ 1)\n    if string.len(name_before_dot) == 0 or\n       string.len(name_after_dot)\
    \ == 0 or\n       string.find(name_before_dot, '%d') or\n       not string.find(name_before_dot,\
    \ '%a') or\n       not (name_after_dot == 'txt' or name_after_dot == 'exe' or\
    \ name_after_dot == 'dll') then\n        return 'No'\n    end\n    local count\
    \ = 0\n    for i = 1, string.len(name_before_dot) do\n        if string.sub(name_before_dot,\
    \ i, i) >= '0' and string.sub(name_before_dot, i, i) <= '9' then\n           \
    \ count = count + 1\n        end\n    end\n    if count > 3 then\n        return\
    \ 'No'\n    end\n    return 'Yes'\nend", "    local count = 0\n    local dot_count\
    \ = 0\n    local dot_index = 0\n    local ext = ''\n    local ext_valid = false\n\
    \    local ext_valid_list = {'txt', 'exe', 'dll'}\n    local valid_ext = false\n\
    \    local valid_ext_count = 0\n    local valid_ext_index = 0\n    local valid_ext_list\
    \ = {}\n    local valid_ext_list_count = 0\n    local valid_ext_list_index = 0\n\
    \    local valid_ext_list_index_count = 0\n    local valid_ext_list_index_count_index\
    \ = 0\n    local valid_ext_list_index_count_index_count = 0\n    local valid_ext_list_index_count_index_count_index\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count = 0\n    local\
    \ valid_ext_list_index_count_index_count_index_count_index = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count_index\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count_index_count_index_count_index_count\
    \ = 0\n    local valid_ext_list_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index\
    \ = 0\n    local valid_ext_list_index_count_index_count", "    local digits =\
    \ 0\n    local dot_count = 0\n    local dot_index = 0\n    local extension = ''\n\
    \    local extension_valid = false\n    local valid_extensions = {'txt', 'exe',\
    \ 'dll'}\n    local valid_extensions_count = 3\n    local valid_extensions_index\
    \ = 1\n    local valid_extensions_found = false\n    local valid_extensions_found_count\
    \ = 0\n    local valid_extensions_found_index = 1\n    local valid_extensions_found_index_max\
    \ = 0\n    local valid_extensions_found_index_max_value = ''\n    local valid_extensions_found_index_max_value_length\
    \ = 0\n    local valid_extensions_found_index_max_value_length_max = 0\n    local\
    \ valid_extensions_found_index_max_value_length_max_value = ''\n    local valid_extensions_found_index_max_value_length_max_value_index\
    \ = 0\n    local valid_extensions_found_index_max_value_length_max_value_index_max\
    \ = 0\n    local valid_extensions_found_index_max_value_length_max_value_index_max_value\
    \ = ''\n    local valid_extensions_found_index_max_value_length_max_value_index_max_value_length\
    \ = 0\n    local valid_extensions_found_index_max_value_length_max_value_index_max_value_length_max\
    \ = 0\n    local valid_extensions_found_index_max_value_length_max_value_index_max_value_length_max_value\
    \ = ''\n    local valid_extensions_found_index_max_value_length_max_value_index_max_value_length_max_value_index\
    \ = 0\n    local valid_extensions_found_index_max_value_length_max_value_index_max_value_length_max_value_index_max\
    \ = 0\n    local valid_extensions_found_index_max_value_length_max_value_index_max_value_length_max_value_index_max_value\
    \ = ''\n    local valid_ext", "    local count = 0\n    local dot_count = 0\n\
    \    local dot_index = 0\n    local ext = ''\n    for i = 1, #file_name do\n \
    \       if file_name:sub(i, i) == '.' then\n            dot_count = dot_count\
    \ + 1\n            dot_index = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ 1):match('%a') and file_name:sub(1, dot_index - 1) ~= '' then\n        ext =\
    \ file_name:sub(dot_index + 1, #file_name)\n        if ext == 'txt' or ext ==\
    \ 'exe' or ext == 'dll' then\n            return 'Yes'\n        end\n    end\n\
    \    return 'No'\nend", "    local first_part, second_part = file_name:match('(%a+%.?%a*)%.(%a+)')\n\
    \    if first_part and second_part then\n        if first_part:match('%d') then\n\
    \            return 'No'\n        end\n        if first_part:match('%.%.') then\n\
    \            return 'No'\n        end\n        if first_part:match('%.$') then\n\
    \            return 'No'\n        end\n        if second_part ~= 'txt' and second_part\
    \ ~= 'exe' and second_part ~= 'dll' then\n            return 'No'\n        end\n\
    \        return 'Yes'\n    end\n    return 'No'\nend", "    local count = 0\n\
    \    local dot_count = 0\n    local dot_index = 0\n    local ext = ''\n    for\
    \ i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n         \
    \   dot_count = dot_count + 1\n            dot_index = i\n        end\n      \
    \  if file_name:sub(i, i):match('%d') then\n            count = count + 1\n  \
    \      end\n    end\n    if count > 3 or dot_count ~= 1 then\n        return 'No'\n\
    \    end\n    ext = file_name:sub(dot_index + 1)\n    if ext ~= 'txt' and ext\
    \ ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    if file_name:sub(1,\
    \ dot_index - 1):match('^%a+$') then\n        return 'Yes'\n    end\n    return\
    \ 'No'\nend", "    local count = 0\n    local dot_count = 0\n    local dot_index\
    \ = 0\n    local ext = ''\n    local ext_list = {'txt', 'exe', 'dll'}\n    local\
    \ valid_ext = false\n    for i = 1, #file_name do\n        if file_name:sub(i,\
    \ i) == '.' then\n            dot_count = dot_count + 1\n            dot_index\
    \ = i\n        end\n        if file_name:sub(i, i):match('%d') then\n        \
    \    count = count + 1\n        end\n    end\n    if count > 3 then\n        return\
    \ 'No'\n    end\n    if dot_count ~= 1 then\n        return 'No'\n    end\n  \
    \  if file_name:sub(1, 1):match('%a') == nil then\n        return 'No'\n    end\n\
    \    if file_name:sub(dot_index + 1, #file_name) == '' then\n        return 'No'\n\
    \    end\n    ext = file_name:sub(dot_index + 1, #file_name)\n    for i = 1, #ext_list\
    \ do\n        if ext == ext_list[i] then\n            valid_ext = true\n     \
    \   end\n    end\n    if valid_ext then\n        return 'Yes'\n    else\n    \
    \    return 'No'\n    end\nend", "    local count = 0\n    local dot_count = 0\n\
    \    local dot_index = 0\n    local extention = ''\n    local name = ''\n    local\
    \ extention_list = {'txt', 'exe', 'dll'}\n    for i = 1, #file_name do\n     \
    \   if file_name:sub(i, i) == '.' then\n            dot_count = dot_count + 1\n\
    \            dot_index = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ or dot_count ~= 1 then\n        return 'No'\n    end\n    name = file_name:sub(1,\
    \ dot_index - 1)\n    extention = file_name:sub(dot_index + 1, #file_name)\n \
    \   if not name:match('^[a-zA-Z]') then\n        return 'No'\n    end\n    for\
    \ i = 1, #extention_list do\n        if extention == extention_list[i] then\n\
    \            return 'Yes'\n        end\n    end\n    return 'No'\nend", "    local\
    \ digits_count = 0\n    local dot_count = 0\n    local dot_index = 0\n    local\
    \ extension = ''\n    local valid_extensions = {'txt', 'exe', 'dll'}\n    local\
    \ valid_extensions_count = 0\n    local valid_extensions_index = 0\n    local\
    \ valid_extensions_flag = false\n    local valid_extensions_flag_index = 0\n \
    \   local valid_extensions_flag_count = 0\n    local valid_extensions_flag_count_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag = false\n    local valid_extensions_flag_count_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count = 0\n    local\
    \ valid_extensions_flag_count_index_flag_index_count_index = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag\
    \ = false\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index_count\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index_count_index\
    \ = 0\n    local valid_extensions_flag_count_index_flag_index_count_index_flag_index_count_index_flag_index_count_index_flag\
    \ = false\n    local valid_extensions_flag_count_", "    -- TODO: implement this\
    \ function\nend", "    local count = 0\n    local dot_pos = 0\n    local ext =\
    \ ''\n    for i = 1, #file_name do\n        if file_name:sub(i, i) == '.' then\n\
    \            dot_pos = i\n        end\n        if file_name:sub(i, i):match('%d')\
    \ then\n            count = count + 1\n        end\n    end\n    if count > 3\
    \ then\n        return 'No'\n    end\n    if dot_pos == 0 then\n        return\
    \ 'No'\n    end\n    if dot_pos == 1 then\n        return 'No'\n    end\n    if\
    \ not file_name:sub(1, dot_pos - 1):match('%a') then\n        return 'No'\n  \
    \  end\n    ext = file_name:sub(dot_pos + 1, #file_name)\n    if ext ~= 'txt'\
    \ and ext ~= 'exe' and ext ~= 'dll' then\n        return 'No'\n    end\n    return\
    \ 'Yes'\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

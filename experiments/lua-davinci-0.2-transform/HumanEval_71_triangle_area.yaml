name: HumanEval_71_triangle_area
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return the area of\n\
  -- the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n-- Otherwise return -1\n-- Three sides make a valid triangle when the sum of\
  \ any two sides is greater \n-- than the third side.\n-- Example:\n-- >>> triangle_area(3,\
  \ 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\nlocal function triangle_area(a,\
  \ b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
  \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
  \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local p = (a + b + c) / 2\n    local area = math.sqrt(p * (p -\
    \ a) * (p - b) * (p - c))\n    if area == 0 then\n        return -1\n    else\n\
    \        return area\n    end\nend", "    if a + b > c and a + c > b and b + c\
    \ > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s * (s\
    \ - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend", "   \
    \ if a + b > c and a + c > b and b + c > a then\n        local p = (a + b + c)\
    \ / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       return -1\n    end\nend", "    if a + b > c and a + c > b and b + c >\
    \ a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p * (p -\
    \ a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend", "    if\
    \ a + b > c and a + c > b and b + c > a then\n        local p = (a + b + c) /\
    \ 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n   \
    \     return -1\n    end\nend", "    if a + b > c and a + c > b and b + c > a\
    \ then\n        return (a + b + c) / 2\n    else\n        return -1\n    end\n\
    end", "    if a + b > c and a + c > b and b + c > a then\n        local p = (a\
    \ + b + c) / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n  \
    \  else\n        return -1\n    end\nend", "    local s = (a + b + c) / 2\n  \
    \  local area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return area >\
    \ 0 and area or -1\nend", "    local s = (a + b + c) / 2\n    local area = math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    if area > 0 then\n        return area\n\
    \    else\n        return -1\n    end\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s\
    \ * (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend",
  "    if a + b > c and a + c > b and b + c > a then\n        local p = (a + b + c)\
    \ / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       return -1\n    end\nend", "    if a + b > c and a + c > b and b + c >\
    \ a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend", "    if\
    \ a + b > c and a + c > b and b + c > a then\n        local s = (a + b + c) /\
    \ 2\n        return math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n   \
    \     return -1\n    end\nend", "  if a + b > c and a + c > b and b + c > a then\n\
    \    local s = (a + b + c) / 2\n    return math.sqrt(s * (s - a) * (s - b) * (s\
    \ - c))\n  else\n    return -1\n  end\nend", "    if a + b > c and a + c > b and\
    \ b + c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p\
    \ * (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend",
  "    if a + b > c and a + c > b and b + c > a then\n        local p = (a + b + c)\
    \ / 2\n        return math.sqrt(p * (p - a) * (p - b) * (p - c))\n    else\n \
    \       return -1\n    end\nend", "  if a + b > c and a + c > b and b + c > a\
    \ then\n    local p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) * (p -\
    \ b) * (p - c))\n  else\n    return -1\n  end\nend", "    if a + b > c and a +\
    \ c > b and b + c > a then\n        local s = (a + b + c) / 2\n        return\
    \ math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return -1\n  \
    \  end\nend", "  local s = (a + b + c) / 2\n  local area = math.sqrt(s * (s -\
    \ a) * (s - b) * (s - c))\n  if area > 0 then\n    return math.floor(area * 100\
    \ + 0.5) / 100\n  else\n    return -1\n  end\nend", "    if a + b > c and a +\
    \ c > b and b + c > a then\n        local s = (a + b + c) / 2\n        return\
    \ math.sqrt(s * (s - a) * (s - b) * (s - c))\n    else\n        return -1\n  \
    \  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

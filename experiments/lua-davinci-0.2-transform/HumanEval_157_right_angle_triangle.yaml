name: HumanEval_157_right_angle_triangle
language: lua
prompt: "-- Given the lengths of the three sides of a triangle. Return True if the\
  \ three\n-- sides form a right-angled triangle, False otherwise.\n-- A right-angled\
  \ triangle is a triangle in which one angle is right angle or \n-- 90 degree.\n\
  -- Example:\n-- >>> right_angle_triangle(3, 4, 5)\n-- true\n-- >>> right_angle_triangle(1,\
  \ 2, 3)\n-- false\nlocal function right_angle_triangle(a, b, c)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = right_angle_triangle\n\
  \    lu.assertEquals(candidate(3, 4, 5), true)\n    lu.assertEquals(candidate(1,\
  \ 2, 3), false)\n    lu.assertEquals(candidate(10, 6, 8), true)\n    lu.assertEquals(candidate(2,\
  \ 2, 2), false)\n    lu.assertEquals(candidate(7, 24, 25), true)\n    lu.assertEquals(candidate(10,\
  \ 5, 7), false)\n    lu.assertEquals(candidate(5, 12, 13), true)\n    lu.assertEquals(candidate(15,\
  \ 8, 17), true)\n    lu.assertEquals(candidate(48, 55, 73), true)\n    lu.assertEquals(candidate(1,\
  \ 1, 1), false)\n    lu.assertEquals(candidate(2, 2, 10), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if a > b and a > c then\n        return a * a == b * b + c * c\n\
    \    elseif b > a and b > c then\n        return b * b == a * a + c * c\n    elseif\
    \ c > a and c > b then\n        return c * c == a * a + b * b\n    end\nend",
  "    if a^2 + b^2 == c^2 then\n        return true\n    else\n        return false\n\
    \    end\nend", "  local sides = {a, b, c}\n  table.sort(sides)\n  return sides[1]^2\
    \ + sides[2]^2 == sides[3]^2\nend", "    -- TODO: implement this function\n  \
    \  if a^2 + b^2 == c^2 then\n        return true\n    else\n        return false\n\
    \    end\nend", "    -- TODO: implement this function\n    if a^2 + b^2 == c^2\
    \ then\n        return true\n    else\n        return false\n    end\nend", " \
    \   -- TODO: implement the function\n    return false\nend", "  -- TODO: implement\
    \ this function\nend", "    if a^2 + b^2 == c^2 then\n        return true\n  \
    \  else\n        return false\n    end\nend", "    -- TODO: implement this function\n\
    \    if a^2 + b^2 == c^2 then\n        return true\n    else\n        return false\n\
    \    end\nend", "    -- TODO: implement this function\n    if a^2 + b^2 == c^2\
    \ then\n        return true\n    elseif a^2 + c^2 == b^2 then\n        return\
    \ true\n    elseif b^2 + c^2 == a^2 then\n        return true\n    else\n    \
    \    return false\n    end\nend", "    -- TODO: implement this function\n    if\
    \ a^2 + b^2 == c^2 then\n        return true\n    else\n        return false\n\
    \    end\nend", "  -- TODO: implement this function\nend", "    -- TODO: implement\
    \ the function\n    if (a^2 + b^2 == c^2) or (a^2 + c^2 == b^2) or (b^2 + c^2\
    \ == a^2) then\n        return true\n    else\n        return false\n    end\n\
    end", "    if a^2 + b^2 == c^2 then\n        return true\n    elseif a^2 + c^2\
    \ == b^2 then\n        return true\n    elseif b^2 + c^2 == a^2 then\n       \
    \ return true\n    else\n        return false\n    end\nend", "  -- TODO: implement\
    \ this function\nend", "    -- TODO: implement this function\n    if a^2 + b^2\
    \ == c^2 then\n        return true\n    else\n        return false\n    end\n\
    end", "    if a^2 + b^2 == c^2 then\n        return true\n    else\n        return\
    \ false\n    end\nend", "    if a^2 + b^2 == c^2 then\n        return true\n \
    \   else\n        return false\n    end\nend", "    -- TODO: implement this function\n\
    \    if a^2 + b^2 == c^2 then\n        return true\n    else\n        return false\n\
    \    end\nend", "    -- TODO: implement this function\n    if a^2 + b^2 == c^2\
    \ then\n        return true\n    else\n        return false\n    end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

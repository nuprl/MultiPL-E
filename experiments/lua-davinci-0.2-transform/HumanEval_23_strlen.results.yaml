language: lua
name: HumanEval_23_strlen
results:
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub('[^\\128-\\\
    193]', '')\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, length = string:gsub('[^\\128-\\\
    193]', '')\n    return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, length = string:gsub('[^\\128-\\\
    193]', '')\n    return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 1
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local i = 0\n    while string[i + 1]\
    \ do\n        i = i + 1\n    end\n    return i\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn00ioqx1.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpn00ioqx1.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local i = 0\n    for _ in string:gmatch('.')\
    \ do\n        i = i + 1\n    end\n    return i\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub('[^\\128-\\\
    193]', '')\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub('[^\\128-\\\
    193]', '')\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub('[^\\128-\\\
    193]', '')\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub('[^\\128-\\\
    193]', '')\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local len = 0\n    for i = 1, #string\
    \ do\n        len = len + 1\n    end\n    return len\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('[^\\128-\\\
    193]', '')\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return string.len(string)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, length = string:gsub(\"[^\\\
    128-\\193]\", \"\")\n    return length\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('.', '')\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub('[^\\128-\\\
    193]', '')\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub(\".\", \"\"\
    )\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, length = string:gsub('[^\\128-\\\
    193]', '')\n    return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('[^\\128-\\\
    193]', '')\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local length = 0\n  for i in string:gmatch('.')\
    \ do\n    length = length + 1\n  end\n  return length\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793102
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local length = 0\n    for i = 1, #string\
    \ do\n        length = length + 1\n    end\n    return length\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793102
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub(\".\", \"\"\
    )\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('[^\\128-\\\
    193]', '')\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local length = 0\n    for i = 1, #string\
    \ do\n        length = length + 1\n    end\n    return length\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793102
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return string.len(string)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('[^\\128-\\\
    193]', '')\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n    return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('.', '')\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, length = string:gsub('[^\\128-\\\
    193]', '')\n  return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, len = string:gsub('[^\\128-\\\
    193]', '')\n    return len\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793102
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local _, length = string:gsub('[^\\128-\\\
    193]', '')\n    return length\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local len = 0\n  for i = 1, #string do\n\
    \    len = len + 1\n  end\n  return len\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793102
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub(\".\", \"\"\
    )\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub(\"[^\\128-\\\
    193]\", \"\")\n  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793102
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('.', '')\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  local _, count = string:gsub('.', '')\n\
    \  return count\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = strlen\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('x'),\
    \ 1)\n    lu.assertEquals(candidate('asdasnakj'), 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659793101
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 1
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n    local i = 0\n    while string[i + 1]\
    \ do\n        i = i + 1\n    end\n    return i\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn00ioqx1.lua:18:\
    \ expected: 1, actual: 0\nstack traceback:\n\t/tmp/tmpn00ioqx1.lua:18: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217
- exit_code: 0
  program: "-- Return length of given string\n-- >>> strlen('')\n-- 0\n-- >>> strlen('abc')\n\
    -- 3\nlocal function strlen(string)\n  return #string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = strlen\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('x'), 1)\n    lu.assertEquals(candidate('asdasnakj'),\
    \ 9)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750217

name: HumanEval_40_triples_sum_to_zero
language: lua
prompt: "-- triples_sum_to_zero takes a list of integers as an input.\n-- it returns\
  \ True if there are three distinct elements in the list that\n-- sum to zero, and\
  \ False otherwise.\n-- >>> triples_sum_to_zero({1, 3, 5, 0})\n-- false\n-- >>> triples_sum_to_zero({1,\
  \ 3, -2, 1})\n-- true\n-- >>> triples_sum_to_zero({1, 2, 3, 7})\n-- false\n-- >>>\
  \ triples_sum_to_zero({2, 4, -5, 3, 9, 7})\n-- true\n-- >>> triples_sum_to_zero({1})\n\
  -- false\nlocal function triples_sum_to_zero(l)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triples_sum_to_zero\n\
  \    lu.assertEquals(candidate({1, 3, 5, 0}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -1}), false)\n    lu.assertEquals(candidate({1, 3, -2, 1}), true)\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 7}), false)\n    lu.assertEquals(candidate({1, 2, 5, 7}), false)\n    lu.assertEquals(candidate({2,\
  \ 4, -5, 3, 9, 7}), true)\n    lu.assertEquals(candidate({1}), false)\n    lu.assertEquals(candidate({1,\
  \ 3, 5, -100}), false)\n    lu.assertEquals(candidate({100, 3, 5, -100}), false)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["  -- TODO: implement this function\nend", "    -- TODO: implement this\
    \ function\n    return false\nend", "    local n = #l\n    if n < 3 then\n   \
    \     return false\n    end\n    for i = 1, n do\n        for j = i + 1, n do\n\
    \            for k = j + 1, n do\n                if l[i] + l[j] + l[k] == 0 then\n\
    \                    return true\n                end\n            end\n     \
    \   end\n    end\n    return false\nend", "    local s = {}\n    local t = {}\n\
    \    for _, v in ipairs(l) do\n        if s[v] then\n            t[v] = true\n\
    \        else\n            s[v] = true\n        end\n    end\n    for _, v in\
    \ ipairs(l) do\n        if t[-v] then\n            return true\n        end\n\
    \    end\n    return false\nend", "    -- your code here\n    return false\nend",
  "  local n = #l\n  if n < 3 then\n    return false\n  end\n  for i = 1, n - 2 do\n\
    \    for j = i + 1, n - 1 do\n      for k = j + 1, n do\n        if l[i] + l[j]\
    \ + l[k] == 0 then\n          return true\n        end\n      end\n    end\n \
    \ end\n  return false\nend", "    local n = #l\n    if n < 3 then\n        return\
    \ false\n    end\n    for i = 1, n - 2 do\n        for j = i + 1, n - 1 do\n \
    \           for k = j + 1, n do\n                if l[i] + l[j] + l[k] == 0 then\n\
    \                    return true\n                end\n            end\n     \
    \   end\n    end\n    return false\nend", "    local n = #l\n    if n < 3 then\n\
    \        return false\n    end\n    for i = 1, n - 2 do\n        for j = i + 1,\
    \ n - 1 do\n            for k = j + 1, n do\n                if l[i] + l[j] +\
    \ l[k] == 0 then\n                    return true\n                end\n     \
    \       end\n        end\n    end\n    return false\nend", "  -- TODO: implement\
    \ this function\n  return false\nend", "    for i = 1, #l do\n        for j =\
    \ i + 1, #l do\n            for k = j + 1, #l do\n                if l[i] + l[j]\
    \ + l[k] == 0 then\n                    return true\n                end\n   \
    \         end\n        end\n    end\n    return false\nend", "    -- TODO: implement\
    \ this function\nend", "  for i = 1, #l do\n    for j = i + 1, #l do\n      for\
    \ k = j + 1, #l do\n        if l[i] + l[j] + l[k] == 0 then\n          return\
    \ true\n        end\n      end\n    end\n  end\n  return false\nend", "    --\
    \ YOUR CODE HERE\n    return false\nend", "  local n = #l\n  if n < 3 then\n \
    \   return false\n  end\n  for i = 1, n - 2 do\n    for j = i + 1, n - 1 do\n\
    \      for k = j + 1, n do\n        if l[i] + l[j] + l[k] == 0 then\n        \
    \  return true\n        end\n      end\n    end\n  end\n  return false\nend",
  "    local s = {}\n    for _, v in ipairs(l) do\n        if s[-v] then\n       \
    \     return true\n        end\n        s[v] = true\n    end\n    return false\n\
    end", "    -- TODO: implement this function\nend", "  -- YOUR CODE HERE\n  local\
    \ n = #l\n  if n < 3 then\n    return false\n  end\n  for i = 1, n - 2 do\n  \
    \  for j = i + 1, n - 1 do\n      for k = j + 1, n do\n        if l[i] + l[j]\
    \ + l[k] == 0 then\n          return true\n        end\n      end\n    end\n \
    \ end\n  return false\nend", "  -- TODO: implement this function\n  return false\n\
    end", "    -- your code here\nend", "    -- TODO: implement this function\n  \
    \  -- Hint: use the function `triples_sum_to_k`\n    return triples_sum_to_k(l,\
    \ 0)\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

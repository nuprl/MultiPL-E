language: lua
name: HumanEval_39_prime_fib
results:
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   local t = i + j\n        i = j\n        j = t\n        if is_prime(t) then\n\
    \            k = k + 1\n        end\n    end\n    return j\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvt7u0pas.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpvt7u0pas.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local fib = 1\n    local fib_prev = 1\n    while i < n do\n\
    \        local fib_temp = fib\n        fib = fib + fib_prev\n        fib_prev\
    \ = fib_temp\n        if is_prime(fib) then\n            i = i + 1\n        end\n\
    \    end\n    return fib\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqgv4f586.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpqgv4f586.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   local t = i + j\n        i = j\n        j = t\n        if is_prime(t) then\n\
    \            k = k + 1\n        end\n    end\n    return j\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvt7u0pas.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpvt7u0pas.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 0\n    local count = 0\n    while\
    \ count < n do\n        k = i + j\n        i = j\n        j = k\n        if is_prime(k)\
    \ then\n            count = count + 1\n        end\n    end\n    return k\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn1kb4157.lua:21:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpn1kb4157.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpn1kb4157.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 0\n    local p = 0\n    while\
    \ p < n do\n        k = i + j\n        if is_prime(k) then\n            p = p\
    \ + 1\n        end\n        i = j\n        j = k\n    end\n    return k\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnkah0y2u.lua:19:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpnkah0y2u.lua:19:\
    \ in function 'candidate'\n\t/tmp/tmpnkah0y2u.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 0\n    local count = 0\n    while\
    \ count < n do\n        k = i + j\n        i = j\n        j = k\n        if is_prime(k)\
    \ then\n            count = count + 1\n        end\n    end\n    return k\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
    \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n\
    \    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n\
    \    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n\
    \    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
    \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpn1kb4157.lua:21:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmpn1kb4157.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmpn1kb4157.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local f = fib(n)\n    while not is_prime(f) do\n        n = n + 1\n     \
    \   f = fib(n)\n    end\n    return f\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkq5_wz0i.lua:13:\
    \ attempt to call global 'fib' (a nil value)\nstack traceback:\n\t/tmp/tmpkq5_wz0i.lua:13:\
    \ in function 'candidate'\n\t/tmp/tmpkq5_wz0i.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 0\n    local f = 0\n    local f1 = 1\n    local f2 = 1\n    while\
    \ i < n do\n        f = f1 + f2\n        f1 = f2\n        f2 = f\n        if is_prime(f)\
    \ then\n            i = i + 1\n        end\n    end\n    return f\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7b30c71j.lua:21:\
    \ attempt to call global 'is_prime' (a nil value)\nstack traceback:\n\t/tmp/tmp7b30c71j.lua:21:\
    \ in function 'candidate'\n\t/tmp/tmp7b30c71j.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local fib = 1\n  local fib_prev = 1\n  local fib_next = 1\n\
    \  while i < n do\n    fib_next = fib + fib_prev\n    fib_prev = fib\n    fib\
    \ = fib_next\n    if is_prime(fib) then\n      i = i + 1\n    end\n  end\n  return\
    \ fib\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpm8u7uumc.lua:31:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpm8u7uumc.lua:31: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \  local i = 1\n  local j = 1\n  local k = 1\n  while k < n do\n    local t =\
    \ i + j\n    i = j\n    j = t\n    if is_prime(t) then\n      k = k + 1\n    end\n\
    \  end\n  return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkjyz62z7.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpkjyz62z7.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n    \
    \    end\n    end\n    return j\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = prime_fib\n    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2),\
    \ 3)\n    lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4),\
    \ 13)\n    lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6),\
    \ 233)\n    lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8),\
    \ 28657)\n    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10),\
    \ 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpddaj590y.lua:28:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpddaj590y.lua:28: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404
- exit_code: 1
  program: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
    \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
    -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n\
    \    local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n     \
    \   local t = i + j\n        i = j\n        j = t\n        if is_prime(t) then\n\
    \            k = k + 1\n        end\n    end\n    return j\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = prime_fib\n    lu.assertEquals(candidate(1),\
    \ 2)\n    lu.assertEquals(candidate(2), 3)\n    lu.assertEquals(candidate(3),\
    \ 5)\n    lu.assertEquals(candidate(4), 13)\n    lu.assertEquals(candidate(5),\
    \ 89)\n    lu.assertEquals(candidate(6), 233)\n    lu.assertEquals(candidate(7),\
    \ 1597)\n    lu.assertEquals(candidate(8), 28657)\n    lu.assertEquals(candidate(9),\
    \ 514229)\n    lu.assertEquals(candidate(10), 433494437)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvt7u0pas.lua:30:\
    \ expected: 2, actual: 1\nstack traceback:\n\t/tmp/tmpvt7u0pas.lua:30: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750404

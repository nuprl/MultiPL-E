language: lua
name: HumanEval_27_flip_case
results:
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  return string:gsub(\"%a\", function(c)\n    return c == c:lower() and c:upper()\
    \ or c:lower()\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  return string:gsub('%a', function(char)\n    if char:lower() == char then\n\
    \      return char:upper()\n    else\n      return char:lower()\n    end\n  end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:lower() == char then\n            flipped[i] = char:upper()\n\
    \        else\n            flipped[i] = char:lower()\n        end\n    end\n \
    \   return table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%l') then\n            flipped[i] = char:upper()\n\
    \        elseif char:match('%u') then\n            flipped[i] = char:lower()\n\
    \        else\n            flipped[i] = char\n        end\n    end\n    return\
    \ table.concat(flipped)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%a') then\n            if char:match('%l') then\n\
    \                flipped[i] = char:upper()\n            else\n               \
    \ flipped[i] = char:lower()\n            end\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  return string:gsub(\"%a\", function(char)\n    if char:match(\"%u\") then\n\
    \      return char:lower()\n    else\n      return char:upper()\n    end\n  end)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%l') then\n            char = char:upper()\n    \
    \    elseif char:match('%u') then\n            char = char:lower()\n        end\n\
    \        flipped[i] = char\n    end\n    return table.concat(flipped)\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = flip_case\n\
    \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    return string:gsub(\"%a\", function(c)\n        return c == c:lower() and\
    \ c:upper() or c:lower()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local new_string = ''\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%l') then\n            new_string = new_string ..\
    \ char:upper()\n        elseif char:match('%u') then\n            new_string =\
    \ new_string .. char:lower()\n        else\n            new_string = new_string\
    \ .. char\n        end\n    end\n    return new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    return string:gsub('%a', function(c)\n        return c == c:upper() and c:lower()\
    \ or c:upper()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 1
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local flipped = ''\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%a') then\n            flipped = flipped .. char:lower()\
    \ == char and char:upper() or char:lower()\n        else\n            flipped\
    \ = flipped .. char\n        end\n    end\n    return flipped\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7t6r28r7.lua:21:\
    \ expected: \"hELLO!\"\nactual: \"o!\"\nstack traceback:\n\t/tmp/tmp7t6r28r7.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  return string:gsub(\"%a\", function(c)\n    return c == c:lower() and c:upper()\
    \ or c:lower()\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  return string:gsub('%a', function(c)\n    return c == c:upper() and c:lower()\
    \ or c:upper()\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local flipped = {}\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%a') then\n            flipped[i] = char:lower()\
    \ == char and char:upper() or char:lower()\n        else\n            flipped[i]\
    \ = char\n        end\n    end\n    return table.concat(flipped)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    return string:gsub(\"%a\", function(c)\n        return c == c:lower() and\
    \ c:upper() or c:lower()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    return string:gsub(\"%a\", function(char)\n        if char:match(\"%u\")\
    \ then\n            return char:lower()\n        else\n            return char:upper()\n\
    \        end\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    return string:gsub(\"%a\", function(c)\n        return c == c:lower() and\
    \ c:upper() or c:lower()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    local new_string = ''\n    for i = 1, #string do\n        local char = string:sub(i,\
    \ i)\n        if char:match('%l') then\n            new_string = new_string ..\
    \ char:upper()\n        elseif char:match('%u') then\n            new_string =\
    \ new_string .. char:lower()\n        else\n            new_string = new_string\
    \ .. char\n        end\n    end\n    return new_string\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = flip_case\n    lu.assertEquals(candidate(''),\
    \ '')\n    lu.assertEquals(candidate('Hello!'), 'hELLO!')\n    lu.assertEquals(candidate('These\
    \ violent delights have violent ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \  local flipped = ''\n  for i = 1, #string do\n    local char = string:sub(i,\
    \ i)\n    if char:match('%a') then\n      if char:match('%l') then\n        flipped\
    \ = flipped .. char:upper()\n      else\n        flipped = flipped .. char:lower()\n\
    \      end\n    else\n      flipped = flipped .. char\n    end\n  end\n  return\
    \ flipped\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218
- exit_code: 0
  program: "-- For a given string, flip lowercase characters to uppercase and uppercase\
    \ to lowercase.\n-- >>> flip_case('Hello')\n-- 'hELLO'\nlocal function flip_case(string)\n\
    \    return string:gsub('%a', function(c)\n        return c == c:upper() and c:lower()\
    \ or c:upper()\n    end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = flip_case\n    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('Hello!'),\
    \ 'hELLO!')\n    lu.assertEquals(candidate('These violent delights have violent\
    \ ends'), 'tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750218

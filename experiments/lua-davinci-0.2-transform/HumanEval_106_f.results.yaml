language: lua
name: HumanEval_106_f
results:
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum_to(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7fd8m50p.lua:15:\
    \ attempt to call global 'sum_to' (a nil value)\nstack traceback:\n\t/tmp/tmp7fd8m50p.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp7fd8m50p.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum_from_1_to(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphmkkl2u4.lua:15:\
    \ attempt to call global 'sum_from_1_to' (a nil value)\nstack traceback:\n\t/tmp/tmphmkkl2u4.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmphmkkl2u4.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local res = {}\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            local fact = 1\n            for j = 1, i do\n          \
    \      fact = fact * j\n            end\n            res[i] = fact\n        else\n\
    \            local sum = 0\n            for j = 1, i do\n                sum =\
    \ sum + j\n            end\n            res[i] = sum\n        end\n    end\n \
    \   return res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local res = {}\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            res[i] = factorial(i)\n        else\n            res[i]\
    \ = sum(i)\n        end\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1i4hwggu.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp1i4hwggu.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp1i4hwggu.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local l = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            l[i] = factorial(i)\n        else\n            l[i] = sum(i)\n\
    \        end\n    end\n    return l\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxe7rwna4.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmpxe7rwna4.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpxe7rwna4.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 0
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            local factorial = 1\n            for j = 1, i do\n  \
    \              factorial = factorial * j\n            end\n            result[i]\
    \ = factorial\n        else\n            local sum = 0\n            for j = 1,\
    \ i do\n                sum = sum + j\n            end\n            result[i]\
    \ = sum\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local list = {}\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            list[i] = factorial(i)\n        else\n            list[i]\
    \ = sum(i)\n        end\n    end\n    return list\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4rqhgw2t.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmp4rqhgw2t.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp4rqhgw2t.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum_to(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7fd8m50p.lua:15:\
    \ attempt to call global 'sum_to' (a nil value)\nstack traceback:\n\t/tmp/tmp7fd8m50p.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp7fd8m50p.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum_from_1_to(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphmkkl2u4.lua:15:\
    \ attempt to call global 'sum_from_1_to' (a nil value)\nstack traceback:\n\t/tmp/tmphmkkl2u4.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmphmkkl2u4.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum_from_1_to(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphmkkl2u4.lua:15:\
    \ attempt to call global 'sum_from_1_to' (a nil value)\nstack traceback:\n\t/tmp/tmphmkkl2u4.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmphmkkl2u4.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local l = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            l[i] = factorial(i)\n        else\n            l[i] = sum(i)\n\
    \        end\n    end\n    return l\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpxe7rwna4.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmpxe7rwna4.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpxe7rwna4.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 0
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            local factorial = 1\n            for j = 1, i do\n  \
    \              factorial = factorial * j\n            end\n            result[i]\
    \ = factorial\n        else\n            local sum = 0\n            for j = 1,\
    \ i do\n                sum = sum + j\n            end\n            result[i]\
    \ = sum\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum_numbers(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpy4rwey4z.lua:15:\
    \ attempt to call a nil value (global 'sum_numbers')\nstack traceback:\n\t/tmp/tmpy4rwey4z.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpy4rwey4z.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum_of_numbers(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwzu9zr88.lua:15:\
    \ attempt to call a nil value (global 'sum_of_numbers')\nstack traceback:\n\t\
    /tmp/tmpwzu9zr88.lua:15: in local 'candidate'\n\t/tmp/tmpwzu9zr88.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum_to(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwa6khnyz.lua:15:\
    \ attempt to call a nil value (global 'sum_to')\nstack traceback:\n\t/tmp/tmpwa6khnyz.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpwa6khnyz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum_of_numbers(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5avtz0_q.lua:15:\
    \ attempt to call a nil value (global 'sum_of_numbers')\nstack traceback:\n\t\
    /tmp/tmp5avtz0_q.lua:15: in local 'candidate'\n\t/tmp/tmp5avtz0_q.lua:24: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local list = {}\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            list[i] = factorial(i)\n        else\n            list[i]\
    \ = sum(i)\n        end\n    end\n    return list\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4rqhgw2t.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmp4rqhgw2t.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp4rqhgw2t.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local res = {}\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            res[i] = factorial(i)\n        else\n            res[i]\
    \ = sum(i)\n        end\n    end\n    return res\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1i4hwggu.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp1i4hwggu.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp1i4hwggu.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum_to(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwa6khnyz.lua:15:\
    \ attempt to call a nil value (global 'sum_to')\nstack traceback:\n\t/tmp/tmpwa6khnyz.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpwa6khnyz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local list = {}\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            list[i] = factorial(i)\n        else\n            list[i]\
    \ = sum(i)\n        end\n    end\n    return list\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4rqhgw2t.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmp4rqhgw2t.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp4rqhgw2t.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local list = {}\n    for i = 1, n do\n        if i % 2 ==\
    \ 0 then\n            list[i] = factorial(i)\n        else\n            list[i]\
    \ = sum(i)\n        end\n    end\n    return list\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp4rqhgw2t.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmp4rqhgw2t.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp4rqhgw2t.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n\tlocal t = {}\n\tfor i = 1, n do\n\t\tif i % 2 == 0 then\n\t\
    \t\tt[i] = factorial(i)\n\t\telse\n\t\t\tt[i] = sum(i)\n\t\tend\n\tend\n\treturn\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpoar3u5su.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmpoar3u5su.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpoar3u5su.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local list = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      list[i] = factorial(i)\n    else\n      list[i] = sum(i)\n    end\n  end\n\
    \  return list\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv5rummrt.lua:15:\
    \ attempt to call a nil value (global 'sum')\nstack traceback:\n\t/tmp/tmpv5rummrt.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpv5rummrt.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum_numbers(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpr0ye5aza.lua:15:\
    \ attempt to call a nil value (global 'sum_numbers')\nstack traceback:\n\t/tmp/tmpr0ye5aza.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpr0ye5aza.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659803647
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local t = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n \
    \     t[i] = factorial(i)\n    else\n      t[i] = sum(i)\n    end\n  end\n  return\
    \ t\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7),\
    \ {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgh901grz.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpgh901grz.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpgh901grz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local t = {}\n    for i = 1, n do\n        if i % 2 == 0\
    \ then\n            t[i] = factorial(i)\n        else\n            t[i] = sum(i)\n\
    \        end\n    end\n    return t\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5), {1,\
    \ 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n\
    \    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3), {1,\
    \ 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsgunhoz8.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpsgunhoz8.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpsgunhoz8.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n    local result = {}\n    for i = 1, n do\n        if i % 2\
    \ == 0 then\n            result[i] = factorial(i)\n        else\n            result[i]\
    \ = sum(i)\n        end\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = f\n    lu.assertEquals(candidate(5),\
    \ {1, 2, 6, 24, 15})\n    lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720,\
    \ 28})\n    lu.assertEquals(candidate(1), {1})\n    lu.assertEquals(candidate(3),\
    \ {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpavvqwehg.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmpavvqwehg.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmpavvqwehg.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527
- exit_code: 1
  program: "-- Implement the function f that takes n as a parameter,\n-- and returns\
    \ a list of size n, such that the value of the element at index i is the factorial\
    \ of i if i is even\n-- or the sum of numbers from 1 to i otherwise.\n-- i starts\
    \ from 1.\n-- the factorial of i is the multiplication of the numbers from 1 to\
    \ i (1 * 2 * ... * i).\n-- Example:\n-- >>> f(5)\n-- {1, 2, 6, 24, 15}\nlocal\
    \ function f(n)\n  local result = {}\n  for i = 1, n do\n    if i % 2 == 0 then\n\
    \      result[i] = factorial(i)\n    else\n      result[i] = sum(i)\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = f\n    lu.assertEquals(candidate(5), {1, 2, 6, 24, 15})\n  \
    \  lu.assertEquals(candidate(7), {1, 2, 6, 24, 15, 720, 28})\n    lu.assertEquals(candidate(1),\
    \ {1})\n    lu.assertEquals(candidate(3), {1, 2, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9321c549.lua:15:\
    \ attempt to call global 'sum' (a nil value)\nstack traceback:\n\t/tmp/tmp9321c549.lua:15:\
    \ in function 'candidate'\n\t/tmp/tmp9321c549.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750527

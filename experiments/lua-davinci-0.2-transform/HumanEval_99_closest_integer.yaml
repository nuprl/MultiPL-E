name: HumanEval_99_closest_integer
language: lua
prompt: "-- Create a function that takes a value (string) representing a number\n\
  -- and returns the closest integer to it. If the number is equidistant\n-- from\
  \ two integers, round it away from zero.\n-- Examples\n-- >>> closest_integer('10')\n\
  -- 10\n-- >>> closest_integer('15.3')\n-- 15\n-- Note:\n-- Rounding away from zero\
  \ means that if the given number is equidistant\n-- from two integers, the one you\
  \ should return is the one that is the\n-- farthest from zero. For example closest_integer(\"\
  14.5\") should\n-- return 15 and closest_integer(\"-14.5\") should return -15.\n\
  local function closest_integer(value)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = closest_integer\n\
  \    lu.assertEquals(candidate('10'), 10)\n    lu.assertEquals(candidate('14.5'),\
  \ 15)\n    lu.assertEquals(candidate('-15.5'), -16)\n    lu.assertEquals(candidate('15.3'),\
  \ 15)\n    lu.assertEquals(candidate('0'), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local num = tonumber(value)\n    if num == nil then\n        return\
    \ nil\n    end\n    local int = math.floor(num)\n    if num - int >= 0.5 then\n\
    \        return int + 1\n    else\n        return int\n    end\nend", "    local\
    \ num = tonumber(value)\n    if num == nil then\n        return nil\n    end\n\
    \    local int = math.floor(num)\n    if num - int >= 0.5 then\n        return\
    \ int + 1\n    else\n        return int\n    end\nend", "  local number = tonumber(value)\n\
    \  if number == nil then\n    return nil\n  end\n  local integer = math.floor(number)\n\
    \  if number - integer >= 0.5 then\n    return integer + 1\n  else\n    return\
    \ integer\n  end\nend", "    local num = tonumber(value)\n    if num == nil then\n\
    \        return nil\n    end\n    local int = math.floor(num)\n    if num - int\
    \ >= 0.5 then\n        return int + 1\n    else\n        return int\n    end\n\
    end", "  local num = tonumber(value)\n  if num == nil then\n    return nil\n \
    \ end\n  local int = math.floor(num)\n  if num - int >= 0.5 then\n    return int\
    \ + 1\n  else\n    return int\n  end\nend", "    -- TODO: implement\nend", " \
    \ local num = tonumber(value)\n  if num == nil then\n    return nil\n  end\n \
    \ local int = math.floor(num)\n  if num - int >= 0.5 then\n    return int + 1\n\
    \  else\n    return int\n  end\nend", "  local num = tonumber(value)\n  if num\
    \ == nil then\n    return nil\n  end\n  local int = math.floor(num)\n  if num\
    \ - int >= 0.5 then\n    return int + 1\n  else\n    return int\n  end\nend",
  "  return math.floor(value + 0.5)\nend", "    return math.floor(value + 0.5)\nend",
  "    return math.floor(tonumber(value) + 0.5)\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  local num = tonumber(value)\n  if num == nil then\n    return\
    \ nil\n  end\n  local int = math.floor(num)\n  if num - int < 0.5 then\n    return\
    \ int\n  else\n    return int + 1\n  end\nend", "  local num = tonumber(value)\n\
    \  if num == nil then\n    return nil\n  end\n  local int = math.floor(num)\n\
    \  local frac = num - int\n  if frac < 0.5 then\n    return int\n  else\n    return\
    \ int + 1\n  end\nend", "  return math.floor(tonumber(value) + 0.5)\nend", " \
    \   local number = tonumber(value)\n    if number == nil then\n        return\
    \ nil\n    end\n    local integer = math.floor(number)\n    if number - integer\
    \ < 0.5 then\n        return integer\n    else\n        return integer + 1\n \
    \   end\nend", "    local number = tonumber(value)\n    if number == nil then\n\
    \        return nil\n    end\n    local integer = math.floor(number)\n    if number\
    \ - integer >= 0.5 then\n        integer = integer + 1\n    end\n    return integer\n\
    end", "  local n = tonumber(value)\n  if n == nil then\n    return nil\n  end\n\
    \  local int, frac = math.modf(n)\n  if frac >= 0.5 then\n    return int + 1\n\
    \  else\n    return int\n  end\nend", "    return math.floor(value + 0.5)\nend",
  "  local number = tonumber(value)\n  if number == nil then\n    return nil\n  end\n\
    \  local integer = math.floor(number)\n  local decimal = number - integer\n  if\
    \ decimal >= 0.5 then\n    return integer + 1\n  else\n    return integer\n  end\n\
    end", "    local number = tonumber(value)\n    if number == nil then\n       \
    \ return nil\n    end\n    local integer = math.floor(number)\n    if number -\
    \ integer >= 0.5 then\n        integer = integer + 1\n    end\n    return integer\n\
    end", "    local num = tonumber(value)\n    if num == nil then\n        return\
    \ nil\n    end\n    return math.floor(num + 0.5)\nend", "  return math.floor(value\
    \ + 0.5)\nend", "    local number = tonumber(value)\n    if number == nil then\n\
    \        return nil\n    end\n    if number > 0 then\n        return math.floor(number\
    \ + 0.5)\n    else\n        return math.ceil(number - 0.5)\n    end\nend", " \
    \ local num = tonumber(value)\n  if num < 0 then\n    return math.ceil(num)\n\
    \  else\n    return math.floor(num)\n  end\nend", "    local num = tonumber(value)\n\
    \    if num == nil then\n        return nil\n    end\n    local int = math.floor(num)\n\
    \    local frac = num - int\n    if frac >= 0.5 then\n        return int + 1\n\
    \    else\n        return int\n    end\nend", "  local num = tonumber(value)\n\
    \  local int = math.floor(num)\n  if num - int >= 0.5 then\n    return int + 1\n\
    \  else\n    return int\n  end\nend", "    local num = tonumber(value)\n    if\
    \ num == nil then\n        return nil\n    end\n    local int = math.floor(num)\n\
    \    if num - int >= 0.5 then\n        return int + 1\n    else\n        return\
    \ int\n    end\nend", "    return math.floor(value + 0.5)\nend", "  local num\
    \ = tonumber(value)\n  if num == nil then\n    return nil\n  end\n  local int,\
    \ frac = math.modf(num)\n  if frac >= 0.5 then\n    return int + 1\n  else\n \
    \   return int\n  end\nend", "  local number = tonumber(value)\n  local integer\
    \ = math.floor(number)\n  local fraction = number - integer\n  if fraction >=\
    \ 0.5 then\n    return integer + 1\n  else\n    return integer\n  end\nend", " \
    \ local num = tonumber(value)\n  if num == nil then\n    return nil\n  end\n \
    \ local int = math.floor(num)\n  local frac = num - int\n  if frac >= 0.5 then\n\
    \    return int + 1\n  else\n    return int\n  end\nend", "    local number =\
    \ tonumber(value)\n    local integer = math.floor(number)\n    local decimal =\
    \ number - integer\n    if decimal >= 0.5 then\n        return integer + 1\n \
    \   else\n        return integer\n    end\nend", "  return math.floor(value +\
    \ 0.5)\nend", "  return math.floor(tonumber(value) + 0.5)\nend", "    local number\
    \ = tonumber(value)\n    if number == nil then\n        return nil\n    end\n\
    \    local integer = math.floor(number)\n    if number - integer >= 0.5 then\n\
    \        integer = integer + 1\n    end\n    return integer\nend", "    local\
    \ number = tonumber(value)\n    if number > 0 then\n        return math.floor(number\
    \ + 0.5)\n    else\n        return math.ceil(number - 0.5)\n    end\nend", " \
    \ local number = tonumber(value)\n  local integer = math.floor(number)\n  local\
    \ decimal = number - integer\n  if decimal < 0.5 then\n    return integer\n  else\n\
    \    return integer + 1\n  end\nend", "  -- TODO: implement this function\nend",
  "    return math.floor(tonumber(value) + 0.5)\nend", "    -- TODO: Implement this\
    \ function\nend", "  local number = tonumber(value)\n  if number == nil then\n\
    \    return nil\n  end\n  local integer = math.floor(number)\n  if number - integer\
    \ >= 0.5 then\n    return integer + 1\n  else\n    return integer\n  end\nend",
  "  return math.floor(value + 0.5)\nend", "    local n = tonumber(value)\n    if\
    \ n == nil then\n        return nil\n    end\n    local int = math.floor(n)\n\
    \    if n - int >= 0.5 then\n        return int + 1\n    else\n        return\
    \ int\n    end\nend", "    return math.floor(value + 0.5)\nend", "  local number\
    \ = tonumber(value)\n  if number > 0 then\n    return math.floor(number + 0.5)\n\
    \  else\n    return math.ceil(number - 0.5)\n  end\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  return math.floor(value + 0.5)\nend", "  -- TODO: Implement\
    \ this function\nend", "  return math.floor(tonumber(value) + 0.5)\nend", "  \
    \  local number = tonumber(value)\n    if number == nil then\n        return nil\n\
    \    end\n    local integer = math.floor(number)\n    local fraction = number\
    \ - integer\n    if fraction >= 0.5 then\n        return integer + 1\n    else\n\
    \        return integer\n    end\nend", "  return math.floor(value + 0.5)\nend",
  "    return math.floor(tonumber(value) + 0.5)\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  return math.floor(tonumber(value) + 0.5)\nend", "  local num\
    \ = tonumber(value)\n  if num == nil then\n    return nil\n  end\n  local int\
    \ = math.floor(num)\n  local frac = num - int\n  if frac >= 0.5 then\n    return\
    \ int + 1\n  else\n    return int\n  end\nend", "    local number = tonumber(value)\n\
    \    if number == nil then\n        return nil\n    end\n    local integer = math.floor(number)\n\
    \    local fraction = number - integer\n    if fraction >= 0.5 then\n        return\
    \ integer + 1\n    else\n        return integer\n    end\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(value + 0.5)\nend", "  local n = tonumber(value)\n\
    \  local i = math.floor(n)\n  local f = n - i\n  if f >= 0.5 then\n    return\
    \ i + 1\n  else\n    return i\n  end\nend", "  local num = tonumber(value)\n \
    \ if num == nil then\n    return nil\n  end\n  local int = math.floor(num)\n \
    \ if num - int >= 0.5 then\n    return int + 1\n  else\n    return int\n  end\n\
    end", "    return math.floor(value + 0.5)\nend", "    local num = tonumber(value)\n\
    \    if num % 1 >= 0.5 then\n        return math.ceil(num)\n    else\n       \
    \ return math.floor(num)\n    end\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(value + 0.5)\nend", "  return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  local value = tonumber(value)\n  if value % 1 >= 0.5 then\n\
    \    return math.ceil(value)\n  else\n    return math.floor(value)\n  end\nend",
  "    return math.floor(tonumber(value) + 0.5)\nend", "  local number = tonumber(value)\n\
    \  if number == nil then\n    return nil\n  end\n  local int, frac = math.modf(number)\n\
    \  if frac >= 0.5 then\n    return int + 1\n  else\n    return int\n  end\nend",
  "    local num = tonumber(value)\n    if num then\n        return math.floor(num\
    \ + 0.5)\n    end\nend", "  -- TODO: implement the function\nend", "    local\
    \ number = tonumber(value)\n    if number == nil then\n        return nil\n  \
    \  end\n    local integer = math.floor(number)\n    local decimal = number - integer\n\
    \    if decimal < 0.5 then\n        return integer\n    else\n        return integer\
    \ + 1\n    end\nend", "    return math.floor(value + 0.5)\nend", "  local number\
    \ = tonumber(value)\n  if number == nil then\n    return nil\n  end\n  local integer\
    \ = math.floor(number)\n  if number - integer >= 0.5 then\n    return integer\
    \ + 1\n  else\n    return integer\n  end\nend", "    local num = tonumber(value)\n\
    \    if num > 0 then\n        return math.floor(num + 0.5)\n    else\n       \
    \ return math.ceil(num - 0.5)\n    end\nend", "    local number = tonumber(value)\n\
    \    if number == nil then\n        return nil\n    end\n    local integer = math.floor(number)\n\
    \    if number - integer < 0.5 then\n        return integer\n    else\n      \
    \  return integer + 1\n    end\nend", "    local num = tonumber(value)\n    if\
    \ num == math.floor(num) then\n        return num\n    else\n        local floor\
    \ = math.floor(num)\n        local ceil = math.ceil(num)\n        if num - floor\
    \ < ceil - num then\n            return floor\n        else\n            return\
    \ ceil\n        end\n    end\nend", "    return math.floor(value + 0.5)\nend",
  "    local num = tonumber(value)\n    if num == nil then\n        return nil\n \
    \   end\n    local int = math.floor(num)\n    if num - int >= 0.5 then\n     \
    \   return int + 1\n    else\n        return int\n    end\nend", "  local number\
    \ = tonumber(value)\n  if number == nil then\n    return nil\n  end\n  local integer\
    \ = math.floor(number)\n  if number - integer < 0.5 then\n    return integer\n\
    \  else\n    return integer + 1\n  end\nend", "  local num = tonumber(value)\n\
    \  local int = math.floor(num)\n  if num - int >= 0.5 then\n    return int + 1\n\
    \  else\n    return int\n  end\nend", "    return math.floor(tonumber(value) +\
    \ 0.5)\nend", "    local num = tonumber(value)\n    if num < 0 then\n        return\
    \ math.ceil(num)\n    else\n        return math.floor(num)\n    end\nend", " \
    \ -- TODO: Implement this function\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(value + 0.5)\nend", "  -- TODO: implement\
    \ this function\nend", "  local num = tonumber(value)\n  if num == math.floor(num)\
    \ then\n    return num\n  else\n    local int, frac = math.modf(num)\n    if frac\
    \ >= 0.5 then\n      return int + 1\n    else\n      return int\n    end\n  end\n\
    end", "    return math.floor(value + 0.5)\nend", "    return math.floor(value\
    \ + 0.5)\nend", "    return math.floor(value + 0.5)\nend", "  return math.floor(value\
    \ + 0.5)\nend", "  local number = tonumber(value)\n  if number == nil then\n \
    \   return nil\n  end\n  if number >= 0 then\n    return math.floor(number + 0.5)\n\
    \  else\n    return math.ceil(number - 0.5)\n  end\nend", "  local num = tonumber(value)\n\
    \  local int = math.floor(num)\n  if num - int >= 0.5 then\n    return int + 1\n\
    \  else\n    return int\n  end\nend", "  return math.floor(value + 0.5)\nend",
  "    local number = tonumber(value)\n    if number > 0 then\n        return math.floor(number\
    \ + 0.5)\n    else\n        return math.ceil(number - 0.5)\n    end\nend", " \
    \ return math.floor(tonumber(value) + 0.5)\nend", "    local num = tonumber(value)\n\
    \    if num == nil then\n        return nil\n    end\n    local int = math.floor(num)\n\
    \    if num - int >= 0.5 then\n        return int + 1\n    else\n        return\
    \ int\n    end\nend", "    return math.floor(value + 0.5)\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  local num = tonumber(value)\n  if num == nil then\n    return\
    \ nil\n  end\n  local int = math.floor(num)\n  if num - int >= 0.5 then\n    return\
    \ int + 1\n  else\n    return int\n  end\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    local number = tonumber(value)\n    local integer = math.floor(number)\n\
    \    local decimal = number - integer\n    if decimal >= 0.5 then\n        return\
    \ integer + 1\n    else\n        return integer\n    end\nend", "  return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(tonumber(value) + 0.5)\nend", "    local\
    \ num = tonumber(value)\n    if num == nil then\n        return nil\n    end\n\
    \    if num >= 0 then\n        return math.floor(num + 0.5)\n    else\n      \
    \  return math.ceil(num - 0.5)\n    end\nend", "    local int = math.floor(tonumber(value))\n\
    \    local frac = tonumber(value) - int\n    if frac > 0.5 then\n        return\
    \ int + 1\n    elseif frac < -0.5 then\n        return int - 1\n    else\n   \
    \     return int\n    end\nend", "    return math.floor(value + 0.5)\nend", " \
    \ local number = tonumber(value)\n  if number == nil then\n    return nil\n  end\n\
    \  local integer = math.floor(number)\n  if number - integer >= 0.5 then\n   \
    \ return integer + 1\n  else\n    return integer\n  end\nend", "    local num\
    \ = tonumber(value)\n    if num == nil then\n        return nil\n    end\n   \
    \ if num >= 0 then\n        return math.floor(num + 0.5)\n    else\n        return\
    \ math.ceil(num - 0.5)\n    end\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(tonumber(value) + 0.5)\nend", "    local\
    \ number = tonumber(value)\n    if number == nil then\n        return nil\n  \
    \  end\n    local integer = math.floor(number)\n    if number - integer >= 0.5\
    \ then\n        integer = integer + 1\n    end\n    return integer\nend", "  \
    \  return math.floor(tonumber(value) + 0.5)\nend", "  return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    local number = tonumber(value)\n    if number == nil then\n\
    \        return nil\n    end\n    local floor = math.floor(number)\n    local\
    \ ceil = math.ceil(number)\n    if number - floor == 0.5 then\n        if number\
    \ > 0 then\n            return ceil\n        else\n            return floor\n\
    \        end\n    else\n        if number - floor < 0.5 then\n            return\
    \ floor\n        else\n            return ceil\n        end\n    end\nend", " \
    \   local number = tonumber(value)\n    if number == nil then\n        return\
    \ nil\n    end\n    local integer = math.floor(number)\n    local fraction = number\
    \ - integer\n    if fraction >= 0.5 then\n        return integer + 1\n    else\n\
    \        return integer\n    end\nend", "  return math.floor(value + 0.5)\nend",
  "  return math.floor(value + 0.5)\nend", "  local number = tonumber(value)\n  if\
    \ number == nil then\n    return nil\n  end\n  local floor = math.floor(number)\n\
    \  local ceil = math.ceil(number)\n  if number - floor < ceil - number then\n\
    \    return floor\n  else\n    return ceil\n  end\nend", "    local num = tonumber(value)\n\
    \    if num == nil then\n        return nil\n    end\n    if num > 0 then\n  \
    \      return math.floor(num + 0.5)\n    else\n        return math.ceil(num -\
    \ 0.5)\n    end\nend", "    local number = tonumber(value)\n    if number == nil\
    \ then\n        return nil\n    end\n    local integer = math.floor(number)\n\
    \    if number - integer >= 0.5 then\n        integer = integer + 1\n    end\n\
    \    return integer\nend", "    return math.floor(value + 0.5)\nend", "  return\
    \ math.floor(value + 0.5)\nend", "  return math.floor(tonumber(value) + 0.5)\n\
    end", "    return math.floor(tonumber(value) + 0.5)\nend", "    local number =\
    \ tonumber(value)\n    if number == nil then\n        return nil\n    end\n  \
    \  local integer = math.floor(number)\n    local decimal = number - integer\n\
    \    if decimal >= 0.5 then\n        return integer + 1\n    else\n        return\
    \ integer\n    end\nend", "    return math.floor(value + 0.5)\nend", "  return\
    \ math.floor(value + 0.5)\nend", "    local num = tonumber(value)\n    if num\
    \ == nil then\n        return nil\n    end\n    local int = math.floor(num)\n\
    \    if num - int >= 0.5 then\n        return int + 1\n    else\n        return\
    \ int\n    end\nend", "  return math.floor(value + 0.5)\nend", "    local number\
    \ = tonumber(value)\n    if number == nil then\n        return nil\n    end\n\
    \    local integer = math.floor(number)\n    local fraction = number - integer\n\
    \    if fraction >= 0.5 then\n        return integer + 1\n    else\n        return\
    \ integer\n    end\nend", "    return math.floor(value + 0.5)\nend", "    local\
    \ number = tonumber(value)\n    if number == nil then\n        return nil\n  \
    \  end\n    local integer = math.floor(number)\n    if number - integer >= 0.5\
    \ then\n        integer = integer + 1\n    end\n    return integer\nend", "  \
    \  local num = tonumber(value)\n    if num == nil then\n        return nil\n \
    \   end\n    local int = math.floor(num)\n    if num - int >= 0.5 then\n     \
    \   return int + 1\n    else\n        return int\n    end\nend", "    return math.floor(value\
    \ + 0.5)\nend", "    -- TODO: implement this function\nend", "  return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    local num = tonumber(value)\n    if num == nil then\n   \
    \     return nil\n    end\n    local int = math.floor(num)\n    if num - int <\
    \ 0.5 then\n        return int\n    else\n        return int + 1\n    end\nend",
  "  return math.floor(value + 0.5)\nend", "  local number = tonumber(value)\n  if\
    \ number == nil then\n    return nil\n  end\n  local integer = math.floor(number)\n\
    \  if number - integer >= 0.5 then\n    return integer + 1\n  else\n    return\
    \ integer\n  end\nend", "  -- your code here\nend", "    local number = tonumber(value)\n\
    \    if number > 0 then\n        return math.floor(number + 0.5)\n    else\n \
    \       return math.ceil(number - 0.5)\n    end\nend", "    local num = tonumber(value)\n\
    \    local int = math.floor(num)\n    if num - int > 0.5 then\n        return\
    \ int + 1\n    else\n        return int\n    end\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  return math.floor(tonumber(value) + 0.5)\nend", "  return math.floor(value\
    \ + 0.5)\nend", "    return math.floor(tonumber(value) + 0.5)\nend", "    local\
    \ number = tonumber(value)\n    if number == nil then\n        return nil\n  \
    \  end\n    local integer = math.floor(number)\n    if number - integer >= 0.5\
    \ then\n        integer = integer + 1\n    end\n    return integer\nend", "  local\
    \ number = tonumber(value)\n  local integer = math.floor(number)\n  local fraction\
    \ = number - integer\n  if fraction >= 0.5 then\n    return integer + 1\n  else\n\
    \    return integer\n  end\nend", "    return math.floor(tonumber(value) + 0.5)\n\
    end", "  return math.floor(tonumber(value) + 0.5)\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  return math.floor(tonumber(value) + 0.5)\nend", "    local\
    \ num = tonumber(value)\n    local int = math.floor(num)\n    if num - int >=\
    \ 0.5 then\n        return int + 1\n    else\n        return int\n    end\nend",
  "    local number = tonumber(value)\n    if number == nil then\n        return nil\n\
    \    end\n    local integer = math.floor(number)\n    if number - integer >= 0.5\
    \ then\n        integer = integer + 1\n    end\n    return integer\nend", "  local\
    \ num = tonumber(value)\n  if num > 0 then\n    return math.floor(num + 0.5)\n\
    \  else\n    return math.ceil(num - 0.5)\n  end\nend", "    -- your code here\n\
    end", "  return math.floor(tonumber(value) + 0.5)\nend", "  return math.floor(value\
    \ + 0.5)\nend", "    return math.floor(tonumber(value) + 0.5)\nend", "  local\
    \ number = tonumber(value)\n  if number == nil then\n    return nil\n  end\n \
    \ local integer = math.floor(number)\n  if number - integer >= 0.5 then\n    return\
    \ integer + 1\n  else\n    return integer\n  end\nend", "    return math.floor(value\
    \ + 0.5)\nend", "    local number = tonumber(value)\n    if number == nil then\n\
    \        return nil\n    end\n    local integer = math.floor(number)\n    local\
    \ decimal = number - integer\n    if decimal >= 0.5 then\n        return integer\
    \ + 1\n    else\n        return integer\n    end\nend", "  return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(tonumber(value) + 0.5)\nend", "  local\
    \ num = tonumber(value)\n  if num < 0 then\n    return math.ceil(num)\n  else\n\
    \    return math.floor(num)\n  end\nend", "  return math.floor(tonumber(value)\
    \ + 0.5)\nend", "  local num = tonumber(value)\n  if num == math.floor(num) then\n\
    \    return num\n  else\n    local floor = math.floor(num)\n    local ceil = math.ceil(num)\n\
    \    if num - floor < ceil - num then\n      return floor\n    else\n      return\
    \ ceil\n    end\n  end\nend", "  local number = tonumber(value)\n  if number ==\
    \ nil then\n    return nil\n  end\n  local integer = math.floor(number)\n  if\
    \ number - integer >= 0.5 then\n    return integer + 1\n  else\n    return integer\n\
    \  end\nend", "  return math.floor(tonumber(value) + 0.5)\nend", "    return math.floor(value\
    \ + 0.5)\nend", "  local number = tonumber(value)\n  if number == nil then\n \
    \   return nil\n  end\n  if number >= 0 then\n    return math.floor(number + 0.5)\n\
    \  else\n    return math.ceil(number - 0.5)\n  end\nend", "  local number = tonumber(value)\n\
    \  if number == nil then\n    return nil\n  end\n  local integer = math.floor(number)\n\
    \  if number - integer >= 0.5 then\n    return integer + 1\n  else\n    return\
    \ integer\n  end\nend", "    return math.floor(value + 0.5)\nend", "    local\
    \ number = tonumber(value)\n    if number == nil then\n        return nil\n  \
    \  end\n    local integer = math.floor(number)\n    if number - integer >= 0.5\
    \ then\n        integer = integer + 1\n    end\n    return integer\nend", "  \
    \  local number = tonumber(value)\n    if number == nil then\n        return nil\n\
    \    end\n    local integer = math.floor(number)\n    if number - integer >= 0.5\
    \ then\n        integer = integer + 1\n    end\n    return integer\nend", "  return\
    \ math.floor(tonumber(value) + 0.5)\nend", "  return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(value + 0.5)\nend", "  -- your code here\n\
    end", "    local number = tonumber(value)\n    local integer = math.floor(number)\n\
    \    if number - integer >= 0.5 then\n        return integer + 1\n    else\n \
    \       return integer\n    end\nend", "  local number = tonumber(value)\n  if\
    \ number > 0 then\n    return math.floor(number + 0.5)\n  else\n    return math.ceil(number\
    \ - 0.5)\n  end\nend", "    return math.floor(tonumber(value) + 0.5)\nend", " \
    \ local num = tonumber(value)\n  if num then\n    return math.floor(num + 0.5)\n\
    \  end\nend", "    return math.floor(value + 0.5)\nend", "  local num = tonumber(value)\n\
    \  if num > 0 then\n    return math.floor(num + 0.5)\n  else\n    return math.ceil(num\
    \ - 0.5)\n  end\nend", "    return math.floor(value + 0.5)\nend", "    return\
    \ math.floor(value + 0.5)\nend", "  local number = tonumber(value)\n  if number\
    \ == nil then\n    return nil\n  end\n  return math.floor(number + 0.5)\nend",
  "    return math.floor(value + 0.5)\nend", "    local num = tonumber(value)\n  \
    \  if num == math.floor(num) then\n        return num\n    else\n        local\
    \ int = math.floor(num)\n        local dec = num - int\n        if dec < 0.5 then\n\
    \            return int\n        else\n            return int + 1\n        end\n\
    \    end\nend", "    local num = tonumber(value)\n    local int = math.floor(num)\n\
    \    if num - int >= 0.5 then\n        return int + 1\n    else\n        return\
    \ int\n    end\nend", "  return math.floor(tonumber(value) + 0.5)\nend", "  return\
    \ math.floor(tonumber(value) + 0.5)\nend", "    return math.floor(tonumber(value)\
    \ + 0.5)\nend", "    return math.floor(tonumber(value) + 0.5)\nend", "  local\
    \ number = tonumber(value)\n  if number == nil then\n    return nil\n  end\n \
    \ local integer = math.floor(number)\n  if number - integer < 0.5 then\n    return\
    \ integer\n  else\n    return integer + 1\n  end\nend", "    local num = tonumber(value)\n\
    \    if num > 0 then\n        return math.floor(num + 0.5)\n    else\n       \
    \ return math.ceil(num - 0.5)\n    end\nend", "  return math.floor(value + 0.5)\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

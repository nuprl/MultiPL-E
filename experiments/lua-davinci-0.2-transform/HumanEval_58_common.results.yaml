language: lua
name: HumanEval_58_common
results:
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local result\
    \ = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n     \
    \       table.insert(result, v)\n        end\n    end\n    table.sort(result)\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg82admvj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpg82admvj.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpg82admvj.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(unique(res))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwn3cuuw6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpwn3cuuw6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpwn3cuuw6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6_zlp_hl.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6_zlp_hl.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp6_zlp_hl.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq6vh07ut.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpq6vh07ut.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpq6vh07ut.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local r = {}\n\
    \  for _, v in ipairs(l1) do\n    if index(l2, v) then\n      r[#r + 1] = v\n\
    \    end\n  end\n  return sort(unique(r))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpetm8hoxh.lua:9:\
    \ attempt to call global 'index' (a nil value)\nstack traceback:\n\t/tmp/tmpetm8hoxh.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpetm8hoxh.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local set =\
    \ {}\n    for _, v in ipairs(l1) do\n        set[v] = true\n    end\n    local\
    \ ret = {}\n    for _, v in ipairs(l2) do\n        if set[v] then\n          \
    \  table.insert(ret, v)\n        end\n    end\n    table.sort(ret)\n    return\
    \ ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi8uimsf8.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpi8uimsf8.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280

language: lua
name: HumanEval_58_common
results:
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local result\
    \ = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n     \
    \       table.insert(result, v)\n        end\n    end\n    table.sort(result)\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg82admvj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpg82admvj.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpg82admvj.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(unique(res))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwn3cuuw6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpwn3cuuw6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpwn3cuuw6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    sort(t)\n    return t\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6_zlp_hl.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp6_zlp_hl.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp6_zlp_hl.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq6vh07ut.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpq6vh07ut.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpq6vh07ut.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local r = {}\n\
    \  for _, v in ipairs(l1) do\n    if index(l2, v) then\n      r[#r + 1] = v\n\
    \    end\n  end\n  return sort(unique(r))\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpetm8hoxh.lua:9:\
    \ attempt to call global 'index' (a nil value)\nstack traceback:\n\t/tmp/tmpetm8hoxh.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpetm8hoxh.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local set =\
    \ {}\n    for _, v in ipairs(l1) do\n        set[v] = true\n    end\n    local\
    \ ret = {}\n    for _, v in ipairs(l2) do\n        if set[v] then\n          \
    \  table.insert(ret, v)\n        end\n    end\n    table.sort(ret)\n    return\
    \ ret\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi8uimsf8.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpi8uimsf8.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2fpk74u.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpw2fpk74u.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpw2fpk74u.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local res = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      res[#res + 1]\
    \ = v\n    end\n  end\n  return sort(res)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqed2xuqp.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpqed2xuqp.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpqed2xuqp.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    t[v] = true\n  end\n  local r = {}\n  for _,\
    \ v in ipairs(l2) do\n    if t[v] then\n      r[#r + 1] = v\n    end\n  end\n\
    \  return sort(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpd7wuknd1.lua:17:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpd7wuknd1.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpd7wuknd1.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local res = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return sort(res)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp62nqhc6g.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmp62nqhc6g.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp62nqhc6g.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local set1\
    \ = Set(l1)\n    local set2 = Set(l2)\n    local result = {}\n    for k in pairs(set1)\
    \ do\n        if set2[k] then\n            table.insert(result, k)\n        end\n\
    \    end\n    table.sort(result)\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_4yulzsj.lua:7:\
    \ attempt to call a nil value (global 'Set')\nstack traceback:\n\t/tmp/tmp_4yulzsj.lua:7:\
    \ in local 'candidate'\n\t/tmp/tmp_4yulzsj.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2fpk74u.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpw2fpk74u.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpw2fpk74u.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwz8txgwl.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpwz8txgwl.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return sort(r)\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwc1fb8q8.lua:17:\
    \ attempt to call a nil value (global 'sort')\nstack traceback:\n\t/tmp/tmpwc1fb8q8.lua:17:\
    \ in local 'candidate'\n\t/tmp/tmpwc1fb8q8.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local res = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(res,\
    \ v)\n    end\n  end\n  return sort(res)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp62nqhc6g.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmp62nqhc6g.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp62nqhc6g.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    table.sort(res)\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgx274b6i.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpgx274b6i.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpgx274b6i.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if in_table(v, l2) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpb7j27ic2.lua:9:\
    \ attempt to call a nil value (global 'in_table')\nstack traceback:\n\t/tmp/tmpb7j27ic2.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpb7j27ic2.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq6vh07ut.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpq6vh07ut.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpq6vh07ut.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2fpk74u.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpw2fpk74u.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpw2fpk74u.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    table.sort(res)\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgx274b6i.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpgx274b6i.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpgx274b6i.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2fpk74u.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpw2fpk74u.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpw2fpk74u.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvg25wr6q.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpvg25wr6q.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpvg25wr6q.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvg25wr6q.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpvg25wr6q.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpvg25wr6q.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local r = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      r[#r + 1] = v\n\
    \    end\n  end\n  return sort(r)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3rk8tby0.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmp3rk8tby0.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp3rk8tby0.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq6vh07ut.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpq6vh07ut.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpq6vh07ut.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq6vh07ut.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpq6vh07ut.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpq6vh07ut.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2fpk74u.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpw2fpk74u.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpw2fpk74u.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n\tlocal t = {}\n\
    \tfor _, v in ipairs(l1) do\n\t\tif contains(l2, v) then\n\t\t\tt[#t + 1] = v\n\
    \t\tend\n\tend\n\treturn sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_r1xamtt.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmp_r1xamtt.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp_r1xamtt.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local ret = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(ret,\
    \ v)\n    end\n  end\n  return sort(ret)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgrxwm04y.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpgrxwm04y.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpgrxwm04y.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq6vh07ut.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpq6vh07ut.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpq6vh07ut.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local l = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      l[#l + 1] = v\n\
    \    end\n  end\n  return sort(l)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpj1y5wxwp.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpj1y5wxwp.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpj1y5wxwp.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sorted(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppm5pvi6h.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmppm5pvi6h.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmppm5pvi6h.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvg25wr6q.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpvg25wr6q.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpvg25wr6q.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvg25wr6q.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpvg25wr6q.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpvg25wr6q.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for k, v in pairs(l1) do\n        if l2[v] then\n            t[v] = true\n\
    \        end\n    end\n    return sortedkeys(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9limunsg.lua:13:\
    \ attempt to call a nil value (global 'sortedkeys')\nstack traceback:\n\t/tmp/tmp9limunsg.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp9limunsg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local s = {}\n\
    \    for _, v in ipairs(l1) do\n        s[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if s[v] then\n            r[#r+1] = v\n\
    \        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmtpd6tge.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpmtpd6tge.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    local r = {}\n    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            table.insert(r,\
    \ v)\n        end\n    end\n    table.sort(r)\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd9rn81uy.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpd9rn81uy.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     res[#res + 1] = v\n        end\n    end\n    return sort(res)\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_9qb4elk.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmp_9qb4elk.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmp_9qb4elk.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local set =\
    \ {}\n    for _, v in ipairs(l1) do\n        set[v] = true\n    end\n    local\
    \ result = {}\n    for _, v in ipairs(l2) do\n        if set[v] then\n       \
    \     table.insert(result, v)\n        end\n    end\n    table.sort(result)\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6k2mrr9j.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmp6k2mrr9j.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n\tlocal t = {}\n\
    \tfor _, v in ipairs(l1) do\n\t\tt[v] = true\n\tend\n\tlocal r = {}\n\tfor _,\
    \ v in ipairs(l2) do\n\t\tif t[v] then\n\t\t\ttable.insert(r, v)\n\t\tend\n\t\
    end\n\ttable.sort(r)\n\treturn r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmlc13i39.lua:24:\
    \ expected: {1, 5, 653}\nactual: {1, 5, 5, 653}\nstack traceback:\n\t/tmp/tmpmlc13i39.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    return sort(res)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw2fpk74u.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpw2fpk74u.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpw2fpk74u.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(unique(t))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdj5u9ssh.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpdj5u9ssh.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpdj5u9ssh.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        t[v] = true\n    end\n    local r = {}\n\
    \    for _, v in ipairs(l2) do\n        if t[v] then\n            r[#r + 1] =\
    \ v\n        end\n    end\n    return r\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu5wcr1qi.lua:23:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmpu5wcr1qi.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local r = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(r,\
    \ v)\n        end\n    end\n    return sort(r)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgalbl9_8.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpgalbl9_8.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpgalbl9_8.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local s = {}\n\
    \  for _, v in ipairs(l1) do\n    s[v] = true\n  end\n  local r = {}\n  for _,\
    \ v in ipairs(l2) do\n    if s[v] then\n      r[#r+1] = v\n    end\n  end\n  return\
    \ r\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc8z2omdt.lua:23:\
    \ expected: {1, 5, 653}\nactual: {5, 1, 5, 653}\nstack traceback:\n\t/tmp/tmpc8z2omdt.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return unique(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpq6vh07ut.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpq6vh07ut.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpq6vh07ut.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local res =\
    \ {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n       \
    \     table.insert(res, v)\n        end\n    end\n    table.sort(res)\n    return\
    \ res\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1,\
    \ 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8},\
    \ {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2,\
    \ 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgx274b6i.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpgx274b6i.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpgx274b6i.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sorted(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvd0los1r.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpvd0los1r.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpvd0los1r.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 0
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local result\
    \ = {}\n  local t1 = {}\n  local t2 = {}\n  for _, v in ipairs(l1) do\n    t1[v]\
    \ = true\n  end\n  for _, v in ipairs(l2) do\n    t2[v] = true\n  end\n  for k,\
    \ _ in pairs(t1) do\n    if t2[k] then\n      table.insert(result, k)\n    end\n\
    \  end\n  table.sort(result)\n  return result\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local result\
    \ = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n     \
    \       result[#result + 1] = v\n        end\n    end\n    return sort(result)\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = common\n\
    \    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653,\
    \ 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5, 3, 2, 8}, {3, 2}), {2,\
    \ 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3, 2, 4}), {2, 3, 4})\n  \
    \  lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdfzgr27a.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpdfzgr27a.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpdfzgr27a.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local result\
    \ = {}\n    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n     \
    \       table.insert(result, v)\n        end\n    end\n    table.sort(result)\n\
    \    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg82admvj.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpg82admvj.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpg82admvj.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      table.insert(t,\
    \ v)\n    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpvg25wr6q.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpvg25wr6q.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpvg25wr6q.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            table.insert(t,\
    \ v)\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7ketgrv6.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmp7ketgrv6.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmp7ketgrv6.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n    local t = {}\n\
    \    for _, v in ipairs(l1) do\n        if contains(l2, v) then\n            t[#t\
    \ + 1] = v\n        end\n    end\n    return sort(t)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpnxss76az.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmpnxss76az.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmpnxss76az.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local res = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      res[#res + 1]\
    \ = v\n    end\n  end\n  return sort(res)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = common\n    lu.assertEquals(candidate({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqed2xuqp.lua:9:\
    \ attempt to call a nil value (global 'contains')\nstack traceback:\n\t/tmp/tmpqed2xuqp.lua:9:\
    \ in local 'candidate'\n\t/tmp/tmpqed2xuqp.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659794157
- exit_code: 1
  program: "-- Return sorted unique common elements for two lists.\n-- >>> common({1,\
    \ 4, 3, 34, 653, 2, 5}, {5, 7, 1, 5, 9, 653, 121})\n-- {1, 5, 653}\n-- >>> common({5,\
    \ 3, 2, 8}, {3, 2})\n-- {2, 3}\nlocal function common(l1, l2)\n  local t = {}\n\
    \  for _, v in ipairs(l1) do\n    if contains(l2, v) then\n      t[#t + 1] = v\n\
    \    end\n  end\n  return sort(t)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = common\n    lu.assertEquals(candidate({1, 4, 3, 34, 653, 2,\
    \ 5}, {5, 7, 1, 5, 9, 653, 121}), {1, 5, 653})\n    lu.assertEquals(candidate({5,\
    \ 3, 2, 8}, {3, 2}), {2, 3})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {3,\
    \ 2, 4}), {2, 3, 4})\n    lu.assertEquals(candidate({4, 3, 2, 8}, {}), {})\nend\n\
    \nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppyzavdvg.lua:9:\
    \ attempt to call global 'contains' (a nil value)\nstack traceback:\n\t/tmp/tmppyzavdvg.lua:9:\
    \ in function 'candidate'\n\t/tmp/tmppyzavdvg.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659750280

name: HumanEval_39_prime_fib
language: lua
prompt: "-- prime_fib returns n-th number that is a Fibonacci number and it's also\
  \ prime.\n-- >>> prime_fib(1)\n-- 2\n-- >>> prime_fib(2)\n-- 3\n-- >>> prime_fib(3)\n\
  -- 5\n-- >>> prime_fib(4)\n-- 13\n-- >>> prime_fib(5)\n-- 89\nlocal function prime_fib(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = prime_fib\n\
  \    lu.assertEquals(candidate(1), 2)\n    lu.assertEquals(candidate(2), 3)\n  \
  \  lu.assertEquals(candidate(3), 5)\n    lu.assertEquals(candidate(4), 13)\n   \
  \ lu.assertEquals(candidate(5), 89)\n    lu.assertEquals(candidate(6), 233)\n  \
  \  lu.assertEquals(candidate(7), 1597)\n    lu.assertEquals(candidate(8), 28657)\n\
  \    lu.assertEquals(candidate(9), 514229)\n    lu.assertEquals(candidate(10), 433494437)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local i = 1\n    local j = 1\n    local k = 1\n    while k < n\
    \ do\n        local t = i + j\n        i = j\n        j = t\n        if is_prime(t)\
    \ then\n            k = k + 1\n        end\n    end\n    return j\nend", "   \
    \ local i = 1\n    local fib = 1\n    local fib_prev = 1\n    while i < n do\n\
    \        local fib_temp = fib\n        fib = fib + fib_prev\n        fib_prev\
    \ = fib_temp\n        if is_prime(fib) then\n            i = i + 1\n        end\n\
    \    end\n    return fib\nend", "    local i = 1\n    local j = 1\n    local k\
    \ = 1\n    while k < n do\n        local t = i + j\n        i = j\n        j =\
    \ t\n        if is_prime(t) then\n            k = k + 1\n        end\n    end\n\
    \    return j\nend", "    local i = 1\n    local j = 1\n    local k = 1\n    while\
    \ k < n do\n        i, j = j, i + j\n        if is_prime(j) then\n           \
    \ k = k + 1\n        end\n    end\n    return j\nend", "    local i = 1\n    local\
    \ j = 1\n    local k = 1\n    while k < n do\n        i, j = j, i + j\n      \
    \  if is_prime(j) then\n            k = k + 1\n        end\n    end\n    return\
    \ j\nend", "    local i = 1\n    local j = 1\n    local k = 0\n    local count\
    \ = 0\n    while count < n do\n        k = i + j\n        i = j\n        j = k\n\
    \        if is_prime(k) then\n            count = count + 1\n        end\n   \
    \ end\n    return k\nend", "    local i = 1\n    local j = 1\n    local k = 0\n\
    \    local p = 0\n    while p < n do\n        k = i + j\n        if is_prime(k)\
    \ then\n            p = p + 1\n        end\n        i = j\n        j = k\n   \
    \ end\n    return k\nend", "    local i = 1\n    local j = 1\n    local k = 0\n\
    \    local count = 0\n    while count < n do\n        k = i + j\n        i = j\n\
    \        j = k\n        if is_prime(k) then\n            count = count + 1\n \
    \       end\n    end\n    return k\nend", "    local i = 1\n    local j = 1\n\
    \    local k = 1\n    while k < n do\n        i, j = j, i + j\n        if is_prime(j)\
    \ then\n            k = k + 1\n        end\n    end\n    return j\nend", "   \
    \ local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n        i,\
    \ j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n        end\n\
    \    end\n    return j\nend", "    local f = fib(n)\n    while not is_prime(f)\
    \ do\n        n = n + 1\n        f = fib(n)\n    end\n    return f\nend", "  \
    \  local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n       \
    \ i, j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n      \
    \  end\n    end\n    return j\nend", "    local i = 0\n    local f = 0\n    local\
    \ f1 = 1\n    local f2 = 1\n    while i < n do\n        f = f1 + f2\n        f1\
    \ = f2\n        f2 = f\n        if is_prime(f) then\n            i = i + 1\n \
    \       end\n    end\n    return f\nend", "  local i = 1\n  local fib = 1\n  local\
    \ fib_prev = 1\n  local fib_next = 1\n  while i < n do\n    fib_next = fib + fib_prev\n\
    \    fib_prev = fib\n    fib = fib_next\n    if is_prime(fib) then\n      i =\
    \ i + 1\n    end\n  end\n  return fib\nend", "    local i = 1\n    local j = 1\n\
    \    local k = 1\n    while k < n do\n        i, j = j, i + j\n        if is_prime(j)\
    \ then\n            k = k + 1\n        end\n    end\n    return j\nend", "   \
    \ local i = 1\n    local j = 1\n    local k = 1\n    while k < n do\n        i,\
    \ j = j, i + j\n        if is_prime(j) then\n            k = k + 1\n        end\n\
    \    end\n    return j\nend", "    local i = 1\n    local j = 1\n    local k =\
    \ 1\n    while k < n do\n        i, j = j, i + j\n        if is_prime(j) then\n\
    \            k = k + 1\n        end\n    end\n    return j\nend", "  local i =\
    \ 1\n  local j = 1\n  local k = 1\n  while k < n do\n    local t = i + j\n   \
    \ i = j\n    j = t\n    if is_prime(t) then\n      k = k + 1\n    end\n  end\n\
    \  return j\nend", "    local i = 1\n    local j = 1\n    local k = 1\n    while\
    \ k < n do\n        i, j = j, i + j\n        if is_prime(j) then\n           \
    \ k = k + 1\n        end\n    end\n    return j\nend", "    local i = 1\n    local\
    \ j = 1\n    local k = 1\n    while k < n do\n        local t = i + j\n      \
    \  i = j\n        j = t\n        if is_prime(t) then\n            k = k + 1\n\
    \        end\n    end\n    return j\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

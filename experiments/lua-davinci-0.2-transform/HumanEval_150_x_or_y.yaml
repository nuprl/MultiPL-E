name: HumanEval_150_x_or_y
language: lua
prompt: "-- A simple program which should return the value of x if n is \n-- a prime\
  \ number and should return the value of y otherwise.\n-- Examples:\n-- >>> x_or_y(7,\
  \ 34, 12)\n-- 34\n-- >>> x_or_y(15, 8, 5)\n-- 5\nlocal function x_or_y(n, x, y)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = x_or_y\n\
  \    lu.assertEquals(candidate(7, 34, 12), 34)\n    lu.assertEquals(candidate(15,\
  \ 8, 5), 5)\n    lu.assertEquals(candidate(3, 33, 5212), 33)\n    lu.assertEquals(candidate(1259,\
  \ 3, 52), 3)\n    lu.assertEquals(candidate(7919, -1, 12), -1)\n    lu.assertEquals(candidate(3609,\
  \ 1245, 583), 583)\n    lu.assertEquals(candidate(91, 56, 129), 129)\n    lu.assertEquals(candidate(6,\
  \ 34, 1234), 1234)\n    lu.assertEquals(candidate(1, 2, 0), 0)\n    lu.assertEquals(candidate(2,\
  \ 2, 0), 2)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    if is_prime(n) then\n        return x\n    else\n        return\
    \ y\n    end\nend", "    if is_prime(n) then\n        return x\n    else\n   \
    \     return y\n    end\nend", "    if n % 2 == 0 then\n        return y\n   \
    \ else\n        return x\n    end\nend", "  if is_prime(n) then\n    return x\n\
    \  else\n    return y\n  end\nend", "    if is_prime(n) then\n        return x\n\
    \    else\n        return y\n    end\nend", "    if is_prime(n) then\n       \
    \ return x\n    else\n        return y\n    end\nend", "    if is_prime(n) then\n\
    \        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "  if is_prime(n)\
    \ then\n    return x\n  else\n    return y\n  end\nend", "    if is_prime(n) then\n\
    \        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "    if is_prime(n)\
    \ then\n        return x\n    else\n        return y\n    end\nend", "  if is_prime(n)\
    \ then\n    return x\n  else\n    return y\n  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

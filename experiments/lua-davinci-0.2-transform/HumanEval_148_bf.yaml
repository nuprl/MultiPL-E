name: HumanEval_148_bf
language: lua
prompt: "-- There are eight planets in our solar system: the closerst to the Sun \n\
  -- is Mercury, the next one is Venus, then Earth, Mars, Jupiter, Saturn, \n-- Uranus,\
  \ Neptune.\n-- Write a function that takes two planet names as strings planet1 and\
  \ planet2. \n-- The function should return a tuple containing all planets whose\
  \ orbits are \n-- located between the orbit of planet1 and the orbit of planet2,\
  \ sorted by \n-- the proximity to the sun. \n-- The function should return an empty\
  \ tuple if planet1 or planet2\n-- are not correct planet names. \n-- Examples\n\
  -- >>> bf('Jupiter', 'Neptune')\n-- {'Saturn', 'Uranus'}\n-- >>> bf('Earth', 'Mercury')\n\
  -- 'Venus'\n-- >>> bf('Mercury', 'Uranus')\n-- {'Venus', 'Earth', 'Mars', 'Jupiter',\
  \ 'Saturn'}\nlocal function bf(planet1, planet2)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = bf\n\
  \    lu.assertEquals(candidate('Jupiter', 'Neptune'), {'Saturn', 'Uranus'})\n  \
  \  lu.assertEquals(candidate('Earth', 'Mercury'), {'Venus'})\n    lu.assertEquals(candidate('Mercury',\
  \ 'Uranus'), {'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn'})\n    lu.assertEquals(candidate('Neptune',\
  \ 'Venus'), {'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus'})\n    lu.assertEquals(candidate('Earth',\
  \ 'Earth'), {})\n    lu.assertEquals(candidate('Mars', 'Earth'), {})\n    lu.assertEquals(candidate('Jupiter',\
  \ 'Makemake'), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v in ipairs(planets)\
    \ do\n    if v == planet1 then\n      p1 = i\n    end\n    if v == planet2 then\n\
    \      p2 = i\n    end\n  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n \
    \ end\n  local res = {}\n  if p1 < p2 then\n    for i = p1 + 1, p2 - 1 do\n  \
    \    table.insert(res, planets[i])\n    end\n  else\n    for i = p2 + 1, p1 -\
    \ 1 do\n      table.insert(res, planets[i])\n    end\n  end\n  return res\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = table.indexof(planets, planet1), table.indexof(planets,\
    \ planet2)\n    if p1 == nil or p2 == nil then return {} end\n    if p1 > p2 then\
    \ p1, p2 = p2, p1 end\n    return table.slice(planets, p1 + 1, p2)\nend", "  \
    \  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "\tlocal\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif\
    \ v == planet1 then p1 = i end\n\t\tif v == planet2 then p2 = i end\n\tend\n\t\
    if p1 == 0 or p2 == 0 then return {} end\n\tif p1 > p2 then\n\t\tlocal temp =\
    \ p1\n\t\tp1 = p2\n\t\tp2 = temp\n\tend\n\tlocal result = {}\n\tfor i = p1 + 1,\
    \ p2 - 1 do\n\t\ttable.insert(result, planets[i])\n\tend\n\treturn result\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = table.indexof(planets, planet1), table.indexof(planets,\
    \ planet2)\n    if p1 == nil or p2 == nil then return {} end\n    if p1 > p2 then\
    \ p1, p2 = p2, p1 end\n    return table.slice(planets, p1 + 1, p2)\nend", "  \
    \  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1 = table.indexof(planets, planet1)\n    local\
    \ p2 = table.indexof(planets, planet2)\n    if p1 and p2 then\n        local min\
    \ = math.min(p1, p2)\n        local max = math.max(p1, p2)\n        local res\
    \ = {}\n        for i = min + 1, max - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n        return res\n    end\n    return {}\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1 = 0\n    local p2 = 0\n    local result = {}\n    for i, planet\
    \ in ipairs(planets) do\n        if planet == planet1 then\n            p1 = i\n\
    \        end\n        if planet == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        for i = p2, p1 do\n            table.insert(result, planets[i])\n\
    \        end\n    else\n        for i = p1, p2 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = table.indexOf(planets, planet1), table.indexOf(planets, planet2)\n\
    \    if p1 == -1 or p2 == -1 then return {} end\n    local result = {}\n    if\
    \ p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n  \
    \      if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local result = {}\n    if p1 < p2\
    \ then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local result = {}\n    for i = p1 + 1, p2 - 1 do\n\
    \        table.insert(result, planets[i])\n    end\n    return result\nend", " \
    \   local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, planet in ipairs(planets) do\n\
    \        if planet == planet1 then\n            p1 = i\n        end\n        if\
    \ planet == planet2 then\n            p2 = i\n        end\n    end\n    if p1\
    \ == 0 or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n    \
    \    p1, p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1\
    \ do\n        table.insert(res, planets[i])\n    end\n    return res\nend", " \
    \   local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = table.find(planets, planet1), table.find(planets,\
    \ planet2)\n    if p1 and p2 then\n        local result = {}\n        if p1 >\
    \ p2 then\n            for i = p2, p1 - 1 do\n                table.insert(result,\
    \ planets[i])\n            end\n        else\n            for i = p1, p2 - 1 do\n\
    \                table.insert(result, planets[i])\n            end\n        end\n\
    \        return result\n    else\n        return {}\n    end\nend", "  local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \  local p1, p2\n  for i, planet in ipairs(planets) do\n    if planet == planet1\
    \ then\n      p1 = i\n    end\n    if planet == planet2 then\n      p2 = i\n \
    \   end\n  end\n  if not p1 or not p2 then\n    return {}\n  end\n  local res\
    \ = {}\n  if p1 < p2 then\n    for i = p1 + 1, p2 - 1 do\n      table.insert(res,\
    \ planets[i])\n    end\n  else\n    for i = p2 + 1, p1 - 1 do\n      table.insert(res,\
    \ planets[i])\n    end\n  end\n  return res\nend", "\tlocal planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal\
    \ p1 = 0\n\tlocal p2 = 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1\
    \ then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\
    \tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\t\
    if p1 < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\tend\n\treturn res\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1 = 0\n  local p2\
    \ = 0\n  local res = {}\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then p1 = i end\n    if v == planet2 then p2 = i end\n  end\n  if p1 == 0 or\
    \ p2 == 0 then return {} end\n  if p1 > p2 then\n    for i = p2, p1 do\n     \
    \ table.insert(res, planets[i])\n    end\n  else\n    for i = p1, p2 do\n    \
    \  table.insert(res, planets[i])\n    end\n  end\n  return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n  \
    \      if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1, p2 =\
    \ p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n       \
    \ table.insert(res, planets[i])\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n\
    \    if p1 and p2 then\n        local result = {}\n        if p1 < p2 then\n \
    \           for i = p1 + 1, p2 - 1 do\n                table.insert(result, planets[i])\n\
    \            end\n        else\n            for i = p2 + 1, p1 - 1 do\n      \
    \          table.insert(result, planets[i])\n            end\n        end\n  \
    \      return result\n    else\n        return {}\n    end\nend", "  local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then p1 = i end\n    if v == planet2 then p2 = i end\n  end\n  if p1 == 0 or\
    \ p2 == 0 then return {} end\n  if p1 > p2 then\n    p1, p2 = p2, p1\n  end\n\
    \  local res = {}\n  for i = p1 + 1, p2 - 1 do\n    table.insert(res, planets[i])\n\
    \  end\n  return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = table.indexof(planets,\
    \ planet1)\n    local p2 = table.indexof(planets, planet2)\n    if p1 == nil or\
    \ p2 == nil then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    return table.slice(planets, p1 + 1, p2)\nend", "\t\
    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif\
    \ v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2\
    \ = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\t\
    local res = {}\n\tfor i = p1 + 1, p2 - 1 do\n\t\ttable.insert(res, planets[i])\n\
    \tend\n\treturn res\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, planet\
    \ in ipairs(planets) do\n\t\tif planet == planet1 then\n\t\t\tp1 = i\n\t\tend\n\
    \t\tif planet == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2\
    \ == 0 then\n\t\treturn {}\n\tend\n\tif p1 > p2 then\n\t\tp1, p2 = p2, p1\n\t\
    end\n\tlocal res = {}\n\tfor i = p1 + 1, p2 - 1 do\n\t\ttable.insert(res, planets[i])\n\
    \tend\n\treturn res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n  \
    \      end\n    end\n    return result\nend", "  local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 =\
    \ 0, 0\n  local result = {}\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then\n      p1 = i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n\
    \  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n  if p1 > p2 then\n\
    \    for i = p2 + 1, p1 - 1 do\n      table.insert(result, planets[i])\n    end\n\
    \  else\n    for i = p1 + 1, p2 - 1 do\n      table.insert(result, planets[i])\n\
    \    end\n  end\n  return result\nend", "  local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 =\
    \ 0, 0\n  local result = {}\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then\n      p1 = i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n\
    \  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n  if p1 > p2 then\n\
    \    p1, p2 = p2, p1\n  end\n  for i = p1 + 1, p2 - 1 do\n    table.insert(result,\
    \ planets[i])\n  end\n  return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1 = 0\n    local p2 = 0\n    local result = {}\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        for\
    \ i = p2, p1 do\n            table.insert(result, planets[i])\n        end\n \
    \   else\n        for i = p1, p2 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\
    \ p1 = i end\n        if v == planet2 then p2 = i end\n    end\n    if p1 == 0\
    \ or p2 == 0 then return {} end\n    local res = {}\n    if p1 < p2 then\n   \
    \     for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n \
    \       end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local result = {}\n    for i = p1 + 1, p2 - 1 do\n\
    \        table.insert(result, planets[i])\n    end\n    return result\nend", " \
    \   local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local index1, index2\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            index1 = i\n        end\n    \
    \    if v == planet2 then\n            index2 = i\n        end\n    end\n    if\
    \ index1 == nil or index2 == nil then\n        return {}\n    end\n    local result\
    \ = {}\n    if index1 < index2 then\n        for i = index1 + 1, index2 - 1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = index2 + 1, index1 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "\tlocal planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal\
    \ p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n\tif p1\
    \ and p2 then\n\t\tlocal t = {}\n\t\tfor i = math.min(p1, p2) + 1, math.max(p1,\
    \ p2) - 1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\t\treturn t\n\tend\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "  local planets =\
    \ {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \  local p1 = 0\n  local p2 = 0\n  local result = {}\n  for i, v in ipairs(planets)\
    \ do\n    if v == planet1 then\n      p1 = i\n    end\n    if v == planet2 then\n\
    \      p2 = i\n    end\n  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n \
    \ end\n  if p1 > p2 then\n    for i = p2, p1 do\n      table.insert(result, planets[i])\n\
    \    end\n  else\n    for i = p1, p2 do\n      table.insert(result, planets[i])\n\
    \    end\n  end\n  return result\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local i1, i2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           i1 = i\n        end\n        if v == planet2 then\n            i2\
    \ = i\n        end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n\
    \    end\n    if i1 > i2 then\n        i1, i2 = i2, i1\n    end\n    local res\
    \ = {}\n    for i = i1 + 1, i2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local\
    \ p2 = 0\n    local result = {}\n    for i, v in ipairs(planets) do\n        if\
    \ v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    if p1 > p2 then\n        for i = p2, p1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = p1, p2 do\n            table.insert(result, planets[i])\n        end\n\
    \    end\n    return result\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1 = 0\n  local p2\
    \ = 0\n  local result = {}\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then\n      p1 = i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n\
    \  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n  if p1 > p2 then\n\
    \    for i = p2, p1 do\n      table.insert(result, planets[i])\n    end\n  else\n\
    \    for i = p1, p2 do\n      table.insert(result, planets[i])\n    end\n  end\n\
    \  return result\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v\
    \ in ipairs(planets) do\n\t\tif v == planet1 then p1 = i end\n\t\tif v == planet2\
    \ then p2 = i end\n\tend\n\tif p1 == 0 or p2 == 0 then return {} end\n\tif p1\
    \ > p2 then p1, p2 = p2, p1 end\n\tlocal res = {}\n\tfor i = p1 + 1, p2 - 1 do\n\
    \t\ttable.insert(res, planets[i])\n\tend\n\treturn res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then p1 = i end\n        if v == planet2 then p2 = i end\n    end\n\
    \    if p1 == 0 or p2 == 0 then return {} end\n    if p1 > p2 then\n        local\
    \ tmp = p1\n        p1 = p2\n        p2 = tmp\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n    for i =\
    \ p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1 = table.indexof(planets, planet1)\n\
    \tlocal p2 = table.indexof(planets, planet2)\n\tif p1 == nil or p2 == nil then\n\
    \t\treturn {}\n\tend\n\tlocal result = {}\n\tif p1 < p2 then\n\t\tfor i = p1 +\
    \ 1, p2 - 1 do\n\t\t\ttable.insert(result, planets[i])\n\t\tend\n\telse\n\t\t\
    for i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(result, planets[i])\n\t\tend\n\t\
    end\n\treturn result\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i = 1, 8 do\n        if planets[i] == planet1 then\n            p1 =\
    \ i\n        end\n        if planets[i] == planet2 then\n            p2 = i\n\
    \        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n   \
    \ end\n    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(result, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then p1 = i end\n\
    \        if v == planet2 then p2 = i end\n    end\n    if p1 == 0 or p2 == 0 then\
    \ return {} end\n    local res = {}\n    if p1 > p2 then\n        for i = p2,\
    \ p1 do\n            table.insert(res, planets[i])\n        end\n    else\n  \
    \      for i = p1, p2 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local planet1_index =\
    \ 0\n    local planet2_index = 0\n    local result = {}\n    for i, planet in\
    \ ipairs(planets) do\n        if planet == planet1 then\n            planet1_index\
    \ = i\n        end\n        if planet == planet2 then\n            planet2_index\
    \ = i\n        end\n    end\n    if planet1_index == 0 or planet2_index == 0 then\n\
    \        return {}\n    end\n    if planet1_index > planet2_index then\n     \
    \   for i = planet2_index, planet1_index do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = planet1_index, planet2_index\
    \ do\n            table.insert(result, planets[i])\n        end\n    end\n   \
    \ return result\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v\
    \ in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\t\
    if v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\
    \t\treturn {}\n\tend\n\tif p1 > p2 then\n\t\tp1, p2 = p2, p1\n\tend\n\tlocal res\
    \ = {}\n\tfor i = p1 + 1, p2 - 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\
    \treturn res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n         \
    \   table.insert(res, planets[i])\n        end\n    else\n        for i = p2 +\
    \ 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n    end\n\
    \    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i,v in ipairs(planets) do\n        if v == planet1 then p1 = i end\n       \
    \ if v == planet2 then p2 = i end\n    end\n    if p1 == 0 or p2 == 0 then return\
    \ {} end\n    local res = {}\n    if p1 < p2 then\n        for i = p1+1, p2-1\
    \ do\n            table.insert(res, planets[i])\n        end\n    else\n     \
    \   for i = p2+1, p1-1 do\n            table.insert(res, planets[i])\n       \
    \ end\n    end\n    return res\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = table.find(planets, planet1), table.find(planets, planet2)\n    if not p1\
    \ or not p2 then return {} end\n    if p1 > p2 then p1, p2 = p2, p1 end\n    return\
    \ table.slice(planets, p1+1, p2-1)\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if planet1 == v then\n \
    \           p1 = i\n        end\n        if planet2 == v then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\n    for i, v in\
    \ ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n     \
    \   end\n        if v == planet2 then\n            p2 = i\n        end\n    end\n\
    \    if p1 == nil or p2 == nil then\n        return {}\n    end\n    local res\
    \ = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(res, planets[i])\n        end\n    end\n    return res\n\
    end", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n  local p1 = 0\n  local p2 = 0\n  local result = {}\n\
    \  for i, v in ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n  \
    \  end\n    if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == 0 or\
    \ p2 == 0 then\n    return {}\n  end\n  if p1 > p2 then\n    for i = p2, p1 do\n\
    \      table.insert(result, planets[i])\n    end\n  else\n    for i = p1, p2 do\n\
    \      table.insert(result, planets[i])\n    end\n  end\n  return result\nend",
  "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if\
    \ v == planet1 then\n      p1 = i\n    end\n    if v == planet2 then\n      p2\
    \ = i\n    end\n  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n  if\
    \ p1 > p2 then\n    p1, p2 = p2, p1\n  end\n  local res = {}\n  for i = p1 + 1,\
    \ p2 - 1 do\n    table.insert(res, planets[i])\n  end\n  return res\nend", " \
    \ local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n  local p1 = table.indexof(planets, planet1)\n  local p2 = table.indexof(planets,\
    \ planet2)\n  if p1 == nil or p2 == nil then return {} end\n  if p1 > p2 then\n\
    \    local t = p1\n    p1 = p2\n    p2 = t\n  end\n  local result = {}\n  for\
    \ i = p1 + 1, p2 - 1 do\n    table.insert(result, planets[i])\n  end\n  return\
    \ result\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local result = {}\n    for\
    \ i = p1 + 1, p2 - 1 do\n        table.insert(result, planets[i])\n    end\n \
    \   return result\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local p2 =\
    \ 0\n    local result = {}\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        for i = p2, p1 do\n  \
    \          table.insert(result, planets[i])\n        end\n    else\n        for\
    \ i = p1, p2 do\n            table.insert(result, planets[i])\n        end\n \
    \   end\n    return result\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\t\
    for i, p in ipairs(planets) do\n\t\tif p == planet1 then\n\t\t\tp1 = i\n\t\tend\n\
    \t\tif p == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 ==\
    \ 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tif p1 < p2 then\n\t\tfor i\
    \ = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\tend\n\telse\n\t\
    \tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\tend\n\t\
    end\n\treturn res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local p2 =\
    \ 0\n    local res = {}\n    for i, v in ipairs(planets) do\n        if v == planet1\
    \ then\n            p1 = i\n        end\n        if v == planet2 then\n      \
    \      p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return\
    \ {}\n    end\n    if p1 > p2 then\n        for i = p2, p1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    else\n        for i = p1, p2 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "  local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 =\
    \ table.indexof(planets, planet1), table.indexof(planets, planet2)\n  if p1 and\
    \ p2 then\n    local t = {}\n    for i = math.min(p1, p2) + 1, math.max(p1, p2)\
    \ - 1 do\n      table.insert(t, planets[i])\n    end\n    return t\n  end\nend",
  "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if\
    \ v == planet1 then p1 = i end\n    if v == planet2 then p2 = i end\n  end\n \
    \ if p1 == 0 or p2 == 0 then return {} end\n  local res = {}\n  if p1 > p2 then\n\
    \    for i = p2, p1 do\n      table.insert(res, planets[i])\n    end\n  else\n\
    \    for i = p1, p2 do\n      table.insert(res, planets[i])\n    end\n  end\n\
    \  return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n    for i =\
    \ p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n  local p1 = 0\n  local p2 = 0\n  local result\
    \ = {}\n  for i, v in ipairs(planets) do\n    if v == planet1 then\n      p1 =\
    \ i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1\
    \ == 0 or p2 == 0 then\n    return {}\n  end\n  if p1 > p2 then\n    for i = p2,\
    \ p1 do\n      table.insert(result, planets[i])\n    end\n  else\n    for i =\
    \ p1, p2 do\n      table.insert(result, planets[i])\n    end\n  end\n  return\
    \ result\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "  local planets =\
    \ {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then\n      p1 = i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n\
    \  end\n  local result = {}\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n\
    \  if p1 > p2 then\n    for i = p2, p1 do\n      table.insert(result, planets[i])\n\
    \    end\n  else\n    for i = p1, p2 do\n      table.insert(result, planets[i])\n\
    \    end\n  end\n  return result\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 1, 1\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == p2 then\n        return {}\n    end\n\
    \    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n  \
    \      end\n    end\n    return result\nend", "  local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 =\
    \ table.indexof(planets, planet1), table.indexof(planets, planet2)\n  if not p1\
    \ or not p2 then return {} end\n  if p1 > p2 then p1, p2 = p2, p1 end\n  return\
    \ table.slice(planets, p1 + 1, p2)\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v\
    \ in ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n    end\n   \
    \ if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == 0 or p2 == 0\
    \ then\n    return {}\n  end\n  local result = {}\n  if p1 < p2 then\n    for\
    \ i = p1 + 1, p2 - 1 do\n      table.insert(result, planets[i])\n    end\n  else\n\
    \    for i = p2 + 1, p1 - 1 do\n      table.insert(result, planets[i])\n    end\n\
    \  end\n  return result\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n \
    \ for i, v in ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n   \
    \ end\n    if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == 0 or\
    \ p2 == 0 then\n    return {}\n  end\n  local res = {}\n  if p1 < p2 then\n  \
    \  for i = p1 + 1, p2 - 1 do\n      table.insert(res, planets[i])\n    end\n \
    \ else\n    for i = p2 + 1, p1 - 1 do\n      table.insert(res, planets[i])\n \
    \   end\n  end\n  return res\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local i1, i2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  i1 = i\n        end\n        if v == planet2 then\n            i2 = i\n   \
    \     end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n    end\n\
    \    local result = {}\n    for i = i1 + 1, i2 - 1 do\n        table.insert(result,\
    \ planets[i])\n    end\n    return result\nend", "  local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local\
    \ p1, p2 = 0, 0\n  for i, planet in ipairs(planets) do\n    if planet == planet1\
    \ then p1 = i end\n    if planet == planet2 then p2 = i end\n  end\n  if p1 ==\
    \ 0 or p2 == 0 then return {} end\n  local result = {}\n  for i = p1 + 1, p2 -\
    \ 1 do\n    table.insert(result, planets[i])\n  end\n  return result\nend", " \
    \   local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1 = 0\n    local p2 = 0\n    local result =\
    \ {}\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n     \
    \       p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n\
    \        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n   \
    \ end\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n\
    \    if v == planet1 then p1 = i end\n    if v == planet2 then p2 = i end\n  end\n\
    \  if p1 == 0 or p2 == 0 then return {} end\n  if p1 > p2 then\n    local tmp\
    \ = p1\n    p1 = p2\n    p2 = tmp\n  end\n  local res = {}\n  for i = p1 + 1,\
    \ p2 - 1 do\n    table.insert(res, planets[i])\n  end\n  return res\nend", "\t\
    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tlocal result = {}\n\tfor i, v in ipairs(planets)\
    \ do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\
    \t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\t\
    end\n\tif p1 > p2 then\n\t\tfor i = p2, p1 do\n\t\t\ttable.insert(result, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p1, p2 do\n\t\t\ttable.insert(result, planets[i])\n\
    \t\tend\n\tend\n\treturn result\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i = 1, #planets do\n        if planets[i] == planet1 then\n         \
    \   p1 = i\n        end\n        if planets[i] == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        res[#res + 1] = planets[i]\n  \
    \  end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local\
    \ p2 = 0\n    local result = {}\n    for i, v in ipairs(planets) do\n        if\
    \ v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    if p1 > p2 then\n        for i = p2, p1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = p1, p2 do\n            table.insert(result, planets[i])\n        end\n\
    \    end\n    return result\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local index1, index2 =\
    \ 0, 0\n  for i, planet in ipairs(planets) do\n    if planet == planet1 then\n\
    \      index1 = i\n    end\n    if planet == planet2 then\n      index2 = i\n\
    \    end\n  end\n  if index1 == 0 or index2 == 0 then\n    return {}\n  end\n\
    \  local result = {}\n  if index1 < index2 then\n    for i = index1 + 1, index2\
    \ - 1 do\n      table.insert(result, planets[i])\n    end\n  else\n    for i =\
    \ index2 + 1, index1 - 1 do\n      table.insert(result, planets[i])\n    end\n\
    \  end\n  return result\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2\n\tfor i, planet in\
    \ ipairs(planets) do\n\t\tif planet == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\
    \tif planet == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == nil or p2\
    \ == nil then\n\t\treturn {}\n\tend\n\tlocal t = {}\n\tif p1 < p2 then\n\t\tfor\
    \ i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\telse\n\t\
    \tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(t, planets[i])\n\t\tend\n\tend\n\
    \treturn t\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets)\
    \ do\n\t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\
    \t\t\tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\t\
    end\n\tlocal result = {}\n\tfor i = p1 + 1, p2 - 1 do\n\t\ttable.insert(result,\
    \ planets[i])\n\tend\n\treturn result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = table.indexof(planets, planet1), table.indexof(planets, planet2)\n\
    \    if p1 == nil or p2 == nil then return {} end\n    local result = {}\n   \
    \ for i = math.min(p1, p2) + 1, math.max(p1, p2) - 1 do\n        table.insert(result,\
    \ planets[i])\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n \
    \ for i, v in ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n   \
    \ end\n    if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == 0 or\
    \ p2 == 0 then\n    return {}\n  end\n  local res = {}\n  if p1 < p2 then\n  \
    \  for i = p1 + 1, p2 - 1 do\n      table.insert(res, planets[i])\n    end\n \
    \ else\n    for i = p2 + 1, p1 - 1 do\n      table.insert(res, planets[i])\n \
    \   end\n  end\n  return res\nend", "\tlocal planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal i1, i2 = 0, 0\n\t\
    for i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\ti1 = i\n\t\tend\n\
    \t\tif v == planet2 then\n\t\t\ti2 = i\n\t\tend\n\tend\n\tif i1 == 0 or i2 ==\
    \ 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tfor i = math.min(i1, i2) +\
    \ 1, math.max(i1, i2) - 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\treturn\
    \ res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, p in ipairs(planets)\
    \ do\n        if p == planet1 then\n            p1 = i\n        end\n        if\
    \ p == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    for i =\
    \ p1, p2 do\n        table.insert(res, planets[i])\n    end\n    return res\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1 = 0\n    local p2 = 0\n    local result =\
    \ {}\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n     \
    \       p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n\
    \        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n   \
    \ end\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local result = {}\n    if p1\
    \ < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n\tlocal p1, p2 = table.indexof(planets, planet1), table.indexof(planets,\
    \ planet2)\n\tif p1 and p2 then\n\t\tlocal t = {}\n\t\tif p1 < p2 then\n\t\t\t\
    for i = p1 + 1, p2 - 1 do\n\t\t\t\ttable.insert(t, planets[i])\n\t\t\tend\n\t\t\
    else\n\t\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\t\ttable.insert(t, planets[i])\n\t\
    \t\tend\n\t\tend\n\t\treturn t\n\tend\nend", "    -- your code here\nend", " \
    \   local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i = 1, #planets do\n        if planets[i] == planet1\
    \ then\n            p1 = i\n        end\n        if planets[i] == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "\tlocal planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1 = 0\n\
    \tlocal p2 = 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\
    \t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\t\
    local result = {}\n\tif p1 > p2 then\n\t\tfor i = p2, p1 do\n\t\t\ttable.insert(result,\
    \ planets[i])\n\t\tend\n\telse\n\t\tfor i = p1, p2 do\n\t\t\ttable.insert(result,\
    \ planets[i])\n\t\tend\n\tend\n\treturn result\nend", "\tlocal planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal\
    \ p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\
    \t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\t\
    if p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tif p1 > p2 then\n\t\tp1, p2\
    \ = p2, p1\n\tend\n\tlocal res = {}\n\tfor i = p1 + 1, p2 - 1 do\n\t\ttable.insert(res,\
    \ planets[i])\n\tend\n\treturn res\nend", "\tlocal planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 =\
    \ 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 =\
    \ i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1\
    \ == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tif p1 < p2 then\n\
    \t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\tend\n\t\
    else\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\t\t\
    end\n\tend\n\treturn res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, planet in ipairs(planets) do\n        if planet == planet1 then p1\
    \ = i end\n        if planet == planet2 then p2 = i end\n    end\n    if p1 ==\
    \ 0 or p2 == 0 then return {} end\n    if p1 > p2 then p1, p2 = p2, p1 end\n \
    \   local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1 = 0\n  local p2\
    \ = 0\n  local res = {}\n  for i, v in ipairs(planets) do\n    if v == planet1\
    \ then\n      p1 = i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n\
    \  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n  if p1 > p2 then\n\
    \    for i = p2, p1 do\n      table.insert(res, planets[i])\n    end\n  else\n\
    \    for i = p1, p2 do\n      table.insert(res, planets[i])\n    end\n  end\n\
    \  return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ res = {}\n    for i = math.min(p1, p2) + 1, math.max(p1, p2) - 1 do\n      \
    \  table.insert(res, planets[i])\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = -1, -1\n    for i, planet in ipairs(planets) do\n        if\
    \ planet == planet1 then\n            p1 = i\n        end\n        if planet ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == -1 or p2\
    \ == -1 then\n        return {}\n    end\n    local result = {}\n    for i = math.min(p1,\
    \ p2), math.max(p1, p2) do\n        table.insert(result, planets[i])\n    end\n\
    \    return result\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n    for i =\
    \ p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2\n  for i, planet in ipairs(planets)\
    \ do\n    if planet == planet1 then\n      p1 = i\n    end\n    if planet == planet2\
    \ then\n      p2 = i\n    end\n  end\n  if p1 == nil or p2 == nil then\n    return\
    \ {}\n  end\n  if p1 > p2 then\n    p1, p2 = p2, p1\n  end\n  local result = {}\n\
    \  for i = p1 + 1, p2 - 1 do\n    table.insert(result, planets[i])\n  end\n  return\
    \ result\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, planet in\
    \ ipairs(planets) do\n        if planet == planet1 then p1 = i end\n        if\
    \ planet == planet2 then p2 = i end\n    end\n    if p1 == 0 or p2 == 0 then return\
    \ {} end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\n    for\
    \ i, planet in ipairs(planets) do\n        if planet == planet1 then\n       \
    \     p1 = i\n        end\n        if planet == planet2 then\n            p2 =\
    \ i\n        end\n    end\n    if p1 == nil or p2 == nil then\n        return\
    \ {}\n    end\n    local result = {}\n    if p1 < p2 then\n        for i = p1\
    \ + 1, p2 - 1 do\n            table.insert(result, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "\tlocal planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \tlocal p1, p2 = 0, 0\n\tlocal result = {}\n\tfor i, v in ipairs(planets) do\n\
    \t\tif v == planet1 then p1 = i end\n\t\tif v == planet2 then p2 = i end\n\tend\n\
    \tif p1 == 0 or p2 == 0 then return {} end\n\tif p1 < p2 then\n\t\tfor i = p1\
    \ + 1, p2 - 1 do\n\t\t\ttable.insert(result, planets[i])\n\t\tend\n\telse\n\t\t\
    for i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(result, planets[i])\n\t\tend\n\t\
    end\n\treturn result\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i = 1, #planets do\n        if planets[i] == planet1 then\n            p1 =\
    \ i\n        end\n        if planets[i] == planet2 then\n            p2 = i\n\
    \        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n   \
    \ end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1\
    \ do\n            table.insert(res, planets[i])\n        end\n    else\n     \
    \   for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n   \
    \     end\n    end\n    return res\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local i1, i2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           i1 = i\n        end\n        if v == planet2 then\n            i2\
    \ = i\n        end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n\
    \    end\n    if i1 > i2 then\n        i1, i2 = i2, i1\n    end\n    local res\
    \ = {}\n    for i = i1 + 1, i2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = table.indexOf(planets,\
    \ planet1), table.indexOf(planets, planet2)\n    if p1 == -1 or p2 == -1 then\
    \ return {} end\n    local min, max = math.min(p1, p2), math.max(p1, p2)\n   \
    \ local res = {}\n    for i = min + 1, max - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local\
    \ p2 = 0\n    local res = {}\n    for i, v in ipairs(planets) do\n        if v\
    \ == planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        for i = p2, p1 do\n  \
    \          table.insert(res, planets[i])\n        end\n    else\n        for i\
    \ = p1, p2 do\n            table.insert(res, planets[i])\n        end\n    end\n\
    \    return res\nend", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local i1, i2 = 0, 0\n  for i, p\
    \ in ipairs(planets) do\n    if p == planet1 then i1 = i end\n    if p == planet2\
    \ then i2 = i end\n  end\n  if i1 == 0 or i2 == 0 then return {} end\n  if i1\
    \ > i2 then\n    i1, i2 = i2, i1\n  end\n  local res = {}\n  for i = i1 + 1, i2\
    \ - 1 do\n    res[#res + 1] = planets[i]\n  end\n  return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1 = 0\n    local p2 = 0\n    local res = {}\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        for i = p2, p1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p1, p2 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1 = 0\n    local p2 = 0\n    local result = {}\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        for\
    \ i = p2, p1 do\n            table.insert(result, planets[i])\n        end\n \
    \   else\n        for i = p1, p2 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "  local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local\
    \ p1, p2 = 0, 0\n  for i, planet in ipairs(planets) do\n    if planet == planet1\
    \ then\n      p1 = i\n    end\n    if planet == planet2 then\n      p2 = i\n \
    \   end\n  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n  local result\
    \ = {}\n  if p1 < p2 then\n    for i = p1 + 1, p2 - 1 do\n      table.insert(result,\
    \ planets[i])\n    end\n  else\n    for i = p2 + 1, p1 - 1 do\n      table.insert(result,\
    \ planets[i])\n    end\n  end\n  return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if planet1 == v then\n\
    \            p1 = i\n        end\n        if planet2 == v then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i = 1, #planets do\n        if planets[i] == planet1 then\n         \
    \   p1 = i\n        end\n        if planets[i] == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        res[#res + 1] = planets[i]\n  \
    \  end\n    return res\nend", "  local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n \
    \ for i, v in ipairs(planets) do\n    if v == planet1 then p1 = i end\n    if\
    \ v == planet2 then p2 = i end\n  end\n  if p1 == 0 or p2 == 0 then return {}\
    \ end\n  if p1 > p2 then p1, p2 = p2, p1 end\n  local res = {}\n  for i = p1 +\
    \ 1, p2 - 1 do\n    table.insert(res, planets[i])\n  end\n  return res\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i = 1, #planets do\n        if\
    \ planets[i] == planet1 then\n            p1 = i\n        end\n        if planets[i]\
    \ == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or\
    \ p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1, p2\
    \ = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n     \
    \   res[#res + 1] = planets[i]\n    end\n    return res\nend", "\tlocal planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \tlocal p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n\t\
    if p1 and p2 then\n\t\tif p1 > p2 then\n\t\t\tp1, p2 = p2, p1\n\t\tend\n\t\treturn\
    \ table.slice(planets, p1 + 1, p2)\n\tend\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, planet in ipairs(planets) do\n        if planet ==\
    \ planet1 then\n            p1 = i\n        end\n        if planet == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n  \
    \  end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {\n        'Mercury',\n \
    \       'Venus',\n        'Earth',\n        'Mars',\n        'Jupiter',\n    \
    \    'Saturn',\n        'Uranus',\n        'Neptune'\n    }\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(result, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "  local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local\
    \ p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if v == planet1 then p1\
    \ = i end\n    if v == planet2 then p2 = i end\n  end\n  if p1 == 0 or p2 == 0\
    \ then return {} end\n  local res = {}\n  if p1 < p2 then\n    for i = p1 + 1,\
    \ p2 - 1 do\n      table.insert(res, planets[i])\n    end\n  else\n    for i =\
    \ p2 + 1, p1 - 1 do\n      table.insert(res, planets[i])\n    end\n  end\n  return\
    \ res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, planet in ipairs(planets) do\n\
    \        if planet == planet1 then\n            p1 = i\n        end\n        if\
    \ planet == planet2 then\n            p2 = i\n        end\n    end\n    if p1\
    \ == 0 or p2 == 0 then\n        return {}\n    end\n    local result = {}\n  \
    \  for i = p1 + 1, p2 - 1 do\n        table.insert(result, planets[i])\n    end\n\
    \    return result\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    local\
    \ res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n         \
    \   table.insert(res, planets[i])\n        end\n    else\n        for i = p2 +\
    \ 1, p1 - 1 do\n            table.insert(res, planets[i])\n        end\n    end\n\
    \    return res\nend", end, "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v\
    \ in ipairs(planets) do\n    if v == planet1 then\n      p1 = i\n    end\n   \
    \ if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1 == 0 or p2 == 0\
    \ then\n    return {}\n  end\n  if p1 > p2 then\n    p1, p2 = p2, p1\n  end\n\
    \  local res = {}\n  for i = p1 + 1, p2 - 1 do\n    table.insert(res, planets[i])\n\
    \  end\n  return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local i1, i2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  i1 = i\n        end\n        if v == planet2 then\n            i2 = i\n   \
    \     end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    if i1 < i2 then\n        for i = i1 + 1, i2 - 1 do\n\
    \            table.insert(res, planets[i])\n        end\n    else\n        for\
    \ i = i2 + 1, i1 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local\
    \ p2 = 0\n    local result = {}\n    for i,v in ipairs(planets) do\n        if\
    \ v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    if p1 < p2 then\n        for i = p1 + 1, p2 -\
    \ 1 do\n            table.insert(result, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1 = 0\n    local p2 = 0\n    local result = {}\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n      \
    \  end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "  local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2\n\
    \  for i, planet in ipairs(planets) do\n    if planet == planet1 then p1 = i end\n\
    \    if planet == planet2 then p2 = i end\n  end\n  if not p1 or not p2 then return\
    \ {} end\n  if p1 > p2 then\n    local tmp = p1\n    p1 = p2\n    p2 = tmp\n \
    \ end\n  local res = {}\n  for i = p1 + 1, p2 - 1 do\n    table.insert(res, planets[i])\n\
    \  end\n  return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local p2 =\
    \ 0\n    local result = {}\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        for i = p2 + 1, p1 - 1\
    \ do\n            table.insert(result, planets[i])\n        end\n    else\n  \
    \      for i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1 = 0\n    local p2 = 0\n    local result = {}\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        local\
    \ temp = p1\n        p1 = p2\n        p2 = temp\n    end\n    for i = p1 + 1,\
    \ p2 - 1 do\n        table.insert(result, planets[i])\n    end\n    return result\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1 = 0\n    local p2 = 0\n    local result = {}\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        for\
    \ i = p2, p1 do\n            table.insert(result, planets[i])\n        end\n \
    \   else\n        for i = p1, p2 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i = 1, #planets do\n        if planets[i] == planet1 then\n         \
    \   p1 = i\n        end\n        if planets[i] == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        local temp = p1\n        p1 = p2\n    \
    \    p2 = temp\n    end\n    local result = {}\n    for i = p1 + 1, p2 - 1 do\n\
    \        table.insert(result, planets[i])\n    end\n    return result\nend", "\t\
    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif\
    \ v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2\
    \ = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\t\
    if p1 > p2 then\n\t\tp1, p2 = p2, p1\n\tend\n\tlocal res = {}\n\tfor i = p1 +\
    \ 1, p2 - 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\treturn res\nend",
  "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif\
    \ v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2\
    \ = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\t\
    if p1 > p2 then\n\t\tp1, p2 = p2, p1\n\tend\n\tlocal res = {}\n\tfor i = p1 +\
    \ 1, p2 - 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\treturn res\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2\n    for i, p in ipairs(planets) do\n\
    \        if p == planet1 then\n            p1 = i\n        end\n        if p ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 and p2 then\n\
    \        local res = {}\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n        return res\n    else\n        return {}\n\
    \    end\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local result = {}\n    if p1\
    \ < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(result, planets[i])\n        end\n    end\n    return result\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2\n    for i, v in ipairs(planets) do\n\
    \        if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == nil or\
    \ p2 == nil then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = table.indexof(planets, planet1), table.indexof(planets, planet2)\n\
    \    if p1 == nil or p2 == nil then return {} end\n    if p1 > p2 then p1, p2\
    \ = p2, p1 end\n    return table.slice(planets, p1 + 1, p2)\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n  \
    \      if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1, p2 =\
    \ p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n       \
    \ table.insert(res, planets[i])\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local p = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(p, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(p, planets[i])\n\
    \        end\n    end\n    return p\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(result, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res\
    \ = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local i1, i2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  i1 = i\n        end\n        if v == planet2 then\n            i2 = i\n   \
    \     end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n    end\n\
    \    local res = {}\n    for i = i1 + 1, i2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "\tlocal planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal p1, p2 =\
    \ 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\t\tp1 =\
    \ i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\tif p1\
    \ == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tfor i = p1 +\
    \ 1, p2 - 1 do\n\t\ttable.insert(res, planets[i])\n\tend\n\treturn res\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        local\
    \ temp = p1\n        p1 = p2\n        p2 = temp\n    end\n    local result = {}\n\
    \    for i = p1 + 1, p2 - 1 do\n        table.insert(result, planets[i])\n   \
    \ end\n    return result\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1 = 0\n    local\
    \ p2 = 0\n    local result = {}\n    for i, v in ipairs(planets) do\n        if\
    \ v == planet1 then\n            p1 = i\n        end\n        if v == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n  \
    \  end\n    for i = p1 + 1, p2 - 1 do\n        table.insert(result, planets[i])\n\
    \    end\n    return result\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = table.indexof(planets,\
    \ planet1), table.indexof(planets, planet2)\n    if p1 == nil or p2 == nil then\
    \ return {} end\n    local res = {}\n    for i = math.min(p1, p2) + 1, math.max(p1,\
    \ p2) - 1 do\n        table.insert(res, planets[i])\n    end\n    return res\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local result = {}\n    for i = p1 + 1, p2 - 1 do\n\
    \        table.insert(result, planets[i])\n    end\n    return result\nend", "\t\
    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif\
    \ v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2\
    \ = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\t\
    local res = {}\n\tif p1 > p2 then\n\t\tfor i = p2, p1 do\n\t\t\ttable.insert(res,\
    \ planets[i])\n\t\tend\n\telse\n\t\tfor i = p1, p2 do\n\t\t\ttable.insert(res,\
    \ planets[i])\n\t\tend\n\tend\n\treturn res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, planet in ipairs(planets) do\n        if planet ==\
    \ planet1 then\n            p1 = i\n        end\n        if planet == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    local result = {}\n    for i = p1 + 1, p2 - 1\
    \ do\n        table.insert(result, planets[i])\n    end\n    return result\nend",
  "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, v in ipairs(planets) do\n    if\
    \ v == planet1 then\n      p1 = i\n    end\n    if v == planet2 then\n      p2\
    \ = i\n    end\n  end\n  if p1 == 0 or p2 == 0 then\n    return {}\n  end\n  local\
    \ res = {}\n  for i = p1, p2 do\n    if i ~= p1 and i ~= p2 then\n      table.insert(res,\
    \ planets[i])\n    end\n  end\n  return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1 = 0\n    local p2 = 0\n    local result = {}\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n      \
    \  end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = -1, -1\n    for i, p in ipairs(planets) do\n        if p ==\
    \ planet1 then\n            p1 = i\n        end\n        if p == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == -1 or p2 == -1 then\n\
    \        return {}\n    end\n    local result = {}\n    if p1 < p2 then\n    \
    \    for i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local r = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(r, planets[i])\n\
    \    end\n    return r\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n \
    \   for i = p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n\
    \    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = table.indexof(planets,\
    \ planet1), table.indexof(planets, planet2)\n    if p1 == nil or p2 == nil then\
    \ return {} end\n    if p1 > p2 then p1, p2 = p2, p1 end\n    return table.slice(planets,\
    \ p1 + 1, p2)\nend", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars',\
    \ 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for\
    \ i, v in ipairs(planets) do\n        if v == planet1 then\n            p1 = i\n\
    \        end\n        if v == planet2 then\n            p2 = i\n        end\n\
    \    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n    if p1\
    \ > p2 then\n        p1, p2 = p2, p1\n    end\n    local res = {}\n    for i =\
    \ p1 + 1, p2 - 1 do\n        table.insert(res, planets[i])\n    end\n    return\
    \ res\nend", "  local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter',\
    \ 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 = 0, 0\n  for i, planet in ipairs(planets)\
    \ do\n    if planet == planet1 then p1 = i end\n    if planet == planet2 then\
    \ p2 = i end\n  end\n  if p1 == 0 or p2 == 0 then return {} end\n  if p1 > p2\
    \ then p1, p2 = p2, p1 end\n  local res = {}\n  for i = p1 + 1, p2 - 1 do\n  \
    \  table.insert(res, planets[i])\n  end\n  return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 > p2 then\n        for\
    \ i = p2, p1 do\n            table.insert(res, planets[i])\n        end\n    else\n\
    \        for i = p1, p2 do\n            table.insert(res, planets[i])\n      \
    \  end\n    end\n    return res\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2\
    \ = 0, 0\n    for i, planet in ipairs(planets) do\n        if planet == planet1\
    \ then\n            p1 = i\n        end\n        if planet == planet2 then\n \
    \           p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n   \
    \     return {}\n    end\n    local result = {}\n    if p1 < p2 then\n       \
    \ for i = p1 + 1, p2 - 1 do\n            table.insert(result, planets[i])\n  \
    \      end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(result,\
    \ planets[i])\n        end\n    end\n    return result\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i = 1, #planets do\n        if planets[i] == planet1\
    \ then\n            p1 = i\n        end\n        if planets[i] == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        res[#res + 1] = planets[i]\n\
    \    end\n    return res\nend", "    local planets = {'Mercury', 'Venus', 'Earth',\
    \ 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n\
    \    for i, v in ipairs(planets) do\n        if v == planet1 then\n          \
    \  p1 = i\n        end\n        if v == planet2 then\n            p2 = i\n   \
    \     end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n    end\n\
    \    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n\
    \            table.insert(result, planets[i])\n        end\n    else\n       \
    \ for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n  \
    \      end\n    end\n    return result\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n\
    \            p1 = i\n        end\n        if v == planet2 then\n            p2\
    \ = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n        return {}\n\
    \    end\n    local result = {}\n    if p1 < p2 then\n        for i = p1 + 1,\
    \ p2 - 1 do\n            table.insert(result, planets[i])\n        end\n    else\n\
    \        for i = p2 + 1, p1 - 1 do\n            table.insert(result, planets[i])\n\
    \        end\n    end\n    return result\nend", "\tlocal planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\tlocal\
    \ p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\t\tif v == planet1 then\n\t\
    \t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\tp2 = i\n\t\tend\n\tend\n\t\
    if p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\tlocal res = {}\n\tif p1 <\
    \ p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1 do\n\t\t\ttable.insert(res, planets[i])\n\
    \t\tend\n\tend\n\treturn res\nend", "    local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local i1, i2\
    \ = 0, 0\n    for i, v in ipairs(planets) do\n        if v == planet1 then\n \
    \           i1 = i\n        end\n        if v == planet2 then\n            i2\
    \ = i\n        end\n    end\n    if i1 == 0 or i2 == 0 then\n        return {}\n\
    \    end\n    local res = {}\n    if i1 < i2 then\n        for i = i1 + 1, i2\
    \ - 1 do\n            table.insert(res, planets[i])\n        end\n    else\n \
    \       for i = i2 + 1, i1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "  local planets = {'Mercury', 'Venus',\
    \ 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n  local p1, p2 =\
    \ 0, 0\n  for i, v in ipairs(planets) do\n    if v == planet1 then\n      p1 =\
    \ i\n    end\n    if v == planet2 then\n      p2 = i\n    end\n  end\n  if p1\
    \ == 0 or p2 == 0 then\n    return {}\n  end\n  local res = {}\n  for i = p1 +\
    \ 1, p2 - 1 do\n    table.insert(res, planets[i])\n  end\n  return res\nend",
  "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    if p1 > p2 then\n        p1,\
    \ p2 = p2, p1\n    end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n  \
    \      table.insert(res, planets[i])\n    end\n    return res\nend", "    local\
    \ planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus',\
    \ 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n  \
    \      if v == planet1 then\n            p1 = i\n        end\n        if v ==\
    \ planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2\
    \ == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 < p2 then\n\
    \        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n    if\
    \ p1 == nil or p2 == nil then\n        return {}\n    end\n    local res = {}\n\
    \    if p1 < p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    else\n        for i = p2 + 1, p1 - 1 do\n    \
    \        table.insert(res, planets[i])\n        end\n    end\n    return res\n\
    end", "\tlocal planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n\tlocal p1, p2 = 0, 0\n\tfor i, v in ipairs(planets) do\n\
    \t\tif v == planet1 then\n\t\t\tp1 = i\n\t\tend\n\t\tif v == planet2 then\n\t\t\
    \tp2 = i\n\t\tend\n\tend\n\tif p1 == 0 or p2 == 0 then\n\t\treturn {}\n\tend\n\
    \tlocal result = {}\n\tif p1 < p2 then\n\t\tfor i = p1 + 1, p2 - 1 do\n\t\t\t\
    table.insert(result, planets[i])\n\t\tend\n\telse\n\t\tfor i = p2 + 1, p1 - 1\
    \ do\n\t\t\ttable.insert(result, planets[i])\n\t\tend\n\tend\n\treturn result\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = table.find(planets, planet1), table.find(planets,\
    \ planet2)\n    if p1 and p2 then\n        local t = {}\n        for i = math.min(p1,\
    \ p2) + 1, math.max(p1, p2) - 1 do\n            table.insert(t, planets[i])\n\
    \        end\n        return t\n    end\n    return {}\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    local res = {}\n    if p1 < p2 then\n        for\
    \ i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n        end\n\
    \    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = 0, 0\n    for i, planet in ipairs(planets) do\n        if planet ==\
    \ planet1 then\n            p1 = i\n        end\n        if planet == planet2\
    \ then\n            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n\
    \        return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n  \
    \  end\n    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend", "    local planets = {'Mercury',\
    \ 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n    local\
    \ p1, p2 = table.find(planets, planet1), table.find(planets, planet2)\n    if\
    \ not p1 or not p2 then\n        return {}\n    end\n    if p1 > p2 then\n   \
    \     p1, p2 = p2, p1\n    end\n    return table.slice(planets, p1 + 1, p2)\n\
    end", "    local planets = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn',\
    \ 'Uranus', 'Neptune'}\n    local p1, p2 = 0, 0\n    for i, v in ipairs(planets)\
    \ do\n        if v == planet1 then\n            p1 = i\n        end\n        if\
    \ v == planet2 then\n            p2 = i\n        end\n    end\n    if p1 == 0\
    \ or p2 == 0 then\n        return {}\n    end\n    local res = {}\n    if p1 <\
    \ p2 then\n        for i = p1 + 1, p2 - 1 do\n            table.insert(res, planets[i])\n\
    \        end\n    else\n        for i = p2 + 1, p1 - 1 do\n            table.insert(res,\
    \ planets[i])\n        end\n    end\n    return res\nend", "    local planets\
    \ = {'Mercury', 'Venus', 'Earth', 'Mars', 'Jupiter', 'Saturn', 'Uranus', 'Neptune'}\n\
    \    local p1, p2 = 0, 0\n    for i, v in ipairs(planets) do\n        if v ==\
    \ planet1 then\n            p1 = i\n        end\n        if v == planet2 then\n\
    \            p2 = i\n        end\n    end\n    if p1 == 0 or p2 == 0 then\n  \
    \      return {}\n    end\n    if p1 > p2 then\n        p1, p2 = p2, p1\n    end\n\
    \    local res = {}\n    for i = p1 + 1, p2 - 1 do\n        table.insert(res,\
    \ planets[i])\n    end\n    return res\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

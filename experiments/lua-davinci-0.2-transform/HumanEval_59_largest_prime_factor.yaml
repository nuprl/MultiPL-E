name: HumanEval_59_largest_prime_factor
language: lua
prompt: "-- Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
  -- >>> largest_prime_factor(13195)\n-- 29\n-- >>> largest_prime_factor(2048)\n--\
  \ 2\nlocal function largest_prime_factor(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = largest_prime_factor\n\
  \    lu.assertEquals(candidate(15), 5)\n    lu.assertEquals(candidate(27), 3)\n\
  \    lu.assertEquals(candidate(63), 7)\n    lu.assertEquals(candidate(330), 11)\n\
  \    lu.assertEquals(candidate(13195), 29)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local i = 2\n    while i <= n do\n        if n % i == 0 then\n\
    \            n = n / i\n        else\n            i = i + 1\n        end\n   \
    \ end\n    return i\nend", "    local p = 2\n    while p * p <= n do\n       \
    \ if n % p == 0 then\n            n = n / p\n        else\n            p = p +\
    \ 1\n        end\n    end\n    return n\nend", "    local largest_prime = 1\n\
    \    local i = 2\n    while i <= n do\n        if n % i == 0 then\n          \
    \  largest_prime = i\n            n = n / i\n        else\n            i = i +\
    \ 1\n        end\n    end\n    return largest_prime\nend", "  local i = 2\n  while\
    \ i < n do\n    if n % i == 0 then\n      n = n / i\n    else\n      i = i + 1\n\
    \    end\n  end\n  return n\nend", "  local p = 2\n  while p * p <= n do\n   \
    \ if n % p == 0 then\n      n = n / p\n    else\n      p = p + 1\n    end\n  end\n\
    \  return n\nend", "    local largest_prime = 1\n    local i = 2\n    while i\
    \ <= n do\n        if n % i == 0 then\n            largest_prime = i\n       \
    \     n = n / i\n        else\n            i = i + 1\n        end\n    end\n \
    \   return largest_prime\nend", "    local largest_prime = 1\n    local i = 2\n\
    \    while i <= n do\n        if n % i == 0 then\n            largest_prime =\
    \ i\n            n = n / i\n        else\n            i = i + 1\n        end\n\
    \    end\n    return largest_prime\nend", "  local i = 2\n  while i <= n do\n\
    \    if n % i == 0 then\n      n = n / i\n    else\n      i = i + 1\n    end\n\
    \  end\n  return i\nend", "  local i = 2\n  while i <= n do\n    if n % i == 0\
    \ then\n      n = n / i\n    else\n      i = i + 1\n    end\n  end\n  return i\n\
    end", "    local i = 2\n    while i * i <= n do\n        if n % i == 0 then\n\
    \            n = n / i\n        else\n            i = i + 1\n        end\n   \
    \ end\n    return n\nend", "    local p = 2\n    while n % p == 0 do\n       \
    \ n = n / p\n    end\n    p = 3\n    while n > 1 do\n        while n % p == 0\
    \ do\n            n = n / p\n        end\n        p = p + 2\n    end\n    return\
    \ p - 2\nend", "  local i = 2\n  while i <= n do\n    if n % i == 0 then\n   \
    \   n = n / i\n    else\n      i = i + 1\n    end\n  end\n  return i\nend", " \
    \ local i = 2\n  while i <= n do\n    if n % i == 0 then\n      n = n / i\n  \
    \  else\n      i = i + 1\n    end\n  end\n  return i\nend", "  local largest_prime\
    \ = 1\n  for i = 2, math.sqrt(n) do\n    if n % i == 0 then\n      largest_prime\
    \ = math.max(largest_prime, largest_prime_factor(i))\n      largest_prime = math.max(largest_prime,\
    \ largest_prime_factor(n / i))\n    end\n  end\n  return largest_prime\nend",
  "  local largest = 1\n  local i = 2\n  while i <= n do\n    if n % i == 0 then\n\
    \      largest = i\n      n = n / i\n    else\n      i = i + 1\n    end\n  end\n\
    \  return largest\nend", "    local i = 2\n    while i < n do\n        if n %\
    \ i == 0 then\n            n = n / i\n        else\n            i = i + 1\n  \
    \      end\n    end\n    return n\nend", "    local i = 2\n    while i * i <=\
    \ n do\n        if n % i == 0 then\n            n = n / i\n        else\n    \
    \        i = i + 1\n        end\n    end\n    return n\nend", "  local i = 2\n\
    \  while i <= n do\n    if n % i == 0 then\n      n = n / i\n    else\n      i\
    \ = i + 1\n    end\n  end\n  return i\nend", "  local largest = 1\n  local i =\
    \ 2\n  while i <= n do\n    if n % i == 0 then\n      largest = i\n      n = n\
    \ / i\n    else\n      i = i + 1\n    end\n  end\n  return largest\nend", "  local\
    \ i = 2\n  while i <= n do\n    if n % i == 0 then\n      n = n / i\n    else\n\
    \      i = i + 1\n    end\n  end\n  return i\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

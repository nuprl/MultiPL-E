language: lua
name: HumanEval_66_digitSum
results:
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 1
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:upper() == c then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpfgkosgpm.lua:37:\
    \ expected: 151, actual: 310\nstack traceback:\n\t/tmp/tmpfgkosgpm.lua:37: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:byte()\
    \ >= 65 and c:byte() <= 90 then\n            sum = sum + c:byte()\n        end\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    if s:byte(i) >= 65 and s:byte(i) <= 90 then\n   \
    \   sum = sum + s:byte(i)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local ci =\
    \ c:byte()\n        if ci >= 65 and ci <= 90 then\n            sum = sum + ci\n\
    \        end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() >= 65 and\
    \ c:byte() <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    if char:match('%u')\
    \ then\n      sum = sum + string.byte(char)\n    end\n  end\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + string.byte(c)\n        end\n    end\n    return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local code = c:byte()\n\
    \    if code >= 65 and code <= 90 then\n      sum = sum + code\n    end\n  end\n\
    \  return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() >= 65 and\
    \ c:byte() <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    if char:match('%u')\
    \ then\n      sum = sum + string.byte(char)\n    end\n  end\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:byte() >= 65 and\
    \ c:byte() <= 90 then\n      sum = sum + c:byte()\n    end\n  end\n  return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        local n =\
    \ c:byte()\n        if n >= 65 and n <= 90 then\n            sum = sum + n\n \
    \       end\n    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:byte()\
    \ >= 65 and c:byte() <= 90 then\n            sum = sum + c:byte()\n        end\n\
    \    end\n    return sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local char = s:sub(i, i)\n    if char:match('%u')\
    \ then\n      sum = sum + string.byte(char)\n    end\n  end\n  return sum\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = c:byte()\n \
    \   if n >= 65 and n <= 90 then\n      sum = sum + n\n    end\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = c:byte()\n \
    \   if n >= 65 and n <= 90 then\n      sum = sum + n\n    end\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = c:byte()\n \
    \   if n >= 65 and n <= 90 then\n      sum = sum + n\n    end\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + string.byte(c)\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + string.byte(c)\n        end\n    end\n    return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n    local sum\
    \ = 0\n    for i = 1, #s do\n        local c = s:sub(i, i)\n        if c:match('%u')\
    \ then\n            sum = sum + c:byte()\n        end\n    end\n    return sum\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digitSum\n\
    \    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    if c:match('%u') then\n\
    \      sum = sum + c:byte()\n    end\n  end\n  return sum\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = digitSum\n    lu.assertEquals(candidate(''),\
    \ 0)\n    lu.assertEquals(candidate('abAB'), 131)\n    lu.assertEquals(candidate('abcCd'),\
    \ 67)\n    lu.assertEquals(candidate('helloE'), 69)\n    lu.assertEquals(candidate('woArBld'),\
    \ 131)\n    lu.assertEquals(candidate('aAaaaXa'), 153)\n    lu.assertEquals(candidate('\
    \ How are yOu?'), 151)\n    lu.assertEquals(candidate('You arE Very Smart'), 327)\n\
    end\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750341
- exit_code: 0
  program: "-- Task\n-- Write a function that takes a string as input and returns\
    \ the sum of the upper characters only'\n-- ASCII codes.\n-- Examples:\n-- >>>\
    \ digitSum('')\n-- 0\n-- >>> digitSum('abAB')\n-- 131\n-- >>> digitSum('abcCd')\n\
    -- 67\n-- >>> digitSum('helloE')\n-- 69\n-- >>> digitSum('woArBld')\n-- 131\n\
    -- >>> digitSum('aAaaaXa')\n-- 153\nlocal function digitSum(s)\n  local sum =\
    \ 0\n  for i = 1, #s do\n    local c = s:sub(i, i)\n    local n = c:byte()\n \
    \   if n >= 65 and n <= 90 then\n      sum = sum + n\n    end\n  end\n  return\
    \ sum\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = digitSum\n    lu.assertEquals(candidate(''), 0)\n    lu.assertEquals(candidate('abAB'),\
    \ 131)\n    lu.assertEquals(candidate('abcCd'), 67)\n    lu.assertEquals(candidate('helloE'),\
    \ 69)\n    lu.assertEquals(candidate('woArBld'), 131)\n    lu.assertEquals(candidate('aAaaaXa'),\
    \ 153)\n    lu.assertEquals(candidate(' How are yOu?'), 151)\n    lu.assertEquals(candidate('You\
    \ arE Very Smart'), 327)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659794892

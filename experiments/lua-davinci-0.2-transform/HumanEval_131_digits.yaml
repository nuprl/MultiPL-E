name: HumanEval_131_digits
language: lua
prompt: "-- Given a positive integer n, return the product of the odd digits.\n--\
  \ Return 0 if all digits are even.\n-- For example:\n-- >>> digits(1)\n-- 1\n--\
  \ >>> digits(4)\n-- 0\n-- >>> digits(235)\n-- 15\nlocal function digits(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = digits\n\
  \    lu.assertEquals(candidate(5), 5)\n    lu.assertEquals(candidate(54), 5)\n \
  \   lu.assertEquals(candidate(120), 1)\n    lu.assertEquals(candidate(5014), 5)\n\
  \    lu.assertEquals(candidate(98765), 315)\n    lu.assertEquals(candidate(5576543),\
  \ 2625)\n    lu.assertEquals(candidate(2468), 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local product = 1\n    while n > 0 do\n        local digit = n\
    \ % 10\n        if digit % 2 == 1 then\n            product = product * digit\n\
    \        end\n        n = math.floor(n / 10)\n    end\n    return product\nend",
  "    local result = 1\n    while n > 0 do\n        local digit = n % 10\n      \
    \  if digit % 2 == 1 then\n            result = result * digit\n        end\n\
    \        n = math.floor(n / 10)\n    end\n    return result\nend", "  local product\
    \ = 1\n  while n > 0 do\n    local digit = n % 10\n    if digit % 2 == 1 then\n\
    \      product = product * digit\n    end\n    n = math.floor(n / 10)\n  end\n\
    \  return product\nend", "  local product = 1\n  while n > 0 do\n    local d =\
    \ n % 10\n    if d % 2 == 1 then\n      product = product * d\n    end\n    n\
    \ = math.floor(n / 10)\n  end\n  return product\nend", "  local product = 1\n\
    \  while n > 0 do\n    local digit = n % 10\n    if digit % 2 == 1 then\n    \
    \  product = product * digit\n    end\n    n = math.floor(n / 10)\n  end\n  return\
    \ product\nend", "    if n < 10 then\n        return n % 2 == 1 and n or 0\n \
    \   else\n        return (n % 10 % 2 == 1 and n % 10 or 1) * digits(math.floor(n\
    \ / 10))\n    end\nend", "    local result = 1\n    while n > 0 do\n        local\
    \ d = n % 10\n        if d % 2 == 1 then\n            result = result * d\n  \
    \      end\n        n = (n - d) / 10\n    end\n    return result\nend", "  local\
    \ product = 1\n  while n > 0 do\n    local digit = n % 10\n    if digit % 2 ==\
    \ 1 then\n      product = product * digit\n    end\n    n = math.floor(n / 10)\n\
    \  end\n  return product\nend", "    local product = 1\n    while n > 0 do\n \
    \       local digit = n % 10\n        if digit % 2 == 1 then\n            product\
    \ = product * digit\n        end\n        n = math.floor(n / 10)\n    end\n  \
    \  return product\nend", "    local product = 1\n    while n > 0 do\n        local\
    \ digit = n % 10\n        if digit % 2 == 1 then\n            product = product\
    \ * digit\n        end\n        n = math.floor(n / 10)\n    end\n    return product\n\
    end", "  local product = 1\n  while n > 0 do\n    local digit = n % 10\n    if\
    \ digit % 2 == 1 then\n      product = product * digit\n    end\n    n = math.floor(n\
    \ / 10)\n  end\n  return product\nend", "    local product = 1\n    while n >\
    \ 0 do\n        local digit = n % 10\n        if digit % 2 == 1 then\n       \
    \     product = product * digit\n        end\n        n = math.floor(n / 10)\n\
    \    end\n    return product\nend", "    local product = 1\n    while n > 0 do\n\
    \        local digit = n % 10\n        if digit % 2 == 1 then\n            product\
    \ = product * digit\n        end\n        n = math.floor(n / 10)\n    end\n  \
    \  return product\nend", "  local product = 1\n  while n > 0 do\n    local digit\
    \ = n % 10\n    if digit % 2 == 1 then\n      product = product * digit\n    end\n\
    \    n = math.floor(n / 10)\n  end\n  return product\nend", "  local product =\
    \ 1\n  while n > 0 do\n    local digit = n % 10\n    if digit % 2 == 1 then\n\
    \      product = product * digit\n    end\n    n = math.floor(n / 10)\n  end\n\
    \  return product\nend", "  local result = 1\n  while n > 0 do\n    local digit\
    \ = n % 10\n    if digit % 2 == 1 then\n      result = result * digit\n    end\n\
    \    n = math.floor(n / 10)\n  end\n  return result\nend", "  local product =\
    \ 1\n  while n > 0 do\n    local digit = n % 10\n    if digit % 2 == 1 then\n\
    \      product = product * digit\n    end\n    n = math.floor(n / 10)\n  end\n\
    \  return product\nend", "    local result = 1\n    while n > 0 do\n        local\
    \ digit = n % 10\n        if digit % 2 == 1 then\n            result = result\
    \ * digit\n        end\n        n = math.floor(n / 10)\n    end\n    return result\n\
    end", "  local product = 1\n  while n > 0 do\n    local digit = n % 10\n    if\
    \ digit % 2 == 1 then\n      product = product * digit\n    end\n    n = (n -\
    \ digit) / 10\n  end\n  return product\nend", "  local product = 1\n  while n\
    \ > 0 do\n    local digit = n % 10\n    if digit % 2 == 1 then\n      product\
    \ = product * digit\n    end\n    n = math.floor(n / 10)\n  end\n  return product\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

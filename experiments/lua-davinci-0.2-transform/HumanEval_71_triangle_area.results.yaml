language: lua
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    local p = (a + b + c) / 2\n    local\
    \ area = math.sqrt(p * (p - a) * (p - b) * (p - c))\n    if area == 0 then\n \
    \       return -1\n    else\n        return area\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcyuk0p31.lua:25:\
    \ expected: -1, actual: #NaN\nstack traceback:\n\t/tmp/tmpcyuk0p31.lua:25: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptsbr4v0_.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptsbr4v0_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjql5bw9.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptjql5bw9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjql5bw9.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptjql5bw9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjql5bw9.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptjql5bw9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        return (a + b + c) / 2\n    else\n        return -1\n  \
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo91z17ll.lua:24:\
    \ expected: 8.18, actual: 8.5\nstack traceback:\n\t/tmp/tmpo91z17ll.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjql5bw9.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptjql5bw9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    local s = (a + b + c) / 2\n    local\
    \ area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    return area > 0 and area\
    \ or -1\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = triangle_area\n    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpov0da5wj.lua:22:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmpov0da5wj.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    local s = (a + b + c) / 2\n    local\
    \ area = math.sqrt(s * (s - a) * (s - b) * (s - c))\n    if area > 0 then\n  \
    \      return area\n    else\n        return -1\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn8xt3p2h.lua:26:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmpn8xt3p2h.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptsbr4v0_.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptsbr4v0_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjql5bw9.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptjql5bw9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptsbr4v0_.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptsbr4v0_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptsbr4v0_.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptsbr4v0_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c and a + c > b and b + c\
    \ > a then\n    local s = (a + b + c) / 2\n    return math.sqrt(s * (s - a) *\
    \ (s - b) * (s - c))\n  else\n    return -1\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplkmbni4q.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmplkmbni4q.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjql5bw9.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptjql5bw9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local p = (a + b + c) / 2\n        return math.sqrt(p *\
    \ (p - a) * (p - b) * (p - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjql5bw9.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptjql5bw9.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  if a + b > c and a + c > b and b + c\
    \ > a then\n    local p = (a + b + c) / 2\n    return math.sqrt(p * (p - a) *\
    \ (p - b) * (p - c))\n  else\n    return -1\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = triangle_area\n    lu.assertEquals(candidate(3,\
    \ 4, 5), 6.0)\n    lu.assertEquals(candidate(1, 2, 10), -1)\n    lu.assertEquals(candidate(4,\
    \ 8, 5), 8.18)\n    lu.assertEquals(candidate(2, 2, 2), 1.73)\n    lu.assertEquals(candidate(1,\
    \ 2, 3), -1)\n    lu.assertEquals(candidate(10, 5, 7), 16.25)\n    lu.assertEquals(candidate(2,\
    \ 6, 3), -1)\n    lu.assertEquals(candidate(1, 1, 1), 0.43)\n    lu.assertEquals(candidate(2,\
    \ 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbhnwrv5w.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmpbhnwrv5w.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.010 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptsbr4v0_.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptsbr4v0_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526
- exit_code: 0
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n  local s = (a + b + c) / 2\n  local area\
    \ = math.sqrt(s * (s - a) * (s - b) * (s - c))\n  if area > 0 then\n    return\
    \ math.floor(area * 100 + 0.5) / 100\n  else\n    return -1\n  end\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659750526
- exit_code: 1
  program: "-- Given the lengths of the three sides of a triangle. Return the area\
    \ of\n-- the triangle rounded to 2 decimal points if the three sides form a valid\
    \ triangle. \n-- Otherwise return -1\n-- Three sides make a valid triangle when\
    \ the sum of any two sides is greater \n-- than the third side.\n-- Example:\n\
    -- >>> triangle_area(3, 4, 5)\n-- 6.0\n-- >>> triangle_area(1, 2, 10)\n-- -1\n\
    local function triangle_area(a, b, c)\n    if a + b > c and a + c > b and b +\
    \ c > a then\n        local s = (a + b + c) / 2\n        return math.sqrt(s *\
    \ (s - a) * (s - b) * (s - c))\n    else\n        return -1\n    end\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = triangle_area\n\
    \    lu.assertEquals(candidate(3, 4, 5), 6.0)\n    lu.assertEquals(candidate(1,\
    \ 2, 10), -1)\n    lu.assertEquals(candidate(4, 8, 5), 8.18)\n    lu.assertEquals(candidate(2,\
    \ 2, 2), 1.73)\n    lu.assertEquals(candidate(1, 2, 3), -1)\n    lu.assertEquals(candidate(10,\
    \ 5, 7), 16.25)\n    lu.assertEquals(candidate(2, 6, 3), -1)\n    lu.assertEquals(candidate(1,\
    \ 1, 1), 0.43)\n    lu.assertEquals(candidate(2, 2, 10), -1)\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptsbr4v0_.lua:25:\
    \ expected: 8.18, actual: 8.1815340859768\nstack traceback:\n\t/tmp/tmptsbr4v0_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659750526

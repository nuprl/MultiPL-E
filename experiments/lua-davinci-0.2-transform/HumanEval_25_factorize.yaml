name: HumanEval_25_factorize
language: lua
prompt: "-- Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n-- Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n-- Input number should be equal\
  \ to the product of all factors\n-- >>> factorize(8)\n-- {2, 2, 2}\n-- >>> factorize(25)\n\
  -- {5, 5}\n-- >>> factorize(70)\n-- {2, 5, 7}\nlocal function factorize(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = factorize\n\
  \    lu.assertEquals(candidate(2), {2})\n    lu.assertEquals(candidate(4), {2, 2})\n\
  \    lu.assertEquals(candidate(8), {2, 2, 2})\n    lu.assertEquals(candidate(57),\
  \ {3, 19})\n    lu.assertEquals(candidate(3249), {3, 3, 19, 19})\n    lu.assertEquals(candidate(185193),\
  \ {3, 3, 3, 19, 19, 19})\n    lu.assertEquals(candidate(20577), {3, 19, 19, 19})\n\
  \    lu.assertEquals(candidate(18), {2, 3, 3})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local factors = {}\n    local d = 2\n    while n > 1 do\n     \
    \   while n % d == 0 do\n            table.insert(factors, d)\n            n =\
    \ n / d\n        end\n        d = d + 1\n    end\n    return factors\nend", " \
    \   local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local divisor = 2\n    while n > 1 do\n        while n % divisor ==\
    \ 0 do\n            table.insert(factors, divisor)\n            n = n / divisor\n\
    \        end\n        divisor = divisor + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n\
    \      table.insert(factors, d)\n      n = n / d\n    end\n    d = d + 1\n  end\n\
    \  return factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\
    \t\twhile n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\t\
    end\n\t\td = d + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n \
    \   local d = 2\n    while n > 1 do\n        while n % d == 0 do\n           \
    \ table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal divisor\
    \ = 2\n\twhile n > 1 do\n\t\twhile n % divisor == 0 do\n\t\t\ttable.insert(factors,\
    \ divisor)\n\t\t\tn = n / divisor\n\t\tend\n\t\tdivisor = divisor + 1\n\tend\n\
    \treturn factors\nend", "    local factors = {}\n    local divisor = 2\n    while\
    \ n > 1 do\n        while n % divisor == 0 do\n            table.insert(factors,\
    \ divisor)\n            n = n / divisor\n        end\n        divisor = divisor\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local d\
    \ = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local divisor = 2\n    while n > 1 do\n        while\
    \ n % divisor == 0 do\n            table.insert(factors, divisor)\n          \
    \  n = n / divisor\n        end\n        divisor = divisor + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local i = 2\n    while n > 1 do\n\
    \        while n % i == 0 do\n            table.insert(factors, i)\n         \
    \   n = n / i\n        end\n        i = i + 1\n    end\n    return factors\nend",
  "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n\
    \      factors[#factors + 1] = d\n      n = n / d\n    end\n    d = d + 1\n  end\n\
    \  return factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local divisor = 2\n    while n > 1 do\n        while n % divisor\
    \ == 0 do\n            table.insert(factors, divisor)\n            n = n / divisor\n\
    \        end\n        divisor = divisor + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local last_factor = nil\n    local\
    \ factor_count = 0\n    local i = 2\n    while n > 1 do\n        if n % i == 0\
    \ then\n            if last_factor ~= i then\n                if last_factor ~=\
    \ nil then\n                    table.insert(factors, last_factor)\n         \
    \           table.insert(factors, factor_count)\n                end\n       \
    \         last_factor = i\n                factor_count = 1\n            else\n\
    \                factor_count = factor_count + 1\n            end\n          \
    \  n = n / i\n        else\n            i = i + 1\n        end\n    end\n    table.insert(factors,\
    \ last_factor)\n    table.insert(factors, factor_count)\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\
    \tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors\
    \ + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "  local factors = {}\n\
    \  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n      table.insert(factors,\
    \ d)\n      n = n / d\n    end\n    d = d + 1\n  end\n  return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n  \
    \      end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n    \
    \        table.insert(factors, i)\n            n = n / i\n        else\n     \
    \       i = i + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    for i = 2, n do\n        if n % i == 0 then\n            table.insert(factors,\
    \ i)\n            n = n / i\n            i = i - 1\n        end\n    end\n   \
    \ return factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    local divisor = 2\n    while n > 1 do\n   \
    \     while n % divisor == 0 do\n            n = n / divisor\n            table.insert(factors,\
    \ divisor)\n        end\n        divisor = divisor + 1\n    end\n    return factors\n\
    end", "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d\
    \ == 0 do\n      table.insert(factors, d)\n      n = n / d\n    end\n    d = d\
    \ + 1\n  end\n  return factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "\tlocal factors\
    \ = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "    local factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i ==\
    \ 0 then\n            table.insert(factors, i)\n            n = n / i\n      \
    \  else\n            i = i + 1\n        end\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while\
    \ n % d == 0 do\n      factors[#factors + 1] = d\n      n = n / d\n    end\n \
    \   d = d + 1\n  end\n  return factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local divisor = 2\n    while n >\
    \ 1 do\n        while n % divisor == 0 do\n            table.insert(factors, divisor)\n\
    \            n = n / divisor\n        end\n        divisor = divisor + 1\n   \
    \ end\n    return factors\nend", "    local factors = {}\n    local d = 2\n  \
    \  while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  while n % 2 == 0 do\n        table.insert(factors, 2)\n        n = n / 2\n\
    \    end\n    for i = 3, math.sqrt(n), 2 do\n        while n % i == 0 do\n   \
    \         table.insert(factors, i)\n            n = n / i\n        end\n    end\n\
    \    if n > 2 then\n        table.insert(factors, n)\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n\
    \            table.insert(factors, i)\n            n = n / i\n        else\n \
    \           i = i + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            factors[#factors + 1] = d\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n          \
    \  table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local i\
    \ = 2\n    while n > 1 do\n        while n % i == 0 do\n            table.insert(factors,\
    \ i)\n            n = n / i\n        end\n        i = i + 1\n    end\n    return\
    \ factors\nend", "  local factors = {}\n  local i = 2\n  while n > 1 do\n    if\
    \ n % i == 0 then\n      table.insert(factors, i)\n      n = n / i\n    else\n\
    \      i = i + 1\n    end\n  end\n  return factors\nend", "\tlocal factors = {}\n\
    \tlocal i = 2\n\twhile i <= n do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors,\
    \ i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local divisor = 2\n    while n > 1 do\n        while n % divisor == 0 do\n\
    \            n = n / divisor\n            table.insert(factors, divisor)\n   \
    \     end\n        divisor = divisor + 1\n    end\n    return factors\nend", " \
    \   local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local i = 2\n    while n > 1 do\n\
    \        if n % i == 0 then\n            table.insert(factors, i)\n          \
    \  n = n / i\n        else\n            i = i + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local divisor = 2\n    while n >\
    \ 1 do\n        while n % divisor == 0 do\n            table.insert(factors, divisor)\n\
    \            n = n / divisor\n        end\n        divisor = divisor + 1\n   \
    \ end\n    return factors\nend", "  local factors = {}\n  local d = 2\n  while\
    \ n > 1 do\n    while n % d == 0 do\n      factors[#factors + 1] = d\n      n\
    \ = n / d\n    end\n    d = d + 1\n  end\n  return factors\nend", "  local factors\
    \ = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n      table.insert(factors,\
    \ d)\n      n = n / d\n    end\n    d = d + 1\n  end\n  return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n\
    \      table.insert(factors, d)\n      n = n / d\n    end\n    d = d + 1\n  end\n\
    \  return factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d\
    \ == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d\
    \ + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local divisor = 2\n    while n > 1 do\n        while\
    \ n % divisor == 0 do\n            n = n / divisor\n            table.insert(factors,\
    \ divisor)\n        end\n        divisor = divisor + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "  local factors\
    \ = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n      table.insert(factors,\
    \ d)\n      n = n / d\n    end\n    d = d + 1\n  end\n  return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local i = 2\n    while i <= n do\n        if n % i == 0 then\n   \
    \         table.insert(factors, i)\n            n = n / i\n        else\n    \
    \        i = i + 1\n        end\n    end\n    return factors\nend", "  local factors\
    \ = {}\n  local i = 2\n  while n > 1 do\n    if n % i == 0 then\n      table.insert(factors,\
    \ i)\n      n = n / i\n    else\n      i = i + 1\n    end\n  end\n  return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local divisor = 2\n    while n > 1 do\n        while n % divisor == 0 do\n\
    \            table.insert(factors, divisor)\n            n = n / divisor\n   \
    \     end\n        divisor = divisor + 1\n    end\n    return factors\nend", " \
    \   local factors = {}\n    local i = 2\n    while n > 1 do\n        while n %\
    \ i == 0 do\n            table.insert(factors, i)\n            n = n / i\n   \
    \     end\n        i = i + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local i = 2\n    while n > 1 do\n        while n % i == 0 do\n   \
    \         table.insert(factors, i)\n            n = n / i\n        end\n     \
    \   i = i + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local i = 2\n    while n > 1 do\n        if n % i == 0 then\n            table.insert(factors,\
    \ i)\n            n = n / i\n        else\n            i = i + 1\n        end\n\
    \    end\n    return factors\nend", "    local factors = {}\n    local d = 2\n\
    \    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            factors[#factors + 1] = d\n        \
    \    n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n          \
    \  table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local d\
    \ = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n\
    \            table.insert(factors, i)\n            n = n / i\n        else\n \
    \           i = i + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local divisor = 2\n    while n > 1 do\n        while n % divisor\
    \ == 0 do\n            n = n / divisor\n            table.insert(factors, divisor)\n\
    \        end\n        divisor = divisor + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local i = 2\n    while n > 1 do\n        while n % i == 0 do\n            table.insert(factors,\
    \ i)\n            n = n / i\n        end\n        i = i + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local divisor = 2\n    while n >\
    \ 1 do\n        while n % divisor == 0 do\n            n = n / divisor\n     \
    \       table.insert(factors, divisor)\n        end\n        divisor = divisor\
    \ + 1\n    end\n    return factors\nend", "    local result = {}\n    local d\
    \ = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(result,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ result\nend", "    local factors = {}\n    local i = 2\n    while n > 1 do\n\
    \        while n % i == 0 do\n            n = n / i\n            table.insert(factors,\
    \ i)\n        end\n        i = i + 1\n    end\n    return factors\nend", "   \
    \ local factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d\
    \ == 0 do\n            table.insert(factors, d)\n            n = n / d\n     \
    \   end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\t\
    while n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\
    \t\td = d + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i ==\
    \ 0 then\n            table.insert(factors, i)\n            n = n / i\n      \
    \  else\n            i = i + 1\n        end\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n  \
    \      end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while\
    \ n % d == 0 do\n      table.insert(factors, d)\n      n = n / d\n    end\n  \
    \  d = d + 1\n  end\n  return factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n    \
    \        table.insert(factors, i)\n            n = n / i\n        else\n     \
    \       i = i + 1\n        end\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local i = 2\n    while n > 1 do\n        while n % i == 0\
    \ do\n            table.insert(factors, i)\n            n = n / i\n        end\n\
    \        i = i + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local i = 2\n    while n > 1 do\n        if n % i == 0 then\n           \
    \ table.insert(factors, i)\n            n = n / i\n        else\n            i\
    \ = i + 1\n        end\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal\
    \ d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\tfactors[#factors + 1]\
    \ = d\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         factors[#factors + 1] = d\n            n = n / d\n        end\n    \
    \    d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n \
    \   local d = 2\n    while n > 1 do\n        while n % d == 0 do\n           \
    \ table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "  local factors = {}\n  local i = 2\n\
    \  while n > 1 do\n    if n % i == 0 then\n      table.insert(factors, i)\n  \
    \    n = n / i\n    else\n      i = i + 1\n    end\n  end\n  return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n          \
    \  factors[#factors + 1] = d\n            n = n / d\n        end\n        d =\
    \ d + 1\n    end\n    return factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local divisor = 2\n    while n > 1 do\n        while n % divisor == 0 do\n\
    \            n = n / divisor\n            table.insert(factors, divisor)\n   \
    \     end\n        divisor = divisor + 1\n    end\n    return factors\nend", " \
    \   local factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i\
    \ == 0 then\n            table.insert(factors, i)\n            n = n / i\n   \
    \     else\n            i = i + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local divisor = 2\n    while n > 1 do\n        while n % divisor\
    \ == 0 do\n            table.insert(factors, divisor)\n            n = n / divisor\n\
    \        end\n        divisor = divisor + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i ==\
    \ 0 then\n            table.insert(factors, i)\n            n = n / i\n      \
    \  else\n            i = i + 1\n        end\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "  local factors\
    \ = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n      factors[#factors\
    \ + 1] = d\n      n = n / d\n    end\n    d = d + 1\n  end\n  return factors\n\
    end", "    local factors = {}\n    local i = 2\n    while n > 1 do\n        if\
    \ n % i == 0 then\n            factors[#factors + 1] = i\n            n = n /\
    \ i\n        else\n            i = i + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "\tlocal factors = {}\n\
    \tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\t\t\ttable.insert(factors,\
    \ d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\treturn factors\nend",
  "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\twhile n % d == 0 do\n\
    \t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\t\td = d + 1\n\tend\n\
    \treturn factors\nend", "    local factors = {}\n    local d = 2\n    while n\
    \ > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "    local result = {}\n    local i = 2\n    while i <= n do\n        if\
    \ n % i == 0 then\n            table.insert(result, i)\n            n = n / i\n\
    \        else\n            i = i + 1\n        end\n    end\n    return result\n\
    end", "    local factors = {}\n    local i = 2\n    while n > 1 do\n        if\
    \ n % i == 0 then\n            factors[#factors + 1] = i\n            n = n /\
    \ i\n        else\n            i = i + 1\n        end\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n          \
    \  table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local i\
    \ = 2\n    while n > 1 do\n        if n % i == 0 then\n            table.insert(factors,\
    \ i)\n            n = n / i\n        else\n            i = i + 1\n        end\n\
    \    end\n    return factors\nend", "\tlocal factors = {}\n\tlocal i = 2\n\twhile\
    \ n > 1 do\n\t\tif n % i == 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn =\
    \ n / i\n\t\telse\n\t\t\ti = i + 1\n\t\tend\n\tend\n\treturn factors\nend", " \
    \   local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local divisor = 2\n    while n > 1 do\n        while n % divisor == 0 do\n\
    \            table.insert(factors, divisor)\n            n = n / divisor\n   \
    \     end\n        divisor = divisor + 1\n    end\n    return factors\nend", " \
    \   local factors = {}\n    local i = 2\n    while n > 1 do\n        if n % i\
    \ == 0 then\n            table.insert(factors, i)\n            n = n / i\n   \
    \     else\n            i = i + 1\n        end\n    end\n    return factors\n\
    end", "\tlocal factors = {}\n\tlocal i = 2\n\twhile n > 1 do\n\t\tif n % i ==\
    \ 0 then\n\t\t\ttable.insert(factors, i)\n\t\t\tn = n / i\n\t\telse\n\t\t\ti =\
    \ i + 1\n\t\tend\n\tend\n\treturn factors\nend", "    local factors = {}\n   \
    \ local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "  local factors = {}\n  local d = 2\n  while n > 1 do\n    while\
    \ n % d == 0 do\n      table.insert(factors, d)\n      n = n / d\n    end\n  \
    \  d = d + 1\n  end\n  return factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            factors[#factors\
    \ + 1] = d\n            n = n / d\n        end\n        d = d + 1\n    end\n \
    \   return factors\nend", "    local factors = {}\n    local d = 2\n    while\
    \ n > 1 do\n        while n % d == 0 do\n            table.insert(factors, d)\n\
    \            n = n / d\n        end\n        d = d + 1\n    end\n    return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0\
    \ do\n            table.insert(factors, d)\n            n = n / d\n        end\n\
    \        d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n\
    \    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n          \
    \  table.insert(factors, d)\n            n = n / d\n        end\n        d = d\
    \ + 1\n    end\n    return factors\nend", "    local factors = {}\n    local d\
    \ = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local i = 2\n    while n > 1 do\n\
    \        if n % i == 0 then\n            table.insert(factors, i)\n          \
    \  n = n / i\n        else\n            i = i + 1\n        end\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            factors[#factors + 1] = d\n            n = n / d\n  \
    \      end\n        d = d + 1\n    end\n    return factors\nend", "  local factors\
    \ = {}\n  local divisor = 2\n  while n > 1 do\n    while n % divisor == 0 do\n\
    \      n = n / divisor\n      table.insert(factors, divisor)\n    end\n    divisor\
    \ = divisor + 1\n  end\n  return factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\t\
    while n % d == 0 do\n\t\t\ttable.insert(factors, d)\n\t\t\tn = n / d\n\t\tend\n\
    \t\td = d + 1\n\tend\n\treturn factors\nend", "  local factors = {}\n  local d\
    \ = 2\n  while n > 1 do\n    while n % d == 0 do\n      factors[#factors + 1]\
    \ = d\n      n = n / d\n    end\n    d = d + 1\n  end\n  return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local i = 2\n    while n > 1 do\n        while n %\
    \ i == 0 do\n            table.insert(factors, i)\n            n = n / i\n   \
    \     end\n        i = i + 1\n    end\n    return factors\nend", "  local factors\
    \ = {}\n  local d = 2\n  while n > 1 do\n    while n % d == 0 do\n      factors[#factors\
    \ + 1] = d\n      n = n / d\n    end\n    d = d + 1\n  end\n  return factors\n\
    end", "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while\
    \ n % d == 0 do\n            table.insert(factors, d)\n            n = n / d\n\
    \        end\n        d = d + 1\n    end\n    return factors\nend", "    local\
    \ factors = {}\n    local factor = 2\n    while n > 1 do\n        while n % factor\
    \ == 0 do\n            table.insert(factors, factor)\n            n = n / factor\n\
    \        end\n        factor = factor + 1\n    end\n    return factors\nend",
  "    local factors = {}\n    local d = 2\n    while n > 1 do\n        while n %\
    \ d == 0 do\n            table.insert(factors, d)\n            n = n / d\n   \
    \     end\n        d = d + 1\n    end\n    return factors\nend", "    local factors\
    \ = {}\n    local d = 2\n    while n > 1 do\n        while n % d == 0 do\n   \
    \         table.insert(factors, d)\n            n = n / d\n        end\n     \
    \   d = d + 1\n    end\n    return factors\nend", "    local factors = {}\n  \
    \  local d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local i = 2\n    while n > 1 do\n\
    \        if n % i == 0 then\n            table.insert(factors, i)\n          \
    \  n = n / i\n        else\n            i = i + 1\n        end\n    end\n    return\
    \ factors\nend", "\tlocal factors = {}\n\tlocal d = 2\n\twhile n > 1 do\n\t\t\
    while n % d == 0 do\n\t\t\tfactors[#factors + 1] = d\n\t\t\tn = n / d\n\t\tend\n\
    \t\td = d + 1\n\tend\n\treturn factors\nend", "    local factors = {}\n    local\
    \ d = 2\n    while n > 1 do\n        while n % d == 0 do\n            table.insert(factors,\
    \ d)\n            n = n / d\n        end\n        d = d + 1\n    end\n    return\
    \ factors\nend", "    local factors = {}\n    local d = 2\n    while n > 1 do\n\
    \        while n % d == 0 do\n            table.insert(factors, d)\n         \
    \   n = n / d\n        end\n        d = d + 1\n    end\n    return factors\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_138_is_equal_to_sum_even
language: lua
prompt: "-- Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n-- Example\n-- >>> is_equal_to_sum_even(4)\n-- false\n\
  -- >>> is_equal_to_sum_even(6)\n-- false\n-- >>> is_equal_to_sum_even(8)\n-- true\n\
  local function is_equal_to_sum_even(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_equal_to_sum_even\n\
  \    lu.assertEquals(candidate(4), false)\n    lu.assertEquals(candidate(6), false)\n\
  \    lu.assertEquals(candidate(8), true)\n    lu.assertEquals(candidate(10), true)\n\
  \    lu.assertEquals(candidate(11), false)\n    lu.assertEquals(candidate(12), true)\n\
  \    lu.assertEquals(candidate(13), false)\n    lu.assertEquals(candidate(16), true)\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local sum = 0\n    local count = 0\n    for i = 2, n, 2 do\n  \
    \      sum = sum + i\n        count = count + 1\n        if sum == n and count\
    \ == 4 then\n            return true\n        end\n    end\n    return false\n\
    end", "    local sum = 0\n    for i = 1, n do\n        if i % 2 == 0 then\n  \
    \          sum = sum + i\n        end\n        if sum == n then\n            return\
    \ true\n        end\n    end\n    return false\nend", "    if n == 0 then\n  \
    \      return true\n    elseif n < 0 then\n        return false\n    else\n  \
    \      return is_equal_to_sum_even(n - 2)\n    end\nend", "    local sum = 0\n\
    \    for i = 1, n do\n        if is_even(i) then\n            sum = sum + i\n\
    \        end\n        if sum == n then\n            return true\n        end\n\
    \    end\n    return false\nend", "\tif n % 2 == 1 then\n\t\treturn false\n\t\
    end\n\tlocal sum = 0\n\tfor i = 1, n / 2 do\n\t\tif i % 2 == 0 then\n\t\t\tsum\
    \ = sum + i\n\t\tend\n\tend\n\treturn sum == n\nend", "    -- TODO: Implement\
    \ this function\nend", "    -- TODO: Implement this function\nend", "    -- TODO:\
    \ implement the function\nend", "  -- TODO: implement the function\nend", "  \
    \  if n % 2 == 1 then\n        return false\n    end\n    local sum = 0\n    for\
    \ i = 2, n, 2 do\n        sum = sum + i\n        if sum == n then\n          \
    \  return true\n        end\n    end\n    return false\nend", "    local sum =\
    \ 0\n    local count = 0\n    for i = 2, n, 2 do\n        sum = sum + i\n    \
    \    count = count + 1\n        if sum == n and count == 4 then\n            return\
    \ true\n        end\n    end\n    return false\nend", "  if n % 2 == 1 then return\
    \ false end\n  local sum = 0\n  for i = 2, n, 2 do\n    sum = sum + i\n    if\
    \ sum == n then return true end\n  end\n  return false\nend", "    local sum =\
    \ 0\n    for i = 1, n do\n        if i % 2 == 0 then\n            sum = sum +\
    \ i\n        end\n        if sum == n then\n            return true\n        end\n\
    \    end\n    return false\nend", "  -- TODO: implement this function\nend", " \
    \   if n % 2 == 1 then\n        return false\n    end\n    local sum = 0\n   \
    \ local count = 0\n    for i = 2, n, 2 do\n        sum = sum + i\n        count\
    \ = count + 1\n        if sum == n then\n            return true\n        end\n\
    \        if sum > n then\n            return false\n        end\n    end\n   \
    \ return false\nend", "    -- TODO: implement this function\nend", "    -- TODO:\
    \ implement this function\n    return false\nend", "    local sum = 0\n    local\
    \ count = 0\n    for i = 2, n, 2 do\n        sum = sum + i\n        count = count\
    \ + 1\n        if sum == n and count == 4 then\n            return true\n    \
    \    end\n    end\n    return false\nend", "    -- TODO: implement the function\n\
    end", "    -- TODO: implement this function\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

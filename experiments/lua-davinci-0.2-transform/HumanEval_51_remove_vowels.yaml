name: HumanEval_51_remove_vowels
language: lua
prompt: "-- remove_vowels is a function that takes string and returns string without\
  \ vowels.\n-- >>> remove_vowels('')\n-- ''\n-- >>> remove_vowels('abcdef')\n-- 'bcdf'\n\
  -- >>> remove_vowels('aaaaa')\n-- ''\n-- >>> remove_vowels('aaBAA')\n-- 'B'\n--\
  \ >>> remove_vowels('zbcd')\n-- 'zbcd'\nlocal function remove_vowels(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = remove_vowels\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('abcdef\\\
  nghijklm'), 'bcdf\\nghjklm')\n    lu.assertEquals(candidate('fedcba'), 'fdcb')\n\
  \    lu.assertEquals(candidate('eeeee'), '')\n    lu.assertEquals(candidate('acBAA'),\
  \ 'cB')\n    lu.assertEquals(candidate('EcBOO'), 'cB')\n    lu.assertEquals(candidate('ybcd'),\
  \ 'ybcd')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local char =\
    \ text:sub(i, i)\n        if not table.contains(vowels, char) then\n         \
    \   new_text = new_text .. char\n        end\n    end\n    return new_text\nend",
  "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local char = text:sub(i,\
    \ i)\n        if not table.contains(vowels, char) then\n            result = result\
    \ .. char\n        end\n    end\n    return result\nend", "    local vowels =\
    \ {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "    return text:gsub('[aeiou]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local char =\
    \ text:sub(i, i)\n        local is_vowel = false\n        for j = 1, #vowels do\n\
    \            if char == vowels[j] then\n                is_vowel = true\n    \
    \            break\n            end\n        end\n        if not is_vowel then\n\
    \            new_text = new_text .. char\n        end\n    end\n    return new_text\n\
    end", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local new_text = ''\n    for i = 1, #text do\n        local char =\
    \ text:sub(i, i)\n        if not contains(vowels, char) then\n            new_text\
    \ = new_text .. char\n        end\n    end\n    return new_text\nend", "    local\
    \ vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result\
    \ = ''\n    for i = 1, #text do\n        local char = text:sub(i, i)\n       \
    \ if not table.contains(vowels, char) then\n            result = result .. char\n\
    \        end\n    end\n    return result\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend", "    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O',\
    \ 'U'}\n    local result = ''\n    for i = 1, #text do\n        local c = text:sub(i,\
    \ i)\n        if not table.contains(vowels, c) then\n            result = result\
    \ .. c\n        end\n    end\n    return result\nend", "    local vowels = {'a',\
    \ 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local new_text = ''\n    for\
    \ i = 1, #text do\n        local char = text:sub(i, i)\n        local is_vowel\
    \ = false\n        for j = 1, #vowels do\n            if char == vowels[j] then\n\
    \                is_vowel = true\n                break\n            end\n   \
    \     end\n        if not is_vowel then\n            new_text = new_text .. char\n\
    \        end\n    end\n    return new_text\nend", "    local vowels = {'a', 'e',\
    \ 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n    for i =\
    \ 1, #text do\n        local char = text:sub(i, i)\n        if not table.contains(vowels,\
    \ char) then\n            result = result .. char\n        end\n    end\n    return\
    \ result\nend", "    return text:gsub('[aeiouAEIOU]', '')\nend", "    local vowels\
    \ = {'a', 'e', 'i', 'o', 'u', 'A', 'E', 'I', 'O', 'U'}\n    local result = ''\n\
    \    for i = 1, #text do\n        local char = text:sub(i, i)\n        if not\
    \ table.contains(vowels, char) then\n            result = result .. char\n   \
    \     end\n    end\n    return result\nend", "  return text:gsub('[aeiouAEIOU]',\
    \ '')\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

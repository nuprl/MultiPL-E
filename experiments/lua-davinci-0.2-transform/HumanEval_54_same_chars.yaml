name: HumanEval_54_same_chars
language: lua
prompt: "-- Check if two words have the same characters.\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddeddabc')\n-- true\n-- >>> same_chars('abcd', 'dddddddabc')\n-- true\n\
  -- >>> same_chars('dddddddabc', 'abcd')\n-- true\n-- >>> same_chars('eabcd', 'dddddddabc')\n\
  -- false\n-- >>> same_chars('abcd', 'dddddddabce')\n-- false\n-- >>> same_chars('eabcdzzzz',\
  \ 'dddzzzzzzzddddabc')\n-- false\nlocal function same_chars(s0, s1)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = same_chars\n\
  \    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddeddabc'), true)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabc'), true)\n    lu.assertEquals(candidate('dddddddabc', 'abcd'), true)\n\
  \    lu.assertEquals(candidate('eabcd', 'dddddddabc'), false)\n    lu.assertEquals(candidate('abcd',\
  \ 'dddddddabcf'), false)\n    lu.assertEquals(candidate('eabcdzzzz', 'dddzzzzzzzddddabc'),\
  \ false)\n    lu.assertEquals(candidate('aabb', 'aaccc'), false)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local t0 = {}\n    local t1 = {}\n    for i = 1, #s0 do\n     \
    \   local c = s0:sub(i, i)\n        t0[c] = (t0[c] or 0) + 1\n    end\n    for\
    \ i = 1, #s1 do\n        local c = s1:sub(i, i)\n        t1[c] = (t1[c] or 0)\
    \ + 1\n    end\n    for k, v in pairs(t0) do\n        if t1[k] ~= v then\n   \
    \         return false\n        end\n    end\n    for k, v in pairs(t1) do\n \
    \       if t0[k] ~= v then\n            return false\n        end\n    end\n \
    \   return true\nend", "\tlocal c0 = {}\n\tlocal c1 = {}\n\tfor i = 1, #s0 do\n\
    \t\tlocal c = s0:sub(i, i)\n\t\tc0[c] = (c0[c] or 0) + 1\n\tend\n\tfor i = 1,\
    \ #s1 do\n\t\tlocal c = s1:sub(i, i)\n\t\tc1[c] = (c1[c] or 0) + 1\n\tend\n\t\
    for k, v in pairs(c0) do\n\t\tif c1[k] ~= v then\n\t\t\treturn false\n\t\tend\n\
    \tend\n\tfor k, v in pairs(c1) do\n\t\tif c0[k] ~= v then\n\t\t\treturn false\n\
    \t\tend\n\tend\n\treturn true\nend", "    local t0 = {}\n    local t1 = {}\n \
    \   for i = 1, #s0 do\n        local c = s0:sub(i, i)\n        t0[c] = (t0[c]\
    \ or 0) + 1\n    end\n    for i = 1, #s1 do\n        local c = s1:sub(i, i)\n\
    \        t1[c] = (t1[c] or 0) + 1\n    end\n    for k, v in pairs(t0) do\n   \
    \     if t1[k] ~= v then\n            return false\n        end\n    end\n   \
    \ for k, v in pairs(t1) do\n        if t0[k] ~= v then\n            return false\n\
    \        end\n    end\n    return true\nend", "  local c0 = {}\n  local c1 = {}\n\
    \  for i = 1, #s0 do\n    c0[s0:sub(i, i)] = (c0[s0:sub(i, i)] or 0) + 1\n  end\n\
    \  for i = 1, #s1 do\n    c1[s1:sub(i, i)] = (c1[s1:sub(i, i)] or 0) + 1\n  end\n\
    \  for k, v in pairs(c0) do\n    if c1[k] ~= v then\n      return false\n    end\n\
    \  end\n  for k, v in pairs(c1) do\n    if c0[k] ~= v then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local c0 = {}\n  local c1 = {}\n  for\
    \ i = 1, #s0 do\n    c0[s0:sub(i, i)] = (c0[s0:sub(i, i)] or 0) + 1\n  end\n \
    \ for i = 1, #s1 do\n    c1[s1:sub(i, i)] = (c1[s1:sub(i, i)] or 0) + 1\n  end\n\
    \  for k, v in pairs(c0) do\n    if c1[k] ~= v then\n      return false\n    end\n\
    \  end\n  for k, v in pairs(c1) do\n    if c0[k] ~= v then\n      return false\n\
    \    end\n  end\n  return true\nend", "    local t0 = {}\n    local t1 = {}\n\
    \    for i = 1, #s0 do\n        local c = s0:sub(i, i)\n        t0[c] = (t0[c]\
    \ or 0) + 1\n    end\n    for i = 1, #s1 do\n        local c = s1:sub(i, i)\n\
    \        t1[c] = (t1[c] or 0) + 1\n    end\n    for k, v in pairs(t0) do\n   \
    \     if t1[k] ~= v then\n            return false\n        end\n    end\n   \
    \ for k, v in pairs(t1) do\n        if t0[k] ~= v then\n            return false\n\
    \        end\n    end\n    return true\nend", "  local t0 = {}\n  local t1 = {}\n\
    \  for c in s0:gmatch(\".\") do\n    t0[c] = (t0[c] or 0) + 1\n  end\n  for c\
    \ in s1:gmatch(\".\") do\n    t1[c] = (t1[c] or 0) + 1\n  end\n  for k, v in pairs(t0)\
    \ do\n    if t1[k] ~= v then\n      return false\n    end\n  end\n  for k, v in\
    \ pairs(t1) do\n    if t0[k] ~= v then\n      return false\n    end\n  end\n \
    \ return true\nend", "    local t0 = {}\n    local t1 = {}\n    for i = 1, #s0\
    \ do\n        t0[s0:sub(i, i)] = (t0[s0:sub(i, i)] or 0) + 1\n    end\n    for\
    \ i = 1, #s1 do\n        t1[s1:sub(i, i)] = (t1[s1:sub(i, i)] or 0) + 1\n    end\n\
    \    for k, v in pairs(t0) do\n        if t1[k] ~= v then\n            return\
    \ false\n        end\n    end\n    for k, v in pairs(t1) do\n        if t0[k]\
    \ ~= v then\n            return false\n        end\n    end\n    return true\n\
    end", "  local t0 = {}\n  local t1 = {}\n  for i = 1, #s0 do\n    t0[s0:sub(i,\
    \ i)] = (t0[s0:sub(i, i)] or 0) + 1\n  end\n  for i = 1, #s1 do\n    t1[s1:sub(i,\
    \ i)] = (t1[s1:sub(i, i)] or 0) + 1\n  end\n  for k, v in pairs(t0) do\n    if\
    \ t1[k] ~= v then\n      return false\n    end\n  end\n  for k, v in pairs(t1)\
    \ do\n    if t0[k] ~= v then\n      return false\n    end\n  end\n  return true\n\
    end", "    local c0 = {}\n    local c1 = {}\n    for i = 1, #s0 do\n        c0[s0:sub(i,\
    \ i)] = (c0[s0:sub(i, i)] or 0) + 1\n    end\n    for i = 1, #s1 do\n        c1[s1:sub(i,\
    \ i)] = (c1[s1:sub(i, i)] or 0) + 1\n    end\n    for k, v in pairs(c0) do\n \
    \       if c1[k] ~= v then\n            return false\n        end\n    end\n \
    \   for k, v in pairs(c1) do\n        if c0[k] ~= v then\n            return false\n\
    \        end\n    end\n    return true\nend", "    local t0 = {}\n    local t1\
    \ = {}\n    for i = 1, #s0 do\n        t0[s0:sub(i, i)] = true\n    end\n    for\
    \ i = 1, #s1 do\n        t1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(t0)\
    \ do\n        if not t1[k] then\n            return false\n        end\n    end\n\
    \    for k, _ in pairs(t1) do\n        if not t0[k] then\n            return false\n\
    \        end\n    end\n    return true\nend", "    local t0 = {}\n    local t1\
    \ = {}\n    for c in s0:gmatch('.') do\n        t0[c] = (t0[c] or 0) + 1\n   \
    \ end\n    for c in s1:gmatch('.') do\n        t1[c] = (t1[c] or 0) + 1\n    end\n\
    \    for k, v in pairs(t0) do\n        if t1[k] ~= v then\n            return\
    \ false\n        end\n    end\n    for k, v in pairs(t1) do\n        if t0[k]\
    \ ~= v then\n            return false\n        end\n    end\n    return true\n\
    end", "    local c0 = {}\n    local c1 = {}\n    for i = 1, #s0 do\n        c0[s0:sub(i,\
    \ i)] = true\n    end\n    for i = 1, #s1 do\n        c1[s1:sub(i, i)] = true\n\
    \    end\n    for k, _ in pairs(c0) do\n        if not c1[k] then\n          \
    \  return false\n        end\n    end\n    for k, _ in pairs(c1) do\n        if\
    \ not c0[k] then\n            return false\n        end\n    end\n    return true\n\
    end", "    local c0 = {}\n    local c1 = {}\n    for i = 1, #s0 do\n        c0[s0:sub(i,\
    \ i)] = true\n    end\n    for i = 1, #s1 do\n        c1[s1:sub(i, i)] = true\n\
    \    end\n    for k, _ in pairs(c0) do\n        if not c1[k] then\n          \
    \  return false\n        end\n    end\n    for k, _ in pairs(c1) do\n        if\
    \ not c0[k] then\n            return false\n        end\n    end\n    return true\n\
    end", "  local t0 = {}\n  local t1 = {}\n  for i = 1, #s0 do\n    t0[s0:sub(i,\
    \ i)] = true\n  end\n  for i = 1, #s1 do\n    t1[s1:sub(i, i)] = true\n  end\n\
    \  for k, _ in pairs(t0) do\n    if not t1[k] then\n      return false\n    end\n\
    \  end\n  for k, _ in pairs(t1) do\n    if not t0[k] then\n      return false\n\
    \    end\n  end\n  return true\nend", "  local t0 = {}\n  local t1 = {}\n  for\
    \ i = 1, #s0 do\n    t0[s0:sub(i, i)] = (t0[s0:sub(i, i)] or 0) + 1\n  end\n \
    \ for i = 1, #s1 do\n    t1[s1:sub(i, i)] = (t1[s1:sub(i, i)] or 0) + 1\n  end\n\
    \  for k, v in pairs(t0) do\n    if t1[k] ~= v then\n      return false\n    end\n\
    \  end\n  for k, v in pairs(t1) do\n    if t0[k] ~= v then\n      return false\n\
    \    end\n  end\n  return true\nend", "    local c0 = {}\n    local c1 = {}\n\
    \    for i = 1, #s0 do\n        c0[s0:sub(i, i)] = true\n    end\n    for i =\
    \ 1, #s1 do\n        c1[s1:sub(i, i)] = true\n    end\n    for k, _ in pairs(c0)\
    \ do\n        if not c1[k] then\n            return false\n        end\n    end\n\
    \    for k, _ in pairs(c1) do\n        if not c0[k] then\n            return false\n\
    \        end\n    end\n    return true\nend", "    local t0 = {}\n    local t1\
    \ = {}\n    for i = 1, #s0 do\n        local c = s0:sub(i, i)\n        t0[c] =\
    \ (t0[c] or 0) + 1\n    end\n    for i = 1, #s1 do\n        local c = s1:sub(i,\
    \ i)\n        t1[c] = (t1[c] or 0) + 1\n    end\n    for k, v in pairs(t0) do\n\
    \        if t1[k] ~= v then\n            return false\n        end\n    end\n\
    \    for k, v in pairs(t1) do\n        if t0[k] ~= v then\n            return\
    \ false\n        end\n    end\n    return true\nend", "    local c0 = count_chars(s0)\n\
    \    local c1 = count_chars(s1)\n    for k, v in pairs(c0) do\n        if c1[k]\
    \ ~= v then\n            return false\n        end\n    end\n    for k, v in pairs(c1)\
    \ do\n        if c0[k] ~= v then\n            return false\n        end\n    end\n\
    \    return true\nend", "    local c0 = {}\n    local c1 = {}\n    for i = 1,\
    \ #s0 do\n        c0[s0:sub(i, i)] = (c0[s0:sub(i, i)] or 0) + 1\n    end\n  \
    \  for i = 1, #s1 do\n        c1[s1:sub(i, i)] = (c1[s1:sub(i, i)] or 0) + 1\n\
    \    end\n    for k, v in pairs(c0) do\n        if c1[k] ~= v then\n         \
    \   return false\n        end\n    end\n    for k, v in pairs(c1) do\n       \
    \ if c0[k] ~= v then\n            return false\n        end\n    end\n    return\
    \ true\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

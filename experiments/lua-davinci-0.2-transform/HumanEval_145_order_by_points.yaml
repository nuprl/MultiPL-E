name: HumanEval_145_order_by_points
language: lua
prompt: "-- Write a function which sorts the given list of integers\n-- in ascending\
  \ order according to the sum of their digits.\n-- Note: if there are several items\
  \ with similar sum of their digits,\n-- order them based on their index in original\
  \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
  \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = order_by_points\n\
  \    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n\
  \    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
  \ 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n\
  \    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1, -11,\
  \ -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
  \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
  \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local function sum_digits(n)\n        local s = 0\n        while\
    \ n > 0 do\n            s = s + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return s\n    end\n    local function compare(a, b)\n   \
    \     local sa = sum_digits(a)\n        local sb = sum_digits(b)\n        if sa\
    \ == sb then\n            return a < b\n        else\n            return sa <\
    \ sb\n        end\n    end\n    table.sort(nums, compare)\n    return nums\nend",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n   \
    \   sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "  local function sum_digits(n)\n    local s = 0\n    while n >\
    \ 0 do\n      s = s + n % 10\n      n = math.floor(n / 10)\n    end\n    return\
    \ s\n  end\n  local function compare(a, b)\n    local sa = sum_digits(a)\n   \
    \ local sb = sum_digits(b)\n    if sa == sb then\n      return a < b\n    else\n\
    \      return sa < sb\n    end\n  end\n  table.sort(nums, compare)\n  return nums\n\
    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "  local function sum_of_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(num)\n        local sum = 0\n   \
    \     while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_of_digits(num)\n    local sum = 0\n    while num > 0 do\n\
    \      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "    local sum = function(n)\n        local s = 0\n        while\
    \ n > 0 do\n            s = s + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return s\n    end\n    local t = {}\n    for i, v in ipairs(nums)\
    \ do\n        t[i] = {v, sum(v)}\n    end\n    table.sort(t, function(a, b)\n\
    \        if a[2] == b[2] then\n            return a[1] < b[1]\n        else\n\
    \            return a[2] < b[2]\n        end\n    end)\n    local r = {}\n   \
    \ for i, v in ipairs(t) do\n        r[i] = v[1]\n    end\n    return r\nend",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function compare(a, b)\n        local sa\
    \ = sum_digits(a)\n        local sb = sum_digits(b)\n        if sa == sb then\n\
    \            return a < b\n        else\n            return sa < sb\n        end\n\
    \    end\n    table.sort(nums, compare)\n    return nums\nend", "    local function\
    \ sum_digits(num)\n        local sum = 0\n        while num > 0 do\n         \
    \   sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n          \
    \  n = math.floor(n / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n    \
    \        sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function compare(a, b)\n    local\
    \ sum_a = sum_digits(a)\n    local sum_b = sum_digits(b)\n    if sum_a == sum_b\
    \ then\n      return a < b\n    else\n      return sum_a < sum_b\n    end\n  end\n\
    \  table.sort(nums, compare)\n  return nums\nend", "  local function sum_of_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function cmp(a, b)\n        local sa, sb = sum_digits(a), sum_digits(b)\n\
    \        if sa == sb then\n            return a < b\n        else\n          \
    \  return sa < sb\n        end\n    end\n    table.sort(nums, cmp)\n    return\
    \ nums\nend", "    local function sum_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local sum_b\
    \ = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend", "    local function sum_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    -- your code here\n    local function sum_digits(num)\n      \
    \  local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        return sum\n   \
    \ end\n    local function sort_by_sum(a, b)\n        local sum_a = sum_digits(a)\n\
    \        local sum_b = sum_digits(b)\n        if sum_a == sum_b then\n       \
    \     return a < b\n        else\n            return sum_a < sum_b\n        end\n\
    \    end\n    table.sort(nums, sort_by_sum)\n    return nums\nend", "    local\
    \ function sum_digits(num)\n        local sum = 0\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local sum_of_digits = {}\n    for i, v in ipairs(nums) do\n        local sum\
    \ = 0\n        for j = 1, #tostring(v) do\n            sum = sum + tonumber(tostring(v):sub(j,\
    \ j))\n        end\n        sum_of_digits[i] = sum\n    end\n    local sorted\
    \ = {}\n    for i, v in ipairs(sum_of_digits) do\n        local min = math.min(unpack(sum_of_digits))\n\
    \        local index = 0\n        for j, k in ipairs(sum_of_digits) do\n     \
    \       if k == min then\n                index = j\n                break\n \
    \           end\n        end\n        table.insert(sorted, nums[index])\n    \
    \    table.remove(sum_of_digits, index)\n        table.remove(nums, index)\n \
    \   end\n    return sorted\nend", "    local function sum_digits(num)\n      \
    \  local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        return sum\n   \
    \ end", "    local function sum_of_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function compare(a, b)\n    local\
    \ sum_a = sum_digits(a)\n    local sum_b = sum_digits(b)\n    if sum_a == sum_b\
    \ then\n      return a < b\n    else\n      return sum_a < sum_b\n    end\n  end\n\
    \  table.sort(nums, compare)\n  return nums\nend", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "\tlocal function sum_digits(num)\n\t\tlocal sum = 0\n\t\twhile num\
    \ > 0 do\n\t\t\tsum = sum + num % 10\n\t\t\tnum = math.floor(num / 10)\n\t\tend\n\
    \t\treturn sum\n\tend", "    local function sum_digits(n)\n        local sum =\
    \ 0\n        while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(x)\n\
    \        local sum = 0\n        while x > 0 do\n            sum = sum + (x % 10)\n\
    \            x = math.floor(x / 10)\n        end\n        return sum\n    end",
  "  -- your code here\n  local function sum_digits(n)\n    local sum = 0\n    while\
    \ n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n\
    \    return sum\n  end\n  local function cmp(a, b)\n    local sum_a = sum_digits(a)\n\
    \    local sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a <\
    \ b\n    else\n      return sum_a < sum_b\n    end\n  end\n  table.sort(nums,\
    \ cmp)\n  return nums\nend", "    local function sum_digits(n)\n        local\
    \ s = 0\n        while n > 0 do\n            s = s + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return s\n    end\n    local function compare(a,\
    \ b)\n        local a_sum = sum_digits(a)\n        local b_sum = sum_digits(b)\n\
    \        if a_sum == b_sum then\n            return a < b\n        else\n    \
    \        return a_sum < b_sum\n        end\n    end\n    table.sort(nums, compare)\n\
    \    return nums\nend", "    local function sum_of_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function compare(a, b)\n    local\
    \ sum_a = sum_digits(a)\n    local sum_b = sum_digits(b)\n    if sum_a == sum_b\
    \ then\n      return a < b\n    else\n      return sum_a < sum_b\n    end\n  end\n\
    \  table.sort(nums, compare)\n  return nums\nend", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end", "  local sums = {}\n  for i, v in ipairs(nums)\
    \ do\n    sums[i] = v\n  end\n  table.sort(sums, function(a, b)\n    local sum_a\
    \ = 0\n    local sum_b = 0\n    for i = 1, #tostring(a) do\n      sum_a = sum_a\
    \ + tonumber(tostring(a):sub(i, i))\n    end\n    for i = 1, #tostring(b) do\n\
    \      sum_b = sum_b + tonumber(tostring(b):sub(i, i))\n    end\n    if sum_a\
    \ == sum_b then\n      return a < b\n    end\n    return sum_a < sum_b\n  end)\n\
    \  return sums\nend", "    local function sum_of_digits(n)\n        local sum\
    \ = 0\n        while n > 0 do\n            sum = sum + n % 10\n            n =\
    \ math.floor(n / 10)\n        end\n        return sum\n    end", "    local function\
    \ sum_digits(num)\n        local sum = 0\n        while num > 0 do\n         \
    \   sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_of_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "  local sum_of_digits = {}\n  for i, v in ipairs(nums)\
    \ do\n    local sum = 0\n    for digit in tostring(v):gmatch(\"%d\") do\n    \
    \  sum = sum + tonumber(digit)\n    end\n    sum_of_digits[i] = sum\n  end\n \
    \ table.sort(sum_of_digits)\n  local result = {}\n  for i, v in ipairs(sum_of_digits)\
    \ do\n    for j, w in ipairs(nums) do\n      local sum = 0\n      for digit in\
    \ tostring(w):gmatch(\"%d\") do\n        sum = sum + tonumber(digit)\n      end\n\
    \      if sum == v then\n        result[i] = w\n        nums[j] = nil\n      \
    \  break\n      end\n    end\n  end\n  return result\nend", "    local sum_of_digits\
    \ = function(n)\n        local sum = 0\n        while n > 0 do\n            sum\
    \ = sum + n % 10\n            n = math.floor(n / 10)\n        end\n        return\
    \ sum\n    end", "    local function sum_of_digits(num)\n        local sum = 0\n\
    \        while num > 0 do\n            sum = sum + num % 10\n            num =\
    \ math.floor(num / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_digits(num)\n        local sum = 0\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_of_digits(num)\n    local sum = 0\n    while num > 0 do\n\
    \      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "  local function sum_digits(n)\n    local sum = 0\n    while n\
    \ > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n  \
    \  return sum\n  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n\
    \    local sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a <\
    \ b\n    else\n      return sum_a < sum_b\n    end\n  end\n  table.sort(nums,\
    \ compare)\n  return nums\nend", "    local function sum_of_digits(n)\n      \
    \  local sum = 0\n        while n > 0 do\n            sum = sum + (n % 10)\n \
    \           n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local sum_b\
    \ = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend", "    local function sum_digits(num)\n        local sum = 0\n   \
    \     while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local sums = {}\n   \
    \ for i, num in ipairs(nums) do\n        sums[i] = {sum_of_digits(num), num}\n\
    \    end\n    table.sort(sums, function(a, b) return a[1] < b[1] end)\n    local\
    \ result = {}\n    for i, sum in ipairs(sums) do\n        result[i] = sum[2]\n\
    \    end\n    return result\nend", "  local function sum_digits(n)\n    local\
    \ sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function compare(a, b)\n    local\
    \ sum_a = sum_digits(a)\n    local sum_b = sum_digits(b)\n    if sum_a == sum_b\
    \ then\n      return a < b\n    else\n      return sum_a < sum_b\n    end\n  end\n\
    \  table.sort(nums, compare)\n  return nums\nend", "    local function sum_digits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function cmp(a, b)\n        local sa, sb = sum_digits(a), sum_digits(b)\n\
    \        if sa == sb then\n            return a < b\n        else\n          \
    \  return sa < sb\n        end\n    end\n    table.sort(nums, cmp)\n    return\
    \ nums\nend", "    local function sum_of_digits(n)\n        local sum = 0\n  \
    \      while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function compare(a, b)\n    local\
    \ sum_a = sum_digits(a)\n    local sum_b = sum_digits(b)\n    if sum_a == sum_b\
    \ then\n      return a < b\n    else\n      return sum_a < sum_b\n    end\n  end\n\
    \  table.sort(nums, compare)\n  return nums\nend", "    local function sum_digits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function compare(a, b)\n        local sa = sum_digits(a)\n        local\
    \ sb = sum_digits(b)\n        if sa == sb then\n            return a < b\n   \
    \     else\n            return sa < sb\n        end\n    end\n    table.sort(nums,\
    \ compare)\n    return nums\nend", "    local function sum_digits(n)\n       \
    \ local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n    \
    \        n = math.floor(n / 10)\n        end\n        return sum\n    end", " \
    \   local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(n)\n        local\
    \ sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n          \
    \  n = math.floor(n / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_digits(num)\n        local sum = 0\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local sum_of_digits = function(num)\n        local sum = 0\n \
    \       while num > 0 do\n            sum = sum + num % 10\n            num =\
    \ math.floor(num / 10)\n        end\n        return sum\n    end", "    local\
    \ function sum_digits(num)\n        local sum = 0\n        while num > 0 do\n\
    \            sum = sum + num % 10\n            num = math.floor(num / 10)\n  \
    \      end\n        return sum\n    end", "    local function sum_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(num)\n        local sum = 0\n      \
    \  while num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "  local function sum_digits(num)\n\
    \    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num\
    \ = math.floor(num / 10)\n    end\n    return sum\n  end", "  local function sum_digits(num)\n\
    \    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num\
    \ = math.floor(num / 10)\n    end\n    return sum\n  end", "    local function\
    \ get_sum(num)\n        local sum = 0\n        while num > 0 do\n            sum\
    \ = sum + num % 10\n            num = math.floor(num / 10)\n        end\n    \
    \    return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n   \
    \   sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end", "    local function sum_digits(n)\n        local sum = 0\n    \
    \    while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n      sum\
    \ = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n  end\n\
    \  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local sum_b\
    \ = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend", "    local function sum_of_digits(num)\n        local sum = 0\n\
    \        while num > 0 do\n            sum = sum + num % 10\n            num =\
    \ math.floor(num / 10)\n        end\n        return sum\n    end", "  local function\
    \ sum_digits(num)\n    local sum = 0\n    while num > 0 do\n      sum = sum +\
    \ num % 10\n      num = math.floor(num / 10)\n    end\n    return sum\n  end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function compare(a, b)\n    local\
    \ sum_a = sum_digits(a)\n    local sum_b = sum_digits(b)\n    if sum_a == sum_b\
    \ then\n      return a < b\n    else\n      return sum_a < sum_b\n    end\n  end\n\
    \  table.sort(nums, compare)\n  return nums\nend", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "  local function sum_of_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "  local function sum_digits(n)\n    local sum = 0\n    while n > 0\
    \ do\n      sum = sum + (n % 10)\n      n = math.floor(n / 10)\n    end\n    return\
    \ sum\n  end", "    local function sum_digits(n)\n        local sum = 0\n    \
    \    while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "  local function sum_of_digits(num)\n\
    \    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num\
    \ = math.floor(num / 10)\n    end\n    return sum\n  end", "    local function\
    \ sum_of_digits(n)\n        local sum = 0\n        while n > 0 do\n          \
    \  sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n     \
    \   return sum\n    end", "    local function sum_digits(num)\n        local sum\
    \ = 0\n        while num > 0 do\n            sum = sum + num % 10\n          \
    \  num = math.floor(num / 10)\n        end\n        return sum\n    end", "  \
    \  local function sum_digits(n)\n        local sum = 0\n        while n > 0 do\n\
    \            sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return sum\n    end", "  local sum_of_digits = {}\n  for i, num in ipairs(nums)\
    \ do\n    local sum = 0\n    for digit in tostring(num):gmatch(\"%d\") do\n  \
    \    sum = sum + tonumber(digit)\n    end\n    sum_of_digits[i] = sum\n  end\n\
    \  local sorted_nums = {}\n  for i, num in ipairs(nums) do\n    sorted_nums[i]\
    \ = {num, sum_of_digits[i]}\n  end\n  table.sort(sorted_nums, function(a, b)\n\
    \    if a[2] == b[2] then\n      return a[1] < b[1]\n    else\n      return a[2]\
    \ < b[2]\n    end\n  end)\n  for i, num in ipairs(sorted_nums) do\n    sorted_nums[i]\
    \ = num[1]\n  end\n  return sorted_nums\nend", "    local function sum_digits(n)\n\
    \        local s = 0\n        while n > 0 do\n            s = s + n % 10\n   \
    \         n = math.floor(n / 10)\n        end\n        return s\n    end\n   \
    \ local function cmp(a, b)\n        local sa, sb = sum_digits(a), sum_digits(b)\n\
    \        if sa == sb then\n            return a < b\n        else\n          \
    \  return sa < sb\n        end\n    end\n    table.sort(nums, cmp)\n    return\
    \ nums\nend", "    local function sum_digits(n)\n        local sum = 0\n     \
    \   while n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n\
    \ / 10)\n        end\n        return sum\n    end", "    local function sum_of_digits(num)\n\
    \        local sum = 0\n        while num > 0 do\n            sum = sum + num\
    \ % 10\n            num = math.floor(num / 10)\n        end\n        return sum\n\
    \    end", "    local function sum_digits(n)\n        local sum = 0\n        while\
    \ n > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end", "    local function sum_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + n % 10\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function compare(a, b)\n        local sa\
    \ = sum_digits(a)\n        local sb = sum_digits(b)\n        if sa == sb then\n\
    \            return a < b\n        else\n            return sa < sb\n        end\n\
    \    end\n    table.sort(nums, compare)\n    return nums\nend", "    local function\
    \ sum_digits(num)\n        local sum = 0\n        while num > 0 do\n         \
    \   sum = sum + num % 10\n            num = math.floor(num / 10)\n        end\n\
    \        return sum\n    end", "    local function sum_of_digits(num)\n      \
    \  local sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n\
    \            num = math.floor(num / 10)\n        end\n        return sum\n   \
    \ end", "    local function sum_digits(num)\n        local sum = 0\n        while\
    \ num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end", "    local function compare(a,\
    \ b)\n        local sum_a = sum_of_digits(a)\n        local sum_b = sum_of_digits(b)\n\
    \        if sum_a == sum_b then\n            return a < b\n        else\n    \
    \        return sum_a < sum_b\n        end\n    end\n    table.sort(nums, compare)\n\
    \    return nums\nend", "    local function sum_digits(num)\n        local sum\
    \ = 0\n        while num > 0 do\n            sum = sum + num % 10\n          \
    \  num = math.floor(num / 10)\n        end\n        return sum\n    end", "  \
    \  local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "  local function sum_digits(n)\n\
    \    local sum = 0\n    while n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n\
    \ / 10)\n    end\n    return sum\n  end\n  local function cmp(a, b)\n    local\
    \ sum_a = sum_digits(a)\n    local sum_b = sum_digits(b)\n    if sum_a == sum_b\
    \ then\n      return a < b\n    else\n      return sum_a < sum_b\n    end\n  end\n\
    \  table.sort(nums, cmp)\n  return nums\nend", "    local function sum_of_digits(n)\n\
    \        local sum = 0\n        while n > 0 do\n            sum = sum + (n % 10)\n\
    \            n = math.floor(n / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end", "  local function sum_digits(num)\n\
    \    local sum = 0\n    while num > 0 do\n      sum = sum + num % 10\n      num\
    \ = math.floor(num / 10)\n    end\n    return sum\n  end", "    local function\
    \ sum_of_digits(n)\n        local sum = 0\n        while n > 0 do\n          \
    \  sum = sum + n % 10\n            n = math.floor(n / 10)\n        end\n     \
    \   return sum\n    end", "    local function sum_of_digits(num)\n        local\
    \ sum = 0\n        while num > 0 do\n            sum = sum + num % 10\n      \
    \      num = math.floor(num / 10)\n        end\n        return sum\n    end",
  "    local function sum_digits(num)\n        local sum = 0\n        while num >\
    \ 0 do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

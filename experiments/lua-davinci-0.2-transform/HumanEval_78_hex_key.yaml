name: HumanEval_78_hex_key
language: lua
prompt: "-- You have been tasked to write a function that receives \n-- a hexadecimal\
  \ number as a string and counts the number of hexadecimal \n-- digits that are primes\
  \ (prime number, or a prime, is a natural number \n-- greater than 1 that is not\
  \ a product of two smaller natural numbers).\n-- Hexadecimal digits are 0, 1, 2,\
  \ 3, 4, 5, 6, 7, 8, 9, A, B, C, D, E, F.\n-- Prime numbers are 2, 3, 5, 7, 11, 13,\
  \ 17,...\n-- So you have to determine a number of the following digits: 2, 3, 5,\
  \ 7, \n-- B (=decimal 11), D (=decimal 13).\n-- Note: you may assume the input is\
  \ always correct or empty string, \n-- and symbols A,B,C,D,E,F are always uppercase.\n\
  -- Examples:\n-- >>> hex_key('AB')\n-- 1\n-- >>> hex_key('1077E')\n-- 2\n-- >>>\
  \ hex_key('ABED1A33')\n-- 4\n-- >>> hex_key('123456789ABCDEF0')\n-- 6\n-- >>> hex_key('2020')\n\
  -- 2\nlocal function hex_key(num)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = hex_key\n\
  \    lu.assertEquals(candidate('AB'), 1)\n    lu.assertEquals(candidate('1077E'),\
  \ 2)\n    lu.assertEquals(candidate('ABED1A33'), 4)\n    lu.assertEquals(candidate('2020'),\
  \ 2)\n    lu.assertEquals(candidate('123456789ABCDEF0'), 6)\n    lu.assertEquals(candidate('112233445566778899AABBCCDDEEFF00'),\
  \ 12)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n\
    \  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n\
    \  for i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i, i) ==\
    \ hex_primes[j] then\n        count = count + 1\n      end\n    end\n  end\n \
    \ return count\nend", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n   \
    \ local count = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n   \
    \         if num:sub(i, i) == primes[j] then\n                count = count +\
    \ 1\n            end\n        end\n    end\n    return count\nend", "  local primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n\
    \    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n       \
    \ count = count + 1\n      end\n    end\n  end\n  return count\nend", "    local\
    \ count = 0\n    local primes = {'2', '3', '5', '7', 'B', 'D'}\n    for i = 1,\
    \ #num do\n        for j = 1, #primes do\n            if num:sub(i, i) == primes[j]\
    \ then\n                count = count + 1\n            end\n        end\n    end\n\
    \    return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "    local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \    local count = 0\n    for i = 1, #num do\n        for j = 1, #hex_primes do\n\
    \            if num:sub(i, i) == hex_primes[j] then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "    local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1,\
    \ #num do\n        for j = 1, #primes do\n            if num:sub(i, i) == primes[j]\
    \ then\n                count = count + 1\n            end\n        end\n    end\n\
    \    return count\nend", "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex =\
    \ {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\
    \ 'F'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex do\n    \
    \  if num:sub(i, i) == hex[j] then\n        for k = 1, #primes do\n          if\
    \ j == primes[k] then\n            count = count + 1\n          end\n        end\n\
    \      end\n    end\n  end\n  return count\nend", "  local hex_primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j] then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "  local hex_primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n\
    \    for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \   local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for\
    \ i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i, i)\
    \ == primes[j] then\n                count = count + 1\n            end\n    \
    \    end\n    end\n    return count\nend", "    local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for j =\
    \ 1, #primes do\n            if num:sub(i, i) == primes[j] then\n            \
    \    count = count + 1\n            end\n        end\n    end\n    return count\n\
    end", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n\
    \    for i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i,\
    \ i) == primes[j] then\n                count = count + 1\n            end\n \
    \       end\n    end\n    return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    if table.contains(primes,\
    \ num:sub(i, i)) then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex = {'0', '1', '2', '3',\
    \ '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n  local result\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #hex do\n      if num:sub(i, i) ==\
    \ hex[j] then\n        for k = 1, #primes do\n          if j == primes[k] then\n\
    \            result = result + 1\n          end\n        end\n      end\n    end\n\
    \  end\n  return result\nend", "  local hex_primes = {'2', '3', '5', '7', 'B',\
    \ 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes do\n\
    \      if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n   \
    \   end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "    local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for\
    \ j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n        \
    \        count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i,\
    \ i) == hex_primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "    local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \    local count = 0\n    for i = 1, #num do\n        for j = 1, #hex_primes do\n\
    \            if num:sub(i, i) == hex_primes[j] then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "  local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num\
    \ do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n  \
    \      count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i =\
    \ 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i =\
    \ 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex = {A = 10, B = 11, C\
    \ = 12, D = 13, E = 14, F = 15}\n  local count = 0\n  for i = 1, #num do\n   \
    \ local n = tonumber(num:sub(i, i), 16)\n    if n == nil then\n      n = hex[num:sub(i,\
    \ i)]\n    end\n    for j = 1, #primes do\n      if n == primes[j] then\n    \
    \    count = count + 1\n      end\n    end\n  end\n  return count\nend", "  local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num\
    \ do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n  \
    \      count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i =\
    \ 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local count = 0\n  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  for i =\
    \ 1, #num do\n    if table.indexOf(primes, num:sub(i, i)) then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "  local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1,\
    \ #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local hex_primes =\
    \ {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n  \
    \  for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j] then\n \
    \       count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i =\
    \ 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i =\
    \ 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {2, 3, 5, 7, 11, 13}\n  local hex_digits = {'0', '1', '2', '3',\
    \ '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n  local count =\
    \ 0\n  for i = 1, #num do\n    for j = 1, #hex_digits do\n      if num:sub(i,\
    \ i) == hex_digits[j] then\n        for k = 1, #primes do\n          if j == primes[k]\
    \ then\n            count = count + 1\n          end\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "    local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for j = 1, #primes\
    \ do\n            if num:sub(i, i) == primes[j] then\n                count =\
    \ count + 1\n            end\n        end\n    end\n    return count\nend", " \
    \   local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n \
    \   for i = 1, #num do\n        for j = 1, #hex_primes do\n            if num:sub(i,\
    \ i) == hex_primes[j] then\n                count = count + 1\n            end\n\
    \        end\n    end\n    return count\nend", "  local primes = {2, 3, 5, 7,\
    \ 11, 13}\n  local hex_primes = {}\n  for _, v in ipairs(primes) do\n    hex_primes[string.format(\"\
    %X\", v)] = true\n  end\n  local count = 0\n  for i = 1, #num do\n    if hex_primes[string.sub(num,\
    \ i, i)] then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1,\
    \ #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {2, 3, 5, 7, 11, 13}\n  local hex = {A = 10, B = 11, C = 12,\
    \ D = 13, E = 14, F = 15}\n  local count = 0\n  for i = 1, #num do\n    local\
    \ n = tonumber(num:sub(i, i), 16)\n    if n == nil then\n      n = hex[num:sub(i,\
    \ i)]\n    end\n    for j = 1, #primes do\n      if n == primes[j] then\n    \
    \    count = count + 1\n      end\n    end\n  end\n  return count\nend", "  local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num\
    \ do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n  \
    \      count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \   local count = 0\n    for i = 1, #num do\n        local digit = num:sub(i,\
    \ i)\n        if digit == '2' or digit == '3' or digit == '5' or digit == '7'\
    \ or digit == 'B' or digit == 'D' then\n            count = count + 1\n      \
    \  end\n    end\n    return count\nend", "  local hex_primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes\
    \ do\n      if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n\
    \      end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1,\
    \ #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local hex_primes =\
    \ {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n  \
    \  for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j] then\n \
    \       count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \   local hex_prime_digits = {'2', '3', '5', '7', 'B', 'D'}\n    local count =\
    \ 0\n    for i = 1, #num do\n        for j = 1, #hex_prime_digits do\n       \
    \     if num:sub(i, i) == hex_prime_digits[j] then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "  local\
    \ hex = {\n    ['0'] = 0,\n    ['1'] = 1,\n    ['2'] = 2,\n    ['3'] = 3,\n  \
    \  ['4'] = 4,\n    ['5'] = 5,\n    ['6'] = 6,\n    ['7'] = 7,\n    ['8'] = 8,\n\
    \    ['9'] = 9,\n    ['A'] = 10,\n    ['B'] = 11,\n    ['C'] = 12,\n    ['D']\
    \ = 13,\n    ['E'] = 14,\n    ['F'] = 15\n  }\n  local primes = {2, 3, 5, 7, 11,\
    \ 13}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n  \
    \    if hex[num:sub(i, i)] == primes[j] then\n        count = count + 1\n    \
    \  end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "    local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for\
    \ j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n        \
    \        count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    if table.indexOf(primes, num:sub(i, i)) then\n\
    \      count = count + 1\n    end\n  end\n  return count\nend", "  local hex_primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n\
    \    for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \   local hex = {\n        ['0'] = 0,\n        ['1'] = 1,\n        ['2'] = 2,\n\
    \        ['3'] = 3,\n        ['4'] = 4,\n        ['5'] = 5,\n        ['6'] = 6,\n\
    \        ['7'] = 7,\n        ['8'] = 8,\n        ['9'] = 9,\n        ['A'] = 10,\n\
    \        ['B'] = 11,\n        ['C'] = 12,\n        ['D'] = 13,\n        ['E']\
    \ = 14,\n        ['F'] = 15,\n    }\n    local primes = {2, 3, 5, 7, 11, 13}\n\
    \    local count = 0\n    for i = 1, #num do\n        for _, v in ipairs(primes)\
    \ do\n            if hex[num:sub(i, i)] == v then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "  local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num\
    \ do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n  \
    \      count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n\
    \    for i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i,\
    \ i) == primes[j] then\n                count = count + 1\n            end\n \
    \       end\n    end\n    return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    if table.contains(primes,\
    \ num:sub(i, i)) then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n\
    \    for i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i,\
    \ i) == primes[j] then\n                count = count + 1\n            end\n \
    \       end\n    end\n    return count\nend", "    local primes = {2, 3, 5, 7,\
    \ 11, 13}\n    local hex = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\
    \ 'A', 'B', 'C', 'D', 'E', 'F'}\n    local count = 0\n    for i = 1, #num do\n\
    \        for j = 1, #hex do\n            if num:sub(i, i) == hex[j] then\n   \
    \             for k = 1, #primes do\n                    if j == primes[k] then\n\
    \                        count = count + 1\n                    end\n        \
    \        end\n            end\n        end\n    end\n    return count\nend", " \
    \   local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for\
    \ i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i, i)\
    \ == primes[j] then\n                count = count + 1\n            end\n    \
    \    end\n    end\n    return count\nend", "    local hex_digits = {'0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n    local\
    \ primes = {2, 3, 5, 7, 11, 13}\n    local count = 0\n    for i = 1, #num do\n\
    \        for j = 1, #primes do\n            if num:sub(i, i) == hex_digits[primes[j]]\
    \ then\n                count = count + 1\n            end\n        end\n    end\n\
    \    return count\nend", "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex =\
    \ {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\
    \ 'F'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex do\n    \
    \  if num:sub(i, i) == hex[j] then\n        for k = 1, #primes do\n          if\
    \ j == primes[k] then\n            count = count + 1\n          end\n        end\n\
    \      end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1,\
    \ #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local hex_primes =\
    \ {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n  \
    \  for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j] then\n \
    \       count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \   local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for\
    \ i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i, i)\
    \ == primes[j] then\n                count = count + 1\n            end\n    \
    \    end\n    end\n    return count\nend", "  local hex_primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes\
    \ do\n      if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n\
    \      end\n    end\n  end\n  return count\nend", "    local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for\
    \ j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n        \
    \        count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count\
    \ = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i,\
    \ i) == primes[j] then\n                count = count + 1\n            end\n \
    \       end\n    end\n    return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {2, 3, 5, 7,\
    \ 11, 13}\n  local digits = {A = 10, B = 11, C = 12, D = 13, E = 14, F = 15}\n\
    \  local count = 0\n  for i = 1, #num do\n    local digit = tonumber(num:sub(i,\
    \ i)) or digits[num:sub(i, i)]\n    for _, prime in ipairs(primes) do\n      if\
    \ digit == prime then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local primes = {2, 3, 5, 7, 11, 13}\n  local count =\
    \ 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if tonumber(num:sub(i,\
    \ i), 16) == primes[j] then\n        count = count + 1\n      end\n    end\n \
    \ end\n  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if\
    \ num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if\
    \ num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if\
    \ num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if\
    \ num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if\
    \ num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if\
    \ num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "    local primes = {2, 3, 5, 7, 11, 13}\n    local\
    \ hex = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D',\
    \ 'E', 'F'}\n    local count = 0\n    for i = 1, #num do\n        for j = 1, #hex\
    \ do\n            if num:sub(i, i) == hex[j] then\n                for k = 1,\
    \ #primes do\n                    if j == primes[k] then\n                   \
    \     count = count + 1\n                    end\n                end\n      \
    \      end\n        end\n    end\n    return count\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "    local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n    \
    \    for j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n \
    \               count = count + 1\n            end\n        end\n    end\n   \
    \ return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n  \
    \  local count = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n  \
    \          if num:sub(i, i) == primes[j] then\n                count = count +\
    \ 1\n            end\n        end\n    end\n    return count\nend", "    local\
    \ primes = {2, 3, 5, 7, 11, 13}\n    local hex = {A = 10, B = 11, C = 12, D =\
    \ 13, E = 14, F = 15}\n    local sum = 0\n    for i = 1, #num do\n        local\
    \ d = tonumber(num:sub(i, i)) or hex[num:sub(i, i)]\n        for j = 1, #primes\
    \ do\n            if d == primes[j] then\n                sum = sum + 1\n    \
    \        end\n        end\n    end\n    return sum\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j\
    \ = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local hex = {\n   \
    \ ['0'] = 0,\n    ['1'] = 1,\n    ['2'] = 2,\n    ['3'] = 3,\n    ['4'] = 4,\n\
    \    ['5'] = 5,\n    ['6'] = 6,\n    ['7'] = 7,\n    ['8'] = 8,\n    ['9'] = 9,\n\
    \    ['A'] = 10,\n    ['B'] = 11,\n    ['C'] = 12,\n    ['D'] = 13,\n    ['E']\
    \ = 14,\n    ['F'] = 15\n  }\n  local primes = {2, 3, 5, 7, 11, 13}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if hex[num:sub(i,\
    \ i)] == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes do\n    \
    \  if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "  local hex_primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes\
    \ do\n      if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n\
    \      end\n    end\n  end\n  return count\nend", "    local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for\
    \ j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n        \
    \        count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i,\
    \ i) == hex_primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes do\n    \
    \  if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "    local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for j = 1, #primes\
    \ do\n            if num:sub(i, i) == primes[j] then\n                count =\
    \ count + 1\n            end\n        end\n    end\n    return count\nend", " \
    \ local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    if hex_primes[num:sub(i, i)] then\n      count = count +\
    \ 1\n    end\n  end\n  return count\nend", "    local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for j =\
    \ 1, #primes do\n            if num:sub(i, i) == primes[j] then\n            \
    \    count = count + 1\n            end\n        end\n    end\n    return count\n\
    end", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n\
    \  for i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i, i) ==\
    \ hex_primes[j] then\n        count = count + 1\n      end\n    end\n  end\n \
    \ return count\nend", "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex_primes\
    \ = {}\n  for _, prime in ipairs(primes) do\n    hex_primes[string.format('%X',\
    \ prime)] = true\n  end\n  local count = 0\n  for i = 1, #num do\n    if hex_primes[string.sub(num,\
    \ i, i)] then\n      count = count + 1\n    end\n  end\n  return count\nend",
  "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex = {'0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n  local count = 0\n\
    \  for i = 1, #num do\n    for j = 1, #hex do\n      if num:sub(i, i) == hex[j]\
    \ then\n        for k = 1, #primes do\n          if j == primes[k] then\n    \
    \        count = count + 1\n          end\n        end\n      end\n    end\n \
    \ end\n  return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if\
    \ num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend", "  local hex_primes = {'2', '3', '5', '7', 'B',\
    \ 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes do\n\
    \      if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n   \
    \   end\n    end\n  end\n  return count\nend", "    local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for\
    \ j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n        \
    \        count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "    local primes = {2, 3, 5, 7, 11, 13}\n    local hex_primes\
    \ = {}\n    for i = 1, #primes do\n        hex_primes[string.format('%X', primes[i])]\
    \ = true\n    end\n    local count = 0\n    for i = 1, #num do\n        if hex_primes[string.sub(num,\
    \ i, i)] then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex = {'0', '1',\
    \ '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #hex do\n      if num:sub(i,\
    \ i) == hex[j] then\n        for k = 1, #primes do\n          if j == primes[k]\
    \ then\n            count = count + 1\n          end\n        end\n      end\n\
    \    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n\
    \      if num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "    local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for j = 1, #primes\
    \ do\n            if num:sub(i, i) == primes[j] then\n                count =\
    \ count + 1\n            end\n        end\n    end\n    return count\nend", " \
    \ local hex = {\n    ['0'] = 0,\n    ['1'] = 1,\n    ['2'] = 2,\n    ['3'] = 3,\n\
    \    ['4'] = 4,\n    ['5'] = 5,\n    ['6'] = 6,\n    ['7'] = 7,\n    ['8'] = 8,\n\
    \    ['9'] = 9,\n    ['A'] = 10,\n    ['B'] = 11,\n    ['C'] = 12,\n    ['D']\
    \ = 13,\n    ['E'] = 14,\n    ['F'] = 15\n  }\n  local primes = {2, 3, 5, 7, 11,\
    \ 13}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n  \
    \    if hex[num:sub(i, i)] == primes[j] then\n        count = count + 1\n    \
    \  end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local hex_primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1,\
    \ #hex_primes do\n      if num:sub(i, i) == hex_primes[j] then\n        count\
    \ = count + 1\n      end\n    end\n  end\n  return count\nend", "    local primes\
    \ = {2, 3, 5, 7, 11, 13}\n    local hex_primes = {}\n    for i, v in ipairs(primes)\
    \ do\n        hex_primes[v] = true\n    end\n    local count = 0\n    for i =\
    \ 1, #num do\n        local hex_num = tonumber(num:sub(i, i), 16)\n        if\
    \ hex_primes[hex_num] then\n            count = count + 1\n        end\n    end\n\
    \    return count\nend", "    local primes = {2, 3, 5, 7, 11, 13}\n    local hex_to_dec\
    \ = {\n        ['0'] = 0, ['1'] = 1, ['2'] = 2, ['3'] = 3, ['4'] = 4,\n      \
    \  ['5'] = 5, ['6'] = 6, ['7'] = 7, ['8'] = 8, ['9'] = 9,\n        ['A'] = 10,\
    \ ['B'] = 11, ['C'] = 12, ['D'] = 13, ['E'] = 14, ['F'] = 15\n    }\n    local\
    \ count = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n         \
    \   if hex_to_dec[num:sub(i, i)] == primes[j] then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "    local\
    \ primes = {2, 3, 5, 7, 11, 13}\n    local count = 0\n    for i = 1, #num do\n\
    \        local digit = tonumber(num:sub(i, i), 16)\n        for _, prime in ipairs(primes)\
    \ do\n            if digit == prime then\n                count = count + 1\n\
    \            end\n        end\n    end\n    return count\nend", "  local primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n\
    \    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n       \
    \ count = count + 1\n      end\n    end\n  end\n  return count\nend", "  local\
    \ primes = {2, 3, 5, 7, 11, 13}\n  local count = 0\n  for i = 1, #num do\n   \
    \ for j = 1, #primes do\n      if tonumber(num:sub(i, i), 16) == primes[j] then\n\
    \        count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local hex = {\n    ['0'] = 0,\n    ['1'] = 1,\n    ['2'] = 2,\n    ['3'] = 3,\n\
    \    ['4'] = 4,\n    ['5'] = 5,\n    ['6'] = 6,\n    ['7'] = 7,\n    ['8'] = 8,\n\
    \    ['9'] = 9,\n    ['A'] = 10,\n    ['B'] = 11,\n    ['C'] = 12,\n    ['D']\
    \ = 13,\n    ['E'] = 14,\n    ['F'] = 15\n  }\n  local primes = {2, 3, 5, 7, 11,\
    \ 13}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n  \
    \    if hex[num:sub(i, i)] == primes[j] then\n        count = count + 1\n    \
    \  end\n    end\n  end\n  return count\nend", "    local hex = {\n        ['0']\
    \ = 0,\n        ['1'] = 1,\n        ['2'] = 2,\n        ['3'] = 3,\n        ['4']\
    \ = 4,\n        ['5'] = 5,\n        ['6'] = 6,\n        ['7'] = 7,\n        ['8']\
    \ = 8,\n        ['9'] = 9,\n        ['A'] = 10,\n        ['B'] = 11,\n       \
    \ ['C'] = 12,\n        ['D'] = 13,\n        ['E'] = 14,\n        ['F'] = 15,\n\
    \    }\n    local primes = {2, 3, 5, 7, 11, 13}\n    local count = 0\n    for\
    \ i = 1, #num do\n        for j = 1, #primes do\n            if hex[num:sub(i,\
    \ i)] == primes[j] then\n                count = count + 1\n            end\n\
    \        end\n    end\n    return count\nend", "    local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for\
    \ j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n        \
    \        count = count + 1\n            end\n        end\n    end\n    return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count\
    \ = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i)\
    \ == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n  return\
    \ count\nend", "  local primes = {2, 3, 5, 7, 11, 13}\n  local hex = {0, 1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15}\n  local counter = 0\n  for i =\
    \ 1, #num do\n    for j = 1, #hex do\n      if num:sub(i, i) == tostring(hex[j])\
    \ then\n        for k = 1, #primes do\n          if hex[j] == primes[k] then\n\
    \            counter = counter + 1\n          end\n        end\n      end\n  \
    \  end\n  end\n  return counter\nend", "    local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for j = 1, #primes\
    \ do\n            if num:sub(i, i) == primes[j] then\n                count =\
    \ count + 1\n            end\n        end\n    end\n    return count\nend", " \
    \   local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for\
    \ i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i, i)\
    \ == primes[j] then\n                count = count + 1\n            end\n    \
    \    end\n    end\n    return count\nend", "  local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n\
    \      if num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n\
    \      if num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n\
    \      if num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "    local hex_digits = {'0', '1', '2',\
    \ '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n    local\
    \ primes = {2, 3, 5, 7, 11, 13}\n    local count = 0\n    for i = 1, #num do\n\
    \        for j = 1, #hex_digits do\n            if num:sub(i, i) == hex_digits[j]\
    \ then\n                for k = 1, #primes do\n                    if j == primes[k]\
    \ then\n                        count = count + 1\n                    end\n \
    \               end\n            end\n        end\n    end\n    return count\n\
    end", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n\
    \  for i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i, i) ==\
    \ hex_primes[j] then\n        count = count + 1\n      end\n    end\n  end\n \
    \ return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes do\n    \
    \  if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "  local hex_primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #hex_primes\
    \ do\n      if num:sub(i, i) == hex_primes[j] then\n        count = count + 1\n\
    \      end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1,\
    \ #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local primes = {2,\
    \ 3, 5, 7, 11, 13}\n  local hex_digits = {'0', '1', '2', '3', '4', '5', '6', '7',\
    \ '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n  local hex_to_dec = {}\n  for i =\
    \ 1, #hex_digits do\n    hex_to_dec[hex_digits[i]] = i\n  end\n  local dec_to_hex\
    \ = {}\n  for i = 1, #hex_digits do\n    dec_to_hex[i] = hex_digits[i]\n  end\n\
    \  local function hex_to_decimal(num)\n    local decimal = 0\n    local power\
    \ = 0\n    for i = #num, 1, -1 do\n      local digit = num:sub(i, i)\n      decimal\
    \ = decimal + hex_to_dec[digit] * 16 ^ power\n      power = power + 1\n    end\n\
    \    return decimal\n  end\n  local function decimal_to_hex(num)\n    local hex\
    \ = ''\n    while num > 0 do\n      local digit = num % 16\n      hex = dec_to_hex[digit]\
    \ .. hex\n      num = math.floor(num / 16)\n    end\n    return hex\n  end\n \
    \ local function is_prime(num)\n    if num == 1 then\n      return false\n   \
    \ end\n    for i = 2, math.sqrt(num) do\n      if num % i == 0 then\n        return\
    \ false\n      end\n    end\n    return true\n  end\n  local function count_primes(num)\n\
    \    local count = 0\n    for i = 1, #num do\n      local digit = num:sub(i, i)\n\
    \      if is_prime(hex_to_dec[digit]) then\n        count = count + 1\n      end\n\
    \    end\n    return count\n  end\n  return count_primes(num)\nend", "  local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num\
    \ do\n    if table.indexOf(primes, num:sub(i, i)) then\n      count = count +\
    \ 1\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5', '7',\
    \ 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n\
    \      if num:sub(i, i) == primes[j] then\n        count = count + 1\n      end\n\
    \    end\n  end\n  return count\nend", "  local count = 0\n  local primes = {2,\
    \ 3, 5, 7, 11, 13}\n  for i = 1, #num do\n    local digit = tonumber(num:sub(i,\
    \ i), 16)\n    for j = 1, #primes do\n      if digit == primes[j] then\n     \
    \   count = count + 1\n      end\n    end\n  end\n  return count\nend", "  local\
    \ hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1,\
    \ #num do\n    if table.index_of(hex_primes, num:sub(i, i)) then\n      count\
    \ = count + 1\n    end\n  end\n  return count\nend", "  local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1,\
    \ #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "  local primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    if table.contains(primes,\
    \ num:sub(i, i)) then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n\
    \  for i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i, i) ==\
    \ hex_primes[j] then\n        count = count + 1\n      end\n    end\n  end\n \
    \ return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i,\
    \ i) == primes[j] then\n        count = count + 1\n      end\n    end\n  end\n\
    \  return count\nend", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n  \
    \  local count = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n  \
    \          if num:sub(i, i) == primes[j] then\n                count = count +\
    \ 1\n            end\n        end\n    end\n    return count\nend", "  local primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n\
    \    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n       \
    \ count = count + 1\n      end\n    end\n  end\n  return count\nend", "    local\
    \ hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for i\
    \ = 1, #num do\n        for j = 1, #hex_primes do\n            if num:sub(i, i)\
    \ == hex_primes[j] then\n                count = count + 1\n            end\n\
    \        end\n    end\n    return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    if table.indexof(primes,\
    \ num:sub(i, i)) then\n      count = count + 1\n    end\n  end\n  return count\n\
    end", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "\tlocal primes = {2, 3, 5, 7, 11, 13}\n\tlocal hex = {'A', 'B', 'C', 'D',\
    \ 'E', 'F'}\n\tlocal count = 0\n\tfor i = 1, #num do\n\t\tlocal digit = tonumber(num:sub(i,\
    \ i), 16)\n\t\tif digit == nil then\n\t\t\tfor j = 1, #hex do\n\t\t\t\tif num:sub(i,\
    \ i) == hex[j] then\n\t\t\t\t\tdigit = j + 9\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\
    \t\tfor j = 1, #primes do\n\t\t\tif digit == primes[j] then\n\t\t\t\tcount = count\
    \ + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn count\nend", "  local primes = {2,\
    \ 3, 5, 7, 11, 13}\n  local hex_to_dec = {\n    ['0'] = 0,\n    ['1'] = 1,\n \
    \   ['2'] = 2,\n    ['3'] = 3,\n    ['4'] = 4,\n    ['5'] = 5,\n    ['6'] = 6,\n\
    \    ['7'] = 7,\n    ['8'] = 8,\n    ['9'] = 9,\n    ['A'] = 10,\n    ['B'] =\
    \ 11,\n    ['C'] = 12,\n    ['D'] = 13,\n    ['E'] = 14,\n    ['F'] = 15\n  }\n\
    \  local count = 0\n  for i = 1, #num do\n    local digit = num:sub(i, i)\n  \
    \  if hex_to_dec[digit] then\n      for _, prime in ipairs(primes) do\n      \
    \  if hex_to_dec[digit] == prime then\n          count = count + 1\n        end\n\
    \      end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3',\
    \ '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1,\
    \ #primes do\n      if num:sub(i, i) == primes[j] then\n        count = count\
    \ + 1\n      end\n    end\n  end\n  return count\nend", "    local hex_primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n\
    \        for j = 1, #hex_primes do\n            if num:sub(i, i) == hex_primes[j]\
    \ then\n                count = count + 1\n            end\n        end\n    end\n\
    \    return count\nend", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local\
    \ count = 0\n  for i = 1, #num do\n    if table.contains(primes, num:sub(i, i))\
    \ then\n      count = count + 1\n    end\n  end\n  return count\nend", "  local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num\
    \ do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n  \
    \      count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local primes = {2, 3, 5, 7, 11, 13}\n  local digits = {'0', '1', '2', '3', '4',\
    \ '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n  local count = 0\n\
    \  for i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == digits[primes[j]]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n\
    \    for i = 1, #num do\n        for j = 1, #primes do\n            if num:sub(i,\
    \ i) == primes[j] then\n                count = count + 1\n            end\n \
    \       end\n    end\n    return count\nend", "    local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n        for j =\
    \ 1, #primes do\n            if num:sub(i, i) == primes[j] then\n            \
    \    count = count + 1\n            end\n        end\n    end\n    return count\n\
    end", "  local primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "    local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n    local count\
    \ = 0\n    for i = 1, #num do\n        for j = 1, #hex_primes do\n           \
    \ if num:sub(i, i) == hex_primes[j] then\n                count = count + 1\n\
    \            end\n        end\n    end\n    return count\nend", "    local primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n\
    \        for j = 1, #primes do\n            if num:sub(i, i) == primes[j] then\n\
    \                count = count + 1\n            end\n        end\n    end\n  \
    \  return count\nend", "    local primes = {2, 3, 5, 7, 11, 13}\n    local hex_digits\
    \ = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E',\
    \ 'F'}\n    local hex_to_dec = {}\n    for i, v in ipairs(hex_digits) do\n   \
    \     hex_to_dec[v] = i\n    end\n    local count = 0\n    for i = 1, #num do\n\
    \        local digit = hex_to_dec[num:sub(i, i)]\n        for _, prime in ipairs(primes)\
    \ do\n            if digit == prime then\n                count = count + 1\n\
    \            end\n        end\n    end\n    return count\nend", "  local hex =\
    \ {'0','1','2','3','4','5','6','7','8','9','A','B','C','D','E','F'}\n  local primes\
    \ = {'2','3','5','7','B','D'}\n  local count = 0\n  for i = 1, #num do\n    for\
    \ j = 1, #primes do\n      if num:sub(i,i) == primes[j] then\n        count =\
    \ count + 1\n      end\n    end\n  end\n  return count\nend", "    local hex_primes\
    \ = {'2', '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n\
    \        for j = 1, #hex_primes do\n            if num:sub(i, i) == hex_primes[j]\
    \ then\n                count = count + 1\n            end\n        end\n    end\n\
    \    return count\nend", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \    local count = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n\
    \            if num:sub(i, i) == primes[j] then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "    local\
    \ primes = {2, 3, 5, 7, 11, 13}\n    local hex = {'0', '1', '2', '3', '4', '5',\
    \ '6', '7', '8', '9', 'A', 'B', 'C', 'D', 'E', 'F'}\n    local count = 0\n   \
    \ for i = 1, #num do\n        for j = 1, #hex do\n            if num:sub(i, i)\
    \ == hex[j] then\n                for k = 1, #primes do\n                    if\
    \ j == primes[k] then\n                        count = count + 1\n           \
    \         end\n                end\n            end\n        end\n    end\n  \
    \  return count\nend", "    local primes = {2, 3, 5, 7, 11, 13}\n    local count\
    \ = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n            if tonumber(num:sub(i,\
    \ i), 16) == primes[j] then\n                count = count + 1\n            end\n\
    \        end\n    end\n    return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "  local primes = {'2', '3', '5',\
    \ '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num do\n    for j = 1, #primes\
    \ do\n      if num:sub(i, i) == primes[j] then\n        count = count + 1\n  \
    \    end\n    end\n  end\n  return count\nend", "    local hex_primes = {'2',\
    \ '3', '5', '7', 'B', 'D'}\n    local count = 0\n    for i = 1, #num do\n    \
    \    for j = 1, #hex_primes do\n            if num:sub(i, i) == hex_primes[j]\
    \ then\n                count = count + 1\n            end\n        end\n    end\n\
    \    return count\nend", "    local primes = {'2', '3', '5', '7', 'B', 'D'}\n\
    \    local count = 0\n    for i = 1, #num do\n        for j = 1, #primes do\n\
    \            if num:sub(i, i) == primes[j] then\n                count = count\
    \ + 1\n            end\n        end\n    end\n    return count\nend", "  local\
    \ primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for i = 1, #num\
    \ do\n    for j = 1, #primes do\n      if num:sub(i, i) == primes[j] then\n  \
    \      count = count + 1\n      end\n    end\n  end\n  return count\nend", " \
    \ local hex_primes = {'2', '3', '5', '7', 'B', 'D'}\n  local count = 0\n  for\
    \ i = 1, #num do\n    for j = 1, #hex_primes do\n      if num:sub(i, i) == hex_primes[j]\
    \ then\n        count = count + 1\n      end\n    end\n  end\n  return count\n\
    end", "  local hex = {\n    ['0'] = 0, ['1'] = 1, ['2'] = 2, ['3'] = 3, ['4']\
    \ = 4, ['5'] = 5,\n    ['6'] = 6, ['7'] = 7, ['8'] = 8, ['9'] = 9, ['A'] = 10,\
    \ ['B'] = 11,\n    ['C'] = 12, ['D'] = 13, ['E'] = 14, ['F'] = 15\n  }\n  local\
    \ primes = {2, 3, 5, 7, 11, 13}\n  local count = 0\n  for i = 1, #num do\n   \
    \ local digit = tonumber(hex[num:sub(i, i)])\n    for j = 1, #primes do\n    \
    \  if digit == primes[j] then\n        count = count + 1\n      end\n    end\n\
    \  end\n  return count\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

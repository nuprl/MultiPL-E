name: HumanEval_44_change_base
language: lua
prompt: "-- Change numerical base of input number x to base.\n-- return string representation\
  \ after the conversion.\n-- base numbers are less than 10.\n-- >>> change_base(8,\
  \ 3)\n-- '22'\n-- >>> change_base(8, 2)\n-- '1000'\n-- >>> change_base(7, 2)\n--\
  \ '111'\nlocal function change_base(x, base)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = change_base\n\
  \    lu.assertEquals(candidate(8, 3), '22')\n    lu.assertEquals(candidate(9, 3),\
  \ '100')\n    lu.assertEquals(candidate(234, 2), '11101010')\n    lu.assertEquals(candidate(16,\
  \ 2), '10000')\n    lu.assertEquals(candidate(8, 2), '1000')\n    lu.assertEquals(candidate(7,\
  \ 2), '111')\n    lu.assertEquals(candidate(2, 3), '2')\n    lu.assertEquals(candidate(3,\
  \ 4), '3')\n    lu.assertEquals(candidate(4, 5), '4')\n    lu.assertEquals(candidate(5,\
  \ 6), '5')\n    lu.assertEquals(candidate(6, 7), '6')\n    lu.assertEquals(candidate(7,\
  \ 8), '7')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = ''\n    while x > 0 do\n        local r = x % base\n\
    \        result = result .. tostring(r)\n        x = math.floor(x / base)\n  \
    \  end\n    return result\nend", "    local result = ''\n    while x > 0 do\n\
    \        local r = x % base\n        x = (x - r) / base\n        result = tostring(r)\
    \ .. result\n    end\n    return result\nend", "    local r = ''\n    while x\
    \ > 0 do\n        r = tostring(x % base) .. r\n        x = math.floor(x / base)\n\
    \    end\n    return r\nend", "    local result = ''\n    while x > 0 do\n   \
    \     local r = x % base\n        result = result .. tostring(r)\n        x =\
    \ math.floor(x / base)\n    end\n    return string.reverse(result)\nend", "  \
    \  local result = ''\n    while x > 0 do\n        result = tostring(x % base)\
    \ .. result\n        x = math.floor(x / base)\n    end\n    return result\nend",
  "    local result = ''\n    local remainder = 0\n    while x > 0 do\n        remainder\
    \ = x % base\n        x = math.floor(x / base)\n        result = tostring(remainder)\
    \ .. result\n    end\n    return result\nend", "    local result = ''\n    while\
    \ x > 0 do\n        local r = x % base\n        x = math.floor(x / base)\n   \
    \     result = tostring(r) .. result\n    end\n    return result\nend", "    local\
    \ result = ''\n    while x > 0 do\n        result = tostring(x % base) .. result\n\
    \        x = math.floor(x / base)\n    end\n    return result\nend", "    local\
    \ result = ''\n    while x > 0 do\n        local r = x % base\n        x = (x\
    \ - r) / base\n        result = tostring(r) .. result\n    end\n    return result\n\
    end", "    local result = ''\n    local digit = 0\n    while x > 0 do\n      \
    \  digit = x % base\n        x = math.floor(x / base)\n        result = tostring(digit)\
    \ .. result\n    end\n    return result\nend", "    local result = ''\n    while\
    \ x > 0 do\n        local r = x % base\n        x = math.floor(x / base)\n   \
    \     result = tostring(r) .. result\n    end\n    return result\nend", "    local\
    \ result = ''\n    while x > 0 do\n        local digit = x % base\n        result\
    \ = tostring(digit) .. result\n        x = math.floor(x / base)\n    end\n   \
    \ return result\nend", "    local result = ''\n    while x > 0 do\n        local\
    \ r = x % base\n        result = tostring(r) .. result\n        x = math.floor(x\
    \ / base)\n    end\n    return result\nend", "    local result = ''\n    while\
    \ x > 0 do\n        local r = x % base\n        result = tostring(r) .. result\n\
    \        x = math.floor(x / base)\n    end\n    return result\nend", "  local\
    \ result = ''\n  while x > 0 do\n    result = tostring(x % base) .. result\n \
    \   x = math.floor(x / base)\n  end\n  return result\nend", "    local result\
    \ = ''\n    while x > 0 do\n        local r = x % base\n        x = (x - r) /\
    \ base\n        result = tostring(r) .. result\n    end\n    return result\nend",
  "    local result = ''\n    while x > 0 do\n        result = tostring(x % base)\
    \ .. result\n        x = math.floor(x / base)\n    end\n    return result\nend",
  "    local result = ''\n    while x > 0 do\n        local r = x % base\n       \
    \ result = tostring(r) .. result\n        x = (x - r) / base\n    end\n    return\
    \ result\nend", "    local result = ''\n    while x > 0 do\n        local r =\
    \ x % base\n        result = tostring(r) .. result\n        x = math.floor(x /\
    \ base)\n    end\n    return result\nend", "    local result = ''\n    while x\
    \ > 0 do\n        local remainder = x % base\n        result = tostring(remainder)\
    \ .. result\n        x = math.floor(x / base)\n    end\n    return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_76_is_simple_power
language: lua
prompt: "-- Your task is to write a function that returns true if a number x is a\
  \ simple\n-- power of n and false in other cases.\n-- x is a simple power of n if\
  \ n**int=x\n-- For example:\n-- >>> is_simple_power(1, 4)\n-- true\n-- >>> is_simple_power(2,\
  \ 2)\n-- true\n-- >>> is_simple_power(8, 2)\n-- true\n-- >>> is_simple_power(3,\
  \ 2)\n-- false\n-- >>> is_simple_power(3, 1)\n-- false\n-- >>> is_simple_power(5,\
  \ 3)\n-- false\nlocal function is_simple_power(x, n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_simple_power\n\
  \    lu.assertEquals(candidate(16, 2), true)\n    lu.assertEquals(candidate(143214,\
  \ 16), false)\n    lu.assertEquals(candidate(4, 2), true)\n    lu.assertEquals(candidate(9,\
  \ 3), true)\n    lu.assertEquals(candidate(16, 4), true)\n    lu.assertEquals(candidate(24,\
  \ 2), false)\n    lu.assertEquals(candidate(128, 4), false)\n    lu.assertEquals(candidate(12,\
  \ 6), false)\n    lu.assertEquals(candidate(1, 1), true)\n    lu.assertEquals(candidate(1,\
  \ 12), true)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  if x == 1 then return true end\n  if n == 1 then return false end\n\
    \  local p = math.log(x) / math.log(n)\n  return p == math.floor(p)\nend", " \
    \ return x == n ^ math.floor(math.log(x) / math.log(n))\nend", "  if x == 1 then\
    \ return true end\n  if x < 1 or n < 1 then return false end\n  local i = 1\n\
    \  while i <= x do\n    if i == x then return true end\n    i = i * n\n  end\n\
    \  return false\nend", "  if x == 1 then return true end\n  local p = n\n  while\
    \ p < x do\n    p = p * n\n  end\n  return p == x\nend", "  local int = math.log(x)\
    \ / math.log(n)\n  return int == math.floor(int)\nend", "    local i = 1\n   \
    \ while i <= x do\n        if i == x then\n            return true\n        end\n\
    \        i = i * n\n    end\n    return false\nend", "  -- your code here\nend",
  "  return x == n^math.floor(math.log(x)/math.log(n))\nend", "    local i = 0\n \
    \   while n^i < x do\n        i = i + 1\n    end\n    return n^i == x\nend", " \
    \   return x == 1 or (x % n == 0 and is_simple_power(x / n, n))\nend", "  local\
    \ i = 1\n  while i < x do\n    i = i * n\n  end\n  return i == x\nend", "  --\
    \ your code here\nend", "  local r = math.log(x) / math.log(n)\n  return r ==\
    \ math.floor(r)\nend", "    return math.log(x) / math.log(n) % 1 == 0\nend", " \
    \ if x == 1 then return true end\n  local i = 1\n  while i < x do\n    i = i *\
    \ n\n    if i == x then return true end\n  end\n  return false\nend", "  -- your\
    \ code here\nend", "  local p = math.log(x) / math.log(n)\n  return p == math.floor(p)\n\
    end", "    local i = 1\n    while i < x do\n        i = i * n\n    end\n    return\
    \ i == x\nend", "  local i = 1\n  while i < x do\n    i = i * n\n  end\n  return\
    \ i == x\nend", "  -- your code here\nend", "  if x == 1 then return true end\n\
    \  if x == n then return true end\n  if x % n ~= 0 then return false end\n  return\
    \ is_simple_power(x / n, n)\nend", "    local power = 1\n    while power <= x\
    \ do\n        if power == x then\n            return true\n        end\n     \
    \   power = power * n\n    end\n    return false\nend", "  local i = 0\n  while\
    \ n ^ i < x do\n    i = i + 1\n  end\n  return n ^ i == x\nend", "    local i\
    \ = 1\n    while n^i <= x do\n        if n^i == x then\n            return true\n\
    \        end\n        i = i + 1\n    end\n    return false\nend", "  return x\
    \ == 1 or (x % n == 0 and is_simple_power(x / n, n))\nend", "    local i = 1\n\
    \    while i <= x do\n        if i == x then\n            return true\n      \
    \  end\n        i = i * n\n    end\n    return false\nend", "  return x == n ^\
    \ math.floor(math.log(x) / math.log(n))\nend", "  if x == 1 then return true end\n\
    \  local i = 1\n  while i < x do\n    i = i * n\n    if i == x then return true\
    \ end\n  end\n  return false\nend", "  if x == 1 then return true end\n  if x\
    \ == n then return true end\n  if x < n then return false end\n  return is_simple_power(x\
    \ / n, n)\nend", "  -- your code here\nend", "    local p = math.log(x) / math.log(n)\n\
    \    return p == math.floor(p)\nend", "  return x == n ^ math.floor(math.log(x)\
    \ / math.log(n))\nend", "    local i = 1\n    while i < x do\n        i = i *\
    \ n\n    end\n    return i == x\nend", "  local i = 1\n  while n^i < x do\n  \
    \  i = i + 1\n  end\n  return n^i == x\nend", "    if x == 1 then\n        return\
    \ true\n    end\n    local i = 1\n    while i < x do\n        i = i * n\n    \
    \    if i == x then\n            return true\n        end\n    end\n    return\
    \ false\nend", "  local power = 1\n  while power < x do\n    power = power * n\n\
    \  end\n  return power == x\nend", "  if n == 1 then\n    return x == 1\n  end\n\
    \  local i = 1\n  while i < x do\n    i = i * n\n  end\n  return i == x\nend",
  "    -- your code here\nend", "    return x == 1 or x == n or x % n == 0 and is_simple_power(x\
    \ / n, n)\nend", "  if x == 1 then return true end\n  local i = 1\n  while n ^\
    \ i < x do\n    i = i + 1\n  end\n  return n ^ i == x\nend", "    local i = 1\n\
    \    while i < x do\n        i = i * n\n    end\n    return i == x\nend", "  \
    \  local i = 1\n    while i < x do\n        i = i * n\n    end\n    return i ==\
    \ x\nend", "  return x == n ^ math.floor(math.log(x) / math.log(n))\nend", " \
    \   if x == 1 then\n        return true\n    end\n    local i = 1\n    while i\
    \ <= x do\n        if i == x then\n            return true\n        end\n    \
    \    i = i * n\n    end\n    return false\nend", "  local i = 0\n  while true\
    \ do\n    local p = n ^ i\n    if p == x then\n      return true\n    elseif p\
    \ > x then\n      return false\n    end\n    i = i + 1\n  end\nend", "  local\
    \ int = math.log(x) / math.log(n)\n  return math.floor(int) == int\nend", "  \
    \  local power = 1\n    while power < x do\n        power = power * n\n    end\n\
    \    return power == x\nend", "  -- your code here\nend", "  if x == 1 then return\
    \ true end\n  local i = 1\n  while i < x do\n    i = i * n\n    if i == x then\
    \ return true end\n  end\n  return false\nend", "  local i = 1\n  while i <= x\
    \ do\n    if i == x then\n      return true\n    end\n    i = i * n\n  end\n \
    \ return false\nend", "  if x == 1 then return true end\n  local i = 1\n  while\
    \ i < x do\n    i = i * n\n    if i == x then return true end\n  end\n  return\
    \ false\nend", "  if x == 1 then return true end\n  local i = 1\n  while i < x\
    \ do\n    i = i * n\n    if i == x then return true end\n  end\n  return false\n\
    end", "  -- your code here\nend", "    local i = 1\n    while i < x do\n     \
    \   i = i * n\n    end\n    return i == x\nend", "  local i = 1\n  while n^i <\
    \ x do\n    i = i + 1\n  end\n  return n^i == x\nend", "    local i = 1\n    while\
    \ i < x do\n        i = i * n\n    end\n    return i == x\nend", "  local i =\
    \ 1\n  while i <= x do\n    if i == x then\n      return true\n    end\n    i\
    \ = i * n\n  end\n  return false\nend", "  -- your code here\nend", "    local\
    \ i = 1\n    while i <= x do\n        if i == x then\n            return true\n\
    \        end\n        i = i * n\n    end\n    return false\nend", "  if x == 1\
    \ then return true end\n  if n == 1 then return false end\n  local i = 1\n  while\
    \ n^i < x do\n    i = i + 1\n  end\n  return n^i == x\nend", "    if x == 1 then\n\
    \        return true\n    end\n    if n == 1 then\n        return false\n    end\n\
    \    local i = 1\n    while i < x do\n        i = i * n\n    end\n    return i\
    \ == x\nend", "    local i = 0\n    while true do\n        local power = n ^ i\n\
    \        if power == x then\n            return true\n        elseif power > x\
    \ then\n            return false\n        end\n        i = i + 1\n    end\nend",
  "  -- your code here\nend", "  -- your code here\nend", "  if x == 1 then return\
    \ true end\n  local i = 1\n  while i < x do\n    i = i * n\n    if i == x then\
    \ return true end\n  end\n  return false\nend", "  return x == n ^ math.floor(math.log(x)\
    \ / math.log(n))\nend", "  -- your code here\nend", "  return x == 1 or (x % n\
    \ == 0 and is_simple_power(x / n, n))\nend", "  if x == 1 then return true end\n\
    \  local i = 1\n  while i < x do\n    i = i * n\n    if i == x then return true\
    \ end\n  end\n  return false\nend", "  -- your code here\nend", "    local i =\
    \ 1\n    while i <= x do\n        if i == x then\n            return true\n  \
    \      end\n        i = i * n\n    end\n    return false\nend", "  -- your code\
    \ here\nend", "    if x == 1 then\n        return true\n    end\n    if x == n\
    \ then\n        return true\n    end\n    local i = 2\n    while i < x do\n  \
    \      if n ^ i == x then\n            return true\n        end\n        i = i\
    \ + 1\n    end\n    return false\nend", "  local power = 1\n  while power < x\
    \ do\n    power = power * n\n  end\n  return power == x\nend", "  local i = 1\n\
    \  while i < x do\n    i = i * n\n  end\n  return i == x\nend", "  local i = 0\n\
    \  while true do\n    local p = n ^ i\n    if p == x then\n      return true\n\
    \    elseif p > x then\n      return false\n    end\n    i = i + 1\n  end\nend",
  "  -- your code here\nend", "  return x == n ^ math.floor(math.log(x) / math.log(n))\n\
    end", "  -- your code here\nend", "  if x == 1 then return true end\n  if x ==\
    \ n then return true end\n  if x % n ~= 0 then return false end\n  return is_simple_power(x\
    \ / n, n)\nend", "    local i = 1\n    while i < x do\n        if i == x then\n\
    \            return true\n        end\n        i = i * n\n    end\n    return\
    \ false\nend", "  local i = 0\n  while true do\n    local p = n ^ i\n    if p\
    \ == x then\n      return true\n    elseif p > x then\n      return false\n  \
    \  end\n    i = i + 1\n  end\nend", "    if x == 1 then\n        return true\n\
    \    end\n    if x % n ~= 0 then\n        return false\n    end\n    return is_simple_power(x\
    \ / n, n)\nend", "  -- your code here\nend", "  if x == 1 then return true end\n\
    \  if x == n then return true end\n  if x < n then return false end\n  return\
    \ is_simple_power(x / n, n)\nend", "    local i = 1\n    while i <= x do\n   \
    \     if i == x then\n            return true\n        end\n        i = i * n\n\
    \    end\n    return false\nend", "    if x == 1 then\n        return true\n \
    \   end\n    local i = 1\n    while i < x do\n        i = i * n\n        if i\
    \ == x then\n            return true\n        end\n    end\n    return false\n\
    end", "  if x == 1 then return true end\n  if n == 1 then return false end\n \
    \ local power = 1\n  while power < x do\n    power = power * n\n  end\n  return\
    \ power == x\nend", "    local i = 0\n    while n^i < x do\n        i = i + 1\n\
    \    end\n    return n^i == x\nend", "    local p = 1\n    while p < x do\n  \
    \      p = p * n\n    end\n    return p == x\nend", "  local i = 1\n  while n^i\
    \ <= x do\n    if n^i == x then\n      return true\n    end\n    i = i + 1\n \
    \ end\n  return false\nend", "  return x == n ^ math.floor(math.log(x) / math.log(n))\n\
    end", "  local result = false\n  local i = 1\n  while i < x do\n    if i * i ==\
    \ x then\n      result = true\n    end\n    i = i + 1\n  end\n  return result\n\
    end", "  if x == 1 then return true end\n  local i = 1\n  while i < x do\n   \
    \ i = i * n\n    if i == x then return true end\n  end\n  return false\nend",
  "  return x == 1 or (x % n == 0 and is_simple_power(x / n, n))\nend", "  if x ==\
    \ 1 then return true end\n  if x % n ~= 0 then return false end\n  return is_simple_power(x\
    \ / n, n)\nend", "  -- your code here\nend", "  local i = 1\n  while i < x do\n\
    \    i = i * n\n  end\n  return i == x\nend", "  return x == n ^ math.floor(math.log(x)\
    \ / math.log(n))\nend", "  local x_root = math.sqrt(x)\n  local n_root = math.sqrt(n)\n\
    \  return x_root == math.floor(x_root) and n_root == math.floor(n_root)\nend",
  "  -- your code here\nend", "  if x == 1 then return true end\n  local i = 1\n \
    \ while n^i < x do\n    i = i + 1\n  end\n  return n^i == x\nend", "  if x ==\
    \ 1 then return true end\n  if x == n then return true end\n  if x < n then return\
    \ false end\n  local p = n\n  while p < x do\n    p = p * n\n  end\n  return p\
    \ == x\nend", "  -- your code here\nend", "  local i = 1\n  while n^i < x do\n\
    \    i = i + 1\n  end\n  return n^i == x\nend", "  return x == n ^ math.floor(math.log(x)\
    \ / math.log(n))\nend", "  -- your code here\nend", "  -- your code here\nend",
  "  -- your code here\nend", "  -- your code here\nend", "    local result = false\n\
    \    local i = 0\n    while n ^ i < x do\n        i = i + 1\n    end\n    if n\
    \ ^ i == x then\n        result = true\n    end\n    return result\nend", "  --\
    \ your code here\nend", "  -- your code here\nend", "  local power = 1\n  while\
    \ power < x do\n    power = power * n\n  end\n  return power == x\nend", "  --\
    \ your code here\nend", "  return x == n ^ math.floor(math.log(x) / math.log(n))\n\
    end", "  local i = 0\n  while n ^ i < x do\n    i = i + 1\n  end\n  return n ^\
    \ i == x\nend", "  if x == 1 then return true end\n  local i = 1\n  while i <=\
    \ x do\n    if i == x then return true end\n    i = i * n\n  end\n  return false\n\
    end", "    -- your code here\nend", "  -- your code here\nend", "  local i = 0\n\
    \  while n^i < x do\n    i = i + 1\n  end\n  return n^i == x\nend", "    local\
    \ i = 1\n    while i < x do\n        i = i * n\n    end\n    return i == x\nend",
  "  return x == n ^ math.floor(math.log(x) / math.log(n))\nend", "  -- your code\
    \ here\nend", "  local i = 1\n  while n^i < x do\n    i = i + 1\n  end\n  return\
    \ n^i == x\nend", "    local i = 0\n    while n^i <= x do\n        if n^i == x\
    \ then\n            return true\n        end\n        i = i + 1\n    end\n   \
    \ return false\nend", "  -- your code here\nend", "  return math.log(x) / math.log(n)\
    \ % 1 == 0\nend", "  -- your code here\nend", "  -- your code here\nend", "  if\
    \ x == 1 then return true end\n  if n == 1 then return false end\n  local p =\
    \ n\n  while p < x do\n    p = p * n\n  end\n  return p == x\nend", "  if x ==\
    \ 1 then return true end\n  local i = 1\n  while i <= x do\n    if i == x then\
    \ return true end\n    i = i * n\n  end\n  return false\nend", "  if x == 1 then\
    \ return true end\n  if x == n then return true end\n  if x < n then return false\
    \ end\n  local i = 2\n  while i < x do\n    if i * n > x then return false end\n\
    \    if i * n == x then return true end\n    i = i + 1\n  end\n  return false\n\
    end", "  local i = 1\n  while i < x do\n    i = i * n\n  end\n  return i == x\n\
    end", "    if x == 1 then\n        return true\n    end\n    local i = 1\n   \
    \ while i <= x do\n        if i == x then\n            return true\n        end\n\
    \        i = i * n\n    end\n    return false\nend", "    -- your code here\n\
    end", "  local p = 1\n  while p < x do\n    p = p * n\n  end\n  return p == x\n\
    end", "  local i = 1\n  while i < x do\n    i = i * n\n  end\n  return i == x\n\
    end", "    local i = 1\n    while i < x do\n        i = i * n\n    end\n    return\
    \ i == x\nend", "    -- your code here\nend", "    local i = 1\n    while i <=\
    \ x do\n        if n ^ i == x then\n            return true\n        end\n   \
    \     i = i + 1\n    end\n    return false\nend", "  return x == n ^ math.floor(math.log(x)\
    \ / math.log(n))\nend", "  if x == 1 then return true end\n  if x == n then return\
    \ true end\n  if x < n then return false end\n  return is_simple_power(x / n,\
    \ n)\nend", "  -- your code here\nend", "    if x == 1 then\n        return true\n\
    \    end\n    local i = 1\n    while i <= x do\n        if i == x then\n     \
    \       return true\n        end\n        i = i * n\n    end\n    return false\n\
    end", "  -- your code here\nend", "  if n == 1 then\n    return x == 1\n  end\n\
    \  local i = 1\n  while i < x do\n    i = i * n\n  end\n  return i == x\nend",
  "    local power = 0\n    while n^power < x do\n        power = power + 1\n    end\n\
    \    return n^power == x\nend", "  if x == 1 then return true end\n  if n == 1\
    \ then return false end\n  local p = math.log(x) / math.log(n)\n  return p ==\
    \ math.floor(p)\nend", "    local i = 1\n    while n^i < x do\n        i = i +\
    \ 1\n    end\n    return n^i == x\nend", "  if x == 1 then return true end\n \
    \ local p = n\n  while p < x do\n    p = p * n\n  end\n  return p == x\nend",
  "  return x == n ^ math.floor(math.log(x) / math.log(n))\nend", "  -- your code\
    \ here\nend", "  -- your code here\nend", "  if x == 1 then return true end\n\
    \  if x == n then return true end\n  if x < n then return false end\n  return\
    \ is_simple_power(x / n, n)\nend", "    if x == 1 then\n        return true\n\
    \    end\n    local i = 1\n    while i < x do\n        i = i * n\n        if i\
    \ == x then\n            return true\n        end\n    end\n    return false\n\
    end", "  -- your code here\nend", "  local i = 0\n  while n^i < x do\n    i =\
    \ i + 1\n  end\n  return n^i == x\nend", "  if x == 1 then return true end\n \
    \ if x < 1 or n < 1 then return false end\n  local y = n\n  while y < x do\n \
    \   y = y * n\n  end\n  return y == x\nend", "  -- your code here\nend", "  --\
    \ your code here\nend", "    -- your code here\nend", "    if x == 1 then\n  \
    \      return true\n    end\n    local i = 1\n    while i < x do\n        i =\
    \ i * n\n        if i == x then\n            return true\n        end\n    end\n\
    \    return false\nend", "  local i = 0\n  while n^i < x do\n    i = i + 1\n \
    \ end\n  return n^i == x\nend", "  if x == 1 then return true end\n  if n == 1\
    \ then return false end\n  local i = 1\n  while i < x do\n    i = i * n\n  end\n\
    \  return i == x\nend", "  return x == 1 or (x % n == 0 and is_simple_power(x\
    \ / n, n))\nend", "  return x == 1 or (x % n == 0 and is_simple_power(x / n, n))\n\
    end", "  local i = 0\n  while n^i < x do\n    i = i + 1\n  end\n  return n^i ==\
    \ x\nend", "    -- your code here\nend", "  local power = 1\n  while power < x\
    \ do\n    power = power * n\n  end\n  return power == x\nend", "  local i = 1\n\
    \  while n^i <= x do\n    if n^i == x then\n      return true\n    end\n    i\
    \ = i + 1\n  end\n  return false\nend", "    if x == 1 then\n        return true\n\
    \    end\n    local i = 1\n    while i < x do\n        i = i * n\n        if i\
    \ == x then\n            return true\n        end\n    end\n    return false\n\
    end", "    local i = 1\n    while i < x do\n        i = i * n\n    end\n    return\
    \ i == x\nend", "    -- your code here\nend", "  if x == 1 then return true end\n\
    \  local i = 1\n  while i < x do\n    i = i * n\n    if i == x then return true\
    \ end\n  end\n  return false\nend", "  local i = 1\n  while n^i <= x do\n    if\
    \ n^i == x then\n      return true\n    end\n    i = i + 1\n  end\n  return false\n\
    end", "  -- your code here\nend", "  -- your code here\nend", "  -- your code\
    \ here\nend", "  if x == 1 then return true end\n  local i = 1\n  while i <= x\
    \ do\n    if i == x then return true end\n    i = i * n\n  end\n  return false\n\
    end", "  if x == 1 then return true end\n  local i = 1\n  while i < x do\n   \
    \ i = i * n\n    if i == x then return true end\n  end\n  return false\nend",
  "  -- your code here\nend", "  if x == 1 then return true end\n  local i = 1\n \
    \ while i < x do\n    i = i * n\n    if i == x then return true end\n  end\n \
    \ return false\nend", "  if x == 1 then return true end\n  local p = n\n  while\
    \ p < x do\n    p = p * n\n  end\n  return p == x\nend", "  local i = 1\n  while\
    \ i <= x do\n    if i == x then\n      return true\n    end\n    i = i * n\n \
    \ end\n  return false\nend", "  -- your code here\nend", "    local i = 1\n  \
    \  while n^i <= x do\n        if n^i == x then\n            return true\n    \
    \    end\n        i = i + 1\n    end\n    return false\nend", "  -- your code\
    \ here\nend", "  -- your code here\nend", "    local i = 0\n    while n^i <= x\
    \ do\n        if n^i == x then\n            return true\n        end\n       \
    \ i = i + 1\n    end\n    return false\nend", "  return x == n^(math.log(x) /\
    \ math.log(n))\nend", "    -- your code here\nend", "  if x == 1 then return true\
    \ end\n  local i = 1\n  while n^i < x do\n    i = i + 1\n  end\n  return n^i ==\
    \ x\nend", "    if x == 1 then\n        return true\n    end\n    local i = 1\n\
    \    while n^i < x do\n        i = i + 1\n    end\n    return n^i == x\nend",
  "    if x == 1 then\n        return true\n    end\n    local i = 1\n    while i\
    \ <= x do\n        if i == x then\n            return true\n        end\n    \
    \    i = i * n\n    end\n    return false\nend", "    -- your code here\nend",
  "  -- your code here\nend", "  local power = n\n  while power < x do\n    power\
    \ = power * n\n  end\n  return power == x\nend", "  -- your code here\nend", " \
    \ if x == 1 then return true end\n  local i = 1\n  while i < x do\n    i = i *\
    \ n\n    if i == x then return true end\n  end\n  return false\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

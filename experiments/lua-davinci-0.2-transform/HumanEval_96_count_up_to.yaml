name: HumanEval_96_count_up_to
language: lua
prompt: "-- Implement a function that takes an non-negative integer and returns an\
  \ array of the first n\n-- integers that are prime numbers and less than n.\n--\
  \ for example:\n-- >>> count_up_to(5)\n-- {2, 3}\n-- >>> count_up_to(11)\n-- {2,\
  \ 3, 5, 7}\n-- >>> count_up_to(0)\n-- {}\n-- >>> count_up_to(20)\n-- {2, 3, 5, 7,\
  \ 11, 13, 17, 19}\n-- >>> count_up_to(1)\n-- {}\n-- >>> count_up_to(18)\n-- {2,\
  \ 3, 5, 7, 11, 13, 17}\nlocal function count_up_to(n)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = count_up_to\n\
  \    lu.assertEquals(candidate(5), {2, 3})\n    lu.assertEquals(candidate(6), {2,\
  \ 3, 5})\n    lu.assertEquals(candidate(7), {2, 3, 5})\n    lu.assertEquals(candidate(10),\
  \ {2, 3, 5, 7})\n    lu.assertEquals(candidate(0), {})\n    lu.assertEquals(candidate(22),\
  \ {2, 3, 5, 7, 11, 13, 17, 19})\n    lu.assertEquals(candidate(1), {})\n    lu.assertEquals(candidate(18),\
  \ {2, 3, 5, 7, 11, 13, 17})\n    lu.assertEquals(candidate(47), {2, 3, 5, 7, 11,\
  \ 13, 17, 19, 23, 29, 31, 37, 41, 43})\n    lu.assertEquals(candidate(101), {2,\
  \ 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79,\
  \ 83, 89, 97})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = {}\n    local i = 2\n    while i < n do\n      \
    \  if is_prime(i) then\n            table.insert(result, i)\n        end\n   \
    \     i = i + 1\n    end\n    return result\nend", "  local primes = {}\n  for\
    \ i = 2, n do\n    if is_prime(i) then\n      table.insert(primes, i)\n    end\n\
    \  end\n  return primes\nend", "    local primes = {}\n    local i = 2\n    while\
    \ i < n do\n        if is_prime(i) then\n            table.insert(primes, i)\n\
    \        end\n        i = i + 1\n    end\n    return primes\nend", "    local\
    \ primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local result = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(result, i)\n        end\n    end\n    return result\n\
    end", "    local primes = {}\n    for i = 2, n do\n        local is_prime = true\n\
    \        for j = 2, i - 1 do\n            if i % j == 0 then\n               \
    \ is_prime = false\n                break\n            end\n        end\n    \
    \    if is_prime then\n            table.insert(primes, i)\n        end\n    end\n\
    \    return primes\nend", "    local result = {}\n    local i = 2\n    while i\
    \ < n do\n        local is_prime = true\n        for j = 2, i - 1 do\n       \
    \     if i % j == 0 then\n                is_prime = false\n                break\n\
    \            end\n        end\n        if is_prime then\n            table.insert(result,\
    \ i)\n        end\n        i = i + 1\n    end\n    return result\nend", "    local\
    \ primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(result, i)\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "  local result = {}\n  for i = 2, n do\n    if is_prime(i) then\n\
    \      table.insert(result, i)\n    end\n  end\n  return result\nend", "    local\
    \ primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(primes, i)\n        end\n        i = i + 1\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local result = {}\n    local i = 2\n    while i < n do\n\
    \        if is_prime(i) then\n            table.insert(result, i)\n        end\n\
    \        i = i + 1\n    end\n    return result\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        local is_prime = true\n\
    \        for j = 2, i - 1 do\n            if i % j == 0 then\n               \
    \ is_prime = false\n                break\n            end\n        end\n    \
    \    if is_prime then\n            table.insert(primes, i)\n        end\n    end\n\
    \    return primes\nend", "    local primes = {}\n    for i = 2, n do\n      \
    \  if is_prime(i) then\n            table.insert(primes, i)\n        end\n   \
    \ end\n    return primes\nend", "    local primes = {}\n    for i = 2, n do\n\
    \        local is_prime = true\n        for j = 2, i - 1 do\n            if i\
    \ % j == 0 then\n                is_prime = false\n                break\n   \
    \         end\n        end\n        if is_prime then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(result, i)\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local result = {}\n    local i = 2\n    while i < n do\n\
    \        if is_prime(i) then\n            table.insert(result, i)\n        end\n\
    \        i = i + 1\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        local is_prime = true\n\
    \        for j = 2, i - 1 do\n            if i % j == 0 then\n               \
    \ is_prime = false\n                break\n            end\n        end\n    \
    \    if is_prime then\n            table.insert(primes, i)\n        end\n    end\n\
    \    return primes\nend", "    local result = {}\n    local i = 2\n    while i\
    \ < n do\n        if is_prime(i) then\n            table.insert(result, i)\n \
    \       end\n        i = i + 1\n    end\n    return result\nend", "    local primes\
    \ = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(primes, i)\n        end\n        i = i + 1\n    end\n    return\
    \ primes\nend", "    local t = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(t, i)\n        end\n    end\n    return t\nend",
  "    local result = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(result, i)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(result, i)\n        end\n    end\n    return result\nend",
  "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(primes, i)\n        end\n    end\n    return primes\nend",
  "    local result = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(result, i)\n        end\n    end\n    return result\nend",
  "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(primes, i)\n        end\n    end\n    return primes\nend",
  "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(primes, i)\n        end\n    end\n    return primes\nend",
  "    local primes = {}\n    if n <= 1 then\n        return primes\n    end\n   \
    \ for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    if n < 2 then\n    \
    \    return {}\n    end\n    local primes = {}\n    for i = 2, n do\n        local\
    \ is_prime = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime then\n            table.insert(primes, i)\n  \
    \      end\n    end\n    return primes\nend", "    local result = {}\n    for\
    \ i = 2, n do\n        if is_prime(i) then\n            table.insert(result, i)\n\
    \        end\n    end\n    return result\nend", "    local primes = {}\n    for\
    \ i = 2, n do\n        if is_prime(i) then\n            table.insert(primes, i)\n\
    \        end\n    end\n    return primes\nend", "    local result = {}\n    for\
    \ i = 2, n do\n        if is_prime(i) then\n            table.insert(result, i)\n\
    \        end\n    end\n    return result\nend", "    local primes = {}\n    for\
    \ i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1 do\n  \
    \          if i % j == 0 then\n                is_prime = false\n            \
    \    break\n            end\n        end\n        if is_prime then\n         \
    \   table.insert(primes, i)\n        end\n    end\n    return primes\nend", " \
    \   local result = {}\n    for i = 2, n do\n        local is_prime = true\n  \
    \      for j = 2, i - 1 do\n            if i % j == 0 then\n                is_prime\
    \ = false\n                break\n            end\n        end\n        if is_prime\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        local is_prime\
    \ = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n      \
    \          is_prime = false\n                break\n            end\n        end\n\
    \        if is_prime then\n            table.insert(primes, i)\n        end\n\
    \    end\n    return primes\nend", "    local result = {}\n    for i = 2, n do\n\
    \        if is_prime(i) then\n            table.insert(result, i)\n        end\n\
    \    end\n    return result\nend", "    local primes = {}\n    for i = 2, n do\n\
    \        local is_prime = true\n        for j = 2, i - 1 do\n            if i\
    \ % j == 0 then\n                is_prime = false\n                break\n   \
    \         end\n        end\n        if is_prime then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "  local primes = {}\n  for i = 2, n do\n    if is_prime(i) then\n     \
    \ table.insert(primes, i)\n    end\n  end\n  return primes\nend", "    local result\
    \ = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(primes, i)\n        end\n        i = i + 1\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    -- TODO: implement this function\n    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(result, i)\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    if n < 2 then\n        return primes\n\
    \    end\n    for i = 2, n do\n        local is_prime = true\n        for j =\
    \ 2, i - 1 do\n            if i % j == 0 then\n                is_prime = false\n\
    \                break\n            end\n        end\n        if is_prime then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local result = {}\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(result, i)\n        end\n    end\n    return result\n\
    end", "  local primes = {}\n  for i = 2, n do\n    if is_prime(i) then\n     \
    \ table.insert(primes, i)\n    end\n  end\n  return primes\nend", "    local result\
    \ = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local result = {}\n    for i = 2, n do\n        local is_prime = true\n\
    \        for j = 2, i - 1 do\n            if i % j == 0 then\n               \
    \ is_prime = false\n                break\n            end\n        end\n    \
    \    if is_prime then\n            table.insert(result, i)\n        end\n    end\n\
    \    return result\nend", "    local primes = {}\n    local is_prime = true\n\
    \    for i = 2, n do\n        for j = 2, i - 1 do\n            if i % j == 0 then\n\
    \                is_prime = false\n                break\n            end\n  \
    \      end\n        if is_prime then\n            table.insert(primes, i)\n  \
    \      end\n        is_prime = true\n    end\n    return primes\nend", "    local\
    \ result = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    local count = 0\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       count = count + 1\n            result[count] = i\n        end\n    end\n\
    \    return result\nend", "    local primes = {}\n    for i = 2, n do\n      \
    \  if is_prime(i) then\n            table.insert(primes, i)\n        end\n   \
    \ end\n    return primes\nend", "    -- your code here\nend", "    local primes\
    \ = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(primes, i)\n        end\n        i = i + 1\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n - 1 do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for i = 2, n do\n        local is_prime\
    \ = true\n        for j = 2, i - 1 do\n            if i % j == 0 then\n      \
    \          is_prime = false\n                break\n            end\n        end\n\
    \        if is_prime then\n            table.insert(result, i)\n        end\n\
    \    end\n    return result\nend", "  local primes = {}\n  for i = 2, n do\n \
    \   if is_prime(i) then\n      table.insert(primes, i)\n    end\n  end\n  return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "  local result = {}\n  for i = 2, n do\n    if is_prime(i) then\n\
    \      table.insert(result, i)\n    end\n  end\n  return result\nend", "  local\
    \ primes = {}\n  for i = 2, n do\n    if is_prime(i) then\n      table.insert(primes,\
    \ i)\n    end\n  end\n  return primes\nend", "    local result = {}\n    for i\
    \ = 2, n do\n        if is_prime(i) then\n            table.insert(result, i)\n\
    \        end\n    end\n    return result\nend", "    local primes = {}\n    local\
    \ i = 2\n    while i < n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n        i = i + 1\n    end\n    return primes\nend", "    local\
    \ primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "  local result = {}\n  for i = 2, n do\n    if is_prime(i) then\n     \
    \ table.insert(result, i)\n    end\n  end\n  return result\nend", "    local primes\
    \ = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "  local primes = {}\n  for\
    \ i = 2, n do\n    if is_prime(i) then\n      table.insert(primes, i)\n    end\n\
    \  end\n  return primes\nend", "    local primes = {}\n    if n < 2 then\n   \
    \     return primes\n    end\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    local i = 2\n    while i < n do\n        if\
    \ is_prime(i) then\n            table.insert(primes, i)\n        end\n       \
    \ i = i + 1\n    end\n    return primes\nend", "    local primes = {}\n    for\
    \ i = 2, n do\n        if is_prime(i) then\n            table.insert(primes, i)\n\
    \        end\n    end\n    return primes\nend", "    local primes = {}\n    for\
    \ i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1 do\n  \
    \          if i % j == 0 then\n                is_prime = false\n            \
    \    break\n            end\n        end\n        if is_prime then\n         \
    \   table.insert(primes, i)\n        end\n    end\n    return primes\nend", " \
    \   local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n    \
    \        table.insert(primes, i)\n        end\n    end\n    return primes\nend",
  "    local primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(primes, i)\n        end\n    end\n    return primes\nend",
  "    local result = {}\n    for i = 2, n do\n        if is_prime(i) then\n     \
    \       table.insert(result, i)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    local i = 2\n    while i < n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n        i = i + 1\n\
    \    end\n    return result\nend", "    local primes = {}\n    for i = 2, n do\n\
    \        local is_prime = true\n        for j = 2, i - 1 do\n            if i\
    \ % j == 0 then\n                is_prime = false\n                break\n   \
    \         end\n        end\n        if is_prime then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(result, i)\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend", "    local primes = {}\n    local i = 1\n    while i < n do\n\
    \        if is_prime(i) then\n            table.insert(primes, i)\n        end\n\
    \        i = i + 1\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(primes, i)\n        end\n        i = i + 1\n    end\n    return\
    \ primes\nend", "    -- your code here\nend", "    local primes = {}\n    for\
    \ i = 2, n do\n        if is_prime(i) then\n            table.insert(primes, i)\n\
    \        end\n    end\n    return primes\nend", "    local primes = {}\n    for\
    \ i = 2, n do\n        if is_prime(i) then\n            table.insert(primes, i)\n\
    \        end\n    end\n    return primes\nend", "    local primes = {}\n    local\
    \ is_prime = true\n    for i = 2, n do\n        for j = 2, i do\n            if\
    \ i % j == 0 and i ~= j then\n                is_prime = false\n             \
    \   break\n            end\n        end\n        if is_prime then\n          \
    \  table.insert(primes, i)\n        end\n        is_prime = true\n    end\n  \
    \  return primes\nend", "    local primes = {}\n    for i = 2, n do\n        if\
    \ is_prime(i) then\n            table.insert(primes, i)\n        end\n    end\n\
    \    return primes\nend", "    local primes = {}\n    for i = 2, n do\n      \
    \  if is_prime(i) then\n            table.insert(primes, i)\n        end\n   \
    \ end\n    return primes\nend", "    local primes = {}\n    local count = 0\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          count = count + 1\n            primes[count] = i\n        end\n   \
    \ end\n    return primes\nend", "    local primes = {}\n    for i = 2, n do\n\
    \        local is_prime = true\n        for j = 2, i - 1 do\n            if i\
    \ % j == 0 then\n                is_prime = false\n                break\n   \
    \         end\n        end\n        if is_prime then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    local i = 2\n    while i < n do\n        if is_prime(i) then\n          \
    \  table.insert(result, i)\n        end\n        i = i + 1\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local result = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    local primes = {}\n    for i = 2, n do\n        if is_prime(i)\
    \ then\n            table.insert(primes, i)\n        end\n    end\n    return\
    \ primes\nend", "    if n < 2 then\n        return {}\n    end\n    local primes\
    \ = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n - 1 do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "  local result = {}\n  for\
    \ i = 2, n do\n    if is_prime(i) then\n      table.insert(result, i)\n    end\n\
    \  end\n  return result\nend", "    local result = {}\n    for i = 2, n - 1 do\n\
    \        if is_prime(i) then\n            table.insert(result, i)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for i = 2, n do\n\
    \        if is_prime(i) then\n            table.insert(result, i)\n        end\n\
    \    end\n    return result\nend", "    local primes = {}\n    if n < 2 then\n\
    \        return primes\n    end\n    for i = 2, n do\n        if is_prime(i) then\n\
    \            table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "  local primes = {}\n  for i = 2, n do\n    if is_prime(i) then\n     \
    \ table.insert(primes, i)\n    end\n  end\n  return primes\nend", "    local primes\
    \ = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local primes = {}\n\
    \    if n < 2 then\n        return primes\n    end\n    local i = 2\n    while\
    \ i < n do\n        local is_prime = true\n        for j = 2, i - 1 do\n     \
    \       if i % j == 0 then\n                is_prime = false\n               \
    \ break\n            end\n        end\n        if is_prime then\n            table.insert(primes,\
    \ i)\n        end\n        i = i + 1\n    end\n    return primes\nend", "    local\
    \ primes = {}\n    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "    local primes = {}\n\
    \    for i = 2, n do\n        local is_prime = true\n        for j = 2, i - 1\
    \ do\n            if i % j == 0 then\n                is_prime = false\n     \
    \           break\n            end\n        end\n        if is_prime then\n  \
    \          table.insert(primes, i)\n        end\n    end\n    return primes\n\
    end", "    local primes = {}\n    if n < 2 then\n        return primes\n    end\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(primes,\
    \ i)\n        end\n    end\n    return primes\nend", "    local result = {}\n\
    \    for i = 2, n do\n        if is_prime(i) then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

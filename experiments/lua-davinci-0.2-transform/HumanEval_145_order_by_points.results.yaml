language: lua
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function compare(a, b)\n        local sa\
    \ = sum_digits(a)\n        local sb = sum_digits(b)\n        if sa == sb then\n\
    \            return a < b\n        else\n            return sa < sb\n        end\n\
    \    end\n    table.sort(nums, compare)\n    return nums\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5ke_dc9.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpw5ke_dc9.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n \
    \     sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy7i2f2wq.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local s = 0\n    while n > 0 do\n      s\
    \ = s + n % 10\n      n = math.floor(n / 10)\n    end\n    return s\n  end\n \
    \ local function compare(a, b)\n    local sa = sum_digits(a)\n    local sb = sum_digits(b)\n\
    \    if sa == sb then\n      return a < b\n    else\n      return sa < sb\n  \
    \  end\n  end\n  table.sort(nums, compare)\n  return nums\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9j95nbyd.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp9j95nbyd.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_of_digits(n)\n    local sum = 0\n    while n > 0 do\n  \
    \    sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1j99lgw2.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_of_digits(num)\n    local sum = 0\n    while num > 0 do\n\
    \      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzyv_67vu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local sum = function(n)\n        local s = 0\n        while n > 0 do\n  \
    \          s = s + n % 10\n            n = math.floor(n / 10)\n        end\n \
    \       return s\n    end\n    local t = {}\n    for i, v in ipairs(nums) do\n\
    \        t[i] = {v, sum(v)}\n    end\n    table.sort(t, function(a, b)\n     \
    \   if a[2] == b[2] then\n            return a[1] < b[1]\n        else\n     \
    \       return a[2] < b[2]\n        end\n    end)\n    local r = {}\n    for i,\
    \ v in ipairs(t) do\n        r[i] = v[1]\n    end\n    return r\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiz_0o76o.lua:40:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpiz_0o76o.lua:40: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function compare(a, b)\n        local sa\
    \ = sum_digits(a)\n        local sb = sum_digits(b)\n        if sa == sb then\n\
    \            return a < b\n        else\n            return sa < sb\n        end\n\
    \    end\n    table.sort(nums, compare)\n    return nums\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5ke_dc9.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpw5ke_dc9.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_of_digits(n)\n    local sum = 0\n    while n > 0 do\n  \
    \    sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1j99lgw2.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function cmp(a, b)\n        local sa, sb\
    \ = sum_digits(a), sum_digits(b)\n        if sa == sb then\n            return\
    \ a < b\n        else\n            return sa < sb\n        end\n    end\n    table.sort(nums,\
    \ cmp)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcr4qqp7n.lua:34:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpcr4qqp7n.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    -- your code here\n    local function sum_digits(num)\n        local sum\
    \ = 0\n        while num > 0 do\n            sum = sum + num % 10\n          \
    \  num = math.floor(num / 10)\n        end\n        return sum\n    end\n    local\
    \ function sort_by_sum(a, b)\n        local sum_a = sum_digits(a)\n        local\
    \ sum_b = sum_digits(b)\n        if sum_a == sum_b then\n            return a\
    \ < b\n        else\n            return sum_a < sum_b\n        end\n    end\n\
    \    table.sort(nums, sort_by_sum)\n    return nums\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqemhdk8i.lua:36:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpqemhdk8i.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local sum_of_digits = {}\n    for i, v in ipairs(nums) do\n        local\
    \ sum = 0\n        for j = 1, #tostring(v) do\n            sum = sum + tonumber(tostring(v):sub(j,\
    \ j))\n        end\n        sum_of_digits[i] = sum\n    end\n    local sorted\
    \ = {}\n    for i, v in ipairs(sum_of_digits) do\n        local min = math.min(unpack(sum_of_digits))\n\
    \        local index = 0\n        for j, k in ipairs(sum_of_digits) do\n     \
    \       if k == min then\n                index = j\n                break\n \
    \           end\n        end\n        table.insert(sorted, nums[index])\n    \
    \    table.remove(sum_of_digits, index)\n        table.remove(nums, index)\n \
    \   end\n    return sorted\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpx2a8v14k.lua:15:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmpx2a8v14k.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpx2a8v14k.lua:39: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \tlocal function sum_digits(num)\n\t\tlocal sum = 0\n\t\twhile num > 0 do\n\t\t\
    \tsum = sum + num % 10\n\t\t\tnum = math.floor(num / 10)\n\t\tend\n\t\treturn\
    \ sum\n\tend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsob_iolm.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(x)\n        local sum = 0\n        while x >\
    \ 0 do\n            sum = sum + (x % 10)\n            x = math.floor(x / 10)\n\
    \        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplzldi_5h.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  -- your code here\n  local function sum_digits(n)\n    local sum = 0\n    while\
    \ n > 0 do\n      sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n\
    \    return sum\n  end\n  local function cmp(a, b)\n    local sum_a = sum_digits(a)\n\
    \    local sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a <\
    \ b\n    else\n      return sum_a < sum_b\n    end\n  end\n  table.sort(nums,\
    \ cmp)\n  return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo85727g9.lua:36:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpo85727g9.lua:36: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function compare(a, b)\n        local a_sum\
    \ = sum_digits(a)\n        local b_sum = sum_digits(b)\n        if a_sum == b_sum\
    \ then\n            return a < b\n        else\n            return a_sum < b_sum\n\
    \        end\n    end\n    table.sort(nums, compare)\n    return nums\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = order_by_points\n\
    \    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n\
    \    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdp_h_m6h.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpdp_h_m6h.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local sums = {}\n  for i, v in ipairs(nums) do\n    sums[i] = v\n  end\n  table.sort(sums,\
    \ function(a, b)\n    local sum_a = 0\n    local sum_b = 0\n    for i = 1, #tostring(a)\
    \ do\n      sum_a = sum_a + tonumber(tostring(a):sub(i, i))\n    end\n    for\
    \ i = 1, #tostring(b) do\n      sum_b = sum_b + tonumber(tostring(b):sub(i, i))\n\
    \    end\n    if sum_a == sum_b then\n      return a < b\n    end\n    return\
    \ sum_a < sum_b\n  end)\n  return sums\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2mr3vve6.lua:19:\
    \ attempt to perform arithmetic on a nil value\nstack traceback:\n\t/tmp/tmp2mr3vve6.lua:19:\
    \ in function </tmp/tmp2mr3vve6.lua:15>\n\t[C]: in function 'table.sort'\n\t/tmp/tmp2mr3vve6.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp2mr3vve6.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local sum_of_digits = {}\n  for i, v in ipairs(nums) do\n    local sum = 0\n\
    \    for digit in tostring(v):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n\
    \    end\n    sum_of_digits[i] = sum\n  end\n  table.sort(sum_of_digits)\n  local\
    \ result = {}\n  for i, v in ipairs(sum_of_digits) do\n    for j, w in ipairs(nums)\
    \ do\n      local sum = 0\n      for digit in tostring(w):gmatch(\"%d\") do\n\
    \        sum = sum + tonumber(digit)\n      end\n      if sum == v then\n    \
    \    result[i] = w\n        nums[j] = nil\n        break\n      end\n    end\n\
    \  end\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd9qb2ohw.lua:40:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {1}\nstack traceback:\n\t/tmp/tmpd9qb2ohw.lua:40:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local sum_of_digits = function(n)\n        local sum = 0\n        while n\
    \ > 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppp6w701j.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_of_digits(num)\n    local sum = 0\n    while num > 0 do\n\
    \      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzyv_67vu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + (n % 10)\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsp6d2f53.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local sums = {}\n    for i, num in ipairs(nums) do\n        sums[i] = {sum_of_digits(num),\
    \ num}\n    end\n    table.sort(sums, function(a, b) return a[1] < b[1] end)\n\
    \    local result = {}\n    for i, sum in ipairs(sums) do\n        result[i] =\
    \ sum[2]\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbry0szdp.lua:13:\
    \ attempt to call a nil value (global 'sum_of_digits')\nstack traceback:\n\t/tmp/tmpbry0szdp.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpbry0szdp.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function cmp(a, b)\n        local sa, sb\
    \ = sum_digits(a), sum_digits(b)\n        if sa == sb then\n            return\
    \ a < b\n        else\n            return sa < sb\n        end\n    end\n    table.sort(nums,\
    \ cmp)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcr4qqp7n.lua:34:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpcr4qqp7n.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function compare(a, b)\n        local sa\
    \ = sum_digits(a)\n        local sb = sum_digits(b)\n        if sa == sb then\n\
    \            return a < b\n        else\n            return sa < sb\n        end\n\
    \    end\n    table.sort(nums, compare)\n    return nums\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5ke_dc9.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpw5ke_dc9.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local sum_of_digits = function(num)\n        local sum = 0\n        while\
    \ num > 0 do\n            sum = sum + num % 10\n            num = math.floor(num\
    \ / 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpg6nx3jox.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n \
    \     sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy7i2f2wq.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n \
    \     sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy7i2f2wq.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function get_sum(num)\n        local sum = 0\n        while num > 0\
    \ do\n            sum = sum + num % 10\n            num = math.floor(num / 10)\n\
    \        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppmwzk__8.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n \
    \     sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy7i2f2wq.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n \
    \     sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy7i2f2wq.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function compare(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, compare)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_5mn7295.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmp_5mn7295.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_of_digits(n)\n    local sum = 0\n    while n > 0 do\n  \
    \    sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1j99lgw2.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + (n % 10)\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptwfedymd.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_of_digits(num)\n    local sum = 0\n    while num > 0 do\n\
    \      sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpzyv_67vu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local sum_of_digits = {}\n  for i, num in ipairs(nums) do\n    local sum =\
    \ 0\n    for digit in tostring(num):gmatch(\"%d\") do\n      sum = sum + tonumber(digit)\n\
    \    end\n    sum_of_digits[i] = sum\n  end\n  local sorted_nums = {}\n  for i,\
    \ num in ipairs(nums) do\n    sorted_nums[i] = {num, sum_of_digits[i]}\n  end\n\
    \  table.sort(sorted_nums, function(a, b)\n    if a[2] == b[2] then\n      return\
    \ a[1] < b[1]\n    else\n      return a[2] < b[2]\n    end\n  end)\n  for i, num\
    \ in ipairs(sorted_nums) do\n    sorted_nums[i] = num[1]\n  end\n  return sorted_nums\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = order_by_points\n\
    \    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n\
    \    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpz39iq19l.lua:39:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-1, 1, -11, 11, -12}\nstack traceback:\n\
    \t/tmp/tmpz39iq19l.lua:39: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function cmp(a, b)\n        local sa, sb\
    \ = sum_digits(a), sum_digits(b)\n        if sa == sb then\n            return\
    \ a < b\n        else\n            return sa < sb\n        end\n    end\n    table.sort(nums,\
    \ cmp)\n    return nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcr4qqp7n.lua:34:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpcr4qqp7n.lua:34: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local sum = 0\n        while n > 0\
    \ do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n   \
    \     end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11,\
    \ -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463,\
    \ 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423,\
    \ 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71juwbtu.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(n)\n        local s = 0\n        while n > 0 do\n\
    \            s = s + n % 10\n            n = math.floor(n / 10)\n        end\n\
    \        return s\n    end\n    local function compare(a, b)\n        local sa\
    \ = sum_digits(a)\n        local sb = sum_digits(b)\n        if sa == sb then\n\
    \            return a < b\n        else\n            return sa < sb\n        end\n\
    \    end\n    table.sort(nums, compare)\n    return nums\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw5ke_dc9.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpw5ke_dc9.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function compare(a, b)\n        local sum_a = sum_of_digits(a)\n  \
    \      local sum_b = sum_of_digits(b)\n        if sum_a == sum_b then\n      \
    \      return a < b\n        else\n            return sum_a < sum_b\n        end\n\
    \    end\n    table.sort(nums, compare)\n    return nums\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9_cl301s.lua:12:\
    \ attempt to call a nil value (global 'sum_of_digits')\nstack traceback:\n\t/tmp/tmp9_cl301s.lua:12:\
    \ in function </tmp/tmp9_cl301s.lua:11>\n\t[C]: in function 'table.sort'\n\t/tmp/tmp9_cl301s.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp9_cl301s.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(n)\n    local sum = 0\n    while n > 0 do\n     \
    \ sum = sum + n % 10\n      n = math.floor(n / 10)\n    end\n    return sum\n\
    \  end\n  local function cmp(a, b)\n    local sum_a = sum_digits(a)\n    local\
    \ sum_b = sum_digits(b)\n    if sum_a == sum_b then\n      return a < b\n    else\n\
    \      return sum_a < sum_b\n    end\n  end\n  table.sort(nums, cmp)\n  return\
    \ nums\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpcwbt9rxa.lua:35:\
    \ expected: {-1, -11, 1, -12, 11}\nactual: {-12, -11, -1, 1, 11}\nstack traceback:\n\
    \t/tmp/tmpcwbt9rxa.lua:35: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + (n % 10)\n            n = math.floor(n / 10)\n\
    \        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsp6d2f53.lua:31: ''end'' expected (to close ''function'' at
    line 10) near <eof>

    '
  stdout: ''
  timestamp: 1659797672
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \  local function sum_digits(num)\n    local sum = 0\n    while num > 0 do\n \
    \     sum = sum + num % 10\n      num = math.floor(num / 10)\n    end\n    return\
    \ sum\n  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = order_by_points\n    lu.assertEquals(candidate({1, 11, -1, -11, -12}), {-1,\
    \ -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({1,\
    \ -11, -32, 43, 54, -98, 2, -3}), {-3, -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n   \
    \ lu.assertEquals(candidate({0, 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23,\
    \ 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpy7i2f2wq.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(n)\n        local sum = 0\n        while n >\
    \ 0 do\n            sum = sum + n % 10\n            n = math.floor(n / 10)\n \
    \       end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplghgpfzs.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_of_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptfjl7r63.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341
- exit_code: 1
  program: "-- Write a function which sorts the given list of integers\n-- in ascending\
    \ order according to the sum of their digits.\n-- Note: if there are several items\
    \ with similar sum of their digits,\n-- order them based on their index in original\
    \ list.\n-- For example:\n-- >>> order_by_points({1, 11, -1, -11, -12})\n-- {-1,\
    \ -11, 1, -12, 11}\n-- >>> order_by_points({})\n-- {}\nlocal function order_by_points(nums)\n\
    \    local function sum_digits(num)\n        local sum = 0\n        while num\
    \ > 0 do\n            sum = sum + num % 10\n            num = math.floor(num /\
    \ 10)\n        end\n        return sum\n    end\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = order_by_points\n    lu.assertEquals(candidate({1,\
    \ 11, -1, -11, -12}), {-1, -11, 1, -12, 11})\n    lu.assertEquals(candidate({1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46}), {0, 2, 3, 6, 53,\
    \ 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457})\n    lu.assertEquals(candidate({}),\
    \ {})\n    lu.assertEquals(candidate({1, -11, -32, 43, 54, -98, 2, -3}), {-3,\
    \ -32, -98, -11, 1, 2, 43, 54})\n    lu.assertEquals(candidate({1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11}), {1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9})\n    lu.assertEquals(candidate({0,\
    \ 6, 6, -76, -21, 23, 4}), {-76, -21, 0, 4, 23, 6, 6})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqg5gyw2r.lua:31: ''end'' expected (to close ''function'' at
    line 10) near ''<eof>''

    '
  stdout: ''
  timestamp: 1659750341

name: HumanEval_68_pluck
language: lua
prompt: "-- \"Given an array representing a branch of a tree that has non-negative\
  \ integer nodes\n-- your task is to pluck one of the nodes and return it.\n-- The\
  \ plucked node should be the node with the smallest even value.\n-- If multiple\
  \ nodes with the same smallest even value are found return the node that has smallest\
  \ index.\n-- The plucked node should be returned in a list, [ smalest_value, its\
  \ index ],\n-- If there are no even values or the given array is empty, return [].\n\
  -- Example 1:\n-- >>> pluck({4, 2, 3})\n-- {2, 1}\n-- Explanation: 2 has the smallest\
  \ even value, and 2 has the smallest index.\n-- Example 2:\n-- >>> pluck({1, 2,\
  \ 3})\n-- {2, 1}\n-- Explanation: 2 has the smallest even value, and 2 has the smallest\
  \ index.\n-- Example 3:\n-- >>> pluck({})\n-- {}\n-- Example 4:\n-- >>> pluck({5,\
  \ 0, 3, 0, 4, 2})\n-- {0, 1}\n-- Explanation: 0 is the smallest value, but  there\
  \ are two zeros,\n-- so we will choose the first zero, which has the smallest index.\n\
  -- Constraints:\n-- * 1 <= nodes.length <= 10000\n-- * 0 <= node.value\nlocal function\
  \ pluck(arr)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = pluck\n\
  \    lu.assertEquals(candidate({4, 2, 3}), {2, 1})\n    lu.assertEquals(candidate({1,\
  \ 2, 3}), {2, 1})\n    lu.assertEquals(candidate({}), {})\n    lu.assertEquals(candidate({5,\
  \ 0, 3, 0, 4, 2}), {0, 1})\n    lu.assertEquals(candidate({1, 2, 3, 0, 5, 3}), {0,\
  \ 3})\n    lu.assertEquals(candidate({5, 4, 8, 4, 8}), {4, 1})\n    lu.assertEquals(candidate({7,\
  \ 6, 7, 1}), {6, 1})\n    lu.assertEquals(candidate({7, 9, 7, 1}), {})\nend\n\n\
  os.exit(lu.LuaUnit.run())"
completions: ["  local min_even, min_index = math.huge, math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even, min_index = v,\
    \ i\n    end\n  end\n  return min_even == math.huge and {} or {min_even, min_index}\n\
    end", "  local min_even_value = math.huge\n  local min_even_value_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_value_index = i\n    end\n  end\n  if\
    \ min_even_value == math.huge then\n    return {}\n  else\n    return {min_even_value,\
    \ min_even_value_index}\n  end\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "    local min_even_val, min_even_idx = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even_val then\n\
    \            min_even_val = v\n            min_even_idx = i\n        end\n   \
    \ end\n    if min_even_val == math.huge then\n        return {}\n    else\n  \
    \      return {min_even_val, min_even_idx}\n    end\nend", "  local min_even_value\
    \ = math.huge\n  local min_even_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n   \
    \   min_even_index = i\n    end\n  end\n  if min_even_value == math.huge then\n\
    \    return {}\n  else\n    return {min_even_value, min_even_index}\n  end\nend",
  "  local min_even_value = math.huge\n  local min_even_index = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n      min_even_value\
    \ = v\n      min_even_index = i\n    end\n  end\n  if min_even_value == math.huge\
    \ then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n \
    \ end\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v\
    \ in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n     \
    \ min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n  end\n\
    \  return {min, min_idx}\nend", "    local min_even_value = math.huge\n    local\
    \ min_even_index = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2\
    \ == 0 and v < min_even_value then\n            min_even_value = v\n         \
    \   min_even_index = i\n        end\n    end\n    if min_even_value == math.huge\
    \ then\n        return {}\n    else\n        return {min_even_value, min_even_index}\n\
    \    end\nend", "  local smallest = math.huge\n  local smallest_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest then\n     \
    \ smallest = v\n      smallest_index = i\n    end\n  end\n  if smallest == math.huge\
    \ then\n    return {}\n  end\n  return {smallest, smallest_index}\nend", "  local\
    \ min = math.huge\n  local min_index = -1\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n \
    \ end\n  if min_index == -1 then\n    return {}\n  else\n    return {min, min_index}\n\
    \  end\nend", "  local smallest = math.huge\n  local smallest_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest then\n     \
    \ smallest = v\n      smallest_index = i\n    end\n  end\n  if smallest == math.huge\
    \ then\n    return {}\n  end\n  return {smallest, smallest_index}\nend", "  local\
    \ min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local min_even = math.huge\n  local min_even_idx = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even\
    \ = v\n      min_even_idx = i\n    end\n  end\n  if min_even == math.huge then\n\
    \    return {}\n  end\n  return {min_even, min_even_idx}\nend", "  local min =\
    \ math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_idx}\nend", "  local min_even_value, min_even_index\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 then\n      if not min_even_value\
    \ or v < min_even_value then\n        min_even_value = v\n        min_even_index\
    \ = i\n      end\n    end\n  end\n  if min_even_value then\n    return {min_even_value,\
    \ min_even_index}\n  else\n    return {}\n  end\nend", "  local min = math.huge\n\
    \  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0\
    \ and v < min then\n      min = v\n      min_idx = i\n    end\n  end\n  if min\
    \ == math.huge then\n    return {}\n  end\n  return {min, min_idx}\nend", "  local\
    \ min_even = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_index\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  else\n\
    \    return {min_even, min_index}\n  end\nend", "  local min = math.huge\n  local\
    \ min_i = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min\
    \ then\n      min = v\n      min_i = i\n    end\n  end\n  if min == math.huge\
    \ then\n    return {}\n  end\n  return {min, min_i}\nend", "  local min_even =\
    \ math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_idx}\nend", "  local min = math.huge\n  local min_idx\
    \ = -1\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n   \
    \   min = v\n      min_idx = i\n    end\n  end\n  if min_idx == -1 then\n    return\
    \ {}\n  else\n    return {min, min_idx}\n  end\nend", "  local min_even_value,\
    \ min_even_index = math.huge, math.huge\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n      min_even_index\
    \ = i\n    end\n  end\n  if min_even_value == math.huge then\n    return {}\n\
    \  else\n    return {min_even_value, min_even_index}\n  end\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "    local min = math.huge\n    local min_idx = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min =\
    \ v\n            min_idx = i\n        end\n    end\n    if min == math.huge then\n\
    \        return {}\n    end\n    return {min, min_idx}\nend", "  local min = math.huge\n\
    \  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0\
    \ and v < min then\n      min = v\n      min_idx = i\n    end\n  end\n  if min\
    \ == math.huge then\n    return {}\n  end\n  return {min, min_idx}\nend", "  local\
    \ min = math.huge\n  local min_i = math.huge\n  for i, v in ipairs(arr) do\n \
    \   if v % 2 == 0 and v < min then\n      min = v\n      min_i = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_i}\n\
    end", "  local min = math.huge\n  local min_index = 0\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n\
    \    end\n  end\n  if min == math.huge then\n    return {}\n  else\n    return\
    \ {min, min_index}\n  end\nend", "  local min = math.huge\n  local min_index =\
    \ math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min = v\n      min_index = i\n    end\n  end\n  if min == math.huge then\n\
    \    return {}\n  end\n  return {min, min_index}\nend", "  local min = math.huge\n\
    \  local min_index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 ==\
    \ 0 and v < min then\n      min = v\n      min_index = i\n    end\n  end\n  if\
    \ min == math.huge then\n    return {}\n  end\n  return {min, min_index}\nend",
  "  local min_even = math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_idx}\nend", "  local min_even = math.huge\n  local\
    \ min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and\
    \ v < min_even then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n\
    \  if min_even == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min_even, min_even_idx = math.huge, math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even,\
    \ min_even_idx = v, i\n    end\n  end\n  return min_even == math.huge and {} or\
    \ {min_even, min_even_idx}\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min_even_value = math.huge\n  local min_even_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_index = i\n    end\n  end\n  if min_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n\
    \  end\nend", "  local min_even, min_even_idx = math.huge, math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even,\
    \ min_even_idx = v, i\n    end\n  end\n  return min_even == math.huge and {} or\
    \ {min_even, min_even_idx}\nend", "  local min_even_value = math.huge\n  local\
    \ min_even_index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0\
    \ and v < min_even_value then\n      min_even_value = v\n      min_even_index\
    \ = i\n    end\n  end\n  if min_even_value == math.huge then\n    return {}\n\
    \  else\n    return {min_even_value, min_even_index}\n  end\nend", "  local min_even\
    \ = math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_idx}\nend", "  local smallest = math.huge\n  local\
    \ smallest_index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0\
    \ and v < smallest then\n      smallest = v\n      smallest_index = i\n    end\n\
    \  end\n  if smallest == math.huge then\n    return {}\n  end\n  return {smallest,\
    \ smallest_index}\nend", "  local min = math.huge\n  local min_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min =\
    \ v\n      min_index = i\n    end\n  end\n  if min == math.huge then\n    return\
    \ {}\n  end\n  return {min, min_index}\nend", "  local min = math.huge\n  local\
    \ min_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v <\
    \ min then\n      min = v\n      min_idx = i\n    end\n  end\n  if min == math.huge\
    \ then\n    return {}\n  end\n  return {min, min_idx}\nend", "  local min_even,\
    \ min_even_idx = math.huge, math.huge\n  for i, v in ipairs(arr) do\n    if v\
    \ % 2 == 0 and v < min_even then\n      min_even, min_even_idx = v, i\n    end\n\
    \  end\n  return min_even == math.huge and {} or {min_even, min_even_idx}\nend",
  "  local evens = {}\n  local min = math.huge\n  local min_index = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 then\n      if v < min then\n    \
    \    min = v\n        min_index = i\n      end\n    end\n  end\n  if min == math.huge\
    \ then\n    return {}\n  end\n  return {min, min_index}\nend", "  local min =\
    \ math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local smallest = nil\n  local smallest_index = nil\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 then\n      if smallest == nil or v < smallest then\n\
    \        smallest = v\n        smallest_index = i\n      end\n    end\n  end\n\
    \  if smallest == nil then\n    return {}\n  else\n    return {smallest, smallest_index}\n\
    \  end\nend", "  local min_even = math.huge\n  local min_even_idx = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n     \
    \ min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even == math.huge\
    \ then\n    return {}\n  end\n  return {min_even, min_even_idx}\nend", "  local\
    \ min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local smallest = math.huge\n  local smallest_index = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest then\n      smallest\
    \ = v\n      smallest_index = i\n    end\n  end\n  if smallest == math.huge then\n\
    \    return {}\n  end\n  return {smallest, smallest_index}\nend", "  local min\
    \ = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n \
    \   if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_idx}\nend", "    local smallest = nil\n    local smallestIndex\
    \ = nil\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 then\n        \
    \    if smallest == nil or v < smallest then\n                smallest = v\n \
    \               smallestIndex = i\n            end\n        end\n    end\n   \
    \ if smallest == nil then\n        return {}\n    end\n    return {smallest, smallestIndex}\n\
    end", "  local min_even = math.huge\n  local min_even_idx = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even\
    \ = v\n      min_even_idx = i\n    end\n  end\n  if min_even == math.huge then\n\
    \    return {}\n  end\n  return {min_even, min_even_idx}\nend", "  local min =\
    \ math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n  end\n\
    \  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\nend",
  "  local min_even = math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_idx}\nend", "  local min_even = math.huge\n  local\
    \ min_even_idx = nil\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v <\
    \ min_even then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n\
    \  if min_even_idx then\n    return {min_even, min_even_idx}\n  else\n    return\
    \ {}\n  end\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_idx}\nend", "  local min_even_val = math.huge\n  local\
    \ min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and\
    \ v < min_even_val then\n      min_even_val = v\n      min_even_idx = i\n    end\n\
    \  end\n  if min_even_val == math.huge then\n    return {}\n  else\n    return\
    \ {min_even_val, min_even_idx}\n  end\nend", "  local min = math.huge\n  local\
    \ min_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v <\
    \ min then\n      min = v\n      min_idx = i\n    end\n  end\n  if min == math.huge\
    \ then\n    return {}\n  end\n  return {min, min_idx}\nend", "  local min_even\
    \ = math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_idx}\nend", "  local smallest = nil\n  local smallest_index\
    \ = nil\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 then\n      if smallest\
    \ == nil or v < smallest then\n        smallest = v\n        smallest_index =\
    \ i\n      end\n    end\n  end\n  if smallest == nil then\n    return {}\n  else\n\
    \    return {smallest, smallest_index}\n  end\nend", "  local smallest_even_value\
    \ = math.huge\n  local smallest_even_value_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < smallest_even_value then\n      smallest_even_value\
    \ = v\n      smallest_even_value_index = i\n    end\n  end\n  if smallest_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {smallest_even_value, smallest_even_value_index}\n\
    \  end\nend", "  local min_even = math.huge\n  local min_even_idx = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n     \
    \ min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even == math.huge\
    \ then\n    return {}\n  end\n  return {min_even, min_even_idx}\nend", "  local\
    \ min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min, min_idx = math.huge, math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min, min_idx = v, i\n    end\n\
    \  end\n  return min == math.huge and {} or {min, min_idx}\nend", "  local min_even_value\
    \ = math.huge\n  local min_even_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n   \
    \   min_even_index = i\n    end\n  end\n  if min_even_value == math.huge then\n\
    \    return {}\n  else\n    return {min_even_value, min_even_index}\n  end\nend",
  "  local min_even = math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_idx}\nend", "  local min = math.huge\n  local min_i\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min = v\n      min_i = i\n    end\n  end\n  if min == math.huge then\n\
    \    return {}\n  end\n  return {min, min_i}\nend", "  local min = math.huge\n\
    \  local min_index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 ==\
    \ 0 and v < min then\n      min = v\n      min_index = i\n    end\n  end\n  if\
    \ min == math.huge then\n    return {}\n  end\n  return {min, min_index}\nend",
  "  local min = math.huge\n  local min_idx = nil\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local min_value, min_index = math.huge, math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_value then\n      min_value, min_index = v,\
    \ i\n    end\n  end\n  if min_value == math.huge then\n    return {}\n  end\n\
    \  return {min_value, min_index}\nend", "  local min = math.huge\n  local min_idx\
    \ = math.huge\n  for i = 1, #arr do\n    if arr[i] % 2 == 0 and arr[i] < min then\n\
    \      min = arr[i]\n      min_idx = i\n    end\n  end\n  if min == math.huge\
    \ then\n    return {}\n  end\n  return {min, min_idx}\nend", "    local min, idx\
    \ = math.huge, math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 ==\
    \ 0 and v < min then\n            min, idx = v, i\n        end\n    end\n    return\
    \ min == math.huge and {} or {min, idx}\nend", "  local min_even_val = math.huge\n\
    \  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2\
    \ == 0 and v < min_even_val then\n      min_even_val = v\n      min_even_idx =\
    \ i\n    end\n  end\n  if min_even_val == math.huge then\n    return {}\n  else\n\
    \    return {min_even_val, min_even_idx}\n  end\nend", "  local min = math.huge\n\
    \  local min_i = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and\
    \ v < min then\n      min = v\n      min_i = i\n    end\n  end\n  if min == math.huge\
    \ then\n    return {}\n  end\n  return {min, min_i}\nend", "    local min_even_value\
    \ = math.huge\n    local min_even_index = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min_even_value then\n            min_even_value\
    \ = v\n            min_even_index = i\n        end\n    end\n    if min_even_value\
    \ == math.huge then\n        return {}\n    else\n        return {min_even_value,\
    \ min_even_index}\n    end\nend", "    local min_even_value = math.huge\n    local\
    \ min_even_value_index = math.huge\n    for i, v in ipairs(arr) do\n        if\
    \ v % 2 == 0 and v < min_even_value then\n            min_even_value = v\n   \
    \         min_even_value_index = i\n        end\n    end\n    if min_even_value\
    \ == math.huge then\n        return {}\n    end\n    return {min_even_value, min_even_value_index}\n\
    end", "    local min = math.huge\n    local min_index = math.huge\n    for i,\
    \ v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n            min\
    \ = v\n            min_index = i\n        end\n    end\n    if min == math.huge\
    \ then\n        return {}\n    end\n    return {min, min_index}\nend", "  local\
    \ min_even = math.huge\n  local min_even_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_index\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_index}\nend", "  local min_even_value = math.huge\n\
    \  local min_even_index = math.huge\n  for i, v in ipairs(arr) do\n    if v %\
    \ 2 == 0 and v < min_even_value then\n      min_even_value = v\n      min_even_index\
    \ = i\n    end\n  end\n  if min_even_value == math.huge then\n    return {}\n\
    \  else\n    return {min_even_value, min_even_index}\n  end\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local min_even_val, min_even_idx = math.huge, math.huge\n  for i, v in\
    \ ipairs(arr) do\n    if v % 2 == 0 and v < min_even_val then\n      min_even_val,\
    \ min_even_idx = v, i\n    end\n  end\n  return min_even_val == math.huge and\
    \ {} or {min_even_val, min_even_idx}\nend", "  local min_even = math.huge\n  local\
    \ min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and\
    \ v < min_even then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n\
    \  if min_even == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_index = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_index = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_index}\nend", "  local min_even_value = math.huge\n\
    \  local min_even_value_index = math.huge\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n      min_even_value_index\
    \ = i\n    end\n  end\n  if min_even_value == math.huge then\n    return {}\n\
    \  else\n    return {min_even_value, min_even_value_index}\n  end\nend", "   \
    \ local min_even = math.huge\n    local min_even_idx = math.huge\n    for i, v\
    \ in ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n           \
    \ min_even = v\n            min_even_idx = i\n        end\n    end\n    if min_even\
    \ == math.huge then\n        return {}\n    end\n    return {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min_value = math.huge\n  local min_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_value then\n    \
    \  min_value = v\n      min_index = i\n    end\n  end\n  if min_value == math.huge\
    \ then\n    return {}\n  else\n    return {min_value, min_index}\n  end\nend",
  "  local min_even_value = math.huge\n  local min_even_index = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n      min_even_value\
    \ = v\n      min_even_index = i\n    end\n  end\n  if min_even_value == math.huge\
    \ then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n \
    \ end\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v\
    \ in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n     \
    \ min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n  end\n\
    \  return {min, min_idx}\nend", "  local min = math.huge\n  local min_idx = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min =\
    \ v\n      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return\
    \ {}\n  end\n  return {min, min_idx}\nend", "  local min_even, min_even_idx =\
    \ math.huge, math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v\
    \ < min_even then\n      min_even, min_even_idx = v, i\n    end\n  end\n  return\
    \ min_even == math.huge and {} or {min_even, min_even_idx}\nend", "  local min_even\
    \ = math.huge\n  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even then\n      min_even = v\n      min_even_idx\
    \ = i\n    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n\
    \  return {min_even, min_even_idx}\nend", "  local min = math.huge\n  local min_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min = v\n      min_index = i\n    end\n  end\n  if min == math.huge then\n\
    \    return {}\n  end\n  return {min, min_index}\nend", "  local min = math.huge\n\
    \  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0\
    \ and v < min then\n      min = v\n      min_idx = i\n    end\n  end\n  if min\
    \ == math.huge then\n    return {}\n  end\n  return {min, min_idx}\nend", "  local\
    \ min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n\
    \    end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_index}\nend", "    local min_even, min_even_index = math.huge, math.huge\n\
    \    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even then\n\
    \            min_even = v\n            min_even_index = i\n        end\n    end\n\
    \    if min_even == math.huge then\n        return {}\n    end\n    return {min_even,\
    \ min_even_index}\nend", "  local smallest_even_value = math.huge\n  local smallest_even_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest_even_value\
    \ then\n      smallest_even_value = v\n      smallest_even_index = i\n    end\n\
    \  end\n  if smallest_even_value == math.huge then\n    return {}\n  else\n  \
    \  return {smallest_even_value, smallest_even_index}\n  end\nend", "  local min_even_value,\
    \ min_even_value_idx = math.huge, math.huge\n  for i, v in ipairs(arr) do\n  \
    \  if v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n     \
    \ min_even_value_idx = i\n    end\n  end\n  if min_even_value == math.huge then\n\
    \    return {}\n  else\n    return {min_even_value, min_even_value_idx}\n  end\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_idx}\nend", "  local evens = {}\n  local min = math.huge\n\
    \  local min_index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 ==\
    \ 0 then\n      if v < min then\n        min = v\n        min_index = i\n    \
    \  elseif v == min then\n        if i < min_index then\n          min_index =\
    \ i\n        end\n      end\n    end\n  end\n  if min == math.huge then\n    return\
    \ {}\n  end\n  return {min, min_index}\nend", "  local smallest_even_value = math.huge\n\
    \  local smallest_even_value_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < smallest_even_value then\n      smallest_even_value\
    \ = v\n      smallest_even_value_index = i\n    end\n  end\n  if smallest_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {smallest_even_value, smallest_even_value_index}\n\
    \  end\nend", "  local min = math.huge\n  local min_idx = 0\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min_even, min_even_idx = math.huge, math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even,\
    \ min_even_idx = v, i\n    end\n  end\n  return min_even == math.huge and {} or\
    \ {min_even, min_even_idx}\nend", "  local min = math.huge\n  local min_idx =\
    \ -1\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n     \
    \ min = v\n      min_idx = i\n    end\n  end\n  if min_idx == -1 then\n    return\
    \ {}\n  else\n    return {min, min_idx}\n  end\nend", "  local min, min_i = math.huge,\
    \ math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min, min_i = v, i\n    end\n  end\n  return min == math.huge and {} or\
    \ {min, min_i}\nend", "    local smallest = math.huge\n    local smallest_index\
    \ = math.huge\n    for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < smallest\
    \ then\n            smallest = v\n            smallest_index = i\n        end\n\
    \    end\n    if smallest == math.huge then\n        return {}\n    end\n    return\
    \ {smallest, smallest_index}\nend", "  local min = math.huge\n  local min_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min = v\n      min_index = i\n    end\n  end\n  if min == math.huge then\n\
    \    return {}\n  end\n  return {min, min_index}\nend", "  local min_even_value\
    \ = math.huge\n  local min_even_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n   \
    \   min_even_index = i\n    end\n  end\n  if min_even_value == math.huge then\n\
    \    return {}\n  else\n    return {min_even_value, min_even_index}\n  end\nend",
  "  local smallest = math.huge\n  local smallest_index = math.huge\n  for i, v in\
    \ ipairs(arr) do\n    if v % 2 == 0 and v < smallest then\n      smallest = v\n\
    \      smallest_index = i\n    end\n  end\n  if smallest == math.huge then\n \
    \   return {}\n  end\n  return {smallest, smallest_index}\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local min = math.huge\n  local index = 0\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, index}\n\
    end", "  local min_even = math.huge\n  local min_even_idx = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even\
    \ = v\n      min_even_idx = i\n    end\n  end\n  if min_even == math.huge then\n\
    \    return {}\n  end\n  return {min_even, min_even_idx}\nend", "  local min_even,\
    \ min_even_idx = math.huge, math.huge\n  for i, v in ipairs(arr) do\n    if v\
    \ % 2 == 0 and v < min_even then\n      min_even, min_even_idx = v, i\n    end\n\
    \  end\n  return min_even == math.huge and {} or {min_even, min_even_idx}\nend",
  "  local min_even_value = math.huge\n  local min_even_index = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n      min_even_value\
    \ = v\n      min_even_index = i\n    end\n  end\n  if min_even_value == math.huge\
    \ then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n \
    \ end\nend", "  local smallest = math.huge\n  local smallest_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest then\n     \
    \ smallest = v\n      smallest_index = i\n    end\n  end\n  if smallest == math.huge\
    \ then\n    return {}\n  end\n  return {smallest, smallest_index}\nend", "  local\
    \ min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min_even = math.huge\n  local min_even_idx = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even\
    \ = v\n      min_even_idx = i\n    end\n  end\n  if min_even == math.huge then\n\
    \    return {}\n  end\n  return {min_even, min_even_idx}\nend", "  local min,\
    \ min_index = math.huge, math.huge\n  for i, v in ipairs(arr) do\n    if v % 2\
    \ == 0 and v < min then\n      min, min_index = v, i\n    end\n  end\n  return\
    \ min ~= math.huge and {min, min_index} or {}\nend", "    local smallest_even_value\
    \ = math.huge\n    local smallest_even_index = math.huge\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < smallest_even_value then\n            smallest_even_value\
    \ = v\n            smallest_even_index = i\n        end\n    end\n    if smallest_even_value\
    \ == math.huge then\n        return {}\n    else\n        return {smallest_even_value,\
    \ smallest_even_index}\n    end\nend", "  local smallest = math.huge\n  local\
    \ index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest\
    \ then\n      smallest = v\n      index = i\n    end\n  end\n  if smallest ==\
    \ math.huge then\n    return {}\n  end\n  return {smallest, index}\nend", "  local\
    \ min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min_even_value = math.huge\n  local min_even_value_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_value_index = i\n    end\n  end\n  if\
    \ min_even_value == math.huge then\n    return {}\n  else\n    return {min_even_value,\
    \ min_even_value_index}\n  end\nend", "  local min = math.huge\n  local min_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min = v\n      min_index = i\n    end\n  end\n  if min == math.huge then\n\
    \    return {}\n  end\n  return {min, min_index}\nend", "  local min_even_value\
    \ = math.huge\n  local min_even_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n   \
    \   min_even_index = i\n    end\n  end\n  if min_even_value == math.huge then\n\
    \    return {}\n  else\n    return {min_even_value, min_even_index}\n  end\nend",
  "  local min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n\
    \    end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_index}\nend", "  local min_even = math.huge\n  local min_even_idx = -1\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n     \
    \ min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even_idx == -1\
    \ then\n    return {}\n  else\n    return {min_even, min_even_idx}\n  end\nend",
  "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min_even_value, min_even_index = math.huge, math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_index = i\n    end\n  end\n  if min_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n\
    \  end\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n   \
    \   min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n \
    \ end\n  return {min, min_idx}\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n\
    \    end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_index}\nend", "  local min_even_val = math.huge\n  local min_even_idx =\
    \ math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_val\
    \ then\n      min_even_val = v\n      min_even_idx = i\n    end\n  end\n  if min_even_val\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_val, min_even_idx}\n\
    \  end\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n   \
    \   min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n \
    \ end\n  return {min, min_idx}\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_idx}\nend", "  local min_even_value = math.huge\n \
    \ local min_even_index = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2\
    \ == 0 and v < min_even_value then\n      min_even_value = v\n      min_even_index\
    \ = i\n    end\n  end\n  if min_even_value == math.huge then\n    return {}\n\
    \  else\n    return {min_even_value, min_even_index}\n  end\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local min = math.huge\n  local idx = 0\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      idx = i\n    end\n \
    \ end\n  return min == math.huge and {} or {min, idx}\nend", "  local m = math.huge\n\
    \  local i = 0\n  for k, v in ipairs(arr) do\n    if v % 2 == 0 and v < m then\n\
    \      m = v\n      i = k\n    end\n  end\n  return m == math.huge and {} or {m,\
    \ i}\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v\
    \ in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n     \
    \ min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n  end\n\
    \  return {min, min_idx}\nend", "  local min_even_val = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_val\
    \ then\n      min_even_val = v\n      min_even_idx = i\n    end\n  end\n  if min_even_val\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_val, min_even_idx}\n\
    \  end\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n   \
    \   min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n \
    \ end\n  return {min, min_idx}\nend", "  local min, min_idx = math.huge, math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min,\
    \ min_idx = v, i\n    end\n  end\n  return min ~= math.huge and {min, min_idx}\
    \ or {}\nend", "  local min_even_value = math.huge\n  local min_even_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_index = i\n    end\n  end\n  if min_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n\
    \  end\nend", "    local min = math.huge\n    local min_index = math.huge\n  \
    \  for i, v in ipairs(arr) do\n        if v % 2 == 0 and v < min then\n      \
    \      min = v\n            min_index = i\n        end\n    end\n    if min ==\
    \ math.huge then\n        return {}\n    end\n    return {min, min_index}\nend",
  "  local min_even_value = math.huge\n  local min_even_index = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n      min_even_value\
    \ = v\n      min_even_index = i\n    end\n  end\n  if min_even_value == math.huge\
    \ then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n \
    \ end\nend", "  local smallest = math.huge\n  local smallest_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest then\n     \
    \ smallest = v\n      smallest_index = i\n    end\n  end\n  if smallest == math.huge\
    \ then\n    return {}\n  end\n  return {smallest, smallest_index}\nend", "  local\
    \ min_even = math.huge\n  local min_even_idx = math.huge\n  for idx, val in ipairs(arr)\
    \ do\n    if val % 2 == 0 and val < min_even then\n      min_even = val\n    \
    \  min_even_idx = idx\n    end\n  end\n  if min_even == math.huge then\n    return\
    \ {}\n  end\n  return {min_even, min_even_idx}\nend", "  local min_even = math.huge\n\
    \  local min_even_index = math.huge\n  for i, v in ipairs(arr) do\n    if v %\
    \ 2 == 0 and v < min_even then\n      min_even = v\n      min_even_index = i\n\
    \    end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n  return\
    \ {min_even, min_even_index}\nend", "  local smallest = math.huge\n  local smallest_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest\
    \ then\n      smallest = v\n      smallest_index = i\n    end\n  end\n  if smallest\
    \ == math.huge then\n    return {}\n  end\n  return {smallest, smallest_index}\n\
    end", "  local min_even_idx = nil\n  local min_even_val = nil\n  for idx, val\
    \ in ipairs(arr) do\n    if val % 2 == 0 then\n      if min_even_idx == nil or\
    \ val < min_even_val then\n        min_even_idx = idx\n        min_even_val =\
    \ val\n      end\n    end\n  end\n  if min_even_idx == nil then\n    return {}\n\
    \  else\n    return {min_even_val, min_even_idx}\n  end\nend", "  local min =\
    \ math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min_even, min_even_index\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 then\n      if not min_even or v < min_even then\n        min_even\
    \ = v\n        min_even_index = i\n      end\n    end\n  end\n  if min_even then\n\
    \    return {min_even, min_even_index}\n  else\n    return {}\n  end\nend", " \
    \ local min, min_i = math.huge, math.huge\n  for i, v in ipairs(arr) do\n    if\
    \ v % 2 == 0 and v < min then\n      min, min_i = v, i\n    end\n  end\n  return\
    \ min == math.huge and {} or {min, min_i}\nend", "  local min_even = math.huge\n\
    \  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2\
    \ == 0 and v < min_even then\n      min_even = v\n      min_even_idx = i\n   \
    \ end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n  return\
    \ {min_even, min_even_idx}\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min_even = math.huge\n  local min_even_idx = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n     \
    \ min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even == math.huge\
    \ then\n    return {}\n  end\n  return {min_even, min_even_idx}\nend", "  local\
    \ min_even, min_even_idx = math.huge, math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even then\n      min_even, min_even_idx = v, i\n\
    \    end\n  end\n  return min_even == math.huge and {} or {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_idx = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_idx = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_idx}\nend", "  local min = math.huge\n  local min_idx\
    \ = 0\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n    \
    \  min = v\n      min_idx = i\n    end\n  end\n  if min == math.huge then\n  \
    \  return {}\n  end\n  return {min, min_idx}\nend", "  local min_even = math.huge\n\
    \  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2\
    \ == 0 and v < min_even then\n      min_even = v\n      min_even_idx = i\n   \
    \ end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n  return\
    \ {min_even, min_even_idx}\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min = nil\n  local min_index = nil\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 then\n      if min == nil or v < min then\n        min = v\n\
    \        min_index = i\n      end\n    end\n  end\n  if min == nil then\n    return\
    \ {}\n  else\n    return {min, min_index}\n  end\nend", "  local min_even = math.huge\n\
    \  local min_even_idx = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2\
    \ == 0 and v < min_even then\n      min_even = v\n      min_even_idx = i\n   \
    \ end\n  end\n  if min_even == math.huge then\n    return {}\n  end\n  return\
    \ {min_even, min_even_idx}\nend", "  local min = math.huge\n  local min_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n\
    \      min = v\n      min_index = i\n    end\n  end\n  if min == math.huge then\n\
    \    return {}\n  end\n  return {min, min_index}\nend", "  local min_even_value\
    \ = math.huge\n  local min_even_value_index = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even_value then\n      min_even_value = v\n\
    \      min_even_value_index = i\n    end\n  end\n  if min_even_value == math.huge\
    \ then\n    return {}\n  else\n    return {min_even_value, min_even_value_index}\n\
    \  end\nend", "  local min_even_value = math.huge\n  local min_even_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_index = i\n    end\n  end\n  if min_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n\
    \  end\nend", "  local min_even_val = math.huge\n  local min_even_idx = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_val then\n \
    \     min_even_val = v\n      min_even_idx = i\n    end\n  end\n  if min_even_val\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_val, min_even_idx}\n\
    \  end\nend", "  local smallest_even = nil\n  local smallest_even_index = nil\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 then\n      if smallest_even\
    \ == nil or v < smallest_even then\n        smallest_even = v\n        smallest_even_index\
    \ = i\n      end\n    end\n  end\n  if smallest_even == nil then\n    return {}\n\
    \  else\n    return {smallest_even, smallest_even_index}\n  end\nend", "  local\
    \ min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local min_even, min_even_idx = math.huge, math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min_even then\n      min_even, min_even_idx =\
    \ v, i\n    end\n  end\n  return min_even == math.huge and {} or {min_even, min_even_idx}\n\
    end", "  local min = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n \
    \   end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_idx}\nend", "  local min = math.huge\n  local min_index = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n\
    \      min_index = i\n    end\n  end\n  if min == math.huge then\n    return {}\n\
    \  end\n  return {min, min_index}\nend", "  local min = math.huge\n  local min_idx\
    \ = math.huge\n  for idx, val in ipairs(arr) do\n    if val % 2 == 0 and val <\
    \ min then\n      min = val\n      min_idx = idx\n    end\n  end\n  if min ==\
    \ math.huge then\n    return {}\n  end\n  return {min, min_idx}\nend", "  local\
    \ min = math.huge\n  local min_index = math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      min_index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_index}\n\
    end", "  local smallest = math.huge\n  local smallest_index = math.huge\n  for\
    \ i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest then\n      smallest\
    \ = v\n      smallest_index = i\n    end\n  end\n  if smallest == math.huge then\n\
    \    return {}\n  end\n  return {smallest, smallest_index}\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local min_even = math.huge\n  local min_index = math.huge\n  for i, v\
    \ in ipairs(arr) do\n    if v % 2 == 0 and v < min_even then\n      min_even =\
    \ v\n      min_index = i\n    end\n  end\n  if min_even == math.huge then\n  \
    \  return {}\n  else\n    return {min_even, min_index}\n  end\nend", "  local\
    \ min_even, min_even_idx = math.huge, math.huge\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min_even then\n      min_even, min_even_idx = v, i\n\
    \    end\n  end\n  return min_even == math.huge and {} or {min_even, min_even_idx}\n\
    end", "    local min = math.huge\n    local min_index = 0\n    for i, v in ipairs(arr)\
    \ do\n        if v % 2 == 0 and v < min then\n            min = v\n          \
    \  min_index = i\n        end\n    end\n    if min == math.huge then\n       \
    \ return {}\n    end\n    return {min, min_index}\nend", "  local min, min_index\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 then\n      if not min or v <\
    \ min then\n        min = v\n        min_index = i\n      end\n    end\n  end\n\
    \  if min then\n    return {min, min_index}\n  end\n  return {}\nend", "    local\
    \ min_even_value = math.huge\n    local min_even_index = math.huge\n    for i,\
    \ v in ipairs(arr) do\n        if v % 2 == 0 and v < min_even_value then\n   \
    \         min_even_value = v\n            min_even_index = i\n        end\n  \
    \  end\n    if min_even_value == math.huge then\n        return {}\n    else\n\
    \        return {min_even_value, min_even_index}\n    end\nend", "  local min\
    \ = math.huge\n  local min_idx = math.huge\n  for i, v in ipairs(arr) do\n   \
    \ if v % 2 == 0 and v < min then\n      min = v\n      min_idx = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, min_idx}\n\
    end", "  local min = math.huge\n  local index = 0\n  for i, v in ipairs(arr) do\n\
    \    if v % 2 == 0 and v < min then\n      min = v\n      index = i\n    end\n\
    \  end\n  if min == math.huge then\n    return {}\n  end\n  return {min, index}\n\
    end", "  local smallest_even_value = math.huge\n  local smallest_even_value_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < smallest_even_value\
    \ then\n      smallest_even_value = v\n      smallest_even_value_index = i\n \
    \   end\n  end\n  if smallest_even_value == math.huge then\n    return {}\n  else\n\
    \    return {smallest_even_value, smallest_even_value_index}\n  end\nend", " \
    \ local min = math.huge\n  local min_i = math.huge\n  for i, v in ipairs(arr)\
    \ do\n    if v % 2 == 0 and v < min then\n      min = v\n      min_i = i\n   \
    \ end\n  end\n  if min == math.huge then\n    return {}\n  end\n  return {min,\
    \ min_i}\nend", "  local min = math.huge\n  local min_i = math.huge\n  for i,\
    \ v in ipairs(arr) do\n    if v % 2 == 0 and v < min then\n      min = v\n   \
    \   min_i = i\n    end\n  end\n  if min == math.huge then\n    return {}\n  end\n\
    \  return {min, min_i}\nend", "  local min_even_value = math.huge\n  local min_even_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value\
    \ then\n      min_even_value = v\n      min_even_index = i\n    end\n  end\n \
    \ if min_even_value == math.huge then\n    return {}\n  else\n    return {min_even_value,\
    \ min_even_index}\n  end\nend", "  local min_even_value = math.huge\n  local min_even_value_index\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value\
    \ then\n      min_even_value = v\n      min_even_value_index = i\n    end\n  end\n\
    \  if min_even_value == math.huge then\n    return {}\n  else\n    return {min_even_value,\
    \ min_even_value_index}\n  end\nend", "  local min_even = math.huge\n  local min_even_idx\
    \ = math.huge\n  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even\
    \ then\n      min_even = v\n      min_even_idx = i\n    end\n  end\n  if min_even\
    \ == math.huge then\n    return {}\n  end\n  return {min_even, min_even_idx}\n\
    end", "  local min_even_value = math.huge\n  local min_even_index = math.huge\n\
    \  for i, v in ipairs(arr) do\n    if v % 2 == 0 and v < min_even_value then\n\
    \      min_even_value = v\n      min_even_index = i\n    end\n  end\n  if min_even_value\
    \ == math.huge then\n    return {}\n  else\n    return {min_even_value, min_even_index}\n\
    \  end\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

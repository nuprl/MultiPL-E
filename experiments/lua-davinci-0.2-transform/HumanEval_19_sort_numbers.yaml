name: HumanEval_19_sort_numbers
language: lua
prompt: "-- Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  -- Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n-- Return the string with numbers sorted from smallest to\
  \ largest\n-- >>> sort_numbers('three one five')\n-- 'one three five'\nlocal function\
  \ sort_numbers(numbers)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = sort_numbers\n\
  \    lu.assertEquals(candidate(''), '')\n    lu.assertEquals(candidate('three'),\
  \ 'three')\n    lu.assertEquals(candidate('three five nine'), 'three five nine')\n\
  \    lu.assertEquals(candidate('five zero four seven nine eight'), 'zero four five\
  \ seven eight nine')\n    lu.assertEquals(candidate('six five four three two one\
  \ zero'), 'zero one two three four five six')\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["  local numbers_list = {}\n  for number in numbers:gmatch('%S+') do\n\
    \    table.insert(numbers_list, number)\n  end\n  table.sort(numbers_list)\n \
    \ return table.concat(numbers_list, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%S+') do\n        table.insert(nums, num)\n    end\n\
    \    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  local num_list\
    \ = {}\n  for num in numbers:gmatch('%S+') do\n    num_list[#num_list + 1] = num\n\
    \  end\n  table.sort(num_list)\n  return table.concat(num_list, ' ')\nend", " \
    \   local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "    local nums = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums, function(a, b)\n        return number_to_numeral[a]\
    \ < number_to_numeral[b]\n    end)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "  local nums = {}\n  local num_str = ''\n  for num in numbers:gmatch('%S+')\
    \ do\n    table.insert(nums, num)\n  end\n  table.sort(nums)\n  for i, num in\
    \ ipairs(nums) do\n    num_str = num_str .. num .. ' '\n  end\n  return num_str:sub(1,\
    \ -2)\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n \
    \       nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%w+') do\n\
    \        table.insert(nums, num)\n    end\n    table.sort(nums, function(a, b)\n\
    \        return numeral_to_number(a) < numeral_to_number(b)\n    end)\n    return\
    \ table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        local n = tonumber(num)\n        if n then\n            nums[#nums\
    \ + 1] = n\n        else\n            local n = number_to_numeral[num]\n     \
    \       if n then\n                nums[#nums + 1] = n\n            else\n   \
    \             error('Invalid number: ' .. num)\n            end\n        end\n\
    \    end\n    table.sort(nums)\n    local result = {}\n    for i, n in ipairs(nums)\
    \ do\n        result[i] = numeral_to_number[n]\n    end\n    return table.concat(result,\
    \ ' ')\nend", "  local num_list = {}\n  for num in numbers:gmatch('%w+') do\n\
    \    table.insert(num_list, num)\n  end\n  table.sort(num_list)\n  return table.concat(num_list,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        table.insert(nums, num)\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%w+') do\n\
    \        table.insert(nums, num)\n    end\n    table.sort(nums, function(a, b)\n\
    \        return number_to_numeral[a] < number_to_numeral[b]\n    end)\n    return\
    \ table.concat(nums, ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n  return table.concat(nums,\
    \ ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums,\
    \ num)\n  end\n  table.sort(nums, function(a, b)\n    return number_to_numeral[a]\
    \ < number_to_numeral[b]\n  end)\n  return table.concat(nums, ' ')\nend", "  local\
    \ nums = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums, num)\n\
    \  end\n  table.sort(nums, function(a, b)\n    return number_to_numeral[a] < number_to_numeral[b]\n\
    \  end)\n  return table.concat(nums, ' ')\nend", "  local nums = {}\n  for num\
    \ in numbers:gmatch('%S+') do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n\
    \  return table.concat(nums, ' ')\nend", "    local numeral_map = {\n        zero\
    \ = 0,\n        one = 1,\n        two = 2,\n        three = 3,\n        four =\
    \ 4,\n        five = 5,\n        six = 6,\n        seven = 7,\n        eight =\
    \ 8,\n        nine = 9\n    }\n    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(nums, numeral_map[num])\n    end\n    table.sort(nums)\n\
    \    local result = {}\n    for _, num in ipairs(nums) do\n        for numeral,\
    \ value in pairs(numeral_map) do\n            if value == num then\n         \
    \       table.insert(result, numeral)\n            end\n        end\n    end\n\
    \    return table.concat(result, ' ')\nend", "    local nums = {}\n    for num\
    \ in numbers:gmatch(\"%S+\") do\n        table.insert(nums, num)\n    end\n  \
    \  table.sort(nums)\n    return table.concat(nums, \" \")\nend", "  local num_table\
    \ = {}\n  for num in numbers:gmatch(\"%S+\") do\n    num_table[#num_table + 1]\
    \ = num\n  end\n  table.sort(num_table)\n  return table.concat(num_table, \" \"\
    )\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n     \
    \   table.insert(nums, num)\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "  local numeral_map = {\n    zero = 0,\n    one = 1,\n    two =\
    \ 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven =\
    \ 7,\n    eight = 8,\n    nine = 9\n  }\n  local nums = {}\n  for num in numbers:gmatch('%w+')\
    \ do\n    table.insert(nums, numeral_map[num])\n  end\n  table.sort(nums)\n  local\
    \ result = {}\n  for _, num in ipairs(nums) do\n    table.insert(result, num)\n\
    \  end\n  return table.concat(result, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%w+') do\n        table.insert(nums, num)\n    end\n\
    \    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  local numeral_map\
    \ = {\n    zero = 0,\n    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n\
    \    five = 5,\n    six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n \
    \ }\n  local numbers_list = {}\n  for number in numbers:gmatch('%S+') do\n   \
    \ table.insert(numbers_list, numeral_map[number])\n  end\n  table.sort(numbers_list)\n\
    \  local sorted_numbers = {}\n  for _, number in ipairs(numbers_list) do\n   \
    \ table.insert(sorted_numbers, number)\n  end\n  return table.concat(sorted_numbers,\
    \ ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1]\
    \ = num\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \   local numeral_map = {\n        zero = 0,\n        one = 1,\n        two =\
    \ 2,\n        three = 3,\n        four = 4,\n        five = 5,\n        six =\
    \ 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n    }\n    local\
    \ nums = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums,\
    \ numeral_map[num])\n    end\n    table.sort(nums)\n    local result = {}\n  \
    \  for i, num in ipairs(nums) do\n        for numeral, value in pairs(numeral_map)\
    \ do\n            if value == num then\n                table.insert(result, numeral)\n\
    \            end\n        end\n    end\n    return table.concat(result, ' ')\n\
    end", "    local nums = {}\n    for num in numbers:gmatch('%a+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums, function(a, b)\n        return number_to_numeral[a]\
    \ < number_to_numeral[b]\n    end)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "    local num_to_int = {\n        ['zero'] = 0,\n        ['one'] = 1,\n       \
    \ ['two'] = 2,\n        ['three'] = 3,\n        ['four'] = 4,\n        ['five']\
    \ = 5,\n        ['six'] = 6,\n        ['seven'] = 7,\n        ['eight'] = 8,\n\
    \        ['nine'] = 9,\n    }\n    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(nums, num_to_int[num])\n    end\n    table.sort(nums)\n\
    \    local result = {}\n    for _, num in ipairs(nums) do\n        table.insert(result,\
    \ num_to_int[num])\n    end\n    return table.concat(result, ' ')\nend", "   \
    \ local num_list = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(num_list,\
    \ num)\n    end\n    table.sort(num_list)\n    return table.concat(num_list, '\
    \ ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums,\
    \ num)\n  end\n  table.sort(nums, function(a, b)\n    return numeral_to_int(a)\
    \ < numeral_to_int(b)\n  end)\n  return table.concat(nums, ' ')\nend", "    local\
    \ numbers_table = {}\n    for number in numbers:gmatch('%S+') do\n        table.insert(numbers_table,\
    \ number)\n    end\n    table.sort(numbers_table)\n    return table.concat(numbers_table,\
    \ ' ')\nend", "    local num_list = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n    return\
    \ table.concat(num_list, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(nums, num)\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%w+')\
    \ do\n        table.insert(nums, num)\n    end\n    table.sort(nums, function(a,\
    \ b)\n        return numeral_to_number(a) < numeral_to_number(b)\n    end)\n \
    \   return table.concat(nums, ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch(\"\
    %S+\") do\n    table.insert(nums, num)\n  end\n  table.sort(nums)\n  return table.concat(nums,\
    \ \" \")\nend", "    local num_list = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n\
    \    return table.concat(num_list, ' ')\nend", "  local numeral_map = {\n    zero\
    \ = 0,\n    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n    five =\
    \ 5,\n    six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n  }\n  local\
    \ nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums + 1] = numeral_map[num]\n\
    \  end\n  table.sort(nums)\n  local sorted_numbers = {}\n  for i, num in ipairs(nums)\
    \ do\n    for numeral, value in pairs(numeral_map) do\n      if value == num then\n\
    \        sorted_numbers[i] = numeral\n      end\n    end\n  end\n  return table.concat(sorted_numbers,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch(\"%S+\") do\n\
    \        nums[#nums+1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ \" \")\nend", "    local number_map = {\n        zero = 0,\n        one = 1,\n\
    \        two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n\
    \        six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n\
    \    }\n    local numbers_list = {}\n    for number in numbers:gmatch('%w+') do\n\
    \        table.insert(numbers_list, number_map[number])\n    end\n    table.sort(numbers_list)\n\
    \    local sorted_numbers = {}\n    for _, number in ipairs(numbers_list) do\n\
    \        for numeral, value in pairs(number_map) do\n            if value == number\
    \ then\n                table.insert(sorted_numbers, numeral)\n            end\n\
    \        end\n    end\n    return table.concat(sorted_numbers, ' ')\nend", " \
    \   local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "  local numeral_map = {\n    zero = 0,\n    one = 1,\n    two = 2,\n  \
    \  three = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven = 7,\n  \
    \  eight = 8,\n    nine = 9\n  }\n  local nums = {}\n  for num in numbers:gmatch('%w+')\
    \ do\n    table.insert(nums, numeral_map[num])\n  end\n  table.sort(nums)\n  local\
    \ numeral_map_inv = {}\n  for k, v in pairs(numeral_map) do\n    numeral_map_inv[v]\
    \ = k\n  end\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str,\
    \ numeral_map_inv[num])\n  end\n  return table.concat(nums_str, ' ')\nend", " \
    \ local nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1] =\
    \ num\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", "  local\
    \ nums = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums, num)\n\
    \  end\n  table.sort(nums, function(a, b)\n    return number_to_numeral[a] < number_to_numeral[b]\n\
    \  end)\n  return table.concat(nums, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%S+') do\n        nums[#nums + 1] = num\n    end\n  \
    \  table.sort(nums)\n    return table.concat(nums, ' ')\nend", "    local nums\
    \ = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums, num)\n\
    \    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  \
    \  local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "    local numeral_map = {\n        zero = 0,\n        one = 1,\n        two = 2,\n\
    \        three = 3,\n        four = 4,\n        five = 5,\n        six = 6,\n\
    \        seven = 7,\n        eight = 8,\n        nine = 9\n    }\n    local nums\
    \ = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums, numeral_map[num])\n\
    \    end\n    table.sort(nums)\n    local result = {}\n    for _, num in ipairs(nums)\
    \ do\n        table.insert(result, num)\n    end\n    return table.concat(result,\
    \ ' ')\nend", "    local numeral_map = {\n        zero = 0,\n        one = 1,\n\
    \        two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n\
    \        six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n\
    \    }\n    local nums = {}\n    for num in numbers:gmatch('%w+') do\n       \
    \ table.insert(nums, numeral_map[num])\n    end\n    table.sort(nums)\n    local\
    \ sorted = {}\n    for _, num in ipairs(nums) do\n        for k, v in pairs(numeral_map)\
    \ do\n            if v == num then\n                table.insert(sorted, k)\n\
    \            end\n        end\n    end\n    return table.concat(sorted, ' ')\n\
    end", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "  local numeral_map = {\n    zero = 0,\n    one = 1,\n    two = 2,\n    three =\
    \ 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven = 7,\n    eight =\
    \ 8,\n    nine = 9\n  }\n  local nums = {}\n  for num in numbers:gmatch('%w+')\
    \ do\n    table.insert(nums, numeral_map[num])\n  end\n  table.sort(nums)\n  local\
    \ result = {}\n  for _, num in ipairs(nums) do\n    for numeral, value in pairs(numeral_map)\
    \ do\n      if value == num then\n        table.insert(result, numeral)\n    \
    \  end\n    end\n  end\n  return table.concat(result, ' ')\nend", "  local nums\
    \ = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1] = num\n  end\n\
    \  table.sort(nums)\n  return table.concat(nums, ' ')\nend", "    local nums =\
    \ {}\n    for num in numbers:gmatch(\"%S+\") do\n        nums[#nums+1] = num\n\
    \    end\n    table.sort(nums)\n    return table.concat(nums, \" \")\nend", " \
    \   local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    table.insert(nums,\
    \ num)\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \   local num_map = {\n        ['zero'] = 0,\n        ['one'] = 1,\n        ['two']\
    \ = 2,\n        ['three'] = 3,\n        ['four'] = 4,\n        ['five'] = 5,\n\
    \        ['six'] = 6,\n        ['seven'] = 7,\n        ['eight'] = 8,\n      \
    \  ['nine'] = 9,\n    }\n    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(nums, num_map[num])\n    end\n    table.sort(nums)\n\
    \    local result = {}\n    for _, num in ipairs(nums) do\n        for k, v in\
    \ pairs(num_map) do\n            if v == num then\n                table.insert(result,\
    \ k)\n                break\n            end\n        end\n    end\n    return\
    \ table.concat(result, ' ')\nend", "  local num_list = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    table.insert(num_list, num)\n  end\n  table.sort(num_list)\n  return\
    \ table.concat(num_list, ' ')\nend", "    local num_list = {}\n    for num in\
    \ numbers:gmatch('%S+') do\n        table.insert(num_list, num)\n    end\n   \
    \ table.sort(num_list)\n    return table.concat(num_list, ' ')\nend", "  local\
    \ num_list = {}\n  for num in numbers:gmatch('%S+') do\n    table.insert(num_list,\
    \ num)\n  end\n  table.sort(num_list)\n  return table.concat(num_list, ' ')\n\
    end", "  local numeral_to_number = {\n    zero = 0,\n    one = 1,\n    two = 2,\n\
    \    three = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven = 7,\n\
    \    eight = 8,\n    nine = 9\n  }\n  local numbers_table = {}\n  for number in\
    \ numbers:gmatch('%w+') do\n    table.insert(numbers_table, numeral_to_number[number])\n\
    \  end\n  table.sort(numbers_table)\n  local sorted_numbers = {}\n  for _, number\
    \ in ipairs(numbers_table) do\n    for numeral, number_value in pairs(numeral_to_number)\
    \ do\n      if number == number_value then\n        table.insert(sorted_numbers,\
    \ numeral)\n      end\n    end\n  end\n  return table.concat(sorted_numbers, '\
    \ ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums,\
    \ num)\n  end\n  table.sort(nums, function(a, b)\n    return number_to_numeral[a]\
    \ < number_to_numeral[b]\n  end)\n  return table.concat(nums, ' ')\nend", "  \
    \  local numbers_table = {}\n    for number in numbers:gmatch('%w+') do\n    \
    \    table.insert(numbers_table, number)\n    end\n    table.sort(numbers_table)\n\
    \    return table.concat(numbers_table, ' ')\nend", "    local nums = {}\n   \
    \ for num in numbers:gmatch('%S+') do\n        table.insert(nums, num)\n    end\n\
    \    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "\tlocal nums\
    \ = {}\n\tfor num in numbers:gmatch('%S+') do\n\t\tnums[#nums+1] = num\n\tend\n\
    \ttable.sort(nums, function(a, b)\n\t\treturn tonumber(a) < tonumber(b)\n\tend)\n\
    \treturn table.concat(nums, ' ')\nend", "    local num_list = {}\n    for num\
    \ in numbers:gmatch('%S+') do\n        table.insert(num_list, num)\n    end\n\
    \    table.sort(num_list)\n    return table.concat(num_list, ' ')\nend", "   \
    \ local num_map = {\n        zero = 0,\n        one = 1,\n        two = 2,\n \
    \       three = 3,\n        four = 4,\n        five = 5,\n        six = 6,\n \
    \       seven = 7,\n        eight = 8,\n        nine = 9\n    }\n    local nums\
    \ = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums, num_map[num])\n\
    \    end\n    table.sort(nums)\n    local result = {}\n    for _, num in ipairs(nums)\
    \ do\n        for k, v in pairs(num_map) do\n            if v == num then\n  \
    \              table.insert(result, k)\n                break\n            end\n\
    \        end\n    end\n    return table.concat(result, ' ')\nend", "    local\
    \ numeral_map = {\n        zero = 0,\n        one = 1,\n        two = 2,\n   \
    \     three = 3,\n        four = 4,\n        five = 5,\n        six = 6,\n   \
    \     seven = 7,\n        eight = 8,\n        nine = 9\n    }\n    local nums\
    \ = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums, numeral_map[num])\n\
    \    end\n    table.sort(nums)\n    local result = {}\n    for _, num in ipairs(nums)\
    \ do\n        for numeral, value in pairs(numeral_map) do\n            if value\
    \ == num then\n                table.insert(result, numeral)\n            end\n\
    \        end\n    end\n    return table.concat(result, ' ')\nend", "    local\
    \ nums = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums, function(a, b)\n        return number_to_numeral[a]\
    \ < number_to_numeral[b]\n    end)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    table.insert(nums,\
    \ num)\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \ local nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1] =\
    \ num\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", "  local\
    \ numbers_list = {}\n  for number in numbers:gmatch('%S+') do\n    table.insert(numbers_list,\
    \ number)\n  end\n  table.sort(numbers_list)\n  return table.concat(numbers_list,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        table.insert(nums, num)\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    table.insert(nums,\
    \ num)\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \ local numeral_to_number = {\n    ['zero'] = 0,\n    ['one'] = 1,\n    ['two']\
    \ = 2,\n    ['three'] = 3,\n    ['four'] = 4,\n    ['five'] = 5,\n    ['six']\
    \ = 6,\n    ['seven'] = 7,\n    ['eight'] = 8,\n    ['nine'] = 9,\n  }\n  local\
    \ numbers_table = {}\n  for number in numbers:gmatch('%w+') do\n    table.insert(numbers_table,\
    \ numeral_to_number[number])\n  end\n  table.sort(numbers_table)\n  local sorted_numbers\
    \ = {}\n  for _, number in ipairs(numbers_table) do\n    for numeral, numeral_number\
    \ in pairs(numeral_to_number) do\n      if number == numeral_number then\n   \
    \     table.insert(sorted_numbers, numeral)\n      end\n    end\n  end\n  return\
    \ table.concat(sorted_numbers, ' ')\nend", "    local nums = {}\n    for num in\
    \ numbers:gmatch('%S+') do\n        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n\
    \    return table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in\
    \ numbers:gmatch('%S+') do\n        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n\
    \    return table.concat(nums, ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    local numeral = num2numeral[num]\n    if numeral then\n      nums[#nums\
    \ + 1] = numeral\n    end\n  end\n  table.sort(nums)\n  local sorted = {}\n  for\
    \ i = 1, #nums do\n    sorted[i] = numeral2num[nums[i]]\n  end\n  return table.concat(sorted,\
    \ ' ')\nend", "  local numbers_table = {}\n  for number in numbers:gmatch('%S+')\
    \ do\n    table.insert(numbers_table, number)\n  end\n  table.sort(numbers_table)\n\
    \  return table.concat(numbers_table, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%S+') do\n        table.insert(nums, num)\n    end\n\
    \    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  local nums\
    \ = {}\n  for num in numbers:gmatch(\"%S+\") do\n    table.insert(nums, num)\n\
    \  end\n  table.sort(nums)\n  return table.concat(nums, \" \")\nend", "    local\
    \ nums = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums, function(a, b)\n        return numbers_to_digits[a]\
    \ < numbers_to_digits[b]\n    end)\n    return table.concat(nums, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch(\"%S+\") do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, \" \")\n\
    end", "  local words = numbers:split(' ')\n  table.sort(words, function(a, b)\n\
    \    return tonumber(a) < tonumber(b)\n  end)\n  return table.concat(words, '\
    \ ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1]\
    \ = num\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \   local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "    local numeral_to_number = {\n        ['zero'] = 0,\n        ['one']\
    \ = 1,\n        ['two'] = 2,\n        ['three'] = 3,\n        ['four'] = 4,\n\
    \        ['five'] = 5,\n        ['six'] = 6,\n        ['seven'] = 7,\n       \
    \ ['eight'] = 8,\n        ['nine'] = 9,\n    }\n    local number_to_numeral =\
    \ {\n        [0] = 'zero',\n        [1] = 'one',\n        [2] = 'two',\n     \
    \   [3] = 'three',\n        [4] = 'four',\n        [5] = 'five',\n        [6]\
    \ = 'six',\n        [7] = 'seven',\n        [8] = 'eight',\n        [9] = 'nine',\n\
    \    }\n    local numbers_table = {}\n    for number in numbers:gmatch('%S+')\
    \ do\n        table.insert(numbers_table, numeral_to_number[number])\n    end\n\
    \    table.sort(numbers_table)\n    local sorted_numbers = {}\n    for _, number\
    \ in ipairs(numbers_table) do\n        table.insert(sorted_numbers, number_to_numeral[number])\n\
    \    end\n    return table.concat(sorted_numbers, ' ')\nend", "    local nums\
    \ = {}\n    for num in numbers:gmatch('%w+') do\n        nums[#nums + 1] = num\n\
    \    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  \
    \  local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "    local num_map = {\n        zero = 0,\n        one = 1,\n        two = 2,\n\
    \        three = 3,\n        four = 4,\n        five = 5,\n        six = 6,\n\
    \        seven = 7,\n        eight = 8,\n        nine = 9\n    }\n    local nums\
    \ = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums, num_map[num])\n\
    \    end\n    table.sort(nums)\n    local result = {}\n    for _, num in ipairs(nums)\
    \ do\n        for k, v in pairs(num_map) do\n            if v == num then\n  \
    \              table.insert(result, k)\n                break\n            end\n\
    \        end\n    end\n    return table.concat(result, ' ')\nend", "  local nums\
    \ = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1] = num\n  end\n\
    \  table.sort(nums)\n  return table.concat(nums, ' ')\nend", "  local nums = {}\n\
    \  for num in numbers:gmatch('%S+') do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n\
    \  return table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in\
    \ numbers:gmatch('%S+') do\n        table.insert(nums, num)\n    end\n    table.sort(nums)\n\
    \    return table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in\
    \ numbers:gmatch('%S+') do\n        table.insert(nums, num)\n    end\n    table.sort(nums)\n\
    \    return table.concat(nums, ' ')\nend", "    local numbers_table = {}\n   \
    \ for number in numbers:gmatch('%S+') do\n        table.insert(numbers_table,\
    \ number)\n    end\n    table.sort(numbers_table)\n    return table.concat(numbers_table,\
    \ ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1]\
    \ = num\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \ local nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1] =\
    \ num\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", "  local\
    \ nums = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums, num)\n\
    \  end\n  table.sort(nums, function(a, b)\n    return number_to_numeral[a] < number_to_numeral[b]\n\
    \  end)\n  return table.concat(nums, ' ')\nend", "  local numeral_to_number =\
    \ {\n    zero = 0,\n    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n\
    \    five = 5,\n    six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n \
    \ }\n  local numbers_table = {}\n  for number in numbers:gmatch('%a+') do\n  \
    \  table.insert(numbers_table, numeral_to_number[number])\n  end\n  table.sort(numbers_table)\n\
    \  local sorted_numbers = {}\n  for _, number in ipairs(numbers_table) do\n  \
    \  for numeral, numeral_number in pairs(numeral_to_number) do\n      if number\
    \ == numeral_number then\n        table.insert(sorted_numbers, numeral)\n    \
    \  end\n    end\n  end\n  return table.concat(sorted_numbers, ' ')\nend", "  \
    \  local sorted = {}\n    for num in numbers:gmatch('%a+') do\n        table.insert(sorted,\
    \ num)\n    end\n    table.sort(sorted, function(a, b)\n        return number_to_numeral[a]\
    \ < number_to_numeral[b]\n    end)\n    return table.concat(sorted, ' ')\nend",
  "    local numbers_table = {}\n    for number in numbers:gmatch('%S+') do\n    \
    \    table.insert(numbers_table, number)\n    end\n    table.sort(numbers_table)\n\
    \    return table.concat(numbers_table, ' ')\nend", "  local nums = {}\n  for\
    \ num in numbers:gmatch('%S+') do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n\
    \  return table.concat(nums, ' ')\nend", "    local numeral_to_number = {\n  \
    \      zero = 0,\n        one = 1,\n        two = 2,\n        three = 3,\n   \
    \     four = 4,\n        five = 5,\n        six = 6,\n        seven = 7,\n   \
    \     eight = 8,\n        nine = 9,\n    }\n    local number_to_numeral = {\n\
    \        [0] = 'zero',\n        [1] = 'one',\n        [2] = 'two',\n        [3]\
    \ = 'three',\n        [4] = 'four',\n        [5] = 'five',\n        [6] = 'six',\n\
    \        [7] = 'seven',\n        [8] = 'eight',\n        [9] = 'nine',\n    }\n\
    \    local numbers_list = {}\n    for number in numbers:gmatch('%a+') do\n   \
    \     table.insert(numbers_list, numeral_to_number[number])\n    end\n    table.sort(numbers_list)\n\
    \    local sorted_numbers = {}\n    for _, number in ipairs(numbers_list) do\n\
    \        table.insert(sorted_numbers, number_to_numeral[number])\n    end\n  \
    \  return table.concat(sorted_numbers, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch(\"%S+\") do\n        table.insert(nums, num)\n    end\n\
    \    table.sort(nums)\n    return table.concat(nums, \" \")\nend", "    local\
    \ nums = {}\n    for num in numbers:gmatch('%w+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "  local nums = {}\n  for num in numbers:gmatch('%w+') do\n    nums[#nums+1] = num\n\
    \  end\n  table.sort(nums, function(a, b)\n    return NUM_MAP[a] < NUM_MAP[b]\n\
    \  end)\n  return table.concat(nums, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%S+') do\n        nums[#nums + 1] = num\n    end\n  \
    \  table.sort(nums)\n    return table.concat(nums, ' ')\nend", "    local nums\
    \ = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums + 1] = num\n\
    \    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  \
    \  local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "    local numeral_map = {\n        zero = 0,\n        one = 1,\n      \
    \  two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n      \
    \  six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n    }\n\
    \    local numbers_list = {}\n    for number in numbers:gmatch('%S+') do\n   \
    \     table.insert(numbers_list, numeral_map[number])\n    end\n    table.sort(numbers_list)\n\
    \    local sorted_numbers = {}\n    for _, number in ipairs(numbers_list) do\n\
    \        for numeral, numeral_number in pairs(numeral_map) do\n            if\
    \ number == numeral_number then\n                table.insert(sorted_numbers,\
    \ numeral)\n            end\n        end\n    end\n    return table.concat(sorted_numbers,\
    \ ' ')\nend", "    local num_list = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n    return\
    \ table.concat(num_list, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(nums, num)\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch(\"\
    %w+\") do\n        nums[#nums+1] = num\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, \" \")\nend", "  local numeral_map = {\n    ['zero'] = 0,\n\
    \    ['one'] = 1,\n    ['two'] = 2,\n    ['three'] = 3,\n    ['four'] = 4,\n \
    \   ['five'] = 5,\n    ['six'] = 6,\n    ['seven'] = 7,\n    ['eight'] = 8,\n\
    \    ['nine'] = 9\n  }\n  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    table.insert(nums, numeral_map[num])\n  end\n  table.sort(nums)\n  local\
    \ numeral_map_inv = {}\n  for k, v in pairs(numeral_map) do\n    numeral_map_inv[v]\
    \ = k\n  end\n  local nums_str = {}\n  for _, num in ipairs(nums) do\n    table.insert(nums_str,\
    \ numeral_map_inv[num])\n  end\n  return table.concat(nums_str, ' ')\nend", " \
    \   local num_list = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(num_list,\
    \ num)\n    end\n    table.sort(num_list)\n    return table.concat(num_list, '\
    \ ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n  \
    \      nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "    local num_list = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n    return\
    \ table.concat(num_list, ' ')\nend", "  local numbers_table = {}\n  for number\
    \ in numbers:gmatch('%S+') do\n    table.insert(numbers_table, number)\n  end\n\
    \  table.sort(numbers_table)\n  return table.concat(numbers_table, ' ')\nend",
  "    local num_map = {\n        zero = 0,\n        one = 1,\n        two = 2,\n\
    \        three = 3,\n        four = 4,\n        five = 5,\n        six = 6,\n\
    \        seven = 7,\n        eight = 8,\n        nine = 9\n    }\n    local nums\
    \ = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums, num_map[num])\n\
    \    end\n    table.sort(nums)\n    local result = {}\n    for _, num in ipairs(nums)\
    \ do\n        for k, v in pairs(num_map) do\n            if v == num then\n  \
    \              table.insert(result, k)\n                break\n            end\n\
    \        end\n    end\n    return table.concat(result, ' ')\nend", "  local sorted\
    \ = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(sorted, num)\n\
    \  end\n  table.sort(sorted, function(a, b)\n    return number_to_numeral[a] <\
    \ number_to_numeral[b]\n  end)\n  return table.concat(sorted, ' ')\nend", "  local\
    \ num_list = {}\n  for num in numbers:gmatch('%S+') do\n    num_list[#num_list\
    \ + 1] = num\n  end\n  table.sort(num_list)\n  return table.concat(num_list, '\
    \ ')\nend", "  local sorted = {}\n  for number in numbers:gmatch('%S+') do\n \
    \   table.insert(sorted, number)\n  end\n  table.sort(sorted, function(a, b)\n\
    \    return number_to_numeral[a] < number_to_numeral[b]\n  end)\n  return table.concat(sorted,\
    \ ' ')\nend", "\tlocal nums = {}\n\tfor num in numbers:gmatch('%w+') do\n\t\t\
    table.insert(nums, num)\n\tend\n\ttable.sort(nums, function(a, b)\n\t\treturn\
    \ numeral_to_number(a) < numeral_to_number(b)\n\tend)\n\treturn table.concat(nums,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%w+') do\n\
    \        table.insert(nums, num)\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "    local number_map = {\n        zero = 0,\n        one = 1,\n\
    \        two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n\
    \        six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n\
    \    }\n    local number_list = {}\n    for number in numbers:gmatch('%S+') do\n\
    \        table.insert(number_list, number_map[number])\n    end\n    table.sort(number_list)\n\
    \    local sorted_numbers = {}\n    for _, number in ipairs(number_list) do\n\
    \        for key, value in pairs(number_map) do\n            if value == number\
    \ then\n                table.insert(sorted_numbers, key)\n            end\n \
    \       end\n    end\n    return table.concat(sorted_numbers, ' ')\nend", "  local\
    \ numeral_map = {\n    zero = 0,\n    one = 1,\n    two = 2,\n    three = 3,\n\
    \    four = 4,\n    five = 5,\n    six = 6,\n    seven = 7,\n    eight = 8,\n\
    \    nine = 9\n  }\n  local nums = {}\n  for num in numbers:gmatch('%w+') do\n\
    \    table.insert(nums, numeral_map[num])\n  end\n  table.sort(nums)\n  local\
    \ num_str = ''\n  for _, num in ipairs(nums) do\n    for numeral, value in pairs(numeral_map)\
    \ do\n      if value == num then\n        num_str = num_str .. numeral .. ' '\n\
    \      end\n    end\n  end\n  return num_str:sub(1, -2)\nend", "  local nums =\
    \ {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1] = num\n  end\n\
    \  table.sort(nums)\n  return table.concat(nums, ' ')\nend", "    local nums =\
    \ {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums, num)\n\
    \    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  \
    \  local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend",
  "  local num_list = {}\n  for num in numbers:gmatch('%S+') do\n    table.insert(num_list,\
    \ num)\n  end\n  table.sort(num_list)\n  return table.concat(num_list, ' ')\n\
    end", "    local nums = {}\n    for num in numbers:gmatch(\"%w+\") do\n      \
    \  table.insert(nums, num)\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ \" \")\nend", "    local nums = {}\n    for num in numbers:gmatch(\"%w+\") do\n\
    \        nums[#nums+1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ \" \")\nend", "    local numeral_map = {\n        zero = 0,\n        one = 1,\n\
    \        two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n\
    \        six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n\
    \    }\n    local nums = {}\n    for num in numbers:gmatch('%S+') do\n       \
    \ table.insert(nums, numeral_map[num])\n    end\n    table.sort(nums)\n    local\
    \ result = {}\n    for _, num in ipairs(nums) do\n        for numeral, value in\
    \ pairs(numeral_map) do\n            if value == num then\n                table.insert(result,\
    \ numeral)\n            end\n        end\n    end\n    return table.concat(result,\
    \ ' ')\nend", "  local numeral_map = {\n    zero = 0,\n    one = 1,\n    two =\
    \ 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven =\
    \ 7,\n    eight = 8,\n    nine = 9\n  }\n  local numbers_list = {}\n  for number\
    \ in numbers:gmatch('%S+') do\n    table.insert(numbers_list, numeral_map[number])\n\
    \  end\n  table.sort(numbers_list)\n  local sorted_numbers = {}\n  for _, number\
    \ in ipairs(numbers_list) do\n    for numeral, numeral_number in pairs(numeral_map)\
    \ do\n      if number == numeral_number then\n        table.insert(sorted_numbers,\
    \ numeral)\n      end\n    end\n  end\n  return table.concat(sorted_numbers, '\
    \ ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n  \
    \      table.insert(nums, num)\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "    local num_list = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n    return\
    \ table.concat(num_list, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n  return table.concat(nums,\
    \ ' ')\nend", "  local numeral_map = {\n    zero = 0,\n    one = 1,\n    two =\
    \ 2,\n    three = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven =\
    \ 7,\n    eight = 8,\n    nine = 9\n  }\n  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    nums[#nums + 1] = numeral_map[num]\n  end\n  table.sort(nums)\n  local\
    \ sorted_numbers = {}\n  for i, num in ipairs(nums) do\n    for numeral, value\
    \ in pairs(numeral_map) do\n      if value == num then\n        sorted_numbers[i]\
    \ = numeral\n      end\n    end\n  end\n  return table.concat(sorted_numbers,\
    \ ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    table.insert(nums,\
    \ num)\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \   local num_list = {}\n    for num in numbers:gmatch('%S+') do\n        num_list[#num_list\
    \ + 1] = num\n    end\n    table.sort(num_list)\n    return table.concat(num_list,\
    \ ' ')\nend", "    local nums = {}\n    for num in string.gmatch(numbers, '%a+')\
    \ do\n        table.insert(nums, num)\n    end\n    table.sort(nums)\n    return\
    \ table.concat(nums, ' ')\nend", "    local numeral_to_number = {\n        zero\
    \ = 0,\n        one = 1,\n        two = 2,\n        three = 3,\n        four =\
    \ 4,\n        five = 5,\n        six = 6,\n        seven = 7,\n        eight =\
    \ 8,\n        nine = 9,\n    }\n    local numbers_list = {}\n    for number in\
    \ numbers:gmatch('%w+') do\n        table.insert(numbers_list, numeral_to_number[number])\n\
    \    end\n    table.sort(numbers_list)\n    local sorted_numbers = {}\n    for\
    \ _, number in ipairs(numbers_list) do\n        for numeral, numeral_number in\
    \ pairs(numeral_to_number) do\n            if number == numeral_number then\n\
    \                table.insert(sorted_numbers, numeral)\n            end\n    \
    \    end\n    end\n    return table.concat(sorted_numbers, ' ')\nend", "  local\
    \ nums = {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums, num)\n\
    \  end\n  table.sort(nums, function(a, b)\n    return number_to_numeral[a] < number_to_numeral[b]\n\
    \  end)\n  return table.concat(nums, ' ')\nend", "  local nums = {}\n  for num\
    \ in numbers:gmatch('%S+') do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n\
    \  return table.concat(nums, ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch(\"\
    %w+\") do\n    table.insert(nums, num)\n  end\n  table.sort(nums)\n  return table.concat(nums,\
    \ \" \")\nend", "    local num_list = {}\n    for num in numbers:gmatch('%w+')\
    \ do\n        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n\
    \    return table.concat(num_list, ' ')\nend", "    local numeral_map = {\n  \
    \      zero = 0,\n        one = 1,\n        two = 2,\n        three = 3,\n   \
    \     four = 4,\n        five = 5,\n        six = 6,\n        seven = 7,\n   \
    \     eight = 8,\n        nine = 9\n    }\n    local nums = {}\n    for num in\
    \ numbers:gmatch('%w+') do\n        table.insert(nums, numeral_map[num])\n   \
    \ end\n    table.sort(nums)\n    local result = {}\n    for _, num in ipairs(nums)\
    \ do\n        for numeral, numeral_num in pairs(numeral_map) do\n            if\
    \ numeral_num == num then\n                table.insert(result, numeral)\n   \
    \         end\n        end\n    end\n    return table.concat(result, ' ')\nend",
  "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "    local numbers_list = {}\n    for number in numbers:gmatch('%S+') do\n\
    \        table.insert(numbers_list, number)\n    end\n    table.sort(numbers_list)\n\
    \    return table.concat(numbers_list, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%w+') do\n        nums[#nums + 1] = num\n    end\n  \
    \  table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  local numeral_to_number\
    \ = {\n    zero = 0,\n    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n\
    \    five = 5,\n    six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n \
    \ }\n  local number_to_numeral = {\n    [0] = 'zero',\n    [1] = 'one',\n    [2]\
    \ = 'two',\n    [3] = 'three',\n    [4] = 'four',\n    [5] = 'five',\n    [6]\
    \ = 'six',\n    [7] = 'seven',\n    [8] = 'eight',\n    [9] = 'nine'\n  }\n  local\
    \ numbers_list = {}\n  for number in numbers:gmatch('%S+') do\n    table.insert(numbers_list,\
    \ numeral_to_number[number])\n  end\n  table.sort(numbers_list)\n  local sorted_numbers\
    \ = {}\n  for _, number in ipairs(numbers_list) do\n    table.insert(sorted_numbers,\
    \ number_to_numeral[number])\n  end\n  return table.concat(sorted_numbers, ' ')\n\
    end", "    local numeral_map = {\n        zero = 0,\n        one = 1,\n      \
    \  two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n      \
    \  six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n    }\n\
    \    local nums = {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(nums,\
    \ numeral_map[num])\n    end\n    table.sort(nums)\n    local result = {}\n  \
    \  for _, num in ipairs(nums) do\n        for numeral, value in pairs(numeral_map)\
    \ do\n            if value == num then\n                table.insert(result, numeral)\n\
    \                break\n            end\n        end\n    end\n    return table.concat(result,\
    \ ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+') do\n    nums[#nums+1]\
    \ = num\n  end\n  table.sort(nums)\n  return table.concat(nums, ' ')\nend", " \
    \ local numeral_map = {\n    zero = 0,\n    one = 1,\n    two = 2,\n    three\
    \ = 3,\n    four = 4,\n    five = 5,\n    six = 6,\n    seven = 7,\n    eight\
    \ = 8,\n    nine = 9\n  }\n  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    table.insert(nums, numeral_map[num])\n  end\n  table.sort(nums)\n  local\
    \ numeral_map_inv = {}\n  for k, v in pairs(numeral_map) do\n    numeral_map_inv[v]\
    \ = k\n  end\n  local result = {}\n  for _, num in ipairs(nums) do\n    table.insert(result,\
    \ numeral_map_inv[num])\n  end\n  return table.concat(result, ' ')\nend", "  \
    \  local nums = {}\n    for num in numbers:gmatch('%S+') do\n        nums[#nums\
    \ + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\n\
    end", "    local nums = {}\n    for num in numbers:gmatch(\"%S+\") do\n      \
    \  nums[#nums+1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ \" \")\nend", "    local numeral_map = {\n        zero = 0,\n        one = 1,\n\
    \        two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n\
    \        six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n\
    \    }\n    local nums = {}\n    for num in numbers:gmatch('%w+') do\n       \
    \ table.insert(nums, numeral_map[num])\n    end\n    table.sort(nums)\n    local\
    \ result = {}\n    for _, num in ipairs(nums) do\n        for numeral, value in\
    \ pairs(numeral_map) do\n            if value == num then\n                table.insert(result,\
    \ numeral)\n            end\n        end\n    end\n    return table.concat(result,\
    \ ' ')\nend", "  local numeral_map = {\n    ['zero'] = 0,\n    ['one'] = 1,\n\
    \    ['two'] = 2,\n    ['three'] = 3,\n    ['four'] = 4,\n    ['five'] = 5,\n\
    \    ['six'] = 6,\n    ['seven'] = 7,\n    ['eight'] = 8,\n    ['nine'] = 9\n\
    \  }\n  local nums = {}\n  for num in numbers:gmatch('%a+') do\n    nums[#nums\
    \ + 1] = numeral_map[num]\n  end\n  table.sort(nums)\n  local result = {}\n  for\
    \ _, num in ipairs(nums) do\n    for k, v in pairs(numeral_map) do\n      if v\
    \ == num then\n        result[#result + 1] = k\n        break\n      end\n   \
    \ end\n  end\n  return table.concat(result, ' ')\nend", "    local num_list =\
    \ {}\n    for num in numbers:gmatch('%S+') do\n        table.insert(num_list,\
    \ num)\n    end\n    table.sort(num_list)\n    return table.concat(num_list, '\
    \ ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n  \
    \      nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "\tlocal num_list = {}\n\tlocal num_map = {\n\t\tzero = 0,\n\t\t\
    one = 1,\n\t\ttwo = 2,\n\t\tthree = 3,\n\t\tfour = 4,\n\t\tfive = 5,\n\t\tsix\
    \ = 6,\n\t\tseven = 7,\n\t\teight = 8,\n\t\tnine = 9\n\t}\n\tfor num in numbers:gmatch('%a+')\
    \ do\n\t\ttable.insert(num_list, num_map[num])\n\tend\n\ttable.sort(num_list)\n\
    \tlocal sorted_numbers = {}\n\tfor _, num in ipairs(num_list) do\n\t\tfor name,\
    \ value in pairs(num_map) do\n\t\t\tif value == num then\n\t\t\t\ttable.insert(sorted_numbers,\
    \ name)\n\t\t\tend\n\t\tend\n\tend\n\treturn table.concat(sorted_numbers, ' ')\n\
    end", "    local num_list = {}\n    for num in numbers:gmatch('%w+') do\n    \
    \    table.insert(num_list, num)\n    end\n    table.sort(num_list)\n    return\
    \ table.concat(num_list, ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n  return table.concat(nums,\
    \ ' ')\nend", "    local num_list = {}\n    for num in numbers:gmatch('%w+') do\n\
    \        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n    return\
    \ table.concat(num_list, ' ')\nend", "  local numeral_map = {\n    ['zero'] =\
    \ 0,\n    ['one'] = 1,\n    ['two'] = 2,\n    ['three'] = 3,\n    ['four'] = 4,\n\
    \    ['five'] = 5,\n    ['six'] = 6,\n    ['seven'] = 7,\n    ['eight'] = 8,\n\
    \    ['nine'] = 9\n  }\n  local numbers_table = {}\n  for number in numbers:gmatch('%S+')\
    \ do\n    table.insert(numbers_table, numeral_map[number])\n  end\n  table.sort(numbers_table)\n\
    \  local sorted_numbers = {}\n  for _, number in ipairs(numbers_table) do\n  \
    \  for numeral, numeral_number in pairs(numeral_map) do\n      if number == numeral_number\
    \ then\n        table.insert(sorted_numbers, numeral)\n      end\n    end\n  end\n\
    \  return table.concat(sorted_numbers, ' ')\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%w+') do\n        nums[#nums + 1] = num\n    end\n  \
    \  table.sort(nums)\n    return table.concat(nums, ' ')\nend", "    local num_map\
    \ = {\n        zero = 0,\n        one = 1,\n        two = 2,\n        three =\
    \ 3,\n        four = 4,\n        five = 5,\n        six = 6,\n        seven =\
    \ 7,\n        eight = 8,\n        nine = 9\n    }\n    local nums = {}\n    for\
    \ num in numbers:gmatch('%S+') do\n        table.insert(nums, num_map[num])\n\
    \    end\n    table.sort(nums)\n    local sorted = {}\n    for _, num in ipairs(nums)\
    \ do\n        for k, v in pairs(num_map) do\n            if v == num then\n  \
    \              table.insert(sorted, k)\n            end\n        end\n    end\n\
    \    return table.concat(sorted, ' ')\nend", "  local nums = {}\n  for num in\
    \ numbers:gmatch(\"%S+\") do\n    table.insert(nums, num)\n  end\n  table.sort(nums)\n\
    \  return table.concat(nums, \" \")\nend", "  local sorted = {}\n  for num in\
    \ numbers:gmatch('%S+') do\n    table.insert(sorted, num)\n  end\n  table.sort(sorted,\
    \ function(a, b)\n    return number_to_numeral[a] < number_to_numeral[b]\n  end)\n\
    \  return table.concat(sorted, ' ')\nend", "  local nums = {}\n  for num in numbers:gmatch('%S+')\
    \ do\n    nums[#nums+1] = num\n  end\n  table.sort(nums)\n  return table.concat(nums,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        nums[#nums + 1] = num\n    end\n    table.sort(nums)\n    return table.concat(nums,\
    \ ' ')\nend", "    local num_list = {}\n    for num in numbers:gmatch('%S+') do\n\
    \        table.insert(num_list, num)\n    end\n    table.sort(num_list)\n    return\
    \ table.concat(num_list, ' ')\nend", "  local numeral_map = {\n    zero = 0,\n\
    \    one = 1,\n    two = 2,\n    three = 3,\n    four = 4,\n    five = 5,\n  \
    \  six = 6,\n    seven = 7,\n    eight = 8,\n    nine = 9\n  }\n  local nums =\
    \ {}\n  for num in numbers:gmatch('%w+') do\n    table.insert(nums, numeral_map[num])\n\
    \  end\n  table.sort(nums)\n  local result = {}\n  for _, num in ipairs(nums)\
    \ do\n    for k, v in pairs(numeral_map) do\n      if v == num then\n        table.insert(result,\
    \ k)\n      end\n    end\n  end\n  return table.concat(result, ' ')\nend", " \
    \ local num_list = {}\n  for num in numbers:gmatch('%S+') do\n    num_list[#num_list\
    \ + 1] = num\n  end\n  table.sort(num_list)\n  return table.concat(num_list, '\
    \ ')\nend", "  local num_list = {}\n  for num in numbers:gmatch('%w+') do\n  \
    \  num_list[#num_list + 1] = num\n  end\n  table.sort(num_list)\n  return table.concat(num_list,\
    \ ' ')\nend", "    local numeral_map = {\n        zero = 0,\n        one = 1,\n\
    \        two = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n\
    \        six = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9\n\
    \    }\n    local nums = {}\n    for num in numbers:gmatch('%S+') do\n       \
    \ table.insert(nums, numeral_map[num])\n    end\n    table.sort(nums)\n    local\
    \ sorted = {}\n    for _, num in ipairs(nums) do\n        for k, v in pairs(numeral_map)\
    \ do\n            if v == num then\n                table.insert(sorted, k)\n\
    \            end\n        end\n    end\n    return table.concat(sorted, ' ')\n\
    end", "  local nums = {}\n  for num in numbers:gmatch('%w+') do\n    nums[#nums+1]\
    \ = num\n  end\n  table.sort(nums, function(a, b)\n    return num_to_int(a) <\
    \ num_to_int(b)\n  end)\n  return table.concat(nums, ' ')\nend", "    local nums\
    \ = {}\n    for num in numbers:gmatch('%w+') do\n        nums[#nums + 1] = num\n\
    \    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "  \
    \  local numeral_to_number = {\n        zero = 0,\n        one = 1,\n        two\
    \ = 2,\n        three = 3,\n        four = 4,\n        five = 5,\n        six\
    \ = 6,\n        seven = 7,\n        eight = 8,\n        nine = 9,\n    }\n   \
    \ local numbers_list = {}\n    for number in numbers:gmatch('%w+') do\n      \
    \  table.insert(numbers_list, numeral_to_number[number])\n    end\n    table.sort(numbers_list)\n\
    \    local sorted_numbers = {}\n    for _, number in ipairs(numbers_list) do\n\
    \        for numeral, number_value in pairs(numeral_to_number) do\n          \
    \  if number == number_value then\n                table.insert(sorted_numbers,\
    \ numeral)\n            end\n        end\n    end\n    return table.concat(sorted_numbers,\
    \ ' ')\nend", "    local num_table = {}\n    for num in numbers:gmatch(\"%S+\"\
    ) do\n        table.insert(num_table, num)\n    end\n    table.sort(num_table)\n\
    \    return table.concat(num_table, \" \")\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%S+') do\n        nums[#nums + 1] = num\n    end\n  \
    \  table.sort(nums)\n    return table.concat(nums, ' ')\nend", "    local nums\
    \ = {}\n    for num in numbers:gmatch('%w+') do\n        nums[#nums + 1] = num\n\
    \    end\n    table.sort(nums)\n    return table.concat(nums, ' ')\nend", "\t\
    local nums = {}\n\tfor num in numbers:gmatch('%S+') do\n\t\tnums[#nums+1] = num\n\
    \tend\n\ttable.sort(nums, function(a, b)\n\t\treturn tonumber(a) < tonumber(b)\n\
    \tend)\n\treturn table.concat(nums, ' ')\nend", "    local number_map = {\n  \
    \      zero = 0,\n        one = 1,\n        two = 2,\n        three = 3,\n   \
    \     four = 4,\n        five = 5,\n        six = 6,\n        seven = 7,\n   \
    \     eight = 8,\n        nine = 9\n    }\n    local numbers_table = {}\n    for\
    \ number in numbers:gmatch('%S+') do\n        table.insert(numbers_table, number_map[number])\n\
    \    end\n    table.sort(numbers_table)\n    local sorted_numbers = {}\n    for\
    \ _, number in ipairs(numbers_table) do\n        for k, v in pairs(number_map)\
    \ do\n            if v == number then\n                table.insert(sorted_numbers,\
    \ k)\n            end\n        end\n    end\n    return table.concat(sorted_numbers,\
    \ ' ')\nend", "    local nums = {}\n    for num in numbers:gmatch('%w+') do\n\
    \        nums[#nums + 1] = num\n    end\n    table.sort(nums, function(a, b)\n\
    \        return numbers_to_digits[a] < numbers_to_digits[b]\n    end)\n    return\
    \ table.concat(nums, ' ')\nend", "    local numeral_map = {\n        zero = 0,\n\
    \        one = 1,\n        two = 2,\n        three = 3,\n        four = 4,\n \
    \       five = 5,\n        six = 6,\n        seven = 7,\n        eight = 8,\n\
    \        nine = 9\n    }\n    local nums = {}\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(nums, numeral_map[num])\n    end\n    table.sort(nums)\n\
    \    local sorted = {}\n    for _, num in ipairs(nums) do\n        for numeral,\
    \ value in pairs(numeral_map) do\n            if value == num then\n         \
    \       table.insert(sorted, numeral)\n            end\n        end\n    end\n\
    \    return table.concat(sorted, ' ')\nend", "\tlocal sorted = {}\n\tfor number\
    \ in numbers:gmatch('%S+') do\n\t\tlocal num = number_to_numeral[number]\n\t\t\
    if num then\n\t\t\ttable.insert(sorted, num)\n\t\tend\n\tend\n\ttable.sort(sorted)\n\
    \tlocal result = {}\n\tfor _, num in ipairs(sorted) do\n\t\ttable.insert(result,\
    \ numeral_to_number[num])\n\tend\n\treturn table.concat(result, ' ')\nend", " \
    \   local nums = {}\n    for num in numbers:gmatch('%a+') do\n        table.insert(nums,\
    \ num)\n    end\n    table.sort(nums, function(a, b)\n        return number_to_numeral[a]\
    \ < number_to_numeral[b]\n    end)\n    return table.concat(nums, ' ')\nend",
  "    local num_table = {}\n    local num_str = ''\n    for num in numbers:gmatch('%S+')\
    \ do\n        table.insert(num_table, num)\n    end\n    table.sort(num_table)\n\
    \    for i, num in ipairs(num_table) do\n        num_str = num_str .. num .. '\
    \ '\n    end\n    return num_str:sub(1, -2)\nend", "    local nums = {}\n    for\
    \ num in numbers:gmatch('%S+') do\n        table.insert(nums, num)\n    end\n\
    \    table.sort(nums)\n    return table.concat(nums, ' ')\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

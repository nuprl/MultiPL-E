name: HumanEval_140_fix_spaces
language: lua
prompt: "-- Given a string text, replace all spaces in it with underscores, \n-- and\
  \ if a string has more than 2 consecutive spaces, \n-- then replace all consecutive\
  \ spaces with - \n-- >>> fix_spaces(' Example')\n-- 'Example'\n-- >>> fix_spaces('\
  \ Example 1')\n-- 'Example_1'\n-- >>> fix_spaces(' Example 2')\n-- '_Example_2'\n\
  -- >>> fix_spaces(' Example 3')\n-- '_Example-3'\nlocal function fix_spaces(text)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = fix_spaces\n\
  \    lu.assertEquals(candidate('Example'), 'Example')\n    lu.assertEquals(candidate('Mudasir\
  \ Hanif '), 'Mudasir_Hanif_')\n    lu.assertEquals(candidate('Yellow Yellow  Dirty\
  \  Fellow'), 'Yellow_Yellow__Dirty__Fellow')\n    lu.assertEquals(candidate('Exa\
  \   mple'), 'Exa-mple')\n    lu.assertEquals(candidate('   Exa 1 2 2 mple'), '-Exa_1_2_2_mple')\n\
  end\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = text:gsub('%s+', '-'):gsub('^%s', ''):gsub('%s$',\
    \ ''):gsub('%s', '_')\n    return result\nend", "    local result = text:gsub('%s+',\
    \ '-')\n    result = result:gsub('^%s', '')\n    result = result:gsub('%s$', '')\n\
    \    result = result:gsub('%s', '_')\n    return result\nend", "    return (text:gsub('%s+',\
    \ '-'):gsub('^%s', ''):gsub('%s', '_'))\nend", "    text = text:gsub('^%s+', '')\n\
    \    text = text:gsub('%s+$', '')\n    text = text:gsub('%s+', '_')\n    text\
    \ = text:gsub('_+', '-')\n    return text\nend", "    text = text:gsub('^%s+',\
    \ '')\n    text = text:gsub('%s+$', '')\n    text = text:gsub('%s+', '_')\n  \
    \  text = text:gsub('_+', '-')\n    return text\nend", "    local result = text:gsub('%s+',\
    \ '-')\n    result = result:gsub('^%s+', '')\n    result = result:gsub('%s+$',\
    \ '')\n    result = result:gsub('%s', '_')\n    return result\nend", "    local\
    \ result = text:gsub('%s+', '-')\n    result = result:gsub('^%s', '')\n    result\
    \ = result:gsub('%s$', '')\n    result = result:gsub('%s', '_')\n    return result\n\
    end", "    text = text:gsub(' ', '_')\n    text = text:gsub('_+', '-')\n    return\
    \ text\nend", "    local result = text:gsub('%s+', '-')\n    result = result:gsub('%s',\
    \ '_')\n    return result\nend", "    text = text:gsub('%s+', '-')\n    text =\
    \ text:gsub('^%s', '')\n    text = text:gsub('%s$', '')\n    text = text:gsub('%s',\
    \ '_')\n    return text\nend", "    return text:gsub('%s+', '-'):gsub('^%s', ''):gsub('%s',\
    \ '_')\nend", "    local text = text:gsub('%s+', ' ')\n    text = text:gsub('%s',\
    \ '_')\n    text = text:gsub('_+', '-')\n    return text\nend", "    return text:gsub('%s+',\
    \ '-')\nend", "  local result = string.gsub(text, \"  \", \" \")\n  result = string.gsub(result,\
    \ \" \", \"_\")\n  result = string.gsub(result, \" \", \"-\")\n  return result\n\
    end", "    local res = text:gsub('  ', '-'):gsub(' ', '_')\n    return res\nend",
  "    local result = text:gsub('%s+', '-')\n    result = result:gsub('^%s', '')\n\
    \    result = result:gsub('%s$', '')\n    result = result:gsub('%s', '_')\n  \
    \  return result\nend", "    local result = text:gsub('%s+', '-')\n    result\
    \ = result:gsub('^%s', '')\n    result = result:gsub('%s$', '')\n    result =\
    \ result:gsub('%s', '_')\n    return result\nend", "    local result = text:gsub('\
    \  +', '-')\n    result = result:gsub(' ', '_')\n    return result\nend", "  \
    \  return text:gsub('%s+', '-'):gsub('^%s+', ''):gsub('%s+$', ''):gsub('%s', '_')\n\
    end", "    return text:gsub('%s+', function(s)\n        if #s == 1 then\n    \
    \        return '_'\n        else\n            return '-'\n        end\n    end)\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_91_is_bored
language: lua
prompt: "-- You'll be given a string of words, and your task is to count the number\n\
  -- of boredoms. A boredom is a sentence that starts with the word \"I\".\n-- Sentences\
  \ are delimited by '.', '?' or '!'.\n-- For example:\n-- >>> is_bored('Hello world')\n\
  -- 0\n-- >>> is_bored('The sky is blue. The sun is shining. I love this weather')\n\
  -- 1\nlocal function is_bored(S)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = is_bored\n\
  \    lu.assertEquals(candidate('Hello world'), 0)\n    lu.assertEquals(candidate('Is\
  \ the sky blue?'), 0)\n    lu.assertEquals(candidate('I love It !'), 1)\n    lu.assertEquals(candidate('bIt'),\
  \ 0)\n    lu.assertEquals(candidate('I feel good today. I will be productive. will\
  \ kill It'), 2)\n    lu.assertEquals(candidate('You and I are going for a walk'),\
  \ 0)\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local boredoms = 0\n    local start = 1\n    local _, end_ = string.find(S,\
    \ '[!.?]', start)\n    while end_ do\n        local sentence = string.sub(S, start,\
    \ end_)\n        if string.find(sentence, '^%s*I') then\n            boredoms\
    \ = boredoms + 1\n        end\n        start = end_ + 1\n        _, end_ = string.find(S,\
    \ '[!.?]', start)\n    end\n    return boredoms\nend", "    local count = 0\n\
    \    for word in S:gmatch(\"%S+\") do\n        if word == \"I\" then\n       \
    \     count = count + 1\n        end\n    end\n    return count\nend", "    local\
    \ count = 0\n    for word in string.gmatch(S, \"%a+\") do\n        if word ==\
    \ \"I\" then\n            count = count + 1\n        end\n    end\n    return\
    \ count\nend", "    local count = 0\n    for sentence in string.gmatch(S, \"[^.!?]+\"\
    ) do\n        if string.match(sentence, \"^%s*I\") then\n            count = count\
    \ + 1\n        end\n    end\n    return count\nend", "    local count = 0\n  \
    \  local i = 1\n    while i <= #S do\n        if S:sub(i, i) == 'I' then\n   \
    \         count = count + 1\n        end\n        i = i + 1\n    end\n    return\
    \ count\nend", "    local boredoms = 0\n    local sentences = split(S, '%.')\n\
    \    for _, sentence in ipairs(sentences) do\n        local words = split(sentence,\
    \ '%s')\n        if words[1] == 'I' then\n            boredoms = boredoms + 1\n\
    \        end\n    end\n    return boredoms\nend", "    local boredoms = 0\n  \
    \  for _, word in ipairs(S:split('[.?!]')) do\n        if word:match('^%s*I')\
    \ then\n            boredoms = boredoms + 1\n        end\n    end\n    return\
    \ boredoms\nend", "  local boredoms = 0\n  for sentence in S:gmatch('[^.!?]+')\
    \ do\n    if sentence:match('^%s*I') then\n      boredoms = boredoms + 1\n   \
    \ end\n  end\n  return boredoms\nend", "    local boredoms = 0\n    for sentence\
    \ in string.gmatch(S, '[^.!?]+') do\n        if string.match(sentence, '^I') then\n\
    \            boredoms = boredoms + 1\n        end\n    end\n    return boredoms\n\
    end", "  local count = 0\n  for word in S:gmatch(\"%S+\") do\n    if word == \"\
    I\" then\n      count = count + 1\n    end\n  end\n  return count\nend", "   \
    \ local count = 0\n    for word in S:gmatch(\"%S+\") do\n        if word == \"\
    I\" then\n            count = count + 1\n        end\n    end\n    return count\n\
    end", "    local boredoms = 0\n    for sentence in S:gmatch('[^.?!]+') do\n  \
    \      if sentence:match('^%s*I') then\n            boredoms = boredoms + 1\n\
    \        end\n    end\n    return boredoms\nend", "    local count = 0\n    for\
    \ _,v in pairs(split(S, '.')) do\n        if string.sub(v, 1, 1) == 'I' then\n\
    \            count = count + 1\n        end\n    end\n    return count\nend",
  "  return S:gsub('I[^.!?]*[.!?]', ''):len()\nend", "    local boredoms = 0\n   \
    \ for sentence in S:gmatch('[^.!?]+') do\n        if sentence:match('^I') then\n\
    \            boredoms = boredoms + 1\n        end\n    end\n    return boredoms\n\
    end", "    local boredoms = 0\n    for sentence in string.gmatch(S, '[^.!?]+')\
    \ do\n        if string.match(sentence, '^%s*I') then\n            boredoms =\
    \ boredoms + 1\n        end\n    end\n    return boredoms\nend", "  local count\
    \ = 0\n  for w in S:gmatch(\"%S+\") do\n    if w == \"I\" then\n      count =\
    \ count + 1\n    end\n  end\n  return count\nend", "    local count = 0\n    for\
    \ word in S:gmatch('%w+') do\n        if word == 'I' then\n            count =\
    \ count + 1\n        end\n    end\n    return count\nend", "  local boredoms =\
    \ 0\n  for sentence in S:gmatch('[^.?!]+') do\n    if sentence:match('^%s*I')\
    \ then\n      boredoms = boredoms + 1\n    end\n  end\n  return boredoms\nend",
  "    local count = 0\n    for word in S:gmatch('%S+') do\n        if word == 'I'\
    \ then\n            count = count + 1\n        end\n    end\n    return count\n\
    end"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

name: HumanEval_7_filter_by_substring
language: lua
prompt: "-- Filter an input list of strings only for ones that contain given substring\n\
  -- >>> filter_by_substring({}, 'a')\n-- {}\n-- >>> filter_by_substring({'abc', 'bacd',\
  \ 'cde', 'array'}, 'a')\n-- {'abc', 'bacd', 'array'}\nlocal function filter_by_substring(strings,\
  \ substring)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = filter_by_substring\n\
  \    lu.assertEquals(candidate({}, 'john'), {})\n    lu.assertEquals(candidate({'xxx',\
  \ 'asd', 'xxy', 'john doe', 'xxxAAA', 'xxx'}, 'xxx'), {'xxx', 'xxxAAA', 'xxx'})\n\
  \    lu.assertEquals(candidate({'xxx', 'asd', 'aaaxxy', 'john doe', 'xxxAAA', 'xxx'},\
  \ 'xx'), {'xxx', 'aaaxxy', 'xxxAAA', 'xxx'})\n    lu.assertEquals(candidate({'grunt',\
  \ 'trumpet', 'prune', 'gruesome'}, 'run'), {'grunt', 'prune'})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = {}\n    for _, s in ipairs(strings) do\n       \
    \ if s:find(substring) then\n            table.insert(result, s)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if s:find(substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if str:find(substring) then\n        \
    \    table.insert(result, str)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if string.find(s, substring) then\n       \
    \     table.insert(result, s)\n        end\n    end\n    return result\nend",
  "  local result = {}\n  for _, str in ipairs(strings) do\n    if str:find(substring)\
    \ then\n      table.insert(result, str)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ v in ipairs(strings) do\n        if v:find(substring) then\n            table.insert(result,\
    \ v)\n        end\n    end\n    return result\nend", "  local result = {}\n  for\
    \ _, str in ipairs(strings) do\n    if str:find(substring) then\n      table.insert(result,\
    \ str)\n    end\n  end\n  return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "  local result = {}\n  for\
    \ _, s in ipairs(strings) do\n    if string.find(s, substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "  local result = {}\n  for _, s\
    \ in ipairs(strings) do\n    if string.find(s, substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if string.find(s, substring) then\n\
    \            table.insert(result, s)\n        end\n    end\n    return result\n\
    end", "  local result = {}\n  for _, s in ipairs(strings) do\n    if string.find(s,\
    \ substring) then\n      table.insert(result, s)\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, s in ipairs(strings) do\n    if string.find(s,\
    \ substring) then\n      table.insert(result, s)\n    end\n  end\n  return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if string.find(str, substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "  local result = {}\n\
    \  for _, s in ipairs(strings) do\n    if s:find(substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "  local res = {}\n  for _, str in\
    \ ipairs(strings) do\n    if string.find(str, substring) then\n      table.insert(res,\
    \ str)\n    end\n  end\n  return res\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ string.find(s, substring) then\n      table.insert(result, s)\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n\
    \    if vim.startswith(s, substring) then\n      table.insert(result, s)\n   \
    \ end\n  end\n  return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if s:find(substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if string.find(s, substring) then\n    \
    \        table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if string.find(s, substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, str in ipairs(strings) do\n        if string.find(str, substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local res = {}\n    for _,\
    \ s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(res,\
    \ s)\n        end\n    end\n    return res\nend", "  local result = {}\n  for\
    \ _, s in ipairs(strings) do\n    if string.find(s, substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "    local result = {}\n    for _,\
    \ str in ipairs(strings) do\n        if str:find(substring) then\n           \
    \ table.insert(result, str)\n        end\n    end\n    return result\nend", " \
    \   local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if string.find(s, substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "  local result = {}\n  for _,\
    \ s in ipairs(strings) do\n    if s:find(substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "  local result = {}\n  for _, s\
    \ in ipairs(strings) do\n    if string.find(s, substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if string.find(s, substring) then\n       \
    \     table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ string.find(s, substring) then\n      table.insert(result, s)\n    end\n  end\n\
    \  return result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n\
    \    if string.find(s, substring) then\n      table.insert(result, s)\n    end\n\
    \  end\n  return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "  local filtered = {}\n  for\
    \ _, s in ipairs(strings) do\n    if string.find(s, substring) then\n      table.insert(filtered,\
    \ s)\n    end\n  end\n  return filtered\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if str:find(substring) then\n        \
    \    table.insert(result, str)\n        end\n    end\n    return result\nend",
  "  local result = {}\n  for _, s in ipairs(strings) do\n    if s:find(substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if string.find(s, substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if string.find(s, substring) then\n\
    \            table.insert(result, s)\n        end\n    end\n    return result\n\
    end", "  local result = {}\n  for _, s in ipairs(strings) do\n    if s:find(substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for _, str in ipairs(strings) do\n    if string.find(str,\
    \ substring) then\n      table.insert(result, str)\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, str in ipairs(strings) do\n    if str:find(substring)\
    \ then\n      table.insert(result, str)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local filtered = {}\n    for _,\
    \ string in ipairs(strings) do\n        if string:find(substring) then\n     \
    \       table.insert(filtered, string)\n        end\n    end\n    return filtered\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ str:find(substring) then\n            table.insert(result, str)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, str in ipairs(strings) do\n        if str:find(substring) then\n \
    \           table.insert(result, str)\n        end\n    end\n    return result\n\
    end", "  local result = {}\n  for _, s in ipairs(strings) do\n    if string.find(s,\
    \ substring) then\n      table.insert(result, s)\n    end\n  end\n  return result\n\
    end", "  local result = {}\n  for _, s in ipairs(strings) do\n    if s:find(substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "  local result = {}\n  for _, str\
    \ in ipairs(strings) do\n    if string.find(str, substring) then\n      table.insert(result,\
    \ str)\n    end\n  end\n  return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "  local result = {}\n  for\
    \ _, s in ipairs(strings) do\n    if s:find(substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if string.find(s, substring) then\n       \
    \     table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if string.find(s, substring) then\n       \
    \     table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, str in ipairs(strings) do\n   \
    \ if str:find(substring) then\n      table.insert(result, str)\n    end\n  end\n\
    \  return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if string.find(str, substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, str in ipairs(strings) do\n        if str:find(substring) then\n \
    \           table.insert(result, str)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if s:find(substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if string.find(str, substring) then\n\
    \            table.insert(result, str)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ string.find(s, substring) then\n      table.insert(result, s)\n    end\n  end\n\
    \  return result\nend", "    local result = {}\n    for _, string in ipairs(strings)\
    \ do\n        if string:find(substring) then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "    local result =\
    \ {}\n    for _, str in ipairs(strings) do\n        if string.find(str, substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if string.find(s, substring) then\n    \
    \        table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "  local result = {}\n  for _, s in ipairs(strings)\
    \ do\n    if s:find(substring) then\n      table.insert(result, s)\n    end\n\
    \  end\n  return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if string.find(s, substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "  local result = {}\n  for\
    \ _, str in ipairs(strings) do\n    if str:find(substring) then\n      table.insert(result,\
    \ str)\n    end\n  end\n  return result\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if str:find(substring) then\n        \
    \    table.insert(result, str)\n        end\n    end\n    return result\nend",
  "  local result = {}\n  for _, str in ipairs(strings) do\n    if str:find(substring)\
    \ then\n      table.insert(result, str)\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for _, s in ipairs(strings) do\n    if s:find(substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if string.find(str, substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "  local filtered = {}\n  for _, s in ipairs(strings)\
    \ do\n    if string.find(s, substring) then\n      table.insert(filtered, s)\n\
    \    end\n  end\n  return filtered\nend", "    local result = {}\n    for _, s\
    \ in ipairs(strings) do\n        if string.find(s, substring) then\n         \
    \   table.insert(result, s)\n        end\n    end\n    return result\nend", " \
    \   local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if string.find(str, substring) then\n\
    \            table.insert(result, str)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if s:find(substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "  local result = {}\n  for\
    \ _, s in ipairs(strings) do\n    if string.find(s, substring) then\n      table.insert(result,\
    \ s)\n    end\n  end\n  return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if string.find(s, substring) then\n       \
    \     table.insert(result, s)\n        end\n    end\n    return result\nend",
  "  local result = {}\n  for _, s in ipairs(strings) do\n    if string.find(s, substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if string.find(s, substring) then\n       \
    \     table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if s:find(substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if str:find(substring) then\n        \
    \    table.insert(result, str)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if string.find(s, substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, str in ipairs(strings) do\n        if str:find(substring) then\n        \
    \    table.insert(result, str)\n        end\n    end\n    return result\nend",
  "  local result = {}\n  for _, s in ipairs(strings) do\n    if string.find(s, substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ str in ipairs(strings) do\n        if str:find(substring) then\n           \
    \ table.insert(result, str)\n        end\n    end\n    return result\nend", " \
    \ local result = {}\n  for _, s in ipairs(strings) do\n    if string.find(s, substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ s:find(substring) then\n      table.insert(result, s)\n    end\n  end\n  return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "  local result = {}\n  for _, str\
    \ in ipairs(strings) do\n    if string.find(str, substring) then\n      table.insert(result,\
    \ str)\n    end\n  end\n  return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, v in ipairs(strings) do\n        if string.find(v,\
    \ substring) then\n            table.insert(result, v)\n        end\n    end\n\
    \    return result\nend", "  local result = {}\n  for _, str in ipairs(strings)\
    \ do\n    if string.find(str, substring) then\n      table.insert(result, str)\n\
    \    end\n  end\n  return result\nend", "    local result = {}\n    for _, s in\
    \ ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ str in ipairs(strings) do\n        if string.find(str, substring) then\n   \
    \         table.insert(result, str)\n        end\n    end\n    return result\n\
    end", "  local result = {}\n  for _, str in ipairs(strings) do\n    if string.find(str,\
    \ substring) then\n      table.insert(result, str)\n    end\n  end\n  return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, str in ipairs(strings) do\n   \
    \ if str:find(substring) then\n      table.insert(result, str)\n    end\n  end\n\
    \  return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if string.find(s, substring) then\n    \
    \        table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if s:find(substring) then\n            table.insert(result, s)\n     \
    \   end\n    end\n    return result\nend", "    local result = {}\n    for _,\
    \ s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if string.find(s, substring) then\n\
    \            table.insert(result, s)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, s in ipairs(strings) do\n \
    \       if string.find(s, substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if string.find(s, substring) then\n    \
    \        table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, str in ipairs(strings) do\n   \
    \ if str:find(substring) then\n      table.insert(result, str)\n    end\n  end\n\
    \  return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if string.find(str, substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, str in ipairs(strings) do\n        if str:find(substring) then\n \
    \           table.insert(result, str)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if s:find(substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if string.find(str, substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "    local filtered = {}\n\
    \    for _, str in ipairs(strings) do\n        if str:find(substring) then\n \
    \           table.insert(filtered, str)\n        end\n    end\n    return filtered\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ str:find(substring) then\n            table.insert(result, str)\n        end\n\
    \    end\n    return result\nend", "  local result = {}\n  for _, str in ipairs(strings)\
    \ do\n    if str:find(substring) then\n      table.insert(result, str)\n    end\n\
    \  end\n  return result\nend", "  local result = {}\n  for _, string in ipairs(strings)\
    \ do\n    if string:find(substring) then\n      table.insert(result, string)\n\
    \    end\n  end\n  return result\nend", "    local result = {}\n    for _, string\
    \ in ipairs(strings) do\n        if string:find(substring) then\n            table.insert(result,\
    \ string)\n        end\n    end\n    return result\nend", "  local res = {}\n\
    \  for _, s in ipairs(strings) do\n    if string.find(s, substring) then\n   \
    \   table.insert(res, s)\n    end\n  end\n  return res\nend", "    local result\
    \ = {}\n    for _, s in ipairs(strings) do\n        if string.find(s, substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ string.find(s, substring) then\n      table.insert(result, s)\n    end\n  end\n\
    \  return result\nend", "  local filtered = {}\n  for _, str in ipairs(strings)\
    \ do\n    if str:find(substring) then\n      table.insert(filtered, str)\n   \
    \ end\n  end\n  return filtered\nend", "    local result = {}\n    for _, s in\
    \ ipairs(strings) do\n        if string.find(s, substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, str in ipairs(strings) do\n        if str:find(substring) then\n \
    \           table.insert(result, str)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ str:find(substring) then\n            table.insert(result, str)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for _, str in ipairs(strings)\
    \ do\n        if str:find(substring) then\n            table.insert(result, str)\n\
    \        end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if string.find(s, substring) then\n    \
    \        table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if string.find(s,\
    \ substring) then\n            table.insert(result, s)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if string.find(s, substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if string.find(s, substring) then\n\
    \            table.insert(result, s)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ str:find(substring) then\n            table.insert(result, str)\n        end\n\
    \    end\n    return result\nend", "  local result = {}\n  for _, s in ipairs(strings)\
    \ do\n    if string.find(s, substring) then\n      table.insert(result, s)\n \
    \   end\n  end\n  return result\nend", "    local result = {}\n    for _, str\
    \ in ipairs(strings) do\n        if str:find(substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if string.find(s, substring) then\n\
    \            table.insert(result, s)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ s:find(substring) then\n      table.insert(result, s)\n    end\n  end\n  return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ string.find(s, substring) then\n      table.insert(result, s)\n    end\n  end\n\
    \  return result\nend", "    local result = {}\n    for _, v in ipairs(strings)\
    \ do\n        if string.find(v, substring) then\n            table.insert(result,\
    \ v)\n        end\n    end\n    return result\nend", "    local filtered = {}\n\
    \    for _, s in ipairs(strings) do\n        if s:find(substring) then\n     \
    \       table.insert(filtered, s)\n        end\n    end\n    return filtered\n\
    end", "  local result = {}\n  for _, s in ipairs(strings) do\n    if s:find(substring)\
    \ then\n      table.insert(result, s)\n    end\n  end\n  return result\nend",
  "  local result = {}\n  for _, str in ipairs(strings) do\n    if str:find(substring)\
    \ then\n      table.insert(result, str)\n    end\n  end\n  return result\nend",
  "    local result = {}\n    for _, str in ipairs(strings) do\n        if str:find(substring)\
    \ then\n            table.insert(result, str)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    for _, str in ipairs(strings) do\n\
    \        if string.find(str, substring) then\n            table.insert(result,\
    \ str)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if string.find(s, substring) then\n\
    \            table.insert(result, s)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ str:find(substring) then\n            table.insert(result, str)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if string.find(s, substring) then\n            table.insert(result,\
    \ s)\n        end\n    end\n    return result\nend", "    local result = {}\n\
    \    for _, s in ipairs(strings) do\n        if string.find(s, substring) then\n\
    \            table.insert(result, s)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    for _, str in ipairs(strings) do\n        if\
    \ string.find(str, substring) then\n            table.insert(result, str)\n  \
    \      end\n    end\n    return result\nend", "    local result = {}\n    for\
    \ _, s in ipairs(strings) do\n        if string.find(s, substring) then\n    \
    \        table.insert(result, s)\n        end\n    end\n    return result\nend",
  "    local result = {}\n    for _, s in ipairs(strings) do\n        if s:find(substring)\
    \ then\n            table.insert(result, s)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  for _, s in ipairs(strings) do\n    if\
    \ string.find(s, substring) then\n      table.insert(result, s)\n    end\n  end\n\
    \  return result\nend", "    local result = {}\n    for _, s in ipairs(strings)\
    \ do\n        if s:find(substring) then\n            table.insert(result, s)\n\
    \        end\n    end\n    return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

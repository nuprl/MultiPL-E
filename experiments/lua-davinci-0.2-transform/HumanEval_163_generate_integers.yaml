name: HumanEval_163_generate_integers
language: lua
prompt: "-- Given two positive integers a and b, return the even digits between a\n\
  -- and b, in ascending order.\n-- For example:\n-- >>> generate_integers(2, 8)\n\
  -- {2, 4, 6, 8}\n-- >>> generate_integers(8, 2)\n-- {2, 4, 6, 8}\n-- >>> generate_integers(10,\
  \ 14)\n-- {}\nlocal function generate_integers(a, b)\n"
tests: "lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = generate_integers\n\
  \    lu.assertEquals(candidate(2, 10), {2, 4, 6, 8})\n    lu.assertEquals(candidate(10,\
  \ 2), {2, 4, 6, 8})\n    lu.assertEquals(candidate(132, 2), {2, 4, 6, 8})\n    lu.assertEquals(candidate(17,\
  \ 89), {})\nend\n\nos.exit(lu.LuaUnit.run())"
completions: ["    local result = {}\n    local lower = math.min(a, b)\n    local\
    \ upper = math.max(a, b)\n    for i = lower, upper do\n        if i % 2 == 0 then\n\
    \            table.insert(result, i)\n        end\n    end\n    return result\n\
    end", "  local result = {}\n  local min = math.min(a, b)\n  local max = math.max(a,\
    \ b)\n  for i = min, max do\n    if i % 2 == 0 then\n      table.insert(result,\
    \ i)\n    end\n  end\n  return result\nend", "    local result = {}\n    local\
    \ start = math.min(a, b)\n    local stop = math.max(a, b)\n    for i = start,\
    \ stop do\n        if i % 2 == 0 then\n            table.insert(result, i)\n \
    \       end\n    end\n    return result\nend", "    local result = {}\n    local\
    \ min, max = math.min(a, b), math.max(a, b)\n    for i = min, max do\n       \
    \ if i % 2 == 0 then\n            table.insert(result, i)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    local start = math.min(a,\
    \ b)\n    local finish = math.max(a, b)\n    for i = start, finish do\n      \
    \  if i % 2 == 0 then\n            table.insert(result, i)\n        end\n    end\n\
    \    return result\nend", "    local result = {}\n    local min = math.min(a,\
    \ b)\n    local max = math.max(a, b)\n    for i = min, max do\n        if i %\
    \ 2 == 0 then\n            table.insert(result, i)\n        end\n    end\n   \
    \ return result\nend", "    local result = {}\n    local min = math.min(a, b)\n\
    \    local max = math.max(a, b)\n    for i = min, max do\n        if i % 2 ==\
    \ 0 then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    local start = math.min(a, b)\n   \
    \ local finish = math.max(a, b)\n    for i = start, finish do\n        if i %\
    \ 2 == 0 then\n            table.insert(result, i)\n        end\n    end\n   \
    \ return result\nend", "    local result = {}\n    local start = math.min(a, b)\n\
    \    local stop = math.max(a, b)\n    for i = start, stop do\n        if i % 2\
    \ == 0 then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local integers = {}\n    local start = math.min(a, b)\n \
    \   local finish = math.max(a, b)\n    for i = start, finish do\n        if i\
    \ % 2 == 0 then\n            table.insert(integers, i)\n        end\n    end\n\
    \    return integers\nend", "    local result = {}\n    local min = math.min(a,\
    \ b)\n    local max = math.max(a, b)\n    for i = min, max do\n        if i %\
    \ 2 == 0 then\n            table.insert(result, i)\n        end\n    end\n   \
    \ return result\nend", "    local result = {}\n    local min = math.min(a, b)\n\
    \    local max = math.max(a, b)\n    for i = min, max do\n        if i % 2 ==\
    \ 0 then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    local min = math.min(a, b)\n    local\
    \ max = math.max(a, b)\n    for i = min, max do\n        if i % 2 == 0 then\n\
    \            table.insert(result, i)\n        end\n    end\n    return result\n\
    end", "    local result = {}\n    if a > b then\n        a, b = b, a\n    end\n\
    \    for i = a, b do\n        if i % 2 == 0 then\n            table.insert(result,\
    \ i)\n        end\n    end\n    return result\nend", "  local result = {}\n  local\
    \ min = math.min(a, b)\n  local max = math.max(a, b)\n  for i = min, max do\n\
    \    if i % 2 == 0 then\n      table.insert(result, i)\n    end\n  end\n  return\
    \ result\nend", "    local result = {}\n    local start = math.min(a, b)\n   \
    \ local stop = math.max(a, b)\n    for i = start, stop do\n        if i % 2 ==\
    \ 0 then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "    local result = {}\n    local start = math.min(a, b)\n   \
    \ local stop = math.max(a, b)\n    for i = start, stop do\n        if i % 2 ==\
    \ 0 then\n            table.insert(result, i)\n        end\n    end\n    return\
    \ result\nend", "  local result = {}\n  local min, max = math.min(a, b), math.max(a,\
    \ b)\n  for i = min, max do\n    if i % 2 == 0 then\n      table.insert(result,\
    \ i)\n    end\n  end\n  return result\nend", "    local result = {}\n    local\
    \ min = math.min(a, b)\n    local max = math.max(a, b)\n    for i = min, max do\n\
    \        if i % 2 == 0 then\n            table.insert(result, i)\n        end\n\
    \    end\n    return result\nend", "    local result = {}\n    local start = math.min(a,\
    \ b)\n    local stop = math.max(a, b)\n    for i = start, stop do\n        if\
    \ i % 2 == 0 then\n            table.insert(result, i)\n        end\n    end\n\
    \    return result\nend"]
stop_tokens:
- "\nlocal"
- "\nfunction"
- "\n--"
- "\n\n"

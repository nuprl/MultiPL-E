language: ts
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; ++i) {\n    if\
    \ (u.indexOf(l[i]) === -1) u.push(l[i]);\n  }\n  return u;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp1lvw_w2m.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1lvw_w2m.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const s: number[] = [];\n    for (let i = 0; i< l.length; i++) {\n  \
    \      if (s.indexOf(l[i]) < 0) {\n            s.push(l[i]);\n        }\n    }\n\
    \    return s;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp22mx4na8.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp22mx4na8.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((v, i, a) => {\n    return a.indexOf(v) === i\n  })\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpqajb_e24.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqajb_e24.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet a: number[] = [];\n\tlet hash: Map<string, number> = new Map();\n\t\
    for (let n of l) {\n\t\tif (!hash.has(n)) {\n\t\t\ta.push(n);\n\t\t\thash.set(n,\
    \ a.length - 1);\n\t\t}\n\t}\n\treturn a;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx017i22r.ts(6,12): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpx017i22r.ts(6,38): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const s: Set<number> = new Set();\n    l.forEach(n => s.add(n));\n  \
    \  return [...s].sort((a: number, b: number) => a - b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5z8gysx6.ts(5,14): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp5z8gysx6.ts(5,32): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return [...new Set(l)];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgaieprfc.ts(5,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659822213
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let x: number[] = [];\n    l.forEach((a) => {\n        if (x.indexOf(a)\
    \ === -1) x.push(a);\n    });\n    return x;\n}\n</code>\n<|/ a tags=arrays,javascript,sorting\
    \ |>\n<| a dscore=1 tags=arrays,javascript,sorting |>\nTry this one for me\n<code>\n\
    const sortedUnique = arr => {\n    const sortedArr = arr.slice();\n    sortedArr.sort();\n\
    \    return uniqueSort(sortedArr)\n}\n\nconst uniqueSort = (arr) => {\n    const\
    \ result = [];\n    for (let i = 0; i < arr.length; i++) {\n        const elem\
    \ = arr[i];\n        let exist = false;\n        for (let j = 0; j < result.length;\
    \ j++) {\n            if (result[j].indexOf(elem) !== -1) {\n                exist\
    \ = true;\n                break;\n            }\n        }\n        if (!exist)\
    \ {\n            result.push(elem);\n        }\n    }\n    return result;\n}\n\
    \nconsole.log(uniqueSort([5, 2, 5, 5, 5, 5, 3, 9, 0, 123, 123]));\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk5vyu05e.ts(11,2): error TS1110: Type expected.

    ../../../../../tmp/tmpk5vyu05e.ts(11,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpk5vyu05e.ts(12,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpk5vyu05e.ts(12,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpk5vyu05e.ts(13,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpk5vyu05e.ts(13,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpk5vyu05e.ts(13,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpk5vyu05e.ts(13,47): error TS1109: Expression expected.

    ../../../../../tmp/tmpk5vyu05e.ts(14,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpk5vyu05e.ts(14,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmpk5vyu05e.ts(14,14): error TS1005: '';'' expected.

    ../../../../../tmp/tmpk5vyu05e.ts(14,18): error TS1005: ''('' expected.

    ../../../../../tmp/tmpk5vyu05e.ts(16,1): error TS1109: Expression expected.

    '
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const c: Set<number> = new Set()\n    for (let i = 0; i < l.length; i++)\
    \ {\n        if (!c.has(+l[i])) {\n            c.add(+l[i])\n        }\n    }\n\
    \    return Array.from(c.values())\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmjjgs2hy.ts(5,14): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpmjjgs2hy.ts(5,32): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpmjjgs2hy.ts(11,18): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var a = [], l = l.sort(function (a, b) { return a - b; }), i, v;\n  \
    \  for (i = 0; i < l.length; i++) {\n        if (v = (v = l[i])[i ? 'next' : 'prev'])\
    \ if (a === v) {\n            a.push(v);\n        } else break;\n    }\n    return\
    \ a;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp8q7s22l4.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8q7s22l4.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const a: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n \
    \       if (a.indexOf(l[i]) === -1) a.push(l[i]);\n    }\n    return a;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpim2t9hv9.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpim2t9hv9.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = []\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (u.indexOf(l[i]) < 0) {\n      u.push(l[i])\n    }\n  }\n  return u\n}\n</code>\n\
    <|/ a tags=sorting,arrays,javascript |>\n<| c |>\nAgreed! I wanted to do that\
    \ but couldn't. I don't know why. I think that's because I am a newbie at programming.\
    \ Thanks anyway!\n<|/ c |>\n<| c |>\nNo worries, I appreciate you taking the time\
    \ to come up with the working solution.\n<|/ c |>\n<| a dscore=1 |>\nIt can be\
    \ done using array.map()\n\n<code>\nconst arr = [5, 3, 2, 3, 9, 0, 123]\n\nconst\
    \ res = arr.map(el => arr.indexOf(el) !== arr.lastIndexOf(el) ? el : null).filter(el\
    \ => el)\n\nconsole.log(res)</code>\n<|/ a tags=sorting,arrays,javascript |>\n\
    <| c |>\n`.reduce((r, c) => {\n  return r.indexOf(c) > -1 ? r.concat(c) : r;\n\
    }, [])`\n<|/ c |>\n<| a |>\nAnother way to do it :\n\n<code>\nconst input = [5,\
    \ 3, 2, 3, 9, 0, 123];\nconst output = input.filter(x => {\n  const index = input.indexOf(x);\n\
    \  return index !== input.lastIndexOf(x);\n});\nconsole.log(output);</code>\n\n\
    EDIT:\nIt seems that there are some problems with this solution, so I've made\
    \ this new one:\n\n<code>\nconst input = [5, 3, 2, 3, 9, 0, 123];\nconst output\
    \ = input.filter((x, i, arr) => {\n  const index = arr.indexOf(x);\n  return index\
    \ !== arr.lastIndexOf(x);\n});\nconsole.log(output);</code>\n<|/ a dscore=1 tags=sorting,arrays,javascript\
    \ |>\n<| c |>\nThis doesn't work if the array has a unique value, which it does\
    \ in this case.\n<|/ c |>\n<| c |>\nIt works, I've added a second snippet, maybe\
    \ it's an issue with my browser\n<|/ c |>\n<| c |>\nYes, it works with your second\
    \ snippet too, just not with my original one. I don't know why.\n<|/ c |>\n<|\
    \ c |>\nI guess it's because of your browser, I'm using chrome and it works fine\n\
    <|/ c |>\n<| c |>\nYeah I'm using the latest version of Chrome, weird\n<|/ c |>\n\
    <| a tags=sorting,arrays,javascript |>\n<code>\nconst arr = [5, 3, 2, 3, 9, 0,\
    \ 123];\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7rui277l.ts(13,2): error TS1110: Type expected.

    ../../../../../tmp/tmp7rui277l.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp7rui277l.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp7rui277l.ts(14,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp7rui277l.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp7rui277l.ts(15,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp7rui277l.ts(16,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,29): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,33): error TS1005: '')'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,39): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,49): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,51): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,56): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,63): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,69): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,73): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(16,128): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmp7rui277l.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp7rui277l.ts(17,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp7rui277l.ts(18,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp7rui277l.ts(18,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp7rui277l.ts(19,4): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(19,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l.ts(19,26): error TS1005: '';'' expected.

    ../../../../../tmp/tmp7rui277l'
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const set = new Set(l);\n    return [...set];\n}\n</code>\n<|/ a tags=typescript,javascript\
    \ |>\n<| c |>\nThis works, but it only returns unique elements after sorting them,\
    \ not unique elements from the original array. `[2, 1, 3, 3, 5, 6, 6].unique()`\
    \ returns `[2, 3, 6, 6]` - not `[1, 2, 3, 5, 6]`.\n<|/ c |>\n<| c |>\nThanks for\
    \ pointing out. I forgot to add one extra step. I updated the answer\n<|/ c |>\n\
    <| c |>\n`new Set([...l, ...l])` is probably better for performance (as opposed\
    \ to `[...new Set(l)]`) as it avoids a spread operation.\n<|/ c |>\n<| a dscore=4\
    \ |>\nIn case you don't want to use ES6 syntax or don't want to use lodash or\
    \ underscore, you can do the following:\n<code>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp66il0egl.ts(8,2): error TS1110: Type expected.

    ../../../../../tmp/tmp66il0egl.ts(8,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp66il0egl.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp66il0egl.ts(9,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp66il0egl.ts(10,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp66il0egl.ts(10,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp66il0egl.ts(11,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,17): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,40): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,49): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,55): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,63): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,73): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,80): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,89): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,94): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,98): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,107): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(11,114): error TS1003: Identifier expected.

    ../../../../../tmp/tmp66il0egl.ts(11,147): error TS1005: '';'' expected.

    ../../../../../tmp/tmp66il0egl.ts(12,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmp66il0egl.ts(12,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp66il0egl.ts(12,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp66il0egl.ts(13,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp66il0egl.ts(13,7)'
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a = new Set<number>();\n  for (const n of l) {\n    a.add(n);\n \
    \ }\n  return Array.from(a).sort();\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdl3fldfg.ts(5,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpdl3fldfg.ts(9,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet ret: number[] = new Array(l.length);\n\tlet keys = new Uint32Array(l.length);\n\
    \tfor(let i=0,n=l.length; i<n; i++) {\n\t\tlet key = l[i];\n\t\tlet idx = keys[key];\n\
    \t\tif(idx === undefined) {\n\t\t\tidx = keys[key] = i;\n\t\t}\n\t\telse {\n\t\
    \t\tidx = (idx<<1)|(i+1);\n\t\t}\n\t\tret[idx] = key;\n\t}\n\treturn ret;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  5,\n  3,\n  5,\n  2,\n  3,\n  9,\n  <1 empty item>,\n  123\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at\
    \ test (/tmp/tmpoyuz15x2.js:23:12)\n    at Object.<anonymous> (/tmp/tmpoyuz15x2.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 5, 3, 5, 2, 3, 9, <1 empty item>, 123 ],\n  expected: [ 0, 2, 3, 5, 9,\
    \ 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst a: number[] = [];\n\tconst n: number[] = l;\n\tfor (let i = 0; i\
    \ < n.length; i++) {\n\t\tif (a.indexOf(n[i]) < 0) {\n\t\t\ta.push(n[i]);\n\t\t\
    }\n\t}\n\treturn a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpj83xo_w0.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj83xo_w0.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = [];\n  const o: {[k: number]: boolean} = {};\n  for\
    \ (const x of l) {\n    if (x === null) continue;\n    if (o[x] !== true) o[x]\
    \ = true;\n    else {\n      a.push(x);\n      delete o[x];\n    }\n  }\n  return\
    \ a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n\
    \    at test (/tmp/tmp_528k987.js:23:12)\n    at Object.<anonymous> (/tmp/tmp_528k987.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3 ],\n\
    \  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 0
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn l.filter((l, i, a) => a.indexOf(l) === i).sort((a: number, b: number)\
    \ => a - b);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015487
- exit_code: 0
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter(function(elem, pos, self) {\n    return self.indexOf(elem)\
    \ === pos;\n  }).sort(function(a, b) {\n    return a - b;\n  });\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const result: number[] = [];\n    for (let i = 0; i < l.length; i++)\
    \ {\n        if (result.indexOf(l[i]) == -1) result.push(l[i]);\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpc43hhhr7.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc43hhhr7.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [],\n    i,\n    len = l.length;\n  for (i = 0; i <\
    \ len; i++) {\n    if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n    }\n\
    \  }\n  return u;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6zyyg_dj.ts(6,5): error TS1155: ''const'' declarations
    must be initialized.

    ../../../../../tmp/tmp6zyyg_dj.ts(8,8): error TS2588: Cannot assign to ''i'' because
    it is a constant.

    ../../../../../tmp/tmp6zyyg_dj.ts(8,24): error TS2588: Cannot assign to ''i''
    because it is a constant.

    '
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u: number[] = [];\n\n    for (var i = 0, n = l.length; i < n; i++)\
    \ {\n        if (u.indexOf(+l[i]) === -1)\n            u.push(+l[i]);\n    }\n\
    \    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpokurdnnu.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpokurdnnu.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = []\n  for (let i = 0; i < l.length; i++) if (a.indexOf(l[i])\
    \ == -1) a.push(l[i])\n  return a\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_s_a359l.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_s_a359l.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((a,i,a2) => {\n    return i==a2.findIndex(b => a===b);\n\
    \  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpih9_bphq.ts(6,18): error TS2339: Property ''findIndex''
    does not exist on type ''number[]''.

    '
  timestamp: 1660015487
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst a: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst\
    \ val = l[i];\n\t\tif (a.indexOf(val) === -1) {\n\t\t\ta.push(val);\n\t\t}\n\t\
    }\n\treturn a;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp0wsi92fr.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0wsi92fr.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015487
- exit_code: 0
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((x, i, l) => l.indexOf(x) === i).sort((a, b) => a - b).filter(x\
    \ => !isNaN(x));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015489
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  if (l.length === 0) return l;\n  const u: number[] = [];\n  for (let i\
    \ = 0, n = l.length; i < n; ++i) {\n    if (u.indexOf(+l[i]) == -1) u.push(+l[i]);\n\
    \  }\n  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp9v50h00k.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9v50h00k.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015489
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return Array.from(new Set(l));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb_8wl72l.ts(5,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpb_8wl72l.ts(5,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015417
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((e, i, a) => a.indexOf(e) === i);\n}\n</code>\n<|/ a |>\n\
    <| a dscore=1 |>\n<code>\nconst uniqueArr= ([...new Set(arr)] as any[]);\n</code>\n\
    <|/ a tags=javascript,typescript |>\n<| c |>\nThis is an interesting solution;\
    \ but why is it not working for me on Chrome Version 73.0.3683.103 ? https://codesandbox.io/s/epic-sun-jk4uf?fontsize=14\n\
    <|/ c |>\n<| c |>\n`new Set([...new Set([...new Set(arr)])])` would be even better\n\
    <|/ c |>\n<| c |>\n`arr` is an array, so I changed `...new Set([...new Set(arr)])`\
    \ to `...new Set(arr)` and the problem persists.\n<|/ c |>\n<| a dscore=1 |>\n\
    The best way is to use sort and check for duplicates. However, it can be done\
    \ in linear time complexity.\n\n<code>\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_61hu78_.ts(7,2): error TS1110: Type expected.

    ../../../../../tmp/tmp_61hu78_.ts(7,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp_61hu78_.ts(8,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp_61hu78_.ts(8,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp_61hu78_.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp_61hu78_.ts(9,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(9,16): error TS1109: Expression expected.

    ../../../../../tmp/tmp_61hu78_.ts(11,1): error TS1109: Expression expected.

    ../../../../../tmp/tmp_61hu78_.ts(12,2): error TS1110: Type expected.

    ../../../../../tmp/tmp_61hu78_.ts(12,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp_61hu78_.ts(13,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp_61hu78_.ts(13,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp_61hu78_.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp_61hu78_.ts(14,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,12): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,38): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,48): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,52): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,60): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,64): error TS1005: ''('' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,67): error TS1005: '';'' expected.

    ../../../../../tmp/tmp_61hu78_.ts(15,70): error TS1005: '';'' expected.

    ../../../../../tmp/tm'
  timestamp: 1660015489
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let i: number[] = [];\n  for (let j = 0; j < l.length; j++) {\n    if (i\
    \ in l && l[j] !== i) i.push(l[j]);\n  }\n  return i;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpctuldrau.ts(7,9): error TS2360: The left-hand side
    of an ''in'' expression must be of type ''any'', ''string'', ''number'', or ''symbol''.

    ../../../../../tmp/tmpctuldrau.ts(7,19): error TS2367: This condition will always
    return ''true'' since the types ''number'' and ''number[]'' have no overlap.

    '
  timestamp: 1660015489
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn l.filter((v, i, a) => a.indexOf(v) === i);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpun3gp6l3.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpun3gp6l3.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015489
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const ret: number[] = [];\n  for (let i = 0, j = l.length; i < j; i++)\
    \ {\n    if (~ret.indexOf(l[i])) continue;\n    ret.push(l[i]);\n  }\n  return\
    \ ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp2znsa1ik.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2znsa1ik.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const set = new Set<number>();\n  for (let i = 0; i < l.length; i++) {\n\
    \    if (!set.has(l[i])) {\n      set.add(l[i]);\n    }\n  }\n  return Array.from(set);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8mjpobvx.ts(5,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    ../../../../../tmp/tmp8mjpobvx.ts(11,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015489
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const seen = new Set<number>();\n  for (const n of l) {\n    if (seen.has(n))\
    \ {\n      continue;\n    }\n    seen.add(n);\n  }\n  return Array.from(seen);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplrvrjb3a.ts(5,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmplrvrjb3a.ts(12,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015489
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  var u: number[] = [];\n  var a: number[] = [];\n  for (var i = 0; i < l.length;\
    \ i++) {\n    if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n      a.push(l[i]);\n\
    \    }\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmphfanhl0z.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphfanhl0z.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn l.filter((value, index, self) => self.indexOf(value) === index);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp3lnts9k1.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3lnts9k1.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = [];\n  for (const item of l) if (a.indexOf(item) <\
    \ 0) a.push(item);\n  return a;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp43vc6vtu.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp43vc6vtu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015489
- exit_code: 0
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.sort((a: number, b: number) => a - b).filter((value, index, self)\
    \ => self.indexOf(value) === index);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015490
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet s: any[] = [];\n\tfor(let i in l) {\n\t\tfor(let e in l) {\n\t\t\t\
    if(e == i) {\n\t\t\t\tcontinue;\n\t\t\t}\n\t\t\tif(l[e] == l[i]) {\n\t\t\t\tcontinue;\n\
    \t\t\t}\n\t\t\ts.push(l[i]);\n\t\t}\n\t}\n\treturn s;\n}\n</code>\n<|/ a tags=java,algorithm,arrays\
    \ dscore=0 |>\n<| c |>\nThank you for your solution. But, this is my task:\nhttps://imgur.com/a/jtYTcQS\n\
    <|/ c |>\n<| c |>\nUpdated the answer with your requirements\n<|/ c |>\n<| a tags=java,algorithm,arrays\
    \ |>\nAnother approach would be to sort the array and then use 2 pointers to solve\
    \ this problem using a O(nlogn) approach.\n<|/ a dscore=0 |>\n<| a |>\nThis is\
    \ a classic example for the selection algorithm, which can be easily solved using\
    \ recursion.\n<code>\npublic static int[] selection(int[] arr, int k) {\n    if\
    \ (k == 0) {\n        return new int[0];\n    }\n    \n    int[] answer = new\
    \ int[k];\n    answer[0] = 0;\n    answer[k-1] = 0;\n    \n    int i, j;\n   \
    \ for (i = 0; i < k-1; i++) {\n        for (j = 0; j < i; j++) {\n           \
    \ if (arr[j] > arr[i]) {\n                answer[i] = arr[i];\n              \
    \  i++;\n                break;\n            }\n        }\n        answer[i] =\
    \ arr[i];\n    }\n    return answer;\n}\n</code>\n<|/ a dscore=0 tags=java,algorithm,arrays\
    \ |>\n<| a |>\nI did this in python to solve this question. Hope it helps.\n<code>\n\
    def kthLargest(A, k):\n    largest = sorted(A)\n    count = 0\n    idx = 0\n \
    \   for i in range(len(A)):\n        if count == 0:\n            count = 1\n \
    \           idx = i\n        if A[i] == largest[count-1]:\n            count +=\
    \ 1\n        else:\n            count = 0\n    if count < k:\n        raise Exception(\"\
    Sorry! Can't find that!\")\n    else:\n        return A[idx]\n</code>\n<|/ a dscore=0\
    \ tags=java,algorithm,arrays |>\n<| a tags=java,algorithm,arrays |>\n<code>\n\
    public class KthLargestElement {\npublic static void main(String[] args) {\n \
    \   int[] array = {10, 2, 3, 4, 5, 6, 7, 8};\n    System.out.println(kthLargest(array,\
    \ 3));\n}\n\npublic static Integer kthLargest(int[] A, int k) {\n    if (A.length\
    \ <= k) return Integer.valueOf(0);\n    int n = A.length;\n    Integer[] arr =\
    \ new Integer[n];\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqiha4sk_.ts(19,2): error TS1110: Type expected.

    ../../../../../tmp/tmpqiha4sk_.ts(19,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpqiha4sk_.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpqiha4sk_.ts(20,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpqiha4sk_.ts(21,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpqiha4sk_.ts(21,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpqiha4sk_.ts(22,7): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(22,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(22,15): error TS1005: ''('' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(22,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(22,40): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(22,43): error TS1005: '')'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(22,46): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(24,3): error TS1110: Type expected.

    ../../../../../tmp/tmpqiha4sk_.ts(24,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpqiha4sk_.ts(25,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpqiha4sk_.ts(25,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpqiha4sk_.ts(26,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(26,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(26,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(26,25): error TS1005: ''('' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(26,30): error TS1005: '')'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(27,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpqiha4sk_.ts(27,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpqiha4sk_.ts(28,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpqiha4sk_.ts(28,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqiha4sk_.ts(28,34): error TS1109: Expression expected.

    ../../..'
  timestamp: 1660015489
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let r = [] as number[];\n    l.forEach(i => {\n        if (r.indexOf(i)\
    \ < 0) {\n            r.push(i);\n        }\n    });\n    return r;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpui5elp42.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpui5elp42.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const r: string[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (r.indexOf(+l[i]) == -1) {\n      r.push(+l[i]);\n    }\n  }\n  return r;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmpghg1d9kw.ts(7,19): error TS2345: Argument of type\
    \ 'number' is not assignable to parameter of type 'string'.\n../../../../../tmp/tmpghg1d9kw.ts(8,14):\
    \ error TS2345: Argument of type 'number' is not assignable to parameter of type\
    \ 'string'.\n../../../../../tmp/tmpghg1d9kw.ts(11,3): error TS2322: Type 'string[]'\
    \ is not assignable to type 'number[]'.\n  Type 'string' is not assignable to\
    \ type 'number'.\n"
  timestamp: 1660015490
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const o = new Array(l.length)\n  l.sort()\n  for (let i = 0; i < l.length;\
    \ i++) {\n    if (o.indexOf(l[i]) === -1) o[i] = l[i]\n  }\n  return o\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n\
    \  2,\n  3,\n  <2 empty items>,\n  5,\n  <1 empty item>,\n  9\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpi1cl3ton.js:16:12)\n\
    \    at Object.<anonymous> (/tmp/tmpi1cl3ton.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0, 123,\
    \ 2, 3, <2 empty items>, 5, <1 empty item>, 9 ],\n  expected: [ 0, 2, 3, 5, 9,\
    \ 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return sortUnique(uniqueSort(l));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiz_gvytc.ts(5,10): error TS2304: Cannot find name
    ''sortUnique''.

    ../../../../../tmp/tmpiz_gvytc.ts(5,21): error TS2304: Cannot find name ''uniqueSort''.

    '
  timestamp: 1660015490
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  if (l.length === 0) return [];\n\n  const sorted = l.slice().sort((a: number,\
    \ b: number) => a - b);\n\n  let result: number[] = [];\n  for (let i = 0; i <\
    \ sorted.length - 1; i++) {\n    if (sorted[i] === sorted[i + 1]) {\n      result.push(sorted[i\
    \ + 1]);\n      sorted.splice(i, 1);\n    }\n  }\n\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n\
    \    at test (/tmp/tmp3_bevdog.js:20:12)\n    at Object.<anonymous> (/tmp/tmp3_bevdog.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 5 ],\n\
    \  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = [];\n  l.forEach((i) => !a.includes(i) ? a.push(i)\
    \ : null);\n  return a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpawssv458.ts(6,23): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660015489
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const a: number[] = [];\n    let found = false;\n\n    for (let i = 0;\
    \ i < l.length; i++) {\n        let t = l[i];\n        if (!found && t != i) {\n\
    \            a.push(i);\n            found = true;\n        }\n    }\n    return\
    \ a;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at\
    \ test (/tmp/tmp9yzb9_h9.js:19:12)\n    at Object.<anonymous> (/tmp/tmp9yzb9_h9.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let r = [];\n  for (let i = 0; i < l.length; i++) {\n    if (r.indexOf(l[i])\
    \ === -1) r.push(l[i]);\n  }\n  return r;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpm0l5xhv3.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm0l5xhv3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return Array.from(new Set(l)).sort((a, b) => a - b).filter(n => !Number.isNaN(n));\n\
    }\n</code>\n<|/ a dscore=1 tags=sorting,arrays,javascript,algorithm |>\n<| c |>\n\
    The above method worked for me. Many thanks\n<|/ c |>\n<| a |>\nHere is an example\
    \ of how to do it using lodash/underscore and sortBy\n\n<code>\nconst items =\
    \ [\n  { \"name\": \"A\" },\n  { \"name\": \"B\" },\n  { \"name\": \"C\" },\n\
    \  { \"name\": \"D\" },\n  { \"name\": \"E\" }\n];\n\nconst unique = _.sortBy(_.uniq(items,\
    \ 'name'), 'name');\n\nconsole.log(unique);</code>\n<code>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/lodash.js/4.17.20/lodash.min.js\"\
    ></script>\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/sort-by/1.2.2/sort-by.js\"\
    ></script></code>\n<|/ a dscore=1 tags=sorting,arrays,javascript,algorithm |>\n\
    <| a tags=sorting,arrays,javascript,algorithm |>\n<code>\nconst sorting = ([...values],\
    \ order = 'ascending') =>\n  values.reduce((acc, [k, v]) => {\n    acc[k] = v;\n\
    \    return acc;\n  }, {});\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6gixi2ic.ts(7,2): error TS1110: Type expected.

    ../../../../../tmp/tmp6gixi2ic.ts(7,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp6gixi2ic.ts(8,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp6gixi2ic.ts(8,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp6gixi2ic.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp6gixi2ic.ts(9,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp6gixi2ic.ts(10,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(10,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(10,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(10,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(10,29): error TS1005: ''('' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(10,38): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(11,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp6gixi2ic.ts(11,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp6gixi2ic.ts(12,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp6gixi2ic.ts(12,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,9): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,12): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,23): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,27): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,30): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,36): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,42): error TS1005: '')'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,60): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(13,64): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6gixi2ic.ts(16,1): error TS1109'
  timestamp: 1660015490
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let s: number[] = [];\n\n    for (let i = 0; i < l.length; i++) {\n \
    \       if (s.indexOf(l[i]) < 0) {\n            s.push(l[i]);\n        }\n   \
    \ }\n\n    return s;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpr614wuau.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr614wuau.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015490
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const result: number[] = [];\n  const seen: Map<number, boolean> = new\
    \ Map();\n  for (let i = 0; i < l.length; i++) {\n    const v = l[i];\n    if\
    \ (seen.has(v)) {\n      continue;\n    }\n    result.push(v);\n    seen.set(v,\
    \ true);\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9pbczi9a.ts(6,15): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp9pbczi9a.ts(6,42): error TS2583: Cannot find name ''Map''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015491
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u = [];\n  l.forEach((x: number) => {\n    if (u.indexOf(x) == -1)\
    \ {\n      u.push(x);\n    }\n  });\n  return u;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpp_eegczi.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpp_eegczi.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let m: number[] = [], i: number;\n  for (i = 0; i < l.length; i++) {\n\
    \    if (m.indexOf(+l[i]) === -1) m.push(+l[i]);\n  }\n  return m;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpndsc6vhj.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpndsc6vhj.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let result: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n  \
    \  if (result.indexOf(l[i]) === -1) {\n      result.push(l[i]);\n    }\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmprdhekpxj.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprdhekpxj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn [...new Set(l)];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcng2wvg0.ts(5,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const i: number[] = [];\n    for (let j = 0; j < l.length; j++) {\n \
    \       if (i.indexOf(l[j]) === -1) {\n            i.push(l[j]);\n        }\n\
    \    }\n    return i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmplwrvcwf4.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplwrvcwf4.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let ns: number[] = [];\n  let i: number = 0;\n  for (let j = 0; j < l.length;\
    \ j++) {\n    if (ns[i] == l[j]) {\n      continue;\n    } else {\n      ns[i]\
    \ = l[j];\n    }\n    i++;\n  }\n  return ns.sort();\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n\
    \  2,\n  3,\n  3,\n  3,\n  5,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n\
    \  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpcavckilo.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpcavckilo.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 123, 2, 3, 3,\n    3,   5, 5, 9\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.filter((a: any) => !l.some(b => a === b));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmps9yjp45o.js:10:12)\n\
    \    at Object.<anonymous> (/tmp/tmps9yjp45o.js:12:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter(function (_, i, a) {\n    return i === a.indexOf(l);\n\
    \  });\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp482vkdvr.ts(6,28): error TS2345: Argument of type
    ''number[]'' is not assignable to parameter of type ''number''.

    '
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((v, i, a) => (a.indexOf(v) === i) ? false : true)\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  3\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n\
    ]\n    at test (/tmp/tmp6xnwa02y.js:10:12)\n    at Object.<anonymous> (/tmp/tmp6xnwa02y.js:12:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 3\
    \ ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const u: number[] = [];\n    const uLen: number = l.length;\n    const\
    \ i: number;\n    let j: number;\n    for (i = 0; i < uLen; i++) {\n        const\
    \ el = l[i];\n        for (j = i + 1; j < uLen; j++) {\n            if (el ===\
    \ l[j]) {\n                l.splice(i, 1);\n                uLen--;\n        \
    \        break;\n            }\n        }\n    }\n    return l;\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkj7ldfkn.ts(7,11): error TS1155: ''const'' declarations
    must be initialized.

    ../../../../../tmp/tmpkj7ldfkn.ts(9,10): error TS2588: Cannot assign to ''i''
    because it is a constant.

    ../../../../../tmp/tmpkj7ldfkn.ts(9,27): error TS2588: Cannot assign to ''i''
    because it is a constant.

    ../../../../../tmp/tmpkj7ldfkn.ts(14,17): error TS2588: Cannot assign to ''uLen''
    because it is a constant.

    '
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let set: number[] = new Array(l.length);\n  for (let i = 0; i < l.length;\
    \ i++) {\n    if (!set.includes(l[i])) {\n      set.push(l[i]);\n    }\n  }\n\
    \  return set;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpowjp_4gc.ts(7,14): error TS2339: Property ''includes''
    does not exist on type ''number[]''.

    '
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn l.reduce(function (p, c) {\n\t\treturn p.indexOf(c) === -1 ? p.concat(c)\
    \ : p;\n\t}, []);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpglp33vyc.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpglp33vyc.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const u = [];\n    for (const num of l) {\n        if (u.indexOf(num)\
    \ === -1) {\n            u.push(num);\n        }\n    }\n    return u;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpfd071hll.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfd071hll.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn Array.from(new Set(l));\n}\n\nexport function convertToSnakeCase(name:\
    \ string): string {\n\treturn name.replace(/^(@)/, match => {\n\t\treturn match.replace(/-(.)/g,\
    \ (match, char) => char.toUpperCase());\n\t});\n}\n\nexport function convertToCamelCase(name:\
    \ string): string {\n\treturn name.replace(/^(@)/, match => {\n\t\treturn match.replace(/-(.)/g,\
    \ (match, char) => char.toLowerCase());\n\t});\n}\n\nexport function camelCaseToSnakeCase(camelCase:\
    \ string): string {\n\treturn camelCase.indexOf('-') === 0 ? camelCase.substr(1)\
    \ : camelCase;\n}\n\nexport function toBoolean(value: boolean | undefined | null):\
    \ boolean {\n\treturn !!value;\n}\n\nexport function convertToRoman(value: number):\
    \ number {\n\tlet roman = '';\n\twhile (value > 1000) {\n\t\troman += value %\
    \ 1000 + 'k';\n\t\tvalue = Math.floor(value / 1000);\n\t}\n\twhile (value > 100)\
    \ {\n\t\troman += value % 100 + 'k';\n\t\tvalue = Math.floor(value / 100);\n\t\
    }\n\twhile (value > 10) {\n\t\troman += value % 10 + 'k';\n\t\tvalue = Math.floor(value\
    \ / 10);\n\t}\n\troman += value + 'k';\n\treturn +roman;\n}\n\nexport function\
    \ debounce(func: Function, wait: number, immediate: boolean): Function {\n\tlet\
    \ timeout: NodeJS.Timer | undefined;\n\treturn () => {\n\t\tconst context = this;\n\
    \t\tconst args = arguments;\n\t\tconst later = () => {\n\t\t\ttimeout!.cancel();\n\
    \t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t\
    };\n\t\tconst callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\
    \ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\
    \t};\n}\n\nexport function toggleClass(element: HTMLElement, className: string,\
    \ shouldHaveIt?: boolean) {\n\tif (element.classList) {\n\t\tif (shouldHaveIt)\
    \ {\n\t\t\telement.classList.add(className);\n\t\t} else {\n\t\t\telement.classList.remove(className);\n\
    \t\t}\n\t} else {\n\t\tconst classList = element.className.split(' ');\n\t\tif\
    \ (shouldHaveIt) {\n\t\t\tif (classList.indexOf(className) > -1) {\n\t\t\t\treturn;\n\
    \t\t\t}\n\t\t\tclassList.push(className);\n\t\t} else {\n\t\t\tconst index = classList.indexOf(className);\n\
    \t\t\tif (index > -1) {\n\t\t\t\tclassList.splice(index, 1);\n\t\t\t}\n\t\t}\n\
    \t\telement.className = classList.join(' ');\n\t}\n}\n\nexport function toggle(element:\
    \ HTMLElement\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp58_0zh0e.ts(88,1): error TS1005: '','' expected.

    ../../../../../tmp/tmp58_0zh0e.ts(88,9): error TS1003: Identifier expected.

    '
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn Array.from(new Set(l));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdklxnc7p.ts(5,15): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpdklxnc7p.ts(5,24): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet i: number;\n\tlet j: number;\n\tlet k: number;\n\tlet t: number[];\n\
    \n\ti = j = 0;\n\tt = [];\n\n\tfor (; j < l.length; j++) {\n\t\ti = j;\n\t\tfor\
    \ (k = j + 1; k < l.length; k++) {\n\t\t\tif (l[j] === l[k]) continue;\n\t\t\t\
    if (l[j] < l[k]) {\n\t\t\t\tt[i] = l[j];\n\t\t\t\ti = k;\n\t\t\t}\n\t\t}\n\n\t\
    \tt[i] = l[i];\n\t}\n\n\treturn t;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n\
    [\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp4h6o9puf.js:28:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4h6o9puf.js:30:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst o: number[] = [];\n\tfor (const v of l) {\n\t\tif (o.indexOf(v) <\
    \ 0) o.push(v);\n\t}\n\treturn o;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp0_zeomoc.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0_zeomoc.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn l.reduce((a, b) => !this[a] ? this[a] = true : this[a], []);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjdceor37.ts(5,34): error TS2538: Type ''any[]'' cannot
    be used as an index type.

    ../../../../../tmp/tmpjdceor37.ts(5,44): error TS2538: Type ''any[]'' cannot be
    used as an index type.

    ../../../../../tmp/tmpjdceor37.ts(5,61): error TS2538: Type ''any[]'' cannot be
    used as an index type.

    '
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.reduce((result: number[], item: number) => result.indexOf(item)\
    \ === -1 ? [...result, item] : result,\n        []);\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpmkhlf4vm.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmkhlf4vm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const i: number[] = [];\n    let ins: number[] = [];\n    for (let j\
    \ = 0; j < l.length; j++) {\n        if (ins.indexOf(l[j]) === -1) {\n       \
    \     ins.push(l[j]);\n            i.push(l[j]);\n        }\n    }\n    return\
    \ i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpbl5bwtu3.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbl5bwtu3.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015493
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let r = [];\n    let f = 0;\n    let t = 0;\n    for (let i = 0; i <\
    \ l.length; i++)\n    {\n        if (r[f] === undefined || l[i] !== r[f])\n  \
    \      {\n            r[f] = l[i];\n            f++;\n        }\n    }\n    return\
    \ r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n\
    [\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp5lx6619h.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5lx6619h.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const o = new Map<number, number>();\n  for (let i = 0; i < l.length; i++)\
    \ {\n    if (!o.has(l[i])) {\n      o.set(l[i], i);\n    }\n  }\n  return Array.from(o.values())\
    \ as number[];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpe9_xmmuu.ts(5,17): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpe9_xmmuu.ts(11,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((v, i) => l.indexOf(v) === i);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpldn_lh5b.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpldn_lh5b.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015494
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet u: number[] = [];\n\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst\
    \ index = u.indexOf(l[i]);\n\n\t\tif (index === -1) {\n\t\t\tu.push(l[i]);\n\t\
    \t}\n\t}\n\n\treturn u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpbxmthabb.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbxmthabb.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015494
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let c: number = l.length\n    for (let i=0; i<c; i++) {\n        let\
    \ r: number = l[i]\n        let j: number = i\n        while (j<c) {\n       \
    \     if (l[j] == r) {\n                break\n            }\n            else\
    \ if (l[j] > r) {\n                l[j+1] = l[j]\n                j++\n      \
    \      }\n            else {\n                l[j+1] = r\n                j++\n\
    \            }\n        }\n        l[j+1] = r\n    }\n    return l\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  5,\n\
    \  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5,\n  5\n]\n\nshould loosely deep-equal\n\
    \n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpgeqy18k2.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgeqy18k2.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 5, 5, 5, 5,\n    5, 5, 5, 5, 5\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015494
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    const\
    \ n = l.indexOf(l[i]);\n    if (n < 0) a.push(l[i]);\n  }\n  return a;\n}\n</code>\n\
    <|/ a dscore=1 tags=javascript,ecmascript-6 |>\n<| c |>\nUsing `Math.max` inside\
    \ a `for` loop has a potential of O(n^2) time complexity.\n<|/ c |>\n<| c |>\n\
    That would be true if we were sorting every unique element in the array. However,\
    \ this isn't actually sorting at all; it's the sort of thing that would be O(n^2)\
    \ on a big list. Also, if you're going to write your own sort, you're probably\
    \ going to need to use `Math.max` inside it.\n<|/ c |>\n<| c |>\nHi, I agree.\
    \ I just mentioned that it's worth noting that the complexity of a sort like this\
    \ is actually _O(n*log(n))_ (although that is _O(n)_ because of the sort, which\
    \ is _O(nlogn)_ because of the `Math.max` call).\n<|/ c |>\n<| a tags=javascript,ecmascript-6\
    \ |>\nIf you want a pure JavaScript solution, here's a solution that uses the\
    \ built-in sort().\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgdb81ome.ts(12,2): error TS1110: Type expected.

    ../../../../../tmp/tmpgdb81ome.ts(12,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpgdb81ome.ts(13,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpgdb81ome.ts(13,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpgdb81ome.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpgdb81ome.ts(14,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,38): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,44): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,54): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,57): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,64): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(15,69): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(16,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmpgdb81ome.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpgdb81ome.ts(16,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpgdb81ome.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpgdb81ome.ts(17,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpgdb81ome.ts(18,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(18,12): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(18,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(18,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(18,23): error TS1005: ''('' expected.

    ../../../../../tmp/tmpgdb81ome.ts(18,26): error TS1005: '')'' expected.

    ../../../../../tmp/tmpgdb81ome.ts(18,31'
  timestamp: 1660015494
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const o: number[] = [];\n  for (let i = 0, j = l.length; i < j; i++) {\n\
    \    if (o[i] != l[i]) {\n      o[i] = l[i];\n    }\n  }\n  return o;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n\
    [\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpmv5l5ibn.js:16:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmv5l5ibn.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015494
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const hash: number[] = [];\n  const uniqueArr: number[] = [];\n  l.forEach((num)\
    \ => {\n    const exists = hash.indexOf(num);\n    if (exists < 0) {\n      uniqueArr.push(num);\n\
    \      hash.push(num);\n    }\n  });\n  return uniqueArr;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp2kpc34l2.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2kpc34l2.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return [...new Set(l)];\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgaieprfc.ts(5,18): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1659822213
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (a.indexOf(l[i]) === -1) {\n      a.push(l[i]);\n    }\n  }\n  return a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpz8iobm1z.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz8iobm1z.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  if (l.length > 1) {\n    const a: number[] = l;\n    const results: number[]\
    \ = [];\n    let j = 0;\n\n    for (let i = 0; i < a.length; ++i) {\n      while\
    \ (j < results.length && results[j] < a[i]) {\n        j++;\n      }\n\n     \
    \ results[j] = a[i];\n    }\n\n    results.length = j;\n    return results;\n\
    \  }\n\n  return [];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  3,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n\
    \  123\n]\n    at test (/tmp/tmp48to36zt.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp48to36zt.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 3,\
    \ 0 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660015494
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.reduce((acc, val) => {\n        if (acc.indexOf(val) < 0) {\n\
    \            acc.push(val)\n        }\n\n        return acc\n    }, [])\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp42c2usi_.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp42c2usi_.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    const\
    \ n = l[i];\n    if (a.indexOf(n) < 0) a.push(n);\n  }\n  return a;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpqistd476.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqistd476.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015494
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet i: number, llen: number = l.length;\n\tfor (i = 0, llen = l.length;\
    \ i < llen; i++) {\n\t\tlet value: number = l[i];\n\t\tfor (let j = i + 1; j <\
    \ llen; j++) {\n\t\t\tif (l[j] == value) {\n\t\t\t\tl.splice(j, 1);\n\t\t\t\t\
    llen--;\n\t\t\t\ti--;\n\t\t\t\tllen--;\n\t\t\t}\n\t\t}\n\t}\n\treturn l;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpzbs4jvxl.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzbs4jvxl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const result: number[] = []\n    for (const e of l) {\n        if (result.indexOf(e)\
    \ === -1) result.push(e)\n    }\n    return result\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmptc6b8_l0.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptc6b8_l0.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (u.indexOf(l[i]) < 0) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmppjrx7rcv.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppjrx7rcv.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u: number[] = [];\n    for (var i = l.length; i--;) u.push(l[i]);\n\
    \    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  123,\n  0,\n\
    \  9,\n  3,\n  3,\n  2,\n  5,\n  3,\n  5\n]\n\nshould loosely deep-equal\n\n[\n\
    \  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpu0vw6aqg.js:13:12)\n\
    \    at Object.<anonymous> (/tmp/tmpu0vw6aqg.js:15:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    123,\
    \ 0, 9, 3, 3,\n      2, 5, 3, 5\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n \
    \ operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i])\
    \ < 0) a.push(l[i]);\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpapk9ry6c.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpapk9ry6c.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const a: number[] = [];\n    const o: number[] = [];\n    let n: number\
    \ = l.length;\n    for (let i: number = 0; i < n; i++) {\n        const e: number\
    \ = l[i];\n        if (o.indexOf(e) == -1) {\n            a.push(e);\n       \
    \     o.push(e);\n        }\n    }\n    return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmppmrup1c4.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppmrup1c4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.filter(function(v, i, a) {\n        return a.indexOf(v) ===\
    \ i;\n    }) as number[];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp4x9g18vp.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4x9g18vp.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.filter(function (elem, pos, arr) {\n        return arr.indexOf(elem)\
    \ === pos;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp84b8e_3y.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp84b8e_3y.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const seen = new Set<number>();\n  return l.filter((n) => {\n    if (seen.has(n))\
    \ {\n      return false;\n    }\n    seen.add(n);\n    return true;\n  });\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8kyt3ewi.ts(5,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015495
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return Array.from(new Set(l));\n}\nexports.unique = unique;\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprjh7kifx.ts(5,18): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmprjh7kifx.ts(5,27): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmprjh7kifx.ts(7,1): error TS2304: Cannot find name ''exports''.

    '
  timestamp: 1660015495
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const result = [], seen = new Set<number>();\n    for (let i = 0; i <\
    \ l.length; i++) if (!seen.has(l[i])) {\n        result.push(l[i]);\n        seen.add(l[i]);\n\
    \    }\n    return result.sort((a,b) => (a-b));\n}\n</code>\n<|/ a |>\n<| a tags=algorithm,sorting,javascript,arrays\
    \ |>\nThe question is a bit unclear on whether duplicates are allowed or not.\
    \ However, if duplicates are allowed, you can try this solution using filter and\
    \ sort:\n\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpna_iaev7.ts(12,2): error TS1110: Type expected.

    ../../../../../tmp/tmpna_iaev7.ts(12,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpna_iaev7.ts(13,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpna_iaev7.ts(13,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpna_iaev7.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpna_iaev7.ts(14,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(14,48): error TS1109: Expression expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,14): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,17): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,23): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,31): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,34): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,53): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,57): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,65): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,68): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,82): error TS1109: Expression expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,85): error TS1005: ''('' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,96): error TS1005: '')'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,100): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,113): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,117): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,121): error TS1005: ''{'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,126): error TS1005: '';'' expected.

    ../../../../../tmp/tmpna_iaev7.ts(15,135): error TS1005: '';'' expected.

    ../../'
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const r: [number, number] = [0, -1];\n  let i: number;\n  let j: number;\n\
    \  for (i = 0; i < l.length; i++) {\n    const x = l[i];\n    j = r[0];\n    while\
    \ (j > 0) {\n      if (l[j - 1] === x) {\n        r[1] = j;\n        break;\n\
    \      } else {\n        j--;\n      }\n    }\n    r[0] = x + 1;\n  }\n  return\
    \ r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  124,\n  8\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n\
    \    at test (/tmp/tmph6asz0z4.js:27:12)\n    at Object.<anonymous> (/tmp/tmph6asz0z4.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 124, 8 ],\n\
    \  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015495
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const set = new Set<number>();\n  for (let i = 0; i < l.length; i++) {\n\
    \    set.add(l[i]);\n  }\n  return Array.from(set);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd8pi3u2z.ts(5,19): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    ../../../../../tmp/tmpd8pi3u2z.ts(9,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015495
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let u: number[] = [];\n\n    for (let i = 0; i < l.length; i++) {\n \
    \       if (u.indexOf(l[i]) === -1) {\n            u.push(l[i]);\n        }\n\
    \    }\n\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpdpc__aot.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdpc__aot.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015496
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const u: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n \
    \       if (u.indexOf(l[i]) === -1) {\n            u.push(l[i]);\n        }\n\
    \    }\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpveal05i7.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpveal05i7.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet u: number[] = [],\n\t\tv: number;\n\tfor (i = 0; i < l.length; i++)\
    \ {\n\t\tv = l[i];\n\t\tif (u.indexOf(v) == -1) {\n\t\t\tu.push(v);\n\t\t}\n\t\
    }\n\treturn u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp90ej9m4w.ts(7,7): error TS2304: Cannot find name
    ''i''.

    ../../../../../tmp/tmp90ej9m4w.ts(7,14): error TS2304: Cannot find name ''i''.

    ../../../../../tmp/tmp90ej9m4w.ts(7,28): error TS2304: Cannot find name ''i''.

    ../../../../../tmp/tmp90ej9m4w.ts(8,9): error TS2304: Cannot find name ''i''.

    '
  timestamp: 1660015497
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.reduce((a, x, i) => {\n        if (!a.includes(x)) {\n     \
    \       a.push(x);\n        }\n        return a;\n    }, []);\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxqusai8d.ts(6,16): error TS2339: Property ''includes''
    does not exist on type ''any[]''.

    '
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    if (l.length === 0) return [];\n    let i: number;\n    let ret: number[]\
    \ = [];\n    const obj: { [key: number]: number; } = {};\n\n    for (i = 0; i\
    \ < l.length; i++) {\n        const key = l[i];\n\n        if (!obj[key]) {\n\
    \            ret[i] = key;\n            obj[key] = 1;\n        } else {\n    \
    \        delete obj[key];\n        }\n    }\n\n    return ret;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  <1 empty item>,\n  2,\n  <1 empty item>,\n  3,\n  9,\n  0,\n  123\n]\n\nshould\
    \ loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test\
    \ (/tmp/tmpqutrdoc_.js:25:12)\n    at Object.<anonymous> (/tmp/tmpqutrdoc_.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, <1\
    \ empty item>, 2, <1 empty item>, 3, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9,\
    \ 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst u: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst\
    \ v = l[i];\n\t\tif (u.indexOf(v) < 0) {\n\t\t\tu.push(v);\n\t\t}\n\t}\n\treturn\
    \ u;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpx2t9ksni.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx2t9ksni.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter(function (el, i, a) {\n    return a.indexOf(el) === i;\n\
    \  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp8z86hqvh.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8z86hqvh.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a = l\n        .filter(function(elem, pos, self) {\n          return\
    \ self.indexOf(elem) === pos;\n        })\n        .map(function(elem) {\n   \
    \       return elem\n        })\n  return a;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpuu52r6su.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuu52r6su.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const c: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n \
    \       if (c.indexOf(l[i]) === -1) {\n            c.push(l[i]);\n        }\n\
    \    }\n    return c;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpowl_ug_b.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpowl_ug_b.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter(function(value, i, l) { return l.indexOf(value) === i;\
    \ }).sort(function(a, b) { return b - a });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  123,\n  9,\n\
    \  5,\n  3,\n  2,\n  0\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpccn6dil4.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpccn6dil4.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 123, 9,\
    \ 5, 3, 2, 0 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tvar res = [];\n\tfor (var i = 0, len = l.length; i < len; i++) {\n\t\t\
    if (!res.includes(l[i])) {\n\t\t\tres.push(l[i]);\n\t\t}\n\t}\n\treturn res;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3io88171.ts(7,12): error TS2339: Property ''includes''
    does not exist on type ''any[]''.

    '
  timestamp: 1660015497
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const o = new Map<number, boolean>();\n  l.forEach(o => o.has(o) || (o.set(o,\
    \ true), o.delete(o) && o.size === 1 ? o.values().next().value || undefined :\
    \ undefined))\n  return [...o.keys()];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp43ehmwb0.ts(5,17): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmp43ehmwb0.ts(6,20): error TS2339: Property ''has'' does not
    exist on type ''number''.

    ../../../../../tmp/tmp43ehmwb0.ts(6,33): error TS2339: Property ''set'' does not
    exist on type ''number''.

    ../../../../../tmp/tmp43ehmwb0.ts(6,49): error TS2339: Property ''delete'' does
    not exist on type ''number''.

    ../../../../../tmp/tmp43ehmwb0.ts(6,64): error TS2339: Property ''size'' does
    not exist on type ''number''.

    ../../../../../tmp/tmp43ehmwb0.ts(6,79): error TS2339: Property ''values'' does
    not exist on type ''number''.

    '
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u: number[] = [];\n    var c: number = 0;\n    for (var i = 0, n\
    \ = l.length; i < n; i++) {\n        if (u[c] === l[i]) {\n            continue;\n\
    \        }\n        u[++c] = l[i];\n    }\n    return u;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <1 empty\
    \ item>,\n  5,\n  3,\n  5,\n  2,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_fddy__z.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_fddy__z.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <1 empty\
    \ item>, 5, 3, 5, 2, 3, 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const o: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n \
    \       if (o.indexOf(l[i]) === -1) {\n            o.push(l[i]);\n        }\n\
    \    }\n    return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpm912du8k.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm912du8k.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 0
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let o = {}\n  for (let i = 0; i < l.length; i++) {\n    o[l[i]] = true\n\
    \  }\n  let n = []\n  for (let k in o) {\n    n.push(k)\n  }\n  return n\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const hash: { [key: number]: boolean; } = {};\n  const out: number[] =\
    \ [];\n\n  for (let i = 0; i < l.length; i++) {\n    const value = l[i];\n\n \
    \   if (!hash[value]) {\n      hash[value] = true;\n      out.push(value);\n \
    \   }\n  }\n\n  return out;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpv179reav.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv179reav.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u: number[] = new Array(l.length);\n    var i: number, n: number\
    \ = 0;\n\n    for (i = 0; i < l.length; ++i) {\n        if (l[i] === l[i]) {\n\
    \            n++;\n        } else {\n            u[n] = l[i];\n            n++;\n\
    \        }\n    }\n\n    u.length = n;\n\n    return u;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  <9 empty\
    \ items>\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n\
    \  123\n]\n    at test (/tmp/tmpjc2p8h2p.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjc2p8h2p.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ <9 empty\
    \ items> ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet i: number;\n\tlet j: number;\n\tlet result: number[] = new Array((l.length\
    \ * 2 - 1));\n\tfor (i = 0; i < l.length - 1; i++) {\n\t\tfor (j = i + 1; j <\
    \ l.length; j++) {\n\t\t\tif (l[i] !== l[j]) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    }\n\t\tresult[i] = l[i];\n\t}\n\tfor (j = 1; j < l.length; j++) {\n\t\tif (l[j]\
    \ === result[j - 1]) {\n\t\t\tresult[j] = undefined;\n\t\t}\n\t}\n\treturn result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  5,\n  2,\n  3,\n  undefined,\n  9,\n  0,\n  <9 empty items>\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpwwtfxpw5.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwwtfxpw5.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 5,\
    \ 2, 3, undefined, 9, 0, <9 empty items> ],\n  expected: [ 0, 2, 3, 5, 9, 123\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015497
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const o = new Set(l);\n  return Array.from(o) as number[];\n}\n</code>\n\
    <|/ a tags=arrays,javascript |>\n<| a tags=arrays,javascript |>\nI guess this\
    \ has to do with the way you're constructing the new array. In the code you posted,\
    \ you're doing this:\n<code>\nlet result = [...new Set(arr)];\n</code>\nThis converts\
    \ the array to a Set, which is a unordered collection of unique items. When you\
    \ call Set(), it first checks if the value already exists in the Set. If it does,\
    \ it just returns the value. If it doesn't, it adds the value to the Set. That's\
    \ why you get an array of duplicates. Instead of converting to a Set, you can\
    \ use the spread syntax to convert the array to a regular array, and then use\
    \ Set to get unique values.\n<code>\nlet result = Array.from(new Set(arr));\n\
    </code>\n<|/ a dscore=4 |>\n<| c |>\nWhy not just use `[...new Set(arr)]` ? Just\
    \ curious.\n<|/ c |>\n<| c |>\nGood point,. I think I was trying to be too fancy\
    \ with the spread syntax. Good suggestion, though.\n<|/ c |>\n<| a dscore=3 |>\n\
    The solutions here are really good but just one more option is to use map and\
    \ filter method available in Array\n<code>\nlet arr = [1,2,3,4,5,5,6,7,8];\n\n\
    let unique = arr.filter(function(elem, index, self) {\n  return index == self.indexOf(elem);\n\
    }).map(function(elem) {\n  return elem;\n});\n\nconsole.log(unique); // [1,2,3,4,5,6,7,8]\n\
    </code>\n<|/ a tags=arrays,javascript |>\n<| c |>\nNice solution. I've never seen\
    \ it before. Was looking for something like this but was unable to find it.\n\
    <|/ c |>\n<| c |>\nThis is not very efficient\n<|/ c |>\n<| a tags=arrays,javascript\
    \ |>\nThe issue is with the way you are creating the set. Try changing it to this:\n\
    <code>\nlet result = [...new Set(arr)];\n</code>\n<|/ a dscore=3 |>\n<| c |>\n\
    Thank you! I had tried to use `Array.from` but I got an error that said I needed\
    \ to pass in an array. I'll accept this answer once the timer runs out.\n<|/ c\
    \ |>\n<| a dscore=3 |>\nThis works perfectly fine:\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa9xly0v0.ts(8,2): error TS1110: Type expected.

    ../../../../../tmp/tmpa9xly0v0.ts(8,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpa9xly0v0.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpa9xly0v0.ts(9,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpa9xly0v0.ts(10,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpa9xly0v0.ts(10,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(10,30): error TS1109: Expression expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,14): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,29): error TS1005: ''('' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,33): error TS1005: '')'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,37): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,40): error TS1005: '')'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,100): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,103): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,109): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(11,113): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(13,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(14,2): error TS1110: Type expected.

    ../../../../../tmp/tmpa9xly0v0.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpa9xly0v0.ts(15,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(15,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(15,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(15,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmpa9xly0v0.ts(15,28): error TS1005: '';'' expect'
  timestamp: 1660015497
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const m = {}\n  for (let i = 0, n = l.length; i < n; ++i) m[l[i]] = true\n\
    \  const a: number[] = []\n  for (const i in m) a.push(i)\n  return a\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc58kb17g.ts(8,29): error TS2345: Argument of type
    ''string'' is not assignable to parameter of type ''number''.

    '
  timestamp: 1660015497
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return Array.from(new Set(l)).sort();\n}\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8hsc30fy.ts(5,16): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmp8hsc30fy.ts(5,25): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015497
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp7z8b92zu.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7z8b92zu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015498
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let output: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n  \
    \  if (output[l[i]] === undefined) {\n      output[l[i]] = i;\n    }\n  }\n  return\
    \ output;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  7,\n  <1\
    \ empty item>,\n  3,\n  1,\n  <1 empty item>,\n  0,\n  <3 empty items>,\n  6,\n\
    \  <113 empty items>,\n  8\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n\
    \  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp3thdzcvj.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3thdzcvj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    7,\n\
    \    <1 empty item>,\n    3,\n    1,\n    <1 empty item>,\n    0,\n    <3 empty\
    \ items>,\n    6,\n    <113 empty items>,\n    8\n  ],\n  expected: [ 0, 2, 3,\
    \ 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015498
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  if (l.length <= 1) return l\n  const result = []\n  let hashSet = new Set()\n\
    \  for (let item of l) {\n    if (!hashSet.has(item)) {\n      hashSet.add(item)\n\
    \      result.push(item)\n    }\n  }\n  return result\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi1pkqeoo.ts(7,21): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015499
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst seen = new Set<number>();\n\tconst uniq = [];\n\tl.forEach(d => {\n\
    \t\tif (seen.has(d)) return;\n\t\tseen.add(d);\n\t\tuniq.push(d);\n\t});\n\treturn\
    \ uniq;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6ngl6knm.ts(5,19): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015499
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const i: number[] = [];\n    for (let n = 0; n < l.length; n++) i[l.charCodeAt(n)]\
    \ = n;\n    return i;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqsexoab9.ts(6,44): error TS2339: Property ''charCodeAt''
    does not exist on type ''number[]''.

    '
  timestamp: 1660015499
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    if (l.length <= 1) {\n        return l;\n    }\n    let newArr: number[]\
    \ = [];\n    for (let i = 0; i < l.length; i++) {\n        const j = l.indexOf(l[i]);\n\
    \        if (j !== -1) {\n            newArr.push(l[i]);\n            l.splice(j,\
    \ 1);\n        }\n    }\n    return newArr;\n}\n</code>\n<|/ a dscore=1 |>\n<|\
    \ a |>\nJust in case, this can be done with a single loop:\n<code>\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwmbxje2m.ts(18,2): error TS1110: Type expected.

    ../../../../../tmp/tmpwmbxje2m.ts(18,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpwmbxje2m.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpwmbxje2m.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpwmbxje2m.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpwmbxje2m.ts(20,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,9): error TS1109: Expression expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,13): error TS1128: Declaration or statement
    expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,27): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,32): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,37): error TS1005: ''('' expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,39): error TS1005: '')'' expected.

    ../../../../../tmp/tmpwmbxje2m.ts(21,46): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwmbxje2m.ts(23,9): error TS1005: '';'' expected.

    '
  timestamp: 1660015499
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let result: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n  \
    \  if (result.indexOf(l[i]) === -1) {\n      result.push(l[i]);\n    }\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmprdhekpxj.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprdhekpxj.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015492
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  var a = []\n  for (var i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i])\
    \ == -1) {\n      a.push(l[i])\n    }\n  }\n  return a\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpgsd8e5o6.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgsd8e5o6.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn Array.from(new Set(l)).sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqfljil6g.ts(5,15): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpqfljil6g.ts(5,24): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015499
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const o = new Set<number>();\n    l.forEach(x => {\n        if (!o.has(x))\
    \ {\n            o.add(x);\n        }\n    });\n    return [...o];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxn70lfua.ts(5,19): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015499
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn l.filter((v, i, a) => a.indexOf(v) === i);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpun3gp6l3.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpun3gp6l3.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015489
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (a.indexOf(l[i]) < 0) a.push(l[i]);\n  }\n  return a;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_u098wlc.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_u098wlc.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let a: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n   \
    \     if (a.indexOf(l[i]) === -1) a.push(l[i]);\n    }\n    return a;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpftazn5o2.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpftazn5o2.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  var o: number[] = [];\n  for (var i = 0; i < l.length; i++) {\n    if (o.indexOf(l[i])\
    \ == -1) o.push(l[i]);\n  }\n  return o;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpx1sk6um3.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx1sk6um3.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: -1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst a: number[] = l.concat();\n\tlet i = 0;\n\tconst result: number[]\
    \ = [];\n\twhile (i < a.length) {\n\t\tlet j = 0;\n\t\tlet k: number;\n\t\twhile\
    \ (a[j] === a[j + 1]) {\n\t\t\tj++;\n\t\t\tif (j > i) {\n\t\t\t\tk = a[j];\n\t\
    \t\t\tresult.push(k);\n\t\t\t\ta.splice(j, 1);\n\t\t\t}\n\t\t}\n\t}\n\treturn\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660015515
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a = new Set()\n  for (const i of l) {\n    if (!a.has(i)) {\n   \
    \   a.add(i)\n    }\n  }\n  return Array.from(a)\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy9owm64i.ts(5,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpy9owm64i.ts(11,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const c: number[] = [];\n    let a: number = l[0];\n    for (let i =\
    \ 1; i < l.length; i++) {\n        a = l[i];\n        if (c.indexOf(a) !== -1)\
    \ {\n            continue;\n        }\n        c.push(a);\n    }\n    return c;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  5,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpo7k8cnjx.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo7k8cnjx.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 5, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const a = [],\n        m = [],\n        p = [];\n    for (let i = 0;\
    \ i < l.length; i++) {\n        if (m.indexOf(l[i]) === -1) {\n            m.push(l[i]);\n\
    \            a.push(l[i]);\n            p.push(1);\n        } else {\n       \
    \     p[p[l[i]]++] = i;\n        }\n    }\n    return a.concat(p);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123,\n  1,\n  1,\n  <1 empty item>,\n  NaN,\n  <1 empty item>,\n\
    \  NaN,\n  1,\n  1,\n  1,\n  1\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n\
    \  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpndbpfxp6.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpndbpfxp6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\n\
    \    3,\n    2,\n    9,\n    0,\n    123,\n    1,\n    1,\n    <1 empty item>,\n\
    \    NaN,\n    <1 empty item>,\n    NaN,\n    1,\n    1,\n    1,\n    1\n  ],\n\
    \  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.filter((e, i, a) => a.indexOf(e) === i);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp210l9g9h.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp210l9g9h.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const u = {}\n    let result: number[] = []\n\n    l.forEach((e: number)\
    \ => {\n        (u[e] || (u[e] = [])).push(e)\n    })\n\n    for (let k of Object.values(u))\
    \ {\n        if (k.length > 1) result = result.concat(k)\n    }\n\n    return\
    \ result\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbg2ovtvf.ts(12,26): error TS2339: Property ''values''
    does not exist on type ''ObjectConstructor''.

    '
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; ++i) {\n    if\
    \ (u.indexOf(+l[i]) === -1) {\n      u.push(+l[i]);\n    }\n  }\n  return u;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpem2r5mxu.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpem2r5mxu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter(function(elem, index, arr) {\n    return index === arr.indexOf(elem);\n\
    \  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpxhze93hz.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxhze93hz.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn Array.from(new Set(l)).sort((a: number, b: number) => {\n\t\treturn\
    \ a - b;\n\t});\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpa4rep3fn.ts(5,15): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpa4rep3fn.ts(5,24): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let res: number[] = [];\n  for (var i = 0; i < l.length; i++) {\n    if\
    \ (res.indexOf(l[i]) < 0) res.push(l[i]);\n  }\n  return res;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp70m4qvrn.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp70m4qvrn.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015500
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst a: number[] = [];\n\tconst o: number[] = [];\n\tfor (let i = 0; i\
    \ < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (o.indexOf(v) < 0) {\n\t\t\t\
    o.push(v);\n\t\t\ta.push(v);\n\t\t}\n\t}\n\treturn a;\n}\n\nexport function removeDuplicates(l:\
    \ number[]): number[] {\n\tconst a: number[] = [];\n\tlet j: number = 0;\n\tfor\
    \ (let i = 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (a.indexOf(v)\
    \ < 0) {\n\t\t\tj++;\n\t\t\ta.push(v);\n\t\t}\n\t}\n\tif (j === a.length) return\
    \ a;\n\telse if (j > a.length) throw new Error(`duplicate-removed: duplicate at\
    \ index ${j}`);\n\telse throw new Error(`duplicate-removed: duplicate at index\
    \ ${j}`);\n}\n\nexport function unique2(l: number[]): number[] {\n\tconst a: number[]\
    \ = [];\n\tconst o: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\
    \tconst v = l[i];\n\t\tif (o.indexOf(v) < 0) {\n\t\t\to.push(v);\n\t\t\ta.push(v);\n\
    \t\t}\n\t}\n\treturn a;\n}\n\nexport function removeDuplicates2(l: number[]):\
    \ number[] {\n\tconst a: number[] = [];\n\tlet j: number = 0;\n\tfor (let i =\
    \ 0; i < l.length; i++) {\n\t\tconst v = l[i];\n\t\tif (a.indexOf(v) < 0) {\n\t\
    \t\tj++;\n\t\t\ta.push(v);\n\t\t}\n\t}\n\tif (j === a.length) return a;\n\telse\
    \ if (j > a.length) throw new Error(`duplicate-removed: duplicate at index ${j}`);\n\
    \telse throw new Error(`duplicate-removed: duplicate at index ${j}`);\n}\n\nexport\
    \ function unique3(l: number[]): number[] {\n\tconst a: number[] = [];\n\tconst\
    \ o: number[] = [];\n\tlet found: number[] = [];\n\tfor (let i = 0; i < l.length;\
    \ i++) {\n\t\tconst v = l[i];\n\t\tif (o.indexOf(v) < 0) {\n\t\t\to.push(v);\n\
    \t\t\ta.push(v);\n\t\t\tfound.push(v);\n\t\t}\n\t}\n\tif (found.length === a.length)\
    \ return a;\n\telse if (found.length > a.length) throw new Error(`duplicate-removed:\
    \ duplicate at index ${found.length}`);\n\telse throw new Error(`duplicate-removed:\
    \ duplicate at index ${found.length}`);\n}\n\nexport function removeDuplicates3(l:\
    \ number[]): number[] {\n\tconst a: number[] = [];\n\tlet j: number = 0;\n\tlet\
    \ found: number[] = [];\n\tfor (let \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp30rzo49h.ts(82,9): error TS1005: '','' expected.

    ../../../../../tmp/tmp30rzo49h.ts(91,8): error TS1005: ''}'' expected.

    '
  timestamp: 1660015500
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet o = new Map<number, boolean>();\n\tfor (let i = 0; i < l.length; i++)\
    \ {\n\t\tlet k = l[i];\n\t\tif (o.has(k)) continue;\n\t\to.set(k, true);\n\t\t\
    let j = i;\n\t\twhile (j < l.length && l[j] === k) j++;\n\t\tlet tmp = j;\n\t\t\
    while (j--) {\n\t\t\tif (l[j] === k) break;\n\t\t\ttmp = o.get(l[j]) || tmp;\n\
    \t\t}\n\t\to.set(k, false);\n\t\tl[tmp] = k;\n\t}\n\tlet ret = [];\n\tfor (let\
    \ i = 0; i < l.length; i++) {\n\t\tif (!o.has(l[i])) ret.push(l[i]);\n\t}\n\t\
    return ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp4aqflg5.ts(5,14): error TS2583: Cannot find name
    ''Map''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015500
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = []\n  const o: number = l.length\n  let j: number =\
    \ 0\n  let k = 0\n  for (let i: number = 1; i < o; i++) {\n    if (l[i] !== l[k])\
    \ {\n      u.push(l[j])\n      j++\n    }\n    k++\n  }\n  return u\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  5,\n  2,\n  3,\n  3,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n\
    \  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmp94joy5mz.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp94joy5mz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 3, 5, 2,\n    3, 3, 9\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015501
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const a: number[] = [];\n  for (const i in l) {\n    if (a.indexOf(l[i])\
    \ === -1) {\n      a.push(l[i]);\n    }\n  }\n  return a;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_6507x3a.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_6507x3a.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015501
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((v, i) => l.indexOf(v) === i);\n}\n</code>\n<|/ a dscore=2\
    \ |>\n<| a |>\nUse an object to track duplicates:\n\n<code>\nconst a = [1, 2,\
    \ 2, 3, 4, 4, 4, 5, 5, 6, 6];\n\nconst set = {};\n\na.filter(v => !set[v]).forEach((v)\
    \ => set[v] = true);\n\nconsole.log(JSON.stringify(a));</code>\n<|/ a tags=arrays,javascript,sorting\
    \ dscore=1 |>\n<| a dscore=1 |>\nYou could use the unique function from lodash\
    \ library to remove duplicates before sorting:\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprx_pwosw.ts(7,2): error TS1110: Type expected.

    ../../../../../tmp/tmprx_pwosw.ts(7,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprx_pwosw.ts(8,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprx_pwosw.ts(8,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprx_pwosw.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprx_pwosw.ts(9,7): error TS1109: Expression expected.

    ../../../../../tmp/tmprx_pwosw.ts(10,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(10,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(10,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(10,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(10,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(13,1): error TS1109: Expression expected.

    ../../../../../tmp/tmprx_pwosw.ts(19,33): error TS1110: Type expected.

    ../../../../../tmp/tmprx_pwosw.ts(19,34): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprx_pwosw.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprx_pwosw.ts(20,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprx_pwosw.ts(21,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprx_pwosw.ts(21,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(21,16): error TS1109: Expression expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,26): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,40): error TS1005: ''('' expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,47): error TS1005: '';'' expected.

    ../../../../../tmp/tmprx_pwosw.ts(22,55): error TS1005: '';'' expected.

    ../../../../../tmp/'
  timestamp: 1660015501
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (u.indexOf(l[i]) < 0) u.push(l[i]);\n  }\n  return u;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmptq5l_zxg.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptq5l_zxg.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015501
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter(function (elem, pos) {\n    return l.indexOf(elem) == pos;\n\
    \  });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpt96e1ixf.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt96e1ixf.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const ns: number[] = [];\n  const vals: number[] = [];\n  let v = ns;\n\
    \  let w = vals;\n  l.sort((a, b) => {\n    return a - b;\n  });\n  while (w.length\
    \ !== 0) {\n    const e = w.pop();\n    if (vals.indexOf(e) === -1 && ns.length\
    \ !== 0) {\n      v = v.concat(ns);\n      w = w.concat(vals);\n    }\n    if\
    \ (ns.length === 0 && vals.length === 0) {\n      return v;\n    }\n    v.push(e);\n\
    \    vals.push(e);\n  }\n  return v;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpjlt0cjpa.js:29:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjlt0cjpa.js:31:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    if (l.length <= 1) {\n        return l;\n    }\n\n    const sorted =\
    \ l.slice();\n    sorted.sort();\n\n    let i = 1;\n    for (; i < sorted.length;\
    \ ++i) {\n        if (sorted[i] !== sorted[i - 1]) {\n            break;\n   \
    \     }\n    }\n\n    return sorted.slice(0, i);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at\
    \ test (/tmp/tmp3cur0qfv.js:21:12)\n    at Object.<anonymous> (/tmp/tmp3cur0qfv.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u: number[] = [],\n        a: number[] = [],\n        i: number;\n\
    \    for (i = 0; i < l.length; ++i) {\n        if (l[i] !== l[i + 1]) {\n    \
    \        a.push(l[i]);\n        }\n    }\n    a = a.sort();\n    for (i = 0; i\
    \ < a.length; ++i) {\n        u.push(a[i]);\n    }\n    return u;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  123,\n\
    \  2,\n  3,\n  3,\n  5,\n  5,\n  9\n]\n\nshould loosely deep-equal\n\n[\n  0,\n\
    \  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpzgou5lhf.js:20:12)\n \
    \   at Object.<anonymous> (/tmp/tmpzgou5lhf.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 123, 2, 3,\n    3,   5, 5, 9\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u = [];\n    var result = [];\n    for(let i = 0; i < l.length; i++)\
    \ {\n        if(u.indexOf(+l[i]) < 0) u.push(+l[i]);\n        result.push(l[i]);\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  5,\n  2,\n  3,\n  3,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n\
    [\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmprcm0q626.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmprcm0q626.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 3, 5,   2, 3,\n    3, 9, 0, 123\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n\
    \  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; ++i) u.push(l.indexOf(l[i]));\n\
    \  return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0,\n  1,\n\
    \  0,\n  3,\n  1,\n  1,\n  6,\n  7,\n  8\n]\n\nshould loosely deep-equal\n\n[\n\
    \  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpp6u_nv2f.js:13:12)\n\
    \    at Object.<anonymous> (/tmp/tmpp6u_nv2f.js:15:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    0,\
    \ 1, 0, 3, 1,\n    1, 6, 7, 8\n  ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015502
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.reduce(function (res: number[], value: number): number[] {\n\
    \        const uniqueValueIndex = res.indexOf(value);\n        if (uniqueValueIndex\
    \ === -1) {\n            return [...res, value];\n        } else {\n         \
    \   return res;\n        }\n    });\n}\n\nexport function hasMultipleValues(arr:\
    \ number[]): boolean {\n    return arr.length > 1 || !arr.some((n: number) =>\
    \ n === 0);\n}\n\nexport function hasAnyValues(arr: number[]): boolean {\n   \
    \ return arr.length > 0 || !arr.some((n: number) => n !== 0);\n}\n\nexport function\
    \ hasAllValues(arr: number[]): boolean {\n    return arr.some((n: number) => n\
    \ === 0);\n}\n\nexport function containsNot(arr: number[]): boolean {\n    return\
    \ arr.some((n: number) => n !== 0);\n}\n\nexport function containsAll(arr: number[]):\
    \ boolean {\n    return arr.length > 0 && arr.some((n: number) => n === 0);\n\
    }\n\nexport function containsAny(arr: number[]): boolean {\n    return arr.length\
    \ > 0 && arr.some((n: number) => n !== 0);\n}\n\nexport function containsNoneOf(arr:\
    \ number[]): boolean {\n    return arr.length > 0 && arr.some((n: number) => n\
    \ === 0);\n}\n\nexport function min<T>(arr: T[]): T | undefined {\n    return\
    \ arr.reduce(function (min: T, n: number): T | undefined {\n        return min\
    \ === undefined ? n : n < min ? n : min;\n    }, undefined);\n}\n\nexport function\
    \ max<T>(arr: T[]): T | undefined {\n    return arr.reduce(function (max: T, n:\
    \ number): T | undefined {\n        return max === undefined ? n : n > max ? n\
    \ : max;\n    }, undefined);\n}\n\nexport function sum<T>(arr: T[]): number {\n\
    \    return arr.reduce((sum: number, n: number) => sum + n, 0);\n}\n\nexport function\
    \ mean<T>(arr: T[]): number {\n    return sum(arr) / arr.length;\n}\n\nexport\
    \ function median<T>(arr: T[]): number {\n    const length = arr.length;\n   \
    \ if (length % 2 === 0) {\n        // Even\n        const half = Math.floor(length\
    \ / 2);\n        let lower = half - 1;\n        let upper = half;\n        if\
    \ (arr[lower] > arr[upper]) {\n            upper = lower + 1;\n        }\n\n \
    \       return Math.round((arr[lower] + arr[upper]) / 2);\n    } else {\n    \
    \    // Odd\n        const half = Math.ceil(length / 2);\n        let lower =\
    \ half - 1;\n        let upper = half;\n        if (arr[lower] > arr[upper]) {\n\
    \            lower = upper;\n        }\n\n        return Math.round((arr[lower]\
    \ + arr[upper]) / 2);\n    }\n}\n\nexport function variance<T>(\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6a2g_yg5.ts(89,9): error TS1003: Identifier expected.

    '
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((item, index) => l.indexOf(item) === index)\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp1uir_9_n.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1uir_9_n.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015502
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const o: number[] = [];\n  const s: Set<number> = new Set();\n  for (const\
    \ i of l) {\n    if (!s.has(i)) {\n      o.push(i);\n      s.add(i);\n    }\n\
    \  }\n  return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplet32cpm.ts(6,12): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmplet32cpm.ts(6,30): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015502
- exit_code: -5
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = new Array(l.length);\n  for (let i = 0; i < u.length;\
    \ ++i) {\n    if (l.indexOf(u[i]) == -1) u.push(i);\n  }\n  return u;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 143384680\n#\n#\n#\n#FailureMessage Object: 0x7ffd6ef96d90\n 1: 0x2b9e632a8727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2b9e63e3d28e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2b9e63777f8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2b9e639098a0  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2b9e63911230  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2b9e63afb7db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2b9e6345a7f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1660015507
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((v, i, a) => (i === a.indexOf(v)) || (i > 0))\n}\n</code>\n\
    <|/ a |>\n<| a tags=sorting,javascript |>\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv0yadqwu.ts(7,2): error TS1110: Type expected.

    ../../../../../tmp/tmpv0yadqwu.ts(7,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpv0yadqwu.ts(8,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpv0yadqwu.ts(8,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpv0yadqwu.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpv0yadqwu.ts(9,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpv0yadqwu.ts(9,31): error TS1109: Expression expected.

    ../../../../../tmp/tmpv0yadqwu.ts(11,9): error TS1005: '';'' expected.

    '
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\treturn l.filter(function(v, i, a) {\n\t\treturn a.indexOf(v) == i;\n\t\
    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpabqhyz63.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpabqhyz63.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015503
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    if (l.length === 0) {\n        return l;\n    }\n    const u = [];\n\
    \    for (let i = 0; i < l.length; i++) {\n        if (u.indexOf(+l[i]) === -1)\
    \ {\n            u.push(+l[i]);\n        }\n    }\n    return u;\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpah0x0z50.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpah0x0z50.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015503
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return Array.from(new Set(l)).sort();\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnpchuj1q.ts(5,16): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmpnpchuj1q.ts(5,25): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015502
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const u: number[] = [];\n    const result: number[] = [];\n    for(let\
    \ i = 0; i < l.length; i++) {\n        if(u.indexOf(l[i]) === -1) {\n        \
    \    u.push(l[i]);\n            result.push(l[i]);\n        }\n    }\n    return\
    \ result;\n}\n</code>\n<|/ a tags=typescript,arrays dscore=5 |>\n<| c |>\nThis\
    \ won't work in general cases. For example, with array `[5, 3, 9, 1, 123]`, your\
    \ function will return `[5, 3, 9, 1, 123]` while `unique([5, 3, 9, 1, 123, 5])`\
    \ will return `[5, 3, 9, 1, 123, 5]`.\n<|/ c |>\n<| c |>\nIt seems to me a much\
    \ better solution is the one presented here: https://stackoverflow.com/a/41390510/839625\n\
    <|/ c |>\n<| a dscore=5 |>\nA more efficient way to do this is to sort and remove\
    \ duplicates. You can remove duplicates using Set data structure:\n<code>\nvar\
    \ numbers = [1, 2, 3, 4, 2, 3, 4, 2];\nvar unique = new Set(numbers);\nconsole.log(Array.from(unique));\
    \ // [1,2,3]\n</code>\n<|/ a tags=typescript,arrays |>\n<| c |>\nThis is probably\
    \ the fastest in terms of performance.\n<|/ c |>\n<| c |>\nThis should be the\
    \ accepted answer. `Set` is fast and efficient.\n<|/ c |>\n<| c |>\nThis should\
    \ be the accepted answer. `Set` is fast and efficient.\n<|/ c |>\n<| a dscore=5\
    \ |>\nA faster way is to run this loop:\n<code>\narray.filter((v, i, a) => a.indexOf(v)\
    \ === i);\n</code>\n<|/ a tags=typescript,arrays |>\n<| c |>\nThis should be the\
    \ best answer.\n<|/ c |>\n<| c |>\nIt's a really bad answer.\n<|/ c |>\n<| c |>\n\
    It should be the top answer.\n<|/ c |>\n<| c |>\nThis is exactly what I was looking\
    \ for!\n<|/ c |>\n<| c |>\nI like this but be aware that `indexOf` can be slow\
    \ with large arrays, as it may have to scan through the entire array each time.\
    \ It's not too bad in this case, but could be an issue if you were using a large\
    \ array and wanted it to be as fast as possible.\n<|/ c |>\n<| a |>\nThis solution\
    \ is better in terms of performance than above solutions\n<code>\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpga9j0msw.ts(15,2): error TS1110: Type expected.

    ../../../../../tmp/tmpga9j0msw.ts(15,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpga9j0msw.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpga9j0msw.ts(16,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpga9j0msw.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpga9j0msw.ts(17,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpga9j0msw.ts(18,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(18,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(18,198): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmpga9j0msw.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpga9j0msw.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpga9j0msw.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpga9j0msw.ts(20,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,4): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,23): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,30): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,39): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,46): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,50): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(21,60): error TS1005: '';'' expected.

    ../../../../../tmp/tmpga9j0msw.ts(22,3): error TS1110: Type expected.

    ../../../../../tmp/tmpga9j0msw.ts(22,4): error TS1161: Unterminated regular expression
    literal.

    ../..'
  timestamp: 1660015503
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst result = new Set<number>();\n\tfor (let i = 0; i < l.length; i++)\
    \ {\n\t\tif (!result.has(l[i])) {\n\t\t\tresult.add(l[i]);\n\t\t}\n\t}\n\treturn\
    \ Array.from(result);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppuyqsp6q.ts(5,21): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmppuyqsp6q.ts(11,15): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015503
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const a: number[] = [],\n        l = l.filter(function (val: number)\
    \ {\n            return a.indexOf(val) === -1;\n        }),\n        l = l.sort(function\
    \ (a: number, b: number) {\n            return a - b;\n        });\n    return\
    \ l;\n}\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThank you for your time and effort,\
    \ but you missed the point. The question is how to do the same using just JS native\
    \ methods.\n<|/ c |>\n<| c |>\nThe question was how to sort numbers in ascending\
    \ order. I provided an answer which does that and only uses native methods. Not\
    \ sure how this can be missed, so +1\n<|/ c |>\n<| c |>\nThis answer doesn't use\
    \ native, which is OP's point. And it uses multiple arrays to do the same thing.\
    \ Not the most performant or efficient way. But it is correct and works.\n<|/\
    \ c |>\n<| a tags=arrays,algorithm,javascript,sorting |>\nI recently had this\
    \ same problem and found a great solution.\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdbjuvtr8.ts(14,2): error TS1110: Type expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpdbjuvtr8.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpdbjuvtr8.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(16,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,7): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,15): error TS1005: ''('' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,29): error TS1005: '')'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,41): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,52): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,56): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,67): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,76): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,79): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,83): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,86): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,93): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,98): error TS1005: '')'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,104): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,109): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,112): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(17,119): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdbjuvtr8.ts(18,1): error TS1003: Identifier expected.

    ../../../'
  timestamp: 1660015502
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let ret: number[] = [];\n  for (let i = 0, len = l.length; i < len; i++)\
    \ {\n    if (ret.indexOf(l[i]) === -1) {\n      ret.push(l[i]);\n    }\n  }\n\
    \  return ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp7gvxq3cu.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7gvxq3cu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015503
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const seen: Set<number> = new Set();\n  const sorted: number[] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (seen.has(l[i])) {\n      continue;\n\
    \    }\n    seen.add(l[i]);\n    sorted.push(l[i]);\n  }\n  return sorted;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcce9k8gr.ts(5,15): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpcce9k8gr.ts(5,33): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015503
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const m = new Set(l);\n  return [...m].sort((a: number, b: number) => a\
    \ - b).filter(a => a !== void 0);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1p74hnxd.ts(5,17): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015503
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let i: number, c: number, o: number[] = [];\n\n  for (i = 0, c = l.length\
    \ - 1; i <= c; i++) {\n    const val = l[i];\n\n    if (l.indexOf(val) == i) o.push(val);\n\
    \  }\n  return o;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpo4sq9qro.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpo4sq9qro.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015504
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const map = new Map<number, boolean>();\n  const result = [];\n  for (let\
    \ i = 0; i < l.length; i++) {\n    if (!map.has(l[i])) {\n      result.push(l[i]);\n\
    \      map.set(l[i], true);\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp31etkl5t.ts(5,19): error TS2552: Cannot find name
    ''Map''. Did you mean ''map''?

    '
  timestamp: 1660015504
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let r = [];\n  for (let i = 0; i < l.length; i++) {\n    if (r.indexOf(l[i])\
    \ === -1) {\n      r.push(l[i]);\n    }\n  }\n  return r;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpx5ldktpg.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpx5ldktpg.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015504
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  var c: number[] = [];\n  var i: number;\n  var j: number;\n  for (j = 0;\
    \ j < l.length; j++) {\n    for (i = 0; i < l.length; i++) {\n      if (l[i] ===\
    \ l[j]) {\n        continue;\n      }\n      if (c.indexOf(l[i]) === -1) {\n \
    \       c.push(l[i]);\n      }\n    }\n  }\n  return c;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  3,\n  2,\n\
    \  9,\n  0,\n  123,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpc7l4jth7.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc7l4jth7.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 3, 2, 9,\
    \ 0, 123, 5 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015504
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return Array.from(new Set(l))\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\n\
    If you do not want to use any library just use for loop and sort it\n<code>\n\
    let unq = [];\nfor(let i in a){\n  if(a.indexOf(a[i]) == -1) unq.push(a[i]);\n\
    }\n</code>\n<|/ a tags=javascript |>\n<| c |>\nPlease add some explanation to\
    \ your answer to improve its quality.\n<|/ c |>\n<| c |>\nplease add an explanation,\
    \ what does the code do and why should one use this?\n<|/ c |>\n<| a dscore=1\
    \ |>\nYou can try this\n<code>\nlet a = [1,2,3,3,5,5,6,6,9,9,9,10,10,10]\n\nlet\
    \ unique = a.filter((a,i,arr) => arr.indexOf(a) === i)\n</code>\n<|/ a tags=javascript\
    \ |>\n<| a tags=javascript |>\nUsing ES6 Set() with spread operator\n<code>\n\
    var arr = [1,2,3,3,5,5,6,6,9,9,9,10,10,10];\nvar unique = [...new Set(arr)];\n\
    console.log(unique)\n</code>\n<|/ a dscore=0 |>\n<| a tags=javascript |>\nES6\
    \ version (ES6)\n<code>\nvar a = [1,2,3,3,5,5,6,6,9,9,9,10,10,10];\nvar unique\
    \ = []; \n\nlet unique = a.filter((value,index,array)=>{\n  if(array.indexOf(value)==index)\n\
    \  {\n    return false;\n  }\n  else\n  {\n    unique.push(value);\n    return\
    \ true;\n  }\n\n});\n\nconsole.log(unique);\n</code>\n<|/ a dscore=0 |>\n<| a\
    \ tags=javascript dscore=0 |>\nWithout using any library you could use the following\
    \ code (using lodash):\n<code>\nvar a = [1,2,3,3,5,5,6,6,9,9,9,10,10,10];\nvar\
    \ unique = _.uniq(a)\n</code>\n<|/ a |>\n<| c |>\nI assume you mean `_.uniq(a)`\
    \ instead of `_.uniq`\n<|/ c |>\n<| a dscore=0 |>\nYou can use the following function,\
    \ which will return only unique values\n\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpo5et428t.ts(7,2): error TS1110: Type expected.

    ../../../../../tmp/tmpo5et428t.ts(7,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpo5et428t.ts(8,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpo5et428t.ts(8,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpo5et428t.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpo5et428t.ts(9,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(9,16): error TS1109: Expression expected.

    ../../../../../tmp/tmpo5et428t.ts(10,4): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,20): error TS1005: '')'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,23): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,27): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,31): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,39): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,44): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,48): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,52): error TS1005: ''('' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,57): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,61): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(10,66): error TS1005: '')'' expected.

    ../../../../../tmp/tmpo5et428t.ts(12,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpo5et428t.ts(16,2): error TS1110: Type expected.

    ../../../../../tmp/tmpo5et428t.ts(16,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpo5et428t.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpo5et428t.ts(17,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpo5et428t.ts(18,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpo5et428t.ts('
  timestamp: 1660015504
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let s: Set<number> = new Set();\n  for (let i of l) {\n    s.add(i);\n\
    \  }\n  return Array.from(s);\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpafsmjy2e.ts(5,10): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    ../../../../../tmp/tmpafsmjy2e.ts(5,28): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    ../../../../../tmp/tmpafsmjy2e.ts(9,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    if (l.length <= 1) {\n        return l;\n    }\n    var ret: number[]\
    \ = [];\n    var found = false;\n    for (var i = 0, len = l.length; i < len;\
    \ i++) {\n        if (found) {\n            break;\n        }\n        var val\
    \ = l[i];\n        for (var j = 0; j < i; j++) {\n            if (l[j] === val)\
    \ {\n                found = true;\n                break;\n            }\n  \
    \      }\n        if (!found) {\n            ret.push(val);\n        }\n    }\n\
    \    return ret;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3\n\
    ]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n\
    \    at test (/tmp/tmpsol412cl.js:30:12)\n    at Object.<anonymous> (/tmp/tmpsol412cl.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3 ],\n\
    \  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let a: number[] = []\n  let u: number[] = []\n  let v: number[] = []\n\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (a.indexOf(l[i]) == -1) a.push(l[i])\n\
    \  }\n\n  for (let i = 0; i < a.length; i++) {\n    if (u.indexOf(a[i]) == -1)\
    \ u.push(a[i])\n  }\n\n  for (let i = 0; i < u.length; i++) {\n    if (v.indexOf(<any>u[i])\
    \ == -1) v.push(<any>u[i])\n  }\n\n  return v\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp54p3hr6m.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp54p3hr6m.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u = {}, a = [];\n    for(var i = 0; i < l.length; i++) {\n      \
    \  if(u.hasOwnProperty(l[i])) {\n            continue;\n        }\n        a.push(l[i]);\n\
    \        u[l[i]] = 1;\n    }\n    return a;\n}\n</code>\n<|/ a tags=numbers,javascript,arrays\
    \ dscore=1 |>\n<| c |>\nThanks everybody for responding and sharing different\
    \ ideas! I'm sure they're helpful but since I'm new to Javascript I haven't implemented\
    \ it yet. I tried the code from Gordon's answer first, but then when I ran it,\
    \ the code was still returning all the values in my array as duplicates. So, I\
    \ decided to see if I could get a solution without using Sets and only using Arrays.\
    \ Thanks again everyone!\n<|/ c |>\n<| a tags=numbers,javascript,arrays dscore=0\
    \ |>\nHere's a more efficient solution:\n<code>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8tso11ep.ts(15,2): error TS1110: Type expected.

    ../../../../../tmp/tmp8tso11ep.ts(15,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp8tso11ep.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8tso11ep.ts(16,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp8tso11ep.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8tso11ep.ts(17,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,22): error TS1005: ''('' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,37): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,45): error TS1005: '')'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,55): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,62): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,63): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,76): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,79): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,87): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,91): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,97): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,98): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,127): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,129): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,141): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,144): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,151): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,157): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8tso11ep.ts(18,161): error TS1005: '';'' expected.

    ../../../../'
  timestamp: 1660015505
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let uniqueArr = [];\n    let uniqueCounter = 0;\n    for (let i = 0;\
    \ i < l.length; i++) {\n        if (uniqueCounter < uniqueArr.length) {\n    \
    \        if (l[i] == uniqueArr[uniqueCounter]) {\n                uniqueCounter++;\n\
    \            } else {\n                uniqueArr.push(l[i]);\n               \
    \ uniqueCounter++;\n            }\n        } else {\n            uniqueArr.push(l[i]);\n\
    \            uniqueCounter++;\n        }\n    }\n    return uniqueArr;\n}\n</code>\n\
    The algorithm is O(n), but it is very inefficient and does not take advantage\
    \ of the fact that an array can be sorted, therefore it can be done in O(n + k)\
    \ time instead of O(n * k). I am not saying this is faster or better, but it is\
    \ much more efficient and much easier to implement.\nHere is a more efficient\
    \ version that also sorts the array:\n<code>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp54d7p29.ts(22,2): error TS1110: Type expected.

    ../../../../../tmp/tmpp54d7p29.ts(22,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpp54d7p29.ts(23,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,28): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,31): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,34): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,39): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,51): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,55): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,60): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,64): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,69): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,79): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,82): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,86): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,91): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,96): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,99): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,105): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,109): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,112): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,130): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,133): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,137): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,140): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,157): error TS1005: '';'' expected.

    ../../../../../tmp/tmpp54d7p29.ts(23,162): error TS1005'
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tconst a: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tconst\
    \ j = a.indexOf(l[i]);\n\t\tif (j === -1) a.push(l[i]);\n\t}\n\treturn a;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmphhicvl3a.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphhicvl3a.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((value, index, self) => self.indexOf(value) === index)\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmplbpbomhu.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplbpbomhu.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.filter((value, index) => l.indexOf(value) === index);\n}\n</code>\n\
    <|/ a tags=typescript,javascript,arrays |>\n<| a dscore=0 tags=typescript,javascript,arrays\
    \ |>\nThis is a very handy function, if you don't need to check for duplicate\
    \ values.\n<code>\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\n\
    console.log(unique([a,b,c]));\n\nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c\
    \ = [1,2,3];\nconsole.log(unique([].concat(a,b,c)));\n\nvar a = [1,2,3];\nvar\
    \ b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\nvar a =\
    \ [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([].concat(a,b,c)));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    \nvar a = [1,2,3];\nvar b = ['a',2,'b'];\nvar c = [1,2,3];\nconsole.log(unique([a,b,c]));\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp473sm4w8.ts(7,2): error TS1110: Type expected.

    ../../../../../tmp/tmp473sm4w8.ts(7,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp473sm4w8.ts(8,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp473sm4w8.ts(8,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp473sm4w8.ts(9,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp473sm4w8.ts(9,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(9,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(9,50): error TS1109: Expression expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,22): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,30): error TS1003: Identifier expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,35): error TS1005: ''('' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,39): error TS1005: '')'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmp473sm4w8.ts(10,80): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmp473sm4w8.ts(12,1): error TS1109: Expression expected.

    '
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let res: number[] = [];\n\n  for (let i = 0; i < l.length; i++) {\n   \
    \ const val = l[i];\n\n    if (res.indexOf(val) === -1) {\n      res.push(val);\n\
    \    }\n  }\n\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmphilo628a.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphilo628a.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const set = new Set<number>();\n    l.forEach((val) => {\n        if\
    \ (set.has(val)) {\n            set.delete(val);\n        } else {\n         \
    \   set.add(val);\n        }\n    });\n    return [...set];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpznblirtj.ts(5,21): error TS2552: Cannot find name
    ''Set''. Did you mean ''set''?

    '
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if (u.indexOf(l[i])\
    \ < 0) u.push(l[i]);\n  }\n  return u;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp9bkww2hc.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9bkww2hc.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    var u: number[] = [],\n        i = -1,\n        n = l.length;\n\n   \
    \ while (++i < n) if (u.indexOf(+l[i]) === -1) u.push(+l[i]);\n\n    return u;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmptocfpiro.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptocfpiro.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    const a: number[] = [];\n    for (let i = 0; i < l.length; i++) {\n \
    \       const num = l[i];\n        if (num === 0 || num === undefined || num ===\
    \ null) {\n            continue;\n        }\n        if (a.indexOf(num) === -1)\
    \ {\n            a.push(num);\n        }\n    }\n    return a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9,\
    \ 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n\
    \  9,\n  123\n]\n    at test (/tmp/tmpb2jdumxz.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb2jdumxz.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015505
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let i: number[] = [],\n        s: number[] = [],\n        map: Object\
    \ = {},\n        maps: Object[] = [],\n        m: number = 0;\n\n    for (i =\
    \ 0; i < l.length; i++) {\n        if (i > 0) {\n            if (map[l[i - 1]]\
    \ === undefined) {\n                map[l[i - 1]] = m;\n                maps.push(map);\n\
    \                m = m + 1\n            } else {\n                map[l[i - 1]]\
    \ = m[map[l[i - 1]]]\n            }\n        }\n        s[map[l[i]]] = l[i]\n\
    \    }\n\n    return s.filter(function (x: number) {\n        return map[x] ===\
    \ undefined\n    }).concat(maps.map(function (map) {\n        return map\n   \
    \ }))\n}\n</code>\n<|/ a dscore=2 |>\n<| c |>\nYour implementation is incorrect\
    \ and will throw an exception in `unique`. The idea is to use a map to store all\
    \ the unique elements and a set to remove all duplicates. So you should change\
    \ your `if (i > 0) {` to `if (i > 0) {\n                if (map[l[i - 1]] ===\
    \ undefined) {\n                    map[l[i - 1]] = m;\n                    maps.push(map);\n\
    \                    m = m + 1\n                }\n            }\n           \
    \ s[map[l[i]]] = l[i]\n        }`\n<|/ c |>\n<| c |>\nI didn't test your code.\
    \ The code that I wrote here is meant to be an example of how to implement it.\
    \ If you're going to write your own code then you have to make sure that you actually\
    \ understand what you are doing.\n<|/ c |>\n<| c |>\nYou are not implementing\
    \ the algorithm, you are simply giving the solution. Notice that the OP wrote\
    \ \"unique elements\" but implemented \"unique items\" in your code.\n<|/ c |>\n\
    <| c |>\nI see what you're saying. It seems that there are two possible solutions\
    \ to your problem. One is to use an array of integers that will hold the unique\
    \ elements and another one is to use an object to store each unique element.\n\
    <|/ c |>\n<| c |>\nI agree with you that this is the way to go about it. The OP\
    \ could of done this with sets or other data structures.\n<|/ c |>\n<| a tags=javascript,typescript\
    \ dscore=1 |>\nIf you have lodash installed, you can use the _.uniqWith method:\n\
    <code>\n_.uniqWith(arr, [func]);\n</code>\nExample:\n<code>\nvar arr = [1, 1,\
    \ 2, 2, 3, 3]\nvar result = _.uniqWith(arr, (val) => val % 2)\nconsole.log(result)\n\
    > [1, 2, 3]\n</code>\n<|/ a |>\n<| a dscore=1 tags=javascript,typescript |>\n\
    To achieve this with plain JavaScript I would use the following:\n<code>\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3,\
    \ 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvely7fi4.ts(30,2): error TS1110: Type expected.

    ../../../../../tmp/tmpvely7fi4.ts(30,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpvely7fi4.ts(31,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpvely7fi4.ts(31,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpvely7fi4.ts(32,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpvely7fi4.ts(32,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,34): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,38): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,43): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,52): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,79): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,84): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,87): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,90): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,94): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,96): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,100): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,103): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,109): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,113): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,117): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,124): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,133): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,137): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvely7fi4.ts(33,139): error TS1005: '';'' expected.

    ../../../.'
  timestamp: 1660015505
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const seen = new Set<number>();\n  const result = [];\n\n  for (let i =\
    \ 0, len = l.length; i < len; i++) {\n    const j = i + 1;\n\n    const item =\
    \ l[i];\n    if (seen.has(item)) {\n      continue;\n    }\n\n    seen.add(item);\n\
    \    result.push(item);\n  }\n\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmi87dc_9.ts(5,20): error TS2583: Cannot find name
    ''Set''. Do you need to change your target library? Try changing the `lib` compiler
    option to es2015 or later.

    '
  timestamp: 1660015505
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n\tlet o: number[] = [];\n\tfor (let i = 0; i < l.length; i++) {\n\t\tif (o.indexOf(+l[i])\
    \ === -1) {\n\t\t\to.push(+l[i]);\n\t\t}\n\t}\n\treturn o;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp6qxvgbuc.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6qxvgbuc.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015506
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  var u: number[] = [];\n  for (var i = l.length - 1; i >= 0; i--) {\n  \
    \  if (u.indexOf(l[i]) === -1) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  123,\n  0,\n\
    \  9,\n  3,\n  2,\n  5\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpzbzz913n.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzbzz913n.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 123, 0,\
    \ 9, 3, 2, 5 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015506
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return uniqueSort(l).reverse();\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfrqt_jnp.ts(5,10): error TS2304: Cannot find name
    ''uniqueSort''.

    '
  timestamp: 1660015506
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const map = new Map();\n  for (let i = 0; i < l.length; i++) {\n    const\
    \ v = l[i];\n    if (map.has(v)) {\n      map.set(v, map.get(v) + 1);\n    } else\
    \ {\n      map.set(v, 1);\n    }\n  }\n  return Array.from(map.keys());\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz5rsiwv0.ts(5,19): error TS2552: Cannot find name
    ''Map''. Did you mean ''map''?

    ../../../../../tmp/tmpz5rsiwv0.ts(14,16): error TS2339: Property ''from'' does
    not exist on type ''ArrayConstructor''.

    '
  timestamp: 1660015506
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let u: number[] = [];\n\n    for (let i = 0; i < l.length; i++) {\n \
    \       if (u.indexOf(l[i]) === -1) {\n            u.push(l[i]);\n        }\n\
    \    }\n\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpdpc__aot.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdpc__aot.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015496
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let r: number[] = [];\n  let q: number[] = [...l];\n  while (q.length >\
    \ 0) {\n    let a = q.shift();\n    if (r.indexOf(a) === -1) {\n      r.push(a);\n\
    \    }\n  }\n  return r;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpl56_svv9.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl56_svv9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015506
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  if (l.length !== l.uniq().length) {\n    throw new Error('Array does not\
    \ contain unique elements.')\n  }\n  return l\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxk7wzpzg.ts(5,22): error TS2339: Property ''uniq''
    does not exist on type ''number[]''.

    '
  timestamp: 1660015506
- exit_code: 2
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return Array.from(new Set(l));\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_ssn9nl0.ts(5,16): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmp_ssn9nl0.ts(5,25): error TS2583: Cannot find name ''Set''.
    Do you need to change your target library? Try changing the `lib` compiler option
    to es2015 or later.

    '
  timestamp: 1660015417
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  const u: number[] = [];\n  for (let i = 0; i < l.length; i++) {\n    if\
    \ (u.indexOf(l[i]) == -1) {\n      u.push(l[i]);\n    }\n  }\n  return u;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5, 3, 5,\
    \ 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp323stziw.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp323stziw.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015506
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  var a: number[] = [], l: number[] = [];\n  for (var i = 0, n = l.length;\
    \ i < n; i++) {\n    if (!l[i]) {\n      a[i] = l[i];\n      l.splice(i, 1);\n\
    \      n--;\n    }\n  }\n  return a;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = unique;\n\
    \  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  0,\n  2,\n  3,\n  5,\n  9,\n  123\n]\n    at test (/tmp/tmpltt9vsdt.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpltt9vsdt.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015507
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    return l.filter(function(elem, pos, self) {\n        return self.indexOf(elem)\
    \ === pos;\n    });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmp_zrtcqsu.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_zrtcqsu.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015507
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  return l.filter((e, i) => l.indexOf(e) === i);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = unique;\n  assert.deepEqual(candidate([5, 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2,\
    \ 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpi3pesgts.js:10:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi3pesgts.js:12:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015507
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n    let u = [];\n    for(let i of l) {\n        if(u.indexOf(i) == -1) u.push(i);\n\
    \    }\n    return u;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpmu9vybat.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmu9vybat.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015507
- exit_code: 1
  program: "//Return sorted unique elements in an array\n// >>> unique([5, 3, 5, 2,\
    \ 3, 3, 9, 0, 123])\n// [0, 2, 3, 5, 9, 123]\nfunction unique(l: number[]): number[]\
    \ {\n  let i: number;\n  const unq = [];\n\n  for (i = 0; i < l.length; i += 1)\
    \ {\n    if (unq.indexOf(l[i]) === -1) {\n      unq.push(l[i]);\n    }\n  }\n\n\
    \  return unq;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = unique;\n  assert.deepEqual(candidate([5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]),[0, 2, 3, 5, 9, 123]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  3,\n\
    \  2,\n  9,\n  0,\n  123\n]\n\nshould loosely deep-equal\n\n[\n  0,\n  2,\n  3,\n\
    \  5,\n  9,\n  123\n]\n    at test (/tmp/tmpgzvc9upm.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgzvc9upm.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 5, 3, 2,\
    \ 9, 0, 123 ],\n  expected: [ 0, 2, 3, 5, 9, 123 ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660015507

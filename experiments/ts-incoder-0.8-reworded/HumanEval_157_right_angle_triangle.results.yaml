language: ts
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return Math.atan2( - b * b - c * c, a * a + b * b - c * c) <\n\
    \         Math.PI / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpdevr1fjc.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdevr1fjc.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let ab: number = b - a\n  let ac: number = c - a\n  let abc: number\
    \ = ab * ab + ac * ac\n  return ab == abc && ac == -abc\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_jla4lez.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_jla4lez.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (Math.abs(b * b - 4 * a * c) < 0.1) {\n        return true;\n\
    \    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpefz7d208.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpefz7d208.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (a+b>=c) && (a-b>=0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmphf6alu1r.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphf6alu1r.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if((c <= a) && (b <= a)) {\n    return (Math.abs(b - a) <= Math.abs(c\
    \ - a));\n  }\n  return false;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc46mjt0a.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc46mjt0a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (b - a) * (c - b) <= 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp15tht730.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp15tht730.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet a1 = Math.abs(a);\n\tlet b1 = Math.abs(b);\n\tlet c1 = Math.abs(c);\n\
    \tlet cross = (a + b + c)/2;\n\treturn a1*a1 + b1*b1 == c1*c1 || a1*b1 + b1*c1\
    \ == c1*a1;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb7an9oer.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb7an9oer.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (a == 0 || b == 0 || c == 0)\n\t\treturn false\n\n\tif (a <\
    \ b + c && b < a + c && c < a + b)\n\t\treturn true\n\n\treturn false\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxufzi_jm.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxufzi_jm.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (\n\t\t\t(c > b - a) && (\n\t\t\ta == c ||\n\t\t\tb == c\
    \ ||\n\t\t\ta > b ||\n\t\t\tMath.abs(a - b) <= Math.abs(c - b)))\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphb02m4ih.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphb02m4ih.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (b - a) * (c - b) === ((b + c) * (a + c));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpw44_l981.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpw44_l981.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    const x1: number = (b - a) * Math.cos(Math.toRadians(90));\n\
    \    const y1: number = (b - a) * Math.sin(Math.toRadians(90));\n    const x2:\
    \ number = (c - a) * Math.cos(Math.toRadians(90));\n    const y2: number = (c\
    \ - a) * Math.sin(Math.toRadians(90));\n\n    const det: number = x1 * y2 - y1\
    \ * x2;\n\n    if (det < 0){\n        return false;\n    }\n    return true;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqea23rrz.ts(11,48): error TS2339: Property ''toRadians''
    does not exist on type ''Math''.

    ../../../../../tmp/tmpqea23rrz.ts(12,48): error TS2339: Property ''toRadians''
    does not exist on type ''Math''.

    ../../../../../tmp/tmpqea23rrz.ts(13,48): error TS2339: Property ''toRadians''
    does not exist on type ''Math''.

    ../../../../../tmp/tmpqea23rrz.ts(14,48): error TS2339: Property ''toRadians''
    does not exist on type ''Math''.

    '
  timestamp: 1659978501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tvar ab: number = b - a, ac: number = c - a, ad: number = a + b\
    \ + c;\n\treturn Math.abs(Math.atan2(ab, ac)) < Math.PI / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp1ra4py63.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1ra4py63.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (((b - a) * (c - b)) > ((a - b) * (c - a)));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3mhvqt_e.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3mhvqt_e.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let d: number = (a + b + c) / 2;\n    let l2: number = Math.sqrt((d\
    \ * d) + (a * a) + (b * b));\n    let l1: number = Math.sqrt(a * a);\n    let\
    \ l3: number = Math.sqrt(b * b);\n\n    return (l2 >= l1);\n}\n</code>\nThe above\
    \ code is just a demonstration that checks if the three sides of a triangle are\
    \ right angles or not. For more complex problems I recommend using more advanced\
    \ mathematical techniques such as Pythagorean theorem.\n<|/ a |>\n<| c |>\nThe\
    \ `right_angle_triangle` function doesn't work correctly on inputs of length 0.\n\
    <|/ c |>\n<| c |>\nI have corrected the problem. Thanks for pointing it out. :)\n\
    <|/ c |>\n<| a dscore=1 |>\n<code>\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqreuja3b.ts(18,2): error TS1110: Type expected.

    ../../../../../tmp/tmpqreuja3b.ts(18,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpqreuja3b.ts(19,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,26): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,40): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,52): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,55): error TS1005: ''('' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,59): error TS1005: '')'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,65): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,71): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,74): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,76): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,85): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,89): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,95): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,102): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,105): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,114): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,119): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,127): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,136): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,138): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,148): error TS1005: '';'' expected.

    ../../../../../tmp/tmpqreuja3b.ts(19,154): error TS1005'
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (a > b && a > c || b > c && b > a) {\n\t\treturn false\n\t}\n\
    \treturn true\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpweepnllh.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpweepnllh.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let ab: number = a + b,\n      ac: number = a + c,\n      bc: number\
    \ = b + c;\n  return (ab > ac) && (ab > bc);\n}\n</code>\n<|/ a |>\n<| a tags=javascript,algorithm,geolocation\
    \ |>\nYou can calculate the area of the triangle by taking the cross product of\
    \ vectors AB and CD.\n<code>\nvar ABC = [\n  {x: 1, y: 4}, {x: 2, y: 3}, {x: 3,\
    \ y: 1}\n];\nvar ACD = [\n  {x: 2, y: 3}, {x: 3, y: 4}, {x: 1, y: 1}\n];\nvar\
    \ area = Math.sqrt(Math.pow(ABC[0].x, 2) + Math.pow(ABC[0].y, 2) + Math.pow(ACD[0].x,\
    \ 2) + Math.pow(ACD[0].y, 2));\n</code>\nYou can then calculate the area using\
    \ triangle area formula.\n<code>\nvar PI = 3.1415926535;\nvar area = 4 * PI *\
    \ Math.sqrt(Math.pow(ABC[0].x, 2) + Math.pow(ABC[0].y, 2) + Math.pow(ACD[0].x,\
    \ 2) + Math.pow(ACD[0].y, 2));\n</code>\n<|/ a dscore=0 |>\n<| c |>\nThis only\
    \ works if you know the lengths of the sides and can then calculate the area by\
    \ `a * b * c` where `a` and `b` are lengths of the two sides and `c` is the length\
    \ of the third side.\n<|/ c |>\n<| a tags=javascript,algorithm,geolocation dscore=0\
    \ |>\nFor anyone looking for a simple implementation in JavaScript (ES5) without\
    \ importing any other libraries, here is the code:\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmptvax_yhk.ts(16,2): error TS1110: Type expected.

    ../../../../../tmp/tmptvax_yhk.ts(16,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmptvax_yhk.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmptvax_yhk.ts(17,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmptvax_yhk.ts(18,2): error TS1109: Expression expected.

    ../../../../../tmp/tmptvax_yhk.ts(18,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(18,45): error TS1109: Expression expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,23): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,28): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,31): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,35): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,44): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,47): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,54): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,58): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,64): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,72): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,75): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,83): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,86): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(19,90): error TS1005: '';'' expected.

    ../../../../../tmp/tmptvax_yhk.ts(20,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmptvax_yhk.ts(21,1): error TS1109: Expression expected.

    ../../../../../tmp/tmptvax_yhk.ts(28,2): error TS1110: Type expected.

    ../../../../../tmp/tmptvax_yhk.ts(28,3): error TS1161: Unterminated regular ex'
  timestamp: 1659978501
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let a = Math.abs(a)\n    let b = Math.abs(b)\n    let c = Math.abs(c)\n\
    \    return ((b <= a && b <= c) || (c <= a && c <= b) || (a <= b && a <= c))\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkcazj4lq.ts(10,31): error TS2300: Duplicate identifier
    ''a''.

    ../../../../../tmp/tmpkcazj4lq.ts(10,42): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmpkcazj4lq.ts(10,53): error TS2300: Duplicate identifier ''c''.

    ../../../../../tmp/tmpkcazj4lq.ts(11,9): error TS2300: Duplicate identifier ''a''.

    ../../../../../tmp/tmpkcazj4lq.ts(12,9): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmpkcazj4lq.ts(13,9): error TS2300: Duplicate identifier ''c''.

    '
  timestamp: 1659978501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  // Check which of the sides of the triangle are 90 degrees.\n \
    \ const d = Math.sqrt((a * a) + (b * b) + (c * c));\n  if (Math.abs(d) < 1) {\n\
    \    // The sides are perfectly symmetrical and form a right-angle triangle.\n\
    \    return true;\n  }\n  // Check which side is exactly 90 degrees.\n  if (Math.abs(a\
    \ * b) > Math.abs(c * a)) {\n    if (Math.abs(b - c) < Math.abs(a - b)) {\n  \
    \    // The sides are equal. If the triangle is equilateral, it is also right-angle.\n\
    \      return true;\n    } else {\n      // The sides are parallel.\n      return\
    \ false;\n    }\n  } else {\n    if (Math.abs(a - c) < Math.abs(b - a)) {\n  \
    \    // The sides are equal. If the triangle is equilateral, it is also right-angle.\n\
    \      return true;\n    } else {\n      // The sides are parallel.\n      return\
    \ false;\n    }\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpo920fye9.js:42:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpo920fye9.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let a1 = Math.abs(a),\n        b1 = Math.abs(b),\n        c1\
    \ = Math.abs(c);\n\n    // check if the triangle is right angled or 90 degree\n\
    \    // if the angle is greater than 90, it is a right angle triangle\n    //\
    \ else it is 90 degree.\n    if(a1 > b1 && b1 > c1 && c1 > a1) {\n        return\
    \ true;\n    }\n    return false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3ose49md.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3ose49md.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((a + b > c) &&\n    (b + c > a) &&\n    (a + c > b));\n\
    }\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7eshhge6.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7eshhge6.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (b - a) * (c - b) <= 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp15tht730.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp15tht730.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2)) - Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2)) - Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2)) > 0));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjqa4vfjy.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjqa4vfjy.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet angle1 = 3 * Math.atan2(a, b);\n\tlet angle2 = 3 * Math.atan2(b,\
    \ c);\n\tlet angle3 = 3 * Math.atan2(c, d);\n\treturn (angle1 === angle2 || angle1\
    \ === angle3 || angle2 === angle3);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcggcasg_.ts(13,33): error TS2304: Cannot find name
    ''d''.

    '
  timestamp: 1659978501
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // https://en.wikipedia.org/wiki/Isoptric_triangle\n    let ab:\
    \ number = b - a\n    let ac: number = c - a\n    let bc: number = b - c\n   \
    \ return ab > 0 && ac > 0 && bc > 0 && (ab * ac - bc * ab) < 0\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9rm6dkra.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9rm6dkra.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (Math.abs(b * b - 9 * a * c) < 0.01) {\n        return true;\n\
    \    } else {\n        return false;\n    }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgsqwdwxo.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgsqwdwxo.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (((b === 0) + (c === 0) + (a === 0)) === 2);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7nvfinyn.ts(11,12): error TS2365: Operator ''+''
    cannot be applied to types ''boolean'' and ''boolean''.

    '
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((b ** 2) - (4 * a * c)) ** 0.5 < 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4pdx25p8.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4pdx25p8.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  \n  // If only one side is equal, it's an equilateral triangle.\n\
    \  if (b == c) {\n    return true;\n  }\n  \n  const b_sqr = b*b;\n  const c_sqr\
    \ = c*c;\n  \n  // If one side is longer than the other, the triangle is not right-angled.\n\
    \  if (b_sqr + c_sqr > Math.pow(a, 2)) {\n    return false;\n  }\n  \n  // If\
    \ both sides are the same, it's a right-angled triangle.\n  if (b_sqr == c_sqr)\
    \ {\n    return true;\n  }\n  \n  // If b is longer than c, the triangle is not\
    \ right-angled.\n  if (b_sqr < c_sqr) {\n    return false;\n  }\n  \n  // If the\
    \ sides are equal, the triangle is right-angled.\n  return Math.abs(a - Math.sqrt(c_sqr))\
    \ < 0.000001;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpj39xztiz.js:35:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpj39xztiz.js:47:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if((b * c) < 0) return false;\n  return ((b * b) == (Math.sqrt((a\
    \ * a) + (b * b)) && Math.sqrt((a * a) + (c * c))));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmprhdy5lgy.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmprhdy5lgy.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let a = Math.abs(a)\n  let b = Math.abs(b)\n  let c = Math.abs(c)\n\
    \  return (((b * c) <= (a * a + b * b)) || ((a + b) <= (c * b + c * a)))\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpctsfr8ww.ts(10,31): error TS2300: Duplicate identifier
    ''a''.

    ../../../../../tmp/tmpctsfr8ww.ts(10,42): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmpctsfr8ww.ts(10,53): error TS2300: Duplicate identifier ''c''.

    ../../../../../tmp/tmpctsfr8ww.ts(11,7): error TS2300: Duplicate identifier ''a''.

    ../../../../../tmp/tmpctsfr8ww.ts(12,7): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmpctsfr8ww.ts(13,7): error TS2300: Duplicate identifier ''c''.

    '
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var determinant = a * c - b * b;\n    if (determinant === 0)\
    \ {\n        return false;\n    }\n    return ((determinant > 0) && (Math.abs(determinant)\
    \ > Math.PI / 2));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc3yledrk.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc3yledrk.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return ((Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) > Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(b, 2))) && (Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2)) > Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(a, 2))));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb2yi3ln_.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb2yi3ln_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // http://mathworld.wolfram.com/Right-Angled-Triangle.html\n\
    \    const ca = Math.cos(a * Math.PI / 180);\n    const sa = Math.sin(a * Math.PI\
    \ / 180);\n    const cb = Math.cos(b * Math.PI / 180);\n    const sb = Math.sin(b\
    \ * Math.PI / 180);\n    const cc = Math.cos(c * Math.PI / 180);\n    const sc\
    \ = Math.sin(c * Math.PI / 180);\n    // http://mathworld.wolfram.com/CompassPoint.html\n\
    \    const p = Math.sqrt(Math.pow(cc - sa * sa, 2) + Math.pow(cc + sa * sb, 2));\n\
    \    const q = Math.sqrt(Math.pow(cc - sb * sb, 2) + Math.pow(cc + sb * ca, 2));\n\
    \    const r = Math.sqrt(Math.pow(cc - sc * sc, 2) + Math.pow(cc + sc * cb, 2));\n\
    \    return ((p * p + q * q - r * r - 1) > 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ps7w_dx.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7ps7w_dx.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let ab: number = b - a\n    let ac: number = c - a\n    let ad:\
    \ number = b + c\n    let bc: number = b - c\n    return (ab > ac) && (ab > ad)\
    \ && (ab > bc);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpe_t517ak.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe_t517ak.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (\n    a > b + c ||\n    b > a + c ||\n    c > a + b\n \
    \ );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvgn5dun0.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvgn5dun0.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet a = Math.sqrt(a * a + b * b + c * c),\n\t\tbc = b * b - c *\
    \ c\n\treturn (-bc <= a * a && a <= bc) && \n\t\t(-bc <= b * b && b <= bc) &&\n\
    \t\t(-bc <= c * c && c <= bc)\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2mrr1jdi.ts(10,31): error TS2300: Duplicate identifier
    ''a''.

    ../../../../../tmp/tmp2mrr1jdi.ts(11,6): error TS2300: Duplicate identifier ''a''.

    '
  timestamp: 1659978504
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var rad: number = Math.abs(Math.atan2(c-a,  b-a));\n    var angle:\
    \ number = Math.abs(rad);\n    if (angle > Math.PI) {\n        angle = Math.PI\
    \ + angle;\n    }\n    return angle <= (Math.PI/2);\n}\n</code>\n<|/ a |>\n<|\
    \ a dscore=0 |>\nA lot of answers missed out a way to detect a triangle being\
    \ right angled. If we have 2 vectors, A and B, the dot product is defined as dot(AB,\
    \ AC) / |AC| |AB|. So, we can compute the angle AB vs AC using the dot product\
    \ and then check that it falls between -90 and 90. \n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9g_1x5n5.ts(18,2): error TS1110: Type expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(18,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp9g_1x5n5.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp9g_1x5n5.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(20,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(20,16): error TS1109: Expression expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,7): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,29): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,31): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,35): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,38): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,47): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,56): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,62): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,68): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,79): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,82): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,87): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,89): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,100): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,104): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9g_1x5n5.ts(21,111): error TS1005: '';'' expected.

    ../../../../../tm'
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var ab: number = Math.abs(b);\n  var ac: number = Math.abs(c);\n\
    \  var bc: number = Math.abs(a + b);\n  var abc: number = Math.abs(a + b + c);\n\
    \n  return (ab <= ac) && (bc <= abc);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4mgggk5n.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4mgggk5n.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const a1 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n  const\
    \ a2 = Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2));\n  const b1 = Math.sqrt(Math.pow(b,\
    \ 2) + Math.pow(a, 2));\n  const b2 = Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2));\n\
    \  const c1 = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n  const c2 = Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(b, 2));\n  return a1 + b2 > a2 + c2 && a2 + c2 > b1 + a1;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpbv22la2a.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbv22la2a.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return b * b > c * c ? true : b * b < c * a ? false : a * c >\
    \ b * a ? false : a * c < b * b\n}\n\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt34iuors.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpt34iuors.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tvar ab: number, ac: number, bc: number, cd: number, de: number,\
    \ ef: number, fg: number, gf: number, ge: number, he: number, ie: number, jf:\
    \ number, jg: number, jh: number, ki: number, kj: number, li: number, lj: number,\
    \ mi: number, mj: number, ni: number, nj: number, oi: number, oj: number, pi:\
    \ number, pq: number, qi: number, ri: number, si: number, sj: number, ti: number,\
    \ tj: number, ui: number, uj: number, vi: number, vj: number, wi: number, wj:\
    \ number, xi: number, xj: number, yi: number, yj: number, zi: number, zj: number,\
    \ zi: number, zi: number, za: number, zb: number) {\n\t\tif (b == 0 && a == 0)\
    \ {\n\t\t\treturn true;\n\t\t} else if (b == 0 && a == 1) {\n\t\t\treturn false;\n\
    \t\t} else if (c == 0 && a == 0) {\n\t\t\treturn false;\n\t\t} else if (c == 0\
    \ && a == 1) {\n\t\t\treturn true;\n\t\t}\n\t\tab = a - b;\n\t\tac = a - c;\n\t\
    \tbc = b - c;\n\t\tcd = 2 * ab * c;\n\t\tde = ac * c - ab * b;\n\t\tef = ac *\
    \ a + ab * c;\n\t\tfg = bc * a + bc * c;\n\t\tgf = bc * b + ab * c;\n\t\tge =\
    \ ac * a + bc * c;\n\t\the = ac * b + bc * a;\n\t\tie = ab * a + ab * b;\n\t\t\
    jf = bc * a + bc * c;\n\t\tjg = bc * b + ab * c;\n\t\tjh = ab * b + ab * a;\n\t\
    \tki = ab * a * a + ab * c * c;\n\t\tkj = bc * a * a + bc * c * c;\n\t\tli = ac\
    \ * a * b + ab * b * c;\n\t\tlj = ac * a * c + ab * b * b;\n\t\tmi = bc * a *\
    \ b + bc * b * c;\n\t\tmj = bc * a * c + bc * b * b;\n\t\tni = ac * b * a + ab\
    \ * c * c;\n\t\tnj = ac * b * c + ab * c * b;\n\t\toi = ab * a * b + ab * b *\
    \ c;\n\t\toj = ab * a * c + ab * b * b;\n\t\tpi = ab * b * a + ab * c * c;\n\t\
    \tpq = ab * b * c + ab * c * b;\n\t\tqi = bc * b * a + bc * c * c;\n\t\tri = bc\
    \ * b * c + bc * c * b;\n\t\tsi = ab * a * b + ab * b * c;\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6hiv6ngc.ts(11,580): error TS1005: '','' expected.

    ../../../../../tmp/tmp6hiv6ngc.ts(12,6): error TS1005: '':'' expected.

    ../../../../../tmp/tmp6hiv6ngc.ts(12,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6hiv6ngc.ts(14,5): error TS1128: Declaration or statement
    expected.

    ../../../../../tmp/tmp6hiv6ngc.ts(70,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (b == c && b == a + 1) {\n\t\treturn true\n\t} else {\n\t\t\
    return false\n\t}\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpejqt604b.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpejqt604b.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (a == 0 || b == 0 || c == 0) return false\n\treturn ((a * a\
    \ + b * b - c * c) % (Math.pow(a, 2) + Math.pow(b, 2)) == 0)\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmwucikem.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmwucikem.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const ab: number = b - a\n  const ac: number = c - a\n  const bc:\
    \ number = b - c\n  return (\n    (ab * bc) > (ac * ab)\n  )\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa2f9vxpv.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa2f9vxpv.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (\n    Math.abs(a + b - c) <= a &&\n    Math.abs(a - b -\
    \ c) <= b &&\n    Math.abs(a - b + c) <= c\n  )\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9zs08c0q.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9zs08c0q.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    \n    // Three equal sides \n    if (a == b && b == c) {\n  \
    \      return true;\n    }\n\n    // Equal or three side lengths equal\n    if\
    \ (a == b || a == c || b == c) {\n        return true;\n    }\n\n    // At least\
    \ two side lengths equal\n    if (a != b) {\n        return true;\n    }\n\n \
    \   // At least one side length is not 90\n    if (a == b && b != c) {\n     \
    \   return true;\n    }\n\n    return false;\n}\n\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp2pewu578.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2pewu578.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (b * b) - (4 * a * c) === 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmuayepk7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmuayepk7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978504
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (((b - a) ^ (c - b)) < 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpphr465je.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpphr465je.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978506
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let rad1 = Math.PI/180;\n  let rad2 = Math.PI/3;\n  let angle =\
    \ a*rad1;\n  let angle1 = b*rad1;\n  let angle2 = c*rad1;\n  return(angle-angle1-angle2\
    \ < 180 || angle-angle1-angle2 >= 180);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyw_mprgv.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyw_mprgv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978506
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return is_right_angle(a, b, c) || is_right_angle(b, a, c) || is_right_angle(a,\
    \ b, c)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmt_e5x4w.ts(11,10): error TS2304: Cannot find name
    ''is_right_angle''.

    ../../../../../tmp/tmpmt_e5x4w.ts(11,37): error TS2304: Cannot find name ''is_right_angle''.

    ../../../../../tmp/tmpmt_e5x4w.ts(11,64): error TS2304: Cannot find name ''is_right_angle''.

    '
  timestamp: 1659978506
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (b === c) && (Math.abs(Math.cos(a / 2)) <=\n      Math.abs(Math.cos(b\
    \ / 2)) && Math.abs(Math.cos(c / 2)) <=\n      Math.abs(Math.cos(a / 2)) && Math.abs(Math.sin(a))\
    \ >=\n      Math.abs(Math.sin(b)) && Math.abs(Math.sin(c)) >=\n      Math.abs(Math.sin(a)));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnwc6c_37.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnwc6c_37.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let d = Math.abs(a - b) * 2 + Math.abs(b - c) * 2 + Math.abs(c\
    \ - a) * 2;\n    return d === 0;\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy8cq614v.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy8cq614v.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let angle = Math.atan2( (c-a),(b-a) ) * 180 / Math.PI \n  return\
    \ angle >= 0 && angle <= 90 \n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpgvkazuug.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgvkazuug.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978506
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // Find the hypotenuse of a right triangle\n    let h : number\
    \ = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    // Check if b is greater\
    \ than c\n    if (b > c) {\n        // If b is greater than c, b is greater than\
    \ the hypotenuse\n        h = c;\n    }\n    // Check if a is greater than the\
    \ hypotenuse\n    if (a > h) {\n        // If a is greater than the hypotenuse,\
    \ a is greater than the \n        // hypotenuse\n        a = h;\n    }\n    //\
    \ Check if the hypotenuse is 0\n    if (h === 0) {\n        return false;\n  \
    \  }\n    // If a>h, a is greater than the hypotenuse\n    if (a > h) {\n    \
    \    return true;\n    }\n    // If a<h, a is less than the hypotenuse\n    if\
    \ (a < h) {\n        return false;\n    }\n    // Check if the hypotenuse is 0\n\
    \    if (h === 0) {\n        return false;\n    }\n    // If a>h, a is greater\
    \ than the hypotenuse\n    if (a > h) {\n        return true;\n    }\n    // If\
    \ a<h, a is less than the hypotenuse\n    if (a < h) {\n        return false;\n\
    \    }\n    // If all else fails, return false\n    return false;\n}\n</code>\n\
    <|/ a |>\n<| a tags=algorithm,geometry,javascript,math |>\nOne way to do it without\
    \ trigonometry (just some math)\n<code>\nvar a = [3, 4, 5];\nvar b = [1, 2, 3];\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppl88mmsb.ts(51,2): error TS1110: Type expected.

    ../../../../../tmp/tmppl88mmsb.ts(51,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmppl88mmsb.ts(52,2): error TS1109: Expression expected.

    ../../../../../tmp/tmppl88mmsb.ts(52,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmppl88mmsb.ts(53,2): error TS1109: Expression expected.

    ../../../../../tmp/tmppl88mmsb.ts(53,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmppl88mmsb.ts(53,47): error TS1109: Expression expected.

    ../../../../../tmp/tmppl88mmsb.ts(54,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmppl88mmsb.ts(54,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmppl88mmsb.ts(54,12): error TS1005: '';'' expected.

    ../../../../../tmp/tmppl88mmsb.ts(54,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmppl88mmsb.ts(54,26): error TS1005: '')'' expected.

    ../../../../../tmp/tmppl88mmsb.ts(54,45): error TS1005: '','' expected.

    ../../../../../tmp/tmppl88mmsb.ts(54,50): error TS1005: '','' expected.

    ../../../../../tmp/tmppl88mmsb.ts(56,1): error TS1109: Expression expected.

    '
  timestamp: 1659978506
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return Math.sqrt(Math.pow(c - b, 2) + Math.pow(a - c, 2)) > 0;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvooopweb.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvooopweb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // Check if a <= b and b <= c\n    // or if a <= c and b <= c\n\
    \    if (a <= b && b <= c || a <= c && b <= c) {\n        return true;\n    }\
    \ else {\n        return false;\n    }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxp4rqn1j.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxp4rqn1j.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (b - a > c && c - b > a) {\n        return true;\n    }\n\n\
    \    return false;\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpeji_c_if.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpeji_c_if.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978506
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet ab: number = b - a\n\tlet ac: number = c - a\n\tlet bc: number\
    \ = b - c\n\treturn Math.sqrt(ab * ab + ac * ac + bc * bc <= 1)\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpowmh54j5.ts(14,19): error TS2345: Argument of type
    ''boolean'' is not assignable to parameter of type ''number''.

    '
  timestamp: 1659978506
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif((b - a) * (c - b) <= 0) {\n\t\treturn false\n\t}\n\tlet determinant\
    \ = a * d - b * c\n\tlet angle = Math.abs(Math.atan2(d, c))\n\treturn (angle <=\
    \ Math.PI / 2 || angle >= 3 * Math.PI / 2)\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjkklts1x.ts(14,24): error TS2304: Cannot find name
    ''d''.

    ../../../../../tmp/tmpjkklts1x.ts(15,34): error TS2304: Cannot find name ''d''.

    '
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let ab: number = Math.abs(b);\n  let ac: number = Math.abs(c);\n\
    \  if (ab >= ac) {\n    if (a < c) {\n      return (b > c) || (b === c && a >=\
    \ b);\n    }\n    return true;\n  }\n  return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplbxc6m2i.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplbxc6m2i.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (a === 0 || b === 0 || c === 0) {\n\t\treturn false;\n\t}\n\t\
    else if (Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2) + Math.pow(c, 2))\
    \ - 1) > 1e-9) {\n\t\treturn false;\n\t}\n\telse {\n\t\treturn true;\n\t}\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpt9nl3w16.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpt9nl3w16.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (b - a) * (c - b) <= 0;\n}\n</code>\n<|/ a tags=javascript,typescript,geometry,math\
    \ |>\n<| c |>\nThis answer should be accepted as the correct one because it is\
    \ correct, and because it was first.  This is what makes a good community here\
    \ in StackOverflow.\n<|/ c |>\n<| a dscore=5 |>\nThe solution below is the most\
    \ efficient way for checking if three non-parallel sides of a triangle are equal.\
    \ I wrote it in JavaScript for you so you can run it.  It also uses TypeScript.\n\
    <code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmps43ny4_f.ts(13,2): error TS1110: Type expected.

    ../../../../../tmp/tmps43ny4_f.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmps43ny4_f.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmps43ny4_f.ts(14,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmps43ny4_f.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmps43ny4_f.ts(15,7): error TS1109: Expression expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,23): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,39): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,47): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,51): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,59): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,62): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,65): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,78): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,86): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,89): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,93): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,106): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,109): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,114): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,120): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,122): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,127): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(16,137): error TS1005: '';'' expected.

    ../../../../../tmp/tmps43ny4_f.ts(17,1): error TS1003: Identifier expected.

    ../../'
  timestamp: 1659978507
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    const ab_sqr_sum = sqr_sum(a, b);\n    const bc_sqr_sum = sqr_sum(b,\
    \ c);\n    const ac_sqr_sum = sqr_sum(a, c);\n    const square_sum: number = ab_sqr_sum\
    \ + bc_sqr_sum + ac_sqr_sum;\n    return square_sum === 1;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0ly_t0b4.ts(11,24): error TS2304: Cannot find name
    ''sqr_sum''.

    ../../../../../tmp/tmp0ly_t0b4.ts(12,24): error TS2304: Cannot find name ''sqr_sum''.

    ../../../../../tmp/tmp0ly_t0b4.ts(13,24): error TS2304: Cannot find name ''sqr_sum''.

    '
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (Math.abs(a - b) >= a && Math.abs(a - c) >= a && Math.abs(b\
    \ - c) >= a)\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpifvmla7j.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpifvmla7j.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (Math.abs(a - b) <= 90 && Math.abs(a - c) <= 90 && Math.abs(b\
    \ - c) <= 90);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp4ue30hn2.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4ue30hn2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var a1 = Math.abs(a);\n  var b1 = Math.abs(b);\n  var c1 = Math.abs(c);\n\
    \  var s = (a1 + b1 + c1) / 2.0;\n  var a2 = Math.sqrt(s);\n  var b2 = a2 - a1;\n\
    \  var c2 = b2 - b1;\n  var isRightAngle = (s > (a1 + b1 + c1));\n  return isRightAngle;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpv_vbfj99.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpv_vbfj99.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.abs(Math.sqrt(a * a + b * b - c * c) - a) > 0.000000001)\
    \ {\n\t\treturn false\n\t}\n\tif (Math.abs(Math.sqrt(a * a + b * b - c * c) -\
    \ a) > 0.000000001) {\n\t\treturn false\n\t}\n\tif (Math.abs(Math.sqrt(a * a +\
    \ b * b - c * c) - a) > 0.000000001) {\n\t\treturn false\n\t}\n\treturn true\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp01h_fx_j.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp01h_fx_j.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet ab = a - b;\n\tlet ac = a - c;\n\tlet bc = b - c;\n\treturn\
    \ (\n\t\tMath.abs(ab - ac) <= EPSILON && \n\t\tMath.abs(bc - ab) <= EPSILON\n\t\
    );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7w7v9l3j.ts(15,24): error TS2304: Cannot find name
    ''EPSILON''.

    ../../../../../tmp/tmp7w7v9l3j.ts(16,24): error TS2304: Cannot find name ''EPSILON''.

    '
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var ab = a - b;\n  var ac = c - a;\n  var ad = a - c;\n  return\
    \ ab > 0 && ac > 0 && ad > 0 || (ab * ac) > 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplkwn9lzy.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplkwn9lzy.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return ( (a < b && b < c) || (a < c && c < b) || (a > b && c\
    \ > b) || (a > c && b > c) );\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpe2lrbeq9.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe2lrbeq9.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978507
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (b - a) * (c - a) <= 0;\n}\n\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcu9313io.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcu9313io.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (a + b <= c || a + c <= b || b + c <= a) {\n\t\treturn false;\n\
    \t}\n\tconst s = (b - a) / Math.sqrt(Math.pow(b - c, 2) + Math.pow(a, 2));\n\t\
    return s >= 0.5;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgnvavvtb.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgnvavvtb.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn ( (Math.abs(b - c) >  Math.abs(a - b) ) && (Math.abs(a -\
    \ c) >  Math.abs(a - b)) );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp748plqdu.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp748plqdu.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let l: number = a * a + b * b;\n    let d: number = Math.sqrt(l\
    \ - Math.pow(a, 2) + Math.pow(b, 2));\n    return l === d;\n}\n\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp40jcng23.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp40jcng23.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let rad = Math.sqrt(a * a + b * b); // square of radius\n   \
    \ let angle = Math.acos(a / rad); // cosine of angle\n    return rad * Math.pow(Math.sin(angle\
    \ * 0.5), 2) < c; // if angle is between -90 and 90, then result is valid\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp612bk3_7.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp612bk3_7.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tconst d = b * b - a * c;\n\tif (d < 0) {\n\t\treturn false;\n\t\
    } else {\n\t\treturn Math.abs(d) / b < Math.PI / 2;\n\t}\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppkr5ij98.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppkr5ij98.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return b * b - 4 * a * c >= 0\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcb7a1elv.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcb7a1elv.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if (a === 0 && b === 0 && c === 0) {\n    return true\n  }\n  if\
    \ (a > 0 && b > 0 && c === 0) {\n    return false\n  }\n  if (a > 0 && b > 0 &&\
    \ c > 0 && a >= b + c && b >= c + a) {\n    return true\n  }\n  return false\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpg84a6hui.js:25:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpg84a6hui.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (((b - c) - (a - b)) % 360) == 90;\n}\n</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\nThis function would work for any number of sides.\n<code>\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpacng8bcs.ts(13,2): error TS1110: Type expected.

    ../../../../../tmp/tmpacng8bcs.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpacng8bcs.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpacng8bcs.ts(14,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpacng8bcs.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpacng8bcs.ts(15,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpacng8bcs.ts(16,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpacng8bcs.ts(16,21): error TS1005: ''('' expected.

    ../../../../../tmp/tmpacng8bcs.ts(16,26): error TS1005: '';'' expected.

    ../../../../../tmp/tmpacng8bcs.ts(16,30): error TS1005: ''('' expected.

    ../../../../../tmp/tmpacng8bcs.ts(16,34): error TS1005: '';'' expected.

    ../../../../../tmp/tmpacng8bcs.ts(16,41): error TS1005: '';'' expected.

    ../../../../../tmp/tmpacng8bcs.ts(16,44): error TS1005: '')'' expected.

    ../../../../../tmp/tmpacng8bcs.ts(17,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmpacng8bcs.ts(18,9): error TS1005: '';'' expected.

    '
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (a < b) {\n        if (b < c) {\n            return true;\n\
    \        } else {\n            if (c > a) {\n                return false;\n \
    \           } else {\n                return true;\n            }\n        }\n\
    \    } else {\n        if (c > b) {\n            return false;\n        } else\
    \ {\n            if (a < c) {\n                return true;\n            } else\
    \ {\n                return false;\n            }\n        }\n    }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpat0q0n0s.js:42:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpat0q0n0s.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const ab: number = a - b;\n  const bc: number = b - c;\n  return\
    \ ab > bc && bc > ab;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdtw8kjma.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdtw8kjma.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return b * c <= (Math.pow(a, 2) * Math.pow(b, 2));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpxga5iw73.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxga5iw73.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.abs(b * b - 4 * a * c) < epsilon) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw0sglaxl.ts(11,36): error TS2304: Cannot find name
    ''epsilon''.

    '
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((Math.atan2(b, a) - Math.atan2(c, c)) <= Math.PI / 2)\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp7ysazog2.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7ysazog2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let sa = Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)));\n\
    \    let sb = Math.abs(Math.sqrt(Math.pow(a, 2) + Math.pow(c, 2)));\n    let sc\
    \ = Math.abs(Math.sqrt(Math.pow(b, 2) + Math.pow(c, 2)));\n\n    return ((sa *\
    \ sa + sb * sb + sc * sc) / (2 * a * b * c) >= 1);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_baw3oci.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_baw3oci.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var ab: number = b*b - 4*a*c;\n    if(ab >= 0){\n        var\
    \ root: number = Math.sqrt(ab);\n        return root < b;\n    } else {\n    \
    \    return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp_af5ofc_.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_af5ofc_.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return isRightAngle(a, b) || isRightAngle(c, a);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfy7b2vhq.ts(11,10): error TS2304: Cannot find name
    ''isRightAngle''.

    ../../../../../tmp/tmpfy7b2vhq.ts(11,32): error TS2304: Cannot find name ''isRightAngle''.

    '
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let angle = Math.round(Math.acos((b * b + c * c - a * a) /\n\
    \                                         (Math.pow(b + c, 2) + Math.pow(a, 2))))\n\
    \    return angle <= 90\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmph2eofq1z.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmph2eofq1z.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\t// If one of the sides is a right angle or 90 degree.\n\treturn\
    \ (Math.sqrt(a * a + b * b - c * c) >= 0);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyfql2v1t.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyfql2v1t.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978510
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var ab: number = b - a\n    var bc: number = c - b\n    var ac:\
    \ number = a - c\n    return (ab > 0 && ac > 0 && bc > 0)\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmport44zc1.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmport44zc1.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978510
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.sqrt(a * a + b * b - c * c) < 0.1) {\n\t\treturn true;\n\
    \t} else {\n\t\treturn false;\n\t}\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7hcqz4k0.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7hcqz4k0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978510
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (a < b + c || b < a + c || c < a + b) return false\n    var\
    \ det = (a * a + b * b - c * c)\n    return det != 0\n}\n</code>\n<|/ a |>\n<|\
    \ c |>\nYou will need to check if a negative is possible, it doesn't look like\
    \ it is in the question. But I would think it is impossible.\n<|/ c |>\n<| c |>\n\
    Oh I did not think about that - I edited the answer to include checks for that.\n\
    <|/ c |>\n<| a tags=boolean,javascript,typescript |>\nThis answer is specific\
    \ to TypeScript. \n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvf6z0v16.ts(15,2): error TS1110: Type expected.

    ../../../../../tmp/tmpvf6z0v16.ts(15,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpvf6z0v16.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpvf6z0v16.ts(16,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpvf6z0v16.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpvf6z0v16.ts(17,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,27): error TS1005: ''('' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,29): error TS1005: '')'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,38): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,41): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,54): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,59): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(18,130): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmpvf6z0v16.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpvf6z0v16.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpvf6z0v16.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpvf6z0v16.ts(20,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpvf6z0v16.ts(21,4): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(21,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(21,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(21,14): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.ts(21,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmpvf6z0v16.'
  timestamp: 1659978509
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (a === b && b === c) {\n        return true;\n    }\n\n  \
    \  // http://mathworld.wolfram.com/Right-AngledTriangle.html\n    const d = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n    if (a === 0 || b === 0 || c === 0) {\n        return\
    \ false;\n    }\n\n    // If the hypotenuse is zero, then the three sides are\
    \ collinear, \n    // and if the side with zero angle is either one or two of\
    \ the other \n    // side then it is a right angle triangle by definition.  \n\
    \    if (Math.abs(d) === 0) {\n        if (a === b || a === c) {\n           \
    \ return a === c || a === 0;\n        } else if (a === 0 || b === 0 || c === 0)\
    \ {\n            return a === 0 || b === 0;\n        } else {\n            return\
    \ false;\n        }\n    }\n\n    const l1 = Math.abs(b - c);\n    const l2 =\
    \ Math.abs(a - c);\n    const l3 = Math.abs(a - b);\n\n    return Math.abs((l1\
    \ + l2) / 2) === l1 && Math.abs(l2 / 2) === l3 && Math.abs(l3 / 2) === l1;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp3ymrx_oz.js:41:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3ymrx_oz.js:53:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978510
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let a = Math.abs(a);\n    let b = Math.abs(b);\n    let c = Math.abs(c);\n\
    \    return ((a >= b) && (a >= c)) || ((b >= c) && (b >= a));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmputg1vuv4.ts(10,31): error TS2300: Duplicate identifier
    ''a''.

    ../../../../../tmp/tmputg1vuv4.ts(10,42): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmputg1vuv4.ts(10,53): error TS2300: Duplicate identifier ''c''.

    ../../../../../tmp/tmputg1vuv4.ts(11,9): error TS2300: Duplicate identifier ''a''.

    ../../../../../tmp/tmputg1vuv4.ts(12,9): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmputg1vuv4.ts(13,9): error TS2300: Duplicate identifier ''c''.

    '
  timestamp: 1659978511
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let ab_x = Math.abs(b - a)\n  let ac_x  = Math.abs(c - a)\n  let\
    \ ab_y = Math.abs(b - c)\n  let ac_y = Math.abs(a - c)\n  return (ab_x > ac_x)\
    \ && (ab_y == ac_y)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpctq5jx__.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpctq5jx__.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return Math.abs(a - c) <= (b - a) * (Math.PI / 2);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpi3dnrgev.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi3dnrgev.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978511
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return Math.abs(Math.sqrt(Math.pow((b - a), 2) + Math.pow((c\
    \ - b), 2)) - Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2))) <= 1;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpk08q3fp_.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpk08q3fp_.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn b === a && c === a || c === b && a === b;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp04hdcciy.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp04hdcciy.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var ab: number = Math.abs(a);\n  var bc: number = Math.abs(b);\n\
    \  var ac: number = Math.abs(c);\n  \n  return ab > bc ? true : ab > ac ? false\
    \ : (b > c ? true : b > ab ? false : true);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp01d2fr_z.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp01d2fr_z.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (a === b && b === c) {\n\t\treturn false\n\t} else if (a ===\
    \ c) {\n\t\treturn true\n\t} else if (b === c) {\n\t\treturn false\n\t} else if\
    \ (a > b && b > c) {\n\t\treturn true\n\t} else {\n\t\treturn false\n\t}\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp2l4e5o7.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp2l4e5o7.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return b * b > c * c;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfaqcukbl.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfaqcukbl.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.abs(a-b) > Math.abs(a-c) && Math.abs(b-c) > Math.abs(b-a))\
    \ {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp838nw8m9.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp838nw8m9.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var ab: number = Math.abs(b - a);\n    var bc: number = Math.abs(c\
    \ - b);\n    if (ab == 0) return b == 0;\n    return bc <= ab;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmphibhq_8w.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphibhq_8w.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (\n    Math.abs(Math.atan2(b, a)) >=\n    Math.abs(Math.atan2(c,\
    \ b)));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpszgqjs61.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpszgqjs61.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let sine = Math.sin((Math.PI / 180) * (a - b));\n    let cosine\
    \ = Math.cos((Math.PI / 180) * (a - b));\n    let length = Math.sqrt(Math.pow(sine,\
    \ 2) + Math.pow(cosine, 2));\n    return length < Math.PI && length > (Math.PI\
    \ / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpb_b7fhm0.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpb_b7fhm0.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let _a = Math.abs(a);\n  let _b = Math.abs(b);\n  let _c = Math.abs(c);\n\
    \  if (_a > _b && _b > _c) {\n    return true;\n  }\n  else if (_a > _b && _b\
    \ == _c) {\n    return true;\n  }\n  else if (_a == _b) {\n    return true;\n\
    \  }\n  else {\n    return false;\n  }\n}\n</code>\n<|/ a dscore=0 |>\n<| a tags=typescript,javascript\
    \ dscore=0 |>\nA simple approach is to check if any of the three is less than\
    \ the sum of the other two.\n\n<code>\nvar three = [3, 2, 6],\n    two = [1, 4,\
    \ 7],\n    one = [5, 8, 9];\n    \n    \ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8pa1xcnh.ts(27,2): error TS1110: Type expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(27,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp8pa1xcnh.ts(28,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(28,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp8pa1xcnh.ts(29,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(29,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(29,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(29,43): error TS1109: Expression expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,22): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,31): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,34): error TS1005: ''('' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,38): error TS1005: '')'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,41): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,51): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,54): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,59): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,64): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,68): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,72): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,75): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,79): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(30,85): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8pa1xcnh.ts(32,1): error TS1003: Identifier expected.

    ../../../../.'
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var ab = Math.sqrt(Math.pow(b, 2) + Math.pow(a, 2));\n    var\
    \ ac = Math.sqrt(Math.pow(c, 2) + Math.pow(a, 2));\n    if (ab < ac) {\n     \
    \   return false;\n    }\n    if (a < c) {\n        ab = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(b, 2));\n        if (ab < ac) {\n            return false;\n \
    \       }\n    }\n    return true;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpaue77_71.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpaue77_71.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.abs(a + b + c) < 1) return false;\n\treturn (b + (b -\
    \ a) * (c - b) * (a - b)) > 0;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpggk_pwx9.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpggk_pwx9.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (\n        Math.abs(Math.atan2(b, b-c) * (180/Math.PI))\
    \ < 90 &&\n        Math.abs(Math.atan2(a-c, a-b) * (180/Math.PI)) < 90\n    );\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp1xxou615.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp1xxou615.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    const a2 = a*a;\n    const b2 = b*b;\n    const c2 = c*c;\n \
    \   const det = a2 + b2 + c2;\n    return det === 0 ||\n        ((det - a2 > b2)\
    \ && (det - b2 > a2));\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvec_3k0z.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvec_3k0z.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet ab = ab_test(b,a),\n\t\tbc = ab_test(b,c);\n\t\n\treturn ab\
    \ && bc;\n}\n\t\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd9l7c099.ts(11,11): error TS2304: Cannot find name
    ''ab_test''.

    ../../../../../tmp/tmpd9l7c099.ts(12,8): error TS2304: Cannot find name ''ab_test''.

    '
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (Math.abs(a * b) > Math.abs(c * a)) {\n        if (Math.abs(a\
    \ * c) > Math.abs(b * b)) {\n            if (b > a && c > b) {\n             \
    \   return true\n            }\n        }\n    }\n    return false\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpa9c8dsha.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpa9c8dsha.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return Math.abs(Math.sin(a)) < 0.5;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy3xsqnhk.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy3xsqnhk.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let side1 = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n   \
    \ let side2 = Math.sqrt(Math.pow(c, 2) + Math.pow(b, 2));\n    let side3 = Math.sqrt(Math.pow(a,\
    \ 2) + Math.pow(c, 2));\n    let result = false;\n    if (side1 > side2 && side1\
    \ > side3) {\n        result = true;\n    }\n    return result;\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp5lw2s01s.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5lw2s01s.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (Math.abs(b * b - a * c) >= Math.sqrt(Math.pow(b * b - a\
    \ * c, 2) + Math.pow(a * a - b * b, 2)))\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpc_if47xq.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc_if47xq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978512
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let left_angle = Math.atan2(b,a); \n    let right_angle = Math.atan2(-1*c,a);\
    \ \n    return Math.abs(left_angle - right_angle) < Math.PI;\n}\n</code>\n<|/\
    \ a dscore=0 |>\n<| c |>\nThis doesn't look right to me. `a`, `b`, `c` aren't\
    \ all negative. Also, I don't think you need the `Math.abs(Math.atan2(-1*c,a))`\
    \ part.\n<|/ c |>\n<| c |>\nThanks for pointing out, I missed that part. Fixed\
    \ it now.\n<|/ c |>\n<| c |>\nThanks, I did not know you could do negative angles\
    \ like that. Also I was wondering if there was a way to do this without the mathematical\
    \ functions.\n<|/ c |>\n<| a dscore=0 |>\nI have written a javascript function\
    \ that does exactly what you are looking for. This function does not use any complex\
    \ mathematics, it just checks if a right angled triangle exists. Here is the code:\n\
    <code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8oxlxsch.ts(15,2): error TS1110: Type expected.

    ../../../../../tmp/tmp8oxlxsch.ts(15,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp8oxlxsch.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8oxlxsch.ts(16,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp8oxlxsch.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8oxlxsch.ts(17,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,51): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,53): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,57): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,75): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,78): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(18,136): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmp8oxlxsch.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8oxlxsch.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp8oxlxsch.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp8oxlxsch.ts(20,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,12): error TS1005: ''('' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,28): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,35): error TS1005: '')'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,40): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,52): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(21,55): error TS1005: '';'' expected.

    ../../../../../tmp/tmp8oxlxsch.ts(22,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmp8o'
  timestamp: 1659978512
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var ab = Math.sqrt(a * a + b * b), ac = Math.sqrt(a * a + c * c),\
    \ bc = Math.sqrt(b * b + c * c), abc = Math.sqrt(ab * ab + ac * ac);\n  return\
    \ ((bc == 0 || bc == 1) && ab > a && ab > ac) || (ab == 0 || ab == 1) && ac >\
    \ a && ac > ab;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdycq2a38.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdycq2a38.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978513
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return ((a + b > c) && (a + c > b) && (a + b + c >= 0));\n}\n\
    </cell>\n<text>\nQ9. Write a function is_diamond(a,b,c) that returns true if the\
    \ sum of the three sides (a+b+c) is equal to 100. If the three sides do not form\
    \ a diamond, return false.\n\n\n</text>\n<cell>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9t2zku7v.ts(13,2): error TS1110: Type expected.

    ../../../../../tmp/tmp9t2zku7v.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp9t2zku7v.ts(15,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,40): error TS1144: ''{'' or '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,53): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,58): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,61): error TS1005: ''('' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,65): error TS1005: '')'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,69): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,72): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,76): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,82): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,96): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,99): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,105): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,108): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,113): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,116): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,120): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,126): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,132): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,139): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,144): error TS1005: '')'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,146): error TS1005: '';'' expected.

    ../../../../../tmp/tmp9t2zku7v.ts(15,155): error TS1109: Expression expected.

    ../../../../../tmp/tmp9t2zku7v.ts(18,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmp9t2zku7v.'
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (c * c - a * a == b * b); // return true if the sides\
    \ are equal\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl1zklbc1.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl1zklbc1.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (b * b) - 4 * (a * c) > 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpy1q83edn.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpy1q83edn.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (Math.abs(a) <= Math.max(Math.abs(a), Math.abs(b), Math.abs(c)))\
    \ && (Math.abs(b) <= Math.max(Math.abs(a), Math.abs(b), Math.abs(c))) && (Math.abs(c)\
    \ <= Math.max(Math.abs(a), Math.abs(b), Math.abs(c)));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp5hzf5bsx.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp5hzf5bsx.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return b === c || (c === 0 && a === b);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpvm14qnmt.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvm14qnmt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let deg_a = toRad(a);\n  let deg_c = toRad(c);\n  let deg_tol =\
    \ 1e-10;\n\n  if (deg_a > deg_tol && deg_c > deg_tol) {\n    deg_a = deg_a - deg_tol;\n\
    \    deg_c = deg_c - deg_tol;\n  } else if (deg_a < deg_tol && deg_c > deg_tol)\
    \ {\n    deg_a = deg_a - deg_tol;\n    deg_c = deg_c + deg_tol;\n  } else if (deg_a\
    \ > deg_tol && deg_c < deg_tol) {\n    deg_a = deg_a + deg_tol;\n    deg_c = deg_c\
    \ - deg_tol;\n  } else if (deg_a < deg_tol && deg_c < deg_tol) {\n    deg_a =\
    \ deg_a + deg_tol;\n    deg_c = deg_c + deg_tol;\n  }\n\n  let is_a_angle = deg_a\
    \ > 0;\n  let is_b_angle = deg_c > 0;\n  let is_both_angle = deg_a > deg_c;\n\n\
    \  return is_a_angle && is_b_angle && is_both_angle;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfm7r7i9k.ts(11,15): error TS2304: Cannot find name
    ''toRad''.

    ../../../../../tmp/tmpfm7r7i9k.ts(12,15): error TS2304: Cannot find name ''toRad''.

    '
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return a > 0 && b > 0 && c > 0 && a * a + b * b > c * c;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpjto49qlq.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjto49qlq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const d = b * b - 4 * a * c;\n  return d >= 0;\n}\n\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp6fgt66hb.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp6fgt66hb.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if(b === c) {\n    return false\n  }\n  return (a * b <= c * c\
    \ && a * c <= b * b) || (a * c <= b * b && a * b <= c * c)\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpt9oxnbes.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpt9oxnbes.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (Math.abs(a) >= Math.abs(b) && Math.abs(a) >= Math.abs(c))\
    \ {\n        if (Math.abs(b) > Math.abs(c)) {\n            if (b > 0) {\n    \
    \            return true;\n            } else {\n                return false;\n\
    \            }\n        } else if (Math.abs(c) > Math.abs(b)) {\n            if\
    \ (c > 0) {\n                return true;\n            } else {\n            \
    \    return false;\n            }\n        } else {\n            if (a > 0) {\n\
    \                return true;\n            } else {\n                return false;\n\
    \            }\n        }\n    } else {\n        return false;\n    }\n}\n\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp2m9nww_9.js:44:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp2m9nww_9.js:56:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif(b === 0) return true\n\tif(b == c || a === b) return true\n\t\
    if(b > c) return false\n\t\n\tlet delta = Math.abs(b - a)\n\tlet theta = Math.PI\
    \ / 2.0\n\t\n\tif(b > a) theta += theta\n\tif(b > c) theta -= theta\n\t\n\tlet\
    \ is_true = (a * Math.sin(theta) - c * Math.cos(theta)) > 0\n\t\n\treturn is_true\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpc9njde0s.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc9njde0s.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    const ab: number = b - a\n    const ac: number = c - a\n    const\
    \ b: number = Math.sqrt(ab * ab + ac * ac)\n    const c: number = Math.atan2(ab,\
    \ ac)\n    return b <= 1\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphf2s8fwn.ts(10,42): error TS2300: Duplicate identifier
    ''b''.

    ../../../../../tmp/tmphf2s8fwn.ts(10,53): error TS2300: Duplicate identifier ''c''.

    ../../../../../tmp/tmphf2s8fwn.ts(13,11): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmphf2s8fwn.ts(14,11): error TS2300: Duplicate identifier ''c''.

    '
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var angle1 = Math.atan2(b, c);\n  var angle2 = Math.atan2(a, b);\n\
    \  var angle3 = Math.atan2(c, b);\n\n  return angle1 === angle2 || angle1 ===\
    \ angle3 || angle2 === angle3;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp4f4nmcej.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4f4nmcej.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (a === 0 || b === 0 || c === 0) {\n        return false;\n\
    \    }\n    let area_1 = Math.abs((a * (b + c)) / 2)\n    let area_2 = Math.abs((a\
    \ * b) / 2)\n    let area_3 = Math.abs((a * c) / 2)\n    return area_1 === area_2\
    \ || area_1 === area_3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdt9ov80a.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdt9ov80a.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (((b - a) * (c - b)) > (-(b + c) * (a + b)))\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp_tdbo97n.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp_tdbo97n.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978515
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let left = c*c - a*b;\n  let right = 2 * (c*a + b * c);\n  return\
    \ left >= right ? true : false;\n}\n\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpr5_96og_.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpr5_96og_.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978514
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const bsq = b * b;\n  const csc = c * c;\n  const absq = a * b;\n\
    \  const abcsc = a * c * c;\n  \n  return bsq + csc == absq &&\n    csc - absq\
    \ == abcsc;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpxhquovid.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpxhquovid.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978515
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return is_right_angle(a, b, c);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv8l0w_v2.ts(11,12): error TS2304: Cannot find name
    ''is_right_angle''.

    '
  timestamp: 1659978515
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let _a = [a, b, c]\n  let max_a = Math.max(_a[0], _a[1], _a[2])\n\
    \  let min_a = Math.min(_a[0], _a[1], _a[2])\n\n  let _a2 = [_a[0], _a[2], min_a]\n\
    \  let min_a2 = Math.min(_a2[0], _a2[1], _a2[2])\n\n  let _a3 = [_a[0], _a[1],\
    \ max_a]\n  let max_a3 = Math.max(_a3[0], _a3[1], _a3[2])\n\n  return ((min_a2\
    \ + max_a3 - min_a) % 2 === 0)\n}\n\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpajqs6al4.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpajqs6al4.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978515
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tvar ab: number = Math.pow(a, 2) - Math.pow(b, 2),\n\t\tac: number\
    \ = Math.pow(a, 2) - Math.pow(c, 2),\n\t\tbc: number = Math.pow(b, 2) - Math.pow(c,\
    \ 2);\n\treturn ab == 0 && ac == 0 && bc == 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp9bte7_go.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9bte7_go.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978515
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (b * b) - (4 * c * c) >= 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwc2nzijb.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwc2nzijb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978515
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let ab: number = Math.sqrt(a ** 2 + b ** 2);\n    let bc: number\
    \ = Math.sqrt(b ** 2 + c ** 2);\n    let ac: number = Math.sqrt(a ** 2 + c **\
    \ 2);\n    if (ab * bc > ac * c) {\n        return true;\n    } else {\n     \
    \   return false;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpuaex7hb8.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpuaex7hb8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978515
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((a > b) ? (c > a && c > b) : (c > a && c > b))\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpjgr75npb.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjgr75npb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978516
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if (a === b) {\n    return b > c ? true : false;\n  }\n  if (b\
    \ === c) {\n    return c > a ? true : false;\n  }\n  if (c === b) {\n    return\
    \ a > c ? true : false;\n  }\n  return c > a ? true : false;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppculq32a.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppculq32a.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978516
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (b - c) >= -Math.max(a, b, c);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpu7rl5qzt.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu7rl5qzt.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const is_right_angle = (a * b) - ((a * c) - (b * c)) > 0\n  return\
    \ is_right_angle\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp043o4m7_.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp043o4m7_.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var a = Math.abs(a);\n  var b = Math.abs(b);\n  var c = Math.abs(c);\n\
    \  return a > b + c && b > a + c && c > a + b;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpun1w07lg.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpun1w07lg.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    \n    var ab = Math.sqrt(a*a + b*b);\n    var ac = Math.sqrt(a*a\
    \ + c*c);\n    var bc = Math.sqrt(b*b + c*c);\n    \n    return ( (ab + ac - bc)\
    \ === 0 ) ? true : false;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgzkb60a3.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgzkb60a3.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const side1 = (b * b) - (4 * a * c)\n  const side2 = (b * b) -\
    \ (4 * a)\n  return side1 === 0 || side2 === 0\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7nfadzcz.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7nfadzcz.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if (b === 0) return false;\n  if (c === 0) return false;\n  if\
    \ (Math.abs(Math.sqrt(Math.pow(b, 2) - (4 * a * c))) <= 0.001) return true;\n\
    \  return false;\n}\n</code>\n<|/ a tags=algorithm,math |>\n<| c |>\nThis seems\
    \ wrong to me in many ways. For instance, if the triangle is colinear you return\
    \ true, but in other cases they might return false (though I think this is rarely\
    \ the case). Also, even if the triangle is colinear you still return true even\
    \ if the three sides form an equilateral triangle (which would mean you always\
    \ return true). That doesn't seem correct, especially for a computer scientist\
    \ (my opinion).\n<|/ c |>\n<| c |>\nThe first one I agree with (it just returns\
    \ false if the triangle is colinear). However, a triangle that has one diagonal\
    \ and two equilateral sides would not return true in that case. It would only\
    \ be a false positive.\n<|/ c |>\n<| c |>\nAgreed, I missed that. Fixed it. I\
    \ think it is correct now.\n<|/ c |>\n<| c |>\nI think it needs to be `Math.abs(Math.sqrt(Math.pow(b,\
    \ 2) - 4 * a * c))) <= 0.001`\n<|/ c |>\n<| c |>\nIf `Math.abs(Math.sqrt(Math.pow(b,\
    \ 2) - 4 * a * c))) <= 0.001`, then it must be an equilateral triangle (as `b*b\
    \ - 4 * a * c = 0`). To me that would mean you always return `true`, even if the\
    \ triangle is a true equilateral triangle (like OP said in the comments).\n<|/\
    \ c |>\n<| a tags=algorithm,math |>\nThis problem is known as the\n  two-sided\
    \ polygon problem, where one side\n  is determined by the other\n\nThis can be\
    \ solved using boolean algebra. Here is the truth table:\n<code>\n| A | B | C\
    \ |\n| 0 | 0 | 1 |\n| 1 | 1 | 1 |\n| 0 | 1 | 0 |\n</code>\nSince C is only 1 or\
    \ 0, any solution involving A or B is also a solution involving C.  Hence any\
    \ solution involving A or B can be converted to one involving C. Hence this problem\
    \ can be solved using boolean algebra.\n<|/ a dscore=5 |>\n<| c |>\nHow does this\
    \ work? What does this mean? As a newbie, I don't really understand the math \n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyp23luyx.ts(16,2): error TS1110: Type expected.

    ../../../../../tmp/tmpyp23luyx.ts(16,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpyp23luyx.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpyp23luyx.ts(17,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpyp23luyx.ts(18,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpyp23luyx.ts(18,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,12): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,32): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,52): error TS1109: Expression expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,55): error TS1005: ''('' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,59): error TS1005: '')'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,68): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,71): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,80): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,84): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,110): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,116): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,121): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,127): error TS1005: '';'' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,148): error TS1005: '','' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,150): error TS1005: '','' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,156): error TS1005: '','' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,161): error TS1005: '','' expected.

    ../../../../../tmp/tmpyp23luyx.ts(19,164): error TS1005: '','' expected.

    ../'
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return a + b > c && a + c > b && b + c > a;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpigqqlc65.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpigqqlc65.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let deg_a = Math.degToRad(a);\n  let deg_c = Math.degToRad(c);\n\
    \  let deg_d = Math.degToRad(b);\n\n  if (Math.abs(deg_a) > Math.abs(deg_c) ||\
    \ Math.abs(deg_a) > Math.abs(deg_d)) {\n    return false;\n  }\n\n  let xc1 =\
    \ deg_c * Math.sin(deg_a) / Math.sin(deg_d);\n  let xc2 = deg_a * Math.cos(deg_c)\
    \ / Math.cos(deg_d);\n  let xc3 = deg_a * Math.cos(deg_d) / Math.cos(deg_c);\n\
    \  let xs1 = deg_c * Math.sin(deg_d) / Math.sin(deg_c);\n\n  let xs1 = xc1 + xc2\
    \ + xc3;\n  let xc1 = Math.cos(deg_d);\n  let xs2 = -xc1 + xc2 + xc3;\n\n  if\
    \ (Math.abs(xs1 - xc1) > 0.01) {\n    return false;\n  }\n  if (Math.abs(xs2 -\
    \ xc2) > 0.01) {\n    return false;\n  }\n  if (Math.abs(xs1 - xc3) > 0.01) {\n\
    \    return false;\n  }\n  return true;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0pms2nq5.ts(11,20): error TS2339: Property ''degToRad''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp0pms2nq5.ts(12,20): error TS2339: Property ''degToRad''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp0pms2nq5.ts(13,20): error TS2339: Property ''degToRad''
    does not exist on type ''Math''.

    ../../../../../tmp/tmp0pms2nq5.ts(19,7): error TS2451: Cannot redeclare block-scoped
    variable ''xc1''.

    ../../../../../tmp/tmp0pms2nq5.ts(22,7): error TS2451: Cannot redeclare block-scoped
    variable ''xs1''.

    ../../../../../tmp/tmp0pms2nq5.ts(24,7): error TS2451: Cannot redeclare block-scoped
    variable ''xs1''.

    ../../../../../tmp/tmp0pms2nq5.ts(25,7): error TS2451: Cannot redeclare block-scoped
    variable ''xc1''.

    '
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (b * b + c * c - (a * a) - (b * b)) == 0;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpajo5hev7.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpajo5hev7.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var ab: number = b - a\n    var ac: number = c - a\n    if (ab\
    \ < ac) {\n        if (ab > 0) {\n            if (ac > 0) {\n                return\
    \ false\n            } else {\n                return true\n            }\n  \
    \      } else {\n            return true\n        }\n    } else {\n        return\
    \ false\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpdf41ia0k.js:33:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpdf41ia0k.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (\n    Math.abs(b * b - a * c) ===\n    Math.sqrt(Math.abs(a\
    \ * a + b * b - a * a + c * c - b * b)) &&\n    Math.abs(a * a * b - a * b - a\
    \ * c) ===\n    Math.sqrt(Math.abs(a * a + b * b - a * a + c * c - b * b)) &&\n\
    \    Math.abs(b * b - a * c) ===\n    Math.sqrt(Math.abs(a * a + b * b - a * a\
    \ + c * c - b * b))\n  )\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpmmvton8l.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmmvton8l.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\t// The hypotenuse is sqrt(x^2 + y^2)\n\tconst hypot = Math.sqrt(a\
    \ * b + c * c);\n\treturn hypot === Math.sqrt(a * a + c * c);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpu4qy3ngq.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpu4qy3ngq.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((b - a) * (c - b) == (c - a) * (b - a))\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcpkkuu44.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcpkkuu44.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (\n        Math.sqrt((a ** 2) + (b ** 2)) == Math.sqrt((c\
    \ ** 2) + (a ** 2)) \n    )\n}\n</code>\n<|/ a tags=javascript,trigonometry |>\n\
    <| c |>\nYou might want to add some more explanation, rather than simply posting\
    \ a code dump.\n<|/ c |>\n<| c |>\nThis is the answer I was looking for. Thanks\
    \ for posting. I appreciate your time and effort :D\n<|/ c |>\n<| c |>\nIf anyone\
    \ is wondering how to use this answer in JavaScript or React or TypeScript, here\
    \ is an example:\n\n`var a = Math.sqrt(Math.pow(this.state.rx, 2) + Math.pow(this.state.ry,\
    \ 2));`\n`var b = Math.sqrt(Math.pow(this.state.rx + this.state.dx, 2) + Math.pow(this.state.ry\
    \ + this.state.dy, 2));`\n`var c = Math.sqrt(Math.pow(this.state.rx - this.state.dx,\
    \ 2) + Math.pow(this.state.ry - this.state.dy, 2));`\n`var isRightAngle = Math.sqrt((a**2)\
    \ + (b**2) - (c**2)) >= 0;`\n<|/ c |>\n<| a dscore=4 |>\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpszpwwbcx.ts(15,2): error TS1110: Type expected.

    ../../../../../tmp/tmpszpwwbcx.ts(15,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpszpwwbcx.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpszpwwbcx.ts(16,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpszpwwbcx.ts(17,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpszpwwbcx.ts(17,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,23): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,28): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,53): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,58): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,65): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,73): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,75): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(18,80): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(19,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmpszpwwbcx.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpszpwwbcx.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpszpwwbcx.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpszpwwbcx.ts(20,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpszpwwbcx.ts(21,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(21,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(21,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpszpwwbcx.ts(21,20):'
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (b - a) * (c - b) <= 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp15tht730.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp15tht730.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978502
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  const ab: number = b - a\n  const bc: number = c - b\n  const ab_square:\
    \ number = ab * ab\n  const bc_square: number = bc * bc \n  return ab_square +\
    \ bc_square <= 0;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplfq07zic.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplfq07zic.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (b == c)\n        return false\n\n    var s = a * a + b *\
    \ b - c * c\n    var sq = s * s\n\n    if (sq < 0)\n        return false\n\n \
    \   var epsilon = 1e-12\n    if (sq < epsilon)\n        return true\n\n    var\
    \ d = b * b - a * c\n\n    if (Math.abs(d) < epsilon)\n        return true\n\n\
    \    var sq2 = sq / 2\n    return Math.sign(b) == Math.sign(c / 2) == Math.sign(a\
    \ * sq2 - b * sq2)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp861az2j3.ts(30,17): error TS2551: Property ''sign''
    does not exist on type ''Math''. Did you mean ''sin''?

    ../../../../../tmp/tmp861az2j3.ts(30,33): error TS2551: Property ''sign'' does
    not exist on type ''Math''. Did you mean ''sin''?

    ../../../../../tmp/tmp861az2j3.ts(30,53): error TS2551: Property ''sign'' does
    not exist on type ''Math''. Did you mean ''sin''?

    '
  timestamp: 1659978517
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let left_angle = Math.abs(180 * Math.acos((a + b + c) / sqrt(a\
    \ * a + b * b + c * c)) / Math.PI);\n    let right_angle = Math.abs(180 * Math.acos((a\
    \ - b - c) / sqrt(a * a + b * b + c * c)) / Math.PI);\n    return (left_angle\
    \ <= right_angle);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphjppfo3d.ts(11,61): error TS2304: Cannot find name
    ''sqrt''.

    ../../../../../tmp/tmphjppfo3d.ts(12,62): error TS2304: Cannot find name ''sqrt''.

    '
  timestamp: 1659978517
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (is_number(a) && is_number(b) && is_number(c)) {\n\t\treturn\
    \ ((Math.pow(b, 2) + Math.pow(c, 2)) == Math.pow(a, 2));\n\t} else {\n\t\treturn\
    \ false;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjmrw7ryy.ts(11,6): error TS2304: Cannot find name
    ''is_number''.

    ../../../../../tmp/tmpjmrw7ryy.ts(11,22): error TS2304: Cannot find name ''is_number''.

    ../../../../../tmp/tmpjmrw7ryy.ts(11,38): error TS2304: Cannot find name ''is_number''.

    '
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet s1: number = Math.sqrt((c * c) + (b * b));\n\tlet s2: number\
    \ = Math.sqrt((a * a) + (c * c));\n\tif (Math.abs(s1 - s2) < 0.0000001) {\n\t\t\
    return true;\n\t}\n\treturn false;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpflfph2i0.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpflfph2i0.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if (b === 0 || c === 0) {\n    return false;\n  }\n  if (c > Math.pow(b,\
    \ 2)) {\n    // no 90 degree right angle\n    return false;\n  }\n  if (Math.abs(a\
    \ - (b * b + c * c - a * b * c)) < 1) {\n    // no right angle\n    return false;\n\
    \  }\n  return true;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyrnr9gph.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyrnr9gph.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978517
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((Math.pow(a, 2) + Math.pow(b, 2)) == Math.pow(c, 2))\n\
    }\n</cell>\n<cell>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpnk4blza6.ts(13,2): error TS1110: Type expected.

    ../../../../../tmp/tmpnk4blza6.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpnk4blza6.ts(15,9): error TS1005: '';'' expected.

    '
  timestamp: 1659978517
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tlet ab = a - b;\n\tlet bc = b - c;\n\treturn (ab + bc) > 0;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp0ayrfby8.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0ayrfby8.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978518
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    const ab: number = b - a\n    const ac: number = c - a\n    const\
    \ bc: number = b - c\n    const ca: number = a - c\n    const cd: number = c -\
    \ d\n\n    return (\n        ab * ab > 0 &&\n        ac * ac > 0 &&\n        ab\
    \ * ac > 0 &&\n        ab * bc > 0 &&\n        ac * cd > 0 &&\n        ac * cd\
    \ > 0 &&\n        ab * bc > 0 &&\n        bc * cd > 0 &&\n        ab * cd > 0\
    \ &&\n        ab * cd > 0\n    )\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk2g6anup.ts(15,28): error TS2304: Cannot find name
    ''d''.

    '
  timestamp: 1659978518
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // https://stackoverflow.com/questions/563198/how-do-you-check-if-a-given-point-is-in-a-triangle\n\
    \    if (Math.abs(a) < 1 && Math.abs(b) < 1 && Math.abs(c) < 1) {\n        return\
    \ false\n    }\n    const ab = a - b\n    const bc = b - c\n    const cd = c -\
    \ a\n    return (\n        ((ab === 0 && bc === 0 && cd === 0) || (bc === 0 &&\
    \ ab === 0 && cd === 0)) ||\n        ((bc === 0 && ab === 0 && cd === 0) || (cd\
    \ === 0 && ab === 0 && bc === 0)) ||\n        ((cd === 0 && ab === 0 && bc ===\
    \ 0) || (ab === 0 && cd === 0) || (bc === 0 && ab === 0))\n    )\n}\nexport {\n\
    \    right_angle_triangle,\n}\n</pre>\n        </article>\n    </section>\n\n\n\
    \n\n</div>\n\n<nav>\n    <h2><a href=\"index.html\">Home</a></h2><h3>Modules</h3><ul><li><a\
    \ href=\"module-bauble.html\">bauble</a></li><li><a href=\"module-figtree.html\"\
    >figtree</a></li><li><a href=\"module-tree.html\">tree</a></li></ul><h3>Classes</h3><ul><li><a\
    \ href=\"module-bauble.Bauble.html\">Bauble</a></li><li><a href=\"module-figtree.FigTree.html\"\
    >FigTree</a></li><li><a href=\"module-tree.Tree.html\">Tree</a></li><li><a href=\"\
    module-tree-Node.html\">Node</a></li><li><a href=\"module-tree-Router.html\">Router</a></li><li><a\
    \ href=\"module-tree-Tracer.html\">Tracer</a></li></ul><h3>Global</h3><ul><li><a\
    \ href=\"global.html#branch\">branch</a></li><li><a href=\"global.html#branchLabel\"\
    >branchLabel</a></li><li><a href=\"global.html#branchPath\">branchPath</a></li><li><a\
    \ href=\"global.html#circle\">circle</a></li><li><a href=\"global.html#dateToYMD\"\
    >dateToYMD</a></li><li><a href=\"global.html#debug\">debug</a></li><li><a href=\"\
    global.html#draw\">draw</a></li><li><a href=\"global.html#endsWith\">endsWith</a></li><li><a\
    \ href=\"global.html#getEnv\">getEnv</a></li><li><a href=\"global.html#getRandom\"\
    >getRandom</a></li><li><a href=\"global.html#getSteps\">getSteps</a></li><li><a\
    \ href=\"global.html#gt\">gt</a></li><li><a href=\"global.html#init\">init</a></li><li><a\
    \ href=\"global.html#initFigTree\">initFigTree</a></li><li><a href=\"global.html#insert\"\
    >insert</a></li><li><a href=\"global.html#isBauble\">isBauble</a></li><li><a href=\"\
    global.html#isFigTree\">isFigTree</a></li><li><a href=\"global.html#isTree\">isTree</a></li><li><a\
    \ href=\"global.html#isValidEnv\">isValidEnv</a></li><li><a href=\"global.html#label\"\
    >label</a></li><li><a href=\"global.html#leapYear\">leapYear</a></li><li><a href=\"\
    global.html#least\">least</a></li><li><a href=\"global.html#legend\">legend</a></li><li><a\
    \ href=\"global.html#makeEdges\">makeEdges</a></li><li><a href=\"global.html#makeGraph\"\
    >makeGraph\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphiouz8e1.ts(27,2): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(27,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmphiouz8e1.ts(28,11): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmphiouz8e1.ts(29,7): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmphiouz8e1.ts(34,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmphiouz8e1.ts(37,12): error TS1005: ''>'' expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,107): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,157): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,201): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,281): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,339): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,388): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,437): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,490): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,543): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,615): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,673): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,729): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,777): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,831): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,877): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,921): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,973): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,1021): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,1075): error TS1110: Type expected.

    ../../../../../tmp/tmphiouz8e1.ts(37,1127): error TS1110: Type expected.

    ../../../.'
  timestamp: 1659978519
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // https://stackoverflow.com/a/271930/6773500\n    // https://stackoverflow.com/a/478280\n\
    \    // https://stackoverflow.com/a/538665\n    let ax = Math.sqrt(a * a)\n  \
    \  let ay = Math.sqrt(a * a - b * b)\n    let bx = Math.sqrt(b * b)\n    let by\
    \ = Math.sqrt(b * b - c * c)\n    let cx = Math.sqrt(c * c)\n    let cy = Math.sqrt(c\
    \ * c - a * a)\n    return ay >= bx && bx >= cx && cy >= ax\n}\n</code>\n<|/ a\
    \ tags=geometry,javascript,algorithm |>\n<| c |>\nThis answer would be more helpful\
    \ if you could explain how it works.\n<|/ c |>\n<| a |>\nI used this code to solve\
    \ my problem after a long search I found this solution thanks.\n<code>\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpys9stvz0.ts(22,2): error TS1110: Type expected.

    ../../../../../tmp/tmpys9stvz0.ts(22,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpys9stvz0.ts(23,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpys9stvz0.ts(23,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpys9stvz0.ts(24,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpys9stvz0.ts(24,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,22): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,27): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,35): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,38): error TS1005: ''('' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,42): error TS1005: '')'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,48): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,56): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,60): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(25,63): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(26,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmpys9stvz0.ts(26,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpys9stvz0.ts(26,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpys9stvz0.ts(27,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpys9stvz0.ts(27,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpys9stvz0.ts(28,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(28,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(28,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(28,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpys9stvz0.ts(28,21):'
  timestamp: 1659978519
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (a === 0) return (c >= b && c >= a + b) || (c + a >= b);\n\
    \    if (b === 0) return (c >= a && c >= a + b) || (c + b >= a);\n    if (c ===\
    \ 0) return (a >= b && a >= a + b) || (a + c >= b);\n    return true;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpg_3bk4k9.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpg_3bk4k9.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978519
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if((b * b - c * a) == 0) {\n    return false\n  }\n  else if((b\
    \ * b + c * a) == 0) {\n    return false\n  }\n  else {\n    console.log(\"a:\
    \ \", a, \"b: \", b, \"c: \", c, \"ab: \", b * b, \"ac: \", c * a)\n    let a1\
    \ = (b * b - c * a) / b * b\n    let a2 = (c * a - b * b) / c * a\n    console.log(\"\
    a1: \", a1, \"a2: \", a2)\n    if(a1 > a2) {\n      return true\n    }\n    else\
    \ {\n      return false\n    }\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpcz5wtmh_.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcz5wtmh_.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'a:  3 b:  4 c:  5 ab:  16 ac:  15

    a1:  1 a2:  -0.6000000000000001

    a:  1 b:  2 c:  3 ab:  4 ac:  3

    a1:  1 a2:  -0.3333333333333333

    '
  timestamp: 1659978519
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (a + b > c && a + c > b && b + c > a)\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp3n22ele2.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3n22ele2.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978519
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let sum = a+b+c\n    return (Math.abs(a-b) <= sum && Math.abs(a-c)\
    \ <= sum && Math.abs(b-c) <= sum)\n}\n\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvuitv5o7.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvuitv5o7.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978519
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // https://stackoverflow.com/questions/9272045/check-if-a-triangle-is-right-angled\n\
    \    const delta = Math.abs(b - c);\n    const s = (b + c) / 2;\n    const c1\
    \ = Math.sqrt(a * a - s * s);\n    const c2 = Math.sqrt(b * b - c * c);\n    const\
    \ c3 = Math.sqrt(c * c - a * a);\n    // Check if it's a right-angled triangle\n\
    \    if (c2 * c3 >= delta) {\n        return Math.abs(delta) >= c1 * c1; // Check\
    \ if delta is right angle\n    }\n    return false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmplrwno8wh.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplrwno8wh.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978519
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if (a > b+c || b > a+c || c > b+a) { return false; }\n  const ab:\
    \ number = Math.sqrt(a*a + b*b);\n  const bc: number = Math.sqrt(b*b + c*c);\n\
    \  const ac: number = Math.sqrt(a*a + c*c);\n  return (ab > bc + ac);\n}\n\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpag64adhy.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpag64adhy.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (a == 0 || b == 0 || c == 0 || a == b || a == c || b == c) return\
    \ true;\n\telse return a * a + b * b == c * c;\n}\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpz70mh1bl.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpz70mh1bl.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978519
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    // First we determine the sign of the angles:\n    // If the\
    \ first side is positive, our angle is 45-degrees or greater.\n    // If the second\
    \ side is positive, our angle is 90-degrees or greater.\n    // If the third side\
    \ is positive, our angle is 135-degrees or greater.\n    // We only allow a triangle\
    \ to be created if the angles are all greater\n    // than 90-degrees or all less\
    \ than 135-degrees.\n    // The reason we only allow a triangle to be created\
    \ if all three angles are \n    // greater than 135-degrees is because this would\
    \ indicate that the third \n    // side is not oriented correctly.\n    // The\
    \ reason we only allow a triangle to be created if all three angles are \n   \
    \ // greater than 90-degrees is because this would indicate that the first \n\
    \    // side is not oriented correctly.\n    var sign_a = isPositive(a) ? 1 :\
    \ -1;\n    var sign_b = isPositive(b) ? 1 : -1;\n    var sign_c = isPositive(c)\
    \ ? 1 : -1;\n    \n    // To ensure the correct orientation of the triangle we\
    \ must ensure that \n    // each of the three angles are greater than or equal\
    \ to 135-degrees. \n    // To ensure this we check that the sum of the two absolute\
    \ values is \n    // greater than or equal to 135 and that the sum of the absolute\
    \ values is \n    // less than or equal to 180.\n    // To ensure this we check\
    \ that both of the summed absolute values are \n    // greater than or equal to\
    \ 135-degrees and less than or equal to 180.\n    // This ensures that the triangle\
    \ is oriented correctly if the sum of \n    // the angles is greater than or equal\
    \ to 135-degrees.\n    // We also have to account for the fact that when the sum\
    \ is \n    // greater than or equal to 180 we must add the two angles again to\
    \ \n    // ensure the sum is greater than or equal to 180.\n    // The reason\
    \ we add the two angles again is because this ensures that \n    // when the sum\
    \ is greater than or equal to 180 we also have to add the \n    // second angle\
    \ to ensure the sum is greater than or equal to 180.\n    // The reason we add\
    \ the second angle is because this ensures that when the \n    // sum is greater\
    \ than or equal to 180 we also have to add the second angle \n    // to ensure\
    \ the sum is greater than or equal to 180.\n    return ((sign_a >= 0 && sign_b\
    \ <= 0 && sign_c <= 0) || (sign_a <= 0 && sign_b >= 0 && sign_c <= 0) || (sign_a\
    \ <= 0 && sign_b <= 0 && sign_c >= 0) || (sign_a >= 0 && sign_b >= 0 && sign_c\
    \ >= 0))\n            && (Math.abs(a + b) <= Math.abs(a + c))\n            &&\
    \ (Math.abs(a + c) <= Math.abs(b + c))\n            && (Math.abs(\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpahurwxpj.ts(49,9): error TS1005: '','' expected.

    ../../../../../tmp/tmpahurwxpj.ts(68,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659978519
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (Math.abs(Math.sin((a - b) / Math.PI)) < 0.3 &&\n\t\t\t\
    Math.abs(Math.sin((a - c) / Math.PI)) < 0.3 &&\n\t\t\tMath.abs(Math.sin((b - c)\
    \ / Math.PI)) < 0.3); \n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpgbk4_0ub.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpgbk4_0ub.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    const a = Math.abs(a)\n    const b = Math.abs(b)\n    const c\
    \ = Math.abs(c)\n    return ((b * b) - ((a * a) * (c - c))) <= 0 && (((a - a)\
    \ * (b - b)) <= 0 || (b * b) - ((a * a) * (a - a)) <= 0)\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1imjzqnv.ts(10,31): error TS2300: Duplicate identifier
    ''a''.

    ../../../../../tmp/tmp1imjzqnv.ts(10,42): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmp1imjzqnv.ts(10,53): error TS2300: Duplicate identifier ''c''.

    ../../../../../tmp/tmp1imjzqnv.ts(11,11): error TS2300: Duplicate identifier ''a''.

    ../../../../../tmp/tmp1imjzqnv.ts(12,11): error TS2300: Duplicate identifier ''b''.

    ../../../../../tmp/tmp1imjzqnv.ts(13,11): error TS2300: Duplicate identifier ''c''.

    '
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\t\n\tif (a == 0 || b == 0 || c == 0) return false;\n\t\n\treturn\
    \ (a + b > c + a && b + c > a + b && a + c > b + a && b + c > a + b);\n}\n\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp7xadobdv.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7xadobdv.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    if (a === 0 || b === 0 || c === 0) return false;\n    let ab\
    \ = a - b;\n    let bc = b - c;\n    let cd = c - d;\n    // If either of the\
    \ sides is zero then there is no right-angle triangle\n    if (ab === 0 && bc\
    \ === 0 && cd === 0) return false;\n    // If the hypotenuse is zero there is\
    \ no right-angle triangle\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab)\
    \ < Math.abs(cd)) return false;\n    // If the hypotenuse is zero there is no\
    \ right-angle triangle\n    if (Math.abs(bc) < Math.abs(cd)) return false;\n \
    \   // At this point the hypotenuse is guaranteed to be non-zero\n    // so we\
    \ can continue\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab) < Math.abs(cd))\
    \ return false;\n    // At this point the hypotenuse is guaranteed to be non-zero\n\
    \    // so we can continue\n    if (Math.abs(bc) < Math.abs(cd)) return false;\n\
    \    // At this point the hypotenuse is guaranteed to be non-zero\n    // so we\
    \ can continue\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab) < Math.abs(cd))\
    \ return false;\n    // At this point the hypotenuse is guaranteed to be non-zero\n\
    \    // so we can continue\n    if (Math.abs(bc) < Math.abs(cd)) return false;\n\
    \    // At this point the hypotenuse is guaranteed to be non-zero\n    // so we\
    \ can continue\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab) < Math.abs(cd))\
    \ return false;\n    // At this point the hypotenuse is guaranteed to be non-zero\n\
    \    // so we can continue\n    if (Math.abs(bc) < Math.abs(cd)) return false;\n\
    \    // At this point the hypotenuse is guaranteed to be non-zero\n    // so we\
    \ can continue\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab) < Math.abs(cd))\
    \ return false;\n    // At this point the hypotenuse is guaranteed to be non-zero\n\
    \    // so we can continue\n    if (Math.abs(bc) < Math.abs(cd)) return false;\n\
    \    // At this point the hypotenuse is guaranteed to be non-zero\n    // so we\
    \ can continue\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab) < Math.abs(cd))\
    \ return false;\n    // At this point the hypotenuse is guaranteed to be non-zero\n\
    \    // so we can continue\n    if (Math.abs(bc) < Math.abs(cd)) return false;\n\
    \    // At this point the hypotenuse is guaranteed to be non-zero\n    // so we\
    \ can continue\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab) < Math.abs(cd))\
    \ return false;\n    // At this point the hypotenuse is guaranteed to be non-zero\n\
    \    // so we can continue\n    if (Math.abs(bc) < Math.abs(cd)) return false;\n\
    \    // At this point the hypotenuse is guaranteed to be non-zero\n    // so we\
    \ can continue\n    if (Math.abs(ab) < Math.abs(bc) && Math.abs(ab) < Math.abs(cd))\
    \ return false;\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpivnn6bys.ts(79,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return (((b - a) * (c - b)) <= 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpcgfc13u4.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpcgfc13u4.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.abs(Math.sqrt(a * a + b * b) - c) >\n\t\tMath.sqrt(a *\
    \ a + b * b))\n\t\treturn false;\n\n\treturn true;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpub98674i.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpub98674i.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if (a >= b && a >= c) {\n    const aa: number = a;\n    const bb:\
    \ number = b;\n    const cc: number = c;\n    return aa < bb && aa < cc || bb\
    \ < cc && bb < aa;\n  } else if (b >= a && b >= c) {\n    const aa: number = b;\n\
    \    const bb: number = a;\n    const cc: number = c;\n    return aa < bb && aa\
    \ < cc || bb < cc && bb < aa;\n  } else {\n    const aa: number = a;\n    const\
    \ bb: number = b;\n    const cc: number = c;\n    return aa < bb && bb < cc;\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmppq6xme0y.js:34:12)\n    at\
    \ Object.<anonymous> (/tmp/tmppq6xme0y.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (Math.abs(Math.sqrt(a * a + b * b - c * c)) === 2 * Math.sqrt(a\
    \ * a + b * b - c * c));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpp_vdu8of.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpp_vdu8of.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    const absqr = (a * a + b * b) // ab is square of a\n    const\
    \ acsqr = (a * a + c * c) // ac is square of a\n    const bcsqr = (b * b + c *\
    \ c) // bc is square of b\n    return absqr + acsqr === bcsqr // Check if sum\
    \ of ab and ac equals sum of bc and c\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpznyblfye.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpznyblfye.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  let ab = a - b;\n  let ac = a - c;\n  let bc = b - c;\n  return\
    \ (Math.abs(ab * ac) < 1e-10 && Math.abs(bc * b) < 1e-10);\n}\n\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpkv0a4kes.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkv0a4kes.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return Math.abs(b * b - 4 * a * c) >= 0\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpyclckuzq.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpyclckuzq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978520
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return ((b - a) * (c - b)) > 0;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmp9yevdvlb.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9yevdvlb.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  var AB = b-a;\n  var AC = c-a;\n  var AB_AC = Math.sqrt(AB*AB +\
    \ AC*AC);\n  return AB_AC >= 0;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpg_a7xdbx.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpg_a7xdbx.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.abs(a - b) <= 1 && Math.abs(a - c) <= 1 &&\n\t\tMath.abs(b\
    \ - c) <= 1) {\n\t\treturn true;\n\t} else {\n\t\treturn false;\n\t}\n}\n\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpfd3wq77c.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpfd3wq77c.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  // If the length of the sides is 0, then it is a right angle triangle.\n\
    \  if (a === 0 && b === 0 && c === 0) {\n    return true\n  }\n  \n  // Otherwise,\
    \ if the lengths of the sides are equal, then it's a right angle\n  // triangle.\n\
    \  else if (a === b) {\n    return true\n  }\n  \n  // Otherwise, if the length\
    \ of the hypotenuse is longer than the side lengths\n  // of the two opposite\
    \ sides, then it's a right angle triangle.\n  else if (a > c || (a === c && b\
    \ > b)) {\n    return true\n  }\n  \n  return false\n}\n\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpl6a0tnwp.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpl6a0tnwp.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return ((b*b + c*c - a*a) >= 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpzpzy9ib0.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpzpzy9ib0.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    return (a + b > c) && (a + c > b) && (b + c > a); \n}\n</code>\n\
    <|/ a dscore=0 tags=javascript,trigonometry,math,geometry |>\n<| a tags=javascript,trigonometry,math,geometry\
    \ |>\nYou have to do some maths first:\n\nDefine 3 points on the unit square,\
    \ P1, P2 and P3.\nCalculate the angle between the lines connecting each point\
    \ to the opposite points.\nIf this angle is less than 45 degrees, P1, P2 and P3\
    \ form a triangle.\nIf this angle is greater than 45 degrees, P1, P2 and P3 form\
    \ an equilateral triangle.\n<|/ a dscore=0 |>\n<| a dscore=0 |>\nThis is not the\
    \ only solution, but I find it interesting\nI believe it is the most straight\
    \ forward and accurate to solve the problem\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpx968el32.ts(13,2): error TS1110: Type expected.

    ../../../../../tmp/tmpx968el32.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpx968el32.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpx968el32.ts(14,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpx968el32.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpx968el32.ts(15,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(15,50): error TS1109: Expression expected.

    ../../../../../tmp/tmpx968el32.ts(16,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(16,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(16,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(16,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(16,27): error TS1005: '')'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,17): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,20): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,29): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,44): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,48): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(18,51): error TS1003: Identifier expected.

    ../../../../../tmp/tmpx968el32.ts(19,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(19,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(19,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(19,29): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(19,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(19,39): error TS1005: '';'' expected.

    ../../../../../tmp/tmpx968el32.ts(19,50): error TS1005: '';'' expected.

    ../../../../.'
  timestamp: 1659978521
- exit_code: 2
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2)) ===\n    Math.sqrt(Math.pow(c,\
    \ 2) + Math.pow(b, 2));\n}\n```\n\n---\n## Questions\n\n- Explain how you would\
    \ calculate `e`\n- [How could you use mathematical functions to calculate pi](https://docs.google.com/presentation/d/1rzlCjP7pZCg4wRYR6oJmC8Ej0QHvWpzZNyM0UGt4o/pub?start=false)\n\
    - [How do you find common factors between two numbers?](https://www.quora.com/How-do-you-find-common-factors-between-two-numbers)\n\
    - [How to calculate trig functions in javascript](https://www.quora.com/How-do-you-calculate-trigonometric-functions-in-javascript)\n\
    - [How to implement a factorial function in javascript](https://www.quora.com/How-do-you-implement-a-factorial-function-in-javascript)\n\
    - [How can you create a list from an array in javascript](https://www.quora.com/How-can-you-create-a-list-from-an-array-in-javascript)\n\
    - [How do you check whether a number is prime or not?](https://www.quora.com/How-do-you-check-whether-a-number-is-prime-or-not)\n\
    - [How do you find the largest palindromic number below a number n](https://www.quora.com/How-do-you-find-the-largest-palindromic-number-below-a-number-n)\n\
    - [How to write a function that returns true if the number passed is prime and\
    \ false if it is not](https://www.quora.com/How-do-you-write-a-function-that-returns-true-if-the-number-passed-is-prime-and-false-if-it-is-not)\n\
    - [How do you find all the palindromic numbers below a certain number n](https://www.quora.com/How-do-you-find-all-the-palindromic-numbers-below-a-certain-number-n)\n\
    \n---\n## Practice\n\n- [How to calculate Pi with Javascript](https://www.quora.com/How-do-you-calculate-Pi-with-Javascript)\n\
    - [How to create a factorial function](https://www.quora.com/How-do-you-create-\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuo33h8oj.ts(19,36): error TS1005: '';'' expected.

    ../../../../../tmp/tmpuo33h8oj.ts(54,8): error TS1160: Unterminated template literal.

    '
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    var left_side = a - b;\n    var right_side = c - b;\n    var\
    \ is_right_angle = Math.abs(right_side) >= Math.abs(left_side);\n    return is_right_angle;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpvkrcig4c.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpvkrcig4c.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\treturn (c-a) * (c-b) <= 0;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpynm66t67.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpynm66t67.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let a1 = Math.abs(a), b1 = Math.abs(b), c1 = Math.abs(c);\n \
    \   return a1 > b1 && b1 > c1 && (a1 + b1 + c1 == a * b * c);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n\
    \  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpwqxxx_v9.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwqxxx_v9.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  return b * b - 4 * a * c > 0\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmp03jaxpv5.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp03jaxpv5.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n  if (a >= b + c || b >= a + c || c >= a + b) {\n    return false\n\
    \  } else {\n    return true\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = right_angle_triangle;\n\
    \  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpwnkoqyfh.js:24:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpwnkoqyfh.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978521
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n    let rad = Math.sqrt(Math.pow(a, 2) + Math.pow(b, 2));\n    let\
    \ angle = 180 - (Math.atan2(b, a) / rad);\n    return angle > 90 && angle < 270;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = right_angle_triangle;\n  assert.deepEqual(candidate(3,\
    \ 4, 5),true);\n  assert.deepEqual(candidate(1, 2, 3),false);\n  assert.deepEqual(candidate(10,\
    \ 6, 8),true);\n  assert.deepEqual(candidate(2, 2, 2),false);\n  assert.deepEqual(candidate(7,\
    \ 24, 25),true);\n  assert.deepEqual(candidate(10, 5, 7),false);\n  assert.deepEqual(candidate(5,\
    \ 12, 13),true);\n  assert.deepEqual(candidate(15, 8, 17),true);\n  assert.deepEqual(candidate(48,\
    \ 55, 73),true);\n  assert.deepEqual(candidate(1, 1, 1),false);\n  assert.deepEqual(candidate(2,\
    \ 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\ntrue\n\nshould\
    \ loosely deep-equal\n\nfalse\n    at test (/tmp/tmpkjyktyus.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpkjyktyus.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: true,\n  expected:\
    \ false,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978522
- exit_code: 1
  program: "//Given the lengths of the three sides of a triangle. Return true if the\
    \ three\n// sides form a right-angled triangle, false otherwise.\n// A right-angled\
    \ triangle is a triangle in which one angle is right angle or \n// 90 degree.\n\
    // Example:\n// >>> right_angle_triangle(3, 4, 5)\n// true\n// >>> right_angle_triangle(1,\
    \ 2, 3)\n// false\nfunction right_angle_triangle(a: number, b: number, c: number):\
    \ boolean {\n\tif (Math.abs(a - b) <= 1 && Math.abs(b - c) <= 1 && Math.abs(c\
    \ - a) <= 1) {\n\t\treturn true;\n\t}\n\treturn false;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = right_angle_triangle;\n  assert.deepEqual(candidate(3, 4, 5),true);\n  assert.deepEqual(candidate(1,\
    \ 2, 3),false);\n  assert.deepEqual(candidate(10, 6, 8),true);\n  assert.deepEqual(candidate(2,\
    \ 2, 2),false);\n  assert.deepEqual(candidate(7, 24, 25),true);\n  assert.deepEqual(candidate(10,\
    \ 5, 7),false);\n  assert.deepEqual(candidate(5, 12, 13),true);\n  assert.deepEqual(candidate(15,\
    \ 8, 17),true);\n  assert.deepEqual(candidate(48, 55, 73),true);\n  assert.deepEqual(candidate(1,\
    \ 1, 1),false);\n  assert.deepEqual(candidate(2, 2, 10),false);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nfalse\n\nshould\
    \ loosely deep-equal\n\ntrue\n    at test (/tmp/tmpnfi9laad.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpnfi9laad.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: false,\n \
    \ expected: true,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659978522

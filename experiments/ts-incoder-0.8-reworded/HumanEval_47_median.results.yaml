language: ts
name: HumanEval_47_median
results:
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length < 1) return NaN;\n  const middle = l.length\
    \ / 2;\n  const sorted = l.slice().sort((a: number, b: number) => a - b);\n  if\
    \ (middle + 1 < sorted[0]) {\n    return sorted[(middle + 1) + 1];\n  }\n  return\
    \ sorted[middle];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmplmso7vb2.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmplmso7vb2.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    let arr: number[] = [];\n    l.forEach((v) => {\n \
    \       if (isNaN(v)) {\n            arr.push(0);\n        }\n        else {\n\
    \            arr.push(v);\n        }\n    });\n    if (arr.length === 0) {\n \
    \       return 0;\n    }\n    let sortedArray = arr.sort(function (a, b) { return\
    \ a - b; });\n    var medianValue = sortedArray[sortedArray.length / 2];\n   \
    \ return medianValue;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpbebms6ty.js:26:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpbebms6ty.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0) {\n        return NaN;\n    }\n\
    \    const n = l.length; // This relies on length to be at least 1.\n    let median\
    \ = l[Math.floor(n / 2)];\n    for (let i = Math.floor(n / 2); i >= 0; i--) {\n\
    \        median = l[i];\n        if (median < l[i - 1]) {\n            break;\n\
    \        }\n    }\n    return median;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpy34o4iec.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy34o4iec.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let l = l.slice();\n  let n = l.length;\n  let sorted\
    \ = l.slice().sort(function (a, b) { return a - b; });\n  let mid = sorted[n/2\
    \ | 0];\n  let count = 0;\n  for (let i = 0; i < n; i += 1) {\n    if (sorted[i]\
    \ === mid) {\n      count += 1;\n    }\n  }\n  return count ? (sorted[n - count]\
    \ | 0) * 1.0 / (n + 1) : NaN;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp37fg3b4c.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmp37fg3b4c.ts(7,7): error TS2300: Duplicate identifier ''l''.

    '
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l.length === 0) {\n\t\tthrow new RangeError(\"length\
    \ should be > 0\");\n\t}\n\tconst sorted = l.slice().sort((a, b) => {\n\t\treturn\
    \ a - b;\n\t});\n\tif (sorted.length === 0) {\n\t\treturn NaN;\n\t}\n\tconst midIndex\
    \ = sorted.length / 2;\n\treturn sorted[midIndex];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp7_xxrppf.js:22:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp7_xxrppf.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 === 0) {\n    // Even\n    return l[Math.floor(l.length\
    \ / 2)]\n  }\n  // Odd\n  return median(l.slice(Math.floor(l.length / 2), l.length))\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmphhfaai07.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphhfaai07.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sortedArr = l.slice().sort((a, b) => a - b);\n  if\
    \ (sortedArr.length % 2 === 0) {\n    return sortedArr[Math.floor(sortedArr.length\
    \ / 2)];\n  } else {\n    return (sortedArr[Math.floor(sortedArr.length / 2) -\
    \ 1] + sortedArr[Math.floor(sortedArr.length / 2)]) / 2;\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpy4ns1laq.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy4ns1laq.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tlet sort: number[] = [...l].sort((a, b) => a - b);\n\t\
    return sort[(sort.length * .5) >>> 0];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpqontk4o5.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqontk4o5.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sortedL = l.sort();\n  let mid = sortedL.length /\
    \ 2;\n  if (sortedL.length % 2) {\n    return sortedL[mid];\n  }\n  else {\n \
    \   let m1 = sortedL[mid];\n    let m2 = sortedL[mid+1];\n    return (m1 + m2)\
    \ / 2;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp0p57a8do.js:21:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp0p57a8do.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l.length % 2 === 0\n    ? (l[l.length / 2 - 1]\
    \ + l[l.length / 2]) / 2\n    : (l[Math.floor(l.length / 2)] + l[Math.ceil(l.length\
    \ / 2)])\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpb6cuw81w.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpb6cuw81w.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(`Cannot compute\
    \ median of an empty list.`);\n  }\n  const sortedArr = l.slice().sort((a, b)\
    \ => a - b);\n  const middle = Math.floor(sortedArr.length / 2);\n  return sortedArr[middle];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmptizbj1hh.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptizbj1hh.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    const mid = l.length / 2;\n    if (l.length % 2)\n\
    \        return l[mid];\n    else\n        return Math.ceil(l.length / 2);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpi_xxvqt4.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpi_xxvqt4.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0)\n        throw new Error('Cannot\
    \ find median of an empty array');\n\n    if (l.length === 1)\n        return\
    \ l[0];\n\n    const m = l.splice((l.length - 1) >> 1);\n    const sortfn = function(a,\
    \ b) {\n        return a < b ? -1 : (a > b ? 1 : 0);\n    };\n    m.sort(sortfn);\n\
    \    const l2 = l.slice((l.length * 2) >> 1);\n    l2.sort(sortfn);\n\n    return\
    \ (m[0] + l2[0]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp1dcba0ev.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1dcba0ev.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length <= 1) return l[0];\n  var mid = l.length\
    \ / 2;\n  var left = l[Math.floor(mid)];\n  var right = l[Math.ceil(mid)];\n \
    \ return (left < right) ? left : right;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp_xv3puk2.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_xv3puk2.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length <= 1) {\n    return l[0];\n  }\n  l.sort();\n\
    \  var middle = Math.floor(l.length / 2);\n  var median = l[middle];\n  if (middle\
    \ + 1 < l.length) {\n    median += (l[middle + 1] - median) * 0.5;\n  }\n  return\
    \ median;\n}\n</code>\n<|/ a |>\n<| c |>\nWhat if middle is equal to length-1\n\
    <|/ c |>\n<| c |>\nThat's why I put in that if block.  Think about a case where\
    \ length is even.  `if (middle + 1 < l.length)` would always be false.  So what\
    \ should the median of the even length array be?  You have a case, so handle it.\n\
    <|/ c |>\n<| c |>\nActually, you're right.  I misread the code.  Sorry!\n<|/ c\
    \ |>\n<| c |>\nThanks for the answer. I am working on some algorithms and I want\
    \ to implement median as part of my algorithms. Can you suggest what would be\
    \ the algorithm for it? I am not asking you to write the code for me, just want\
    \ to find out the general approach.\n<|/ c |>\n<| c |>\nThe median is just `Math.floor((length+1)/2)`\
    \ - that's the algorithm I used, but it's not a median algorithm. I'm sure you\
    \ can find a median algorithm. I could probably do it but I would have to write\
    \ it up first. Let me try and find one and add it to this answer.\n<|/ c |>\n\
    <| a dscore=3 |>\nMy method is to partition the array into two parts using the\
    \ pivot element as median and find median in each partition.\n<code>\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprjghzjmp.ts(18,2): error TS1110: Type expected.

    ../../../../../tmp/tmprjghzjmp.ts(18,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprjghzjmp.ts(19,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(19,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprjghzjmp.ts(20,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(20,7): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(21,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmprjghzjmp.ts(21,9): error TS1005: ''('' expected.

    ../../../../../tmp/tmprjghzjmp.ts(21,16): error TS1005: '')'' expected.

    ../../../../../tmp/tmprjghzjmp.ts(21,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmprjghzjmp.ts(21,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmprjghzjmp.ts(21,28): error TS1005: '';'' expected.

    ../../../../../tmp/tmprjghzjmp.ts(22,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(22,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprjghzjmp.ts(23,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(23,7): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(24,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmprjghzjmp.ts(24,218): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmprjghzjmp.ts(25,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(25,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmprjghzjmp.ts(26,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(26,7): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(27,14): error TS1005: '';'' expected.

    ../../../../../tmp/tmprjghzjmp.ts(27,53): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmprjghzjmp.ts(28,2): error TS1109: Expression expected.

    ../../../../../tmp/tmprjghzjmp.ts(28,4): error TS1161: Unterminated regular expression
    literal.

    ../../../.'
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0)\n        return 0;\n    const middle\
    \ = l.length / 2;\n    if (middle === 0)\n        return l[0];\n    if (middle\
    \ === 1)\n        return l[l.length - 1];\n\n    const medianLeft = (l[middle\
    \ - 1] + l[middle]) / 2;\n    const medianRight = (l[middle] + l[middle + 1])\
    \ / 2;\n    return medianLeft < medianRight\n        ? medianLeft\n        : medianRight;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmprf4229_j.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprf4229_j.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return _median(l);\n}\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgd99jld9.ts(7,10): error TS2552: Cannot find name
    ''_median''. Did you mean ''median''?

    '
  timestamp: 1659977724
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const l = l.sort(asc);\n  if (l.length % 2 === 1) return\
    \ l[(l.length / 2) - 1];\n\n  const a = l[(l.length / 2) - 1];\n  const b = l[l.length\
    \ / 2];\n\n  return (a[0] + b[0]) / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0fze3uab.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmp0fze3uab.ts(7,9): error TS2300: Duplicate identifier ''l''.

    ../../../../../tmp/tmp0fze3uab.ts(7,20): error TS2304: Cannot find name ''asc''.

    '
  timestamp: 1659977724
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 == 0) return (l(l.length / 2) - l[(l.length\
    \ / 2) - 1])/2;\n  else return (l[l.length / 2] + l[(l.length / 2) - 1])/2;\n\
    }\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\n\
    function test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmp3vhgwg7d.ts(7,34): error TS2349: This expression\
    \ is not callable.\n  Type 'number[]' has no call signatures.\n"
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (!l.length || l[0] === undefined || l[l.length - 1]\
    \ === undefined) {\n    return NaN;\n  }\n  const lower = l[0];\n  const upper\
    \ = l[l.length - 1];\n  const mid = Math.floor(Math.ceil((upper - lower) / 2));\n\
    \  return (\n    mid\n    ? l.slice(0, mid).reduce((acc, curr) => acc + curr,\
    \ 0) / mid\n    : ((upper - lower) / 2) *\n    (-1));\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n68.66666666666667\n\
    \nshould loosely deep-equal\n\n8\n    at test (/tmp/tmpdlee5bd1.js:22:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpdlee5bd1.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 68.66666666666667,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort(ascending);\n  const len = l.length;\n  if (len\
    \ % 2 === 0) {\n    return l[len / 2 - 1];\n  } else {\n    return l[len / 2];\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpno9b1lch.ts(7,10): error TS2304: Cannot find name
    ''ascending''.

    '
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return 0;\n  }\n\n  if (l.length\
    \ % 2 === 1) {\n    return l[Math.floor(l.length / 2)];\n  }\n\n  const middle\
    \ = l.length / 2;\n  const left = [];\n  const right = [];\n\n  for (let i = 0;\
    \ i < middle; i++) {\n    left.push(l[i]);\n  }\n\n  for (let i = middle; i <\
    \ l.length; i++) {\n    right.push(l[i]);\n  }\n\n  return median(left) + median(right);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpmscriw6j.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmscriw6j.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length <= 0) {\n    throw new Error('The median\
    \ of a zero-length array is undefined');\n  }\n  const v = l.sort((a, b) => a\
    \ - b);\n  return v.length % 2 ? v[Math.floor(v.length / 2)] : (v.length % 1 ?\
    \ v[Math.floor(v.length / 2)] : v[(v.length - 1) / 2\n    ]);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n8\n    at test (/tmp/tmp3hgxlkb1.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp3hgxlkb1.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977724
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    let n = l.length\n    if (n < 1) return 0\n    let\
    \ m = l[n / 2]\n    if (n & 1) return m\n    let left = l[n / 2 - 1]\n    let\
    \ right = l[n / 2]\n    return (m + right) / 2 // median of [m, l[n/2], l[n/2-1]]\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpke_8ps3d.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpke_8ps3d.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(\"median requires\
    \ at least one argument\");\n  }\n  const sort: number[] = l.slice();\n  sort.sort();\n\
    \  if (sort.length % 2 === 0) {\n    return sort[(sort.length / 2) - 1];\n  }\n\
    \  return sort[(sort.length / 2)];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpmwqp2voe.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmwqp2voe.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l.length === 0) {\n\t\treturn NaN;\n\t}\n\tlet sorted:\
    \ number[] = l.slice();\n\tsorted.sort((a, b) => a - b);\n\tlet mid = sorted.length\
    \ / 2;\n\tif (sorted.length % 2 === 0) {\n\t\treturn sorted[mid];\n\t} else {\n\
    \t\treturn sorted[mid - 1] + sorted[mid + 1];\n\t}\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp9z_k9ou4.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9z_k9ou4.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (!l) return NaN;\n  var sorted = l.slice(0).sort();\n\
    \  var n = sorted.length;\n  n -= 1;\n  if (n % 2) return sorted[Math.floor(n/2)];\
    \ // When the length of l is even, return the middle element.\n  if (n === 1)\
    \ return sorted[0];\n  if (n === 2) return sorted[0];\n  // If the length is odd,\
    \ return the middle element and the median of three elements to the right and\
    \ left of it.\n  var mid = n/2;\n  var i1 = Math.floor(mid - 1);\n  var i2 = Math.floor(mid\
    \ + 1);\n  var i3 = Math.ceil(mid - 1);\n  var i4 = Math.ceil(mid + 1);\n  return\
    \ (sorted[i1] + sorted[i2] + sorted[i3] + sorted[i4] + sorted[0]) /\n        \
    \  (sorted[i1] + sorted[i2] + sorted[i3] + sorted[i4] + sorted[0]);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmprtpfd9q3.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprtpfd9q3.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort()\n  return l[Math.floor(l.length / 2)]\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpxev_612v.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxev_612v.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const sorted: number[] = l.slice().sort((a, b) => a -\
    \ b);\n  const middleIndex = Math.floor(sorted.length / 2);\n  return sorted[middleIndex];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpz6m4d7_t.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz6m4d7_t.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l.length % 2 ? l[(l.length - 1) / 2] : l[l.length\
    \ - 1];\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp_u3x2na7.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_u3x2na7.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let even: number[] = [];\n  let odd: number[] = [];\n\
    \  for (let i = 0; i < l.length; i++) {\n    if (i % 2 === 1) {\n      odd.push(l[i]);\n\
    \    } else {\n      even.push(l[i]);\n    }\n  }\n  return l[l.length - 1].localeCompare(l[0])\
    \ === 'a' ? median(even) : median(odd);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp__11sg7a.ts(16,26): error TS2339: Property ''localeCompare''
    does not exist on type ''number''.

    '
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let s = l.sort((a: number, b: number) => a - b);\n  if\
    \ (s.length < 2) return s[0]; // all elements are equal\n  return ((s.length -\
    \ 1) / 2);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp0k0nydcb.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0k0nydcb.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const sortedArr = sortArr(l)\n  if (sortedArr.length\
    \ % 2 === 0) {\n    const evenArr = sortedArr.filter((el, i) => i % 2 === 0)\n\
    \    return sortArr([evenArr[Math.floor(sortedArr.length / 2)], evenArr[Math.ceil(sortedArr.length\
    \ / 2)]], sortedArr.length)[0]\n  }\n  return sortArr(sortedArr.filter((el, i)\
    \ => i < sortedArr.length / 2))[0]\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfx8_9tkf.ts(7,21): error TS2552: Cannot find name
    ''sortArr''. Did you mean ''sortedArr''?

    ../../../../../tmp/tmpfx8_9tkf.ts(10,12): error TS2552: Cannot find name ''sortArr''.
    Did you mean ''sortedArr''?

    ../../../../../tmp/tmpfx8_9tkf.ts(12,10): error TS2552: Cannot find name ''sortArr''.
    Did you mean ''sortedArr''?

    '
  timestamp: 1659977726
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return Math.trunc(l.length / 2);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1xdc32vn.ts(7,15): error TS2339: Property ''trunc''
    does not exist on type ''Math''.

    '
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tlet sortedArr = l.slice();\n\tsortedArr.sort((a, b) =>\
    \ a - b);\n\tlet mid = sortedArr.length / 2;\n\treturn sortedArr[mid];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpe562840f.js:15:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpe562840f.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977727
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let high = Math.max(...l);\n  let low = Math.min(...l);\n\
    \  let med: number;\n  if (high === low) return low;\n  med = (high + low) / 2;\n\
    \  if (med - Math.pow(low / 2, 2) >= 0) {\n    return low;\n  } else {\n    return\
    \ med;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpc8m5fe_i.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc8m5fe_i.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977726
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length <= 1) return l[0];\n\n    const mid =\
    \ Math.floor(l.length / 2);\n    const leftPart = l.slice(0, mid);\n    const\
    \ rightPart = l.slice(mid);\n    return median(leftPart) < median(rightPart) ?\
    \ leftPart : rightPart;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4w1bkkpp.ts(12,5): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    '
  timestamp: 1659977726
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let mid = 0;\n  let high = l.length - 1;\n  let low =\
    \ -1;\n  while (low <= high) {\n    mid = Math.floor((low + high) / 2);\n    if\
    \ (l[mid] > l[high]) {\n      high = mid;\n    }\n    else {\n      low = mid\
    \ + 1;\n    }\n  }\n  return l[mid];\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp1g2np1ip.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1g2np1ip.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977727
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const middle = l.length / 2\n  if (middle === 0) {\n\
    \    return 0\n  }\n  if (middle === 1) {\n    return l[0]\n  }\n  const left\
    \ = median(l[middle])\n  const right = median(l[middle - 1])\n  return (left +\
    \ right) / 2\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpk3whroa9.ts(14,23): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmpk3whroa9.ts(15,24): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977727
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tconst mid = floor(l.length / 2);\n\tif (l.length % 2)\n\
    \t\treturn l[mid];\n\tif (l[mid] % 2 == 0)\n\t\treturn median(l[mid]);\n\telse\
    \ if (l[mid] % 2 != 0)\n\t\treturn median(l[mid]);\n\treturn l[mid];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpz1crca50.ts(7,14): error TS2304: Cannot find name
    ''floor''.

    ../../../../../tmp/tmpz1crca50.ts(11,17): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmpz1crca50.ts(13,17): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977727
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sorted: number[] = l.sort((a, b) => a - b)\n  if\
    \ (sorted.length % 2 === 0) {\n    return sorted[(sorted.length / 2) - 1]\n  }\
    \ else {\n    let mid: number = sorted.length / 2\n    if (sorted[mid] % 2) {\n\
    \      return sorted[mid]\n    } else {\n      return sorted[mid] + sorted[mid\
    \ - 1]\n    }\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpynydg37g.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpynydg37g.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977727
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return NaN;\n  if (l.length === 1)\
    \ return l[0];\n  if (l.length % 2 === 1) return (median(l)).toFixed(1);\n  const\
    \ mid = parseInt(l.length / 2);\n  return (median(l.slice(0, mid))).toFixed(1);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg3ls1g_d.ts(9,27): error TS2322: Type ''string''
    is not assignable to type ''number''.

    ../../../../../tmp/tmpg3ls1g_d.ts(10,24): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''string''.

    ../../../../../tmp/tmpg3ls1g_d.ts(11,3): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    '
  timestamp: 1659977726
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l == null || l.length === 0) {\n    return NaN;\n\
    \  }\n  const l = l.slice();\n  l.sort(function (a, b) { return a - b; });\n \
    \ const m = l[Math.floor(l.length / 2)];\n  if (l % 2) {\n    return m;\n  } else\
    \ {\n    return m + (m - l);\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprlb935hh.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmprlb935hh.ts(10,9): error TS2300: Duplicate identifier ''l''.

    ../../../../../tmp/tmprlb935hh.ts(13,7): error TS2362: The left-hand side of an
    arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an enum
    type.

    ../../../../../tmp/tmprlb935hh.ts(16,21): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659977726
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length == 0) {\n    return 0\n  }\n  const h =\
    \ Math.floor(l.length / 2)\n  const v = l[h]\n  const m = l[h - 1]\n  let sum\
    \ = 0\n  for (let i = 1; i < l.length; i++) {\n    sum += (Math.pow(v - m, 2)\
    \ + (i ? l[i - h] : 0))\n  }\n  return sum / l.length\n}\n</code>\nFor any set\
    \ of n numbers (including zero), you can calculate the median by simply calculating\
    \ the sum of the numbers, divided by n. \nThe first step to calculating the sum\
    \ is to get the nth number in the list. \nThe second step is to use two variables\
    \ to sum up the difference between each number and the previous number. \nThe\
    \ third step is to divide the sum by the number of elements to get an average\n\
    <|/ a |>\n<| a |>\nA median is simply the middle value of a sorted list.  So here\
    \ is the median of [3,1,2,4,5]\n<code>\nconst median = (arr) => {\n    return\
    \ arr.reduce((prev, current) => prev + current, arr) / arr.length;\n}\n</code>\n\
    <|/ a dscore=1 tags=arrays,javascript,sorting |>\n<| a |>\nThe median is the middle\
    \ value in the sorted array.\nThe first and last element can be the median.\n\
    <code>\nconst median = (arr) => {\n    const sortedArr = arr.sort((a, b) => a\
    \ - b);\n    const firstElement = sortedArr[0];\n    const lastElement = sortedArr[sortedArr.length\
    \ - 1];\n    const midElement = ((firstElement + lastElement) / 2);\n    return\
    \ midElement;\n};\n\nmedian([3, 1, 2, 4, 5]); // returns 3\n</code>\n<|/ a tags=arrays,javascript,sorting\
    \ dscore=1 |>\n<| a tags=arrays,javascript,sorting |>\nAs per Wikipedia\n\nA median\
    \ is a numeric value separating the higher half of an array from the lower half,\
    \ such that the median is the value that would be present in an average of a list\
    \ of numbers.\n\nWe can find the median of an array of numbers by finding the\
    \ number in the middle of the sorted array. \n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdhrq1bf7.ts(19,2): error TS1110: Type expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(19,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,18): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,37): error TS1005: '','' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,48): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,52): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,62): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,66): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,73): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,76): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,83): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,95): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,99): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,103): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,106): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,110): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,127): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,130): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(20,132): error TS1003: Identifier expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(21,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(21,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(21,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(21,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(21,31): error TS1005: '';'' expected.

    ../../../../../tmp/tmpdhrq1bf7.ts(21,35): error TS10'
  timestamp: 1659977727
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return 0\n  const mid = l.length\
    \ / 2\n  let median = 0\n\n  while (median < mid && median < l.length) median\
    \ += l[mid]\n\n  if (median < mid) return median\n  return l[mid]\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpahcbrzuj.js:20:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpahcbrzuj.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977727
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot calculate\
    \ median of an empty list\");\n  }\n  let i = Math.floor(l.length / 2);\n  if\
    \ (l.length % 2) {\n    return l[i];\n  } else {\n    return ((l[i - 1] + l[i])\
    \ / 2);\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpqo_oszdq.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqo_oszdq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977727
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  l.sort((a,\
    \ b) => a - b);\n  const len = l.length;\n  if (len % 2 === 1) {\n    return l[len\
    \ / 2 - 1];\n  }\n  const mid = Math.floor(len / 2);\n  return median(l, mid -\
    \ 1, mid);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0vwzena9.ts(16,20): error TS2554: Expected 1 arguments,
    but got 3.

    '
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw 'Cannot find the median\
    \ of an empty array';\n  }\n  const sortedArray = sortNumeric(l, 1);\n  const\
    \ len = sortedArray.length;\n  if (len % 2 === 0) {\n    return sortedArray[Math.floor((len\
    \ - 1) / 2)];\n  } else {\n    return sortedArray[Math.floor((len - 1) / 2)] +\
    \ sortedArray[Math.floor(len / 2)];\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwntiyzu3.ts(10,23): error TS2304: Cannot find name
    ''sortNumeric''.

    '
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let a = l.slice().sort(sortNumberAscending);\n  if (a.length\
    \ % 2) return a[a.length >> 1];\n  else return (a[a.length >> 1] + a[a.length\
    \ >> 2 - 1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprj456nai.ts(7,26): error TS2304: Cannot find name
    ''sortNumberAscending''.

    '
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l == null) return NaN;\n\n  var copy = l.slice();\n\
    \  var sort = copy.sort;\n  copy.sort(ascending);\n  return copy[Math.floor(copy.length\
    \ / 2)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy4uy9tm0.ts(11,13): error TS2304: Cannot find name
    ''ascending''.

    '
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0)\n    throw new Error(\"empty array\"\
    );\n\n  var mid = 0;\n  var len = l.length;\n  if (len % 2 !== 0)\n    return\
    \ l[len / 2 - 1]; //even\n  if (len % 2 === 0) //even\n    return l[len / 2];\
    \ //odd\n  var x = [l[mid], l[len - 1], l[len / 2 - 1]];\n  for (var i = 1; i\
    \ < len / 2; i++)\n    if (x[i] === l[len - i])\n      return l[mid];\n  else\
    \ {\n    mid++;\n    x[i] = l[mid];\n  }\n  return median(x);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp9jcfqqz5.js:28:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp9jcfqqz5.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const lArr = l.slice()\n  sort(lArr)\n  const len = lArr.length\n\
    \  if (len < 2) {\n    return lArr[len - 1]\n  }\n  const middle = Math.floor(len\
    \ / 2)\n  const arr1: number[] = lArr.slice(0, middle)\n  const arr2: number[]\
    \ = lArr.slice(middle)\n  return arr1.length < arr2.length ? median(arr1) : median(arr2)\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpox4cpwtf.ts(8,3): error TS2304: Cannot find name
    ''sort''.

    '
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sortIdx = l.length - 1;\n  let midIdx = Math.floor(sortIdx\
    \ / 2);\n  let median;\n  if (sortIdx >= 2) {\n    median = l[midIdx];\n  } else\
    \ {\n    median = (l[0] + l[sortIdx]) / 2;\n  }\n  for (let i = midIdx + 1; i\
    \ < sortIdx; i++) {\n    median = (median + l[i]) / 2;\n  }\n  return median;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n256.5\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmpr3j804mw.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr3j804mw.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 256.5,\n \
    \ expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new RangeError('Empty\
    \ list!');\n  }\n  const n = l.length;\n  if (n % 2 === 1) {\n    return l[Math.floor(n\
    \ / 2)];\n  }\n  const middle = Math.floor(n / 2);\n  let x = 0;\n  let y = Math.max(middle,\
    \ 1);\n  let z = 0;\n  while (x < y) {\n    z = x + y;\n    if (z < n) {\n   \
    \   y = z;\n    } else {\n      x = middle;\n    }\n  }\n  return l[x];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpwse8pv_n.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwse8pv_n.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const count = l.length;\n  if (count === 0) {\n    throw\
    \ new Error(\"can't calculate median of an empty list\");\n  }\n  if (count %\
    \ 2 === 0) {\n    return l[count / 2 - 1];\n  }\n  let middle = Math.floor(count\
    \ / 2);\n  let lower = middle - 1;\n  let upper = middle;\n  while (lower >= 0\
    \ && upper-- >= 0) {\n    if (l[lower] > l[upper]) {\n      lower = middle - 1;\n\
    \    } else if (l[lower] < l[upper]) {\n      upper = middle - 1;\n    } else\
    \ {\n      middle = lower + 1;\n      break;\n    }\n  }\n  return l[middle];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpz9psk228.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz9psk228.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(\"median()\
    \ called with an empty array\");\n  }\n  const n = l.length;\n  if (n === 0) {\n\
    \    throw new Error(\"median() called with an empty array\");\n  }\n  if (n %\
    \ 2 === 0) {\n    return l[Math.floor(n / 2)];\n  }\n  const half = n / 2;\n \
    \ let high = Math.floor(half);\n  let low = Math.floor(half);\n  let mid = 0;\n\
    \  while (low < high) {\n    mid = (low + high) >>> 1;\n    if (l[mid] <= l[low])\
    \ {\n      high = mid - 1;\n    } else {\n      low = mid;\n    }\n  }\n  if (l[low]\
    \ >= l[high]) {\n    return l[low];\n  }\n  return l[high];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpscqxh70e.js:38:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpscqxh70e.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tlet l = clone(l);\n\tlet n = l.length;\n\tlet middle\
    \ = Math.floor(n/2);\n\tif (n < 3) return l[middle];\n\tl.sort();\n\treturn (Math.abs(l[middle]\
    \ - l[n/2 - 1])) < (Math.abs(l[middle] - l[n - 1])) ? l[middle] : l[n - 1];\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmr0uv0og.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmpmr0uv0og.ts(7,6): error TS2300: Duplicate identifier ''l''.

    ../../../../../tmp/tmpmr0uv0og.ts(7,10): error TS2552: Cannot find name ''clone''.
    Did you mean ''close''?

    '
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(\"Cannot compute\
    \ median of an empty array\");\n  }\n  return _median(l);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1h4i0yuy.ts(10,10): error TS2552: Cannot find name
    ''_median''. Did you mean ''median''?

    '
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l.length === 0) {\n\t\treturn 0;\n\t}\n\tlet middle\
    \ = Math.floor(l.length / 2);\n\tlet medianValue = l[middle];\n\tlet leftHalf\
    \ = l.slice(0, middle);\n\tlet rightHalf = l.slice(middle, l.length);\n\tif (middle)\
    \ {\n\t\tmedianValue = median(leftHalf);\n\t}\n\tif (medianValue < 0) {\n\t\t\
    medianValue = Math.max(...leftHalf, Math.max(...rightHalf));\n\t} else {\n\t\t\
    medianValue = Math.min(...leftHalf, Math.min(...rightHalf));\n\t}\n\treturn medianValue;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmprkupjezs.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprkupjezs.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l = l.slice().sort(ascending);\n  return l[(l.length\
    \ - 1) / 2];\n}\n\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5yikb554.ts(7,22): error TS2304: Cannot find name
    ''ascending''.

    '
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const sorted: number[] = l.sort();\n  const half: number\
    \ = sorted.length >>> 1;\n  if (half === 0) {\n    return sorted[0];\n  }\n  if\
    \ (half === 1) {\n    return sorted[sorted.length - 1];\n  }\n  const middle:\
    \ number = (sorted[half - 1] + sorted[half]) / 2;\n  return median(sorted.slice(0,\
    \ half - 1).concat(sorted[half], sorted[half + 1]));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpt43zs1zl.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt43zs1zl.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0) return NaN;\n    const sorted =\
    \ l.slice().sort((a: number, b: number) => a - b);\n    const mid = sorted.length\
    \ >> 1;\n    if (sorted[mid] >= sorted[mid - 1]) {\n        return sorted[mid];\n\
    \    }\n    return sorted[mid - 1] + sorted[mid];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp12l5kzzh.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp12l5kzzh.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const sortedList = l.slice().sort((a, b) => a - b);\n\
    \  const midIndex = Math.floor(sortedList.length / 2);\n  return sortedList[midIndex];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpm2246rpv.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpm2246rpv.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return NaN;\n  var mid = l.length\
    \ / 2, val = l[mid];\n  if (val === l[0]) return  mid;\n  if (val === l[mid])\
    \ return mid + 1;\n  else {\n    // val > l[mid - 1] and val > l[mid]\n    if\
    \ (mid - 1 > 0 && val > l[mid - 1]) return median(l.slice(0, mid - 1));\n    else\
    \ return median(l.slice(0, mid));\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmptv8a968a.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptv8a968a.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length\n  if (n < 2) return undefined\n \
    \ if (n === 2) return (l[0] + l[1]) / 2\n  l.sort() // sort in place\n  const\
    \ mid = Math.floor(n / 2)\n  return isFinite(mid) ? l[mid] : (l[n / 2 - 1] + l[n\
    \ / 2]) / 2.0\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp65tn8k2y.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp65tn8k2y.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: -1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length == 0) {\n    return NaN;\n  }\n  let mid\
    \ = l.length / 2;\n  let left = 0;\n  let right = mid;\n  let midValue;\n  let\
    \ midCount = 0;\n  let medianValue = 0;\n  let medianCount = 0;\n  while (left\
    \ < right) {\n    midCount++;\n    midValue = l[mid];\n    if (isNaN(midValue))\
    \ {\n      midValue = 0;\n    }\n    if (midValue < left) {\n      left = mid;\n\
    \    } else {\n      right = mid;\n    }\n  }\n\n  while (left < mid) {\n    midCount++;\n\
    \    midValue = l[mid];\n    if (isNaN(midValue)) {\n      midValue = 0;\n   \
    \ }\n    if (midValue < medianValue) {\n      medianValue = midValue;\n      medianCount\
    \ = midCount;\n    }\n    mid = midCount - 1;\n  }\n\n  while (right > mid) {\n\
    \    midCount--;\n    midValue = l[mid];\n    if (isNaN(midValue)) {\n      midValue\
    \ = 0;\n    }\n    if (midValue > medianValue) {\n      medianValue = midValue;\n\
    \      medianCount = midCount;\n    }\n    mid = midCount - 1;\n  }\n\n  if (medianCount\
    \ > midCount) {\n    medianCount = midCount;\n  }\n  return medianValue;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977744
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l.length % 2 === 0) {\n\t\treturn l[(l.length / 2)\
    \ - 1];\n\t} else {\n\t\tconst i = Math.floor(l.length / 2);\n\t\treturn (l[i\
    \ - 1] + l[i]) / 2;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp8erp3ux_.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8erp3ux_.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var n = l.length;\n  if (n % 2 == 1) {\n    return (l[n\
    \ / 2 - 1] + l[n / 2]) / 2;\n  } else {\n    return l[n / 2];\n  }\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpd62y85dl.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd62y85dl.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977729
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length\n  if(n < 1) return 0\n  if(n ===\
    \ 1) return l[0]\n  let mid = Math.floor(n / 2)\n  let count = 0\n  for(let i\
    \ = 0; i < n; ++i) {\n    count += l[i] === l[mid + i]\n  }\n  if(count % 2 ===\
    \ 0) return l[mid]\n  if(count < n/2) return l[mid]\n  return l[mid - 1]\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg5vlq271.ts(13,5): error TS2365: Operator ''+=''
    cannot be applied to types ''number'' and ''boolean''.

    '
  timestamp: 1659977729
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l = l.slice()\n  l.sort()\n  let mid = Math.floor(l.length\
    \ / 2),\n    val = l[mid]\n  if (val >= l[mid-1]) {\n    return l[mid + 1]\n \
    \ } else {\n    return l[mid]\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpmn2tf6m7.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmn2tf6m7.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977731
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort((a, b) => a - b);\n  return l[Math.floor(l.length\
    \ / 2)];\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpv40wq_3j.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv40wq_3j.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977731
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const high = l.sort((a, b) => a - b)\n  const low = l.sort((a,\
    \ b) => b - a)\n  const middle = l => low(low(high(l))) / 2.0\n  return middle\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmp36njxdy0.ts(9,23): error TS2349: This expression\
    \ is not callable.\n  Type 'number[]' has no call signatures.\n../../../../../tmp/tmp36njxdy0.ts(9,27):\
    \ error TS2349: This expression is not callable.\n  Type 'number[]' has no call\
    \ signatures.\n../../../../../tmp/tmp36njxdy0.ts(9,31): error TS2349: This expression\
    \ is not callable.\n  Type 'number[]' has no call signatures.\n../../../../../tmp/tmp36njxdy0.ts(10,10):\
    \ error TS2322: Type '(l: any) => number' is not assignable to type 'number'.\n"
  timestamp: 1659977731
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let high = l[l.length - 1]\n  let low = l[0]\n  let median:\
    \ number\n  if (low) {\n    median = ((low + high) / 2) | 0\n  } else {\n    median\
    \ = 0\n  }\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] < median) {\n\
    \      low = l[i]\n    } else {\n      high = l[i]\n    }\n  }\n  if (median ===\
    \ low) {\n    median = (low + high) / 2 | 0\n  }\n  return median\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp54hvzija.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp54hvzija.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977731
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var m = l.reduce(function (a, b) { return a + b; });\n\
    \  return l.length % 2 ? m / 2 : m;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n7.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpdvyk5x5g.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdvyk5x5g.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 7.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977731
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return NaN;\n  }\n\n  let\
    \ mid = l.length / 2;\n  if (l.length % 2) {\n    mid = l.length / 2 - 1;\n  }\n\
    \n  let medianValue: number = 0;\n  let i = 0;\n  let j = 0;\n  while (j < mid)\
    \ {\n    if (l[j] < l[j + 1]) {\n      j += 1;\n    } else {\n      if (l[j] >\
    \ l[j + 1]) {\n        i += 1;\n      }\n      j += 1;\n    }\n  }\n\n  medianValue\
    \ = l[i];\n  while (j + 1 < mid) {\n    if (l[j + 1] < l[j]) {\n      j += 1;\n\
    \    } else {\n      medianValue = l[j];\n      i += 1;\n    }\n  }\n  return\
    \ medianValue;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpr0obzo9z.js:43:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr0obzo9z.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977731
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2)\
    \ - 1]\n  } else {\n    return (l[l.length / 2 - 1] + l[l.length / 2]) / 2.0\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmppiat2mom.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppiat2mom.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977731
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length < 2) {\n        return NaN;\n    }\n\n\
    \    var mid = l.length / 2;\n    if (mid % 1 !== 0) {\n        mid++;\n    }\n\
    \n    var middle = l [mid];\n\n    var left = [mid];\n    var right = [mid];\n\
    \n    var rightIndex = l.length - 1;\n\n    for (var index = 0; index < l.length;\
    \ index++) {\n        var item = l [index];\n\n        if (item < middle) {\n\
    \            left .push (item);\n            leftIndex ++;\n        }\n      \
    \  else if (item > middle) {\n            right .push (item);\n            rightIndex\
    \ --;\n        }\n    }\n\n    if (l.length / 2 > 1) {\n        left = [].concat\
    \ (left, l [leftIndex], l [leftIndex - 1]);\n    }\n\n    if (l.length / 2 < 1)\
    \ {\n        right = [].concat (right, l [rightIndex], l [rightIndex - 1]);\n\
    \    }\n\n    var median = 0;\n\n    if (left.length + right.length > 0) {\n \
    \       median = (left + right) [0] / (left.length + right.length);\n    }\n\n\
    \    return median;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp894kjgvu.ts(28,13): error TS2304: Cannot find name
    ''leftIndex''.

    ../../../../../tmp/tmp894kjgvu.ts(37,36): error TS2304: Cannot find name ''leftIndex''.

    ../../../../../tmp/tmp894kjgvu.ts(37,51): error TS2304: Cannot find name ''leftIndex''.

    ../../../../../tmp/tmp894kjgvu.ts(47,19): error TS2365: Operator ''+'' cannot
    be applied to types ''number[]'' and ''number[]''.

    '
  timestamp: 1659977731
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length <= 1) return l[0];\n  const midIdx = l.length\
    \ >> 1;\n  const m = l[midIdx];\n  let n = m; // set nIdx for left or right element\n\
    \  let nIdx = 0;\n  for (let i = midIdx; i >= 0; i--) {\n    const ai = l[i];\n\
    \    if (n < ai) {\n      nIdx = i;\n      n = ai;\n    }\n  }\n  if (nIdx ===\
    \ l.length) return m; // return left element when there is a tie or there is no\
    \ element\n  const leftIdx = nIdx - 1;\n  const left = l[leftIdx];\n  const rightIdx\
    \ = nIdx + 1;\n  const right = l[rightIdx];\n  return (\n    m +\n    ((leftIdx\
    \ === rightIdx) ? (left + right) / 2 : median(Array.from({ length: leftIdx + 1\
    \ }, () => l[leftIdx])) + right -\n      left + leftIdx - 1 -\n      (leftIdx\
    \ < midIdx) ? (leftIdx - midx) * (mid - m) / (leftIdx - midIdx) + m\n    : m\n\
    \  );\n}\n</code>\n<|/ a |>\n<| a dscore=1 |>\nI wrote a quick and simple solution\
    \ in O(n) time complexity (worst case), not based on any external libraries. Just\
    \ the maths to calculate the median:\n\n<code>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0_bg2eoc.ts(30,4): error TS1005: '')'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(32,2): error TS1110: Type expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(32,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp0_bg2eoc.ts(33,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(33,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp0_bg2eoc.ts(34,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(34,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(34,16): error TS1109: Expression expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,17): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,28): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,50): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,68): error TS1005: '','' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,79): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,85): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,88): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,92): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,101): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,117): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,121): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,127): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,130): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,140): error TS1005: '';'' expected.

    ../../../../../tmp/tmp0_bg2eoc.ts(35,144): error TS1005: '';'' expected.

    ../../../../..'
  timestamp: 1659977731
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l.sort((a, b) => a - b)[(l.length - 1) / 2] as\
    \ number;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n8\n    at test (/tmp/tmpt9l7fwyr.js:13:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpt9l7fwyr.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977731
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var med: number;\n  l = l.slice(0).sort(numberLessThan);\n\
    \  if (l.length % 2 === 0) {\n    med = l[(l.length / 2) - 1];\n  } else {\n \
    \   med = l[(l.length / 2)]\n  }\n  return med;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1n18wkfa.ts(8,23): error TS2304: Cannot find name
    ''numberLessThan''.

    '
  timestamp: 1659977731
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw Error('median(): empty\
    \ array');\n  }\n  l.sort(null);\n  let mid = l.length >> 1;\n  let f = l[mid];\n\
    \  let i = 1;\n  let sum = 0;\n  for (; i < mid; ++i) {\n    sum += l[i];\n  }\n\
    \  mid = ~~((i + 1) * 0.5);\n  let f_ = l[mid];\n  for (; i < l.length; ++i) {\n\
    \    sum += l[i];\n    if (Math.abs(f - f_) < 0.01) {\n      break;\n    }\n \
    \ }\n  return (sum / mid) + f * (mid * 0.5);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpw14wbw3p.js:10\n    l.sort(null);\n      ^\n\nTypeError: The comparison\
    \ function must be either a function or undefined\n    at Array.sort (<anonymous>)\n\
    \    at median (/tmp/tmpw14wbw3p.js:10:7)\n    at test (/tmp/tmpw14wbw3p.js:31:22)\n\
    \    at Object.<anonymous> (/tmp/tmpw14wbw3p.js:37:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977732
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let high = l.length - 1;\n  let low = 0;\n  let mid =\
    \ 0;\n  let midVal = 0;\n  let midCount = 0;\n  let lowVal = 0;\n  let lowCount\
    \ = 0;\n  let midValCount = 0;\n  while (low <= high) {\n    mid = low + Math.floor((high\
    \ - low) / 2);\n    midVal = l[mid];\n    midCount = 1;\n    for (let i = mid;\
    \ i < l.length; ++i) {\n      if (l[i] <= midVal) {\n        midValCount++;\n\
    \      } else if (l[i] == midVal) {\n        midCount++;\n      }\n    }\n   \
    \ if (midCount > midValCount) {\n      lowVal = midVal;\n      lowCount = midCount;\n\
    \    } else if (midCount < midValCount) {\n      highVal = midVal;\n      highCount\
    \ = midCount;\n    } else {\n      lowCount = midCount;\n    }\n  }\n  return\
    \ lowVal + midVal * highVal / lowCount;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy8ztb5yc.ts(30,7): error TS2304: Cannot find name
    ''highVal''.

    ../../../../../tmp/tmpy8ztb5yc.ts(31,7): error TS2304: Cannot find name ''highCount''.

    ../../../../../tmp/tmpy8ztb5yc.ts(36,28): error TS2304: Cannot find name ''highVal''.

    '
  timestamp: 1659977731
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length % 2 === 0) {\n        const mid = Math.floor(l.length\
    \ / 2)\n        return median(l[mid]) < median(l[mid-1]) ? mid+1 : mid\n    }\n\
    \    else {\n        let l = l[l.length-1]\n        let h = l[0]\n        let\
    \ m = Math.floor((l.length+1)/2)\n        for (let i = 0; i < m; i++) {\n    \
    \        if (l[i] < h) {\n                l = l[i+1]\n            }\n        \
    \    else if (l[i] > h) {\n                h = h-1\n            }\n          \
    \  else {\n                break\n            }\n        }\n        return [h,\
    \ m]\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpprk9ahkl.ts(9,23): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmpprk9ahkl.ts(9,40): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmpprk9ahkl.ts(12,17): error TS2448: Block-scoped variable
    ''l'' used before its declaration.

    ../../../../../tmp/tmpprk9ahkl.ts(12,19): error TS2448: Block-scoped variable
    ''l'' used before its declaration.

    ../../../../../tmp/tmpprk9ahkl.ts(26,9): error TS2322: Type ''any[]'' is not assignable
    to type ''number''.

    '
  timestamp: 1659977732
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0) {\n        return NaN;\n    }\n\
    \    l.sort();\n    var half = l.length >> 1;\n    if (l.length % 2) {\n     \
    \   return l[half];\n    }\n    else {\n        return (l[half - 1] + l[half])\
    \ / 2;\n    }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n510\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmp_pgeg9oi.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_pgeg9oi.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 510,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977732
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let n = l.length\n  if (n % 2 == 1) {\n    // Even\n\
    \    return (l[(n - 1) / 2] + l[n / 2]) / 2.0;\n  }\n  return l[n / 2];\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp2ky6zbrj.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2ky6zbrj.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977732
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return 0;\n  const n = l.length;\n\
    \  if (n % 2 == 0) return l[(n - 1) / 2] + (l[n / 2] + l[n / 2 - 1]) / 2;\n  else\
    \ return (l[n / 2 - 1] + l[n / 2]) / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmptfa668gs.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptfa668gs.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977732
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error('Cannot calculate\
    \ median of an empty array.');\n  }\n\n  const sorted = l.slice().sort((a, b)\
    \ => a - b);\n  return sorted.length / 2;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp3ip07c8h.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3ip07c8h.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977732
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var l = l.sort(function (a, b) { return a - b; }), len\
    \ = l.length, mid = ~~(len / 2), left = (len - mid) / 2, right = len - left, leftIndex\
    \ = 0, rightIndex = mid, midVal = void 0;\n  while (leftIndex < mid && rightIndex\
    \ < len) {\n    midVal = leftIndex + rightIndex;\n    if (midVal === len) break;\n\
    \    if (midVal % 2 === 0) {\n      leftIndex += 1;\n      continue;\n    }\n\
    \    if (midVal % 2 === 1) {\n      rightIndex += 1;\n      continue;\n    }\n\
    \    if (midVal < leftIndex) leftIndex += 1;\n    else rightIndex += 1;\n  }\n\
    \  if (len % 2 === 1) return l[mid];\n  return ((midVal - leftIndex) * (midVal\
    \ - rightIndex)) + l[leftIndex] > l[rightIndex] ? l[mid] : l[rightIndex];\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1000\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmpvijh1zot.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvijh1zot.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1000,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977732
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let m = l.length,\n      i = Math.floor(l / 2),\n   \
    \   a = l[i],\n      b = l[--i];\n  return i > m / 2 ? (l[m] >= a && l[m] >= b\
    \ ? m : i) : l[i] + (l[m - 1] - l[i]) * (a / m);\n}\n</code>\n<|/ a |>\n<| a |>\n\
    This question has been answered already, but I would like to add another option\
    \ that I find extremely helpful.\nYou can use the partition method to break up\
    \ the array in half, sort by one and then take the average of both halves.\n<code>\n\
    var input = [2,3,4,5,6,7,8,9];\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjycg31lf.ts(13,2): error TS1110: Type expected.

    ../../../../../tmp/tmpjycg31lf.ts(13,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpjycg31lf.ts(14,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpjycg31lf.ts(14,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpjycg31lf.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpjycg31lf.ts(15,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,46): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,48): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,54): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,59): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,62): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,66): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,74): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,81): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,86): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,88): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,93): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,103): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(16,111): error TS1003: Identifier expected.

    ../../../../../tmp/tmpjycg31lf.ts(17,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(17,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(17,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpjycg31lf.ts(17,17): error TS1005: '';'' expected.

    ../../../../'
  timestamp: 1659977731
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2)\
    \ - 1 ];\n  }\n  const half = l.length / 2;\n  let count = 0;\n  for (let i =\
    \ 0; i < half; ++i) {\n    const l = l[i];\n    const r = l[half + i];\n    if\
    \ (l >= r) {\n      count += r;\n    } else {\n      count += l;\n    }\n  }\n\
    \  return Math.ceil(count / 2);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjvrquqp0.ts(13,15): error TS2448: Block-scoped variable
    ''l'' used before its declaration.

    '
  timestamp: 1659977732
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(\"Must have\
    \ at least 1 argument.\");\n  }\n\n  l.sort(ascending);\n  var num = l[l.length\
    \ - 1];\n  var cnt = 0;\n\n  for (var i = 0; i < l.length - 1; i++) {\n    var\
    \ cur = l[i];\n\n    if (cur === num) {\n      cnt++;\n    } else {\n      break;\n\
    \    }\n  }\n\n  return cnt / l.length;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplbhbm26t.ts(11,10): error TS2304: Cannot find name
    ''ascending''.

    '
  timestamp: 1659977732
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return Math.floor(l.length / 2);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp4cvms3sa.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4cvms3sa.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977733
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0) {\n        return NaN;\n    }\n\
    \n    const lLen = l.length;\n\n    if (lLen === 1) {\n        return l[0];\n\
    \    }\n\n    let midIdx = Math.floor((lLen - 1) / 2);\n\n    let m = 0;\n\n \
    \   if (lLen % 2 === 0) {\n        m = l[midIdx];\n    }\n\n    let m1 = median(l.slice(midIdx,\
    \ lLen - 1));\n    let m2 = median(l.slice(0, midIdx));\n\n    return (m1 + m2\
    \ > m) ? m2 : m;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp98t0xbee.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp98t0xbee.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977733
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length\n  if (n < 1) {\n    return NaN\n\
    \  }\n  const list = l\n  const middle = ~~((n - 1) / 2)\n  if (n % 2) {\n   \
    \ // even: return the middle value\n    return list[middle]\n  } else {\n    //\
    \ odd: return average of the middle two values\n    return (list[middle] + list[middle\
    \ + 1]) / 2\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp4zji2qwk.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4zji2qwk.js:31:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort()\n  let middle = l.length / 2;\n  if (middle\
    \ === 0) {\n    return l[0];\n  } else {\n    return ((l[middle - 1] + l[middle])\
    \ / 2) | 0;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp04lejhhj.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp04lejhhj.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return 0\n  if (l.length === 1) return\
    \ l[0]\n  let mid = l.length / 2\n  let midValue = median(l[mid])\n  let rightCount\
    \ = l.length - mid\n  let leftCount = mid\n  let leftSum = 0\n  let rightSum =\
    \ 0\n  for (let i = 0; i < leftCount; i++) {\n    leftSum += l[i]\n  }\n  for\
    \ (let j = 0; j < rightCount; j++) {\n    rightSum += l[mid+j]\n  }\n  let rightMedian\
    \ = rightSum / rightCount\n  let leftMedian = leftSum / leftCount\n  if (rightMedian\
    \ < leftMedian) return rightMedian\n  return leftMedian\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1uuxfghd.ts(10,25): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort(sortNumbersDescending);\n  return l[Math.floor(l.length\
    \ / 2)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy8kxjj0h.ts(7,10): error TS2304: Cannot find name
    ''sortNumbersDescending''.

    '
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    l = l.sort((a: number, b: number) => a - b);\n    const\
    \ len = l.length;\n    if (len % 2 === 0) {\n        return l[(len - 1) / 2];\n\
    \    }\n    return l[(len - 1) / 2 - 1];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpcg7ns0bg.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcg7ns0bg.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const i = l.length;\n  if (i <= 0) {\n    return 0; //\
    \ Nothing to do here.\n  }\n  const half = Math.ceil(l.length / 2);\n  if (half\
    \ % 1 !== 0) {\n    return l[half];\n  }\n  const median = l[half];\n  for (let\
    \ j = 1; j < half; j++) {\n    const left = l[j - 1];\n    const right = l[j];\n\
    \    if (left > right || (left === right && left % 1 === 1)) {\n      median =\
    \ left;\n    } else {\n      median = right;\n    }\n  }\n  return median;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpm5c0ougb.ts(20,7): error TS2588: Cannot assign to
    ''median'' because it is a constant.

    ../../../../../tmp/tmpm5c0ougb.ts(22,7): error TS2588: Cannot assign to ''median''
    because it is a constant.

    '
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const arr = l.slice();\n  return isSorted(arr) ? arr[(arr.length\
    \ - 1) / 2] : (arr[Math.floor(arr.length / 2)] + arr[Math.ceil(arr.length / 2)\
    \ - 1]) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcj_tqi_c.ts(8,10): error TS2304: Cannot find name
    ''isSorted''.

    '
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let n = l.length;\n  let m = Math.floor(n/2);\n  let\
    \ x;\n  if (n % 2 == 0) {\n    x = l[m-1];\n    return m*(x+l[m-1])/2;\n  } else\
    \ {\n    return (l[m-1] + l[m])/2;\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpz_ckqnqp.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz_ckqnqp.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const sortedArray = l.slice().sort();\n  if (sortedArray.length\
    \ % 2 === 0) {\n    return (sortedArray[(sortedArray.length / 2) - 1] + sortedArray[sortedArray.length\
    \ / 2]) / 2;\n  }\n  else if ((sortedArray.length - 1) % 2 === 0) {\n    return\
    \ (sortedArray[(sortedArray.length / 2)]) / 2;\n  }\n  else {\n    return (sortedArray[sortedArray.length\
    \ / 2] + sortedArray[(sortedArray.length / 2) - 1]) / 2;\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp4aka68zl.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4aka68zl.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let m = l[0];\n  for (let i = 1; i < l.length; ++i) {\n\
    \    if (l[i] < m) {\n      m = l[i];\n    }\n  }\n  return m;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpygmkcr2v.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpygmkcr2v.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l.reduce((a, b) => a + b, 0) / l.length;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n171.66666666666666\n\
    \nshould loosely deep-equal\n\n8\n    at test (/tmp/tmp1z897d0p.js:13:12)\n  \
    \  at Object.<anonymous> (/tmp/tmp1z897d0p.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 === 0) {\n    return l[l.length / 2\
    \ - 1];\n  }\n  const i = l.length / 2;\n  if (l[i * 2] > l[i * 2 + 1]) {\n  \
    \  return l[i * 2];\n  }\n  return l[i * 2 + 1];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpt3o3a6wd.js:19:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpt3o3a6wd.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let high = l.length\n  if (high === 0) {\n    return\
    \ 0\n  }\n  let mid = Math.floor(high / 2)\n  if (high % 2 === 0) {\n    return\
    \ l[mid]\n  }\n  else {\n    let low = mid\n    let higher = high\n    while (higher\
    \ % 2 !== 0) {\n      lower++\n      higher /= 2\n    }\n    mid = lower + Math.floor((higher\
    \ - lower) / 2)\n    return l[mid]\n  }\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpg65wws1u.ts(19,7): error TS2304: Cannot find name
    ''lower''.

    ../../../../../tmp/tmpg65wws1u.ts(22,11): error TS2304: Cannot find name ''lower''.

    ../../../../../tmp/tmpg65wws1u.ts(22,40): error TS2304: Cannot find name ''lower''.

    '
  timestamp: 1659977734
- exit_code: -1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let i = l.length - 1;\n  let mIdx = Math.floor((l.length\
    \ - 1) / 2);\n  let x = l[mIdx];\n  let y = l[i];\n  let xIdx;\n  let yIdx;\n\
    \  let xIdx2 = 0;\n  let yIdx2 = 1;\n  let mIdx2 = 0;\n  let mIdx3 = 1;\n\n  while\
    \ (true) {\n    if (xIdx2 === mIdx2) {\n      mIdx3++;\n      xIdx2 = xIdx;\n\
    \      xIdx = 0;\n    }\n\n    if (mIdx3 === yIdx2) {\n      return y;\n    }\n\
    \n    if (yIdx2 === xIdx2) {\n      mIdx2++;\n      yIdx2 = yIdx;\n      yIdx\
    \ = 0;\n    }\n\n    if (mIdx2 === xIdx2) {\n      mIdx3++;\n      xIdx2 = xIdx;\n\
    \      xIdx = 0;\n    }\n\n    if (mIdx2 === yIdx2 && mIdx !== xIdx) {\n     \
    \ mIdx++;\n    }\n\n    xIdx++;\n    yIdx++;\n  }\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659977749
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(\"median()\
    \ called on empty array\");\n  }\n\n  if (l.length === 1) {\n    return l[0];\n\
    \  }\n\n  // sort from lowest to highest value\n  var lowest = Math.floor(l.length\
    \ / 2);\n\n  l.sort(function (a, b) { return b - a; });\n\n  // @todo: replace\
    \ with Math.ceil\n\n  return Math.floor(l[lowest]) + Math.ceil(l.length / 2 -\
    \ lowest);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp5bm9ukzq.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5bm9ukzq.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  // return l.sort(function (a, b) { return a - b; }).pop();\n\
    \  l.sort(function (a, b) { return a - b; });\n  var len = l.length;\n  if (len\
    \ === 0) {\n    return 0.0;\n  }\n  var middle = Math.floor(len / 2);\n  if (len\
    \ % 2) {\n    // odd\n    return l[middle];\n  }\n  else {\n    // even\n    var\
    \ mid1 = mid + 1, mid2 = mid + 2;\n    return (l[mid1] + l[mid2]) / 2.0;\n  }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6aj1w744.ts(20,16): error TS2552: Cannot find name
    ''mid''. Did you mean ''mid1''?

    ../../../../../tmp/tmp6aj1w744.ts(20,32): error TS2552: Cannot find name ''mid''.
    Did you mean ''mid1''?

    '
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let _l = l.slice();\n  _l.sort((a: number, b: number)\
    \ => a - b);\n  return (l.length % 2 === 0) ?\n    _l[(l.length / 2) - 1] : ((_l[l.length\
    \ / 2] + _l[l.length / 2 - 1]) / 2);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpzan06zs3.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzan06zs3.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return 0;\n  }\n  const sortedArr\
    \ = l.slice();\n  sortedArr.sort((a, b) => a - b);\n  const mid = ~~(sortedArr.length\
    \ / 2);\n  if (sortedArr[mid] % 1 === 0) {\n    return sortedArr[mid];\n  }\n\
    \  if (sortedArr[mid] < 0) {\n    return sortedArr[mid + 1];\n  }\n  return sortedArr[mid];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpbxaaum44.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbxaaum44.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var len = l.length;\n  if (len === 0) {\n    return 0;\n\
    \  } else if (len % 2 === 0) {\n    return l[(len - 1) / 2];\n  }\n  var mid =\
    \ Math.floor(len / 2);\n  var low = median(l[mid]);\n  var high = median(l[mid\
    \ + 1]);\n  return high - low;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpq7htuzbz.ts(14,20): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmpq7htuzbz.ts(15,21): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977734
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    const n = l.length;\n    if (n % 2 === 1) {\n     \
    \   return l[Math.floor(n / 2)];\n    }\n    if (n === 2 || n % 2 === 0) {\n \
    \       return 0.5;\n    }\n    const m = Math.floor(n / 2);\n    const m1 = m\
    \ - 1;\n    const m2 = m + (m1 * 2);\n    const m3 = m * 2 - 1;\n    let c = 0.0;\n\
    \    let v1: number;\n    let v2: number;\n    let v: number;\n    // v is the\
    \ middle value, or the average of v1 and v2.\n    for (let i = 0; i < m; i++)\
    \ {\n        if (i === m1) {\n            v2 = m2;\n            v1 = m3;\n   \
    \     } else {\n            v1 = m1;\n            v2 = m2;\n        }\n      \
    \  v = v1 + v2 + c; // linear interpolation of [v, v1]\n        c = (v - v1) /\
    \ (v2 - v1);\n        v1 = v;\n        v2 = v2;\n    }\n    return v + c; // linear\
    \ interpolation of [v, v2]\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpirf16f11.js:42:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpirf16f11.js:48:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977734
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l.length == 0) {\n\t\treturn NaN;\n\t}\n\n\tl.sort(ascending);\n\
    \n\tconst mid = l.length >> 1;\n\n\tif (l.length & 1) {\n\t\treturn l[mid];\n\t\
    }\n\n\treturn (\n\t\tmedian(l.slice(0, mid)) +\n\t\tmedian(l.slice(mid, l.length))\
    \ +\n\t\t(mid-((l.length >> 1) - 1)) *\n\t\t(median(l[mid], l[mid-1]))\n\t) /\
    \ 3;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmppv0_xtgv.ts(11,9): error TS2304: Cannot find name
    ''ascending''.

    ../../../../../tmp/tmppv0_xtgv.ts(23,19): error TS2554: Expected 1 arguments,
    but got 2.

    '
  timestamp: 1659977736
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length;\n  if (n <= 0) return NaN;\n\n  l.sort((a,\
    \ b) => a - b);\n\n  const half = Math.floor(l.length / 2);\n  return (n[half]\
    \ + (n * 0.5)) / 2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpwk9acrmx.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwk9acrmx.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977736
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  // Only accept an array of numbers (including null).\n\
    \  if (!Array.isArray(l)) {\n    throw Error('median() only accepts an array of\
    \ numbers.');\n  }\n\n  // Return median of numbers.\n  let n = l.length;\n  if\
    \ (n === 0) {\n    return 0;\n  } else if (n === 1) {\n    return l[0];\n  }\n\
    \n  let middle = Math.floor(n / 2);\n\n  if (n % 2) {\n    return median(l[middle]);\
    \ // odd number of elements\n  } else {\n    return median(l[middle - 1] + l[middle]);\
    \ // even number of elements\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4k6gou2w.ts(23,19): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp4k6gou2w.ts(25,19): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977736
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    throw new Error(\"l has zero\
    \ length\");\n  }\n  l.sort();\n  var half = Math.floor(l.length / 2);\n  if (l.length\
    \ % 2 === 0) {\n    return l[half];\n  } else {\n    return (l[half - 1] + l[half])\
    \ / 2.0;\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpl0kj5t9q.js:22:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl0kj5t9q.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977736
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l.length % 2 === 1) {\n\t\treturn (l[l.length / 2\
    \ - 1] + l[l.length / 2]) / 2;\n\t} else {\n\t\treturn l[Math.floor(l.length /\
    \ 2)];\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmptpoz0fiz.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptpoz0fiz.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977736
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length;\n  if (n < 1) {\n    throw new Error('Collection\
    \ must not be empty.');\n  }\n  const sortedArr = l.slice();\n  sortedArr.sort();\n\
    \  if (n % 2) {\n    return sortedArr[n / 2 - 1];\n  } else {\n    return sortedArr[n\
    \ / 2];\n  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpc089w80p.js:23:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpc089w80p.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977736
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const sortedArr = l.slice().sort((a: number, b: number)\
    \ => a - b);\n  if (sortedArr.length % 2 === 0) {\n    return (sortedArr[sortedArr.length\
    \ - 1] + sortedArr[0]) / 2;\n  }\n  else return sortedArr[Math.floor(sortedArr.length\
    \ / 2)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n495\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmphqlo9xp3.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphqlo9xp3.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 495,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977736
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length < 1) {\n    return NaN;\n  }\n  var mid\
    \ = l.length / 2;\n  var i = Math.floor((mid + 0.5) / 2);\n  if (i < 0) {\n  \
    \  return NaN;\n  }\n  if (i === l.length / 2) {\n    return l[mid];\n  }\n  if\
    \ (l[i] === l[mid]) {\n    return median(l[i + (mid - i)]);\n  }\n  return median(l[i\
    \ + (mid - i)], l[mid]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp3v7twvvn.ts(19,19): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp3v7twvvn.ts(21,35): error TS2554: Expected 1 arguments,
    but got 2.

    '
  timestamp: 1659977736
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    return stats.median(l);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprmtx3onm.ts(7,12): error TS2552: Cannot find name
    ''stats''. Did you mean ''status''?

    '
  timestamp: 1659977736
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sortOrder = l.length\n  if (sortOrder === 0) {\n\
    \    return 0\n  }\n  const middle = sortOrder / 2\n  const leftMedian = median(l.slice(0,\
    \ middle))\n  const rightMedian = median(l.slice(middle))\n  if (rightMedian >\
    \ leftMedian) {\n    return rightMedian\n  }\n  return leftMedian\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp8z9yw_ho.js:12\n    var leftMedian = median(l.slice(0, middle));\n\
    \                              ^\n\nRangeError: Maximum call stack size exceeded\n\
    \    at Array.slice (<anonymous>)\n    at median (/tmp/tmp8z9yw_ho.js:12:31)\n\
    \    at median (/tmp/tmp8z9yw_ho.js:13:23)\n    at median (/tmp/tmp8z9yw_ho.js:13:23)\n\
    \    at median (/tmp/tmp8z9yw_ho.js:13:23)\n    at median (/tmp/tmp8z9yw_ho.js:13:23)\n\
    \    at median (/tmp/tmp8z9yw_ho.js:13:23)\n    at median (/tmp/tmp8z9yw_ho.js:13:23)\n\
    \    at median (/tmp/tmp8z9yw_ho.js:13:23)\n    at median (/tmp/tmp8z9yw_ho.js:13:23)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l.length % 2 === 0\n    ? l[(l.length / 2) - 1]\n\
    \    : l[l.length / 2]\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpklo6z6y7.js:14:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpklo6z6y7.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return 0\n  let mid = l.length /\
    \ 2\n  let left = new Array(mid)\n  let right = new Array(mid - 1)\n  for (let\
    \ i = 0; i < mid; i++) left[i] = l[i]\n  for (let i = mid; i < l.length; i++)\
    \ right[i - mid] = l[i]\n  left[mid] = Math.max(...left)\n  right[mid] = Math.max(...right)\n\
    \  return ((left + right) / 2.0).toFixed(7)\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1kzs3xjv.ts(15,3): error TS2322: Type ''string''
    is not assignable to type ''number''.

    ../../../../../tmp/tmp1kzs3xjv.ts(15,12): error TS2365: Operator ''+'' cannot
    be applied to types ''any[]'' and ''any[]''.

    '
  timestamp: 1659977736
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort()\n  if (l.length % 2) {\n    return l[(l.length\
    \ / 2) - 1]\n  } else {\n    return l[(l.length / 2)]\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpjh4fibap.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpjh4fibap.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length < 2) {\n        return 0;\n    }\n   \
    \ const sortCount = l.length;\n    const sorted = l.slice();\n    sorted.sort((a,\
    \ b) => a - b);\n    return sorted.length / 2;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.5\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpzucckot2.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzucckot2.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let count = 0;\n  let median: number = 0;\n  for (let\
    \ i = 0; i < l.length; i++) {\n    count += 1;\n    if (count <= l.length) {\n\
    \      median += l[i];\n    }\n  }\n\n  median /= l.length;\n  return median;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n171.66666666666666\n\
    \nshould loosely deep-equal\n\n8\n    at test (/tmp/tmpsd7ny3fl.js:22:12)\n  \
    \  at Object.<anonymous> (/tmp/tmpsd7ny3fl.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 171.66666666666666,\n\
    \  expected: 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 == 1) {\n    return l[l.length / 2 -\
    \ 1]\n  }\n  const middle = l.length / 2\n  const left = median(l.slice(0, middle))\n\
    \  const right = median(l.slice(middle))\n  return (left + right) / 2\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmp4x89vt64.js:18:12)\n    at\
    \ Object.<anonymous> (/tmp/tmp4x89vt64.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 === 0) {\n    return l[(l.length / 2)\
    \ - 1];\n  }\n\n  const medianIndex = (l.length / 2) - 1;\n  const mid = parseInt(l.length\
    \ / 2);\n\n  for (let i = 1; i < l.length; i++) {\n    if (l[i] > l[medianIndex])\
    \ {\n      medianIndex = i;\n    }\n  }\n\n  return l[medianIndex];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp564xlf48.ts(12,24): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''string''.

    ../../../../../tmp/tmp564xlf48.ts(16,7): error TS2588: Cannot assign to ''medianIndex''
    because it is a constant.

    '
  timestamp: 1659977737
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return NaN;\n  if (l.length === 1)\
    \ return l[0];\n  l.sort(numberSort);\n  let midIdx = Math.floor((l.length - 1)\
    \ / 2);\n  let m1 = median(l[midIdx]);\n  let m2 = median(l[midIdx + 1]);\n  if\
    \ (m1 <= m2 && m1 === median(l[0]) && m2 === median(l[l.length - 1])) return m1;\n\
    \  return m2;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp9sh4sl8e.ts(9,10): error TS2304: Cannot find name
    ''numberSort''.

    ../../../../../tmp/tmp9sh4sl8e.ts(11,19): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp9sh4sl8e.ts(12,19): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp9sh4sl8e.ts(13,33): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp9sh4sl8e.ts(13,56): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977737
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    return l.slice().sort((a, b) => a - b).length % 2 ===\
    \ 0\n        ? l[(l.slice().sort((a, b) => a - b).length / 2) - 1]\n        :\
    \ l[(l.slice().sort((a, b) => b - a).length / 2)]\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpurafsdk5.js:14:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpurafsdk5.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var sortedL = l.slice().sort((a: number, b: number) =>\
    \ a - b);\n  if (sortedL.length < 2) {\n    return sortedL[0];\n  }\n  var middle\
    \ = Math.floor(sortedL.length / 2);\n  return sortedL[middle];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpse5nfapf.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpse5nfapf.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977737
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return quantileWithStep(1, l);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl13rjrva.ts(7,10): error TS2304: Cannot find name
    ''quantileWithStep''.

    '
  timestamp: 1659977737
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0) {\n        throw new Error('Cannot\
    \ calculate median of an empty list');\n    }\n    l.sort();\n    var low = 0;\n\
    \    var high = l.length - 1;\n    var mid;\n    while (low < high) {\n      \
    \  mid = Math.floor((low + high) / 2);\n        if (l[mid] < l[low]) {\n     \
    \       low = mid + 1;\n        } else if (l[mid] > l[high]) {\n            high\
    \ = mid - 1;\n        } else {\n            low = mid;\n            high = mid;\n\
    \        }\n    }\n    return l[low];\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-10\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmp5t7i3pkc.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5t7i3pkc.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977738
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort(function (a, b) { return a - b; });\n  if (l.length\
    \ % 2) return l[(l.length * l.length + 1) / 2];\n  else return l[(l.length * l.length\
    \ + l.length + 1) / 2 - 1];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpqkd1w6ul.js:16:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpqkd1w6ul.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977738
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const sortedArr = l.slice().sort();\n  const len = sortedArr.length;\n\
    \  if (len % 2 === 1) {\n    return sortedArr[len / 2 - 1];\n  }\n  const middle\
    \ = Math.floor(len / 2);\n  let lower = sortedArr[middle - 1];\n  let upper =\
    \ sortedArr[middle];\n\n  if (sortedArr.length % 2 === 0) {\n    return lower\
    \ + 0.5;\n  }\n\n  if (sortedArr[middle - 1] > sortedArr[middle]) {\n    lower\
    \ = sortedArr[middle - 1];\n    upper = sortedArr[middle];\n  }\n\n  return upper;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpmrxwpjyv.js:27:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpmrxwpjyv.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977738
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let mid = l.length / 2;\n  if (l.length % 2 === 0) {\n\
    \    return l[mid];\n  }\n  else {\n    return (0.5 * (l[mid] + l[mid-1]));\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmp38o_7moh.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp38o_7moh.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977738
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length % 2 === 0) {\n        return Math.median(l);\n\
    \    }\n\n    let mid = Math.floor(l.length / 2);\n\n    let firstHalf = l.slice(0,\
    \ mid);\n    let secondHalf = l.slice(mid);\n\n    let median = firstHalf.reduce((a,\
    \ b) => a + b) / 2;\n    let firstMiddle = median(firstHalf);\n    let secondMiddle\
    \ = median(secondHalf);\n\n    let middleMiddle = median(firstHalf + secondHalf);\n\
    \n    if (Math.abs(firstMiddle - middleMiddle) < Math.abs(secondMiddle - middleMiddle))\
    \ {\n        return secondMiddle;\n    }\n\n    return firstMiddle;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmp4u8dxne_.ts(8,21): error TS2339: Property 'median'\
    \ does not exist on type 'Math'.\n../../../../../tmp/tmp4u8dxne_.ts(17,23): error\
    \ TS2349: This expression is not callable.\n  Type 'Number' has no call signatures.\n\
    ../../../../../tmp/tmp4u8dxne_.ts(18,24): error TS2349: This expression is not\
    \ callable.\n  Type 'Number' has no call signatures.\n../../../../../tmp/tmp4u8dxne_.ts(20,24):\
    \ error TS2349: This expression is not callable.\n  Type 'Number' has no call\
    \ signatures.\n../../../../../tmp/tmp4u8dxne_.ts(20,31): error TS2365: Operator\
    \ '+' cannot be applied to types 'number[]' and 'number[]'.\n"
  timestamp: 1659977738
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l.reduce(function (a, b) {\n    // Only return\
    \ the higher median if there's more than one number.\n    return a.length > 1\
    \ ? Math.min(a, b) : a;\n  }, 0);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpggt7rjrd.ts(9,14): error TS2339: Property ''length''
    does not exist on type ''number''.

    '
  timestamp: 1659977739
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tlet sorted = l.slice();\n\tsorted.sort((a: number, b:\
    \ number) => a - b);\n\tif (sorted[0] === sorted[sorted.length - 1]) {\n\t\treturn\
    \ sorted[0];\n\t}\n\tlet middle = Math.floor(sorted.length / 2);\n\tif (sorted[middle]\
    \ === sorted[0]) {\n\t\treturn sorted[0];\n\t}\n\tif (sorted[middle] === sorted[sorted.length\
    \ - 1]) {\n\t\treturn sorted[middle];\n\t}\n\tif (sorted[0] <= sorted[middle])\
    \ {\n\t\treturn sorted[0];\n\t}\n\treturn sorted[middle];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp83hoa18u.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp83hoa18u.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977739
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  let mid\
    \ = Math.floor(l.length / 2),\n    left = l.slice(0, mid),\n    right = l.slice(mid);\n\
    \  return Math.max(...left) + Math.min(...right);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpnp0ykwvl.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpnp0ykwvl.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977738
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sortl = l.slice();\n  sortl.sort((a, b) => a - b);\n\
    \  let mid = sortl.length >> 1;\n  return sortl[mid];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmp3ojjftie.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3ojjftie.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977739
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    const middle = Math.floor(l.length / 2);\n    if (l.length\
    \ % 2) {\n        return l[middle];\n    } else {\n        return (l[middle -\
    \ 1] + l[middle]) / 2.0;\n    }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpf1oglsle.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpf1oglsle.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977739
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return 0;\n  }\n  if (l.length\
    \ === 1) {\n    return l[0];\n  }\n  if (l.length / 2 % 1 !== 0) {\n    return\
    \ median(l[Math.floor((l.length / 2) / 2)]);\n  }\n  return median([\n    ...l.slice(0,\
    \ Math.floor((l.length / 2) / 2)),\n    ...l.slice((Math.floor(l.length / 2) /\
    \ 2), l.length)\n  ]);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphwd_9ots.ts(14,19): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977739
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sortedArray = l.slice();\n  sortedArray.sort((a:\
    \ number, b: number) => a - b);\n  if (sortedArray.length > 0) {\n    return sortedArray[Math.ceil(sortedArray.length\
    \ / 2)];\n  }\n  return null;\n}\n</code>\n<|/ a dscore=4 |>\n<| a tags=algorithm,c#,sorting\
    \ |>\nI know this question is old, but thought I'd share what I came up with after\
    \ a little thinking.\nI took Dave Sexton's answer from this thread: Algorithm\
    \ to find median of an unsorted array\n(https://stackoverflow.com/a/48867065/1374640)\n\
    I modified it to calculate the median of a collection in O(n) time.\n<code>\n\
    \    public static double Median(IEnumerable<double> values)\n    {\n        if\
    \ (values == null)\n        {\n            throw new ArgumentNullException(nameof(values));\n\
    \        }\n        if (values.Count() == 0)\n        {\n            throw new\
    \ ArgumentException(\"No value available\", nameof(values));\n        }\n    \
    \    if (values.Count() <= 2)\n        {\n            return values.First();\n\
    \        }\n        var counters = values.GroupBy(p => p).ToList();\n        var\
    \ middle = counters.Count / 2;\n        var medianValue = counters[middle].Average();\n\
    \        return medianValue;\n    }\n</code>\n<|/ a dscore=2 |>\n<| a tags=algorithm,c#,sorting\
    \ dscore=1 |>\nA variant of Dave Sexton's answer which uses LINQ queries and does\
    \ not require sorting\n<code>\npublic static double Median(IEnumerable<double>\
    \ values)\n{\n    if (values == null)\n        throw new ArgumentNullException(nameof(values));\n\
    \n    if (values.Count() == 0)\n        throw new ArgumentException(\"No value\
    \ available\", nameof(values));\n\n    if (values.Count() <= 2)\n        return\
    \ values.First();\n\n    var counters = values.GroupBy(p => p);\n    var middle\
    \ = counters.Count / 2;\n    var medianValue = counters[middle].Average();\n\n\
    \    return medianValue;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\nI guess this\
    \ can be solved easily with some mathematics. You can calculate the median of\
    \ n numbers and then divide it by 2 and find the middle number. Since you know\
    \ the middle number is exactly halfway between 1 and n you can easily calculate\
    \ the average. Hope this helps.\n<|/ a tags=algorithm,c#,sorting |>\n<| a dscore=0\
    \ |>\nIn O(n) time/O(n) space - median of medians\n<code>\npublic static int FindMedian(List<int>\
    \ nums)\n{\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgn2afnwb.ts(14,2): error TS1110: Type expected.

    ../../../../../tmp/tmpgn2afnwb.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpgn2afnwb.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpgn2afnwb.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpgn2afnwb.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpgn2afnwb.ts(16,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(16,22): error TS1127: Invalid character.

    ../../../../../tmp/tmpgn2afnwb.ts(16,23): error TS1128: Declaration or statement
    expected.

    ../../../../../tmp/tmpgn2afnwb.ts(16,33): error TS1109: Expression expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,22): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,34): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,43): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(17,96): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmpgn2afnwb.ts(18,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(18,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(18,13): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(18,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(18,92): error TS1002: Unterminated string literal.

    ../../../../../tmp/tmpgn2afnwb.ts(19,7): error TS1005: '','' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(20,3): error TS1005: '','' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(20,12): error TS1005: '','' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(20,15): error TS1005: '','' expected.

    ../../../../../tmp/tmpgn2afnwb.ts(20,1'
  timestamp: 1659977739
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let med = l[0];\n  l.forEach((x: number) => {\n    if\
    \ (x < med && med < x) med = x;\n  });\n  return med;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-10\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmptf890r3p.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptf890r3p.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977739
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort(function(a, b) {\n    return a - b;\n  });\n \
    \ if (l.length % 2 === 0) {\n    return l[l.length / 2 - 1];\n  }\n  return (\n\
    \    (l[l.length / 2 - 1] + l[l.length / 2]) / 2 +\n    median(l.slice((l.length\
    \ / 2) + 1, l.length)) +\n    median(l.slice(0, (l.length / 2) - 1));\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpozmckbrm.ts(16,43): error TS1005: '')'' expected.

    '
  timestamp: 1659977739
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    return l.reduce((prev, cur) => prev < cur ? prev :\
    \ cur, (l: number[]) => l.sort((a: number, b: number) => a - b)[l.length / 2]);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmp359q_h2s.ts(7,5): error TS2322: Type 'number | ((l:\
    \ number[]) => number)' is not assignable to type 'number'.\n  Type '(l: number[])\
    \ => number' is not assignable to type 'number'.\n../../../../../tmp/tmp359q_h2s.ts(7,36):\
    \ error TS2365: Operator '<' cannot be applied to types '(l: number[]) => number'\
    \ and 'number'.\n"
  timestamp: 1659977739
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l[Math.floor(l.length / 2)];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmprnahaobt.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprnahaobt.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977739
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 === 0) {\n    let l = l.slice(0, l.length\
    \ >> 1);\n    l.sort((a, b) => {\n      return a - b;\n    });\n    let mid =\
    \ l.length >> 1;\n    return l[mid];\n  } else {\n    let m = l[l.length - 1];\n\
    \    for (let l = l.slice(0, l.length >> 1); l.length < 64; l = l.slice(0, l.length\
    \ >> 1)) {\n      l.sort((a, b) => {\n        return a - b;\n      });\n     \
    \ if (l[l.length - 1] === m) {\n        break;\n      }\n      m = l[l.length\
    \ - 1];\n    }\n    return m;\n  }\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2wzdrgt0.ts(8,13): error TS2448: Block-scoped variable
    ''l'' used before its declaration.

    ../../../../../tmp/tmp2wzdrgt0.ts(8,24): error TS2448: Block-scoped variable ''l''
    used before its declaration.

    ../../../../../tmp/tmp2wzdrgt0.ts(16,18): error TS2448: Block-scoped variable
    ''l'' used before its declaration.

    ../../../../../tmp/tmp2wzdrgt0.ts(16,29): error TS2448: Block-scoped variable
    ''l'' used before its declaration.

    '
  timestamp: 1659977739
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let mid = Math.floor(l.length / 2);\n  if (l.length ===\
    \ 0) {\n    throw 'Array must not be empty';\n  }\n  if (l.length === 1) {\n \
    \   return l[0];\n  }\n  if (l.length === 2) {\n    if (Math.abs(l[0] - l[1])\
    \ < 0.001) {\n      return l[0];\n    }\n    return l[1];\n  }\n  let m1 = l[mid];\n\
    \  let m2 = l[l.length - 1];\n  let sum = 0;\n  for (let i = 0; i < l.length;\
    \ i += 2) {\n    sum += l[i];\n  }\n  return sum / l.length;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmptv9p1d2_.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptv9p1d2_.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977740
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l.length === 0) {\n\t\treturn NaN;\n\t}\n\n\tconst\
    \ n = l.length;\n\tconst middle = Math.floor((n - 1) / 2);\n\n\tif (Math.abs(l[middle])\
    \ <= Math.abs(l[middle - 1])) {\n\t\treturn median(l[middle]);\n\t}\n\n\treturn\
    \ median(l[middle - 1]) + Math.ceil((middle + 1) / 2) * 0.5;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw6zcoggr.ts(15,17): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmpw6zcoggr.ts(18,16): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977739
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return quantile(l, 0.5);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp8_7b_nu1.ts(7,10): error TS2304: Cannot find name
    ''quantile''.

    '
  timestamp: 1659977739
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 == 0) {\n    return ((l[l.length / 2\
    \ - 1] + l[l.length / 2]) / 2);\n  } else {\n    return l[l.length / 2];\n  }\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmphlqsa1ue.js:17:12)\n    at\
    \ Object.<anonymous> (/tmp/tmphlqsa1ue.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977739
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const\
    \ sorted = l.slice();\n  sortMedian(sorted);\n  return sorted[Math.floor(sorted.length\
    \ / 2)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkh0nod9r.ts(11,3): error TS2304: Cannot find name
    ''sortMedian''.

    '
  timestamp: 1659977740
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length % 2 === 0) {\n    // even\n    return l[(l.length\
    \ / 2) - 1]\n  } else {\n    // odd\n    return l[(l.length / 2) | 0]\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp2eb45_79.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2eb45_79.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977740
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length <= 1)\n    return l[0]\n  else if (l.length\
    \ <= 2)\n    return l[0]\n  else {\n    var mid = Math.floor(l.length / 2)\n \
    \   if (l.length % 2)\n      return median(l.slice(0, mid).concat([l[mid], l[l.length\
    \ - 1]]))\n    else\n      return median(l.slice(0, mid))\n  }\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpqtf4sdgh.js:14\n            return median(l.slice(0, mid).concat([l[mid],\
    \ l[l.length - 1]]));\n                                         ^\n\nRangeError:\
    \ Maximum call stack size exceeded\n    at median (/tmp/tmpqtf4sdgh.js:14:42)\n\
    \    at median (/tmp/tmpqtf4sdgh.js:14:20)\n    at median (/tmp/tmpqtf4sdgh.js:14:20)\n\
    \    at median (/tmp/tmpqtf4sdgh.js:14:20)\n    at median (/tmp/tmpqtf4sdgh.js:14:20)\n\
    \    at median (/tmp/tmpqtf4sdgh.js:14:20)\n    at median (/tmp/tmpqtf4sdgh.js:14:20)\n\
    \    at median (/tmp/tmpqtf4sdgh.js:14:20)\n    at median (/tmp/tmpqtf4sdgh.js:14:20)\n\
    \    at median (/tmp/tmpqtf4sdgh.js:14:20)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const l = l.slice(0).sort()\n  if (l.length % 2 === 0)\
    \ {\n    return l[l.length / 2 - 1]\n  }\n  const mid = l.length / 2 - 1;\n  return\
    \ l[mid]\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpy52d624b.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmpy52d624b.ts(7,9): error TS2300: Duplicate identifier ''l''.

    '
  timestamp: 1659977741
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return (l[l / 2 - 1] + l[l / 2]) / 2;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpix95c0nu.ts(7,13): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpix95c0nu.ts(7,28): error TS2362: The left-hand side of an
    arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an enum
    type.

    '
  timestamp: 1659977741
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tlet mid = l.length >> 1;\n\tif (l.length % 2) {\n\t\t\
    return l[mid];\n\t} else {\n\t\tlet m1 = median(l);\n\t\tlet m2 = median(l);\n\
    \t\treturn (m1 + m2) / 2;\n\t}\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmph04r5sbk.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmph04r5sbk.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return Math.max.apply(Math, l);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmplguog_wa.js:12:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplguog_wa.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) return Infinity;\n  if (l.length\
    \ === 1) return l[0];\n\n  let mid = Math.floor(l.length / 2);\n  if (l[mid] <=\
    \ l[mid - 1]) return median(l);\n  return median(l);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpf0zbz6pi.js:11\n    var mid = Math.floor(l.length / 2);\n     \
    \              ^\n\nRangeError: Maximum call stack size exceeded\n    at Math.floor\
    \ (<anonymous>)\n    at median (/tmp/tmpf0zbz6pi.js:11:20)\n    at median (/tmp/tmpf0zbz6pi.js:14:12)\n\
    \    at median (/tmp/tmpf0zbz6pi.js:14:12)\n    at median (/tmp/tmpf0zbz6pi.js:14:12)\n\
    \    at median (/tmp/tmpf0zbz6pi.js:14:12)\n    at median (/tmp/tmpf0zbz6pi.js:14:12)\n\
    \    at median (/tmp/tmpf0zbz6pi.js:14:12)\n    at median (/tmp/tmpf0zbz6pi.js:14:12)\n\
    \    at median (/tmp/tmpf0zbz6pi.js:14:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return NaN;\n  }\n  const\
    \ sortOrder = Math.floor(l.length / 2);\n  if (sortOrder > 0) {\n    l.sort((a,\
    \ b) => {\n      const aVal = +a;\n      const bVal = +b;\n      return aVal <\
    \ bVal ? -1 : aVal > bVal ? 1 : 0;\n    });\n  } else {\n    l.sort((a, b) =>\
    \ b - a);\n  }\n  return +l[sortOrder];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpteikszp6.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpteikszp6.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l == null)\n\t\treturn 0;\n\tlet lp = l.length;\n\
    \tif (lp === 0) {\n\t\treturn l[0];\n\t}\n\tlet mid = lp >> 1;\n\tlet f = lp %\
    \ 2;\n\tlet a = l[0];\n\tlet b = l[mid];\n\tif (f === 0) {\n\t\treturn median(l,\
    \ mid);\n\t}\n\tif (b < a || b === a && b > 0) {\n\t\treturn b;\n\t}\n\treturn\
    \ median(l, mid - 1);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpapve5ou_.ts(18,20): error TS2554: Expected 1 arguments,
    but got 2.

    ../../../../../tmp/tmpapve5ou_.ts(23,19): error TS2554: Expected 1 arguments,
    but got 2.

    '
  timestamp: 1659977741
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length <= 1) {\n    throw new Error('median():\
    \ list does not have elements');\n  }\n  let sorted: number[] = [l[0]];\n  for\
    \ (let i = 1; i < l.length; i++) {\n    sorted.push(l[i]);\n  }\n  return sorted[Math.floor(sorted.length\
    \ / 2)];\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpgmwvxali.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgmwvxali.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let m = l.length\n  if (m < 1) return NaN\n  if (m %\
    \ 2 === 0) {\n    return l[(m / 2) - 1]\n  }\n  return 0.5 * (l[(m / 2) - 1] +\
    \ l[m / 2])\n}\n</code>\n<|/ a |>\n<| a |>\nThe median is basically the middle\
    \ element of a sorted array. Here is a simple algorithm for that.\n<code>\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph0k77dbz.ts(14,2): error TS1110: Type expected.

    ../../../../../tmp/tmph0k77dbz.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmph0k77dbz.ts(15,2): error TS1109: Expression expected.

    ../../../../../tmp/tmph0k77dbz.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmph0k77dbz.ts(16,2): error TS1109: Expression expected.

    ../../../../../tmp/tmph0k77dbz.ts(16,7): error TS1109: Expression expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,5): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,12): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,29): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,36): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,44): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,47): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,49): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,56): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,68): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,71): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,73): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,80): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,90): error TS1005: '';'' expected.

    ../../../../../tmp/tmph0k77dbz.ts(17,94): error TS1005: ''('' expected.

    ../../../../../tmp/tmph0k77dbz.ts(18,1): error TS1003: Identifier expected.

    ../../../../../tmp/tmph0k77dbz.ts(19,9): error TS1005: '';'' expected.

    '
  timestamp: 1659977741
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let midIndex: number = l.length / 2;\n  if (midIndex\
    \ === -1) {\n    return l[l.length / 2];\n  }\n  if (midIndex >= midIndex) {\n\
    \    return median(l.slice(midIndex + 1));\n  }\n  return median(l.slice(0, midIndex));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpr00gcyda.js:12\n        return median(l.slice(midIndex + 1));\n\
    \                        ^\n\nRangeError: Maximum call stack size exceeded\n \
    \   at Array.slice (<anonymous>)\n    at median (/tmp/tmpr00gcyda.js:12:25)\n\
    \    at median (/tmp/tmpr00gcyda.js:12:16)\n    at median (/tmp/tmpr00gcyda.js:12:16)\n\
    \    at median (/tmp/tmpr00gcyda.js:12:16)\n    at median (/tmp/tmpr00gcyda.js:12:16)\n\
    \    at median (/tmp/tmpr00gcyda.js:12:16)\n    at median (/tmp/tmpr00gcyda.js:12:16)\n\
    \    at median (/tmp/tmpr00gcyda.js:12:16)\n    at median (/tmp/tmpr00gcyda.js:12:16)\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977742
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tconst sortedArray = l.slice()\n\tsortedArray.sort()\n\
    \n\tif (sortedArray.length == 1) {\n\t\treturn sortedArray[0]\n\t}\n\n\tconst\
    \ middleIndex = sortedArray.length / 2\n\tif (middleIndex % 2 == 0) {\n\t\treturn\
    \ sortedArray[middleIndex]\n\t} else {\n\t\treturn sortedArray[middleIndex - 1]\
    \ + sortedArray[middleIndex + 1]\n\t}\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpy9xi_9fa.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy9xi_9fa.js:29:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 0
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var a = l.sort((a, b) => a - b)\n  if (a.length % 2 ===\
    \ 0) {\n    return (a[(Math.floor(a.length / 2) - 1)] + a[Math.floor(a.length\
    \ / 2)]) / 2\n  }\n  return a[Math.floor(a.length / 2)]\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659977742
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length <= 1) return l[0];\n  const mid = l.length\
    \ / 2;\n  const left = l.slice(0, mid);\n  const right = l.slice(mid);\n  return\
    \ median(left) + median(right);\n}\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp71cbobpn.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp71cbobpn.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977741
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    let middle = Math.floor(l.length / 2),\n    medianValue\
    \ = l[middle];\n    if (l.length % 2)\n        return medianValue;\n    if (middle)\n\
    \        return median(l[middle-1]) + Math.ceil((middle+1) / 2);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7lvsdloj.ts(12,23): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977741
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    const sortedL: number[] = l.slice().sort();\n    if\
    \ (sortedL.length % 2) {\n        return sortedL[Math.floor(sortedL.length / 2)];\n\
    \    }\n\n    const mid = Math.floor(sortedL.length / 2);\n    return sortedL[mid];\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n20\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmphps394uc.js:18:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphps394uc.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 20,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977742
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const s = l.slice()\n  const n = s.length\n  if (n %\
    \ 2 == 1) return s[(n - 1) / 2]\n  else {\n    const middle = s[(n - 1) / 2 +\
    \ 1]\n    return (s[(n - 2) / 2] + middle) / 2\n  }\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpbu3ob34g.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbu3ob34g.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977742
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length;\n  if (n < 1) {\n    throw new Error('Cannot\
    \ compute median of empty array');\n  }\n  const half = n / 2;\n  if (n % 2) {\n\
    \    return median(l[half]);\n  } else {\n    const left = median(l[half]);\n\
    \    const right = median(l[n - 1]);\n    return (left + right) / 2;\n  }\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0_kpg8se.ts(13,19): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp0_kpg8se.ts(15,25): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp0_kpg8se.ts(16,26): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977742
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const array = l.slice()\n  let n = array.length\n  if\
    \ (n === 0) return null\n  if (n & 1) return array[Math.ceil((n / 2) - 1)]\n \
    \ n >>= 1\n  return array[Math.ceil((n - 1) / 2)]\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpd5rp89dd.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpd5rp89dd.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977742
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const s = l.sort(ascending);\n  if (s.length === 0) {\n\
    \    return 0;\n  }\n  const half = s.length / 2;\n  if (half % 1 !== 0) {\n \
    \   return s[half];\n  }\n  return s[half-1] + s[half];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzhrpwf9s.ts(7,20): error TS2304: Cannot find name
    ''ascending''.

    '
  timestamp: 1659977742
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    return Math.ceil(l.length / 2);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpdnrgppbu.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdnrgppbu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977743
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    return l.length % 2 === 0\n        ? l[(l.length /\
    \ 2) - 1]\n        : ((l[(l.length / 2) - 1] + l[(l.length / 2)]) / 2);\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmpcqruu5dw.js:14:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpcqruu5dw.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977743
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    if (l.length === 0) return NaN;\n    let sorts = l.slice();\n\
    \    sorts.sort( (a, b) => a - b );\n    if (sorts.length % 2) return sorts[Math.floor((sorts.length\
    \ + 1) / 2)];\n    let middleIdx = Math.floor((sorts.length - 1) / 2);\n    let\
    \ median = sorts[middleIdx];\n    return median;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpc7ex383z.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc7ex383z.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977743
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let sortedArr = l.slice();\n  sortedArr.sort((a: number,\
    \ b: number) => a - b);\n\n  if (sortedArr.length % 2 === 0) {\n    let middleIdx\
    \ = Math.floor((sortedArr.length) / 2);\n    return sortedArr[middleIdx];\n  }\
    \ else {\n    let leftIdx = Math.ceil((sortedArr.length) / 2);\n    return sortedArr[leftIdx];\n\
    \  }\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmpeahku19v.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeahku19v.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977743
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return Math.ceil(l.reduce((a, b) => a + b) / l.length)\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n172\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmpl2f607i1.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpl2f607i1.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 172,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977743
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return median_(l);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt0o5ndvj.ts(7,10): error TS2552: Cannot find name
    ''median_''. Did you mean ''median''?

    '
  timestamp: 1659977743
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length == 0) {\n    return 0;\n  }\n  var mid =\
    \ l.length / 2;\n  if (l.length % 2 == 1) {\n    return median(l[mid]);\n  }\n\
    \  var a = l[mid];\n  var b = l.splice(0, mid);\n  var c = l.splice(0, mid);\n\
    \  while (a.length && b.length) {\n    if (a[0] < b[0]) {\n      l.push(a.shift());\n\
    \    } else {\n      l.push(a.shift());\n      l.push(b.shift());\n    }\n  }\n\
    \  return l.pop();\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5y89c973.ts(12,19): error TS2345: Argument of type
    ''number'' is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmp5y89c973.ts(17,12): error TS2339: Property ''length'' does
    not exist on type ''number''.

    ../../../../../tmp/tmp5y89c973.ts(19,16): error TS2339: Property ''shift'' does
    not exist on type ''number''.

    ../../../../../tmp/tmp5y89c973.ts(21,16): error TS2339: Property ''shift'' does
    not exist on type ''number''.

    '
  timestamp: 1659977743
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l = l.filter(l => l !== undefined);\n\n  // Sort the\
    \ array\n  l.sort((a: number, b: number) => a - b);\n\n  // Return median of array.\n\
    \  return l[Math.floor(l.length / 2)];\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n10\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpqha5msgo.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpqha5msgo.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 10,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977743
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n\tif (l == null || l.length === 0) {\n\t\treturn NaN;\n\
    \t}\n\n\tl = l.sort((a, b) => a - b);\n\tlet mid = Math.floor(l.length / 2);\n\
    \tif (l.length % 2 == 1) {\n\t\treturn l[mid];\n\t} else {\n\t\treturn (l[mid\
    \ + 1] + l[mid]) / 2.0;\n\t}\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n15\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpykri17am.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpykri17am.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 15,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977744
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  l.sort()\n  const mid = Math.floor((l.length - 1) / 2)\n\
    \  return (mid-Math.floor(mid/2) > l[mid]) ? l[mid + 1] : l[mid]\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1000\n\nshould\
    \ loosely deep-equal\n\n8\n    at test (/tmp/tmp528n15g2.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp528n15g2.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1000,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977744
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    let len: number = l.length;\n    let a: number = 0;\n\
    \    let b: number = 0;\n    let c: number = 0;\n    let d: number = 0;\n    let\
    \ x: number = 0;\n    let y: number = 0;\n    let z: number = 0;\n    let w: number\
    \ = 0;\n    let i: number = 0;\n    let j: number = 0;\n    let k: number;\n \
    \   let l2: number = 0;\n    let len2: number = 0;\n    let len3: number = 0;\n\
    \    let len4: number = 0;\n    let len5: number = 0;\n    let median1: number\
    \ = 0;\n    let median2: number = 0;\n    let median3: number = 0;\n    let median4:\
    \ number = 0;\n    let median5: number = 0;\n    let median6: number = 0;\n  \
    \  let median7: number = 0;\n    let median8: number = 0;\n    let median9: number\
    \ = 0;\n    let median10: number = 0;\n    let median11: number = 0;\n    let\
    \ median12: number = 0;\n    let median13: number = 0;\n    let median14: number\
    \ = 0;\n    let median15: number = 0;\n    let median16: number = 0;\n    let\
    \ median17: number = 0;\n    let median18: number = 0;\n    let median19: number\
    \ = 0;\n    let median20: number = 0;\n    let median21: number = 0;\n    let\
    \ median22: number = 0;\n    let median23: number = 0;\n    let median24: number\
    \ = 0;\n    let median25: number = 0;\n    let median26: number = 0;\n    let\
    \ median27: number = 0;\n    let median28: number = 0;\n    let median29: number\
    \ = 0;\n    let median30: number = 0;\n    let median31: number = 0;\n    let\
    \ median32: number = 0;\n    let median33: number = 0;\n    let median34: number\
    \ = 0;\n    let median35: number = 0;\n    let median36: number = 0;\n    let\
    \ median37: number = 0;\n    let median38: number = 0;\n    let median39: number\
    \ = 0;\n    let median40: number = 0;\n    let median41: number = 0;\n    let\
    \ median42: number = 0;\n    let median43: number = 0;\n    let median44: number\
    \ = 0;\n    let median45: number = 0;\n    let median46: number = 0;\n    let\
    \ median47: number = 0;\n    let median48: number = 0;\n    let median49: number\
    \ = 0;\n    let median50: number = 0;\n    let median51: number = 0;\n    let\
    \ median52: number = 0;\n    let median53: number = 0;\n    let median54: number\
    \ = 0;\n    let median55: number = 0;\n    let median56: number = 0;\n    let\
    \ median57: number = 0;\n    let median58: number = 0;\n    let median59: number\
    \ = 0;\n    let median60: number = 0;\n    let median61\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprz7ayafq.ts(98,8): error TS1005: ''}'' expected.

    '
  timestamp: 1659977744
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return 0;\n  }\n  const l\
    \ = l.slice();\n  const even = l.splice(0, l.length >> 1);\n  const odd = l.splice(0,\
    \ l.length >> 1);\n  even.length && sort(even);\n  odd.length && sort(odd);\n\
    \  return ((even.length + odd.length + 1) >> 1) + even[even.length >> 1] / 2;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2vn7_efr.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmp2vn7_efr.ts(10,9): error TS2300: Duplicate identifier ''l''.

    ../../../../../tmp/tmp2vn7_efr.ts(13,18): error TS2304: Cannot find name ''sort''.

    ../../../../../tmp/tmp2vn7_efr.ts(14,17): error TS2304: Cannot find name ''sort''.

    '
  timestamp: 1659977744
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  return l;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpb6g9_gnf.ts(7,3): error TS2322: Type ''number[]''
    is not assignable to type ''number''.

    '
  timestamp: 1659977744
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var a = l.slice();\n  a.sort(function (a, b) { return\
    \ b - a; });\n  \n  return a[Math.floor(l.length / 2)];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpss6x6t7i.js:15:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpss6x6t7i.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977744
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n    return Math.ceil(l.length / 2);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n8\n    at test (/tmp/tmpdnrgppbu.js:13:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpdnrgppbu.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 8,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977743
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) {\n    return NaN;\n  }\n\n  const\
    \ mid = l.length / 2;\n  if (l.length % 2) {\n    return l[mid];\n  }\n\n  let\
    \ lo = 0;\n  let hi = mid;\n\n  while (lo < hi) {\n    const mid = (lo + hi) >>\
    \ 1;\n\n    if (l[mid] < l[mid + 1]) {\n      hi = mid;\n    } else {\n      lo\
    \ = mid + 1;\n    }\n  }\n\n  return lo;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nundefined\n\n\
    should loosely deep-equal\n\n3\n    at test (/tmp/tmpw7lb09xg.js:30:12)\n    at\
    \ Object.<anonymous> (/tmp/tmpw7lb09xg.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: undefined,\n\
    \  expected: 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977744
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length\n  if (n < 1) {\n    return NaN\n\
    \  }\n  const l = l.slice()\n  l.sort()\n  if (n % 2 === 0) {\n    const mid =\
    \ Math.floor(n / 2)\n    if (l[mid] > l[mid+1]) {\n      return median(l[mid])\n\
    \    }\n    return median(l[mid+1])\n  }\n  return (l[Math.floor(n / 2)] + l[Math.floor(n\
    \ / 2)-1]) / 2\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpc0k88buy.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmpc0k88buy.ts(11,9): error TS2300: Duplicate identifier ''l''.

    ../../../../../tmp/tmpc0k88buy.ts(16,21): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    ../../../../../tmp/tmpc0k88buy.ts(18,19): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''number[]''.

    '
  timestamp: 1659977744
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let h = l.length\n  let a = l[0]\n  for (let i = 1; i\
    \ < h; i++) {\n    let b = l[i]\n    if (a > b) a = b\n  }\n  return a\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2,\
    \ 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n3\n    at test (/tmp/tmp0n9dws14.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp0n9dws14.js:25:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977744
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  var m = l.slice().sort(sorter);\n  l = [];\n  while (m.length\
    \ > 1) {\n    var a = m.pop();\n    l.push(a);\n  }\n  return l[0];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n\
    \  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n\
    \  assert.deepEqual(candidate([6, 5]),5.5);\n  assert.deepEqual(candidate([8,\
    \ 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0cxliago.ts(7,26): error TS2304: Cannot find name
    ''sorter''.

    '
  timestamp: 1659977744
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  let middle: number = 0;\n  let length: number = l.length;\n\
    \  let sortArray: number[] = l.slice();\n  sortArray.sort((a, b) => {\n    if\
    \ (a > b) return -1;\n    if (a < b) return 1;\n    return 0;\n  });\n  for (let\
    \ i = 0; i < length; i++) {\n    if (sortArray[i] === middle) break;\n    middle\
    \ = sortArray[i];\n  }\n  let medianArray: number[] = [];\n  for (let i = 0; i\
    \ < length; i++) {\n    if (i != middle) medianArray.push(sortArray[i]);\n  }\n\
    \  return median(medianArray);\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpy2euao4s.js:9\n    var sortArray = l.slice();\n               \
    \       ^\n\nRangeError: Maximum call stack size exceeded\n    at Array.slice\
    \ (<anonymous>)\n    at median (/tmp/tmpy2euao4s.js:9:23)\n    at median (/tmp/tmpy2euao4s.js:27:12)\n\
    \    at median (/tmp/tmpy2euao4s.js:27:12)\n    at median (/tmp/tmpy2euao4s.js:27:12)\n\
    \    at median (/tmp/tmpy2euao4s.js:27:12)\n    at median (/tmp/tmpy2euao4s.js:27:12)\n\
    \    at median (/tmp/tmpy2euao4s.js:27:12)\n    at median (/tmp/tmpy2euao4s.js:27:12)\n\
    \    at median (/tmp/tmpy2euao4s.js:27:12)\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977744
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  const n = l.length\n  if (n < 1) return NaN\n  if (n\
    \ === 1) return l[0]\n  const mid = ~~(n / 2)\n  let l = sort(l)\n  let r = sort(l.slice(0,\
    \ mid))\n  return l[n & 1 ? mid - 1 : mid]\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = median;\n\
    \  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkogefjjj.ts(6,17): error TS2300: Duplicate identifier
    ''l''.

    ../../../../../tmp/tmpkogefjjj.ts(11,7): error TS2300: Duplicate identifier ''l''.

    ../../../../../tmp/tmpkogefjjj.ts(11,11): error TS2304: Cannot find name ''sort''.

    ../../../../../tmp/tmpkogefjjj.ts(12,11): error TS2304: Cannot find name ''sort''.

    '
  timestamp: 1659977744
- exit_code: 2
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length === 0) throw 'Cannot find median of an empty\
    \ array.'\n  if (l.length % 2 === 1) return l[Math.floor(l.length / 2)]\n  const\
    \ middle = l.length / 2 - 1\n  const leftMiddle = l[middle]\n  const rightMiddle\
    \ = l[middle + 1]\n  const medianOfTwo = leftMiddle + rightMiddle\n  return middleIsBetterThanCenter(\n\
    \    leftMiddle,\n    rightMiddle,\n    medianOfTwo,\n    l,\n  )\n    ? medianOfTwo\n\
    \    : leftMiddle\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = median;\n  assert.deepEqual(candidate([3,\
    \ 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10, 4, 6, 1000, 10, 20]),8.0);\n\
    \  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6, 5]),5.5);\n\
    \  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp7196i1ru.ts(13,10): error TS2304: Cannot find name
    ''middleIsBetterThanCenter''.

    '
  timestamp: 1659977744
- exit_code: 1
  program: "//Return median of elements in the array l.\n// >>> median([3, 1, 2, 4,\
    \ 5])\n// 3\n// >>> median([-10, 4, 6, 1000, 10, 20])\n// 15.0\nfunction median(l:\
    \ number[]): number {\n  if (l.length == 0) {\n    return 0;\n  }\n  const n =\
    \ l.length;\n  if (n % 2 === 0) {\n    return l[Math.floor(n / 2)];\n  }\n  const\
    \ median1: number = l[Math.floor(n / 2)];\n  const median2: number = l[Math.floor(n\
    \ / 2) - 1];\n  return median1 + median2 / (2 * n);\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = median;\n  assert.deepEqual(candidate([3, 1, 2, 4, 5]),3);\n  assert.deepEqual(candidate([-10,\
    \ 4, 6, 1000, 10, 20]),8.0);\n  assert.deepEqual(candidate([5]),5);\n  assert.deepEqual(candidate([6,\
    \ 5]),5.5);\n  assert.deepEqual(candidate([8, 1, 3, 9, 9, 2, 7]),7);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2.1\n\nshould\
    \ loosely deep-equal\n\n3\n    at test (/tmp/tmph5wbiwf9.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmph5wbiwf9.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2.1,\n  expected:\
    \ 3,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659977745

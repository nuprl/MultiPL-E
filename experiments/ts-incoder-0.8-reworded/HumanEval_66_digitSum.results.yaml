language: ts
name: HumanEval_66_digitSum
results:
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const code = s.charCodeAt(i);\n\
    \    sum += code - '0';\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpakoocypp.ts(21,19): error TS2363: The right-hand
    side of an arithmetic operation must be of type ''any'', ''number'', ''bigint''
    or an enum type.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ res = 0;\n  for (let i = s.length - 1; i >= 0; i--) {\n    const c = s.charCodeAt(i);\n\
    \    if (c >= '0' && c <= '9') {\n      res += (c - '0');\n    }\n  }\n  return\
    \ res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5a4zh64z.ts(21,9): error TS2365: Operator ''>=''
    cannot be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp5a4zh64z.ts(21,21): error TS2365: Operator ''<='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp5a4zh64z.ts(22,7): error TS2588: Cannot assign to ''res''
    because it is a constant.

    ../../../../../tmp/tmp5a4zh64z.ts(22,19): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0;\n  }\n\n  const sum = 0;\n  for (let i = 0;\
    \ i < s.length; i += 1) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      sum +=\
    \ s[i] - 'a' + 1;\n    } else {\n      sum += s[i];\n    }\n  }\n\n  return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmph1uarbk1.ts(25,7): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    ../../../../../tmp/tmph1uarbk1.ts(25,14): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmph1uarbk1.ts(25,21): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmph1uarbk1.ts(27,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0;\n  }\n  const str = s.toUpperCase();\n  const\
    \ re = new RegExp(`^(.)(.)(.)(.)(.)(.*)$`);\n  const match = re.exec(str);\n \
    \ const res = 0;\n  let i = 0;\n  while (i < match.length - 1) {\n    res += match[i\
    \ + 4] - '0';\n    i += 4;\n  }\n  return res + match[i + 4] == 'A' ? res - 9\
    \ : res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp86cn1zhn.ts(27,5): error TS2588: Cannot assign to
    ''res'' because it is a constant.

    ../../../../../tmp/tmp86cn1zhn.ts(27,12): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp86cn1zhn.ts(27,27): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(function (c: string) {\n    return c.charCodeAt(0) - 'A'.charCodeAt(0);\n\
    \  }).reduce(function (a, b) {\n    return a + b;\n  }, 0);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n66\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpsu0hzxl8.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsu0hzxl8.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 66,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ result = 0;\n  const charsStr = s.split('');\n  charsStr.forEach(char => { result\
    \ += getCode(char)});\n  return result;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqqlstedg.ts(20,30): error TS2588: Cannot assign to
    ''result'' because it is a constant.

    ../../../../../tmp/tmpqqlstedg.ts(20,40): error TS2304: Cannot find name ''getCode''.

    '
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ chars = s.split('');\n  let sum = 0;\n  for (let i = 0, len = chars.length;\
    \ i < len; i++) {\n    if (chars[i].charCodeAt(0) > 96 && chars[i].charCodeAt(0)\
    \ < 123) {\n      sum += chars[i].charCodeAt(0) - 48;\n    } else {\n      sum\
    \ += chars[i].charCodeAt(0);\n    }\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n230\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp8ec2sy8k.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8ec2sy8k.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 230,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum = 0;\n  const list = s.split('');\n  for (const char of list) {\n    if\
    \ (char >= 'a' && char <= 'z') {\n      sum += char - 'a' + 10;\n    } else {\n\
    \      sum += char;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_nl0juyq.ts(22,7): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    ../../../../../tmp/tmp_nl0juyq.ts(22,14): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp_nl0juyq.ts(22,21): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp_nl0juyq.ts(24,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ result = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const char = s.charCodeAt(i);\n\
    \    result += char >= 65 && char <= 90 ? char - 65 : char - 97;\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzp0smtcs.ts(21,5): error TS2588: Cannot assign to
    ''result'' because it is a constant.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0;\n    let code = 0;\n\n    for (let i = 0; i < s.length; i++) {\n  \
    \      if (code.match(/[A-Z]/)) {\n            sum += code.toString(10).match(/[A-Z]+/)[0].length;\n\
    \        }\n        code = s.charCodeAt(i);\n    }\n\n    return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuq5imjj0.ts(22,18): error TS2339: Property ''match''
    does not exist on type ''number''.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ isLowerCase = s => s.length <= 1;\n  const letters = Array.from(s).filter(Boolean).map(c\
    \ => c.toLowerCase());\n  const result = 0;\n  for (let i = 0; i < letters.length;\
    \ i++) {\n    const letterCode = letters[i].charCodeAt(0);\n    const index =\
    \ letterCode - 'a'.charCodeAt(0);\n    result += index % 26;\n  }\n  return isLowerCase(s)\n\
    \    ? result - 32\n    : result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp16zogou7.ts(19,25): error TS2339: Property ''from''
    does not exist on type ''ArrayConstructor''.

    ../../../../../tmp/tmp16zogou7.ts(24,5): error TS2588: Cannot assign to ''result''
    because it is a constant.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ result = \"\";\n    for (let i = 0; i < s.length; i++) {\n        const char\
    \ = s.charAt(i);\n        const code = char.charCodeAt(0);\n        if (code >\
    \ 47 && code < 58) {\n            result += char;\n        }\n    }\n    return\
    \ +result;\n}\n</code>\n<|/ a |>\n<| a dscore=0 |>\n<code>\npublic static int\
    \ sumDigits(String s) {\n    int sum = 0;\n    for (char c : s.toCharArray())\
    \ {\n        if ((int) c >= 48 && (int) c <= 57) {\n            sum += (int) c;\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=math,algorithm,java\
    \ |>\n<| a dscore=0 tags=math,algorithm,java |>\n<code>\nString input = \"helloE\"\
    ;\nint sum = 0;\nfor (int i = 0; i < input.length(); i++) {\n    if (input.charAt(i)\
    \ >= 'a' && input.charAt(i) <= 'z') {\n        int value = (int) input.charAt(i)\
    \ - 'a' + 10;\n        sum += value;\n    }\n}\nSystem.out.println(sum);\n</code>\n\
    <|/ a |>\n<| a dscore=0 |>\n<code>\npublic static int digitSum(String s) {\n \
    \   int sum = 0;\n    for (int i = 0; i < s.length(); i++) {\n        if (s.charAt(i)\
    \ >= 'a' && s.charAt(i) <= 'z') {\n            sum += s.charAt(i) - 'a' + 10;\n\
    \        }\n    }\n    return sum;\n}\n</code>\n<|/ a tags=math,algorithm,java\
    \ |>\n<| a |>\n<code>\npublic static long sum(String s) {\n    long sum = 0;\n\
    \    for (int i = 0; i < s.length(); i++) {\n        sum = sum + ((int) s.charAt(i)\
    \ - '0' + 10);\n    }\n    return sum;\n}\n</code>\n<|/ a dscore=0 tags=math,algorithm,java\
    \ |>\n<| a dscore=0 |>\n<code>\npublic static void main(String[] args) {\n   \
    \     String str=\"Hello5\";\n        char c;\n        for(int i=0;i<str.length();i++)\n\
    \        {\n            c=str.charAt(i);\n            int num=c-'0';\n       \
    \     System.out.println(num);\n            sum+=num;\n        }\n        System.out.println(sum);\n\
    \    }\n</code>\n<|/ a tags=math,algorithm,java |>\n<| c |>\nThis may work, but\
    \ it's an extremely unreliable solution and is very bad practice. `String` doesn't\
    \ define `length()` so `str.lenght()` is going to throw a compiler error. `String`\
    \ doesn't define `charAt()` so `str.charAt(i)` is going to throw a compiler error.\
    \ `String` doesn't define `sum\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmi8fzo4_.ts(28,2): error TS1110: Type expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(28,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpmi8fzo4_.ts(29,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(29,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpmi8fzo4_.ts(30,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(30,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(30,16): error TS1109: Expression expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(32,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(32,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(32,36): error TS1005: '','' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(32,39): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(33,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(34,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(34,17): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(34,34): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(35,19): error TS1005: '')'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(35,36): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(35,43): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(36,26): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(41,2): error TS1110: Type expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(41,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpmi8fzo4_.ts(42,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(42,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpmi8fzo4_.ts(43,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(43,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(43,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmpmi8fzo4_.ts(43,41): error TS1109: Expression expected.

    ../../../../../tmp/t'
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').reduce((sum, char) => {\n    return sum + char.charCodeAt(0) - 'A'.charCodeAt(0);\n\
    \  }, 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n66\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpphyd9xfn.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpphyd9xfn.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 66,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ total = 0;\n    for (let i = 0; i < (s.length); i++) {\n        const charCode\
    \ = s.charCodeAt(i);\n        if (charCode >= \"0\" && charCode <= \"9\") {\n\
    \            total += charCode - \"0\";\n        } else {\n            total +=\
    \ charCode - \"a\".charCodeAt(0);\n        }\n    }\n    return total;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmprfk6lu0u.ts(21,13): error TS2365: Operator ''>=''
    cannot be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmprfk6lu0u.ts(21,32): error TS2365: Operator ''<='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmprfk6lu0u.ts(22,33): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' &&\
    \ s[i] <= 'Z') {\n      result += s[i] - 'A' + 10;\n    } else {\n      result\
    \ += s[i];\n    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpedgl5n1e.ts(21,17): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpedgl5n1e.ts(21,24): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpedgl5n1e.ts(23,7): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    '
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  var\
    \ sum = 0;\n  var i = 0;\n  while (i < s.length) {\n    if (s[i].charCodeAt(0)\
    \ >= 48 && s[i].charCodeAt(0) <= 57) {\n      sum += s[i].charCodeAt(0);\n   \
    \ }\n    i++;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpgv5jiz77.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgv5jiz77.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0\n  for (let char of s) {\n    sum += char.charCodeAt(0) & 47\n  }\n\
    \  return sum\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkl64_o8z.ts(19,20): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0\n  s.split('').map((c) => {\n    result += (c.charCodeAt(0) - 'a'.charCodeAt(0))\
    \ * (c.charCodeAt(0) - 'a'.charCodeAt(0))\n  })\n  return result\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1986\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpr25w2hl2.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr25w2hl2.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1986,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let c of s) {\n    if (c.toUpperCase() === c) sum += c.charCodeAt();\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpumhyee_a.ts(19,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmpumhyee_a.ts(20,41): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let i = 0; i < s.length; i++) {\n    total += s.charCodeAt(i)\
    \ - 64;\n  }\n  return total;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpzjd6_ns3.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzjd6_ns3.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ chars = s.replace(/[^\\d]/g, '').toUpperCase().split('');\n  let sum = 0;\n\
    \  for (let i = 0, len = chars.length; i < len; i++) {\n    const code = chars[i].charCodeAt(0);\n\
    \    sum += code >= 65 ? code - 65 + 10 : code - 97 + 10;\n  }\n  return sum;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpmbtpanfo.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmbtpanfo.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0;\n  }\n\n  let sum = 0;\n  for (let i = 0;\
    \ i < s.length; i++) {\n    const charCode = s.charCodeAt(i);\n    if (charCode\
    \ >= 48 && charCode <= 57) {\n      sum += charCode - 48;\n    } else {\n    \
    \  sum += charCode;\n    }\n  }\n\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmprtsv6rdr.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprtsv6rdr.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').filter(function (x) {\n    return x >= 'a' && x <= 'z';\n  }).reduce(function\
    \ (acc, x) {\n    return acc + x.charCodeAt(0) - 64;\n  }, 0);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n67\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpr9btj0je.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr9btj0je.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 67,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979779
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const digit = s.charCodeAt(i)\
    \ - 64;\n    sum += digit;\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpi0xql7qw.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi0xql7qw.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979781
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let c of s) {\n\
    \    if (c.toUpperCase() !== c.toLowerCase()) {\n      sum -= c.charCodeAt(0);\n\
    \    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpugrntp5m.ts(22,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979781
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(c => c.charCodeAt(0) - 64).reduce((acc, x) => acc + x, 0);\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpfw0n1p1g.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfw0n1p1g.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(c => c.charCodeAt(0) - 64).reduce((prev, curr) => prev + curr);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpe9mgpn2k.js:18\n    return s.split('').map(function (c) { return\
    \ c.charCodeAt(0) - 64; }).reduce(function (prev, curr) { return prev + curr;\
    \ });\n                                                                      \
    \    ^\n\nTypeError: Reduce of empty array with no initial value\n    at Array.reduce\
    \ (<anonymous>)\n    at digitSum (/tmp/tmpe9mgpn2k.js:18:75)\n    at test (/tmp/tmpe9mgpn2k.js:23:22)\n\
    \    at Object.<anonymous> (/tmp/tmpe9mgpn2k.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0\n  for (let c of s) {\n    const charcode = c.charCodeAt(0)\n    if\
    \ (charcode > 96 && charcode < 123) sum += charcode - 64\n    else if (charcode\
    \ > 64 && charcode < 91) sum += charcode - 96\n    else sum += charcode\n  }\n\
    \  return sum\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp490r1i8e.ts(19,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979781
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0\n    for (let i = 0; i < s.length; i++) {\n        sum += Number(s.charAt(i))\
    \ >= 64 ? s.charCodeAt(i) - 64 : s.charCodeAt(i)\n    }\n    return sum\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp5rdyo8wa.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5rdyo8wa.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  for (const char of s) {\n    if (char >= 'A' && char <= 'Z')\
    \ {\n      result += char - 'A' + 10;\n    }\n  }\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj9y7n4m3.ts(19,22): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmpj9y7n4m3.ts(21,17): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpj9y7n4m3.ts(21,24): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979781
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    sum += getUpperCharASCII(s[i]);\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6y2822jp.ts(20,12): error TS2304: Cannot find name
    ''getUpperCharASCII''.

    '
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n\
    \    if (code < 65 || code > 90) break;\n    else sum += code - 65;\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpxygxdjty.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxygxdjty.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ result = 0\n    for (let c of s) {\n        let code = c.charCodeAt(0)\n   \
    \     if (code < '0' || code > '9') {\n            continue\n        }\n     \
    \   result += code - '0'\n    }\n    return result\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2736g_dz.ts(19,19): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmp2736g_dz.ts(21,13): error TS2365: Operator ''<'' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp2736g_dz.ts(21,27): error TS2365: Operator ''>'' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp2736g_dz.ts(24,26): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979781
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0\n  }\n  const charCodes = s.split('')\n  return\
    \ charCodes.reduce((acc, c) => ((acc += c >= 'A' && c <= 'Z') ? acc + c.charCodeAt(0)\
    \ - 'A'.charCodeAt(0) : acc), 0)\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_125dufv.ts(22,41): error TS2365: Operator ''+=''
    cannot be applied to types ''number'' and ''boolean''.

    '
  timestamp: 1659979781
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s[i];\n    if\
    \ (isUpperCase(c)) {\n      sum += c.charCodeAt(0) - 32;\n    } else {\n     \
    \ sum += c.charCodeAt(0);\n    }\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmb62mckj.ts(21,9): error TS2304: Cannot find name
    ''isUpperCase''.

    ../../../../../tmp/tmpmb62mckj.ts(22,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    ../../../../../tmp/tmpmb62mckj.ts(24,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1659979781
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ result = s.split('').map(char => char.charCodeAt(0) - 64).reduce((acc, cur)\
    \ => acc + cur);\n  return result >= 0 ? result : 0;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpmgszabto.js:18\n    var result = s.split('').map(function (char)\
    \ { return char.charCodeAt(0) - 64; }).reduce(function (acc, cur) { return acc\
    \ + cur; });\n                                                               \
    \                       ^\n\nTypeError: Reduce of empty array with no initial\
    \ value\n    at Array.reduce (<anonymous>)\n    at digitSum (/tmp/tmpmgszabto.js:18:87)\n\
    \    at test (/tmp/tmpmgszabto.js:24:22)\n    at Object.<anonymous> (/tmp/tmpmgszabto.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n\tlet\
    \ sum = 0;\n\tfor (let i = 0; i < s.length; i++) {\n\t\tsum += toDigit(s[i]);\n\
    \t}\n\treturn sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyvom2flz.ts(20,10): error TS2304: Cannot find name
    ''toDigit''.

    '
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const char = s.charAt(i);\n\
    \    if (char >= 'A' && char <= 'Z') {\n      sum += char.charCodeAt(0) - 65;\n\
    \    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpbm3zue84.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbm3zue84.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0;\n  }\n\n  let digits = '';\n  for (let i =\
    \ 0; i < s.length; i++) {\n    const char = s.charAt(i);\n    const upperCharCode\
    \ = char.charCodeAt(0);\n    if (upperCharCode >= 48 && upperCharCode <= 57) {\n\
    \      digits += char;\n    }\n  }\n\n  return Number(digits);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpz5uuuolx.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz5uuuolx.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').filter(d => d.toUpperCase() !== d.toLowerCase()).reduce((prev, cur)\
    \ => (prev += cur), 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmpgpr4y4eo.ts(18,10): error TS2769: No overload matches\
    \ this call.\n  Overload 1 of 3, '(callbackfn: (previousValue: string, currentValue:\
    \ string, currentIndex: number, array: string[]) => string, initialValue: string):\
    \ string', gave the following error.\n    Argument of type '(prev: number, cur:\
    \ string) => string' is not assignable to parameter of type '(previousValue: string,\
    \ currentValue: string, currentIndex: number, array: string[]) => string'.\n \
    \     Types of parameters 'prev' and 'previousValue' are incompatible.\n     \
    \   Type 'string' is not assignable to type 'number'.\n  Overload 2 of 3, '(callbackfn:\
    \ (previousValue: number, currentValue: string, currentIndex: number, array: string[])\
    \ => number, initialValue: number): number', gave the following error.\n    Type\
    \ 'string' is not assignable to type 'number'.\n../../../../../tmp/tmpgpr4y4eo.ts(18,94):\
    \ error TS2322: Type 'string' is not assignable to type 'number'.\n"
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ n = s.split('')\n  let sum = 0\n  for(let i = 0; i < n.length; i++) {\n    sum\
    \ += (n[i].charCodeAt(0) - 'A'.charCodeAt(0))\n  }\n  return sum\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n66\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpvuzgqt_4.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvuzgqt_4.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 66,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ digitSum_0(s);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmphe0zgyxf.ts(18,10): error TS2552: Cannot find name
    ''digitSum_0''. Did you mean ''digitSum''?

    '
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ total = 0;\n    for (let i = 0; i < s.length; i++) {\n        const ascii =\
    \ s.charCodeAt(i); // Ascii code of the character to sum.\n        // ASCII codes\
    \ start at 48.\n        // The sum will ignore anything above that.\n        //\
    \ Examples: abAB => 131\n        //             abcCd => 67\n        //      \
    \       helloE => 69\n        //             woArBld => 131\n        //      \
    \       aAaaaXa => 153\n        if (ascii >= 48 && ascii <= 57) {\n          \
    \  total += ascii - 48;\n        } else {\n            console.log(`Not a valid\
    \ char: ${s[i]} at index ${i}`);\n        }\n    }\n    return total;\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmphdoe9wpg.js:41:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphdoe9wpg.js:49:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: 'Not a valid char: a at index 0

    Not a valid char: b at index 1

    Not a valid char: A at index 2

    Not a valid char: B at index 3

    '
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ TODO: Your code here\n  return 0\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmptp7makgy.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmptp7makgy.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.match(/[A-Z]+/).reduce((acc, str) => acc + str.length, 0);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpuhlwu86p.js:18\n    return s.match(/[A-Z]+/).reduce(function (acc,\
    \ str) { return acc + str.length; }, 0);\n                            ^\n\nTypeError:\
    \ Cannot read properties of null (reading 'reduce')\n    at digitSum (/tmp/tmpuhlwu86p.js:18:29)\n\
    \    at test (/tmp/tmpuhlwu86p.js:23:22)\n    at Object.<anonymous> (/tmp/tmpuhlwu86p.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979782
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) return 0\n  const digits = s.replace(/^[0-9]*/g, '') // remove\
    \ all digits at beginning\n  const sum = digits.reduce((a, b) => a + b.charCodeAt(0)\
    \ - '0'.charCodeAt(0), 0)\n  return sum\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5897qimp.ts(20,22): error TS2339: Property ''reduce''
    does not exist on type ''string''.

    '
  timestamp: 1659979782
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n\tlet\
    \ sum = 0;\n\tfor (let i = 0; i < s.length; i += 1) {\n\t\tsum += s.charCodeAt(i)\
    \ - 64;\n\t}\n\treturn sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpob90xr63.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpob90xr63.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum = 0\n  for (let i = 0; i < s.length; i++) {\n    const charCode = s.charCodeAt(i)\n\
    \    if (charCode >= 'A'.charCodeAt() && charCode <= 'Z'.charCodeAt() && charCode\
    \ >= 'a'.charCodeAt() && charCode <= 'z'.charCodeAt() + 1) {\n      sum += charCode\
    \ - 'A'.charCodeAt(0)\n    }\n  }\n  return sum\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpzim83tfc.ts(21,25): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpzim83tfc.ts(21,57): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpzim83tfc.ts(21,89): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpzim83tfc.ts(21,121): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpzim83tfc.ts(22,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n\
    \    if (code >= 'A'.charCodeAt() && code <= 'Z'.charCodeAt()) {\n      sum +=\
    \ code - 'A'.charCodeAt();\n    } else {\n      sum += code - 'a'.charCodeAt();\n\
    \    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp28_kr9mo.ts(21,21): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp28_kr9mo.ts(21,49): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp28_kr9mo.ts(22,25): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp28_kr9mo.ts(24,25): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  s +=\
    \ ''; // ensure string is a string\n  let sum = 0;\n\n  for (let i = 0; i < s.length;\
    \ i++) {\n    if (s.charCodeAt(i) > 64 && s.charCodeAt(i) < 91) {\n      sum +=\
    \ s.charCodeAt(i) - 64;\n    }\n  }\n\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpj0pkcq7q.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpj0pkcq7q.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    if (s.charAt(i) >=\
    \ 'A' && s.charAt(i) <= 'Z') {\n      sum += (s.charCodeAt(i) - 'A' + 1);\n  \
    \  } else {\n      sum += s.charCodeAt(i);\n    }\n  }\n  return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwn9z9omh.ts(21,33): error TS2363: The right-hand
    side of an arithmetic operation must be of type ''any'', ''number'', ''bigint''
    or an enum type.

    '
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(c => c.charCodeAt(0)).filter(c => c >= 48 && c <= 57).reduce((a,b)\
    \ => a + b);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp50i9c085.js:18\n    return s.split('').map(function (c) { return\
    \ c.charCodeAt(0); }).filter(function (c) { return c >= 48 && c <= 57; }).reduce(function\
    \ (a, b) { return a + b; });\n                                               \
    \                                                                          ^\n\
    \nTypeError: Reduce of empty array with no initial value\n    at Array.reduce\
    \ (<anonymous>)\n    at digitSum (/tmp/tmp50i9c085.js:18:122)\n    at test (/tmp/tmp50i9c085.js:23:22)\n\
    \    at Object.<anonymous> (/tmp/tmp50i9c085.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ result = 0;\n    for (let i = 0; i < s.length; i += 1) {\n        const char\
    \ = s.charAt(i);\n        if (char.match(/[a-z]/)) {\n            const value\
    \ = char.charCodeAt(0) - 96;\n            result += value;\n        }\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpilm29ygn.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpilm29ygn.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  for (let i = s.length - 1; i >= 0; i--) {\n    result += s.charCodeAt(i)\
    \ - 64;\n  }\n  return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpeh10_a73.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpeh10_a73.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ ASCII codes are counted from 0 so ignore any non-digit.\n  // A non-digit character\
    \ will cause the sum to add 0 so ignore it.\n  // Add 0 to the sum and continue\
    \ adding digits to the sum.\n  for (let i = 0; i < s.length; ++i) {\n    const\
    \ code = s.charCodeAt(i)\n    // A digit character will cause the sum to add its\
    \ ASCII code value.\n    if (code >= 48 && code <= 57) {\n      s += code\n  \
    \    continue\n    }\n    // A non-digit character will cause the sum to add 0.\n\
    \    s += 0\n  }\n  return s\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpi8lwthd9.ts(31,3): error TS2322: Type ''string''
    is not assignable to type ''number''.

    '
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    return\
    \ s.split('').reduce((acc, c) => acc + (c.charCodeAt(0) - 'A'.charCodeAt(0)) +\
    \ 0, 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n66\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpc8q3d6jh.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpc8q3d6jh.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 66,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  s +=\
    \ \"\";\n  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const n =\
    \ s.charCodeAt(i);\n    if (n >= 48 && n <= 57) {\n      sum += n;\n    }\n  }\n\
    \  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpi1c4282q.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi1c4282q.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sArr = s.split(\"\");\n  let sum = 0;\n  for (let i = 0; i < sArr.length; i++)\
    \ {\n    if (/[A-Z]/.test(sArr[i])) sum += sArr[i].charCodeAt(0) - \"A\".charCodeAt(0);\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpljbg1gc0.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpljbg1gc0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum = 0\n  for (let i = 0; i < s.length; i++) {\n    if (s[i].match(/[A-Z]/))\
    \ {\n      sum += s[i].charCodeAt(0) - 'A'.charCodeAt(0)\n    }\n  }\n  return\
    \ sum\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuuxk7x4r.ts(21,7): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    '
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split(\"\").reduce((acc, char) => acc + Math.max(...char.match(/[A-Z]/igu)),\
    \ 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpdws15r2h.ts(18,59): error TS2345: Argument of type
    ''string'' is not assignable to parameter of type ''number''.

    '
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (!s) {\n    return 0;\n  }\n  const chars = s.replace(/\\W/g, \"\").split(\"\
    \");\n  return chars.reduce((acc, item) => (item.charCodeAt(0) + acc), 0);\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpz83fohjf.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz83fohjf.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let i = 0; i < s.length; i++) {\n    const val = s.charCodeAt(i);\n\
    \    if (val > 48 && val < 57) {\n      total += val - 48;\n    }\n  }\n  return\
    \ total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpvr14fccv.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpvr14fccv.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let i = 0; i < s.length; i++) {\n    const letter = s[i];\n\
    \    if (letter >= 'a' && letter <= 'z') {\n      total += letter - 'a' + 10;\n\
    \    } else {\n      total += letter - '0';\n    }\n  }\n  return total;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpvu8tbepl.ts(22,16): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpvu8tbepl.ts(22,25): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpvu8tbepl.ts(24,16): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpvu8tbepl.ts(24,25): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Return the sum of the digits of its input string.\n  let sum = 0;\n  for (let\
    \ i = 0; i < s.length; i++) {\n    if (s[i].match(/[A-Z]/g)) {\n      sum += s[i].charCodeAt(0)\
    \ - 64;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpgskfwnia.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpgskfwnia.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    const\
    \ str = s.toLowerCase();\n    const sum = 0;\n    for (let i = 0; i < str.length;\
    \ i++) {\n        sum += str.charCodeAt(i);\n    }\n    return sum;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpfjnb3z3p.ts(21,9): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    '
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'a' && s[i]\
    \ <= 'z') {\n      sum += (s[i] - 'a') + 10;\n    } else if (s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n      sum += (s[i] - 'A') + 10;\n    } else {\n      sum += s[i].charCodeAt(0);\n\
    \    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5ude1ujw.ts(21,15): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp5ude1ujw.ts(21,22): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp5ude1ujw.ts(23,15): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp5ude1ujw.ts(23,22): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i++) {\n    count += s.charCodeAt(i)\
    \ - 96;\n  }\n  return count;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-58\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpet7syrsx.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpet7syrsx.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -58,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(d => d.charCodeAt(0) - 64).reduce((sum, num) => sum + num, 0);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpy8sbqh42.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy8sbqh42.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979785
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(e => e.charCodeAt(0) - 'A'.charCodeAt(0)).reduce((acc, curr)\
    \ => acc + curr, 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n66\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmprtc48q1o.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprtc48q1o.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 66,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979784
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = s.length - 1; i >= 0; --i) {\n    if (s[i] >= 'A' &&\
    \ s[i] <= 'Z') {\n      sum += (s[i] - 'A') + 1;\n    }\n  }\n  return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjuor2flu.ts(21,15): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpjuor2flu.ts(21,22): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979786
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charAt(i);\n\
    \    if (c >= 'a' && c <= 'z') {\n      total += c - 'a' + 10;\n    } else {\n\
    \      total += c.charCodeAt(0) - '0';\n    }\n  }\n  return total;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplvv88xry.ts(22,16): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmplvv88xry.ts(22,20): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmplvv88xry.ts(24,34): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979786
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum: number = 0;\n  for (let i = 0; i <= s.length; i += 1) {\n    const c: number\
    \ = s.charCodeAt(i) - 'A'.charCodeAt(0);\n    if (c >= 0) {\n      sum += c;\n\
    \    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpruj3w5yl.ts(22,7): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    '
  timestamp: 1659979786
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ Number(s)\n    .toString(10)\n    .toUpperCase()\n    .match(/[A-Z]+/g)\n  \
    \  .reduce((sum, s) => sum += digitValue(s), 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpivbx97xr.ts(22,32): error TS2304: Cannot find name
    ''digitValue''.

    '
  timestamp: 1659979786
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ result: number[] = [];\n  let prev = 0;\n  for (let i = 0; i < s.length; i +=\
    \ 1) {\n    result.push(digitSum(prev, s[i]));\n    prev = s[i];\n  }\n  return\
    \ result.length ? Math.max(...result) : 0;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp90ree5ed.ts(21,32): error TS2554: Expected 1 arguments,
    but got 2.

    ../../../../../tmp/tmp90ree5ed.ts(22,5): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    '
  timestamp: 1659979786
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ res = 0;\n  for (let i = 1; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n\
    \    if (c >= 64 && c <= 91) res += c - 64;\n  }\n  return res;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n3\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpy_vt_7i3.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpy_vt_7i3.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 3,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i)\
    \ > 96 && s.charCodeAt(i) < 123) {\n      result += s.charCodeAt(i);\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n195\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpv_irm55q.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpv_irm55q.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 195,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  let length = s.length;\n  for (let i = 0; i < length; i++) {\n\
    \    const char = s[i];\n    const code = char.charCodeAt(0);\n    if (code >=\
    \ 'A'.charCodeAt() && code <= 'Z'.charCodeAt()) {\n      result += code - 'A'.charCodeAt()\
    \ + 10;\n    } else {\n      result += code - '0'.charCodeAt() + 10;\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpevz72jkc.ts(23,21): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpevz72jkc.ts(23,49): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpevz72jkc.ts(24,28): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmpevz72jkc.ts(26,28): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659979786
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Convert string to array\n  const arr = s.toLowerCase().split('');\n  let total\
    \ = 0;\n  for (let i = 0; i < arr.length; i++) {\n    const value = arr[i];\n\
    \    // Get current ASCII code for the character\n    const asciiCode = value.charCodeAt(0);\n\
    \    // Get total ASCII code for the current character\n    const sum = asciiCode\
    \ + sum;\n    // Update total sum for current ASCII code\n    total = sum;\n \
    \ }\n  return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpl05x86lz.ts(26,29): error TS2448: Block-scoped variable
    ''sum'' used before its declaration.

    '
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let c of s) {\n    if (c >= 'A' && c <= 'Z') {\n      total\
    \ += c - 'A' + 1;\n    } else {\n      total += c >= 'a' && c <= 'z' ? c - 'a'\
    \ + 1 : c >= 'A' && c <= 'Z' ? c - 'A' + 1 : 0;\n    }\n  }\n  return total;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpj5v2391e.ts(19,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmpj5v2391e.ts(21,16): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpj5v2391e.ts(21,20): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpj5v2391e.ts(23,39): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpj5v2391e.ts(23,43): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpj5v2391e.ts(23,76): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpj5v2391e.ts(23,80): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979786
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ num = 0;\n  for(let i = 0; i < s.length; i++){\n    num += getUppperCharCodeValue(s.charCodeAt(i));\n\
    \  }\n  return num;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf6jljn3w.ts(20,12): error TS2304: Cannot find name
    ''getUppperCharCodeValue''.

    '
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ re = /[A-Z]/g;\n  const sum = 0;\n\n  let match;\n\n  while (match = re.exec(s))\
    \ {\n    sum += match[0].length;\n  }\n\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpyoq_tyh6.ts(24,5): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    '
  timestamp: 1659979787
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n\tlet\
    \ sum = 0;\n\tfor (let i = 0; i < s.length; i++)\n\t\tsum += (s.charCodeAt(i)\
    \ - '0'.charCodeAt(0)) * (s.charCodeAt(i) - '0'.charCodeAt(0));\n\treturn sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n5514\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmprwx_67ej.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmprwx_67ej.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 5514,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0\n    for (let i = 0; i < s.length; i += 1) {\n        const char = s.charCodeAt(i)\n\
    \        if (char > 48 && char < 58) {\n            sum += char\n        }\n \
    \   }\n    return sum\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpu2szfco8.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpu2szfco8.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        let c = s.charCodeAt(i);\n\
    \        if (c >= 48 && c <= 57) {\n            sum += c - 48;\n        }\n  \
    \  }\n    return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp7gtixtlo.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp7gtixtlo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  for (let char of s) {\n    if (char >= '0' && char <= '9') {\n\
    \      result += char - '0';\n    }\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjlzymrad.ts(19,20): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmpjlzymrad.ts(21,17): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpjlzymrad.ts(21,24): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ len = s.length;\n  let result = s.split('').map((x, i) => x > 'A' ? x - 'A'\
    \ : x - '0').filter(x => x !== '0').length;\n  return result > len ? len : result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu287obb6.ts(19,52): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpu287obb6.ts(19,56): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpu287obb6.ts(19,62): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpu287obb6.ts(19,66): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpu287obb6.ts(19,83): error TS2367: This condition will always
    return ''true'' since the types ''number'' and ''"0"'' have no overlap.

    '
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0\n  let char = ''\n  for (let i = 0; i < s.length; i++) {\n    char\
    \ = s[i]\n    if (char > '9') {\n      char = (char - '0') // ascii code\n   \
    \ } else {\n      char = char.toUpperCase() // ascii code uppercase\n    }\n \
    \   result += char\n  }\n  return result\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5d7dxdm7.ts(23,7): error TS2322: Type ''number''
    is not assignable to type ''string''.

    ../../../../../tmp/tmp5d7dxdm7.ts(23,15): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp5d7dxdm7.ts(23,22): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp5d7dxdm7.ts(27,5): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    '
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (!s) return 0;\n  return s.split('').filter(function (x) {\n    return x.charCodeAt(0)\
    \ > 96;\n  }).join('');\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpprsl4dyv.ts(19,3): error TS2322: Type ''string''
    is not assignable to type ''number''.

    '
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let char of s) {\n    if (char >= 'A' && char <= 'Z') sum +=\
    \ char - 'A' + 'a';\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp1fpoki5.ts(19,20): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmpp1fpoki5.ts(20,37): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    ../../../../../tmp/tmpp1fpoki5.ts(20,44): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpp1fpoki5.ts(20,51): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979787
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(char => char.charCodeAt(0) & 0xF).reduce((acc, val) => acc +\
    \ val, 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp5lhjdwpa.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5lhjdwpa.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ len = s.length;\n  let result = s.split('').map((c: string, idx: number) =>\
    \ {\n    return c.charCodeAt(0) - 'A'.charCodeAt(0) + idx * len;\n  }).reduce(\n\
    \    (acc: number, num: number) => acc + num,\n    0\n  );\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n90\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpjt1hndgp.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjt1hndgp.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 90,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0.0;\n  for (let i = 0; i < s.length; ++i) {\n    if (s.charCodeAt(i)\
    \ > 64 && s.charCodeAt(i) < 91) result += s.charCodeAt(i) - 64;\n    else result\
    \ += s.charCodeAt(i);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n198\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpjtlhcxez.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjtlhcxez.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 198,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979787
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    return\
    \ sum(...s.match(/\\d+/g).map(Number));\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpit7wchat.ts(18,12): error TS2304: Cannot find name
    ''sum''.

    '
  timestamp: 1659979788
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ chars = s.split('');\n  const sum = chars.reduce((acc, curr) => {\n    const\
    \ code = curr.charCodeAt(0);\n    const sum = code + acc;\n    return sum > 9\
    \ ? sum : sum;\n  }, 0);\n  return sum;\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpbzj2xhdc.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbzj2xhdc.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979788
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ sumArr(digits(s), x => x > 9 ? x - 'A' + 10 : x - '0');\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuscl3x0o.ts(18,10): error TS2304: Cannot find name
    ''sumArr''.

    ../../../../../tmp/tmpuscl3x0o.ts(18,17): error TS2552: Cannot find name ''digits''.
    Did you mean ''digitSum''?

    ../../../../../tmp/tmpuscl3x0o.ts(18,45): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpuscl3x0o.ts(18,60): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979788
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    sum += s.charCodeAt(i)\
    \ - 64;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp9i6inmdm.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9i6inmdm.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Add all the charcters in the string to get the sum of their ASCII code\n  let\
    \ sum = 0;\n  for (let c of s) {\n    sum += c.charCodeAt(0);\n  }\n\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpekes4la1.ts(20,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Sum the ASCII codes of the characters\n  let total = 0;\n  for (let i = 0; i\
    \ < s.length; i++) {\n    total += s.charCodeAt(i) - '0';\n  }\n  return total;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpd1knkmcz.ts(21,32): error TS2363: The right-hand
    side of an arithmetic operation must be of type ''any'', ''number'', ''bigint''
    or an enum type.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ codes: number[] = []\n  for (const c of s) {\n    const code = c.charCodeAt(0)\n\
    \    if (code >= 48 && code <= 57) {\n      codes.push(code)\n    }\n  }\n  return\
    \ codes.reduce((a, b) => a + b)\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjwa6wrqf.ts(19,19): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    sum += toDigit(s[i]);\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjd0ojo22.ts(20,12): error TS2304: Cannot find name
    ''toDigit''.

    '
  timestamp: 1659979789
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ We use the pattern /[^\\d]+/ to find all characters that are not numbers (letters)\n\
    \  // or digits (\\d). We subtract the sum of those from s.charCodeAt(0) to get\
    \ the sum of the\n  // digits that are not digits.\n  let sum = 0;\n  for (let\
    \ i = 0; i < s.length; i++) {\n    const charCode = s.charCodeAt(i);\n    if (charCode\
    \ > 47 && charCode < 58) {\n      sum += charCode - 48;\n    } else {\n      sum\
    \ += charCode - 55;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n106\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpwuxt5oly.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwuxt5oly.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 106,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0\n  for (let i = 0; i < s.length; i++) {\n    const char = s[i]\n   \
    \ if (char >= '0' && char <= '9') {\n      sum += char - '0'\n    }\n  }\n  return\
    \ sum\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpgan0go84.ts(22,14): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpgan0go84.ts(22,21): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n\
    \    if (c >= 'A' && c <= 'Z') {\n      sum += (c - 'A');\n    } else if (c >=\
    \ 'a' && c <= 'z') {\n      sum += (c - 'a');\n    } else {\n      sum += 0;\n\
    \    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp5ykks971.ts(21,9): error TS2365: Operator ''>=''
    cannot be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp5ykks971.ts(21,21): error TS2365: Operator ''<='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp5ykks971.ts(22,19): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp5ykks971.ts(23,16): error TS2365: Operator ''>='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp5ykks971.ts(23,28): error TS2365: Operator ''<='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmp5ykks971.ts(24,19): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.reduce((prev, curr) => {\n    const { charCode, length } = curr;\n    if (length\
    \ > 0 && charCode >= 'A' && charCode <= 'Z') {\n      prev += charCode - 'A' +\
    \ 1;\n    }\n\n    return prev;\n  }, 0);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmdr3gl1g.ts(18,12): error TS2339: Property ''reduce''
    does not exist on type ''string''.

    ../../../../../tmp/tmpmdr3gl1g.ts(21,26): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(d => String.fromCharCode(d.charCodeAt(0) - 'A'.charCodeAt(0)\
    \ + 1)).reduce((acc, c) => acc + c, 0);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmpvbopquo7.ts(18,10): error TS2769: No overload matches\
    \ this call.\n  Overload 1 of 3, '(callbackfn: (previousValue: string, currentValue:\
    \ string, currentIndex: number, array: string[]) => string, initialValue: string):\
    \ string', gave the following error.\n    Argument of type '(acc: number, c: string)\
    \ => string' is not assignable to parameter of type '(previousValue: string, currentValue:\
    \ string, currentIndex: number, array: string[]) => string'.\n      Types of parameters\
    \ 'acc' and 'previousValue' are incompatible.\n        Type 'string' is not assignable\
    \ to type 'number'.\n  Overload 2 of 3, '(callbackfn: (previousValue: number,\
    \ currentValue: string, currentIndex: number, array: string[]) => number, initialValue:\
    \ number): number', gave the following error.\n    Type 'string' is not assignable\
    \ to type 'number'.\n"
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum = 0\n  for (let i = 0; i < s.length; i++) {\n    if (\n      !isDigit(s.charCodeAt(i))\
    \ ||\n      s[i] === \"_\" ||\n      s.charCodeAt(i) < 33 ||\n      s.charCodeAt(i)\
    \ > 126\n    ) {\n      return 0\n    }\n    if (s.charCodeAt(i) < 33) {\n   \
    \   sum += s.charCodeAt(i) - 48\n    } else {\n      sum += s.charCodeAt(i) -\
    \ 55\n    }\n  }\n  return sum\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp2p8kf3vq.ts(21,8): error TS2304: Cannot find name
    ''isDigit''.

    ../../../../../tmp/tmp2p8kf3vq.ts(29,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    ../../../../../tmp/tmp2p8kf3vq.ts(31,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0\n  for (let i = 0; i < s.length; ++i) {\n    const c = s.charCodeAt(i)\n\
    \    sum += c >= 'A' && c <= 'Z' ? c - 'A' : c >= 'a' && c <= 'z' ? c - 'a' +\
    \ 10 : 0\n  }\n  return sum\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpqibos7fx.ts(21,12): error TS2365: Operator ''>=''
    cannot be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmpqibos7fx.ts(21,24): error TS2365: Operator ''<='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmpqibos7fx.ts(21,39): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpqibos7fx.ts(21,45): error TS2365: Operator ''>='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmpqibos7fx.ts(21,57): error TS2365: Operator ''<='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmpqibos7fx.ts(21,72): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ n = 0\n  for (let i = 0; i < s.length; i++) {\n    const str = s.charAt(i)\n\
    \    if (str >= '0' && str <= '9') {\n      n += str - '0'\n    }\n  }\n  return\
    \ n\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\
    \nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_xni3ji9.ts(22,12): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp_xni3ji9.ts(22,18): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Only change code below this line\n\n  // Change this line\n  var sum = 0; //\
    \ initialize sum\n  for (var i = 0; i < s.length; i++) {\n    var ascii = s[i];\
    \ // get ascii code of current character \n    var sum = 0; // reset sum\n   \
    \ if (ascii > 65 && ascii < 90) // if ascii code is > 'A' && < 'Z'\n      sum++;\
    \ // add 1 to sum\n    if (ascii > 90 && ascii < 97) // if ascii code is > 'a'\
    \ && < 'z'\n      sum++; // add 1 to sum\n    if (ascii > 122 && ascii < 126)\
    \ // if ascii code is > '1' && < '9'\n      sum++; // add 1 to sum\n    sum +=\
    \ ascii; // add ascii code to sum\n  }\n  return sum; // add sum of ascii code\
    \ to sum\n}\n\nconst testCases = [\n  \"\",\n  \"abAB\",\n  \"abcCd\",\n  \"helloE\"\
    ,\n  \"woArBld\",\n  \"aAaaaXa\",\n];\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpsp2d3abh.ts(25,9): error TS2365: Operator ''>'' cannot
    be applied to types ''string'' and ''number''.

    ../../../../../tmp/tmpsp2d3abh.ts(25,23): error TS2365: Operator ''<'' cannot
    be applied to types ''string'' and ''number''.

    ../../../../../tmp/tmpsp2d3abh.ts(27,9): error TS2365: Operator ''>'' cannot be
    applied to types ''string'' and ''number''.

    ../../../../../tmp/tmpsp2d3abh.ts(27,23): error TS2365: Operator ''<'' cannot
    be applied to types ''string'' and ''number''.

    ../../../../../tmp/tmpsp2d3abh.ts(29,9): error TS2365: Operator ''>'' cannot be
    applied to types ''string'' and ''number''.

    ../../../../../tmp/tmpsp2d3abh.ts(29,24): error TS2365: Operator ''<'' cannot
    be applied to types ''string'' and ''number''.

    ../../../../../tmp/tmpsp2d3abh.ts(31,5): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    '
  timestamp: 1659979789
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const currentChar =\
    \ s[i];\n    if (currentChar >= 'A' && currentChar <= 'Z') {\n      sum += currentChar\
    \ - 'A' + 10;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp32_o5w6b.ts(22,14): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmp32_o5w6b.ts(22,28): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979789
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; ++i) {\n    const char = s.charAt(i);\n\
    \    if (char.match(/[a-z]/) && char.match(/[A-Z]/)) {\n      sum += char.charCodeAt(0)\
    \ - 48;\n    } else {\n      sum += char.charCodeAt(0);\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp81zjkuiw.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp81zjkuiw.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979789
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n\
    \    total += code - '0'.charCodeAt(0);\n  }\n  return total;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n134\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpmpi5iwbc.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmpi5iwbc.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 134,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979790
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  s +=\
    \ '';\n\n  let result = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const\
    \ char = s.charAt(i);\n    const code = char.charCodeAt(0);\n    result += code\
    \ + code % 10;\n  }\n\n  return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n352\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpp3xoa4yd.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpp3xoa4yd.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 352,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979790
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    let code = s.charCodeAt(i);\n\
    \    sum += code >= 65 && code <= 90 ? code - 65 : code;\n  }\n  return sum;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n196\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpr0el7541.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpr0el7541.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 196,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979790
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 1\n  for (let i = 0; i < s.length; i++) {\n    const value = s.charCodeAt(i)\n\
    \    const max = value + value\n    if (max > 9) {\n      result *= 10\n     \
    \ result += value\n    } else {\n      result *= max\n    }\n  }\n  return result\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n0\n    at test (/tmp/tmpzcj_k9yf.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzcj_k9yf.js:44:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979790
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ _sum(s.split('').map(function(c) {\n    return c.charCodeAt(0) - 'a'.charCodeAt(0);\n\
    \  }));\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpbafd6bq7.ts(18,10): error TS2304: Cannot find name
    ''_sum''.

    '
  timestamp: 1659979790
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0\n  }\n  let result = 0\n  for (let c of s)\
    \ {\n    result += c.charCodeAt(0) - 'A'.charCodeAt(0)\n  }\n  return result\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpty1ss2le.ts(22,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979791
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    sum += getCode(s[i])\
    \ - 96;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4t93f1ks.ts(20,5): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    ../../../../../tmp/tmp4t93f1ks.ts(20,12): error TS2304: Cannot find name ''getCode''.

    '
  timestamp: 1659979791
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Remove non-digit characters and convert string to array.\n  const arr: Array<number>\
    \ = s.match(/[\\d]+/g).map(i => parseInt(i));\n  return arr.reduce((prev, curr)\
    \ => prev + curr);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmptzm25hfc.js:19\n    var arr = s.match(/[\\d]+/g).map(function (i)\
    \ { return parseInt(i); });\n                               ^\n\nTypeError: Cannot\
    \ read properties of null (reading 'map')\n    at digitSum (/tmp/tmptzm25hfc.js:19:32)\n\
    \    at test (/tmp/tmptzm25hfc.js:25:22)\n    at Object.<anonymous> (/tmp/tmptzm25hfc.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979791
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    sum += toAscii(s[i]);\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp4jlejm03.ts(20,12): error TS2304: Cannot find name
    ''toAscii''.

    '
  timestamp: 1659979791
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.trim() === '') return 0\n  let sum = 0\n  for (let i = s.length - 1; i >=\
    \ 0; i--) {\n    const code = s.charCodeAt(i)\n    if (code >= 'A'.charCodeAt(0)\
    \ && code <= 'Z'.charCodeAt(0)) sum += code - 'A'.charCodeAt(0)\n    else break\n\
    \  }\n  return sum\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp9cw4b5om.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp9cw4b5om.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(c => c.charCodeAt(0) - 48).reduce((a, b) => a + b)\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpd9kbyiju.js:18\n    return s.split('').map(function (c) { return\
    \ c.charCodeAt(0) - 48; }).reduce(function (a, b) { return a + b; });\n      \
    \                                                                    ^\n\nTypeError:\
    \ Reduce of empty array with no initial value\n    at Array.reduce (<anonymous>)\n\
    \    at digitSum (/tmp/tmpd9kbyiju.js:18:75)\n    at test (/tmp/tmpd9kbyiju.js:23:22)\n\
    \    at Object.<anonymous> (/tmp/tmpd9kbyiju.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979791
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ sum(s, digitSumR);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmputk1tl0m.ts(18,10): error TS2304: Cannot find name
    ''sum''.

    ../../../../../tmp/tmputk1tl0m.ts(18,17): error TS2552: Cannot find name ''digitSumR''.
    Did you mean ''digitSum''?

    '
  timestamp: 1659979792
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    return\
    \ s.split(\"\").reduce((prev, curr, i) => {\n        // console.log(`[${curr}]\
    \ ${prev}`);\n        return prev + Math.pow(curr, i);\n    }, 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpt5s4cwka.ts(20,32): error TS2345: Argument of type
    ''string'' is not assignable to parameter of type ''number''.

    '
  timestamp: 1659979791
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ digitSumArr = s.split(\"\").map(\n    (val) => val.charCodeAt(0) - 64\n  )\n\
    \n  return digitSumArr.reduce((totalSum, val) => totalSum + val)\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpdq00a2ul.js:19\n    return digitSumArr.reduce(function (totalSum,\
    \ val) { return totalSum + val; });\n                       ^\n\nTypeError: Reduce\
    \ of empty array with no initial value\n    at Array.reduce (<anonymous>)\n  \
    \  at digitSum (/tmp/tmpdq00a2ul.js:19:24)\n    at test (/tmp/tmpdq00a2ul.js:24:22)\n\
    \    at Object.<anonymous> (/tmp/tmpdq00a2ul.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('')\n    .map(c => c >= 'a' && c <= 'z' ? c + 10 : c >= 'A' && c <=\
    \ 'Z' ? c + 10 : 0)\n    .reduce((sum, c) => sum + c, 0)\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp1upc57uc.ts(20,25): error TS2365: Operator ''+''
    cannot be applied to types ''string | 0'' and ''string | 0''.

    '
  timestamp: 1659979791
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i);\n\
    \    if (code < 65) {\n      sum += code;\n    } else if (code < 90) {\n     \
    \ sum += code - 55;\n    } else {\n      sum += code - 87;\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n42\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp4grpnotw.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4grpnotw.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 42,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(x => x.charCodeAt(0) - 64).reduce((acc, x) => acc + x, 0);\n\
    }\n</code>\n<|/ a dscore=2 |>\n<| c |>\nThanks for this. It works perfectly. Had\
    \ to change it to `s.split('').map(x => x.charCodeAt(0) - 'A'.charCodeAt(0)).join('')`\
    \ but that is a small change I feel I can work out myself. Also thanks for the\
    \ other answers. Was able to learn quite a bit with this one.\n<|/ c |>\n<| a\
    \ dscore=1 |>\nThis can be done using Regex groups and backreference:\n\n<code>\n\
    const input = \"aAaaaXa\"\nconst output = input.replace(/([a-z])([A-Z])/g, (match,\
    \ p1, p2) => {\n  return p1 + p2;\n});\n\nconsole.log(output);</code>\n\nThe regex\
    \ matches a single character which is followed by a character in the range A-Z.\n\
    The match function receives a function which receives the whole match and must\
    \ return a modified version of the match.\nHere, we are returning a new match\
    \ which is the concatenation of the letters before the match (p1) and the letters\
    \ after the match (p2).\nNote that you can replace the + with a space in the return\
    \ statement if you just want to replace them with a single space.\n<|/ a tags=javascript,regex\
    \ |>\n<| a dscore=1 |>\nYou can use this:\n<code>\nvar input = \"aAaaaXa\";\n\
    var output = input.replace(/([A-Z])(?!\\1)/g, \"$1\");\n</code>\nOutput:\n<code>\n\
    aAaXa\n</code>\n<|/ a tags=javascript,regex |>\n<| a dscore=1 |>\nYou can use\
    \ regex for this:\n<code>\nvar myregexp = /(.)\\1{2,}/g;\nvar str=\"aAaaaXa\"\
    ;\nconsole.log(str.replace(myregexp, \"$1\"));\n</code>\nOutput: aAaXa\nSee RegEx101\
    \ Demo\n<|/ a tags=javascript,regex |>\n<| a tags=javascript,regex |>\n<code>\n\
    var input = \"aAaaaXa\";\nvar output = input.replace(/([a-z])([A-Z])/g, (match,\
    \ p1, p2) => {\n  return p1 + p2;\n});\n\nconsole.log(output);</code>\n<|/ a dscore=0\
    \ |>\n<| a |>\nA simpler solution would be to just add a space after the uppercase\
    \ letter:\n\n<code>\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpwkjqjost.ts(20,2): error TS1110: Type expected.

    ../../../../../tmp/tmpwkjqjost.ts(20,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpwkjqjost.ts(21,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpwkjqjost.ts(21,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpwkjqjost.ts(22,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpwkjqjost.ts(22,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,12): error TS1005: ''('' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,21): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,27): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,42): error TS1005: '')'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,45): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,52): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,55): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,127): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,131): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,136): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,139): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,141): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,147): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,154): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,156): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,161): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,163): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,167): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,172): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,176): error TS1005: '';'' expected.

    ../../../../../tmp/tmpwkjqjost.ts(23,189): error TS1005: '';'' expected.

    ../..'
  timestamp: 1659979791
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i);\n\
    \    if (c >= 48 && c <= 57) {\n      sum += c;\n    }\n  }\n  return sum;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpwfr419jb.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpwfr419jb.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i <= s.length - 2; ++i) {\n        const currentChar\
    \ = s.charAt(i);\n        const nextChar = s.charAt(i + 1);\n        const nextNextChar\
    \ = s.charAt(i + 2);\n        if (currentChar === \"A\" && nextChar === \"Z\"\
    \ && nextNextChar !== \"Z\") {\n            sum += currentChar - \"A\"; // A is\
    \ 65\n        }\n    }\n    return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpjprkxagc.ts(24,20): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpjprkxagc.ts(24,34): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979792
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ result = 0\n  for (let i = 0; i < s.length; i++) {\n    const code = s.charCodeAt(i)\n\
    \    if (code >= 48 && code <= 57) result += (code - 48)\n  }\n  return result\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp_ndlpc1z.ts(21,35): error TS2588: Cannot assign to
    ''result'' because it is a constant.

    '
  timestamp: 1659979792
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s === '') {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i < s.length;\
    \ i++) {\n    sum += (s.charCodeAt(i) - '0'.charCodeAt(0));\n  }\n  return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n134\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpysslu5jo.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpysslu5jo.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 134,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < s.length; ++i) {\n        const char = s[i];\n\
    \        sum += char.charCodeAt(0) - 65;\n    }\n    return sum;\n}\n</code>\n\
    <|/ a dscore=0 tags=algorithm,javascript |>\n<| c |>\nThank you very much!!! This\
    \ was very helpful to me! :)\n<|/ c |>\n<| a dscore=0 |>\nI assume that you want\
    \ to do this in Javascript? \nIf that's the case, here's a quick solution, although\
    \ I'm sure there's a better way to do it:\n<code>\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp6dv5vs54.ts(25,2): error TS1110: Type expected.

    ../../../../../tmp/tmp6dv5vs54.ts(25,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp6dv5vs54.ts(26,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp6dv5vs54.ts(26,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp6dv5vs54.ts(27,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp6dv5vs54.ts(27,7): error TS1109: Expression expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,7): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,29): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,33): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,38): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,46): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,49): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,53): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(28,54): error TS1128: Declaration or statement
    expected.

    ../../../../../tmp/tmp6dv5vs54.ts(29,3): error TS1110: Type expected.

    ../../../../../tmp/tmp6dv5vs54.ts(29,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmp6dv5vs54.ts(30,2): error TS1109: Expression expected.

    ../../../../../tmp/tmp6dv5vs54.ts(30,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(30,16): error TS1109: Expression expected.

    ../../../../../tmp/tmp6dv5vs54.ts(31,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(31,10): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(31,15): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(31,19): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.ts(31,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmp6dv5vs54.'
  timestamp: 1659979792
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const char = s[i].toUpperCase();\n\
    \    sum += char.charCodeAt(0) - 64;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpxs3dx8mt.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxs3dx8mt.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n\n  for (let i = 0; i < s.length; ++i) {\n    const char = s.charAt(i);\n\
    \n    if (char === char.toUpperCase()) {\n      result += char.charCodeAt(0) -\
    \ \"A\".charCodeAt(0);\n    }\n  }\n\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp8a0s282h.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8a0s282h.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0\n  for (let c of s) {\n    if (c.match(/[a-z]/) && c.match(/[A-Z]/))\
    \ {\n      sum += c.charCodeAt(0) - 64\n    }\n  }\n  return sum\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxto3rl5h.ts(19,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979792
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').reduce((prev, next) => {\n    return prev + parseInt(next, 10);\n\
    \  }, 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp3wqa4jl2.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp3wqa4jl2.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979792
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.match(/[A-Z]/g).reduce((a, c) => a + c.charCodeAt(0), 0);\n}\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpk0126xmt.js:18\n    return s.match(/[A-Z]/g).reduce(function (a,\
    \ c) { return a + c.charCodeAt(0); }, 0);\n                            ^\n\nTypeError:\
    \ Cannot read properties of null (reading 'reduce')\n    at digitSum (/tmp/tmpk0126xmt.js:18:29)\n\
    \    at test (/tmp/tmpk0126xmt.js:23:22)\n    at Object.<anonymous> (/tmp/tmpk0126xmt.js:32:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979793
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const ch = s.charCodeAt(i);\n\
    \    if (ch > 47 && ch < 58) {\n      sum += ch;\n    } else {\n      sum += ch\
    \ - 48;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n134\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp6wqewuxq.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6wqewuxq.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 134,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979793
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n\tlet\
    \ counter = 0;\n\tfor (let i = 0; i < s.length; ++i) {\n\t\tconst c = s.charCodeAt(i);\n\
    \t\tif (c >= 48 && c <= 57)\n\t\t\tcounter += c - 48;\n\t}\n\treturn counter;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmppcyz_bt7.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmppcyz_bt7.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979793
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s\n    .split('')\n    .reduce(\n      (prev, current) => (prev + current.charCodeAt(0)),\n\
    \      0\n    )\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp6ku84ljj.js:26:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6ku84ljj.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979793
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const code = s.charCodeAt(i);\n\
    \    if (code >= 'a'.charCodeAt() && code <= 'z'.charCodeAt()) {\n      sum +=\
    \ code - 'a'.charCodeAt();\n    } else {\n      sum += code;\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0bmcvny1.ts(21,21): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp0bmcvny1.ts(21,49): error TS2554: Expected 1 arguments,
    but got 0.

    ../../../../../tmp/tmp0bmcvny1.ts(22,25): error TS2554: Expected 1 arguments,
    but got 0.

    '
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    return\
    \ s.split('').map(s => s.charCodeAt(0) - 'a'.charCodeAt(0) + 10).reduce(\n   \
    \     (total, num) => total + num,\n        0\n    );\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-22\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpzjn0z6_o.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzjn0z6_o.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -22,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split(\"\").reduce((previous, current) => previous + (current.charCodeAt(0)\
    \ - 64), 0);\n}\nconst task7: Task<string> = { title: \"Task 7\", description:\
    \ \"Write a function that takes a string as input and returns the sum of the upper\
    \ characters only'ASCII codes.\", solution: digitSum };\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpw9flto94.ts(20,14): error TS2304: Cannot find name
    ''Task''.

    '
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ res = 0;\n  for (let i = 0; i < s.length; ++i) {\n    const ch = s.charAt(i);\n\
    \    if (ch.match(/^[A-Z0-9]+$/)) {\n      res += ch.charCodeAt(0) - 48;\n   \
    \ } else {\n      break;\n    }\n  }\n  return res;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpbnzferh1.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbnzferh1.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0;\n  }\n  let sum = 0;\n  for (let i = 0; i\
    \ < s.length; i++) {\n    const c = s[i];\n    if (c.toUpperCase() !== c) {\n\
    \      continue;\n    }\n    sum += c.charCodeAt(0);\n  }\n  return sum;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n310\n\nshould\
    \ loosely deep-equal\n\n151\n    at test (/tmp/tmp6q40ccir.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6q40ccir.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 310,\n  expected:\
    \ 151,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').reduce((acc, c) => {\n    const charCode = c.charCodeAt(0);\n  \
    \  if (charCode >= 48 && charCode <= 57) {\n      return acc + charCode - 48;\n\
    \    }\n    return acc;\n  }, 0);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpk0kmg14f.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk0kmg14f.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 0
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Find the length of the string\n  const len = s.length;\n  // Initialise the\
    \ sum to 0\n  let sum = 0;\n  // Loop over each character in the string\n  for\
    \ (let i = 0; i < len; i++) {\n    // Grab the character at the index i\n    const\
    \ char = s[i];\n    // Get the ascii code for the character\n    const code =\
    \ char.charCodeAt(0);\n    // If the character is an upper case letter, add its\
    \ ascii code to the sum\n    if (char >= \"A\" && char <= \"Z\") {\n      sum\
    \ += code;\n    }\n  }\n  // Return the sum\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    const char = s[i].charCodeAt(0);\n\
    \    if (char >= 65 && char <= 90) {\n      sum += char - 65;\n    } else if (char\
    \ >= 97 && char <= 122) {\n      sum += char - 97;\n    }\n  }\n  return sum;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpun6knp9z.js:34:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpun6knp9z.js:42:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let char of s) {\n    if (char >= \"a\" && char <= \"z\") {\n\
    \      sum += char - \"a\";\n    } else {\n      sum += char;\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp34lps9l3.ts(19,20): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmp34lps9l3.ts(21,14): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp34lps9l3.ts(21,21): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmp34lps9l3.ts(23,7): error TS2322: Type ''string'' is not
    assignable to type ''number''.

    '
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    const\
    \ digitMap = {\n        '0': 0,\n        '1': 1,\n        '2': 2,\n        '3':\
    \ 3,\n        '4': 4,\n        '5': 5,\n        '6': 6,\n        '7': 7,\n   \
    \     '8': 8,\n        '9': 9,\n    };\n    let sum = 0;\n    let num = 0;\n \
    \   const length = s.length;\n    for (let i = 0; i < length; i++) {\n       \
    \ num = digitMap[s[i]] + num;\n        if (num > 9) {\n            sum++;\n  \
    \          num = 0;\n        }\n    }\n    return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpsbov9dot.js:46:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpsbov9dot.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ sum(s.split('').map((char) => char.charCodeAt(0) - 'A'.charCodeAt(0)));\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp83fthlq7.ts(18,10): error TS2304: Cannot find name
    ''sum''.

    '
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total: number = 0;\n  for (let i = 0; i < s.length; i++) {\n    const charCode\
    \ = s[i].charCodeAt(0);\n    if (charCode >= 65 && charCode <= 90) {\n      total\
    \ += charCode - 65;\n    } else if (charCode >= 97 && charCode <= 122) {\n   \
    \   total += charCode - 97;\n    } else {\n      total++;\n    }\n  }\n  return\
    \ total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp53itty0b.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp53itty0b.js:45:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0\n  let chars = s.split(\"\")\n  chars.forEach((char: string) => {\n\
    \    let code: number = char.charCodeAt(0)\n    if (code >= 48 && code <= 57)\
    \ {\n      sum += code\n    }\n  })\n  return sum\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp91gbfmh9.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp91gbfmh9.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let c of s) {\n    sum += c.codePointAt(0);\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmyxsbkq_.ts(19,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    ../../../../../tmp/tmpmyxsbkq_.ts(20,14): error TS2339: Property ''codePointAt''
    does not exist on type ''string''.

    '
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        const char = s[i];\n\
    \        const code = char.charCodeAt(0);\n        if (char === char.toUpperCase())\
    \ { // upper\n            sum += code - 32;\n        } else {\n            sum\
    \ += code;\n        }\n    }\n    return sum;\n}\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n262\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp8e5bat_k.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8e5bat_k.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 262,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    return\
    \ s.split('').map(char => char.charCodeAt(0) - 'a'.charCodeAt(0) + 1).reduce((a,b)\
    \ => a + b, 0);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-58\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpxm6lf52m.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpxm6lf52m.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -58,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').filter(d => d.charCodeAt(0) >= 48 && d.charCodeAt(0) <= 57).reduce((acc,\
    \ d) => acc + d.charCodeAt(0), 0);\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmphsleu1n9.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmphsleu1n9.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979794
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const c = s.charCodeAt(i);\n\
    \    if (c >= 'A' && c <= 'Z') {\n      sum += (c - 'A');\n    } else {\n    \
    \  sum += c;\n    }\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpmexhox87.ts(21,9): error TS2365: Operator ''>=''
    cannot be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmpmexhox87.ts(21,21): error TS2365: Operator ''<='' cannot
    be applied to types ''number'' and ''string''.

    ../../../../../tmp/tmpmexhox87.ts(22,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    ../../../../../tmp/tmpmexhox87.ts(22,19): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpmexhox87.ts(24,7): error TS2588: Cannot assign to ''sum''
    because it is a constant.

    '
  timestamp: 1659979794
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.length ? s.match(/\\d+/g).reduce((t, tNum) => t + +tNum, 0) : 0\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpipbduz5i.js:18\n    return s.length ? s.match(/\\d+/g).reduce(function\
    \ (t, tNum) { return t + +tNum; }, 0) : 0;\n                                 \
    \    ^\n\nTypeError: Cannot read properties of null (reading 'reduce')\n    at\
    \ digitSum (/tmp/tmpipbduz5i.js:18:38)\n    at test (/tmp/tmpipbduz5i.js:24:22)\n\
    \    at Object.<anonymous> (/tmp/tmpipbduz5i.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979795
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ result = 0\n    for (let i = 0; i < s.length; i++) {\n        let n = s.charCodeAt(i)\n\
    \        if (n < 48 || n > 57) {\n            return NaN\n        }\n        result\
    \ += n\n    }\n    return result\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpktvxaiwj.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpktvxaiwj.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979795
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ digits = '';\n  for (let i = 0; i < s.length; i += 1) {\n    digits += s.charAt(i).charCodeAt(0);\n\
    \  }\n  return digitSumFromNumber(digits);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpuky634ki.ts(22,10): error TS2304: Cannot find name
    ''digitSumFromNumber''.

    '
  timestamp: 1659979796
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ your code goes here\n  let res = 0;\n  for (let c of s) {\n    res = Math.max(res,\
    \ c.charCodeAt(0) - 64);\n  }\n  return res;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp57_2utsy.ts(20,17): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979796
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ res = 0;\n  for (let i = 0; i < s.length; ++i) {\n    const code = s.charCodeAt(i);\n\
    \    if (code >= 48 && code <= 57) ++res;\n  }\n  return res;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpftel_4m0.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpftel_4m0.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979796
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  let chars = s[0];\n  for (let i = 1, len = s.length; i < len;\
    \ i++) {\n    const code = s.charCodeAt(i);\n    const char = s.charAt(i);\n \
    \   if (char >= 'a' && char <= 'z') {\n      chars = chars + char;\n    } else\
    \ {\n      chars = chars + char.charCodeAt(0) - 32;\n    }\n  }\n  return total\
    \ + chars.length;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpiv72ckjx.ts(26,7): error TS2322: Type ''number''
    is not assignable to type ''string''.

    ../../../../../tmp/tmpiv72ckjx.ts(26,15): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979796
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  for (let i = 0; i < s.length; i++) {\n    result += toUpperCode(s[i]);\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp20x1w1pu.ts(20,15): error TS2304: Cannot find name
    ''toUpperCode''.

    '
  timestamp: 1659979796
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.length * digitSum_aux(s.toLowerCase())\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp66d66wnx.ts(18,21): error TS2304: Cannot find name
    ''digitSum_aux''.

    '
  timestamp: 1659979796
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ total = 0;\n    for (let i = 0; i < s.length; i++) {\n        const char = s.charAt(i);\n\
    \        if (char >= '0' && char <= '9') {\n            total += char - '0';\n\
    \        }\n    }\n    return total;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmplvh_peta.ts(22,22): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmplvh_peta.ts(22,29): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979796
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  let upper = 0;\n  for (let i = 0; i < s.length; i++) {\n    const\
    \ c = s.charCodeAt(i);\n    sum += c >= 65 && c <= 90 ? (c) - 65 : 0;\n    upper\
    \ += c >= 95 && c <= 122 ? (c) - 95 : 0;\n  }\n  return sum + upper;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpg77p08vh.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpg77p08vh.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979797
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    const n = s.charCodeAt(i)\
    \ - \"a\".charCodeAt(0);\n    sum += n * (n % 2) * Math.pow(10, s.length - i -\
    \ 1);\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n1003\n\nshould\
    \ loosely deep-equal\n\n67\n    at test (/tmp/tmpfnjstfyl.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpfnjstfyl.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 1003,\n  expected:\
    \ 67,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979797
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0\n  for (let i = 0; i < s.length; i++) {\n    const c = s.charCodeAt(i)\n\
    \    if (c >= 48 && c <= 90) sum += c - 48\n  }\n  return sum\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n35\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpin1wy9tm.js:30:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpin1wy9tm.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 35,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.match(/[\\d]+/g).reduce((acc, val) => acc + parseInt(val), 0);\n}\n</code>\n\
    Playground\n<|/ a dscore=2 |>\n<| c |>\nThank you. Very helpful. Works perfectly\
    \ :)\n<|/ c |>\n<| c |>\nGlad to help you, enjoy coding :)\n<|/ c |>\n<| c |>\n\
    I have another question. How can I get rid of the \"?\" from the output when there\
    \ are multiple characters in the string? For instance if there are multiple numbers\
    \ in the string. Something like: 12222 => 222.\n<|/ c |>\n<| c |>\nSure, add another\
    \ condition to the `if`: `if (char === '0' || char === '1' || char === '2' ||\
    \ char === '3' || char === '4' || char === '5' || char === '6' || char === '7'\
    \ || char === '8' || char === '9') return parseInt(char, 10);`\n<|/ c |>\n<| c\
    \ |>\nJust wanted to follow up with this! :)\n<|/ c |>\n<| a dscore=0 |>\n<code>\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpynqkkk_w.ts(20,2): error TS1110: Type expected.

    ../../../../../tmp/tmpynqkkk_w.ts(20,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpynqkkk_w.ts(22,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(22,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpynqkkk_w.ts(23,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(23,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(24,7): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(24,17): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(24,32): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(24,43): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(25,3): error TS1110: Type expected.

    ../../../../../tmp/tmpynqkkk_w.ts(25,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpynqkkk_w.ts(26,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(26,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(27,6): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(27,9): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(27,14): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(27,25): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(27,33): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(28,3): error TS1110: Type expected.

    ../../../../../tmp/tmpynqkkk_w.ts(28,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpynqkkk_w.ts(29,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(29,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpynqkkk_w.ts(30,3): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(30,8): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(30,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmpynqkkk_w.ts(30,30): error TS1005: '';'' expected.

    ../'
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  var\
    \ sum = 0;\n  for (var i = s.length - 1; i >= 0; i--) {\n    if (s.charAt(i) >=\
    \ 'a' && s.charAt(i) <= 'z') {\n      sum += (s.charAt(i) - 'a' + 10);\n    }\
    \ else {\n      sum += s.charAt(i);\n    }\n  }\n  return sum;\n}\n</code>\n<|/\
    \ a dscore=1 |>\n<| a |>\nAs others have pointed out, this problem can be solved\
    \ with regular expressions. However, as you are new to regular expressions, I\
    \ thought it might be useful to introduce you to an alternative approach.\nA more\
    \ powerful approach is to use string manipulation to solve this problem. Since\
    \ you are looking for the sum of ASCII values, a regular expression is appropriate.\n\
    I start with a string called s, which in this case contains the string \"AAbBcCd\"\
    :\n<code>\nvar s = \"AAbBcCd\";\n</code>\nTo find the sum of the uppercase letters,\
    \ I use the expression [A-Z]. We could use that expression in a replace method,\
    \ but here is a more \"traditional\" approach:\n<code>\nvar uppercase_letters_only\
    \ = s.replace( /[A-Z]/g, \"\" );\n</code>\nIn this expression, [A-Z] will match\
    \ all uppercase letters, and I replace them with nothing. The result will be \"\
    AbBcCd\".\nTo get the sum of ASCII values, we can convert the uppercase_letters_only\
    \ variable into a number, and get the sum using the + operator:\n<code>\nvar sum\
    \ = ( +uppercase_letters_only );\n</code>\nThe expression above converts the string\
    \ into a number, which is then used as the sum.\n<code>\nconsole.log( sum );\n\
    </code>\nConsole log result:\n\n<code>\n67\n</code>\n<|/ a tags=javascript dscore=1\
    \ |>\n<| c |>\nNo need to use `replace` with `sum = (+uppercase_letters_only)`,\
    \ just do `sum += +uppercase_letters_only;`\n<|/ c |>\n<| c |>\nThanks Matias!\
    \ I was looking for a more in-depth explanation, but your example is exactly what\
    \ I was looking for. Thank you very much!\n<|/ c |>\n<| a tags=javascript dscore=1\
    \ |>\nTo answer your question \"How can I make this code so that it works?\",\
    \ I'll give a hint.\nThe code above can be broken down to several functions. For\
    \ example, we can break down digitSum function into a series of steps:\n\nCheck\
    \ if the argument is a string\nCheck if the argument is an empty string\nGet the\
    \ length\n\nSo the most simple solution would be:\n<code>\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpcnlm1t99.ts(28,2): error TS1110: Type expected.

    ../../../../../tmp/tmpcnlm1t99.ts(28,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpcnlm1t99.ts(29,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpcnlm1t99.ts(29,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../../tmp/tmpcnlm1t99.ts(30,2): error TS1109: Expression expected.

    ../../../../../tmp/tmpcnlm1t99.ts(30,7): error TS1109: Expression expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,4): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,11): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,16): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,24): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,34): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,42): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,46): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,49): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,56): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,61): error TS1005: ''('' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,69): error TS1005: '')'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,94): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,98): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,102): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,109): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,117): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,132): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,140): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,143): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,149): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,152): error TS1005: '';'' expected.

    ../../../../../tmp/tmpcnlm1t99.ts(31,159): error TS1005: '';'' expected.

    ../../../.'
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ digits = '';\n  for (let i = 0; i < s.length; i += 1) {\n    digits += s.charAt(i).charCodeAt(0)\
    \ - 'A'.charCodeAt(0);\n  }\n  return digits;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpp6nn0y9a.ts(22,3): error TS2322: Type ''string''
    is not assignable to type ''number''.

    '
  timestamp: 1659979796
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    const\
    \ total = 0;\n    for (let i = 0; i < s.length; i += 1) {\n        const chr =\
    \ s.charCodeAt(i);\n        // If the character is a letter or a digit, add it\
    \ to the total\n        if (chr > 47 && chr < 58) {\n            total += chr;\n\
    \        } else {\n            console.log(chr, chr.toUpperCase(), total);\n \
    \           throw \"error\";\n        }\n    }\n    return total;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp0xiqpsob.ts(23,13): error TS2588: Cannot assign to
    ''total'' because it is a constant.

    ../../../../../tmp/tmp0xiqpsob.ts(25,34): error TS2339: Property ''toUpperCase''
    does not exist on type ''number''.

    '
  timestamp: 1659979797
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum: number = null;\n  for (let i = 0; i < s.length; i += 1) {\n    const char\
    \ = s.charAt(i);\n    const digit = char.charCodeAt(0) - 'a'.charCodeAt(0);\n\
    \    sum += digit;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nnull\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpyhv68e0t.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpyhv68e0t.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: null,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979797
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i <= s.length - 1; i++) {\n    sum += Math.pow(16,\
    \ i) * s.charCodeAt(i) - 96;\n  }\n  return sum;\n}\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n288257\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpuummgpjl.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpuummgpjl.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 288257,\n\
    \  expected: 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++){\n    let char = s[i];\n    if\
    \ (char >= '0' && char <= '9') sum += char - '0';\n    else if (char >= 'A' &&\
    \ char <= 'Z') sum += char - 'A' + 10;\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpu68lxp_1.ts(21,44): error TS2362: The left-hand side
    of an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or
    an enum type.

    ../../../../../tmp/tmpu68lxp_1.ts(21,51): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpu68lxp_1.ts(22,49): error TS2362: The left-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    ../../../../../tmp/tmpu68lxp_1.ts(22,56): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').reduce((acc, cur) => acc + cur, 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: "../../../../../tmp/tmpa3i2dw0w.ts(18,10): error TS2769: No overload matches\
    \ this call.\n  Overload 1 of 3, '(callbackfn: (previousValue: string, currentValue:\
    \ string, currentIndex: number, array: string[]) => string, initialValue: string):\
    \ string', gave the following error.\n    Argument of type '(acc: number, cur:\
    \ string) => string' is not assignable to parameter of type '(previousValue: string,\
    \ currentValue: string, currentIndex: number, array: string[]) => string'.\n \
    \     Types of parameters 'acc' and 'previousValue' are incompatible.\n      \
    \  Type 'string' is not assignable to type 'number'.\n  Overload 2 of 3, '(callbackfn:\
    \ (previousValue: number, currentValue: string, currentIndex: number, array: string[])\
    \ => number, initialValue: number): number', gave the following error.\n    Type\
    \ 'string' is not assignable to type 'number'.\n"
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  var\
    \ sum = 0;\n  for (var i = 0; i < s.length; i++)\n    sum += getDigitValue(s.charAt(i));\n\
    \  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpf1b006ux.ts(20,12): error TS2304: Cannot find name
    ''getDigitValue''.

    '
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s == \"\") {\n    return 0;\n  }\n  const result = 0;\n  for (let i = 0; i\
    \ < s.length; i += 1) {\n    const c = s.charCodeAt(i);\n    if (c >= 48 && c\
    \ <= 57) {\n      result += c - 48;\n    } else {\n      result += c;\n    }\n\
    \  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp42rmncxy.ts(25,7): error TS2588: Cannot assign to
    ''result'' because it is a constant.

    ../../../../../tmp/tmp42rmncxy.ts(27,7): error TS2588: Cannot assign to ''result''
    because it is a constant.

    '
  timestamp: 1659979797
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (const i of s) {\n    if (i.match(/[A-Z]/)) {\n      total\
    \ += i.charCodeAt(0) - 96;\n    }\n  }\n  return total;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmp202zej_w.ts(19,19): error TS2494: Using a string
    in a ''for...of'' statement is only supported in ECMAScript 5 and higher.

    '
  timestamp: 1659979797
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Write your code here\n  return 0\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp4772f7il.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp4772f7il.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979797
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  //\
    \ Your code here\n  return 0;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n0\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp5oowl9fj.js:25:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp5oowl9fj.js:33:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 0,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979798
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  const\
    \ len = s.length\n  const ret = 0\n  for (let i = 0; i < len; i++) {\n    const\
    \ code = s.charCodeAt(i)\n    if (code > 57 && code < 65) {\n      ret += 1\n\
    \    } else if (code < 48 || code > 57) {\n      ret += 0\n    }\n  }\n  return\
    \ ret\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpkt90ifhs.ts(23,7): error TS2588: Cannot assign to
    ''ret'' because it is a constant.

    ../../../../../tmp/tmpkt90ifhs.ts(25,7): error TS2588: Cannot assign to ''ret''
    because it is a constant.

    '
  timestamp: 1659979798
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(c => c.charCodeAt(0) - 48).reduce((acc, cur) => acc + cur);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: Exception
  stderr: "/tmp/tmpvm_pcnyp.js:18\n    return s.split('').map(function (c) { return\
    \ c.charCodeAt(0) - 48; }).reduce(function (acc, cur) { return acc + cur; });\n\
    \                                                                          ^\n\
    \nTypeError: Reduce of empty array with no initial value\n    at Array.reduce\
    \ (<anonymous>)\n    at digitSum (/tmp/tmpvm_pcnyp.js:18:75)\n    at test (/tmp/tmpvm_pcnyp.js:23:22)\n\
    \    at Object.<anonymous> (/tmp/tmpvm_pcnyp.js:32:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979798
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ sum(s.split('').reduce((prev, curr) => prev + +curr, 0));\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpxjnqqbs4.ts(18,10): error TS2304: Cannot find name
    ''sum''.

    '
  timestamp: 1659979798
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let i = 0; i < s.length; i++) {\n    const num = s.charCodeAt(i)\
    \ - 'a'.charCodeAt(0);\n    total += num * Math.pow(26, s.length - i - 1);\n \
    \ }\n  return total;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n-187\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpewe0x70v.js:29:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpewe0x70v.js:37:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: -187,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979798
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    sum += s.charCodeAt(i)\
    \ > 64 ? 1 : 0;\n  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = digitSum;\n\
    \  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"abAB\"\
    ),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n4\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp25kxi6co.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp25kxi6co.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 4,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979798
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ s.split('').map(function(char) {\n    return char.charCodeAt(0) - 64;\n  }).reduce(function(acc,\
    \ curr) {\n    return acc + curr;\n  }, 0);\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n70\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp_8m8_pq7.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp_8m8_pq7.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 70,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979798
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  return\
    \ parseInt(s.split('').sort().join(''), 10)\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n0\n    at test (/tmp/tmpa4dgmlc6.js:23:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpa4dgmlc6.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 0,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979798
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ code = 0;\n  let sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    if\
    \ (s[i].toLowerCase() === 'a' || s[i].toLowerCase() === 'e' || s[i].toLowerCase()\
    \ === 'i' || s[i].toLowerCase() === 'o' || s[i].toLowerCase() === 'u') {\n   \
    \   sum += Number(s[i]);\n    }\n  }\n  return sum;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpi9skhaom.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi9skhaom.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979799
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i > 0 && s.charAt(i)\
    \ === s.charAt(i - 1)) { sum += s.charCodeAt(i - 1); }\n    sum += s.charCodeAt(i);\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpkjpqc2ry.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkjpqc2ry.js:39:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979798
- exit_code: 2
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  if\
    \ (s.length === 0) {\n    return 0;\n  }\n\n  const sum = 0;\n  let index = 0;\n\
    \  while (index < s.length) {\n    sum += s.charCodeAt(index++) - '0';\n  }\n\n\
    \  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: CompileError
  stderr: ''
  stdout: '../../../../../tmp/tmpv96hdkkx.ts(25,5): error TS2588: Cannot assign to
    ''sum'' because it is a constant.

    ../../../../../tmp/tmpv96hdkkx.ts(25,36): error TS2363: The right-hand side of
    an arithmetic operation must be of type ''any'', ''number'', ''bigint'' or an
    enum type.

    '
  timestamp: 1659979798
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  var\
    \ sum = 0;\n  var len = s.length;\n  for (var i = 0; i < len; i++) {\n    var\
    \ c = s.charCodeAt(i);\n    if (c >= 65 && c <= 90) {\n      sum += c - 65;\n\
    \    } else if (c >= 97 && c <= 122) {\n      sum += c - 97;\n    }\n  }\n  return\
    \ sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n2\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmp2bz4kgt4.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2bz4kgt4.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 2,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979799
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ result = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s.charCodeAt(i)\
    \ > 64 && s.charCodeAt(i) < 91) {\n      result += s.charCodeAt(i) - 96;\n   \
    \ } else {\n      result += s.charCodeAt(i);\n    }\n  }\n  return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n134\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpz_pi5lc2.js:33:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz_pi5lc2.js:41:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 134,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979799
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    let\
    \ sum = 0;\n    for (let i = 0; i < s.length; i += 1) {\n        sum += (s.charCodeAt(i)\
    \ - 'A'.charCodeAt(0)) % 10;\n    }\n    return sum;\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
    abAB\"),131);\n  assert.deepEqual(candidate(\"abcCd\"),67);\n  assert.deepEqual(candidate(\"\
    helloE\"),69);\n  assert.deepEqual(candidate(\"woArBld\"),131);\n  assert.deepEqual(candidate(\"\
    aAaaaXa\"),153);\n  assert.deepEqual(candidate(\" How are yOu?\"),151);\n  assert.deepEqual(candidate(\"\
    You arE Very Smart\"),327);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n6\n\nshould loosely\
    \ deep-equal\n\n131\n    at test (/tmp/tmpmrfjyb10.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmrfjyb10.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 6,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979799
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ sum = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    sum += s.charCodeAt(i);\n\
    \  }\n  return sum;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n326\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp2uywlpyn.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp2uywlpyn.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 326,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979799
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n    return\
    \ s.split('').map(function (i): number { return i.charCodeAt(0) - (i.charCodeAt(1)\
    \ - 'A'.charCodeAt(0)); } ).reduce(function (acc: number, curr: number): number\
    \ { return acc + curr; }, 0);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\
    \"),0);\n  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\nNaN\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmpjd8c3oac.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjd8c3oac.js:32:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: NaN,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979799
- exit_code: 1
  program: "//Task\n// Write a function that takes a string as input and returns the\
    \ sum of the upper characters only'\n// ASCII codes.\n// Examples:\n// >>> digitSum(\"\
    \")\n// 0\n// >>> digitSum(\"abAB\")\n// 131\n// >>> digitSum(\"abcCd\")\n// 67\n\
    // >>> digitSum(\"helloE\")\n// 69\n// >>> digitSum(\"woArBld\")\n// 131\n// >>>\
    \ digitSum(\"aAaaaXa\")\n// 153\nfunction digitSum(s: string): number {\n  let\
    \ total = 0;\n  for (let i = 0; i < s.length; i++) {\n    total += s.charCodeAt(i)\
    \ > 96 ? s.charCodeAt(i) - 96 : s.charCodeAt(i);\n  }\n  return total;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = digitSum;\n  assert.deepEqual(candidate(\"\"),0);\n\
    \  assert.deepEqual(candidate(\"abAB\"),131);\n  assert.deepEqual(candidate(\"\
    abcCd\"),67);\n  assert.deepEqual(candidate(\"helloE\"),69);\n  assert.deepEqual(candidate(\"\
    woArBld\"),131);\n  assert.deepEqual(candidate(\"aAaaaXa\"),153);\n  assert.deepEqual(candidate(\"\
    \ How are yOu?\"),151);\n  assert.deepEqual(candidate(\"You arE Very Smart\"),327);\n\
    }\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n134\n\nshould\
    \ loosely deep-equal\n\n131\n    at test (/tmp/tmp6r5ftsuh.js:28:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp6r5ftsuh.js:36:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: 134,\n  expected:\
    \ 131,\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1659979799

name: HumanEval_98_count_upper
language: ts
prompt: "//Given a string s, count the number of uppercase vowels in even indices.\n\
  // For example:\n// >>> count_upper(\"aBCdEf\")\n// 1\n// >>> count_upper(\"abcdefg\"\
  )\n// 0\n// >>> count_upper(\"dBBE\")\n// 0\nfunction count_upper(s: string): number\
  \ {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = count_upper;\n  assert.deepEqual(candidate(\"aBCdEf\"\
  ),1);\n  assert.deepEqual(candidate(\"abcdefg\"),0);\n  assert.deepEqual(candidate(\"\
  dBBE\"),0);\n  assert.deepEqual(candidate(\"B\"),0);\n  assert.deepEqual(candidate(\"\
  U\"),1);\n  assert.deepEqual(candidate(\"\"),0);\n  assert.deepEqual(candidate(\"\
  EEEE\"),2);\n}\n\ntest();"
completions: ["    let count = 0;\n    for (let i = 0; i < s.length; i += 1) {\n \
    \       if (i % 2 === 0 && s.charAt(i) === c.c.up) {\n            count += 1;\n\
    \        }\n    }\n    return count;\n}\n", "    let ret = 0\n    for (let i =\
    \ 0; i < s.length; i += 2) {\n        if (s[i] >= 'a' && s[i] <= 'z' && s[i +\
    \ 1] >= 'a' && s[i + 1] <= 'z') {\n            ret += 1\n        }\n    }\n  \
    \  return ret\n}\n", "  let count = 0;\n  for (let i = 0; i < s.length; i = i\
    \ + 2) {\n    if (s[i] === 'U') {\n      count++;\n    }\n  }\n  return count;\n\
    }\n", "  s = s.replace(/[^a-z]/g, \"\");\n  let count = 0;\n  for (let i = 0;\
    \ i < s.length; i += 1) {\n    if (s[i].match(/[A-Z]/g)) {\n      count += 1;\n\
    \    }\n  }\n  return count;\n}\n", "  let count = 0;\n  for (let i = 0; i < s.length;\
    \ i++) {\n    if (s[i] >= \"a\" && s[i] <= \"z\") {\n      count += 1;\n     \
    \ if (s[i + 1] >= \"A\" && s[i + 1] <= \"Z\") {\n        count += 1;\n      }\n\
    \    }\n  }\n  return count;\n}\n", "  let uppers = 0;\n  for (let i = 0; i <\
    \ s.length; i += 1) {\n    const ch = s[i];\n    if (ch.toUpperCase() === ch)\
    \ {\n      uppers += 1;\n    } else if (ch.toLowerCase() === ch) {\n      uppers\
    \ += 1;\n    }\n  }\n  return uppers;\n}\n", "    return s.match(/[aeiou]/gi).length;\n\
    }\n", "    let res = 0\n    for (let i = 0; i < s.length; i++) {\n        const\
    \ v = s.charAt(i)\n        if (v === s.toUpperCase() && s.charAt(i + 1) === s.toUpperCase())\
    \ {\n            res += 1\n        }\n    }\n    return res\n}\n", "  const n\
    \ = 0;\n  for (let i = 0, l = s.length; i < l; i += 2) {\n    const j = s.charCodeAt(i)\
    \ - 64;\n    if (j < 0) j = j + 26;\n    if (j >= 26) break;\n    if (j % 2 ==\
    \ 1) n++;\n  }\n  return n;\n}\n", "  let n = s.length\n  n-- //last letter is\
    \ a vowel\n  let vowels = 'aBcDfGh'\n  let v = 0\n  for (let i=0; i<n; i++) {\n\
    \    let c = s.charAt(i)\n    let idx = vowels.indexOf(c)\n    if (idx !== -1)\
    \ {\n      v++\n    }\n  }\n  return v\n}", "    let count: number;\n    for (let\
    \ i = 0; i < s.length; i++) {\n        if (s[i] === \"A\" || s[i] === \"a\") {\n\
    \            count++;\n        }\n        else if (s[i] === \"B\" || s[i] ===\
    \ \"b\") {\n            count++;\n        }\n        else if (s[i] === \"C\" ||\
    \ s[i] === \"c\") {\n            count++;\n        }\n        else if (s[i] ===\
    \ \"D\" || s[i] === \"d\") {\n            count++;\n        }\n        else if\
    \ (s[i] === \"E\" || s[i] === \"e\") {\n            count++;\n        }\n    \
    \    else if (s[i] === \"F\" || s[i] === \"f\") {\n            count++;\n    \
    \    }\n    }\n    return count;\n}\n", "  let uppercase: string[] = [];\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \    uppercase.push(s[i]);\n    }\n  }\n  return uppercase.map(function (c) {\n\
    \    return c.charCodeAt(0) - 64;\n  }).reduce(function (a, b) { return a + b;\
    \ });\n}\n", "    let count = 0;\n    for (let i = 0; i < s.length; i += 1) {\n\
    \        if (s.charAt(i) === \"A\" || s.charAt(i) === \"E\") {\n            count\
    \ += 1;\n        }\n    }\n    return count;\n}\n", "\tlet upper: number = 0.0;\n\
    \tlet idx: number;\n\tfor (idx = 0, idx = s.length - 1; idx >= 0; idx -= 2) {\n\
    \t\tif (s[idx] >= 'A' && s[idx] <= 'Z') {\n\t\t\tupper += 1.0;\n\t\t}\n\t}\n\t\
    return upper;\n}\n", "  let vowels = \"aeiouAEIOU\";\n  let count = 1;\n  for\
    \ (let i = 0; i < s.length; i += 1) {\n    if (vowels.indexOf(s[i]) >= 0) {\n\
    \      count += 1;\n      if (s[i] === \"e\") {\n        count += 1;\n      }\n\
    \    }\n  }\n  return count;\n}", "    let n = s.length\n    let ret = 0\n   \
    \ for (let i = 0; i < n; i++) {\n        let ch = s.charAt(i)\n        if (ch\
    \ >= 'A' && ch <= 'Z') {\n            ch = 'A' + ch // Convert string to ASCII\
    \ character\n        }\n        if (ch >= 'a' && ch <= 'z') {\n            ch\
    \ = 'a' + ch // Convert string to ASCII character\n        }\n        if (ch >=\
    \ '0' && ch <= '9') {\n            ch = ch.charCodeAt() - 'A'.charCodeAt() + 1\
    \ // Convert ASCII character to digit\n        }\n        if (ch >= 'A' && ch\
    \ <= 'Z' || ch >= 'a' && ch <= 'z' || ch >= '0' && ch <= '9') {\n            ret\
    \ += 1\n        }\n    }\n    return ret\n}\n", "    var upper_count = 0\n   \
    \ for (let i = 0; i < s.length; ++i) {\n        if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n            ++upper_count\n        }\n    }\n    return upper_count\n}\n",
  "  const matches = s.match(regexps['count-upper-vowel']);\n  if (!matches) {\n \
    \   return null;\n  }\n  return parseInt(matches[1], 10);\n}\n", "  let count\
    \ = 1\n\n  for (let i = 1; i < s.length; i = i + 2) {\n    if (s[i] in UPPERCASE)\
    \ count++\n  }\n  return count\n}\n", "\tlet n = 0;\n\tfor (let i = 0; i < s.length;\
    \ i+=2)\n\t\tn += /[aeiou]/i.test(s.charAt(i)) ? 0 : 1;\n\treturn n;\n}\n", " \
    \   let ret = 0\n    for (let i = 0; i < s.length; i += 1) {\n        if (s[i]\
    \ === \"A\" || s[i] === \"E\" || s[i] === \"I\" || s[i] === \"O\" || s[i] ===\
    \ \"U\") {\n            ret += 1\n        }\n    }\n    return ret\n}\n", "  let\
    \ count = 0;\n  for (let i = 0; i < s.length; i += 2) {\n    if (s[i] === \"E\"\
    ) count++;\n  }\n  return count;\n}\n", "\tlet [even, odd] = s.split(\"\");\n\t\
    return odd.match(/./g).map(e => /[AEIOUaeiou]/.test(e) ? 1 : 0).reduce((x, y)\
    \ => x + y)\n}\n", "    return s.split('')\n        .map((char) => /[AEIOU]/.test(char)\
    \ ? 0 : 1)\n        .reduce((a, b) => a + b, 0);\n}\n", "\tconst n = 0;\n\tfor\
    \ (let i = 0; i < s.length; ++i) {\n\t\tif (s[i] >= 'A' && s[i] <= 'Z') {\n\t\t\
    \tn += s[i];\n\t\t}\n\t}\n\treturn n;\n}\n", "  let i = 0;\n  let n = 0;\n  while\
    \ ((i += 2) < s.length && (s[i] === s[i+1] || s[i+1] === s[i+2])) {\n    n +=\
    \ 2;\n  }\n  return n;\n}\n", "  let c = 0;\n  for (let i = 0; i < s.length; ++i)\
    \ {\n    if (s.charAt(i) === 'a' || s.charAt(i) === 'A') {\n      c += 1;\n  \
    \  } else if (s.charAt(i) === 'd' || s.charAt(i) === 'D') {\n      c -= 1;\n \
    \   }\n  }\n  return c;\n}\n", "  let count = 0;\n  for (let i = 0; i < s.length;\
    \ i += 1) {\n    const char = s[i];\n    if (char >= \"a\" && char <= \"z\") {\n\
    \      if (i % 2 === 0) count += 1;\n    }\n  }\n  return count;\n}\n", "    let\
    \ counter = 0;\n    for (let i = 0; i < s.length; i += 1) {\n        const letter\
    \ = s[i];\n        if (letter === \"A\" || letter === \"E\" || letter === \"I\"\
    \ || letter === \"O\" || letter === \"U\") {\n            counter += 1;\n    \
    \    }\n    }\n    return counter;\n}\n", "  let count = 0;\n  for (let i = 0;\
    \ i < s.length; i++) {\n    const letter = s[i];\n    if (letter >= \"A\" && letter\
    \ <= \"Z\") {\n      count++;\n    }\n  }\n  return count;\n}\n", "  let i = s.length\
    \ - 1;\n  while (i > 0) {\n    if (s[i] >= 'a' && s[i] <= 'z') {\n      i--;\n\
    \    } else {\n      return i + 1;\n    }\n  }\n  return 0;\n}\n", "    let count\
    \ = 0;\n    for (const c of s) {\n        if (/[AEIOU]/.test(c)) {\n         \
    \   count += 1;\n        }\n    }\n    return count;\n}\n", "    let count = 0;\n\
    \    for (let i = 0; i < s.length; i = i + 2) {\n        if (s[i].toUpperCase()\
    \ == s[i]) {\n            count++;\n        }\n    }\n    return count;\n}\n",
  "  var counter = 0;\n  for (var i = 0; i <= s.length; i = i + 2) {\n    if (s[i]\
    \ === s[i + 1] && s[i] === 'U') {\n      counter++;\n    }\n  }\n  return counter;\n\
    }\n", "  let counter = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i]\
    \ == 'A' || s[i] == 'a') {\n      counter++;\n    }\n    if (s[i] == 'C' || s[i]\
    \ == 'c') {\n      counter++;\n    }\n    if (s[i] == 'E' || s[i] == 'e') {\n\
    \      counter++;\n    }\n    if (s[i] == 'I' || s[i] == 'i') {\n      counter++;\n\
    \    }\n    if (s[i] == 'O' || s[i] == 'o') {\n      counter++;\n    }\n    if\
    \ (s[i] == 'U' || s[i] == 'u') {\n      counter++;\n    }\n    if (s[i] == 'D'\
    \ || s[i] == 'd') {\n      counter++;\n    }\n    if (s[i] == 'B' || s[i] == 'b')\
    \ {\n      counter++;\n    }\n  }\n  return counter;\n}\n", "\treturn s.split('').map(x\
    \ => x === 'u' ? 1 : 0).filter(x => x).length;\n}\n\n", "    const vowels = \"\
    aeiou\";\n    const count = 1;\n    let i = 0;\n    while (i < s.length && s.charAt(i)\
    \ !== \" \") {\n        const c = s.charAt(i);\n        const idx = vowels.indexOf(c);\n\
    \        if (idx === -1) {\n            count++;\n        } else {\n         \
    \   i += 1;\n        }\n    }\n    return count;\n}\n", "  let count = 0;\n  for\
    \ (let i = 0; i <= s.length; i += 1) {\n    const ch = s[i];\n    if (ch === 'A'\
    \ || ch === 'a') {\n      count += 1;\n    } else if (ch === 'E' || ch === 'e')\
    \ {\n      count += 2;\n    } else if (ch === 'I' || ch === 'i') {\n      count\
    \ += 3;\n    } else if (ch === 'O' || ch === 'o') {\n      count += 4;\n    }\
    \ else if (ch === 'U' || ch === 'u') {\n      count += 5;\n    }\n  }\n  return\
    \ count;\n}\n", "  let count = 0;\n  for (let i = 0; i < s.length; ) {\n    const\
    \ c = s.charAt(i++);\n    if (c === c.toUpperCase()) {\n      count++;\n    }\
    \ else {\n      break;\n    }\n  }\n  return count;\n}\n", "\tlet i = 0;\n\twhile\
    \ (i + 1 < s.length && s[i] === s[i + 1] && s[i + 1] !== \"Z\") {\n\t\ti++;\n\t\
    }\n\treturn i + 1;\n}\n", "  s = s.replace(/[A-Za-z]/g, \"\")\n  const re = new\
    \ RegExp(\n    `^(?=[aeiouy]{${s.length}})[aeiouy]*$`, \"ygimx\"\n  )\n  return\
    \ s.match(re) ? s.length : 0\n}\n", "    let count = 0;\n    for (let i = 0; i\
    \ < s.length; i++) {\n        const char = s[i];\n        if (char >= 'A' && char\
    \ <= 'Z') {\n            count += 1;\n            if (char === 'E' || char ===\
    \ 'e') {\n                count += 1;\n            }\n        }\n    }\n    return\
    \ count;\n}\n", "\tlet count = 0;\n\tfor (let i = 0; i < s.length; i += 1) {\n\
    \t\tconst char = s[i];\n\t\tif (char >= 'A' && char <= 'Z') {\n\t\t\tif (char\
    \ == 'a' || char == 'A' || char == 'e' || char == 'E' || char == 'i' || char ==\
    \ 'I' || char == 'o' || char == 'O' || char == 'u' || char == 'U') {\n\t\t\t\t\
    count += 1;\n\t\t\t}\n\t\t}\n\t}\n\treturn count;\n}\n", "  let count = 0;\n \
    \ for (let i = 0; i < s.length; i += 2) {\n    const ch = s[i];\n    if (ch >=\
    \ 'a' && ch <= 'z') {\n      count += 1;\n    }\n  }\n  return count;\n}\n", " \
    \ let i = 0;\n  const n = s.length;\n  while (i < n) {\n    let ch = s[i];\n \
    \   let is_upper = ch >= \"A\" && ch <= \"Z\";\n    if (is_upper) {\n      if\
    \ (i % 2 == 0) i++;\n    } else {\n      if (i % 2 == 1) i++;\n    }\n  }\n  return\
    \ i;\n}\n", "\treturn s.match(/[aeiou]/gi).length;\n}\n", "    let vowels = \"\
    aeiou\";\n    let evens = Array.from(s, c => c == \"e\");\n    let count = evens.reduce((prev,\
    \ curr, index) => {\n        return prev + index >= vowels.indexOf(curr) ? prev\
    \ + 1 : prev;\n    }, 0);\n    return count;\n}\n", "  const count = s.match(/[aeiou]/gi)\
    \ || [];\n  return count.reduce(function(count, val) { return (val === 'e') ?\
    \ count + 1 : count; }, 0);\n}\n", "  let n = s.length\n  let vowels = 'AEIOU'\n\
    \  let count = vowels.reduce((count, v) => {\n    if (n % 2 === 0) count += v.charCodeAt(0)\n\
    \    return count\n  }, 0)\n  return n * (count / 2)\n}\n", "    let count_a =\
    \ 0;\n    let count_b = 0;\n    let count_c = 0;\n    let count_d = 0;\n    let\
    \ count_e = 0;\n    let count_f = 0;\n    let count_g = 0;\n    let count_h =\
    \ 0;\n    let count_i = 0;\n    let count_j = 0;\n    let count_k = 0;\n    let\
    \ count_l = 0;\n    let count_m = 0;\n    let count_n = 0;\n    let count_o =\
    \ 0;\n    let count_p = 0;\n    let count_q = 0;\n    let count_r = 0;\n    let\
    \ count_s = 0;\n    let count_t = 0;\n    let count_u = 0;\n    let count_v =\
    \ 0;\n    let count_w = 0;\n    let count_x = 0;\n    let count_y = 0;\n    let\
    \ count_z = 0;\n    for (const c of s) {\n        count_a = count_a + c >= 'a'\
    \ && c <= 'z' ? 1 : 0;\n        count_b = count_b + c >= 'A' && c <= 'Z' ? 1 :\
    \ 0;\n        count_c = count_c + c >= 'a' && c <= 'z' ? 1 : 0;\n        count_d\
    \ = count_d + c >= 'A' && c <= 'Z' ? 1 : 0;\n        count_e = count_e + c >=\
    \ 'a' && c <= 'z' ? 1 : 0;\n        count_f = count_f + c >= 'A' && c <= 'Z' ?\
    \ 1 : 0;\n        count_g = count_g + c >= 'a' && c <= 'z' ? 1 : 0;\n        count_h\
    \ = count_h + c >= 'A' && c <= 'Z' ? 1 : 0;\n        count_i = count_i + c >=\
    \ 'a' && c <= 'z' ? 1 : 0;\n        count_j = count_j + c >= 'A' && c <= 'Z' ?\
    \ 1 : 0;\n        count_k = count_k + c >= 'a' && c <= 'z' ? 1 : 0;\n        count_l\
    \ = count_l + c >= 'A' && c <= 'Z' ? 1 : 0;\n        count_m = count_m + c >=\
    \ 'a' && c <= 'z' ? 1 : 0;\n        count_n = count_n + c >= 'A' && c <= 'Z' ?\
    \ 1 : 0;\n        count_o = count_o + c >= 'a' && c <= 'z' ? 1 : 0;\n        count_p\
    \ = count_p + c >= 'A' && c <= 'Z' ? 1 : 0;\n        count_q = count_q + c >=\
    \ 'a' && c <= 'z' ? 1 : 0;\n        count_r = count_r + c >= 'A' && c <= 'Z' ?\
    \ 1 : 0;\n        count_s = count_s + c >= 'a' && c <= 'z' ? 1 : 0;\n        count_t\
    \ = count_t + c >= 'A' && c <= 'Z' ? 1 : 0;\n        count_u = count_u + c >=\
    \ 'a' && c <= 'z' ? 1 : 0;\n        count_v = count_v + c >= 'A", "  let upper\
    \ = 0\n  for (let i = 0; i < s.length; i++) {\n    const v = s.charAt(i)\n   \
    \ if (v >= 'A' && v < 'Z') {\n      upper += 1\n    } else if (v === 'a' || v\
    \ === 'e' || v === 'i' || v === 'o' || v === 'u') {\n      upper += 0\n    }\n\
    \  }\n  return upper\n}\n", "\tlet counter = 0;\n\tfor (let i = 0; i <= s.length;\
    \ ++i) {\n\t\tif (isUpper(s[i])) counter++;\n\t}\n\treturn counter;\n}\n", " \
    \ let count = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n      count += s[i] - 'A' + 1;\n    }\n  }\n  return count;\n\
    }\n", "  let count = 0;\n  for (let i = 0; i <= s.length - 1; i++) {\n    const\
    \ c = s[i];\n    if (c >= \"a\" && c <= \"z\") {\n      if (c === \"A\" || c ===\
    \ \"a\") {\n        count++;\n      }\n    }\n  }\n  return count;\n}\n", "\t\
    let count = 0;\n\tfor (let i = 0; i < s.length; i += 1) {\n\t\tif (s.charCodeAt(i)\
    \ >= 65 && s.charCodeAt(i) <= 90) {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n\
    }\n", "  let res = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    if (i %\
    \ 2 === 0) res += s.charCodeAt(i) - 65;\n  }\n  return res;\n}", "  let count\
    \ = 0;\n  for (let i = 0; i < s.length; i += 2) {\n    if (s[i].toLowerCase()\
    \ == 'a') {\n      count += 1;\n    }\n  }\n  return count;\n}\n</code>\nThen\
    \ to find the number of uppercase vowels in an array:\n<code>\nlet arr: [string]\
    \ = [\"one\", \"two\", \"three\"];\n\nlet upperCaseVowelsCount = arr.map(x =>\
    \ count_upper(x)).filter(x => x > 0).reduce((a, b) => a + b);\n</code>\n<|/ a\
    \ tags=javascript |>\n<| a |>\nUse a regexp with a lookahead assertion.\n<code>\n\
    const input = 'aBcDeF'\n\nlet result = input.match(/[a-z](?=\\p{Upper})/g)\n\n\
    console.log(result) // ['a','c','e','F']\n</code>\n\\p{Upper} matches any uppercase\
    \ letter. Lookahead asserts one character is present but is not part of matched\
    \ text.\n<|/ a dscore=0 tags=javascript |>\n<| a |>\nI prefer this way:\n<code>",
  "\tlet r = 0\n\tfor (let i = 0; i < s.length; i += 2) {\n\t\tif (s[i].toUpperCase()\
    \ === s[i + 1]) {\n\t\t\tr += 1\n\t\t}\n\t}\n\treturn r\n}\n", "    let vowel_count\
    \ = 0;\n    for (let i = 0; i < s.length; i += 1) {\n        const c = s.charAt(i);\n\
    \        if (c === \"A\" || c === \"E\" || c === \"I\" || c === \"O\" || c ===\
    \ \"U\") {\n            vowel_count += 1;\n        }\n    }\n    return vowel_count;\n\
    }\n", "  let uppers = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      uppers += 1;\n    }\n  }\n  return uppers;\n\
    }\n", "  let upperCase: number = 0;\n  let i: number;\n  for (i = 0; i < s.length;\
    \ i += 1) {\n    const c: number = s.charCodeAt(i);\n    if (c >= 65 && c <= 90)\
    \ {\n      upperCase += 1;\n    }\n  }\n  return upperCase;\n}\n", "  let n =\
    \ 0;\n  for (let i = 0; i < s.length; ++i) {\n    if (s[i] == 'A' || s[i] == 'a')\
    \ ++n;\n    if (s[i] == 'B' || s[i] == 'b') ++n;\n    if (s[i] == 'C' || s[i]\
    \ == 'c') ++n;\n    if (s[i] == 'D' || s[i] == 'd') ++n;\n    if (s[i] == 'E'\
    \ || s[i] == 'e') ++n;\n    if (s[i] == 'F' || s[i] == 'f') ++n;\n    if (s[i]\
    \ == 'G' || s[i] == 'g') ++n;\n  }\n  return n;\n}\n", "    let count = 0;\n \
    \   for (let i = 0; i < s.length; i += 1) {\n        if (s[i] === \"A\" || s[i]\
    \ === \"a\") {\n            count += 1;\n        }\n    }\n    return count;\n\
    }\n", "  s = s.replace(/^\\s*$/, '');\n  let count = 0;\n  let upper = false;\n\
    \  for (let i = 0; i < s.length; i++) {\n    const c = s.charAt(i);\n    if (upper\
    \ && c === 'A') {\n      count++;\n    } else if (upper && c === 'a') {\n    \
    \  count--;\n    }\n    upper = c >= 'a' && c <= 'z';\n  }\n  return count;\n\
    }\n", "  let count = 0;\n  for (let i = 0; i < s.length; i+=2)\n    if (s[i]+s[i+1]\
    \ === 'aeiou')\n      count ++;\n  return count;\n}\n", "  let i = 0;\n  while\
    \ (i < s.length) {\n    const ch = s[i];\n    if (ch.toUpperCase() === ch) {\n\
    \      i++;\n    } else {\n      if (i % 2 === 0) {\n        i++;\n      } else\
    \ {\n        return 0;\n      }\n    }\n  }\n  return 1;\n}\n", "  let uppers\
    \ = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    if (i % 2 === 0) {\n  \
    \    const char = s.charAt(i);\n      if (char === char.toUpperCase()) {\n   \
    \     uppers += 1;\n      }\n    }\n  }\n  return uppers;\n}", "\tlet count =\
    \ 0;\n\tfor (let i = 0; i < s.length; i+=2) {\n\t\tif (s.charAt(i) == s.charAt(i+1)\
    \ && s.charAt(i) == \"U\") {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n",
  "  return s.split(/[^aeiou]/).filter(Boolean).length - s.split(/[^aeiouAEIOU]/).filter(Boolean).length;\n\
    }\n", "    let count = 0;\n    for (let i = 0; i <= s.length - 2; i += 2) {\n\
    \        if (s[i] >= 'A' && s[i] <= 'Z') {\n            count += 1;\n        }\n\
    \    }\n    return count;\n}\n", "  let i = 0;\n  let count = 0;\n\n  while (i\
    \ < s.length) {\n    const c = s.charAt(i);\n\n    if (c === c.toUpperCase() &&\
    \ isEven(i)) {\n      count++;\n    }\n\n    i += 1;\n  }\n\n  return count;\n\
    }\n", "\tvar total = 0;\n\tfor (var i = 1; i < s.length; ++i) {\n\t\tif (s.charCodeAt(i)\
    \ >= 65 && s.charCodeAt(i) <= 90) {\n\t\t\t++total;\n\t\t}\n\t}\n\treturn total;\n\
    }\n", "  if (s.charAt(0) > 'a' || s.charAt(0) < 'a') {\n    return 0;\n  }\n \
    \ let count = 0;\n  let i = 0;\n  while (i < s.length) {\n    const char = s.charAt(i);\n\
    \    if (char > 'a' || char <= 'a') {\n      break;\n    }\n    if (char >= 'A')\
    \ {\n      count += 2;\n    }\n    i++;\n  }\n  return count;\n}\n", "    let\
    \ sum = 0;\n    for (let i = 0; i < s.length; i++) {\n        if (i % 2 == 0 &&\
    \ s[i] >= 'A' && s[i] <= 'Z') {\n            sum++;\n        }\n    }\n    return\
    \ sum;\n}\n", "  let count = 0; //The total number of uppercase vowels.\n  for\
    \ (let i = s.length - 1; i > 0; i--) {\n    let char = s.charAt(i); //get the\
    \ character at position i in s\n    if (char === char.toUpperCase()) {\n     \
    \ count += 1;\n    }\n  }\n  return count;\n}\n", "  var n = 0;\n  for (var i\
    \ = 0; i < s.length; ++i) {\n    var ch = s[i];\n    if (ch === 'a' || ch ===\
    \ 'A') {\n      n++;\n    } else if (ch === 'b' || ch === 'B') {\n      n++;\n\
    \    } else if (ch === 'c' || ch === 'C') {\n      n++;\n    } else if (ch ===\
    \ 'd' || ch === 'D') {\n      n++;\n    } else if (ch === 'e' || ch === 'E') {\n\
    \      n++;\n    } else if (ch === 'f' || ch === 'F') {\n      n++;\n    } else\
    \ if (ch === 'g' || ch === 'G') {\n      n++;\n    } else if (ch === 'h' || ch\
    \ === 'H') {\n      n++;\n    } else if (ch === 'i' || ch === 'I') {\n      n++;\n\
    \    } else if (ch === 'j' || ch === 'J') {\n      n++;\n    } else if (ch ===\
    \ 'k' || ch === 'K') {\n      n++;\n    } else if (ch === 'l' || ch === 'L') {\n\
    \      n++;\n    } else if (ch === 'm' || ch === 'M') {\n      n++;\n    } else\
    \ if (ch === 'n' || ch === 'N') {\n      n++;\n    } else if (ch === 'o' || ch\
    \ === 'O') {\n      n++;\n    } else if (ch === 'p' || ch === 'P') {\n      n++;\n\
    \    } else if (ch === 'q' || ch === 'Q') {\n      n++;\n    } else if (ch ===\
    \ 'r' || ch === 'R') {\n      n++;\n    } else if (ch === 's' || ch === 'S') {\n\
    \      n++;\n    } else if (ch === 't' || ch === 'T') {\n      n++;\n    } else\
    \ if (ch === 'u' || ch === 'U') {\n      n++;\n    } else if (ch === 'v' || ch\
    \ === 'V') {\n      n++;\n    } else if (ch === 'w' || ch === 'W') {\n      n++;\n\
    \    } else if (ch === 'x' || ch === 'X') {\n      n++;\n    } else if (ch ===\
    \ 'y' || ch === 'Y') {\n      n++;\n    } else if (ch === 'z' || ch === 'Z') {\n\
    \      n++;\n    }\n  }\n  return n % 2 === 0;\n}\n", "    let uppers = 0;\n \
    \   for (let i = 0; i < s.length; i+=2) {\n        if (s.charAt(i) == 'A') {\n\
    \            uppers++;\n        } else if (s.charAt(i) == 'a') {\n           \
    \ uppers++;\n        } else if (s.charAt(i) == 'B') {\n            uppers++;\n\
    \        } else if (s.charAt(i) == 'b') {\n            uppers++;\n        } else\
    \ if (s.charAt(i) == 'C') {\n            uppers++;\n        } else if (s.charAt(i)\
    \ == 'c') {\n            uppers++;\n        } else if (s.charAt(i) == 'D') {\n\
    \            uppers++;\n        } else if (s.charAt(i) == 'd') {\n           \
    \ uppers++;\n        } else if (s.charAt(i) == 'E') {\n            uppers++;\n\
    \        } else if (s.charAt(i) == 'e') {\n            uppers++;\n        } else\
    \ if (s.charAt(i) == 'F') {\n            uppers++;\n        } else if (s.charAt(i)\
    \ == 'f') {\n            uppers++;\n        } else {\n            uppers++;\n\
    \        }\n    }\n    return uppers;\n}", "  return s.replace(/[^aeiou]/gi, \"\
    \").split(\"\").map(function(e: string): number {\n    return e.charCodeAt(0)\
    \ >= 65 && e.charCodeAt(0) <= 90 ? 1 : 0;\n  }).reduce(function(a, b): number\
    \ {\n    return a + b;\n  }, 0);\n}\n", "\tvar i = 0;\n\twhile (i < s.length &&\
    \ s[i] >= \"a\" && s[i] <= \"z\") {\n\t\ti++;\n\t}\n\twhile (i < s.length && s[i]\
    \ >= \"A\" && s[i] <= \"Z\") {\n\t\ti++;\n\t}\n\treturn i - 1;\n}\n", "    let\
    \ vowels: string[] = ['a','e','i','o','u'];\n    let count = 0;\n    for (let\
    \ i = 0; i<s.length; ++i) {\n        if (vowels.indexOf(s.charAt(i)+\"\") % 2\
    \ == 0) {\n            count += 1;\n        }\n    }\n    return count;\n}\n",
  "    let res = 0;\n    for (let i = 0; i <= s.length; i += 1) {\n        if (i %\
    \ 2 === 0) res += s.charCodeAt(i);\n    }\n    return res;\n}\n", "\tlet vowels\
    \ = \"aeiou\";\n\tlet num_upper = 0;\n\tfor (let i = 0; i < s.length; ++i) {\n\
    \t\tif (vowels.indexOf(s[i]) >= 0) {\n\t\t\tif (s[i] === \"U\") {\n\t\t\t\tnum_upper++;\n\
    \t\t\t} else {\n\t\t\t\tnum_upper = 0;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\t\
    return num_upper;\n}\n", "    let rev_string: string = s.split(\"\").reverse().join(\"\
    \");\n    let res: number = rev_string.match(regexp).length;\n    return res;\n\
    }\n", "    const [evens, odds] = s.match(/([aeiou])\\1*/g) as [string, string];\n\
    \    return evens.filter(char => char === 'e').length * 2 - odds.length;\n}\n",
  "  let counter: number = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (i %\
    \ 2 === 0) {\n      if (s[i] === 'a' || s[i] === 'e' || s[i] === 'i' || s[i] ===\
    \ 'o' || s[i] === 'u') {\n        counter++;\n      }\n    }\n  }\n  return counter;\n\
    }\n", "  let uppers = 0\n  for (let i = 0; i < s.length; i += 1) {\n    if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n      uppers += 1\n    }\n  }\n  return uppers\n}\n",
  "  let count = 0, i = s.length - 1;\n  while (i >= 0) {\n    const c = s.charCodeAt(i--);\n\
    \    if (c >= 65 && c <= 90) ++count;\n  }\n  return count;\n}\n", "    const\
    \ a = s.split(\"\");\n    let count = 0;\n    for (let i = 0; i < a.length; i++)\
    \ {\n        if (i % 2 === 0) {\n            const c = a[i].toUpperCase();\n \
    \           if (c.length >= 1) {\n                count += 1;\n            }\n\
    \        }\n    }\n    return count;\n}", "    let cnt = 0;\n    let i = s.length\
    \ - 1;\n    while (i >= 0 && s[i] === \"E\") {\n        i -= 1;\n        cnt +=\
    \ 1;\n    }\n    return cnt;\n}\n", "    let count = 1;\n    for (let i = 0; i\
    \ < s.length; i+=2) {\n        const vowel = s[i];\n        if (vowel !== 'A'\
    \ && vowel !== 'E') {\n            continue;\n        }\n        const nextVowel\
    \ = s[i+1];\n        if (vowel === 'E' && nextVowel === 'A') {\n            count++;\n\
    \        } else if (vowel === 'A' && nextVowel === 'E') {\n            count++;\n\
    \        } else {\n            break;\n        }\n    }\n    return count;\n}",
  "  if (s.toUpperCase() === s) {\n    return 0;\n  }\n  let n = 0;\n  for (let i\
    \ = 0; i < s.length; i++) {\n    if (s.charCodeAt(i) > 64 && s.charCodeAt(i) <\
    \ 91) {\n      n++;\n    }\n  }\n  return n;\n}\n", "    let vowelCount = 0;\n\
    \    for (let i = 0; i < s.length; i += 1) {\n        const char = s.charAt(i);\n\
    \        if (char.match(/[AEIOU]/)) {\n            vowelCount += 1;\n        }\n\
    \    }\n    return vowelCount;\n}\n</code>\n<|/ a dscore=1 |>\n<| a tags=string,java\
    \ dscore=1 |>\nMy solution\n<code>\nimport java.util.Arrays;\nimport java.util.stream.Collectors;\n\
    import java.util.stream.IntStream;\n\npublic class CountVowelsEvenIndex {\n\n\
    \    public static boolean countVowels(String text) {\n        boolean result\
    \ = false;\n        for (int index = 1; index < text.length() - 1; index++) {\n\
    \            if (text.charAt(index).equals('A') && text.charAt(index + 1).equals('E')\
    \ &&\n                    text.charAt(index + 2).equals('I') && text.charAt(index\
    \ + 3).equals('O') &&\n                    text.charAt(index + 4).equals('U'))\
    \ {\n                result = true;\n            }\n        }\n        return\
    \ result;\n    }\n\n    public static void main(String[] args) {\n        String\
    \ text = \"Hello\";\n        System.out.println(countVowels(text));\n    }\n}\n\
    </code>\n<|/ a |>\n<| a dscore=0 tags=string,java |>\nI have tried the following,\
    \ it gives the count of vowels in even indexes.\n<code>\npublic static int vowelCount(String\
    \ s) {\n    int count = 0;\n    for (int i = 0; i < s.length(); i++) {\n     \
    \   if (s.charAt(i) == 'A' && s.charAt(i + 1) == 'E' && s.charAt(i + 2) == 'I'\
    \ && s.charAt(i + 3) == 'O' && s.charAt(i + 4) == 'U') {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n</code>\n<|/ a |>\n<| c |>\nThis doesn't\
    \ give the correct result for count of vowels in odd indexes. `vowelCount(\"AA\"\
    )` returns 2 which is not the correct result.\n<|/ c |>\n<| c |>\nYes. You are\
    \ right. But the above code only counts even indexes. I have just pointed out\
    \ a way to get odd indexes.\n<|/ c |>\n<| a tags=string,java |>\n<code>\npublic\
    \ class EvenIndexVowelCounter {\n\n    public static int countVowels(String s)\
    \ {\n        int vowels = 0;\n        int even = 0;\n        for (int i = 0; i\
    \ < s.length(); i++) {\n            if (s.charAt(i) == 'A') {\n              \
    \  vowels++;\n                even++;\n            }\n        }\n        return\
    \ even;\n    }\n\n    public static void main(String[] args) {\n        System.out.println(countVowels(\"\
    AA\"));\n        System.out.println(countVowels(\"AE\"));\n        System.out.println(countVowels(\"\
    AH\"));\n", "  let count = 0;\n  for (let i = 0; i <= s.length - 1; i = i + 2)\
    \ {\n    if (s[i] == 'a' || s[i] == 'A') {\n      count = count + 1\n    }\n \
    \ }\n  return count\n}\n", "  let uppers = 0;\n  for (let i = 0; i < s.length;\
    \ i += 1) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n      if (s[i + 1] >= 'A'\
    \ && s[i + 1] <= 'Z') {\n        uppers += 1;\n      }\n    }\n  }\n  return uppers;\n\
    }\n", "\tvar vowels = \"aeiouAEIOU\".split('');\n\treturn s.split('')\n\t\t.map((s,\
    \ i) => i in vowels ? s ? 0 : 1 : (s.length % 2 === 1 ? 0 : s[i]))\n\t\t.reduce((a,\
    \ b) => a + b, 0);\n}\n", "  let i = 0;\n  while (i < s.length && s[i] >= 'a'\
    \ && s[i] <= 'z') i++;\n  return i === s.length ? 0 : 1;\n}\n", "\tlet vowels\
    \ = \"aeiouAEIOU\".split('')\n\tlet num = 0\n\tfor (let i = 0; i < s.length; i++)\
    \ {\n\t\tif (vowels.includes(s[i]) && i % 2 === 0) {\n\t\t\tnum++\n\t\t}\n\t}\n\
    \treturn num\n}\n", "\tlet counter = 0;\n\tfor (let i = 0; i < s.length; i++)\
    \ {\n\t\tif (s[i] === \"A\" || s[i] === \"a\") {\n\t\t\tcounter++;\n\t\t} else\
    \ if(s[i] === \"D\" || s[i] === \"d\") {\n\t\t\tcounter++;\n\t\t} else if(s[i]\
    \ === \"B\" || s[i] === \"b\") {\n\t\t\tcounter++;\n\t\t} else if(s[i] === \"\
    C\" || s[i] === \"c\") {\n\t\t\tcounter++;\n\t\t}\n\t}\n\treturn counter;\n}\n",
  "  let c: number = 0;\n  let i: number;\n  for (i = 0; i < s.length; i += 1) {\n\
    \    const ch = s[i];\n    if (ch >= 'A' && ch <= 'Z') {\n      c += 1;\n    }\
    \ else if (ch >= 'a' && ch <= 'z') {\n      c += 2;\n    } else {\n      c +=\
    \ 1;\n    }\n  }\n  return c;\n}\n", "  let count = 0;\n  for (let i = 0; i <\
    \ s.length; i++) {\n    const ch = s[i];\n    const isUpper = isUpperCase(ch);\n\
    \    if (ch === EOF || isUpper) {\n      count++;\n    } else {\n      break;\n\
    \    }\n  }\n  return count;\n}\n", "  s = s.toLowerCase();\n  for (let i = 0;\
    \ i < s.length; i += 1) {\n    const c = s.charAt(i);\n    if (c >= 'A' && c <=\
    \ 'Z') {\n      if (i % 2 === 0) {\n        continue;\n      } else {\n      \
    \  return i;\n      }\n    }\n  }\n  return 0;\n}\n", "    let num_upper = 0;\n\
    \    for (let i = 0, len = s.length; i < len; i++) {\n        if (s[i] >= 'A'\
    \ && s[i] <= 'Z') {\n            num_upper += 1;\n        } else {\n         \
    \   continue;\n        }\n        if (i % 2 === 0) {\n            return num_upper;\n\
    \        }\n    }\n    return num_upper;\n}", "  let count = 0;\n  for (let i\
    \ = 0; i <= s.length - 2; i += 2) {\n    if (s[i + 1] !== 'A') {\n      continue;\n\
    \    }\n    for (let j = i + 2; j <= s.length - 1; j++) {\n      if (s[j] !==\
    \ 'A') {\n        continue;\n      }\n      if (s[i] === s[j]) {\n        count\
    \ += 1;\n      }\n    }\n  }\n  return count;\n}\n", "  let count = 1;\n  for\
    \ (let i = 0; i < s.length; i++) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \    count++;\n    }\n  }\n  return count;\n}\n", "  // Write your code here.\n\
    \  return 0;\n}\n", "  if (s.length === 0) return 0;\n\n  let count = 0;\n  for\
    \ (let i = s.length - 1; i >= 0; i--) {\n    if (s[i] >= \"a\" && s[i] <= \"z\"\
    ) {\n      count += 1;\n    } else {\n      break;\n    }\n  }\n  return count;\n\
    }\n", "  let sum = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] >=\
    \ 'a' && s[i] <= 'z') {\n      sum++;\n    }\n  }\n  return sum;\n}\n", "  let\
    \ upper = 0;\n  for (let i = 2; i < s.length; i += 2) {\n    const char = s.charAt(i);\n\
    \    if (char === char.toUpperCase()) {\n      upper++;\n    }\n  }\n  return\
    \ upper;\n}\n", "  return s.split('')\n      .map(c => c.toUpperCase())\n    \
    \  .filter(c => c.charCodeAt(0) >= 65 && c.charCodeAt(0) <= 90)\n      .length;\n\
    }\n", "    return s.split(/[^aeiou]/).reduce(\n        (acc, val, i) => acc +\
    \ i && i % 2 ? val : 0,\n        0\n    );\n}\n", "  let count = s[0]\n  for (let\
    \ i = 1; i < s.length; i += 1) {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n    \
    \  count += 0\n    } else {\n      count += 1\n    }\n  }\n  return count\n}\n",
  "  let cnt = 0;\n  for (let i = 0; i < s.length; i++) {\n    const letter = s[i];\n\
    \    if (letter === 'A' || letter === 'a') cnt += 1;\n    if (letter === 'E' ||\
    \ letter === 'e') cnt += 1;\n    if (letter === 'I' || letter === 'i') cnt +=\
    \ 1;\n    if (letter === 'O' || letter === 'o') cnt += 1;\n    if (letter ===\
    \ 'U' || letter === 'u') cnt += 1;\n  }\n  return cnt;\n}\n", "    let n = 0,\
    \ i = 0;\n    while (i<s.length && s[i]==s[(i+1)%s.length]) {\n        n += 1;\n\
    \        i += 2;\n    }\n    return n;\n}\n", "    let upper = 0;\n    let i =\
    \ 0;\n    let l = s.length;\n    while (i < l) {\n        if (isVowel(s.charCodeAt(i)))\
    \ {\n            upper++;\n        } else {\n            break;\n        }\n \
    \       i += 2;\n    }\n    return upper;\n}\n", "    let vowel_count = 0;\n \
    \   for (let i = 0, n = s.length; i < n; i++) {\n        const char = s.charAt(i);\n\
    \        if (char.match(/[aeiou]/i)) {\n            if (i % 2 == 0) {\n      \
    \          vowel_count++;\n            }\n        }\n    }\n    return vowel_count;\n\
    }\n", "  return s.length ? s.match(/[A-Z]/g).length : 0;\n}\n", "\tlet count =\
    \ 0;\n\tfor (let i = 0; i < s.length; i++) {\n\t\tif (s.charCodeAt(i) >= 65 &&\
    \ s.charCodeAt(i) <= 90) {\n\t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n",
  "    let i = 0;\n    let sum = 0;\n    for (; i < s.length; i += 1) {\n        const\
    \ char = s[i];\n        if (char === char.toUpperCase() && i % 2 === 0) {\n  \
    \          sum += 1;\n        }\n    }\n    return sum;\n}\n", "  let _s = s;\n\
    \  let count = 0;\n  let i = 0;\n  while (i < _s.length) {\n    if (_s[i] ===\
    \ \"a\") { count++; i++; }\n    else if (_s[i] === \"e\") { count++; i++; }\n\
    \    else if (_s[i] === \"i\") { count++; i++; }\n    else if (_s[i] === \"o\"\
    ) { count++; i++; }\n    else if (_s[i] === \"u\") { count++; i++; }\n    else\
    \ if (_s[i] === \"u\") { count++; i++; }\n    else { break; }\n  }\n  return count;\n\
    }\n", "    var counter = 0, i;\n    for (i = 0; i < s.length; i+=1) {\n      \
    \  // Check if letter is uppercase\n        if (s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z') {\n            counter+=1\n        }\n    }\n    return counter\n}\n",
  "  s = s.replace(/[^A-Z]/g, \"\");\n  let count = 0;\n  for (let i = 0; i < s.length;\
    \ ++i) {\n    if (s[i] === \"A\") {\n      count++;\n    } else if (s[i] === \"\
    a\") {\n      count += 2; // double the count\n    } else {\n      count++;\n\
    \    }\n  }\n  return count;\n}\n", "  let uppers = 0;\n  for (let i = 0; i <\
    \ s.length; ++i) {\n    if (s[i] === 'A' || s[i] === 'a') {\n      ++uppers;\n\
    \    } else if (s[i] === 'B' || s[i] === 'b') {\n      ++uppers;\n    } else if\
    \ (s[i] === 'C' || s[i] === 'c') {\n      ++uppers;\n    } else if (s[i] === 'D'\
    \ || s[i] === 'd') {\n      ++uppers;\n    } else if (s[i] === 'E' || s[i] ===\
    \ 'e') {\n      ++uppers;\n    } else if (s[i] === 'F' || s[i] === 'f') {\n  \
    \    ++uppers;\n    } else if (s[i] === 'G' || s[i] === 'g') {\n      ++uppers;\n\
    \    } else if (s[i] === 'H' || s[i] === 'h') {\n      ++uppers;\n    } else if\
    \ (s[i] === 'I' || s[i] === 'i') {\n      ++uppers;\n    } else if (s[i] === 'J'\
    \ || s[i] === 'j') {\n      ++uppers;\n    } else if (s[i] === 'K' || s[i] ===\
    \ 'k') {\n      ++uppers;\n    } else if (s[i] === 'L' || s[i] === 'l') {\n  \
    \    ++uppers;\n    } else if (s[i] === 'M' || s[i] === 'm') {\n      ++uppers;\n\
    \    } else if (s[i] === 'N' || s[i] === 'n') {\n      ++uppers;\n    } else if\
    \ (s[i] === 'O' || s[i] === 'o') {\n      ++uppers;\n    } else if (s[i] === 'P'\
    \ || s[i] === 'p') {\n      ++uppers;\n    } else if (s[i] === 'Q' || s[i] ===\
    \ 'q') {\n      ++uppers;\n    } else if (s[i] === 'R' || s[i] === 'r') {\n  \
    \    ++uppers;\n    } else if (s[i] === 'S' || s[i] === 's') {\n      ++uppers;\n\
    \    } else if (s[i] === 'T' || s[i] === 't') {\n      ++uppers;\n    } else if\
    \ (s[i] === 'U' || s[i] === 'u') {\n      ++uppers;\n    } else if (s[i] === 'V'\
    \ || s[i] === 'v') {\n      ++uppers;\n    } else if (s[i] === 'W' || s[i] ===\
    \ 'w') {\n      ++uppers;\n    } else if (s[i] === 'X' || s[i] === 'x') {\n  \
    \    ++uppers;\n    } else if (s[i] === 'Y' || s[i] === 'y') {\n      ++uppers;\n\
    \    } else if (s[i] === 'Z' || s[i] === 'z') {\n      ++uppers;\n    }\n  }\n\
    \  return uppers;\n}\n", "  let n = 0;\n  for (let i = 0; i < s.length; ++i) {\n\
    \    if (s[i] === \"B\") ++n;\n    if (s[i] === \"D\") ++n;\n    if (s[i] ===\
    \ \"E\") ++n;\n  }\n  return n;\n}\n", "  const vowels = \"AEIOU\"\n  let count\
    \ = 0\n  for (var i = 0; i < s.length; i += 1) {\n    const vowel = vowels.indexOf(s.charAt(i))\n\
    \    if (vowel !== -1) {\n      count += vowel\n    } else {\n      count += Math.ceil(i\
    \ / 2)\n    }\n  }\n  return count\n}\n", "  var i = 0;\n  while (i < s.length)\
    \ {\n    var ch = s[i];\n    if (ch >= \"A\" && ch <= \"Z\") {\n      i++;\n \
    \   } else if ((ch >= \"a\" && ch <= \"z\") || (ch >= \"A\" && ch <= \"Z\")) {\n\
    \      i += 2;\n    } else {\n      i++;\n    }\n  }\n  return i;\n}\n", "  let\
    \ n = s.length\n  let upperCount = 0\n  for (let i = 0; i < n; i++) {\n    if\
    \ (s[i] >= 'A' && s[i] <= 'Z') {\n      if (s[i] == 'A') {\n        upperCount\
    \ += 1\n      }\n      if (s[i] == 'Z') {\n        upperCount += 1\n      }\n\
    \    }\n  }\n  return upperCount\n}\n", "  let count = 0;\n  for (let i = 0; i\
    \ < s.length; ++i) {\n    const c = s.charAt(i);\n    if (c.toUpperCase() ===\
    \ c) {\n      ++count;\n    }\n  }\n  return count;\n}\n", "    let r = 0\n  \
    \  for (let i = 0; i < s.length; i += 2) {\n        const c = s.charAt(i)\n  \
    \      if (c === c.toUpperCase()) {\n            r++\n        }\n    }\n    return\
    \ r\n}\n", "    return s.length\n        ? ((s.match(/[A-Z]/) || []).length +\
    \ 1) / s.length\n        : 0;\n}\n", "  let count = 0;\n  for (let i = 0; i <\
    \ s.length; i += 1) {\n    if (i & 1) {\n      if (s[i] >= 'A' && s[i] <= 'Z')\
    \ {\n        count += 1;\n      }\n    }\n  }\n  return count;\n}\n", "  const\
    \ map = Object.create(null);\n  for (let i = 0; i < s.length; i++) {\n    map[s[i]]\
    \ = (map[s[i]] || 0) + 1;\n  }\n\n  for (let i = 0; i <= 26; i++) {\n    if (map[String.fromCharCode(i).toLowerCase()]\
    \ % 2 === 0) {\n      return map.hasOwnProperty(i);\n    }\n  }\n  return false;\n\
    }\n", "  var vowels = /[aeiou]/\n  var count = 0\n  for (var i = s.length - 1;\
    \ i >= 0; i--) {\n    if (vowels.test(s.charAt(i))) {\n      count += 1\n    }\n\
    \  }\n  return count\n}\n", "  const n = (s[s.length - 1] === 'B') ? s.length\
    \ - 2 : s.length\n  for (let i = 0; i < n; i++) {\n    if (s[i] === 'e') return\
    \ i\n  }\n  return 0\n}\n", "\tlet c = 0;\n\tfor (let i = 0; i < s.length; i++)\
    \ {\n\t\tconst c = s.charCodeAt(i);\n\t\tif (c >= 65 && c <= 90) {\n\t\t\tc++;\n\
    \t\t}\n\t}\n\treturn c;\n}\n", "  let n = 0;\n  let i = 0;\n  while (i < s.length\
    \ && s[i] === '_') {\n    i++;\n  }\n  while (i < s.length) {\n    const c = s[i];\n\
    \    if (c >= 'A' && c <= 'Z') {\n      n += 1;\n    }\n    i += 1;\n  }\n  return\
    \ n;\n}\n", "  if (s.length < 1) return 0;\n  const vowels = ['a', 'e', 'i', 'o',\
    \ 'u'];\n  let count = 0;\n  for (let i = 1; i < s.length; ++i) {\n    if (vowels.indexOf(s[i])\
    \ >= 0) {\n      count += 1;\n    }\n  }\n  return count;\n}\n", "    return s.match(/[A-Z]/g).length;\n\
    }\n</code>\n<|/ a tags=algorithm,string,javascript dscore=0 |>\n<| c |>\n`count`\
    \ variable is unused. Also this doesn't work. Try `count_upper(\"abbcdefg\")`\n\
    <|/ c |>\n<| c |>\nYes, you are right about that. My intention was to show the\
    \ principle of a recursive function, rather than to provide a full working code\
    \ snippet. Thanks for pointing this out.\n<|/ c |>\n<| a tags=algorithm,string,javascript\
    \ |>\n<code>", "    const chars = \"ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n    let count:\
    \ number;\n    for (const char of s) {\n        if (chars.indexOf(char) > 0 &&\
    \ chars.indexOf(char) % 2 === 0) {\n            count++;\n        }\n    }\n \
    \   return count;\n}\n", "  let result = 0;\n  for (let i = 0; i < s.length; ++i)\
    \ {\n    if (s[i] >= 'A' && s[i] <= 'Z') {\n      ++result;\n    }\n  }\n  return\
    \ result;\n}\n", "  let n = 0;\n  for (let i = 0; i < s.length; i++) {\n    if\
    \ (s.charAt(i) == ' ') {\n      continue;\n    }\n    const ch = s.charAt(i);\n\
    \    if (ch >= 'A' && ch <= 'Z') {\n      n++;\n    } else if (ch >= 'a' && ch\
    \ <= 'z') {\n      n += 2; // 'A' is considered uppercase because it is >= 'a'.\n\
    \    } else {\n      n++;\n    }\n  }\n  return n;\n}\n", "  let res = 0;\n  for\
    \ (let i = 0; i < s.length; i += 1) {\n    if (i % 2 === 0) {\n      if (s.charAt(i)\
    \ >= 'A' && s.charAt(i) <= 'Z') {\n        res += 1;\n      }\n    }\n  }\n  return\
    \ res;\n}\n", "    let r = 0\n    let len = s.length\n    for (let i = 0; i <\
    \ len; i++) {\n        if (s[i] === 'A' || s[i] === 'a') {\n            r++\n\
    \        }\n        else if (s[i] === 'B' || s[i] === 'b' || s[i] === 'B') {\n\
    \            r++\n        }\n        else if (s[i] === 'C' || s[i] === 'c' ||\
    \ s[i] === 'C') {\n            r++\n        }\n        else if (s[i] === 'D' ||\
    \ s[i] === 'd' || s[i] === 'D') {\n            r++\n        }\n        else if\
    \ (s[i] === 'E' || s[i] === 'e' || s[i] === 'E') {\n            r++\n        }\n\
    \        else if (s[i] === 'F' || s[i] === 'f' || s[i] === 'F') {\n          \
    \  r++\n        }\n        else if (s[i] === 'G' || s[i] === 'g' || s[i] === 'G')\
    \ {\n            r++\n        }\n        else if (s[i] === 'H' || s[i] === 'h'\
    \ || s[i] === 'H') {\n            r++\n        }\n        else if (s[i] === 'I'\
    \ || s[i] === 'i' || s[i] === 'I') {\n            r++\n        }\n        else\
    \ if (s[i] === 'J' || s[i] === 'j' || s[i] === 'J') {\n            r++\n     \
    \   }\n        else if (s[i] === 'K' || s[i] === 'k' || s[i] === 'K') {\n    \
    \        r++\n        }\n        else if (s[i] === 'L' || s[i] === 'l' || s[i]\
    \ === 'L') {\n            r++\n        }\n        else if (s[i] === 'M' || s[i]\
    \ === 'm' || s[i] === 'M') {\n            r++\n        }\n        else if (s[i]\
    \ === 'N' || s[i] === 'n' || s[i] === 'N') {\n            r++\n        }\n   \
    \     else if (s[i] === 'O' || s[i] === 'o' || s[i] === 'O') {\n            r++\n\
    \        }\n        else if (s[i] === 'P' || s[i] === 'p' || s[i] === 'P') {\n\
    \            r++\n        }\n        else if (s[i] === 'Q' || s[i] === 'q' ||\
    \ s[i] === 'Q') {\n            r++\n        }\n        else if (s[i] === 'R' ||\
    \ s[i] === 'r' || s[i] === 'R') {\n            r++\n        }\n        else if\
    \ (s[i] === 'S' || s[i] === 's' || s[i] === 'S') {\n            r++\n        }\n\
    \        else if (s[i] === 'T' || s[i] === 't' || s[i] === 'T') {\n          \
    \  r++\n        }\n        else if (s[i] === 'U' || s[i] === 'u' || s[i] === 'U')\
    \ {\n            r++\n        }\n        else if (s[i] === 'V' || s[i] === 'v'\
    \ || s[i] === 'V') {\n            r++\n        }\n        else if (s[i] === 'W'\
    \ || s[i] === 'w' || s[i] === 'W') {\n            r++\n        }\n        else\
    \ if (s[i] === 'X' || s[i] === 'x' || s[i] === 'X') {\n            r++\n     \
    \   }\n        else if (s[i] === 'Y' || s[i] === 'y' || s[i] === 'Y') {\n    \
    \        r++\n        }\n        else if (s[i] === 'Z' || s[i] === 'z' || s[i]\
    \ === 'Z') {\n            r++\n        }\n    }\n    return r\n}\n", "  let count:\
    \ 0\n\n  for (let i = 0; i < s.length; i += 2) {\n    if (s.charAt(i) === 'a'\
    \ || s.charAt(i) === 'e' || s.charAt(i) === 'i' || s.charAt(i) === 'o' || s.charAt(i)\
    \ === 'u') {\n      count += 1\n    }\n  }\n\n  return count\n}\n", "  let count\
    \ = 0;\n  for (let i = 0; i < s.length; i += 1) {\n    if (s.charCodeAt(i) >=\
    \ 65 && s.charCodeAt(i) <= 90) {\n      count += 1;\n    }\n  }\n  return count;\n\
    }\n", "    const re = /(^|[^aeiou])A(?!u)/g;\n    const matches = new Array<string>();\n\
    \    for (let match; match = re.exec(s);) {\n        matches.push(match[0]);\n\
    \    }\n\n    return matches.reduce(\n        (total: number, match: string):\
    \ number => {\n            const ch = match[0];\n            return (total + (ch.match(/[Ei]/g)\
    \ || []).length);\n        },\n        0\n    );\n}\n", "  let n = s.length\n\
    \  let upper = s.toUpperCase()\n  let count = 0\n  for (let i = 0; i < n; i++)\
    \ {\n    if (upper.charAt(i) != 'A') {\n      continue\n    }\n    if (i % 2 ==\
    \ 0) {\n      count += upper.charCodeAt(i) - 65\n    } else {\n      count +=\
    \ 65\n    }\n  }\n  return count\n}\n", "    let vowels = \"aeiouAEIOU\";\n  \
    \  let count = 0;\n    for (let i = 0; i < s.length; i++) {\n        let index\
    \ = vowels.indexOf(s[i]);\n        if (index % 2 === 0) {\n            count++;\n\
    \        }\n    }\n    return count;\n}\n", "  let count = 0;\n  for (var i =\
    \ 0; i < s.length; i++) {\n    const c = s.charAt(i);\n    if (c.toUpperCase()\
    \ === c) count++;\n  }\n  return count;\n}\n", "    let count = 0; \n    for (let\
    \ i = 0; i < s.length; i++ ) {\n        if (s[i] >= 'A' && s[i] <= 'Z') {\n  \
    \          count += 1;\n        }\n    }\n    return count;\n}\n", "  let vowels\
    \ = \"AEIOUaeiou\"\n  let count = s.length\n\n  for (let i = 0; i < count; i++)\
    \ {\n    if (vowels.indexOf(s.charAt(i)) === -1) {\n      count--\n    }\n  }\n\
    \n  return count\n}\n", "    let ret = 0;\n    for (let i = 0; i < s.length; i\
    \ += 1) {\n        if (s[i] === \"A\" || s[i] === \"E\") {\n            ret =\
    \ Math.max(ret, 1);\n        }\n    }\n    return ret;\n}\n", "  let count = 0\n\
    \  for (let i = 0; i < s.length; i += 1) {\n    if (s.charAt(i) === \"A\" || s.charAt(i)\
    \ === \"E\") {\n      count += 1\n    }\n  }\n  return count\n}\n", "    let count\
    \ = 1;\n    for (let i = 0; i < s.length; i += 2) {\n        if (s.charAt(i) ===\
    \ 'U') {\n            count++;\n        }\n    }\n    return count;\n}\n", " \
    \ let i = 0;\n  const len = s.length;\n  while (i < len) {\n    const ch = s[i];\n\
    \    if (ch >= 'a' && ch <= 'z') {\n      i += 1;\n    } else if (ch >= 'A' &&\
    \ ch <= 'Z') {\n      i += 1;\n    } else {\n      i += 1;\n    }\n  }\n  return\
    \ i;\n}\n", "  const vowels = \"AEIOU\".split(\"\");\n  let count = 0;\n  for\
    \ (var i = 0; i < s.length; i++) {\n    if (vowels.indexOf(s.charAt(i)) == -1)\
    \ return 0;\n    if (i % 2 === 0) count += 1;\n  }\n  return count;\n}\n", " \
    \ let upperCount = 0;\n  for (let i = 0; i < s.length; i++) {\n    if (s[i] >=\
    \ \"A\" && s[i] <= \"Z\") {\n      upperCount++;\n    }\n  }\n  return upperCount;\n\
    }\n", "  let i = 0;\n  while (i < s.length && s.charAt(i) >= 'A' && s.charAt(i)\
    \ <= 'Z') {\n    i += 1;\n  }\n  return i;\n}\n", "  let n = 0\n  for (let i =\
    \ 0; i < s.length; i++) {\n    const c = s[i]\n    const isUpper = c >= 'A' &&\
    \ c <= 'Z'\n    if (isUpper) {\n      n += 1\n    }\n  }\n  return n\n}\n", " \
    \ let num_upper = 0;\n  for (let i = 1; i < s.length; i += 2) {\n    if (s.charAt(i)\
    \ >= 'A' && s.charAt(i) <= 'Z') {\n      num_upper++;\n    }\n  }\n  return num_upper;\n\
    }\n", "  const len = s.length\n  let count = 0\n\n  for (let i = 2; i < len; i++)\
    \ {\n    if (s.charAt(i) === 'A' && s.charAt(i - 1) === 'A') {\n      count++\n\
    \    }\n  }\n\n  return count\n}\n", "  let n = s.length\n  let count = 0\n  for\
    \ (let i = 0; i < n; ++i) {\n    const c = s.charCodeAt(i)\n    if (c >= 65 &&\
    \ c <= 90) {\n      // Uppercase letters\n      ++count\n    } else if (c >= 97\
    \ && c <= 122) {\n      // Lowercase letters\n      ++count\n    } else {\n  \
    \    count = 0\n    }\n  }\n  return count\n}\n", "    let n = s.length\n    let\
    \ upperCase = 0\n    let count = 0\n    for (let i = 0; i < n; i++) {\n      \
    \  if (s[i] >= 'A' && s[i] <= 'Z') {\n            upperCase++\n            if\
    \ (i & 1) {\n                count++\n            }\n        } else {\n      \
    \      count++\n        }\n    }\n    return count ? upperCase : 0\n}\n", "  \
    \  let count = 0;\n    for (let i = 0; i < s.length; i += 2) {\n        if (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n            count += 1;\n        }\n    }\n    return\
    \ count;\n}\n", "    let count = 0;\n    for (let i = 0; i < s.length; i += 1)\
    \ {\n        if (s[i].toLowerCase() === 'a') {\n            count += 1;\n    \
    \    } else if (s[i].toLowerCase() === 'e') {\n            count += 1;\n     \
    \   } else if (s[i].toLowerCase() === 'i') {\n            count += 1;\n      \
    \  } else if (s[i].toLowerCase() === 'u') {\n            count += 1;\n       \
    \ }\n    }\n    return count;\n}\n", "\tvar upper = 0\n\tfor (var i = 0; i <=\
    \ s.length; i += 1) {\n\t\tconst char = s[i]\n\t\tif (char >= 'a' && char <= 'z')\
    \ {\n\t\t\tupper = upper + 1\n\t\t}\n\t\tif (i === 0) {\n\t\t\tupper = upper +\
    \ 1\n\t\t}\n\t}\n\treturn upper\n}\n", "    let uppercase_count = 0\n    for (let\
    \ i = 0; i < s.length; i += 1) {\n        if (s[i] >= 'A' && s[i] <= 'Z') {\n\
    \            uppercase_count += 1\n        }\n    }\n    return uppercase_count\n\
    }\n", "  let uppers = 0;\n  for (let i = s.length - 1; i >= 0; --i) {\n    const\
    \ ch = s[i];\n    if (ch === 'A' || ch === 'a') {\n      uppers += 2;\n    } else\
    \ if (ch === 'B' || ch === 'b') {\n      uppers++;\n    }\n  }\n  return uppers;\n\
    }\n", "    const vowels = \"AEIOUaeiou\";\n    let i = 0;\n    while (i < s.length)\
    \ {\n        const letter = s[i];\n        if (vowels.indexOf(letter) >= 0)\n\
    \            i += letter.length;\n        else\n            i += 1;\n    }\n \
    \   return i;\n}\n", "  let i = 0;\n  while (i < s.length && s[i] >= 'A' && s[i]\
    \ <= 'Z') {\n    i += 1;\n  }\n  return i;\n}\n", "  let count = 0;\n  for (let\
    \ i = 0; i < s.length; i++) {\n    if (s[i] === s[i] && s[i] === \"a\") { count\
    \ += 1; }\n    else if (s[i] === \"E\" || s[i] === \"e\") { count += 1; }\n  \
    \  else if (s[i] === \"I\" || s[i] === \"i\") { count += 1; }\n    else if (s[i]\
    \ === \"O\" || s[i] === \"o\") { count += 1; }\n    else if (s[i] === \"U\" ||\
    \ s[i] === \"u\") { count += 1; }\n  }\n  return count;\n}\n", "\tlet chars =\
    \ [...s];\n\tlet count = 1;\n\tfor (let i = 0; i < chars.length; i++) {\n\t\t\
    if (chars[i] >= \"a\" && chars[i] <= \"z\") {\n\t\t\tchars[i] -= \"a\".charCodeAt(0);\n\
    \t\t\tcount++;\n\t\t}\n\t}\n\treturn count;\n}\n", "  let count = 0;\n  for (let\
    \ i = 0; i < s.length; i += 2) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i)\
    \ <= 90) {\n      count++;\n    }\n  }\n  return count;\n}\n", "    let r = 0;\n\
    \    for (let i = 0; i < s.length; i += 2) {\n        if (s[i] === 'U') {\n  \
    \          r++;\n        }\n    }\n    return r;\n}\n", "  let upper = 0;\n  for\
    \ (let i = 0; i < s.length; ++i) {\n    const c = s[i];\n    if (c >= 'A' && c\
    \ <= 'Z') {\n      if (c >= 'a' && c <= 'z') {\n        ++upper;\n      }\n  \
    \  }\n  }\n  return upper;\n}\n", "  let count = 0;\n  for (let i = 0; i < s.length;\
    \ i++) {\n    if (s[i] == 'a' || s[i] == 'A') {\n      count++;\n    }\n  }\n\
    \  return count;\n}\n", "    let count = 0;\n    for (let i = 0; i < s.length;\
    \ ++i) {\n        if (i % 2 == 0) {\n            if (s.charCodeAt(i) > 64 && s.charCodeAt(i)\
    \ < 91) count++;\n        } else {\n            if (s.charCodeAt(i) > 96 && s.charCodeAt(i)\
    \ < 123) count++;\n        }\n    }\n    return count;\n}\n", "  const counts:\
    \ number[] = [];\n  let i = 0;\n  while (s[i] !== \"\") {\n    counts[s[i] ===\
    \ `a` ? 0 : 1] += 1;\n    i += 1;\n  }\n  return counts[0];\n}\n", "  let count\
    \ = 0;\n  for (let i = 0; i < s.length; i++) {\n    count += /[AEIOU]/.test(s[i])\
    \ ? 1 : 0;\n  }\n  return count;\n}\n", "    return s.split('').map(char=>char.toUpperCase()).reduce((a,b)=>a+b)\n\
    }\n", "  let n = s.length;\n  let vowels = \"aeiouAEIOU\".split(\"\");\n  for\
    \ (let i = 0; i < n; ++i) {\n    let ch = s[i];\n    if (vowels.includes(ch))\
    \ {\n      if (i % 2 == 0 && ch.toLowerCase() === ch) {\n        return 1;\n \
    \     }\n      return 0;\n    }\n  }\n  return 1;\n}\n", "  let n = 0;\n  for\
    \ (let i = 0; i <= s.length; i += 1) {\n    if (s.charCodeAt(i) >= 65 && s.charCodeAt(i)\
    \ <= 90) {\n      n += 1;\n    }\n  }\n  return n;\n}", "    const vowels = \"\
    aeiou\";\n    let count = 0;\n    for (let i = 0; i < s.length; i += 1) {\n  \
    \      const c = s[i];\n        if (vowels.indexOf(c) !== -1) {\n            count\
    \ += 1;\n            if (c === c.toUpperCase()) {\n                return count;\n\
    \            }\n        }\n    }\n    return count;\n}\n", "    var ret = 0;\n\
    \    for (var i = 0; i < s.length; ) {\n        var c = s.charCodeAt(i);\n   \
    \     if (c >= 65 && c <= 90) {\n            ret += 1;\n        } else {\n   \
    \         i += 1;\n        }\n    }\n    return ret;\n}\n", "    let i = 0;\n\
    \    const ret = 0;\n    while ((i < s.length) && (s.charAt(i) >= 'A')) {\n  \
    \      if (s.charAt(i) >= 'a')\n            ret++;\n        i++;\n    }\n    return\
    \ ret;\n}\n", "\tlet n = s.length\n\tfor (let i = s.length - 1; i > 0; i -= 2)\
    \ {\n\t\tif (s[i] >= 'A' && s[i] <= 'Z') {\n\t\t\tn -= 1\n\t\t}\n\t}\n\treturn\
    \ n\n}\n", "  s = s.replace(/[aeiou]/ig, \"\"); //remove all vowels.\n  const\
    \ upper = s.split(\"\").map((x: string) => x.charCodeAt(0) >= 65 && x.charCodeAt(0)\
    \ <= 90 ? 1 : 0).reduce((a, b) => a + b, 0);\n  return upper;\n}\n", "  const\
    \ len = s.length\n  let count = 0\n  for (let i = 0; i < len; i++) {\n    if (s[i]\
    \ === 'A' || s[i] === 'a') {\n      count ++\n    }\n  }\n  return count\n}\n",
  "    let i = 0;\n    let count = 0;\n    for (const c of s) {\n        if (c ===\
    \ 'A' || c === 'a') i++;\n        else if (c === 'B' || c === 'b') i++;\n    \
    \    else if (c === 'C' || c === 'c') i++;\n        else if (c === 'D' || c ===\
    \ 'd') i++;\n        else if (c === 'E' || c === 'e') i++;\n        else if (c\
    \ === 'F' || c === 'f') i++;\n        else if (c === 'G' || c === 'g') i++;\n\
    \        else count++;\n    }\n    return count;\n}\n", "    let n = 0;\n    let\
    \ i;\n    for (i = 0; i <= s.length - 1; i += 2) {\n        if (s[i].toUpperCase()\
    \ === s[i]) {\n            n++;\n        }\n    }\n    return n;\n}\n", "  let\
    \ count_upper = 0;\n  let i = 0;\n  while (i < s.length) {\n    const c = s[i];\n\
    \    if (c >= 'a' && c <= 'z') {\n      if (c >= 'A' && c <= 'Z') {\n        count_upper++;\n\
    \      } else {\n        // Found a lowercase letter. Skip over it.\n        i++;\n\
    \      }\n    } else {\n      // Found a vowel, skip over it.\n      i++;\n  \
    \  }\n  }\n  return count_upper;\n}\n", "  return count_chars(s, s => {\n    return\
    \ is_upper(s.charAt(0));\n  });\n}\n", "  let i = 0;\n  const len = s.length -\
    \ 1;\n  while (i < len) {\n    const char = s.charAt(i);\n    if (char === char.toUpperCase()\
    \ && ++i % 2 === 0) {\n      continue;\n    }\n    return -1;\n  }\n  return s.length;\n\
    }\n", "  if (s.length <= 1) return 0;\n  const i = 0;\n  let count = 0;\n  while\
    \ (i < s.length) {\n    const c = s.charAt(i);\n    if (isUpper(c)) count++;\n\
    \    i++;\n  }\n  return count;\n}\n", "  let n = s.length;\n  if (n === 0) {\n\
    \    return 0;\n  }\n  let upper = 0;\n  for (let i = 0; i < n; i++) {\n    let\
    \ c = s.charCodeAt(i);\n    if (c === 32 || c === 9) {\n      upper++;\n    }\n\
    \  }\n  return upper;\n}\n", "  let upper = 0\n  for (let i = 0; i < s.length;\
    \ i += 1) {\n    const chr = s.charAt(i)\n    if (chr !== \"Z\") {\n      upper++\n\
    \    }\n  }\n  return upper\n}\n", "  let i = 0;\n  let count = 0;\n  while (i\
    \ < s.length && is_upper(s[i]))\n    i += 2;\n  while (i < s.length && is_upper(s[i]))\n\
    \    i += 2;\n  while (i < s.length && !is_upper(s[i]))\n    i += 1;\n  while\
    \ (i < s.length && !is_upper(s[i]))\n    i += 1;\n  return count;\n}\n", "  let\
    \ c: number = count_upper(s[0]);\n  for (let i = 1; i < s.length; i += 1) {\n\
    \    const curr = count_upper(s[i]);\n    if (curr !== 0) {\n      c += curr;\n\
    \    } else {\n      c += 1;\n    }\n  }\n  return c;\n}\n", "\tconst vowels =\
    \ ['A', 'E', 'I', 'O', 'U'];\n\tlet upper = 0;\n\tfor (let i = 0; i < s.length;\
    \ i += 1) {\n\t\tconst letter = s[i];\n\t\tconst index = vowels.indexOf(letter);\n\
    \t\tif (index % 2 === 0) {\n\t\t\tupper += 1;\n\t\t}\n\t}\n\treturn upper;\n}\n",
  "\tlet n = s.length\n\tlet upper = 0\n\tfor (let i = 0; i < n; i++) {\n\t\tif (s[i]\
    \ >= 'A' && s[i] <= 'Z') {\n\t\t\tupper++\n\t\t}\n\t}\n\treturn upper\n}\n", " \
    \   return s.split('').map(c => c.toUpperCase()).reduce((a, b) => a + b.charCodeAt(0)\
    \ % 26, 0);\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

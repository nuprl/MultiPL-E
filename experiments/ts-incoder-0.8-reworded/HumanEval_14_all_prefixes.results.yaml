language: ts
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let prefixes: string[] = [];\n    let current: string[]\
    \ = string.split('');\n    while(current.length){\n        let prefix = current.join('');\n\
    \        current = [];\n        for(let i = 0; i < prefixes.length; i++) {\n \
    \           let prefix_prefix = prefixes[i];\n            if(prefix === prefix_prefix)\
    \ break;\n            if(prefix.length > prefix_prefix.length) {\n           \
    \     prefixes = [prefix];\n                break;\n            } else if(prefix.length\
    \ < prefix_prefix.length) {\n                prefixes = [prefix_prefix];\n   \
    \             break;\n            }\n        }\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpr1k5hijm.js:30:12)\n    at Object.<anonymous> (/tmp/tmpr1k5hijm.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let start = string[0];\n\
    \  for (let i = 1; i < string.length; i++) {\n    let char = string[i];\n    let\
    \ prefix = `${start}${char}`;\n    prefixes.push(prefix);\n    start = char;\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'sd',\n  'df',\n  'fg',\n  'gh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_mc19whp.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_mc19whp.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'sd',\
    \ 'df', 'fg', 'gh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    string.split('').forEach((char,\
    \ i) => {\n        if (prefixes.length) {\n            prefixes[prefixes.length\
    \ - 1] += char;\n        } else {\n            prefixes.push(char);\n        }\n\
    \    });\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmp1gcn86p6.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp1gcn86p6.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length < 2)\n        return [];\n\n    var\
    \ firstChar = string[0];\n    var lastChar = string[string.length - 1];\n    var\
    \ result: string[] = [];\n\n    for (var i = 1, length = string.length; i < length;\
    \ i++) {\n        var char = string[i];\n        if (char === firstChar || char\
    \ === lastChar) {\n            result.push(char);\n        } else {\n        \
    \    result.push(firstChar + char);\n        }\n    }\n\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'ad',\n  'af',\n  'ag',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpw97j3gko.js:25:12)\n\
    \    at Object.<anonymous> (/tmp/tmpw97j3gko.js:28:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'ad',\
    \ 'af', 'ag', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefix_array: string[] = [];\n    let prefix_length\
    \ = 0;\n\n    for (let i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === \" \") {\n            prefix_array[prefix_length] = string.substr(0, i);\n\
    \            prefix_length++;\n        }\n    }\n\n    return prefix_array;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp4tmytu09.js:19:12)\n    at Object.<anonymous> (/tmp/tmp4tmytu09.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string\n        .split('')\n        .reduce(function\
    \ (acc, value, index) {\n            if (index === 0) {\n                return\
    \ [value];\n            } else {\n                return [...acc, value];\n  \
    \          }\n        }, []);\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb7xwvqxz.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpb7xwvqxz.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let result: string[] = [];\n    let i = 0;\n\n    while\
    \ (string[i]) {\n        result.unshift(string[i]);\n        i++;\n    }\n\n \
    \   return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'g',\n\
    \  'f',\n  'd',\n  's',\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpl2jn6yvp.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl2jn6yvp.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g',\
    \ 'f', 'd', 's', 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let result = [];\n\n    for (let i = 0, length = string.length;\
    \ i < length; i++) {\n        const prefix = string.slice(0, i);\n        result.push(prefix);\n\
    \    }\n\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp3cko80ty.js:16:12)\n    at Object.<anonymous> (/tmp/tmp3cko80ty.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  strings = string.split('');\n  var prefixes = [];\n \
    \ for (var index = 0; index < strings.length; index++) {\n    if (index === strings.length\
    \ - 1) {\n      prefixes.push(strings[index]);\n    } else {\n      prefixes.push(strings[index]\
    \ + strings[index + 1]);\n    }\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpg0y1bqj4.ts(5,3): error TS2552: Cannot find name ''strings''.
    Did you mean ''string''?

    ../../../../tmp/tmpg0y1bqj4.ts(7,31): error TS2552: Cannot find name ''strings''.
    Did you mean ''string''?

    ../../../../tmp/tmpg0y1bqj4.ts(8,19): error TS2552: Cannot find name ''strings''.
    Did you mean ''string''?

    ../../../../tmp/tmpg0y1bqj4.ts(9,21): error TS2552: Cannot find name ''strings''.
    Did you mean ''string''?

    ../../../../tmp/tmpg0y1bqj4.ts(11,21): error TS2552: Cannot find name ''strings''.
    Did you mean ''string''?

    ../../../../tmp/tmpg0y1bqj4.ts(11,38): error TS2552: Cannot find name ''strings''.
    Did you mean ''string''?

    '
  timestamp: 1660334315
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  \n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptleo_zv1.ts(4,40): error TS2355: A function whose declared
    type is neither ''void'' nor ''any'' must return a value.

    '
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp3fo5ubcl.js:15:12)\n    at Object.<anonymous> (/tmp/tmp3fo5ubcl.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334114
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length <= 1) {\n    return [];\n  }\n\n  const\
    \ characters = Array.from(string);\n  const prefixes = Array.from(characters);\n\
    \n  const longestPrefix = prefixes.sort((a, b) => a.length - b.length).pop();\n\
    \  const remainingCharacters = characters.filter((c) => c !== longestPrefix);\n\
    \n  return [...prefixes, ...remainingCharacters];\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'a',\n  's',\n  'd',\n  'f',\n  'g'\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpeq11eafl.js:18:12)\n    at Object.<anonymous> (/tmp/tmpeq11eafl.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'a',\
    \ 's', 'd', 'f',\n    'g', 'a', 's', 'd',\n    'f', 'g'\n  ],\n  expected: [ 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js\
    \ v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return string.length\n    ? all_prefixes(string.slice(0,\
    \ string.length - 1)).concat(string)\n    : string.split(\"\").reverse();\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334315
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n\n  for (let i = 0; i <\
    \ string.length; i++) {\n    prefixes.push(string.slice(0, i));\n  }\n\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp8vcapn_d.js:15:12)\n    at Object.<anonymous> (/tmp/tmp8vcapn_d.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let prefixes: string[] = [];\n    for (let i = 0; i\
    \ <= string.length; i++) {\n        prefixes.push(string.substring(0, i));\n \
    \   }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp49r8821l.js:14:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp49r8821l.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let result = [];\n\n  for (let i = 0, len = string.length;\
    \ i < len; i++) {\n    let prefix = string.substring(0, i);\n    if (prefixes[prefix])\
    \ {\n      result = [...getUniqueArray(prefixes[prefix]), prefix];\n    } else\
    \ {\n      result.push(prefix);\n    }\n  }\n\n  return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpdcw9ih4f.ts(9,9): error TS2552: Cannot find name ''prefixes''.
    Did you mean ''prefix''?

    ../../../../tmp/tmpdcw9ih4f.ts(10,20): error TS2304: Cannot find name ''getUniqueArray''.

    ../../../../tmp/tmpdcw9ih4f.ts(10,35): error TS2552: Cannot find name ''prefixes''.
    Did you mean ''prefix''?

    '
  timestamp: 1660334315
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tlet prefixes = new Array<string>();\n\n\tfor (let i =\
    \ 0; i < string.length; i++) {\n\t\tlet prefix = string.substring(0, i);\n\t\t\
    for (let j = 0; j < prefixes.length; j++) {\n\t\t\tif (prefixes[j] === prefix)\
    \ {\n\t\t\t\tprefixes[j] = prefix + prefixes[j];\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\
    }\n\n\t\tprefixes.push(prefix);\n\t}\n\n\treturn prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpmlu3c9vc.js:22:12)\n    at Object.<anonymous> (/tmp/tmpmlu3c9vc.js:25:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    for (let j = 0; j < string.length; j++) {\n      if (string[i] ===\
    \ string[j]) {\n        break;\n      }\n      prefixes.push(string[i]);\n   \
    \ }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  's',\n  'd',\n\
    \  'd',\n  'f',\n  'f',\n  'f',\n  'g',\n  'g',\n  'g',\n  'g',\n  'h',\n  'h',\n\
    \  'h',\n  'h',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpncqc8x4p.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpncqc8x4p.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    's',\
    \ 'd', 'd', 'f',\n    'f', 'f', 'g', 'g',\n    'g', 'g', 'h', 'h',\n    'h', 'h',\
    \ 'h'\n  ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefixes: string[] = [];\n\n  for (var i = 0; i <\
    \ string.length; ++i) {\n    prefixes[i] = string.slice(0, i);\n  }\n\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpn0_pwzw9.js:15:12)\n    at Object.<anonymous> (/tmp/tmpn0_pwzw9.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result = new Set<string>();\n    for (const prefix\
    \ of string.split('')) {\n        result.add(prefix);\n    }\n    return [...result];\n\
    }\n</code>\n<|/ a tags=string,algorithm,arrays,javascript |>\n<| a dscore=3 |>\n\
    I believe this should be the fastest algorithm for your problem as you do not\
    \ have to iterate over the string for each character in the string. \n<code>\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmptan9grfh.ts(11,2): error TS1110: Type expected.

    ../../../../tmp/tmptan9grfh.ts(11,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmptan9grfh.ts(12,2): error TS1109: Expression expected.

    ../../../../tmp/tmptan9grfh.ts(12,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmptan9grfh.ts(13,2): error TS1109: Expression expected.

    ../../../../tmp/tmptan9grfh.ts(13,6): error TS1005: '';'' expected.

    ../../../../tmp/tmptan9grfh.ts(13,16): error TS1109: Expression expected.

    ../../../../tmp/tmptan9grfh.ts(14,3): error TS1005: '';'' expected.

    ../../../../tmp/tmptan9grfh.ts(14,16): error TS1005: '';'' expected.

    ../../../../tmp/tmptan9grfh.ts(14,23): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,26): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,30): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,38): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,52): error TS1005: ''('' expected.

    ../../../../tmp/tmptan9grfh.ts(14,57): error TS1005: '';'' expected.

    ../../../../tmp/tmptan9grfh.ts(14,72): error TS1005: '';'' expected.

    ../../../../tmp/tmptan9grfh.ts(14,75): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,79): error TS1005: ''while'' expected.

    ../../../../tmp/tmptan9grfh.ts(14,84): error TS1005: '')'' expected.

    ../../../../tmp/tmptan9grfh.ts(14,87): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,95): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,100): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,104): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmptan9grfh.ts(14,115): error TS1005: ''('' expected.

    ../../../../tmp/tmptan9grfh.ts(14,120): error TS1005: '';'' expected.

    ../../../../tmp/tmptan9grfh.ts(14,137): error TS1005: '';'' expected.

    ../../../../tmp/tmptan9grfh.ts(15,1): error TS10'
  timestamp: 1660334316
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result: string[] = [];\n    let prefix: string;\n\
    \    for (let i = 0; i < string.length; i++) {\n        prefix = string.substr(0,\
    \ i);\n        if (string.length > i && !~all_prefixes.indexOf(prefix)) {\n  \
    \          result.unshift(prefix);\n        }\n    }\n    return result;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyfyi0cur.ts(9,49): error TS2339: Property ''indexOf''
    does not exist on type ''(string: string) => string[]''.

    '
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  // Find all prefixes of the input string\n  const prefixes\
    \ = [];\n  for (let i = 0; i < string.length; i++) {\n    const char = string.charAt(i);\n\
    \    // Find all prefixes of the character with current index from input\n   \
    \ for (let j = 0; j < prefixes.length; j++) {\n      if (prefixes[j].startsWith(char))\
    \ {\n        prefixes[j] = prefixes[j].substring(1);\n      }\n    }\n    if (prefixes.length)\
    \ break;\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpf2y4_gol.js:24:12)\n    at Object.<anonymous> (/tmp/tmpf2y4_gol.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length == 0) {\n        return [];\n   \
    \ }\n\n    let prefixes: string[] = [];\n    let current = string;\n    while\
    \ (current.length > 0) {\n        current = current.substr(0, current.length -\
    \ 1);\n        prefixes.unshift(current);\n    }\n    return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpjksg52p9.js:20:12)\n    at Object.<anonymous> (/tmp/tmpjksg52p9.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let result: string[] = [];\n  let len = string.length;\n\
    \n  if (len === 0) {\n    return result;\n  }\n\n  // If the first character is\
    \ equal to the last character of the string, no prefixes are possible.\n  if (string[0]\
    \ === string[len - 1]) {\n    return [];\n  }\n\n  // If the string starts and\
    \ ends with the same character, the prefix is empty, i.e. the input string has\
    \ no prefix.\n  if (string[0] === string[len - 1] && string[0] === string[0])\
    \ {\n    return [];\n  }\n\n  let prefix_char: string = string[0];\n  let prefix_index:\
    \ number = 0;\n\n  while (prefix_index < len) {\n    // Checks if the prefix of\
    \ the string contains the current character.\n    if (string.substr(prefix_index,\
    \ prefix_char.length) === prefix_char) {\n      result.push(prefix_char);\n  \
    \    prefix_char += string[prefix_index];\n      prefix_index++;\n    } else {\n\
    \      break;\n    }\n  }\n\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpzih5t_ld.js:37:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzih5t_ld.js:40:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334316
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  // Create an array of prefixes from shortest to longest\n\
    \  const prefixes: string[] = []\n  for (let i = 1; i < string.length; i++) {\n\
    \    if (string.slice(0, i).indexOf(string) === -1) {\n      // This string doesn't\
    \ start with the prefix of the previous one\n      break\n    }\n\n    prefixes.unshift(string.slice(0,\
    \ i))\n  }\n\n  return prefixes\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpt9yvgjx7.js:20:12)\n    at Object.<anonymous> (/tmp/tmpt9yvgjx7.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334319
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefixes = [];\n  var lastPos = [0, string.length];\n\
    \  var i = 0;\n\n  while (i < string.length) {\n    if (string[i] === \".\") {\n\
    \      if (lastPos[0] !== i) prefixes.push(string.slice(lastPos[0], i));\n   \
    \   lastPos = [i + 1, string.length];\n      i++;\n    } else {\n      lastPos\
    \ = [i + 1, string.length];\n      i++;\n    }\n  }\n\n  if (lastPos[0] !== string.length)\
    \ return prefixes.push(string.slice(lastPos[0], i));\n  return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9iyk3smm.ts(20,37): error TS2322: Type ''number'' is
    not assignable to type ''string[]''.

    '
  timestamp: 1660334319
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var prefixes = [];\n    var currLen = 0;\n    var currPrefix\
    \ = '';\n    for (var i = 0; i < string.length; i++) {\n        if (string[i]\
    \ === \" \") {\n            currLen++;\n        } else {\n            if (currLen\
    \ > 0) {\n                prefixes.push(currPrefix);\n                currPrefix\
    \ = '';\n            }\n            currLen = 1;\n            currPrefix = string[i];\n\
    \        }\n    }\n    if (currLen > 0) {\n        prefixes.push(currPrefix);\n\
    \    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpkbktda5c.js:30:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkbktda5c.js:33:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334319
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    let index = string.lastIndexOf(string[i], i - 1);\n    if (index\
    \ !== -1 && i > 0 && string[i - 1] === string[index]) {\n      if (index === string.length\
    \ - 1) {\n        prefixes = [string[i]];\n      } else {\n        prefixes =\
    \ [string[i] + string[index + 1]];\n      }\n    } else {\n      prefixes = [];\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpm1qlgkf4.js:26:12)\n    at Object.<anonymous> (/tmp/tmpm1qlgkf4.js:29:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334319
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length < 2) {\n        return [];\n    }\n\
    \n    var result: string[] = [];\n    var prefix_length: number;\n    var prefix_string:\
    \ string;\n    for (var i = 1; i <= string.length; i++) {\n        prefix_length\
    \ = string.length - i;\n        prefix_string = string.substr(0, i);\n       \
    \ if (prefix_string.length === 0) {\n            result.push(\"\");\n        }\
    \ else if (prefix_length < string.length) {\n            result.push(prefix_string);\n\
    \        }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334319
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var result = new Array<string>();\n  var first = true;\n\
    \  for (var i = 0; i < string.length; i++) {\n    var char = string[i];\n    if\
    \ (first) {\n      first = false;\n    } else {\n      result.unshift(char);\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'g',\n\
    \  'f',\n  'd',\n  's'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpx956pkoe.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpx956pkoe.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g',\
    \ 'f', 'd', 's' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const input: string = string.toLowerCase();\n    let\
    \ prefixes = [\"\"];\n    let index = 0;\n    while (input.length > 0) {\n   \
    \     const prefix = input.slice(0, index);\n        const next = input.slice(prefix.length);\n\
    \        prefixes.push(prefix);\n        input = next;\n        index++;\n   \
    \ }\n    return prefixes;\n}\n</code>\n<code>\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpilojw34b.ts(17,2): error TS1110: Type expected.

    ../../../../tmp/tmpilojw34b.ts(17,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpilojw34b.ts(19,9): error TS1005: '';'' expected.

    '
  timestamp: 1660334319
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0,\
    \ length = string.length; i < length; i++) {\n        if (string[i] === \"-\"\
    \ || string[i] === \"_\") {\n            prefixes.push(string.slice(0, i));\n\
    \        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpfvskga0q.js:17:12)\n    at Object.<anonymous> (/tmp/tmpfvskga0q.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes = [];\n  let len = string.length;\n  for\
    \ (let i = 0; i < len; i++) {\n    prefixes.push(string.substr(0, i));\n  }\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpntab8tpb.js:16:12)\n    at Object.<anonymous> (/tmp/tmpntab8tpb.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    for (let i = 1; i <= string.length;\
    \ i++) {\n        prefixes.push(\"a\" + string[i - 1]);\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'aa',\n \
    \ 'as',\n  'ad',\n  'af',\n  'ag',\n  'ah'\n]\n\nshould loosely deep-equal\n\n\
    [\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgb30a5y5.js:15:12)\n    at Object.<anonymous> (/tmp/tmpgb30a5y5.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'aa', 'as',\
    \ 'ad', 'af', 'ag', 'ah' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length == 0) {\n        return [];\n   \
    \ }\n    if (string.length == 1) {\n        return [string];\n    }\n    var prefixes\
    \ = [\"\"];\n    for (var i = 1; i < string.length; ++i) {\n        prefixes.push(string.slice(0,\
    \ i));\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp0_mt44v1.js:21:12)\n    at Object.<anonymous> (/tmp/tmp0_mt44v1.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let arr = string.split(\"\");\n    let prefixes = [];\n\
    \    let longest = arr[0];\n\n    for (let i = 1; i < arr.length; i++) {\n   \
    \     if (arr[i].length > longest.length) {\n            longest = arr[i];\n \
    \       }\n    }\n\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ === longest) {\n            prefixes.push(arr[i]);\n        }\n    }\n\n   \
    \ return prefixes;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpt2is25pg.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpt2is25pg.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n\n    for (let i =\
    \ 0; i < string.length; i++) {\n        prefixes[i] = string.substring(0, i +\
    \ 1);\n    }\n\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefix_array: string[] = [];\n  for (let i = 0;\
    \ i < string.length; i++) {\n    const prefix = string.substr(i, 1);\n    prefix_array.push(prefix);\n\
    \  }\n  return prefix_array;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpaxs4ijlv.js:16:12)\n\
    \    at Object.<anonymous> (/tmp/tmpaxs4ijlv.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334319
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i <= string.length;\
    \ i++) {\n    prefixes.push(i);\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  0\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp8mbmao3m.js:14:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp8mbmao3m.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 0 ],\n \
    \ expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334319
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  // If there's only one letter, return an array containing\
    \ the letter\n  // >>> all_prefixes(\"a\")\n  // [\"a\"]\n  if (string.length\
    \ === 1) return [string];\n\n  // If the first letter is an uppercase letter,\
    \ return an array of all lowercase\n  // letters followed by the same letter\n\
    \  if (isUpperCase(string[0])) return string.slice(1).concat(string.slice(0));\n\
    \n  // If the first letter is a lowercase letter, return an array of all uppercase\n\
    \  // letters followed by the same letter\n  if (isLowerCase(string[0])) return\
    \ string.slice(1).concat(string.slice(0));\n\n  // If there are no letters in\
    \ the string, return an empty array\n  // >>> all_prefixes('')\n  // []\n  if\
    \ (string.length === 0) return [];\n\n  // If the first letter is in the uppercase\
    \ alphabet, return an array of all\n  // lowercase letters followed by the same\
    \ letter\n  if (isUpperCase(string[0])) return string.slice(1).concat(string.slice(0));\n\
    \n  // If the first letter is in the lowercase alphabet, return an array of all\n\
    \  // uppercase letters followed by the same letter\n  if (isLowerCase(string[0]))\
    \ return string.slice(1).concat(string.slice(0));\n\n  // If there are two or\
    \ more letters in the string, return an empty array\n  // >>> all_prefixes(\"\
    a\")\n  // []\n  if (string.length > 1) return [];\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6ojnte_m.ts(12,7): error TS2304: Cannot find name ''isUpperCase''.

    ../../../../tmp/tmp6ojnte_m.ts(12,31): error TS2322: Type ''string'' is not assignable
    to type ''string[]''.

    ../../../../tmp/tmp6ojnte_m.ts(16,7): error TS2304: Cannot find name ''isLowerCase''.

    ../../../../tmp/tmp6ojnte_m.ts(16,31): error TS2322: Type ''string'' is not assignable
    to type ''string[]''.

    ../../../../tmp/tmp6ojnte_m.ts(25,7): error TS2304: Cannot find name ''isUpperCase''.

    ../../../../tmp/tmp6ojnte_m.ts(25,31): error TS2322: Type ''string'' is not assignable
    to type ''string[]''.

    ../../../../tmp/tmp6ojnte_m.ts(29,7): error TS2304: Cannot find name ''isLowerCase''.

    ../../../../tmp/tmp6ojnte_m.ts(29,31): error TS2322: Type ''string'' is not assignable
    to type ''string[]''.

    '
  timestamp: 1660334319
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (prefixes.length === 0) {\n            prefixes.push(string[i]);\n\
    \        }\n        else if (string[i] !== prefixes[prefixes.length - 1]) {\n\
    \            prefixes.push(string[i]);\n        }\n    }\n    return prefixes;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp8uuz9ha4.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8uuz9ha4.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result: string[] = [];\n    for (let i = 0; i\
    \ < string.length; i++) {\n        result.push(string.slice(0, i + 1));\n    }\n\
    \    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334320
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const length: string = string.length;\n  let prefixes:\
    \ string[] = [];\n  for (let i = length - 1; i >= 0; i--) {\n    const prefix\
    \ = string.substr(0, i);\n    prefixes.unshift(prefix);\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp82noyqoy.ts(5,9): error TS2322: Type ''number'' is not
    assignable to type ''string''.

    ../../../../tmp/tmp82noyqoy.ts(7,16): error TS2362: The left-hand side of an arithmetic
    operation must be of type ''any'', ''number'', ''bigint'' or an enum type.

    '
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const arr: string[] = [];\n    for (let i = 0; i <\
    \ string.length; i++) {\n        for (let j = 0; j < string.length; j++) {\n \
    \           if (string[i] === string[j] && i != j) arr.push(string[i]);\n    \
    \    }\n    }\n    return arr;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp0phvcy_l.js:18:12)\n    at Object.<anonymous> (/tmp/tmp0phvcy_l.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefixes = [];\n  var suffixes = [];\n  var s = string.split('');\n\
    \n  for (var i = 0; i < s.length; i++) {\n    prefixes[i] = i;\n  }\n\n  for (var\
    \ i = 0; i < s.length; i++) {\n    if (s[suffixes[i]] === undefined) {\n     \
    \ suffixes[i] = s.length;\n    }\n  }\n\n  for (var i = s.length - 1; i >= 0;\
    \ i--) {\n    prefixes[prefixes[i]] = i;\n  }\n\n  for (var i = 1; i < s.length;\
    \ i++) {\n    if (s[suffixes[i - 1]] === undefined) {\n      suffixes[i - 1] =\
    \ 0;\n    }\n  }\n\n  return prefixes.reverse().concat(suffixes.reverse());\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  5,\n  4,\n\
    \  3,\n  2,\n  1,\n  0,\n  6,\n  0,\n  0,\n  0,\n  0,\n  0\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpzperu1yx.js:30:12)\n    at Object.<anonymous> (/tmp/tmpzperu1yx.js:33:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    5,\
    \ 4, 3, 2, 1,\n    0, 6, 0, 0, 0,\n    0, 0\n  ],\n  expected: [ 'a', 'as', 'asd',\
    \ 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length == 0) {\n    return [];\n  }\n  const\
    \ char_list = string.split('');\n  const all_prefixes: string[] = [];\n  const\
    \ prefix_lengths: number[] = [];\n  for (let i = 0; i < char_list.length; i++)\
    \ {\n    const char = char_list[i];\n    const prefix_length = char.length + i;\n\
    \    all_prefixes.push(char);\n    prefix_lengths.push(prefix_length);\n  }\n\
    \  return all_prefixes.sort((a, b) => {\n    if (prefix_lengths[a] < prefix_lengths[b])\
    \ {\n      return -1;\n    }\n    if (prefix_lengths[a] > prefix_lengths[b]) {\n\
    \      return 1;\n    }\n    return 0;\n  });\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp9sgu6flb.js:31:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9sgu6flb.js:34:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let prefix = \"\";\n\n  for (let\
    \ i = 0; i < string.length; i++) {\n    prefix = string.substr(0, i);\n    if\
    \ (!prefixes.includes(prefix)) {\n      prefixes.push(prefix);\n    }\n  }\n\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpp0fg8sbl.js:19:12)\n    at Object.<anonymous> (/tmp/tmpp0fg8sbl.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334320
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var res = []\n  for (var i = 0; i < string.length; i++)\
    \ {\n    res.push(string[i])\n    if (string[i].match(/[a-z]/)) continue\n   \
    \ for (var j = 0; j < res.length; j++) {\n      if (string[i - res.length + j\
    \ + 1].match(/[a-z]/)) {\n        break\n      }\n    }\n    res.push(string.slice(i\
    \ + 1, j + 1))\n  }\n  return res\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp57ui06fm.js:23:12)\n\
    \    at Object.<anonymous> (/tmp/tmp57ui06fm.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334322
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var _all_prefixes: string[] = [];\n    for (var i =\
    \ 0, imax = string.length; i < imax; i++) {\n        _all_prefixes.push(string.substr(0,\
    \ i));\n    }\n    return _all_prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpv9ejaol0.js:15:12)\n    at Object.<anonymous> (/tmp/tmpv9ejaol0.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334322
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length <= 1) return [];\n    const prefixes:\
    \ string[] = [];\n    let prefix = \"\";\n    for (let index = 0; index < string.length;\
    \ index++) {\n        let char = string.charAt(index);\n        for (let i = 0;\
    \ i < prefix.length; i++) {\n            if (prefixes[i].toLowerCase() < char.toLowerCase())\
    \ {\n                prefix = prefixes[i];\n                prefixes[i] = prefix;\n\
    \                break;\n            }\n        }\n        prefixes[index] = prefix;\n\
    \    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  '',\n\
    \  '',\n  '',\n  '',\n  ''\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpkum95iyy.js:26:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkum95iyy.js:29:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', '',\
    \ '', '', '', '' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334322
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefix = string.substring(0, string.lastIndexOf('/'));\n\
    \    return prefix_array.find(prefix => prefix === string);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpy0c9u9ru.ts(6,12): error TS2304: Cannot find name ''prefix_array''.

    '
  timestamp: 1660334322
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const substrings: string[] = [];\n  for (let i = 0, len\
    \ = string.length; i < len; i++) {\n    const substring = string.slice(0, i);\n\
    \    if (substring.endsWith(substring)) {\n      substrings.push(substring);\n\
    \    }\n  }\n  return substrings;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpnn9sfl2p.js:18:12)\n    at Object.<anonymous> (/tmp/tmpnn9sfl2p.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string.split(\"\").reduce((prefixes, string)\
    \ => {\n        prefixes[string] = true;\n        return prefixes;\n    }, {});\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6s0lg6gi.ts(5,5): error TS2740: Type ''{}'' is missing
    the following properties from type ''string[]'': length, pop, push, concat, and
    29 more.

    '
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length === 0) {\n    return [];\n  }\n  const\
    \ prefixes: string[] = [];\n  for (let i = 0; i < string.length; i++) {\n    let\
    \ c = string[i];\n    do {\n      prefixes.push(c);\n    } while ((c = string.slice(++i)));\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'sdfgh',\n\
    \  'dfgh',\n  'fgh',\n  'gh',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp8lacntnk.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8lacntnk.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'sdfgh',\
    \ 'dfgh', 'fgh', 'gh', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tconst prefix_array: string[] = [];\n\tlet prefix_length:\
    \ number = 0;\n\tfor (let i = 0; i < string.length; i++){\n\t\tif (string.substring(i,\
    \ i + 1).startsWith(\"0\")){\n\t\t\tprefix_length = i;\n\t\t\tbreak;\n\t\t}\n\t\
    }\n\tif (prefix_length > 0){\n\t\tconst prefix_length_string: string = string.substring(0,\
    \ prefix_length).trim();\n\t\tlet prefix_char_array: string[] = [];\n\t\tfor (let\
    \ i = 0; i < prefix_length_string.length; i++){\n\t\t\tif (prefix_char_list.indexOf(prefix_length_string.charAt(i))\
    \ == -1){\n\t\t\t\tprefix_char_array.push(prefix_length_string.charAt(i));\n\t\
    \t\t}\n\t\t}\n\t\tprefix_array.push(prefix_char_array);\n\t}\n\treturn prefix_array;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpt0rfowd_.ts(17,8): error TS2304: Cannot find name ''prefix_char_list''.

    ../../../../tmp/tmpt0rfowd_.ts(21,21): error TS2345: Argument of type ''string[]''
    is not assignable to parameter of type ''string''.

    '
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tvar prefixes = [];\n\tvar string = string.trim();\n\t\
    var splitted = string.split('');\n\tvar length = splitted.length;\n\tfor (var\
    \ i = 0; i < length; i++) {\n\t\tprefixes.push(splitted[i].substr(0, splitted[i].search(/[a-z]/)));\n\
    \t}\n\treturn prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  '',\n\
    \  '',\n  '',\n  '',\n  ''\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpdfpvohln.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpdfpvohln.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', '',\
    \ '', '', '', '' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length <= 1) {\n        return [string];\n\
    \    }\n\n    const prefixes = all_prefixes(string.slice(0, -1));\n    prefixes.push(string);\n\
    \n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp7bqyec9h.js:15:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp7bqyec9h.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string.split(/(?=.)/).filter(function (x) {\n\
    \        return x.length !== 0\n    })\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp2ik25jaw.js:13:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2ik25jaw.js:16:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    // Return empty array if input string empty\n    if\
    \ (string.length <= 0) {\n        return [];\n    }\n\n    // Create array that\
    \ can hold all prefixes of input string\n    let prefixes: string[] = [];\n\n\
    \    // Iterate over all letters of input string\n    for (let i = 0; i < string.length;\
    \ i++) {\n        // Keep track of previous letter to add its prefix to result\
    \ array\n        let prev = string[i];\n\n        // Iterate over all letters\
    \ in alphabet to find first letter in input string that is not equal to current\n\
    \        // letter to add prefix to result array\n        for (let j = 0; j <\
    \ alphabet.length; j++) {\n            // If letter in alphabet is not equal to\
    \ current letter, add prefix to result array\n            if (string[i] !== alphabet[j])\
    \ {\n                prefixes.push(prev);\n                break;\n          \
    \  }\n            // If letter in alphabet equals current letter, exit loop\n\
    \        }\n\n        // If there are no more letters in alphabet, exit loop\n\
    \        if (j === alphabet.length - 1) {\n            break;\n        }\n\n \
    \       // Keep track of current letter to add prefix to result array\n      \
    \  prev = alphabet[j];\n    }\n\n    return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpyu12fv34.ts(20,29): error TS2304: Cannot find name ''alphabet''.

    ../../../../tmp/tmpyu12fv34.ts(22,31): error TS2304: Cannot find name ''alphabet''.

    ../../../../tmp/tmpyu12fv34.ts(30,13): error TS2304: Cannot find name ''j''.

    ../../../../tmp/tmpyu12fv34.ts(30,19): error TS2304: Cannot find name ''alphabet''.

    ../../../../tmp/tmpyu12fv34.ts(35,16): error TS2304: Cannot find name ''alphabet''.

    ../../../../tmp/tmpyu12fv34.ts(35,25): error TS2304: Cannot find name ''j''.

    '
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result: string[] = [];\n\n    for (let i = 0;\
    \ i < string.length; i++) {\n        if (i === 0 || string[i - 1] === string[i])\
    \ {\n            result.push(string[i]);\n        }\n    }\n\n    return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpbo28l2um.js:17:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpbo28l2um.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tconst charArray = string.split('');\n\tlet prefixes:\
    \ string[] = [];\n\tfor (let i = 0; i < charArray.length; i++) {\n\t\tprefixes.push(charArray[i]);\n\
    \t\tif (i === 0) {\n\t\t\tprefixes.sort();\n\t\t}\n\t}\n\treturn prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpzgm2q7w7.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpzgm2q7w7.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let max_len = string.length;\n  let prefixes: string[]\
    \ = [];\n  let index = 0;\n  while (index <= max_len) {\n    prefixes.push(string.substr(index,\
    \ max_len));\n    index += 1;\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpkzwm8voq.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpkzwm8voq.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length === 0) {\n        return [];\n  \
    \  }\n\n    const stack: string[] = [];\n\n    for (let i = 0; i < string.length;\
    \ i++) {\n        let prefix = string.slice(0, i);\n\n        // Remove all prefixes\
    \ of the same string length\n        while (stack.length > 0 && prefix.length\
    \ === stack[stack.length - 1].length) {\n            stack.pop();\n        }\n\
    \n        stack.push(prefix);\n    }\n\n    return stack;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpq09igpoa.js:23:12)\n    at Object.<anonymous> (/tmp/tmpq09igpoa.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n\n  for (let i = 0; i <\
    \ string.length; i++) {\n    for (let j = 0; j < i; j++) {\n      if (string.substring(i,\
    \ j).includes(string[j])) {\n        prefixes.push(string.substring(0, j + 1));\n\
    \      }\n    }\n  }\n\n  return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'a',\n\
    \  'as',\n  'a',\n  'as',\n  'asd',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp0y1fndyh.js:19:12)\n    at Object.<anonymous> (/tmp/tmp0y1fndyh.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    'a',\
    \    'a',    'as',\n    'a',    'as',   'asd',\n    'a',    'as',   'asd',\n \
    \   'asdf', 'a',    'as',\n    'asd',  'as"
  stdout: ''
  timestamp: 1660334324
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let string_index = 0;\n \
    \   for (; string_index < string.length; string_index++) {\n        const char\
    \ = string.charAt(string_index);\n        const prefix = string.substring(0, string_index);\n\
    \        if (prefixes[prefix] === undefined) {\n            prefixes[prefix] =\
    \ [];\n        }\n        prefixes[prefix].push(char);\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '': [\n \
    \   'a'\n  ],\n  a: [\n    's'\n  ],\n  as: [\n    'd'\n  ],\n  asd: [\n    'f'\n\
    \  ],\n  asdf: [\n    'g'\n  ],\n  asdfg: [\n    'h'\n  ]\n]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp00qrffz0.js:21:12)\n    at Object.<anonymous> (/tmp/tmp00qrffz0.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '':\
    \ [ 'a' ],\n    a: [ 's' ],\n    as: [ 'd' ],\n    asd: [ 'f' ],\n    asdf: [\
    \ 'g' ],\n    asdfg: [ 'h' ]\n  ],\n  ex"
  stdout: ''
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length < 2) return [];\n  let prefix_length\
    \ = string.length - 1;\n  let output: string[] = [];\n  while (prefix_length >\
    \ 0) {\n    output.unshift(string.substr(0, prefix_length));\n    prefix_length--;\n\
    \  }\n  return output;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp2b8jnlhj.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp2b8jnlhj.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334324
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const arr: string[] = [];\n  const prefix = string.substr(0,\
    \ string.length);\n  arr.push(prefix);\n  const cur = string.substr(prefix.length);\n\
    \  while (!isEmpty(cur) && cur.length > 0) {\n    cur = cur.substr(0, cur.length);\n\
    \    arr.push(cur);\n  }\n  return arr;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpzqie0cyi.ts(9,11): error TS2304: Cannot find name ''isEmpty''.

    ../../../../tmp/tmpzqie0cyi.ts(10,5): error TS2588: Cannot assign to ''cur'' because
    it is a constant.

    '
  timestamp: 1660334323
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length == 0) {\n    return [];\n  }\n  let\
    \ prefixes = [\"\"];\n  string = string.split(\"\");\n  while (string.length >\
    \ 1) {\n    for (let prefix of prefixes) {\n      let index = string.length -\
    \ 1;\n      for (let i = 0; i <= index; i++) {\n        string[i] = string[i]\
    \ + prefix;\n        if (string[i] == string[index]) {\n          break;\n   \
    \     }\n      }\n      if (i == index - 1) {\n        prefixes.push(prefix);\n\
    \      }\n    }\n    string.length -= 1;\n  }\n  return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpgg7609r8.ts(9,3): error TS2322: Type ''string[]'' is
    not assignable to type ''string''.

    ../../../../tmp/tmpgg7609r8.ts(14,9): error TS2542: Index signature in type ''String''
    only permits reading.

    ../../../../tmp/tmpgg7609r8.ts(19,11): error TS2304: Cannot find name ''i''.

    ../../../../tmp/tmpgg7609r8.ts(23,12): error TS2540: Cannot assign to ''length''
    because it is a read-only property.

    '
  timestamp: 1660334323
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let prefix = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    if (string.charAt(i) === prefix.charAt(0))\
    \ {\n      prefixes.push(prefix);\n      prefix = \"\";\n    } else {\n      prefix\
    \ += string.charAt(i);\n    }\n  }\n  prefixes.push(prefix);\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp0_wpqepq.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp0_wpqepq.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334324
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const length = string.length;\n  const prefixes: string[]\
    \ = [];\n  let prefix = '';\n  for (let i = 0; i < length; i++) {\n    prefix\
    \ = `${prefix}${string[i]}`;\n    if (i === 0 || prefixes.length <= 1) break;\n\
    \  }\n  for (let i = 0; i < length; i++) {\n    prefixes.push(prefix);\n  }\n\
    \  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'a',\n\
    \  'a',\n  'a',\n  'a',\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_hrg_jsw.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_hrg_jsw.js:25:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'a',\
    \ 'a', 'a', 'a', 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334324
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = new Array<string>();\n  for (let i =\
    \ 0; i < string.length; i++) {\n    for (let j = i; j < string.length; j++) {\n\
    \      if (string.substr(i, j).length < string.substr(j, i).length) {\n      \
    \  prefixes.push(string.substr(i, j));\n      }\n    }\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpco5ut849.js:19:12)\n    at Object.<anonymous> (/tmp/tmpco5ut849.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334326
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefixes = []; // Iterate through input string\n\n\
    \  for (var i = 0; i < string.length; i++) {\n    // Iterate through string prefixes\n\
    \    for (var j = 0; j < prefixes.length; j++) {\n      // If the current string\
    \ prefix is the prefix of the input string and it's not equal to the current prefix\n\
    \      if (string.substr(0, j + 1).indexOf(string) === 0 && prefixes[j] !== string.substr(0,\
    \ j + 1)) {\n        // Remove prefix from current prefix array\n        prefixes.splice(j--,\
    \ 1); // Add prefix to current prefix array\n      }\n    }\n\n    prefixes.push(string.substr(0,\
    \ i));\n  }\n\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpoex46z56.js:23:12)\n    at Object.<anonymous> (/tmp/tmpoex46z56.js:26:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334326
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var result: string[] = [];\n\n    var shortest = string;\n\
    \    var longest = string;\n\n    while (longer.length > 0) {\n        var newShortest\
    \ = shortest_prefix(shortest, longest);\n        result.push(newShortest);\n \
    \       shortest = newShortest;\n        longest = longest.substring(0, longest.length\
    \ - 1);\n    }\n\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcn7mark6.ts(10,12): error TS2304: Cannot find name ''longer''.

    ../../../../tmp/tmpcn7mark6.ts(11,27): error TS2304: Cannot find name ''shortest_prefix''.

    '
  timestamp: 1660334326
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    const start: string\
    \ = string.substring(0, 1);\n    for (let i = 1; i < string.length; ++i) {\n \
    \       if (string[i] !== start) {\n            prefixes.push(string.substring(0,\
    \ i));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpmb5wwpk0.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmb5wwpk0.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334326
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return find_prefixes(\"a\" + string).concat(find_prefixes(\"\
    b\" + string)).concat(find_prefixes(\"c\" + string));\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpkwgik4k1.ts(5,10): error TS2304: Cannot find name ''find_prefixes''.

    ../../../../tmp/tmpkwgik4k1.ts(5,45): error TS2304: Cannot find name ''find_prefixes''.

    ../../../../tmp/tmpkwgik4k1.ts(5,81): error TS2304: Cannot find name ''find_prefixes''.

    '
  timestamp: 1660334326
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result: string[] = [];\n    for (let i = 0; i\
    \ <= string.length; i++) {\n        const prefix = string.slice(0, i);\n     \
    \   if (result.indexOf(prefix) === -1) {\n            result.push(prefix);\n \
    \       }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpxkcwbdjf.js:17:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpxkcwbdjf.js:21:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = new Set<string>();\n    let stringLength\
    \ = string.length;\n    for (let i = 0; i < stringLength; i += 1) {\n        const\
    \ character = string[i];\n        if (character[0] !== string[i][0]) prefixes.add(character);\n\
    \    }\n    return Array.from(prefixes);\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp4geogkd2.js:18:12)\n    at Object.<anonymous> (/tmp/tmp4geogkd2.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    for (let i = 1; i < string.length;\
    \ i++) {\n        prefixes.push(string.substr(0, i));\n    }\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpr77c0foo.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpr77c0foo.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let result: string[] = [];\n  for (let i = string.length\
    \ - 1; i >= 0; i--) {\n    let prefix = string.substring(0, i + 1);\n    result.unshift(prefix);\n\
    \  }\n  return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var min_length = Math.min.apply(Math, string.split(''));\n\
    \  var prefixes = [];\n  for (var i = 0; i < min_length; i++) {\n    prefixes.push(string.substring(0,\
    \ i));\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp8lwn_d2r.js:8\n        prefixes.push(string.substring(0, i));\n\
    \                 ^\n\nRangeError: Invalid array length\n    at Array.push (<anonymous>)\n\
    \    at all_prefixes (/tmp/tmp8lwn_d2r.js:8:18)\n    at test (/tmp/tmp8lwn_d2r.js:15:22)\n\
    \    at Object.<anonymous> (/tmp/tmp8lwn_d2r.js:19:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length <= 1) {\n        return [];\n   \
    \ }\n    var prefixes = [];\n    for (var i = 0; i < string.length; i++) {\n \
    \       for (var j = i; j < string.length; j++) {\n            prefixes.push(string.slice(0,\
    \ j));\n        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'a',\n  'as',\n  'asd',\n  'asdf',\n\
    \  'asdfg',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asd',\n  'asdf',\n \
    \ 'asdfg',\n  'asdf',\n  'asdfg',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\
    \n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp50y9vyx1.js:20:12)\n    at Object.<anonymous> (/tmp/tmp50y9vyx1.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '',\
    \     'a',     'as',\n    'asd',  'asdf',  'a"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var minLength = Math.min(string.length, 30);\n  var result\
    \ = new Array(minLength);\n  for (var i = 0; i < minLength; i++) {\n    result[i]\
    \ = \"\" + string.substring(0, i);\n  }\n  return result;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpgu9rl5_c.js:16:12)\n    at Object.<anonymous> (/tmp/tmpgu9rl5_c.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n\n    for (let i =\
    \ 1; i < string.length; i++) {\n        const prefix = string.slice(0, i);\n\n\
    \        if (prefixes.indexOf(prefix) === -1) {\n            prefixes.push(prefix);\n\
    \        }\n    }\n\n    return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmphvztcf98.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmphvztcf98.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [\"\"];\n  const strings = Array.from(string.split(\"\
    \"));\n  while (strings.length > 1) {\n    const last_string: string = strings.pop();\n\
    \    const prefix = prefixes.map(str => str + last_string).join(\"\");\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes.map(prefix => prefix + last_string);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpji4940pe.ts(12,42): error TS2304: Cannot find name ''last_string''.

    '
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix = '';\n  for\
    \ (let i = 0; i < string.length; i++) {\n    if (string[i] === '-') {\n      //\
    \ Remove all hyphens since they might be part of a longer prefix\n      string\
    \ = string.slice(0, i);\n    }\n    prefix += string[i];\n    if (i > 0) {\n \
    \     prefixes.unshift(prefix);\n      prefix = '';\n    }\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'g',\n\
    \  'f',\n  'd',\n  'as'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp_yajlwmt.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmp_yajlwmt.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g',\
    \ 'f', 'd', 'as' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = new Array<string>();\n    const stack:\
    \ any = new Array();\n    const len = string.length;\n    stack.length = len;\n\
    \n    for (let i = 0; i <= len; i++) {\n        while (!isEmpty(stack) && string[i]\
    \ === stack[stack.length - 1]) {\n            prefixes.push(stack.slice(-2));\n\
    \            stack.pop();\n        }\n        stack.push(string[i]);\n    }\n\n\
    \    while (!isEmpty(stack)) {\n        prefixes.push(stack.slice(-2));\n    \
    \    stack.pop();\n    }\n\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpknvfsfma.ts(11,17): error TS2304: Cannot find name ''isEmpty''.

    ../../../../tmp/tmpknvfsfma.ts(18,13): error TS2304: Cannot find name ''isEmpty''.

    '
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefix = [];\n\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefix.push(string.slice(0, i));\n  }\n\n  return prefix;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp7_joekgn.js:15:12)\n    at Object.<anonymous> (/tmp/tmp7_joekgn.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const result = new Array<string>();\n  for (let i = 0,\
    \ len = string.length; i < len; ++i) {\n    const firstChar = string[i];\n   \
    \ const prefixes = string.slice(0, i).split(firstChar);\n    for (let j = 0; j\
    \ < prefixes.length; ++j) {\n      result.push(prefixes[j]);\n    }\n  }\n  return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp287mdjxn.js:19:12)\n    at Object.<anonymous> (/tmp/tmp287mdjxn.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length === 0) {\n    return [];\n  }\n  var\
    \ result = new Array<string>();\n  for (var index = 1; index < string.length;\
    \ index++) {\n    var prefix = string.substr(0, index);\n    if (!result.includes(prefix))\
    \ {\n      result.push(prefix);\n    }\n  }\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp4oagojdl.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmp4oagojdl.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    // \"abc\" -> [\"a\", \"ab\", \"abc\"]\n    const prefix\
    \ = [];\n\n    // \"abc\" -> [\"a\", \"ab\", \"abc\"]\n    while (string.length\
    \ > 0) {\n        prefix.push(string[0]);\n        string = string.slice(1);\n\
    \    }\n\n    return prefix;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpkieplnk4.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmpkieplnk4.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let char: string = string;\n\
    \  while (char.length > 0) {\n    prefixes.unshift(char.slice(0, 1));\n    char\
    \ = char.slice(1);\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'h',\n  'g',\n\
    \  'f',\n  'd',\n  's',\n  'a'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpaiar83zc.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpaiar83zc.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'h', 'g',\
    \ 'f', 'd', 's', 'a' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.slice(0, i));\n  }\n  return prefixes;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp3fo5ubcl.js:15:12)\n    at Object.<anonymous> (/tmp/tmp3fo5ubcl.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334114
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string === \"\") return [];\n\n    // Find longest\
    \ prefix of string and all shorter ones\n    const prefixes = all_prefixes(string.substr(0,\
    \ string.length - 1));\n\n    if (prefixes.length === 0) return [string];\n\n\
    \    const [longest_prefix, ...shorter_prefixes] = prefixes;\n\n    // Add longest\
    \ prefix to every shorter prefix\n    return shorter_prefixes.map((prefix, index)\
    \ =>\n        prefix + longest_prefix + (index < shorter_prefixes.length - 1 ?\
    \ all_prefixes(string.substr(index + 1))[0] : \"\")\n    );\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpu5r9x12z.js:19:12)\n    at Object.<anonymous> (/tmp/tmpu5r9x12z.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334327
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return all_prefixes_recursive(string, []);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpsrxhbi1s.ts(5,10): error TS2304: Cannot find name ''all_prefixes_recursive''.

    '
  timestamp: 1660334327
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length < 1) {\n    return [];\n  }\n\n  if\
    \ (string.length > 32) {\n    throw new Error(`Input string too long: ${string.length}`);\n\
    \  }\n\n  const result = new Array<string>(string.length);\n  const prefixes =\
    \ new Array<string>(string.length);\n  let currentLength = string.length;\n  let\
    \ char;\n  let currentPrefix = '';\n  let prefixIndex = -1;\n\n  for (let i =\
    \ 0; i < string.length; i++) {\n    char = string[i];\n    if (char === currentPrefix)\
    \ {\n      continue;\n    }\n    prefixes.splice(prefixIndex + 1, 0, char);\n\
    \    currentLength--;\n    currentPrefix = '';\n    prefixIndex = -1;\n  }\n\n\
    \  prefixes.splice(prefixIndex + 1, 0, currentPrefix);\n\n  for (let i = 0; i\
    \ < prefixes.length; i++) {\n    result[i] = prefixes[i];\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'h',\n\
    \  'g',\n  'f',\n  'd',\n  's',\n  'a',\n  undefined,\n  undefined,\n  undefined,\n\
    \  undefined,\n  undefined,\n  undefined\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmphqa95o13.js:37:12)\n    at Object.<anonymous> (/tmp/tmphqa95o13.js:40:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [\n    '',\
    \        'h',\n    'g',       'f',\n    'd',       's',\n    'a',       undefined,\n\
    \    undefined, undefined,\n    unde"
  stdout: ''
  timestamp: 1660334329
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return Array.from(\n    new Set(\n      string.split(/(?=[a-z])/).map(\n\
    \        (word) => word.replace(/^./, \"\")\n      )\n    )\n  );\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpjbjnvvwe.js:10:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpjbjnvvwe.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334329
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefix_lengths: number[] = [];\n    let i = 0;\n\
    \    while (i < string.length) {\n        prefix_lengths.push(string.substr(i,\
    \ string.length));\n        i++;\n    }\n    prefix_lengths.sort();\n    const\
    \ prefix_array: string[] = [];\n    for (const prefix of prefix_lengths) {\n \
    \       for (const prefix_i of all_prefixes(string.substr(i, string.length - prefix.length)))\
    \ {\n            prefix_array.push(prefix + prefix_i);\n        }\n    }\n   \
    \ return prefix_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpb_ju6bym.ts(8,29): error TS2345: Argument of type ''string''
    is not assignable to parameter of type ''number''.

    ../../../../tmp/tmpb_ju6bym.ts(14,85): error TS2339: Property ''length'' does
    not exist on type ''number''.

    '
  timestamp: 1660334329
- exit_code: -1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefix = [];\n  let i = 0;\n  while (i < string.length)\
    \ {\n    if (string[i] === string[0]) {\n      if (prefix.length > 0) {\n    \
    \    prefix.push(\"..\");\n      }\n    } else {\n      prefix.push(string[i++]);\n\
    \    }\n  }\n  return prefix;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660334345
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const result: string[] = [];\n  let prefix: string;\n\
    \n  // loop through string\n  for (let i = 0; i < string.length; i++) {\n    //\
    \ set prefix to the current character\n    prefix = string;\n    // loop through\
    \ each character in the string\n    for (let j = 0; j < string.length; j++) {\n\
    \      // check if the character at the current position matches the current prefix\n\
    \      if (string[j] === prefix[j]) {\n        // if character matches current\
    \ prefix and we are at the end of the\n        // prefix, append the prefix to\
    \ the result\n        if (j === string.length - 1) {\n          result.push(prefix);\n\
    \        }\n        // otherwise break out of the loop\n        break;\n     \
    \ }\n    }\n  }\n\n  return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp9_yk_ip7.js:31:12)\n    at Object.<anonymous> (/tmp/tmp9_yk_ip7.js:34:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334330
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length <= 1) return [string];\n  const ret\
    \ = [];\n  const arr = string.split(\"\");\n  for (let i = 0; i < arr.length;\
    \ ++i) {\n    let j = i;\n    while ((j = (j + 1) % arr.length)) {\n      ret.push(arr[j]);\n\
    \    }\n  }\n  return ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpa3l5mn0s.js:20:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpa3l5mn0s.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334330
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let prefixes: string[] = [];\n    let prefix_length\
    \ = 0;\n    let substring_index = 0;\n    for (let i = 0; i < string.length; i++)\
    \ {\n        if (string[i] === string[substring_index]) {\n            prefix_length++;\n\
    \        } else {\n            prefixes.push(string.substring(substring_index,\
    \ i));\n            prefix_length = 1;\n            substring_index = i;\n   \
    \     }\n    }\n    prefixes.push(string.substring(substring_index));\n    return\
    \ prefixes;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpmhdeve10.js:24:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpmhdeve10.js:28:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let prefix = '';\n\
    \    for (let i = 0; i < string.length; i++) {\n        if (string[i] !== prefix)\
    \ {\n            prefixes = [prefix, ...prefixes];\n            prefix = string[i];\n\
    \        }\n    }\n    prefixes = [prefix, ...prefixes];\n    return prefixes;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppg6hd67j.ts(9,13): error TS2588: Cannot assign to ''prefixes''
    because it is a constant.

    ../../../../tmp/tmppg6hd67j.ts(13,5): error TS2588: Cannot assign to ''prefixes''
    because it is a constant.

    '
  timestamp: 1660334330
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tconst prefixes = []\n\tfor (let i = 0; i < string.length;\
    \ i++) {\n\t\tif (string[i] === '!') {\n\t\t\tbreak\n\t\t}\n\t\tprefixes.push(string[i])\n\
    \t}\n\tprefixes.pop()\n\treturn prefixes\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpy5vq4f4o.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpy5vq4f4o.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    // Get first letter\n    const firstLetter = string[0]\n\
    \n    // Get prefixes of first letter of input string\n    const prefixes = first_letter_prefixes[firstLetter]\n\
    \n    // Return the array of prefixes\n    return prefixes.map((prefix) => prefix\
    \ + firstLetter)\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpy2rog3lg.ts(9,22): error TS2304: Cannot find name ''first_letter_prefixes''.

    '
  timestamp: 1660334330
- exit_code: -1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefixes = [];\n\n  while (string.length > 0) {\n\
    \    prefixes.unshift(string.substring(0, string.length - 1));\n    string = string.substring(string.length\
    \ - 1);\n  }\n\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660334346
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let prefixes: string[] = [];\n    let minLength = Math.min(string.length,\
    \ 100);\n    for (let i = 0; i < minLength; i++) {\n        prefixes.push(string.substring(0,\
    \ i));\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpez3brncr.js:16:12)\n    at Object.<anonymous> (/tmp/tmpez3brncr.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: -1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefix_array: string[] = [];\n  let prefix_string:\
    \ string = string.substring(0, Math.min(string.length, string.length + 2));\n\
    \  let prefix_index: number = 0;\n  let char_index: number = 0;\n  while (prefix_index\
    \ < string.length) {\n    while (char_index < prefix_string.length) {\n      if\
    \ (prefix_string[char_index] == string[prefix_index]) {\n        char_index++;\n\
    \      } else if (prefix_string[char_index] > string[prefix_index]) {\n      \
    \  break;\n      } else {\n        char_index = 0;\n      }\n    }\n    prefix_array.push(string.substring(prefix_index,\
    \ char_index));\n    prefix_index = char_index;\n    char_index = 0;\n  }\n  return\
    \ prefix_array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660334346
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let result: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    for (let j = 0; j < string.length; j++) {\n      for (let k = 0;\
    \ k < string.length; k++) {\n        if (i !== j && j !== k && k !== i && string[i]\
    \ !== string[j] && string[i] !== string[k] && string[j] !== string[k]) {\n   \
    \       result.push(string[i] + string[j] + string[k]);\n        }\n      }\n\
    \    }\n  }\n  return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asd',\n\
    \  'asf',\n  'asg',\n  'ash',\n  'ads',\n  'adf',\n  'adg',\n  'adh',\n  'afs',\n\
    \  'afd',\n  'afg',\n  'afh',\n  'ags',\n  'agd',\n  'agf',\n  'agh',\n  'ahs',\n\
    \  'ahd',\n  'ahf',\n  'ahg',\n  'sad',\n  'saf',\n  'sag',\n  'sah',\n  'sda',\n\
    \  'sdf',\n  'sdg',\n  'sdh',\n  'sfa',\n  'sfd',\n  'sfg',\n  'sfh',\n  'sga',\n\
    \  'sgd',\n  'sgf',\n  'sgh',\n  'sha',\n  'shd',\n  'shf',\n  'shg',\n  'das',\n\
    \  'daf',\n  'dag',\n  'dah',\n  'dsa',\n  'dsf',\n  'dsg',\n  'dsh',\n  'dfa',\n\
    \  'dfs',\n  'dfg',\n  'dfh',\n  'dga',\n  'dgs',\n  'dgf',\n  'dgh',\n  '...\n\
    \nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmps6fs5_gf.js:21:12)\n    at Object.<anonymous>\
    \ (/tmp/tmps6fs5_gf.js:24:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n "
  stdout: ''
  timestamp: 1660334331
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var prefixes = [];\n    var minLength = string.length;\n\
    \    var index;\n    var prefix;\n    for (var i = 0; i < string.length; i++)\
    \ {\n        index = string.indexOf(string[i]);\n        if (index >= 0) {\n \
    \           prefix = string.substr(0, index);\n            while (prefixes.indexOf(prefix)\
    \ !== -1) {\n                prefix += string;\n            }\n            prefixes.push(prefix);\n\
    \            if (prefix.length < minLength) {\n                minLength = prefix.length;\n\
    \            }\n            string = string.substring(index + 1);\n        } else\
    \ {\n            string = string.substring(1);\n        }\n    }\n    if (minLength\
    \ === string.length) {\n        return prefixes.slice();\n    }\n    return prefixes.slice(0,\
    \ minLength);\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  's',\n\
    \  'fg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n\
    \  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp8yb9kv28.js:35:12)\n    at Object.<anonymous>\
    \ (/tmp/tmp8yb9kv28.js:38:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 's',\
    \ 'fg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  for (let index = 0; index < string.length;\
    \ index++) {\n    const character = string[index];\n    const prefix = index >\
    \ 0 ? string[index - 1] : '';\n    prefixes.push(prefix + character);\n  }\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'sd',\n  'df',\n  'fg',\n  'gh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpnbi0dfhc.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnbi0dfhc.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'sd', 'df', 'fg', 'gh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    for (let i = string.length\
    \ - 1; i >= 0; i--) {\n        prefixes.unshift(string.substring(0, i + 1));\n\
    \    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334331
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var min;\n  var max;\n  if (string.length < 2) return\
    \ [];\n  min = max = string[0];\n  for (var i = 1; i < string.length; i++) {\n\
    \    if (string[i] < min) {\n      min = string[i];\n    }\n    if (string[i]\
    \ > max) {\n      max = string[i];\n    }\n  }\n  var arr: string[] = new Array();\n\
    \  arr.push(min);\n  arr.push(max);\n  return arr;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpzndrig1x.js:27:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzndrig1x.js:30:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    // Convert string to array if it's not already\n  \
    \  if (typeof string === 'string') {\n        string = [string];\n    }\n\n  \
    \  // Loop through string and find all prefixes (i.e. repeated substrings)\n \
    \   const result: string[] = [];\n    let start = 0;\n    string.length.times(function\
    \ () {\n        const index = string.indexOf(string.slice(start), 1);\n      \
    \  if (index === -1) {\n            return;\n        }\n        result.push(string.slice(start,\
    \ index));\n        start = index + 1;\n    });\n\n    // Return an array of all\
    \ prefixes\n    return result;\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp_vybmndg.ts(7,9): error TS2322: Type ''string[]'' is
    not assignable to type ''string''.

    ../../../../tmp/tmp_vybmndg.ts(13,19): error TS2339: Property ''times'' does not
    exist on type ''number''.

    '
  timestamp: 1660334331
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let length: string = string.length;\n    let prefixes:\
    \ string[] = [];\n    while (length-- > 0) {\n        prefixes.push(string.substr(0,\
    \ length));\n    }\n    return prefixes;\n}\n</code>\nAs you can see in the example\
    \ above, the only place where you actually need this type of recursion are places\
    \ where you know exactly the depth of the recursion at runtime (for example, if\
    \ you know you will always be given a string of the same length, and you don't\
    \ know the number of unique prefixes you could have).\nTo be clear, there are\
    \ ways of doing this without the need for the extra recursion depth at runtime,\
    \ but they would be more complex and less useful.\n<|/ a tags=typescript |>\n\
    <| c |>\nYou don't need a recursive function, you can do it with loops. See the\
    \ updated answer.\n<|/ c |>\n<| c |>\nThe recursive version is very good, although\
    \ I personally wouldn't write it like this unless I had no choice.\n<|/ c |>\n\
    <| a tags=typescript |>\nHere's my answer. First the code\n<code>\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpriwkauyq.ts(12,2): error TS1110: Type expected.

    ../../../../tmp/tmpriwkauyq.ts(12,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpriwkauyq.ts(13,1): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,4): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,8): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,23): error TS1005: '';'' expected.

    ../../../../tmp/tmpriwkauyq.ts(13,42): error TS1005: '';'' expected.

    ../../../../tmp/tmpriwkauyq.ts(13,47): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,53): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,59): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,63): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,72): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,82): error TS1005: '';'' expected.

    ../../../../tmp/tmpriwkauyq.ts(13,90): error TS1005: ''='' expected.

    ../../../../tmp/tmpriwkauyq.ts(13,100): error TS1005: '';'' expected.

    ../../../../tmp/tmpriwkauyq.ts(13,104): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,111): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,117): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,121): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,126): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,134): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,138): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,144): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,147): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpriwkauyq.ts(13,151): error TS1434: Unexpected ke'
  timestamp: 1660334331
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string.match(/(^|-)([^-]*)/g).map(function(x:\
    \ string) {\n        return x.slice(1); //Strip a leading -\n    });\n}\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpnvi_0zmd.js:12:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpnvi_0zmd.js:16:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string.split(\"\").map(function(x) { return\
    \ x + x; });\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'aa',\n \
    \ 'ss',\n  'dd',\n  'ff',\n  'gg',\n  'hh'\n]\n\nshould loosely deep-equal\n\n\
    [\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpa_vflndl.js:11:12)\n    at Object.<anonymous> (/tmp/tmpa_vflndl.js:14:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'aa', 'ss',\
    \ 'dd', 'ff', 'gg', 'hh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334331
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [];\n    let i = string.length;\n\
    \    while (i--) prefixes.unshift(string.slice(0, i));\n    return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp6jpqenab.js:15:12)\n    at Object.<anonymous> (/tmp/tmp6jpqenab.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334333
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let array: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    if (string[i] === \"\") {\n      array.push(i);\n    } else {\n\
    \      for (let j = 0; j < i; j++) {\n        if (string[i] === string[j]) {\n\
    \          array.push(string[j]);\n          break;\n        }\n      }\n    }\n\
    \  }\n  return array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp7cxyvxkm.ts(8,18): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''string''.

    '
  timestamp: 1660334333
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  string = string.trim();\n  let prefixes = [];\n  for(let\
    \ i = 0; i < string.length; i++) {\n    prefixes.push(string.substring(0, i));\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpas9x8u6p.js:16:12)\n    at Object.<anonymous> (/tmp/tmpas9x8u6p.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334333
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    // TODO: memoize this\n    var res = []\n    for (var\
    \ prefix in prefix_map) {\n        if (!prefix_map.hasOwnProperty(prefix)) continue\n\
    \        if (prefix_map[prefix].test(string)) {\n            res.push(prefix)\n\
    \        }\n    }\n    return res\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmatfjhvo.ts(7,24): error TS2304: Cannot find name ''prefix_map''.

    ../../../../tmp/tmpmatfjhvo.ts(8,14): error TS2304: Cannot find name ''prefix_map''.

    ../../../../tmp/tmpmatfjhvo.ts(9,13): error TS2304: Cannot find name ''prefix_map''.

    '
  timestamp: 1660334334
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var strings = splitter(string),\n        i = strings.length,\n\
    \        prefixes = [],\n        prefix;\n    \n    while (i--) {\n        prefix\
    \ = trim(strings[i]);\n        if (prefix.length > 0) {\n            prefixes.unshift(prefix);\n\
    \        }\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmprg7h52oo.ts(5,19): error TS2304: Cannot find name ''splitter''.

    ../../../../tmp/tmprg7h52oo.ts(11,18): error TS2304: Cannot find name ''trim''.

    '
  timestamp: 1660334333
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length < 2) {\n    return [];\n  }\n\n  if\
    \ (string.length < 4) {\n    return [string];\n  }\n\n  var prefixes = [];\n \
    \ var prefix = '';\n  var index = 0;\n\n  while (index < string.length) {\n  \
    \  if (string.charAt(index) !== string.charAt(index + 1) && string.charAt(index)\
    \ !== string.charAt(index + 1)) {\n      index += 2;\n      continue;\n    }\n\
    \n    if (string.charAt(index) !== string.charAt(index + 1) && string.charAt(index\
    \ + 1) !== string.charAt(index + 1)) {\n      index += 1;\n      continue;\n \
    \   }\n\n    if (string.charAt(index) !== string.charAt(index + 1)) {\n      break;\n\
    \    }\n\n    index += 1;\n    prefix += string.charAt(index);\n\n    if (string.length\
    \ > index + 1) {\n      index += 2;\n    } else {\n      index += 1;\n    }\n\n\
    \    prefixes.push(prefix);\n    prefix = '';\n  }\n\n  return prefixes;\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp_zkij7q0.js:43:12)\n    at Object.<anonymous> (/tmp/tmp_zkij7q0.js:46:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string_prefixes(string, false);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmphfh7lp6e.ts(5,12): error TS2304: Cannot find name ''string_prefixes''.

    '
  timestamp: 1660334333
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string.split(\"\").map(function (char) {\n \
    \       return char.startsWith(prefix) ? char : prefix + char;\n    });\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpr6jgcwfc.ts(6,32): error TS2304: Cannot find name ''prefix''.

    ../../../../tmp/tmpr6jgcwfc.ts(6,49): error TS2304: Cannot find name ''prefix''.

    '
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var result: string[] = [];\n\n    while (string.length\
    \ > 0) {\n        result.unshift(string.substring(0, string.length));\n      \
    \  string = string.substring(string.length);\n    }\n\n    return result;\n}\n\
    \ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpi7ndp775.js:16:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpi7ndp775.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var result: string[] = [];\n    for (let i = 0; i <=\
    \ string.length; i++) {\n        let prefix = string.slice(0, i);\n        result.push(prefix);\n\
    \    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmppku8bd77.js:15:12)\n   \
    \ at Object.<anonymous> (/tmp/tmppku8bd77.js:19:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return string.match(/(.)(?!.*\\1)/ig) || [];\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpse1dpq86.js:11:12)\n\
    \    at Object.<anonymous> (/tmp/tmpse1dpq86.js:14:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tconst prefix = []\n\tlet prefix_str = string\n\tconst\
    \ len = string.length\n\tfor (let i = 0; i < len; i++) {\n\t\tconst first_char\
    \ = string[i]\n\t\tfor (let j = 0; j < prefix.length; j++) {\n\t\t\tconst prefix_char\
    \ = prefix[j]\n\t\t\tif (prefix_char === first_char) {\n\t\t\t\tprefix.push(prefix_str)\n\
    \t\t\t\tbreak\n\t\t\t}\n\t\t}\n\t}\n\treturn prefix\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpfqvuvuze.js:24:12)\n    at Object.<anonymous> (/tmp/tmpfqvuvuze.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefix = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    const currentChar = string[i];\n    if (currentChar === currentChar.toUpperCase())\
    \ {\n      prefix.push(currentChar);\n    } else {\n      break;\n    }\n  }\n\
    \  return prefix;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp_tc9dnxa.js:21:12)\n    at Object.<anonymous> (/tmp/tmp_tc9dnxa.js:24:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    \n    //Create array that will be returned with all\
    \ prefixes\n    let prefixes: string[] = [];\n    \n    //Loop through all possible\
    \ prefixes and push to prefixes array\n    for (const prefix of prefixes) {\n\
    \        \n        //Create new string from input string\n        let inputString\
    \ = prefix + string;\n        \n        //If the input string starts with the\
    \ prefix string, return this prefix \n        if (inputString.startsWith(prefix))\
    \ {\n            \n            //Push prefix string and input string to prefixes\
    \ array\n            prefixes.push(prefix);\n            prefixes.push(inputString);\n\
    \            \n            //Exit for loop because prefix has been found\n   \
    \         break;\n        }\n    }\n    \n    //Return prefixes array\n    return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpridym5ci.js:27:12)\n    at Object.<anonymous> (/tmp/tmpridym5ci.js:30:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tvar prefixes = [];\n\tvar currentLength = string.length;\n\
    \tvar currentPrefix = '';\n\tfor (var i = 0; i < currentLength; ++i) {\n\t\tcurrentPrefix\
    \ = '' + currentPrefix + string.charAt(i);\n\t\tvar lastPrefixLength = currentPrefix.length;\n\
    \t\tvar index = currentPrefix.length;\n\t\twhile (index != lastPrefixLength) {\n\
    \t\t\tprefixes.push(currentPrefix);\n\t\t\tindex = currentPrefix.length;\n\t\t\
    \tcurrentPrefix = '' + currentPrefix + string.charAt(++index);\n\t\t}\n\t}\n\t\
    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpd51jj7px.js:24:12)\n    at Object.<anonymous> (/tmp/tmpd51jj7px.js:27:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334334
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return string.match(patterns.prefixes)?.join(\",\") ||\
    \ \"\";\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpt3e7bldg.ts(5,3): error TS2322: Type ''string'' is not
    assignable to type ''string[]''.

    ../../../../tmp/tmpt3e7bldg.ts(5,23): error TS2304: Cannot find name ''patterns''.

    '
  timestamp: 1660334334
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const result: string[] = [];\n  let index = 0;\n  while\
    \ (index < string.length) {\n    const character = string[index];\n    if (character.length\
    \ > result.length) {\n      result.push(character);\n    }\n    ++index;\n  }\n\
    \  return result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a'\n]\n\n\
    should loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpjdjkfdlv.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpjdjkfdlv.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a' ],\n\
    \  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334335
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefix_array: string[] = [];\n    let current:\
    \ string;\n    for (let i = 0; i < string.length; i++) {\n        current = string.substr(0,\
    \ i);\n        prefix_array.push(current);\n    }\n    return prefix_array;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpg3mj51ik.js:17:12)\n    at Object.<anonymous> (/tmp/tmpg3mj51ik.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334335
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefix_array = string.split(\"\").map(function(str)\
    \ {\n    return str[0];\n  });\n\n  return prefix_array;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp91tnlru5.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmp91tnlru5.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334335
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tlet result = \"\";\n\tlet i = 0;\n\twhile (i < string.length)\
    \ {\n\t\tresult += string.substring(0, i);\n\t\ti = i + 1;\n\t}\n\treturn result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpxs08m_ic.ts(11,2): error TS2322: Type ''string'' is
    not assignable to type ''string[]''.

    '
  timestamp: 1660334336
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let prefixes = [];\n\n    for (let i = 0; i < string.length;\
    \ i++) {\n        let prefix = string[i];\n        if (prefixes.indexOf(prefix)\
    \ === -1) {\n            prefixes.push(prefix);\n        }\n    }\n\n    return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp8u6zugr8.js:18:12)\n\
    \    at Object.<anonymous> (/tmp/tmp8u6zugr8.js:21:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334336
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const strings = string.split('');\n\n  return strings.length\n\
    \    ? strings.map(string => string.split('').reverse().join(''))\n    : strings;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpm52clfm3.js:14:12)\n\
    \    at Object.<anonymous> (/tmp/tmpm52clfm3.js:17:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334337
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  const strings = string.split('');\n\
    \  for (let i = 0; i < strings.length; ++i) {\n    const prefix = strings[i];\n\
    \    if (prefix.length > 0) {\n      prefixes.push(prefix);\n    }\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpqg6wgrx1.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqg6wgrx1.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334337
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let curr = \"\";\n\
    \  for (let i = 0; i < string.length; i++) {\n    curr = string.substr(i, 1);\n\
    \    if (curr === \"\") {\n      prefixes.push(curr);\n    }\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmp48kztq_s.js:19:12)\n    at Object.<anonymous> (/tmp/tmp48kztq_s.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334337
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    // Return an empty array if string is an empty string\n\
    \    if (string === \"\") {\n        return [];\n    }\n\n    // Keep the index\
    \ of each character (the index of the next character) in a separate array for\
    \ faster access\n    let char_index_array: string[] = [];\n\n    // Keep the prefix\
    \ for each character in a separate array for faster access\n    let char_prefix_array:\
    \ string[] = [];\n\n    // Split the input string into an array of characters\n\
    \    const char_array = string.split(\"\");\n\n    // Iterate through all characters\
    \ in the input string\n    for (let i = 0; i < char_array.length; i++) {\n   \
    \     // Find the index of the next character in the input string and add it as\
    \ the first index\n        char_index_array.push(char_array.indexOf(char_array[i],\
    \ i + 1));\n\n        // Keep a copy of the prefix for this character in a separate\
    \ array for faster access\n        char_prefix_array.push(char_array[i]);\n  \
    \  }\n\n    // Return an array of all prefixes from shortest to longest of the\
    \ input string\n    return char_prefix_array.slice(0, char_index_array.length);\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9dqqtb7x.ts(22,31): error TS2345: Argument of type ''number''
    is not assignable to parameter of type ''string''.

    '
  timestamp: 1660334337
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tvar prefixes = [];\n\tvar string = string.toLowerCase();\n\
    \tfor (var i = 0; i < string.length; i++) {\n\t\tprefixes.push(string.substring(0,\
    \ i));\n\t}\n\treturn prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpd9q85p9_.js:16:12)\n    at Object.<anonymous> (/tmp/tmpd9q85p9_.js:19:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334337
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let result: string[] = [];\n  let index = 0;\n  while\
    \ (index < string.length) {\n    let prefix = string[index];\n    if (result.indexOf(prefix)\
    \ === -1) {\n      result.push(prefix);\n    }\n    index++;\n  }\n  return result;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpfr7phiv9.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmpfr7phiv9.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var prefixes = new Array<string>();\n    for (var i\
    \ = 1; i < string.length; i++) {\n        prefixes.push(string.slice(0, i));\n\
    \    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpwi2t0cl3.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpwi2t0cl3.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return string\n    .split('')\n    .map((val: string,\
    \ i: number) => [i, val])\n    .filter((val: number) => val[0] < val[1].length)\n\
    \    .map((val: number) => string[val[1]])\n    .reverse();\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: "../../../../tmp/tmpb1x0raw5.ts(8,13): error TS2769: No overload matches\
    \ this call.\n  Overload 1 of 2, '(predicate: (value: (string | number)[], index:\
    \ number, array: (string | number)[][]) => value is (string | number)[], thisArg?:\
    \ any): (string | number)[][]', gave the following error.\n    Argument of type\
    \ '(val: number) => boolean' is not assignable to parameter of type '(value: (string\
    \ | number)[], index: number, array: (string | number)[][]) => value is (string\
    \ | number)[]'.\n      Types of parameters 'val' and 'value' are incompatible.\n\
    \        Type '(string | number)[]' is not assignable to type 'number'.\n  Overload\
    \ 2 of 2, '(predicate: (value: (string | number)[], index: number, array: (string\
    \ | number)[][]) => unknown, thisArg?: any): (string | number)[][]', gave the\
    \ following error.\n    Argument of type '(val: number) => boolean' is not assignable\
    \ to parameter of type '(value: (string | number)[], index: number, array: (string\
    \ | number)[][]) => unknown'.\n      Types of parameters 'val' and 'value' are "
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let current = \"\"\
    ;\n  for (let i = 0; i < string.length; i++) {\n    current = string.slice(0,\
    \ i);\n    if (current.length > 0) {\n      prefixes.push(current);\n    }\n \
    \ }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp9vbglg5h.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmp9vbglg5h.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: -5
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n\tlet ret: string[] = [];\n\tlet cur = string;\n\twhile\
    \ (cur !== null) {\n\t\tret.push(cur);\n\t\tcur = cur.substring(0, cur.length\
    \ - 1);\n\t}\n\treturn ret;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: Exception
  stderr: "\n\n#\n# Fatal error in , line 0\n# Fatal JavaScript invalid size error\
    \ 169220804\n#\n#\n#\n#FailureMessage Object: 0x7fffd4ac6540\n 1: 0x2b91d3dcd727\
    \  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n 2: 0x2b91d496228e\
    \ V8_Fatal(char const*, ...) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 3: 0x2b91d429cf8b  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 4: 0x2b91d442e9f0  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 5: 0x2b91d4436390  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 6: 0x2b91d46207db v8::internal::Runtime_GrowArrayElements(int, unsigned long*,\
    \ v8::internal::Isolate*) [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n\
    \ 7: 0x2b91d3f7f7f9  [/home/a.guha/.conda/envs/polyglot/bin/../lib/libnode.so.108]\n"
  stdout: ''
  timestamp: 1660334341
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0;\
    \ i < string.length; ++i) {\n        prefixes.push(string.slice(0, i));\n    }\n\
    \    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmp4a6_4_f_.js:15:12)\n    at Object.<anonymous> (/tmp/tmp4a6_4_f_.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return string.split(/[ab]/).map(\n        s => s.slice(0,\
    \ string.length),\n    );\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp5ccy4u_f.js:10:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp5ccy4u_f.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string === \"\") return [];\n\n  const prefixes =\
    \ new Set<string>();\n  for (let i = 0; i < string.length; i++) {\n    const char\
    \ = string[i];\n    let prefix_of_char = char.slice(0, i);\n    if (prefix_of_char\
    \ === char) prefix_of_char = char;\n    prefixes.add(prefix_of_char);\n  }\n \
    \ return Array.from(prefixes);\n}\n\ndeclare var require: any;\nconst assert =\
    \ require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpmlxct5gr.js:21:12)\n\
    \    at Object.<anonymous> (/tmp/tmpmlxct5gr.js:24:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length === 0) {\n        return [];\n  \
    \  }\n    return all_prefixes(string.substr(1)) + [string[0]];\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp2mqpjfpa.ts(8,12): error TS2365: Operator ''+'' cannot
    be applied to types ''string[]'' and ''string[]''.

    '
  timestamp: 1660334338
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return string_prefixes(string, false, 0);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpcrek_lye.ts(5,10): error TS2304: Cannot find name ''string_prefixes''.

    '
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let result: string[] = [];\n    let i = 0;\n    while\
    \ (i < string.length) {\n        if (result.indexOf(string[i]) === -1) {\n   \
    \         result.push(string[i]);\n        }\n        i++;\n    }\n    return\
    \ result;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpjnig74jh.js:19:12)\n\
    \    at Object.<anonymous> (/tmp/tmpjnig74jh.js:22:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefixes = [],\n      i = 0;\n\n  while (string.length\
    \ >= (i = prefixes.push(string.substring(0, i))) && i < string.length);\n\n  return\
    \ prefixes.reverse();\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp4q9969vq.js:13:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp4q9969vq.js:17:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  let s = string.split('');\n\
    \  let i = 0;\n  while (i < s.length) {\n    prefixes.push(s[i++]);\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpb550345i.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpb550345i.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334338
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const chars      = string.split('');\n  const prefixes\
    \   = [];\n  let prefix      = \"\";\n  let prefixSize = 0;\n\n  for (let i =\
    \ 0; i < chars.length; i++) {\n    if (chars[i].match(/[a-zA-Z]/)) {\n      prefix\
    \ += chars[i];\n      prefixSize += 1;\n    } else {\n      if (prefixSize > prefix.length)\
    \ {\n        prefixes.push(prefix);\n        prefix = '';\n        prefixSize\
    \ = 1;\n      }\n    }\n  }\n  if (prefix.length > 0) {\n    prefixes.push(prefix);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpk470fi8w.js:31:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpk470fi8w.js:34:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334339
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefix = new Array<string>();\n  let currentLength\
    \ = string.length;\n  while (currentLength >= 0) {\n    prefix.push(string.substr(0,\
    \ currentLength));\n    currentLength = currentLength - 1;\n  }\n  return prefix;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpegzfhkt9.js:16:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpegzfhkt9.js:20:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334340
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = new Array<string>();\n  let i = 1;\n\
    \  for (let len = string.length; i < len; i++) {\n    const prefix = string.substr(0,\
    \ i);\n    prefixes.push(prefix);\n  }\n  return prefixes;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'as',\n\
    \  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmped5xanci.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmped5xanci.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'as',\
    \ 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334340
- exit_code: -1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var prefixes = [];\n  var s = string;\n  while (s.length\
    \ >= 0) {\n    s = s.substr(0, s.length);\n    prefixes.unshift(s);\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660334357
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefix_lengths = string.split(\"_\").map((str)\
    \ => str.length);\n  return prefix_lengths.filter((len, i) => prefix_lengths[i]\
    \ === len).map((prefix) => prefix.substr(0, 1));\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnb98npou.ts(6,94): error TS2339: Property ''substr''
    does not exist on type ''number''.

    '
  timestamp: 1660334341
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.substring(0, i));\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpp2jccodl.js:15:12)\n    at Object.<anonymous> (/tmp/tmpp2jccodl.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334341
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    if (string.length <= 1) {\n        return [];\n   \
    \ }\n\n    const prefixes: string[] = [];\n    let i = 0;\n    while (string.length\
    \ > i) {\n        prefixes.push(string.slice(0, i));\n        i = string.slice(i,\
    \ i + 1).length;\n    }\n    return prefixes;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: Exception
  stderr: "/tmp/tmp6ptizxby.js:11\n        prefixes.push(string.slice(0, i));\n  \
    \               ^\n\nRangeError: Invalid array length\n    at Array.push (<anonymous>)\n\
    \    at all_prefixes (/tmp/tmp6ptizxby.js:11:18)\n    at test (/tmp/tmp6ptizxby.js:20:22)\n\
    \    at Object.<anonymous> (/tmp/tmp6ptizxby.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\n\
    \nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334348
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let shortest = string;\n    let longest = \"\";\n\n\
    \    for (let i = 0; i < shortest.length; i++) {\n        if (shortest.substring(0,\
    \ i).length >= longest.length) {\n            longest = shortest.substring(0,\
    \ i);\n        }\n    }\n\n    const prefixes: string[] = [];\n    for (let i\
    \ = 0; i < shortest.length; i++) {\n        if (shortest.substring(0, i).length\
    \ >= longest.length) {\n            prefixes.push(shortest.substring(0, i));\n\
    \        }\n    }\n\n    return prefixes;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfg'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmplr8t_lwq.js:24:12)\n    at Object.<anonymous>\
    \ (/tmp/tmplr8t_lwq.js:27:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfg'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334341
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let len = string.length;\n    if (len === 0) {\n  \
    \      return [];\n    }\n\n    let prefixes = [];\n    let prefix_char;\n\n \
    \   for (let i = 0; i < len; i++) {\n        prefix_char = string[i];\n      \
    \  prefixes.push(prefix_char);\n    }\n\n    return prefixes;\n}\n</code>\n<|/\
    \ a dscore=1 tags=string,algorithm,prefix,javascript,permutation |>\n<| c |>\n\
    Thank you for the great solution! I was wondering if there's a way to do it without\
    \ recursion but this gives me some ideas on how to solve it.\n<|/ c |>\n<| c |>\n\
    I added a solution without recursion.\n<|/ c |>\n<| c |>\nHi, I added an example\
    \ test case, and I ran some benchmarks comparing these two solutions, and I noticed\
    \ that your code is a lot faster than mine. Could you give me some more hints\
    \ as to why mine is faster?\n<|/ c |>\n<| c |>\nI think I figured it out. Your\
    \ code is faster than mine because mine builds up a long string in the form of\
    \ prefixes. It then just returns it at the end. While yours has to call `string.length`\
    \ every time it needs a prefix. Mine does that every time, so it runs faster than\
    \ yours because it doesn't have to keep rebuilding the prefix. Sorry if this was\
    \ unclear. Would you mind if I edited my answer to add your test cases?\n<|/ c\
    \ |>\n<| a |>\n<code>\nconst input = \"ABC\";\n\nconst prefixes = [];\nlet lastChar\
    \ = \"\";\n\nfor (let i = 0; i < input.length; i++) {\n  lastChar = input[i];\n\
    \n  if (lastChar.length > 0) {\n    for (let j = 0; j < lastChar.length; j++)\
    \ {\n      prefixes.push(lastChar.slice(0, j));\n    }\n  }\n}\n\nconsole.log(prefixes);</code>\n\
    <|/ a dscore=0 tags=string,algorithm,prefix,javascript,permutation |>\n<| a |>\n\
    The other answers show how to iterate through the string. Here's a solution using\
    \ recursion without iteration.\n<code>\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpjmkmges8.ts(20,2): error TS1110: Type expected.

    ../../../../tmp/tmpjmkmges8.ts(20,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpjmkmges8.ts(21,2): error TS1109: Expression expected.

    ../../../../tmp/tmpjmkmges8.ts(21,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpjmkmges8.ts(22,2): error TS1109: Expression expected.

    ../../../../tmp/tmpjmkmges8.ts(22,7): error TS1109: Expression expected.

    ../../../../tmp/tmpjmkmges8.ts(23,7): error TS1005: '';'' expected.

    ../../../../tmp/tmpjmkmges8.ts(23,15): error TS1005: ''('' expected.

    ../../../../tmp/tmpjmkmges8.ts(23,19): error TS1005: '';'' expected.

    ../../../../tmp/tmpjmkmges8.ts(23,25): error TS1005: '';'' expected.

    ../../../../tmp/tmpjmkmges8.ts(23,35): error TS1005: '')'' expected.

    ../../../../tmp/tmpjmkmges8.ts(23,37): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpjmkmges8.ts(23,41): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpjmkmges8.ts(23,54): error'
  timestamp: 1660334341
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes: string[] = [];\n  for (let i = 0; i <=\
    \ string.length; i++) {\n    prefixes.push(string.substr(0, i));\n  }\n  return\
    \ prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpz0tvi1fs.js:14:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpz0tvi1fs.js:18:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334341
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const _prefix = new Set<string>();\n  for (let i = 0;\
    \ i < string.length; i++) {\n    _prefix.add(string.substring(0, i));\n  }\n \
    \ return Array.from(_prefix);\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpf017t3vc.js:15:12)\n    at Object.<anonymous> (/tmp/tmpf017t3vc.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334341
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return string_prefixes(string, 1);\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9qywz8ep.ts(5,10): error TS2304: Cannot find name ''string_prefixes''.

    '
  timestamp: 1660334341
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result: string[] = [];\n\n    for (const prefix\
    \ of string.split('')) {\n        if (string.length >= prefix.length) {\n    \
    \        result.push(prefix);\n        }\n    }\n\n    return result;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpgxtcovyn.js:17:12)\n\
    \    at Object.<anonymous> (/tmp/tmpgxtcovyn.js:20:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334341
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result: Array<string> = [];\n    for (let i =\
    \ 0; i < string.length; i++) {\n        result.push(string.substring(0, i));\n\
    \    }\n    return result;\n}\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpthqsje4a.js:15:12)\n    at Object.<anonymous> (/tmp/tmpthqsje4a.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334342
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefix = new Set<string>();\n    string\n   \
    \     .split('')\n        .forEach((s) => prefix.add(s));\n    return Array.from(prefix);\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpl9kp_rbj.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpl9kp_rbj.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334342
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let prefixes: string[] = []\n    let s = string\n \
    \   while (s.length !== 0) {\n        let last = s.charAt(s.length - 1)\n    \
    \    if (last !== '*') {\n            prefixes = [last] + prefixes\n         \
    \   s = s.substring(0, s.length - 1)\n        } else {\n            s = s.substring(0,\
    \ s.length - 1)\n            prefixes = prefixes.concat(all_prefixes(s))\n   \
    \     }\n    }\n    return prefixes\n}\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmped09cakb.ts(10,24): error TS2365: Operator ''+'' cannot
    be applied to types ''string[]'' and ''string[]''.

    '
  timestamp: 1660334342
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var current: string, result: string[] = [];\n\n  for\
    \ (var i = 0; i <= string.length; i++) {\n    current = string.slice(0, i);\n\
    \    result.push(current);\n  }\n\n  return result;\n}\n</code>\n<|/ a |>\n<|\
    \ a |>\nYou can do something like this. Use a map to store the characters and\
    \ their count in the input string.\n<code>\nlet input = \"abbccc\";\nlet map =\
    \ new Map();\n\ninput.split(\"\").reduce((prev, curr) => {\n  map.set(curr, map.has(curr)\
    \ ? map.get(curr) + 1 : 1);\n  if (map.has(curr)) {\n    map.set(curr, map.get(curr)\
    \ - 1);\n  } else {\n    map.set(curr, 1);\n  }\n  prev[curr] = map.get(curr);\n\
    \  return prev;\n}, {});\n\nlet result = Array.from(map.keys());\nconsole.log(result);\n\
    \n</code>\n<|/ a tags=javascript dscore=0 |>\n<| a dscore=0 tags=javascript |>\n\
    <code>\nconst arr = [\n  \"abc\",\n  \"bbb\",\n  \"abc\",\n  \"ccc\",\n  \"abc\"\
    ,\n  \"abc\",\n  \"ccc\",\n  \"ccc\",\n  \"ccc\",\n  \"ccc\"\n]\n\nconst prefixes\
    \ = (str) => {\n  const charsCount = str.split('').reduce((count, char) => {\n\
    \    count[char] = (count[char] || 0) + 1;\n    return count;\n  }, {});\n\n \
    \ let prefix = {};\n\n  for (const char in charsCount) {\n    prefix[char] = char;\n\
    \    if (charsCount[char] > 0) {\n      prefix[char] = char;\n    }\n  }\n\n \
    \ const result = Object.keys(prefix)\n    .filter((char) => {\n      return prefix[char]\
    \ > 0;\n    });\n\n  return result;\n}\n\nconsole.log(prefixes(arr));</code>\n\
    <|/ a |>\n<| a |>\n<code>\nconst strs = ['abc', 'bbb', 'abc', 'ccc', 'abc', 'abc',\
    \ 'ccc', 'ccc', 'ccc', 'ccc'];\nconst strsSorted = strs.sort( (a, b) => b.length\
    \ - a.length );\nconst strsSorted2 = strsSorted.sort((a, b) => a.length - b.length);\n\
    const strsSorted3 = strsSorted.slice(1, strsSorted.length - 1);\n\nconsole.log(strsSorted);\n\
    console.log(strsSorted2);\nconsole.log(strsSorted3);</code>\n<|/ a dscore=0 tags=javascript\
    \ |>\n<| a |>\nHere's a solution that uses String.prototype.includes:\n\n<code>\n\
    const prefixes = (str) => {\n  const charsCount = str.split('').reduce((count,\
    \ char) => {\n    count[char] = (count[char] || 0) + 1;\n    return \ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpoous_x5b.ts(14,2): error TS1110: Type expected.

    ../../../../tmp/tmpoous_x5b.ts(14,3): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpoous_x5b.ts(15,2): error TS1109: Expression expected.

    ../../../../tmp/tmpoous_x5b.ts(15,4): error TS1161: Unterminated regular expression
    literal.

    ../../../../tmp/tmpoous_x5b.ts(16,2): error TS1109: Expression expected.

    ../../../../tmp/tmpoous_x5b.ts(16,7): error TS1109: Expression expected.

    ../../../../tmp/tmpoous_x5b.ts(17,5): error TS1005: '';'' expected.

    ../../../../tmp/tmpoous_x5b.ts(17,12): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpoous_x5b.ts(17,22): error TS1005: ''while'' expected.

    ../../../../tmp/tmpoous_x5b.ts(17,27): error TS1005: '')'' expected.

    ../../../../tmp/tmpoous_x5b.ts(17,37): error TS1005: '';'' expected.

    ../../../../tmp/tmpoous_x5b.ts(17,39): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpoous_x5b.ts(17,43): error TS1434: Unexpected keyword or identifier.

    ../../../../tmp/tmpo'
  timestamp: 1660334341
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes = [];\n  let prefix: string;\n  let remainder:\
    \ string;\n  let suffix_length: number = 0;\n\n  // If string has no prefixes,\
    \ just return empty array\n  if (string.length < 2) {\n    return prefixes;\n\
    \  }\n\n  // First char must be prefix\n  prefix = string.substr(0, 1);\n\n  //\
    \ Append first char to prefixes\n  prefixes.push(prefix);\n\n  // Iterate through\
    \ remaining string and add prefix if it doesn't already end in suffix\n  remainder\
    \ = string.substr(1);\n  for (let index = 1; index < remainder.length; index++)\
    \ {\n    suffix_length += remainder[index].length;\n    if (suffix_length ===\
    \ 1) {\n      suffix = remainder[index];\n    } else if (suffix_length === 2)\
    \ {\n      suffix = \"ab\";\n    } else {\n      suffix = \"ab\" + remainder[index].substr(0,\
    \ 1);\n    }\n\n    prefixes.push(prefix + suffix);\n  }\n\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpnprju25i.ts(26,7): error TS2304: Cannot find name ''suffix''.

    ../../../../tmp/tmpnprju25i.ts(28,7): error TS2304: Cannot find name ''suffix''.

    ../../../../tmp/tmpnprju25i.ts(30,7): error TS2304: Cannot find name ''suffix''.

    ../../../../tmp/tmpnprju25i.ts(33,28): error TS2304: Cannot find name ''suffix''.

    '
  timestamp: 1660334342
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const inputArray: string[] = string.split('');\n  \
    \  const prefixArray: string[] = [];\n    let longestPrefix: string | undefined\
    \ = undefined;\n    let shortestPrefix: string | undefined = undefined;\n    inputArray.forEach(val\
    \ => {\n        if (shortestPrefix === undefined && longestPrefix === undefined)\
    \ {\n            shortestPrefix = val;\n        } else if (longestPrefix === undefined)\
    \ {\n            longestPrefix = val;\n        } else if (shortestPrefix === undefined\
    \ && val.length === longestPrefix.length) {\n            shortestPrefix = val;\n\
    \        }\n    });\n    if (longestPrefix !== undefined && longestPrefix.length\
    \ > 0) {\n        prefixArray.push(longestPrefix);\n    }\n    if (shortestPrefix\
    \ !== undefined && shortestPrefix.length > 0) {\n        prefixArray.push(shortestPrefix);\n\
    \    }\n    return prefixArray;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  's',\n  'a'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpzqz5cf_y.js:32:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpzqz5cf_y.js:35:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 's', 'a'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334342
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    // Create an empty array to hold all the prefixes that\
    \ will be returned\n    const prefixes: string[] = [];\n\n    // Loop through\
    \ each character of the string\n    for (let i = 0; i < string.length; i++) {\n\
    \        // Get the current character at the current index\n        const char\
    \ = string[i];\n\n        // If the current character is not the first character\n\
    \        if (i !== 0) {\n            // Add a prefix to the prefixes array for\
    \ the current character and the previous character\n            prefixes.push(string[i\
    \ - 1] + char);\n        }\n    }\n\n    // Return the array of prefixes\n   \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'as',\n \
    \ 'sd',\n  'df',\n  'fg',\n  'gh'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpqa882h80.js:24:12)\n\
    \    at Object.<anonymous> (/tmp/tmpqa882h80.js:27:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'as', 'sd',\
    \ 'df', 'fg', 'gh' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334343
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length == 0) {\n    return [];\n  }\n\n  const\
    \ result = new Array<string>();\n\n  for (let i = 0; i < string.length; i++) {\n\
    \    result.push(string.slice(0, i));\n  }\n\n  return result;\n}\n\ndeclare var\
    \ require: any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n\
    \  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmptgz27co3.js:18:12)\n    at Object.<anonymous> (/tmp/tmptgz27co3.js:21:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334343
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var prefixes: string[] = [];\n    var prefix: string;\n\
    \    for (var i = 0, l = string.length; i < l; i++) {\n        prefix = string.slice(0,\
    \ i);\n        if (all_prefixes(prefix, prefixes)) {\n            continue;\n\
    \        }\n        prefixes.push(prefix);\n    }\n    return prefixes;\n}\n\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppkk196em.ts(9,34): error TS2554: Expected 1 arguments,
    but got 2.

    '
  timestamp: 1660334343
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefix = [];\n    for (let i = 0; i < string.length;\
    \ i++) {\n        if (string.substring(0, i).toLowerCase() === string.toLowerCase())\
    \ {\n            prefix.push(string.substring(0, i));\n        }\n    }\n    return\
    \ prefix;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpuxn4vs_z.js:17:12)\n    at Object.<anonymous> (/tmp/tmpuxn4vs_z.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334344
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    string = string.trim().toLowerCase();\n\n    if (string.length\
    \ === 0) {\n        return [];\n    }\n\n    let maxPrefixLength = string.length\
    \ - 1;\n    let prefixes: string[] = [];\n    let currentPrefix: string;\n   \
    \ let currentPrefixLength: number;\n    let stringLower: string;\n    let stringUpper:\
    \ string;\n\n    for (let i = 0; i < string.length; i += 1) {\n        stringLower\
    \ = string.charAt(i).toLowerCase();\n        stringUpper = stringLower.toUpperCase();\n\
    \n        currentPrefixLength = i - maxPrefixLength;\n        if (stringLower\
    \ === stringUpper && currentPrefixLength === 0) {\n            prefixes = [currentPrefix];\n\
    \            break;\n        }\n\n        currentPrefix = string.substr(0, i +\
    \ 1);\n        if (currentPrefixLength === 0) {\n            prefixes = [currentPrefix];\n\
    \            break;\n        }\n        if (currentPrefixLength >= string.length\
    \ / 2) {\n            prefixes = [currentPrefix + stringLower];\n            maxPrefixLength\
    \ = i + 1;\n            break;\n        }\n    }\n\n    return prefixes;\n}\n\
    declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpmglmd_j3.js:40:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpmglmd_j3.js:43:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334344
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const result: string[] = [];\n    prefixes(string,\
    \ result, \"\", 1);\n    return result;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpmqjazli_.ts(6,5): error TS2304: Cannot find name ''prefixes''.

    '
  timestamp: 1660334344
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes = new Array<string>();\n  let prefix = \"\
    \";\n  let index = -1;\n\n  while (++index < string.length) {\n    prefix = string.substr(0,\
    \ index);\n\n    // Add new prefix to array and remove old prefix from string\n\
    \    prefixes.push(prefix);\n    string = string.substr(index + 1);\n  }\n\n \
    \ return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  's',\n\
    \  'fg'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n\
    \  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpe0qsq99s.js:20:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpe0qsq99s.js:23:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 's',\
    \ 'fg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334344
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  var result: string[] = [];\n  var i, j, k;\n\n  var max_len\
    \ = string.length;\n  var prefixes = [];\n  for (i = 0, j = 0, k = 0; i < max_len;\
    \ i = j, j = k, k++) {\n    var char = string[i];\n    if (char === char.toUpperCase())\
    \ {\n      j++;\n    } else if (char === char.toLowerCase()) {\n      k++;\n \
    \   }\n    if (i === j) {\n      prefixes.push(string[i]);\n    }\n  }\n  for\
    \ (i = j = 0; i < max_len; i = j, j = k++) {\n    var char = string[i];\n    if\
    \ (char === char.toUpperCase()) {\n      j++;\n    } else if (char === char.toLowerCase())\
    \ {\n      k++;\n    }\n    if (i === j) {\n      result.push(string[i]);\n  \
    \  }\n  }\n  for (i = j = 0; i < max_len; i = j, j = k++) {\n    var char = string[i];\n\
    \    if (char === char.toUpperCase()) {\n      j++;\n    } else if (char === char.toLowerCase())\
    \ {\n      k++;\n    }\n    if (i === j) {\n      prefixes.push(string[i]);\n\
    \    }\n  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  'a'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpz9zu3epn.js:51:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpz9zu3epn.js:54:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 'a'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334345
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const array = string.split('');\n    let prefix = '';\n\
    \    for (let i = 0; i < array.length; ++i) {\n        const character = array[i];\n\
    \        const new_prefix = prefix + character;\n        if (new_prefix.length\
    \ < prefix.length) {\n            prefix = new_prefix;\n        }\n    }\n   \
    \ const strings = prefix.split('');\n    strings.splice(0, 0, prefix);\n    strings.splice(strings.length\
    \ - 1, 0, string);\n    return strings;\n}\n\ndeclare var require: any;\nconst\
    \ assert = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  ''\n\
    ]\n\nshould loosely deep-equal\n\n[]\n    at test (/tmp/tmpnwpew9zm.js:22:12)\n\
    \    at Object.<anonymous> (/tmp/tmpnwpew9zm.js:26:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334345
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [\"\"];\n  let s = string;\n  while\
    \ (s.length !== 0) {\n    const c = s.charAt(0);\n    prefix = prefixes.filter(p\
    \ => p === \"\").length ? \"\" : prefix;\n    prefixes.push(c);\n    s = s.substr(1);\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp6f48fua4.ts(9,5): error TS2552: Cannot find name ''prefix''.
    Did you mean ''prefixes''?

    ../../../../tmp/tmp6f48fua4.ts(9,59): error TS2552: Cannot find name ''prefix''.
    Did you mean ''prefixes''?

    '
  timestamp: 1660334345
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    for (let i = 0;\
    \ i < string.length; i++) {\n        prefixes.push(string.substring(0, i));\n\
    \    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpoiw3u6n5.js:15:12)\n    at Object.<anonymous> (/tmp/tmpoiw3u6n5.js:18:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334345
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return _all_prefixes(string, '');\n}\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmpc_ukyy5x.ts(5,10): error TS2552: Cannot find name ''_all_prefixes''.
    Did you mean ''all_prefixes''?

    '
  timestamp: 1660334345
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    var array: string[] = [];\n\n    // Create an array\
    \ to hold all prefixes in the input string\n    var prefixes: string[] = string.split(\"\
    \");\n    prefixes.sort();\n\n    // Loop through all prefixes and add them to\
    \ our array\n    for (var prefix: string[] in prefixes) {\n        array.push(prefixes[prefix]);\n\
    \    }\n    return array;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmp9l6ej9je.ts(12,14): error TS2404: The left-hand side
    of a ''for...in'' statement cannot use a type annotation.

    '
  timestamp: 1660334345
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes = [\"\"];\n    let str: string = string.trim();\n\
    \    while (str.length > 0) {\n        str = str.substring(0, str.length);\n \
    \       const last = prefixes[prefixes.length - 1];\n        if (last && last.length\
    \ + str.length > string.length) {\n            prefixes[prefixes.length - 1] =\
    \ last + str;\n        } else {\n            prefixes.push(str);\n        }\n\
    \    }\n    return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmp6ozs0b3l.js:22:12)\n   \
    \ at Object.<anonymous> (/tmp/tmp6ozs0b3l.js:26:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334345
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const result = new Array<string>();\n  let prefix = \"\
    \";\n  for (let i = 0; i < string.length; i++) {\n    prefix = prefix + string[i];\n\
    \    result.push(prefix);\n  }\n  return result;\n}\n\ndeclare var require: any;\n\
    const assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334345
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const prefixes: string[] = [];\n    let stringPrefix\
    \ = string;\n    let minLength = stringPrefix.length;\n    while (stringPrefix.length\
    \ > 0) {\n        minLength = Math.min(stringPrefix.length,\n            minLength);\n\
    \        prefixes.push(stringPrefix.substr(0, minLength));\n        stringPrefix\
    \ = stringPrefix.substr(minLength);\n    }\n    return prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'asdfgh'\n\
    ]\n\nshould loosely deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n\
    \  'asdfgh'\n]\n    at test (/tmp/tmpkky2lz8r.js:19:12)\n    at Object.<anonymous>\
    \ (/tmp/tmpkky2lz8r.js:22:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'asdfgh'\
    \ ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator:\
    \ 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334345
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let result: string[] = [];\n    let prefixes: string[]\
    \ = string.split(\"\").sort();\n    for (let i = 0; i < prefixes.length; i++)\
    \ {\n        let j = i;\n        while (prefixes[i] !== prefixes[j]) {\n     \
    \       result.push(prefixes[j]);\n            j = prefixes[j].length;\n     \
    \   }\n    }\n    return result;\n}\n\ndeclare var require: any;\nconst assert\
    \ = require('node:assert');\n\n\nfunction test() {\n  let candidate = all_prefixes;\n\
    \  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"\
    ),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmpzi8gljrx.js:20:12)\n    at Object.<anonymous> (/tmp/tmpzi8gljrx.js:23:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334345
- exit_code: 2
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    return all_prefixes_from_string(string);\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: SyntaxError
  stderr: ''
  stdout: '../../../../tmp/tmppsdt4d47.ts(5,12): error TS2304: Cannot find name ''all_prefixes_from_string''.

    '
  timestamp: 1660334345
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    const _prefixes: string[] = [];\n    let _prefix: string;\n\
    \    for (let i = 0; i < string.length; i++) {\n        _prefix = string.substring(0,\
    \ i);\n        _prefixes.push(_prefix);\n    }\n    return _prefixes;\n}\n\ndeclare\
    \ var require: any;\nconst assert = require('node:assert');\n\n\nfunction test()\
    \ {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n\
    \  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"\
    asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\",\
    \ \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmpdto57vxy.js:17:12)\n    at Object.<anonymous> (/tmp/tmpdto57vxy.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334346
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  let prefix: string;\n\
    \  for (let i = 1; i < string.length; i++) {\n    prefix = string.substring(0,\
    \ i);\n    if (string[i] === string[0]) {\n      prefixes.push(prefix);\n    }\n\
    \  }\n  return prefixes;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[]\n\nshould loosely\
    \ deep-equal\n\n[\n  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n\
    ]\n    at test (/tmp/tmppolqyhqr.js:19:12)\n    at Object.<anonymous> (/tmp/tmppolqyhqr.js:22:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [],\n  expected:\
    \ [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh' ],\n  operator: 'deepEqual'\n\
    }\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334346
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let all: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    all.push(string[i]);\n  }\n  return all;\n}\n\ndeclare var require:\
    \ any;\nconst assert = require('node:assert');\n\n\nfunction test() {\n  let candidate\
    \ = all_prefixes;\n  assert.deepEqual(candidate(\"\"),[]);\n  assert.deepEqual(candidate(\"\
    asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"\
    WWW\"),[\"W\", \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmpvcz5h7tv.js:15:12)\n\
    \    at Object.<anonymous> (/tmp/tmpvcz5h7tv.js:18:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334346
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n    let prefix = [];\n    let i;\n    for (i = 0; i < string.length;\
    \ ++i) {\n        const ch = string.substr(i, 1);\n        prefix.push(ch);\n\
    \        if (ch === '/') {\n            break;\n        }\n    }\n    return prefix;\n\
    }\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  'a',\n  's',\n\
    \  'd',\n  'f',\n  'g',\n  'h'\n]\n\nshould loosely deep-equal\n\n[\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test (/tmp/tmp5jk1bu15.js:20:12)\n\
    \    at Object.<anonymous> (/tmp/tmp5jk1bu15.js:23:1)\n    at Module._compile\
    \ (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n\
    \    at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ 'a', 's',\
    \ 'd', 'f', 'g', 'h' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg', 'asdfgh'\
    \ ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334347
- exit_code: 0
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  let prefixes: string[] = [];\n  for (let i = 0; i < string.length;\
    \ i++) {\n    prefixes.push(string.substr(0, i + 1));\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660334347
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  if (string.length <= 1) return [];\n  const res = [];\n\
    \  for (let i = 0; i < string.length; i++) {\n    res.push(string.slice(0, i));\n\
    \  }\n  return res;\n}\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\
    \n\nfunction test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\
    \"),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"\
    asdf\", \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\"\
    , \"WW\", \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  '',\n  'a',\n\
    \  'as',\n  'asd',\n  'asdf',\n  'asdfg'\n]\n\nshould loosely deep-equal\n\n[\n\
    \  'a',\n  'as',\n  'asd',\n  'asdf',\n  'asdfg',\n  'asdfgh'\n]\n    at test\
    \ (/tmp/tmph_rem361.js:17:12)\n    at Object.<anonymous> (/tmp/tmph_rem361.js:20:1)\n\
    \    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n    at Module._extensions..js\
    \ (node:internal/modules/cjs/loader:1174:10)\n    at Module.load (node:internal/modules/cjs/loader:998:32)\n\
    \    at Module._load (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '', 'a',\
    \ 'as', 'asd', 'asdf', 'asdfg' ],\n  expected: [ 'a', 'as', 'asd', 'asdf', 'asdfg',\
    \ 'asdfgh' ],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334347
- exit_code: -1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  const prefixes = [];\n  let maxLength = 0;\n  for (let\
    \ i = 0; i < string.length; i++) {\n    let currentChar = string[i];\n    let\
    \ currentPrefix = \"\";\n    while (i > 0) {\n      const currentChar = string[i\
    \ - 1];\n      if (currentChar === currentPrefix) {\n        break;\n      }\n\
    \      currentPrefix = currentChar;\n      i--;\n    }\n    maxLength = i > maxLength\
    \ ? i : maxLength;\n    prefixes.unshift(currentPrefix);\n  }\n  return prefixes;\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660334365
- exit_code: 1
  program: "//Return array of all prefixes from shortest to longest of the input string\n\
    // >>> all_prefixes(\"abc\")\n// [\"a\", \"ab\", \"abc\"]\nfunction all_prefixes(string:\
    \ string): string[] {\n  return string.split(\".\").map((s) => s.slice(0, -1));\n\
    }\n\ndeclare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
    \ test() {\n  let candidate = all_prefixes;\n  assert.deepEqual(candidate(\"\"\
    ),[]);\n  assert.deepEqual(candidate(\"asdfgh\"),[\"a\", \"as\", \"asd\", \"asdf\"\
    , \"asdfg\", \"asdfgh\"]);\n  assert.deepEqual(candidate(\"WWW\"),[\"W\", \"WW\"\
    , \"WWW\"]);\n}\n\ntest();"
  status: AssertionError
  stderr: "node:assert:124\n  throw new AssertionError(obj);\n  ^\n\nAssertionError\
    \ [ERR_ASSERTION]: Expected values to be loosely deep-equal:\n\n[\n  ''\n]\n\n\
    should loosely deep-equal\n\n[]\n    at test (/tmp/tmpi3n_d4gz.js:10:12)\n   \
    \ at Object.<anonymous> (/tmp/tmpi3n_d4gz.js:14:1)\n    at Module._compile (node:internal/modules/cjs/loader:1120:14)\n\
    \    at Module._extensions..js (node:internal/modules/cjs/loader:1174:10)\n  \
    \  at Module.load (node:internal/modules/cjs/loader:998:32)\n    at Module._load\
    \ (node:internal/modules/cjs/loader:839:12)\n    at Function.executeUserEntryPoint\
    \ [as runMain] (node:internal/modules/run_main:81:12)\n    at node:internal/main/run_main_module:17:47\
    \ {\n  generatedMessage: true,\n  code: 'ERR_ASSERTION',\n  actual: [ '' ],\n\
    \  expected: [],\n  operator: 'deepEqual'\n}\n\nNode.js v18.7.0\n"
  stdout: ''
  timestamp: 1660334347

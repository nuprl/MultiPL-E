name: HumanEval_135_can_arrange
language: ts
prompt: "//Create a function which returns the largest index of an element which\n\
  // is not greater than or equal to the element immediately preceding it. If\n//\
  \ no such element exists then return -1. The given array will not contain\n// duplicate\
  \ values.\n// Examples:\n// >>> can_arrange([1, 2, 4, 3, 5])\n// 3\n// >>> can_arrange([1,\
  \ 2, 3])\n// -1\nfunction can_arrange(arr: number[]): number {\n"
tests: "declare var require: any;\nconst assert = require('node:assert');\n\n\nfunction\
  \ test() {\n  let candidate = can_arrange;\n  assert.deepEqual(candidate([1, 2,\
  \ 4, 3, 5]),3);\n  assert.deepEqual(candidate([1, 2, 4, 5]),-1);\n  assert.deepEqual(candidate([1,\
  \ 4, 2, 5, 6, 7, 8, 9, 10]),2);\n  assert.deepEqual(candidate([4, 8, 5, 7, 3]),4);\n\
  \  assert.deepEqual(candidate([]),-1);\n}\n\ntest();"
completions: ["    let largest = 0;\n    let candidate = 0;\n    for (let i = 1; i\
    \ < arr.length; i++) {\n        if (arr[i] > arr[largest]) {\n            candidate\
    \ = i;\n            largest = candidate;\n        }\n    }\n    return largest\
    \ === candidate\n        ? -1\n        : arr[largest];\n}\n", "  let maxIndex\
    \ = -Infinity;\n  let maxValue = arr[0];\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] > maxValue) {\n      maxValue = arr[i];\n      maxIndex =\
    \ i;\n    }\n  }\n  return maxIndex;\n}\n", "  if (arr.length === 0) {\n    return\
    \ -1;\n  }\n\n  let largestIndex = 0;\n  let currentIndex = arr.length - 1;\n\n\
    \  while (currentIndex >= 0) {\n    if (arr[currentIndex] > arr[largestIndex])\
    \ {\n      largestIndex = currentIndex;\n    } else {\n      currentIndex--;\n\
    \    }\n  }\n\n  return largestIndex;\n}\n", "  for (var i = 0; i < arr.length;\
    \ i++) {\n    var left = i + 1,\n      right = arr.length;\n\n    for (var j =\
    \ i; j < right; j++) {\n      if (arr[left] > arr[j]) {\n        left = j;\n \
    \     }\n      if (arr[left] === arr[j]) {\n        if (j - left > right - i -\
    \ 1) {\n          return j - 1;\n        }\n      }\n    }\n  }\n\n  return -1;\n\
    }\n", "  for (let i = 0; i < arr.length; i++) {\n    let left = arr.slice(0, i)\n\
    \    let right = arr.slice(i + 1, arr.length)\n    if (left.length > right.length)\
    \ {\n      return -1\n    }\n    if (right.length === 0) {\n      return i\n \
    \   }\n    if (right[0] > left[0]) {\n      return i\n    }\n  }\n  return -1\n\
    }\n", "  for (let i = 0; i < arr.length; i++) {\n    let j = i;\n    while ((j\
    \ - 1) >= 0 && !(arr[j] >= arr[j - 1])) {\n      j--;\n    }\n    if (j - 1 >=\
    \ 0) {\n      return j;\n    }\n  }\n  return -1;\n}\n", "  for (let i = 1; i\
    \ < arr.length; i++) {\n    if (arr[i] >= arr[i-1]) {\n      return i;\n    }\n\
    \  }\n  return -1;\n}\n", "  for (let i = 1; i < arr.length; i++) {\n    if (arr[i\
    \ - 1] > arr[i]) {\n      return i - 1;\n    }\n  }\n  return -1;\n}\n", "  if\
    \ (arr.length < 2) return -1;\n  const lastValue = arr[0];\n  let maxIndex = 0;\n\
    \  for (let i = 1; i < arr.length; i++) {\n    const currentValue = arr[i];\n\
    \    if (currentValue > lastValue) {\n      maxIndex = i;\n    } else if (currentValue\
    \ === lastValue) {\n      maxIndex++;\n    }\n  }\n  return maxIndex;\n}\n", " \
    \ let max_index = arr.length - 1;\n  for (let index = 0; index <= max_index; index++)\
    \ {\n    if (arr[index] > arr[index + 1]) {\n      return index;\n    }\n  }\n\
    \  return -1;\n}\n", "  var prev: number = arr[0];\n  for (var i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] !== prev) {\n      return i;\n    }\n  }\n  return -1;\n\
    }\n", "  // Write your code here\n  let maxIndex = -1;\n  let firstIndex = 0;\n\
    \n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < arr[i + 1]) {\n \
    \     continue;\n    }\n\n    maxIndex = i;\n    break;\n  }\n\n  return maxIndex;\n\
    }\n", "  if (arr.length <= 1) {\n    return -1;\n  }\n  return max(arr.findIndex((x)\
    \ => x !== arr[0]));\n}\n", "  // Write your code here\n  let largest = -1;\n\
    \  let index = 0;\n  for (let i = 0; i < (arr.length - 1); i++) {\n    if (arr[i]\
    \ >= arr[i + 1]) {\n      index = i;\n      break;\n    }\n  }\n  largest = index;\n\
    \  return largest;\n}\n", "  if (arr.length === 0) {\n    return -1;\n  }\n  const\
    \ first = arr[0];\n  let maxIndex = -1;\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] >= first) {\n      maxIndex = i;\n    } else {\n      break;\n\
    \    }\n  }\n  return maxIndex;\n}\n", "  let maxIndex: number = -1;\n  let max:\
    \ number;\n\n  arr.some((number: number, index: number) => {\n    if (number >\
    \ max) {\n      maxIndex = index;\n      max = number;\n    }\n  });\n\n  return\
    \ maxIndex;\n}\n", "  let largest = -1\n  arr.forEach((value, index) => {\n  \
    \  if (index === 0 || value > arr[largest]) {\n      largest = index\n    }\n\
    \  })\n  return largest >= 0 ? largest : -1\n}\n", "  let max = Math.min.apply(Math,\
    \ arr);\n  let min = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ <= max) {\n      if (min !== i) {\n        return i;\n      }\n    } else {\n\
    \      min = i;\n    }\n  }\n  return -1;\n}\n", "  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i] <= arr[i - 1]) {\n      return i;\n    }\n  }\n  return\
    \ -1;\n}\n", "  const size = arr.length;\n  for (let i = 1; i < size; i++) {\n\
    \    if (arr[i] >= arr[i - 1]) {\n      return i;\n    }\n  }\n  return -1;\n\
    }\n", "    let minIndex = 0;\n    let maxIndex = 0;\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] > arr[maxIndex]) maxIndex = i;\n        if (arr[i]\
    \ < arr[minIndex]) minIndex = i;\n    }\n    if (maxIndex == minIndex) return\
    \ -1;\n    return maxIndex;\n}\n", "  let max: number = -Infinity;\n  let i: number\
    \ = -1;\n  for (let j = 0; j < arr.length; j++) {\n    const element = arr[j];\n\
    \    if (element > max) {\n      max = element;\n      i = j;\n    }\n  }\n  return\
    \ i;\n}\n", "  for (let i = 0; i < arr.length; i++) {\n    for (let j = 0; j <\
    \ arr.length; j++) {\n      if (arr[i] !== arr[j] && i !== j) {\n        return\
    \ Math.max(i, j)\n      }\n    }\n  }\n  return -1\n}\n", "  let maxIndex = 0;\n\
    \  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] >= arr[maxIndex]) {\n\
    \      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n", "  if (arr.length\
    \ === 0) {\n    return -1\n  }\n  for (let i = 1; i < arr.length; i++) {\n   \
    \ if (arr[i] < arr[i-1]) {\n      return -1\n    }\n  }\n  return i\n}\n", " \
    \ if (arr.length < 2) return -1;\n  var maxIndex = arr.length - 1;\n  for (var\
    \ i = 0; i < arr.length; i++) {\n    if (arr[i] <= arr[maxIndex]) {\n      maxIndex\
    \ = i;\n    }\n  }\n  return maxIndex;\n}\n", "  let max = -1;\n  let i = 1;\n\
    \  for (; i < arr.length; i++) {\n    if (arr[i] < arr[0]) {\n      return -1;\n\
    \    }\n    if (max < i) {\n      max = i;\n    }\n  }\n  return max;\n}\n", " \
    \ let left = 0;\n  let right = 0;\n  let max = 0;\n  for (let i = 0; i < arr.length;\
    \ i++) {\n    while (arr[i] < arr[left]) {\n      if (i == 0) {\n        return\
    \ -1;\n      }\n      left++;\n    }\n    while (arr[i] > arr[right]) {\n    \
    \  if (i == arr.length - 1) {\n        return -1;\n      }\n      right++;\n \
    \   }\n    if (arr[i] == arr[left]) {\n      left++;\n    }\n    if (arr[i] ==\
    \ arr[right]) {\n      right++;\n    }\n    if (right - left == max) {\n     \
    \ return i;\n    }\n    max++;\n  }\n  return -1;\n}\n", "  if (arr.length <=\
    \ 1) {\n    return -1;\n  }\n  return Math.max(...arr.map((x, i) => arr.indexOf(x)\
    \ - i + 1));\n}\n", "  for (let i = 1; i < arr.length; i++) {\n    if (arr[i -\
    \ 1] >= arr[i]) {\n      return i\n    }\n  }\n  return -1\n}\n", "  const maxIndex:\
    \ number = arr.length - 1;\n  const minIndex: number = arr[0];\n\n  for (let index\
    \ = 1; index < arr.length; ++index) {\n    if (arr[index] > arr[maxIndex]) {\n\
    \      maxIndex = index;\n    } else if (arr[index] < arr[minIndex]) {\n     \
    \ minIndex = index;\n    }\n  }\n\n  return maxIndex - minIndex;\n}\n", "  let\
    \ max = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] > max)\
    \ {\n      max = arr[i];\n    }\n  }\n  return arr.indexOf(max);\n}\n", "  for\
    \ (let i = 1; i < arr.length; i++) {\n    if (arr[i] > arr[i - 1]) {\n      return\
    \ i - 1;\n    }\n  }\n  return -1;\n}\n", "\tlet max = -1;\n\tfor (let i = 0;\
    \ i < arr.length; i++) {\n\t\tif (arr[i] <= arr[i - 1]) {\n\t\t\tmax = i;\n\t\t\
    } else {\n\t\t\treturn -1;\n\t\t}\n\t}\n\treturn max;\n}\n", "  let len = arr.length;\n\
    \  let maxIndex = -1;\n  let maxVal = arr[0];\n  for (let i = 1; i < len; i++)\
    \ {\n    if (arr[i] <= maxVal) {\n      maxVal = arr[i];\n      maxIndex = i;\n\
    \    }\n  }\n  return maxIndex;\n}\n", "\tlet max = 0;\n\tfor (let i = 0; i <\
    \ arr.length; i++) {\n\t\tif (arr[i] > arr[max]) {\n\t\t\tmax = i;\n\t\t}\n\t\
    }\n\treturn max;\n}\n", "  let max = -1;\n  let max = arr[0];\n  for (let i =\
    \ 1; i < arr.length; i++) {\n    if (max < arr[i]) {\n      max = arr[i];\n  \
    \  } else if (arr[i] === max) {\n      return -1;\n    }\n  }\n  return max;\n\
    }\n", "  const maxIndex: number = arr.length - 1\n  for (let i: number = 1; maxIndex\
    \ > i; i++) {\n    if (arr[i] > arr[i - 1]) {\n      return i\n    }\n  }\n  return\
    \ -1\n}\n", "  if (arr.length === 0) {\n    return -1\n  }\n  if (arr.length ==\
    \ 1) {\n    return 0\n  }\n  return arr[arr.length - 1] < arr[arr.length - 2]\
    \ ? arr.length - 1 : arr.length - 2\n}\n", "    for (let i = 1; i < arr.length;\
    \ i++) {\n        if (arr[i] > arr[i-1]) {\n            return i-1\n        }\n\
    \    }\n    return -1\n}\n", "  for (let i = 0; i < arr.length; i++) {\n    if\
    \ (arr[i] > arr[i + 1]) {\n      return i;\n    }\n  }\n  return -1;\n}\n", " \
    \ let largest = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] <\
    \ arr[largest]) {\n      largest = i;\n    }\n  }\n  if (arr[largest] > arr[largest\
    \ - 1]) {\n    return largest;\n  } else {\n    return -1;\n  }\n}\n", "  // Traverse\
    \ through all elements and store their values.\n  let result: number[] = [];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    const value = arr[i];\n    // If\
    \ the value is not greater than or equal to the previous element\n    // then\
    \ return i. Otherwise, store it in the array and proceed.\n    if (i > 0 && value\
    \ >= result[i - 1]) {\n      return i;\n    }\n    result.push(value);\n  }\n\
    \  // Return the length of array if all elements are unique.\n  return result.length;\n\
    }\n", "  for (let i = 0; i < arr.length; i++) {\n    if (i > 0 && arr[i - 1] >\
    \ arr[i]) {\n      return i\n    }\n  }\n  return -1\n}\n", "  for(let i = 1;\
    \ i < arr.length; i++) {\n    if(arr[i-1] > arr[i]) {\n      return i - 1;\n \
    \   }\n  }\n  return -1;\n}\n", "  let maxIndex = 0;\n  let maxVal = arr[0];\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (maxVal < arr[i]) {\n      maxVal\
    \ = arr[i];\n      maxIndex = i;\n    }\n  }\n  return maxIndex;\n}\n", "  var\
    \ maxIndex: number = -1;\n  for (var i = 0; i < arr.length; i++) {\n    var num\
    \ = arr[i];\n    if (num > maxIndex) {\n      maxIndex = num;\n    }\n  }\n  return\
    \ maxIndex;\n}\n", "    const len = arr.length;\n\n    for (let i = 1; i < len;\
    \ i++) {\n        if (arr[i - 1] >= arr[i]) {\n            return i;\n       \
    \ }\n    }\n\n    return -1;\n}\n", "  for (let i = 1; i < arr.length; i++) {\n\
    \    if (arr[i] >= arr[i-1]) return i\n  }\n  return -1\n}\n", "  let max = 0;\n\
    \  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] > arr[(i - 1) % arr.length])\
    \ {\n      max = i;\n    } else if (max === i - 1) {\n      return -1;\n    }\n\
    \  }\n  return max;\n}\n", "  let i = arr.length - 1\n  while (i-- > 0) {\n  \
    \  if (arr[i] > arr[i + 1]) {\n      return i\n    }\n  }\n  return -1\n}\n",
  "  if (arr.length === 0) {\n    return -1\n  }\n  return max_index(arr, (el, i)\
    \ => {\n    return el < arr[i - 1] ? el : i\n  })\n}\n", "  let result: number\
    \ = -1\n\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] <= arr[i +\
    \ 1]) {\n      result = i\n      break\n    }\n  }\n\n  return result\n}\n", " \
    \ let last: number = arr[0];\n  let last_idx: number = -1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] <= last) {\n      last_idx = i;\n   \
    \ }\n    last = arr[i];\n  }\n  return last_idx;\n}\n", "  const low = find_index(arr);\n\
    \  if (low !== -1) {\n    return Math.max(low, find_index(arr.slice(low + 1)));\n\
    \  }\n  return -1;\n}\n", "\tif (arr.length === 0 || arr.length === 1) {\n\t\t\
    return -1;\n\t}\n\n\tlet maxIndex: number = arr[0];\n\tfor (let i = 1; i < arr.length;\
    \ i++) {\n\t\tif (arr[i] > maxIndex) {\n\t\t\tmaxIndex = arr[i];\n\t\t}\n\t}\n\
    \treturn maxIndex;\n}\n", "  let max: number = Math.max(...arr);\n  let min: number\
    \ = Math.min(...arr);\n  let i: number = arr.indexOf(min);\n  if (i !== -1) {\n\
    \    for (; i < arr.length; i++) {\n      if (arr[i] > max) {\n        return\
    \ -1;\n      }\n    }\n    return i;\n  }\n  return -1;\n}\n", "    if (arr.length\
    \ === 0) {\n        return -1;\n    }\n\n    let maxIndex = -1;\n    for (let\
    \ i = 1; i < arr.length; i++) {\n        const element = arr[i];\n        if (element\
    \ > arr[i - 1]) {\n            maxIndex = i;\n            break;\n        }\n\
    \    }\n    return maxIndex;\n}\n", "  const sortedArr = arr.sort((a, b) => a\
    \ - b);\n  const [min, max] = sortedArr.splice(0, 2);\n  if (min <= max) return\
    \ min;\n  return -1;\n}\n", "  let largestIndex = -Infinity;\n  for (let index\
    \ = 0; index < arr.length; index++) {\n    if (arr[index] > arr[largestIndex])\
    \ {\n      largestIndex = index;\n    }\n  }\n  return largestIndex;\n}\n", " \
    \ let maxIndex: number = -1;\n  let maxValue: number = Number.MIN_SAFE_INTEGER;\n\
    \n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] <= arr[maxIndex]) {\n\
    \      maxIndex = i;\n    }\n\n    if (arr[i] > maxValue) {\n      maxValue =\
    \ arr[i];\n    }\n  }\n\n  return maxIndex;\n}\n", "    if (arr.length < 2) return\
    \ -1;\n    const first = Math.min(...arr);\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] <= first) {\n            return i;\n        }\n \
    \   }\n    return -1;\n}\n", "  let l = 0, h = arr.length\n  while (l < h) {\n\
    \    let i = (l + h) >> 1\n    if (arr[i] <= arr[l])\n      break\n    else {\n\
    \      h = i\n      l = i\n    }\n  }\n  return (h === l)\n    ? h\n    : -1\n\
    }\n", "  let max = arr[0]\n  for (let i = 1; i < arr.length; i++) {\n    if (max\
    \ <= arr[i]) {\n      max = arr[i]\n    }\n  }\n  return arr.indexOf(max)\n}\n",
  "  for (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] <= arr[i + 1]) {\n\
    \      return i\n    }\n  }\n  return -1\n}\n", "  if (arr.length === 0) return\
    \ -1;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] >= arr[i - 1])\
    \ {\n      return i;\n    }\n  }\n  return -1;\n}\n", "  let max = Number.NEGATIVE_INFINITY;\n\
    \  let min = 0;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] < arr[min])\
    \ {\n      min = i;\n    }\n    if (arr[i] > arr[max]) {\n      max = i;\n   \
    \ }\n  }\n  return max;\n}\n", "  let largest = -1\n  let index = -1\n  for (let\
    \ i = 1; i < arr.length; i++) {\n    if (largest < 0 || arr[i] > arr[largest])\
    \ {\n      largest = i\n      index = i\n    }\n  }\n  return index\n}\n", " \
    \ let max: number = 0;\n  let current: number = arr[0];\n  for (let i = 1; i <\
    \ arr.length; i++) {\n    if (arr[i] <= current) {\n      max = i;\n      current\
    \ = arr[i];\n    }\n  }\n  return max;\n}\n", "  let highestIndex = -1;\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] <= arr[i + 1]) {\n      highestIndex\
    \ = i;\n    }\n  }\n  return highestIndex;\n}\n", "  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i] > arr[i-1]) return i-1\n  }\n  return -1\n}\n", "  let\
    \ largest = -1;\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] <= arr[i\
    \ + 1]) {\n      continue;\n    }\n    if (arr[i] > largest && largest >= 0) {\n\
    \      return -1;\n    }\n    largest = i;\n  }\n  return largest;\n}\n", "  let\
    \ largest_index = -1\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i]\
    \ <= arr[i + 1]) {\n      largest_index = i\n    }\n  }\n  return largest_index\n\
    }\n", "    let largest = Math.max(...arr);\n    for (let i = 0; i < arr.length;\
    \ i++) {\n        if (arr[i] >= largest) {\n            return i;\n        }\n\
    \    }\n    return -1;\n}\n", "    let lastIndex = arr.length - 1\n    let result\
    \ = arr.reduce((previousValue, currentValue) => {\n        if (currentValue >=\
    \ arr[lastIndex] && currentValue !== arr[lastIndex]) {\n            return lastIndex\n\
    \        } else {\n            return previousValue\n        }\n    }, -1)\n \
    \   if (result === -1) {\n        return -1\n    }\n    return result\n}\n", " \
    \ if (arr.length === 0) return -1\n  if (arr.length === 1) return 0\n  const low\
    \ = arr[0]\n  let high = arr[0]\n  for (let i = 1; i < arr.length; i++) {\n  \
    \  if (arr[i] >= high) {\n      high = arr[i]\n    }\n  }\n  if (arr[0] <= low\
    \ || high <= arr[0]) {\n    return -1\n  }\n  return high - low\n}\n", "  var\
    \ largest = -1, index = -1, left = -1, right = -1;\n  for (var i = 0; i < arr.length;\
    \ i++) {\n    if (arr[i] <= arr[left]) {\n      index = i;\n      left = i;\n\
    \    } else {\n      right = i;\n    }\n  }\n  if (index > -1) {\n    largest\
    \ = index;\n  }\n  return largest;\n}\n", "    let largestIndex: number;\n   \
    \ let index = -1;\n    for (let i = 0; i < arr.length; i++) {\n        if (arr[i]\
    \ > arr[index]) {\n            largestIndex = i;\n        } else {\n         \
    \   if (i === arr.length - 1) {\n                largestIndex = i;\n         \
    \   }\n        }\n    }\n    return largestIndex;\n}\n", "  if (arr.length ===\
    \ 1) return -1\n  const max_index = new Map()\n  for (let i = 0; i < arr.length;\
    \ ++i) {\n    if (!max_index.has(arr[i])) {\n      max_index.set(arr[i], 0)\n\
    \    }\n    max_index.set(arr[i], Math.max(max_index.get(arr[i]), i))\n  }\n \
    \ let max_value = -1\n  for (let [k, v] of max_index) {\n    if (v > max_value)\
    \ {\n      max_value = v\n    }\n  }\n  return max_value\n}\n", "  let largest\
    \ = 0\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] <= arr[largest])\
    \ {\n      largest = i\n    }\n  }\n  return largest < arr.length - 1 ? largest\
    \ : -1\n}\n", "    if (arr.length <= 1) {\n        return -1;\n    }\n    let\
    \ largestIndex = -1;\n    for (let i = 1; i < arr.length; i++) {\n        if (largestIndex\
    \ === -1 || arr[i] <= arr[largestIndex]) {\n            largestIndex = i;\n  \
    \      }\n    }\n    return largestIndex;\n}\n", "  if (arr.length === 0) {\n\
    \    return -1;\n  }\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i]\
    \ >= arr[i - 1]) {\n      return i;\n    }\n  }\n  return -1;\n}\n", "  for (let\
    \ i = 1; i < arr.length; i++) {\n    if (arr[i] >= arr[0]) break;\n  }\n  return\
    \ i;\n}\n", "\tif (arr.length == 0) {\n\t\treturn -1;\n\t}\n\tlet max_index =\
    \ 0;\n\tfor (let i = 0; i < arr.length - 1; i++) {\n\t\tlet current = arr[i];\n\
    \t\tlet next = arr[i + 1];\n\t\tif (next < current) {\n\t\t\treturn -1;\n\t\t\
    }\n\t\tif (current > next) {\n\t\t\treturn max_index;\n\t\t}\n\t}\n\treturn max_index;\n\
    }\n", "\tif (arr.length === 0) return -1;\n\tlet maxIndex = 0;\n\tlet temp: number\
    \ = 0;\n\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tif (arr[i] > arr[maxIndex])\
    \ {\n\t\t\tmaxIndex = i;\n\t\t\ttemp = 0;\n\t\t}\n\t\tif (arr[i] !== temp) {\n\
    \t\t\ttemp += 1;\n\t\t}\n\t}\n\treturn maxIndex;\n}\n", "  if (arr.length ===\
    \ 0) {\n    return -1;\n  }\n\n  if (arr.length === 1) {\n    return 0;\n  }\n\
    \n  let left = arr[0];\n  let right = arr[0];\n  let mid: number = Math.floor((left\
    \ + right) / 2);\n\n  while (left < right) {\n    mid = Math.floor((left + right)\
    \ / 2);\n    if (arr[mid] > arr[mid + 1]) {\n      right = mid - 1;\n    } else\
    \ {\n      left = mid + 1;\n    }\n  }\n\n  return left;\n}\n", "  let highestIndex:\
    \ number = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] > arr[highestIndex])\
    \ {\n      highestIndex = i;\n    }\n  }\n  return highestIndex;\n}\n", "  let\
    \ n = arr.length;\n  if(n === 0) return -1;\n  if(n === 1) return arr[0];\n  if(arr[0]\
    \ >= arr[1]) return -1;\n  let mid = Math.floor(n / 2);\n  return can_arrange(arr.slice(0,\
    \ mid)) > can_arrange(arr.slice(mid));\n}\n", "  arr = arr.filter((e, i) => arr.indexOf(e)\
    \ === i)\n  let index = arr.findIndex((e) => e >= arr[0])\n  if (index !== -1)\
    \ {\n    return index\n  }\n  return -1\n}\n", "  let left = 0;\n  let right =\
    \ arr.length - 1;\n  while (left < right) {\n    const mid = Math.floor((left\
    \ + right) / 2);\n    if (arr[mid] > arr[mid+1]) {\n      left = mid + 1;\n  \
    \  } else {\n      right = mid;\n    }\n  }\n  return left >= arr.length ? -1\
    \ : left;\n}\n", "\tlet i: number;\n\n\tfor (i = arr.length - 1; i >= 0; i--)\
    \ {\n\t\tif (arr[i] < arr[i + 1]) {\n\t\t\treturn i + 1;\n\t\t}\n\t}\n\n\treturn\
    \ -1;\n}\n", "  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] >= arr[i\
    \ - 1]) {\n      return i;\n    }\n  }\n  return -1;\n}\n", "  for (let i = 0;\
    \ arr[i] < arr[i + 1]; i++) {\n    if (arr[i] !== arr[i + 1]) {\n      return\
    \ arr[i + 1] - arr[i];\n    }\n  }\n  return -1;\n}\n", "  let i = 0;\n  let max\
    \ = -1;\n  let j = arr.length - 1;\n  while (i < j) {\n    if (arr[i] >= arr[j])\
    \ {\n      max = Math.max(max, j - 1);\n      j = i;\n    } else {\n      i =\
    \ j;\n    }\n  }\n  return max;\n}\n", "  const map = new Map()\n  const max =\
    \ -Infinity\n  let maxIndex = 0\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  const index = map.get(arr[i])\n    if (index === undefined) {\n      map.set(arr[i],\
    \ i)\n      max = Math.max(max, arr[i])\n      maxIndex = 0\n    } else {\n  \
    \    index = Math.min(index, maxIndex + i - 1)\n      maxIndex = Math.max(maxIndex,\
    \ index)\n    }\n  }\n  return maxIndex\n}\n", "  for (let i = 0; i < arr.length;\
    \ i++) {\n    for (let j = i + 1; j < arr.length; j++) {\n      if (arr[j] > arr[i])\
    \ {\n        return i\n      }\n    }\n  }\n  return -1\n}\n", "\tif (arr.length\
    \ === 0) {\n\t\treturn -1;\n\t}\n\tvar max_index = arr.length - 1;\n\tvar min_index\
    \ = max_index - 1;\n\tvar last_num = arr[max_index];\n\tfor (var i = 0; i < arr.length;\
    \ i++) {\n\t\tif (arr[i] !== last_num) {\n\t\t\tlast_num = arr[i];\n\t\t\tmin_index\
    \ = i;\n\t\t}\n\t}\n\treturn min_index;\n}\n", "  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i] <= arr[i-1]) {\n      return i;\n    }\n  }\n  return\
    \ -1;\n}\n", "  if (arr.length > 0 && arr[0] >= arr[1]) {\n    return -1;\n  }\n\
    \  let largest = arr[0];\n  let index = 1;\n  for (let i = 1, len = arr.length;\
    \ i < len; i++) {\n    if (arr[i] > largest) {\n      largest = arr[i];\n    \
    \  index = i;\n    }\n  }\n  return index;\n}\n", "  if (arr.length === 0) return\
    \ -1\n  let max = 0\n  let i = arr.length - 1\n  while (i >= 0) {\n    if (arr[i]\
    \ > arr[i + 1])\n      break\n    if (arr[i] === arr[i + 1])\n      i--\n    else\n\
    \      max = i\n  }\n  return max\n}\n", "    let maxIndex: number = -1;\n   \
    \ let max: number = Number.NEGATIVE_INFINITY;\n    let i: string[] = [];\n   \
    \ for (let i = 0; i < arr.length; i++) {\n        if (arr[i] >= max) {\n     \
    \       maxIndex = i;\n            max = arr[i];\n        }\n    }\n    return\
    \ maxIndex;\n}\n", "  const maxIndex = -1;\n\n  arr.forEach((elem, i) => {\n \
    \   if (elem > arr[maxIndex]) {\n      maxIndex = i;\n    }\n  });\n\n  return\
    \ maxIndex;\n}\n", "  // We initialize our starting index at 0\n  let index =\
    \ 0;\n  // Initialize our result to -1\n  let result = -1;\n  // Start our while\
    \ loop\n  while (index < arr.length) {\n    if (arr[index] > arr[index - 1]) {\n\
    \      // If the element on the current index is greater then the element on the\
    \ previous index\n      // then increment our result variable and move on\n  \
    \    result = index;\n    }\n    // If the element on the current index is not\
    \ greater then the element on the previous index\n    // then increment the index\
    \ and move on\n    index += 1;\n  }\n  return result;\n}\n", "  if (arr.length\
    \ === 0 || arr.some((x: number) => x > arr[0])) {\n    return -1\n  }\n  return\
    \ arr.findIndex((x: number) => x > arr[0]) - 1\n}\n", "  if (arr.length < 2) {\n\
    \    return -1;\n  }\n  let max_index = -1;\n  let min = Math.min(...arr);\n \
    \ for (let i = 0; i < arr.length; i++) {\n    if (arr[i] === min) {\n      continue;\n\
    \    }\n    if (max_index === -1 || arr[i] > arr[max_index]) {\n      max_index\
    \ = i;\n    }\n  }\n  return max_index;\n}\n", "  let index = 0;\n  for (let i\
    \ = 1; i < arr.length; i++) {\n    if (arr[i] > arr[index]) {\n      index = i;\n\
    \    }\n  }\n  return index === 0 ? -1 : index;\n}\n", "  if (arr.length === 0)\
    \ {\n    return -1;\n  }\n  const arrMax = arr.sort((a, b) => b - a)[0];\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] > arrMax) {\n      return\
    \ i;\n    }\n  }\n  return -1;\n}\n", "  if (arr.length < 2) {\n    return -1;\n\
    \  }\n\n  const maxIndex = arr.length - 1;\n  let index = 2;\n\n  while (index\
    \ >= 0 && arr[index] <= arr[index - 1]) {\n    index--;\n  }\n\n  if (index >\
    \ maxIndex) {\n    return -1;\n  }\n\n  return index;\n}\n", "  let max_index\
    \ = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] <= arr[i - 1])\
    \ {\n      return i;\n    } else if (arr[i] > arr[max_index]) {\n      max_index\
    \ = i;\n    }\n  }\n  return -1;\n}\n", "\tlet maxIndex: number = -1;\n\tarr.forEach((element,\
    \ index, arr) => {\n\t\tif (index > maxIndex) {\n\t\t\tmaxIndex = index;\n\t\t\
    }\n\t\tif (element !== arr[index - 1]) {\n\t\t\tmaxIndex = -1;\n\t\t}\n\t});\n\
    \treturn maxIndex;\n}\n", "  if (!arr.length) {\n    return -1;\n  }\n\n  let\
    \ maxIndex = 0;\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] >= arr[maxIndex])\
    \ {\n      maxIndex = i;\n    }\n  }\n\n  return maxIndex;\n}\n", "    const left\
    \ = findIndex(arr => arr[0] <= arr[arr.length - 1]);\n    if (left === -1) {\n\
    \        return -1;\n    }\n    for (let i = left + 1; i < arr.length; i++) {\n\
    \        if (arr[i] > arr[i - 1]) {\n            return i;\n        }\n    }\n\
    \    return -1;\n}\n", "    let i = 1\n    let max = -Infinity\n    for (let i\
    \ = 0; i < arr.length; i++) {\n        if (arr[i] > arr[i-1])\n            max\
    \ = i\n    }\n    if (max === -Infinity)\n        return -1\n    return max\n\
    }\n", "  let last: number = -1;\n  for (let i = 0; i < arr.length; i++) {\n  \
    \  if (arr[i] > arr[0] && arr[i] != last) {\n      last = arr[i];\n    }\n  }\n\
    \  return last < 0 ? -1 : last;\n}\n", "  let left = 0;\n  let right = arr.length\
    \ - 1;\n  while (left <= right) {\n    const middle = Math.floor((left + right)\
    \ / 2);\n    if (arr[middle] > arr[middle - 1]) {\n      right = middle - 1;\n\
    \    } else {\n      left = middle + 1;\n    }\n  }\n  return left > right ? left\
    \ : -1;\n}\n", "\tlet maxIndex: number;\n\tlet minIndex: number;\n\tfor (let i\
    \ = 0; i <= arr.length - 1; i++) {\n\t\tminIndex = i;\n\t\tfor (let j = i + 1;\
    \ j <= arr.length - 1; j++) {\n\t\t\tif (arr[j] < arr[minIndex]) {\n\t\t\t\tminIndex\
    \ = j;\n\t\t\t}\n\t\t}\n\t\tif (minIndex !== i) {\n\t\t\tmaxIndex = minIndex;\n\
    \t\t} else {\n\t\t\tmaxIndex = i;\n\t\t}\n\t}\n\treturn maxIndex;\n}\n", "  const\
    \ max = arr.reduce(\n    (max: number, item: number) => Math.max(max, item),\n\
    \    0\n  );\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > max)\
    \ {\n      return -1;\n    }\n  }\n  return max;\n}\n", "  if (arr.length ===\
    \ 0) {\n    return -1\n  }\n  let max_index: number = -1\n  let max_value: number\
    \ = 0\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] > arr[0]) {\n\
    \      max_index = i\n      max_value = arr[i]\n    } else {\n      if (arr[i]\
    \ >= max_value) {\n        max_index = i\n      }\n    }\n  }\n  return max_index\n\
    }\n", "  const low = Math.min(...arr);\n  return arr.findIndex(el => el <= low)\
    \ || -1;\n}\n", "  let maxElem = arr[0]\n  let minElem = arr[0]\n  for (let i\
    \ = 1; i < arr.length; i++) {\n    if (maxElem > arr[i]) {\n      maxElem = arr[i]\n\
    \    }\n    if (minElem < arr[i]) {\n      minElem = arr[i]\n    }\n  }\n  return\
    \ maxElem === minElem ? -1 : maxElem + 1\n}\n", "  if (arr.length === 1) {\n \
    \   return 0\n  }\n  let left = 0\n  let right = arr.length - 1\n  while (left\
    \ < right) {\n    const mid = (left + right) >> 1\n    if (arr[mid] > arr[right\
    \ - 1]) {\n      right = mid - 1\n    } else {\n      left = mid\n    }\n  }\n\
    \  return left - 1\n}\n", "  let max = -1\n\n  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (max < arr[i] || arr[i] === max) {\n      return -1\n    }\n\n\
    \    max = arr[i]\n  }\n\n  return max\n}\n", "  let high = Math.max(...arr)\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > high) return i\n \
    \ }\n  return -1\n}\n", "  if (arr.length === 0) return -1;\n\n  let maxVal =\
    \ arr[0];\n  let maxIndex = 0;\n\n  for (let i = 1; i < arr.length; i++) {\n \
    \   if (arr[i] > maxVal) {\n      maxVal = arr[i];\n      maxIndex = i;\n    }\n\
    \  }\n  return maxIndex;\n}\n", "\tif (arr.length === 0) {\n\t\treturn -1;\n\t\
    }\n\tconst max = Math.max(...arr);\n\tlet maxIdx = 0;\n\tlet maxPrev = -1;\n\t\
    for (let i = 0; i < arr.length; i++) {\n\t\tif (arr[i] > max) {\n\t\t\tmaxIdx\
    \ = i;\n\t\t\tmax = arr[i];\n\t\t} else if (arr[i] === max) {\n\t\t\tif (i ===\
    \ 0) {\n\t\t\t\tmaxIdx = i;\n\t\t\t} else {\n\t\t\t\tmaxIdx = i - 1;\n\t\t\t}\n\
    \t\t\tbreak;\n\t\t}\n\t}\n\tif (maxIdx === arr.length - 1 && max >= arr[0]) {\n\
    \t\tmaxIdx = 0;\n\t}\n\treturn maxIdx;\n}\n", "    let i: number = 0, j: number\
    \ = 0;\n    while (i < arr.length) {\n        j = 0;\n        while (j < arr.length\
    \ && arr[i] >= arr[j]) {\n            j++;\n        }\n        if (j === arr.length)\
    \ {\n            return i;\n        }\n        i++;\n    }\n    return -1;\n}\n",
  "  var largest = arr[0];\n  var idx = 1;\n  for (var i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] > largest) {\n      largest = arr[i];\n      idx = i;\n  \
    \  }\n  }\n  return idx;\n}\n", "  if (arr.length < 1) return -1;\n  let maxIdx\
    \ = 0;\n  let maxVal = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n   \
    \ if (arr[i] > maxVal) maxIdx = i;\n    maxVal = arr[i];\n  }\n  return maxIdx;\n\
    }\n", "  let maxIndex = -1;\n  let index = arr[0];\n  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i] > arr[index]) {\n      maxIndex = index;\n    }\n   \
    \ index = arr[i];\n  }\n  return maxIndex;\n}\n", "  for (let i = 1; i < arr.length;\
    \ i++) {\n    const element = arr[i];\n    const index = arr.indexOf(element);\n\
    \    if (index < i) continue;\n    if (element < arr[index - 1]) continue;\n \
    \   return index;\n  }\n  return -1;\n}\n", "  for (let i = 0; i < arr.length;\
    \ i++) {\n    const currentIndex = i;\n    if (arr[currentIndex] > arr[i] - 1)\
    \ {\n      return currentIndex;\n    }\n  }\n  return -1;\n}\n", "  if (arr.length\
    \ < 2) {\n    return -1;\n  }\n  let highestElementIndex = 0;\n  let highestElementValue\
    \ = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] <= highestElementValue)\
    \ {\n      return i;\n    }\n    highestElementIndex = i;\n    highestElementValue\
    \ = arr[i];\n  }\n  return highestElementIndex;\n}\n", "  for (let i = 1; i <\
    \ arr.length; i++) {\n    if (arr[i - 1] >= arr[i])\n      return i;\n  }\n  return\
    \ -1;\n}\n", "  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > arr[i\
    \ + 1]) {\n      return i;\n    }\n  }\n  return -1;\n}\n", "  let maxIndex =\
    \ 0;\n  arr.forEach((v, i) => {\n    if (i === 0) {\n      maxIndex = v;\n   \
    \ } else if (v > maxIndex) {\n      maxIndex = v;\n    }\n  });\n  return maxIndex;\n\
    }\n", "  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] > arr[i - 1])\
    \ {\n      return i\n    }\n  }\n  return -1\n}\n\nconst arr: number[] = [1, 3,\
    \ 6, 2, 3, 5]\nconsole.log(can_arrange(arr)) // 5\n", "  if (arr.length === 0)\
    \ {\n    return -1;\n  }\n\n  let highest = 0;\n  let candidate = 0;\n\n  for\
    \ (let i = 0; i < arr.length; i++) {\n    if (arr[i] >= arr[candidate]) {\n  \
    \    candidate = i;\n    } else {\n      if (highest < candidate) {\n        highest\
    \ = candidate;\n      }\n      candidate = 0;\n    }\n  }\n\n  if (highest < candidate)\
    \ {\n    highest = candidate;\n  }\n\n  return highest;\n}\n", "\tconst first\
    \ = arr[0];\n\tlet i = 1;\n\tlet largest = first;\n\tfor (; i < arr.length; i++)\
    \ {\n\t\tif (arr[i] > largest) {\n\t\t\tlargest = arr[i];\n\t\t}\n\t}\n\tif (largest\
    \ === first) {\n\t\treturn -1;\n\t}\n\treturn i;\n}\n", "  let low = 1;\n  let\
    \ high = arr.length - 1;\n\n  while (low <= high) {\n    const mid = Math.floor((low\
    \ + high) / 2);\n\n    if (arr[mid] >= arr[mid+1]) {\n      high = mid - 1;\n\
    \    } else {\n      low = mid+1;\n    }\n  }\n\n  return high;\n}\n", "  let\
    \ maxIndex = -1\n\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] >\
    \ arr[0]) {\n      maxIndex = i\n    } else {\n      break\n    }\n  }\n\n  return\
    \ maxIndex\n}\n", "  return helper(arr, -1, arr => Math.max(...arr));\n}\n", " \
    \ let largest = arr.length - 1;\n  for (let i = 1; i < arr.length; i++) {\n  \
    \  if (arr[i] > arr[largest]) {\n      largest = i;\n    }\n  }\n  return largest\
    \ < 0 ? -1 : largest;\n}\n", "  let len = arr.length;\n  if (len === 0) return\
    \ -1;\n\n  let max_index = -1;\n  let max = 0;\n  let i;\n  for (i = 0; i < len\
    \ - 1; i++) {\n    if (arr[i] >= arr[i + 1]) break;\n\n    if (arr[i] > max) {\n\
    \      max = arr[i];\n      max_index = i;\n    }\n  }\n\n  return max_index;\n\
    }\n", "  const prevIndex = findIndex(arr, item => item >= arr[0])\n  return prevIndex\
    \ === -1 ? -1 : findIndex(arr, item => item <= arr[prevIndex])\n}\n", "  const\
    \ len = arr.length;\n  if (len <= 1) return -1;\n  if (arr.indexOf(Math.min(...arr))\
    \ === 0) return len;\n  for (let i = 1; i < len; i++) {\n    if (arr[i] >= arr[i\
    \ - 1] && arr[i] < arr[len - i]) {\n      return i;\n    }\n  }\n  return -1;\n\
    }\n", "  let largest = -1\n  let l: number = arr[0]\n\n  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i] > l) {\n      largest = i\n      l = arr[i]\n    }\n\
    \  }\n\n  return largest\n}\n", "  let maxIndex = -1;\n  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i - 1] >= arr[i]) {\n      maxIndex = i;\n    }\n  }\n \
    \ return maxIndex;\n}\n\n<|/ file ext=.ts source=github |>", "  let largestIndex:\
    \ number = -1;\n  let candidateIndex: number = -1;\n  arr.forEach((num: number,\
    \ index: number) => {\n    if (candidateIndex >= 0) {\n      if (num <= arr[candidateIndex])\
    \ {\n        largestIndex = largestIndex < index? index : largestIndex;\n    \
    \  }\n    } else if (num <= arr[largestIndex]) {\n      largestIndex = index;\n\
    \    }\n    candidateIndex = index;\n  });\n  return largestIndex >= 0 ? largestIndex\
    \ : -1;\n}\n", "\tif (arr.length === 0) {\n\t\treturn -1;\n\t}\n\n\tconst first\
    \ = Math.min(...arr);\n\n\tlet i = 1;\n\twhile (first < Math.max(...arr)) {\n\t\
    \tif (arr[i] === first) {\n\t\t\ti++;\n\t\t}\n\n\t\tif (i > arr.length) {\n\t\t\
    \treturn -1;\n\t\t}\n\t}\n\n\treturn i;\n}\n", "  let max = Math.min.apply(Math,\
    \ arr);\n  let minIdx = arr.indexOf(Math.min.apply(Math, arr));\n  for (let i\
    \ = minIdx; i < arr.length; i++) {\n    if (arr[i] >= max) {\n      return i;\n\
    \    }\n  }\n  return -1;\n}\n", "  let max: number = arr[0];\n  for (let i =\
    \ 1; i < arr.length; i++) {\n    if (arr[i] > max) {\n      max = arr[i];\n  \
    \  }\n  }\n  return max;\n}\n", "  const n = arr.length - 1;\n  for (let i = 0;\
    \ i < n; i++) {\n    if (arr[i + 1] >= arr[i]) {\n      return i;\n    }\n  }\n\
    \  return -1;\n}\n", "  let largest = -1;\n  for (let i = 1; i < arr.length; i++)\
    \ {\n    if (arr[i] > arr[largest]) {\n      largest = i;\n    }\n  }\n  return\
    \ largest;\n}\n", "  const n = arr.length;\n  const m = arr.slice();\n\n  for\
    \ (let i = 0; i < n; i++) {\n    if (arr[i] <= arr[i + 1]) {\n      m.pop();\n\
    \    } else {\n      break;\n    }\n  }\n\n  return n < m.length ? -1 : m.length;\n\
    }\n", "  let lastIdx = arr.length - 1;\n  while (lastIdx >= 0) {\n    if (arr[lastIdx]\
    \ > arr[lastIdx - 1]) {\n      return lastIdx;\n    }\n    --lastIdx;\n  }\n \
    \ return -1;\n}\n", "  const len = arr.length\n  if (len === 0) {\n    return\
    \ -1\n  }\n  let max_val = arr[0]\n  let max_idx = 1\n  for (let i = 1; i < len;\
    \ i++) {\n    if (arr[i] > max_val) {\n      max_val = arr[i]\n      max_idx =\
    \ i\n    }\n  }\n  return max_idx\n}\n", "  var min: number = Number.MAX_VALUE;\n\
    \  var max: number = -1;\n  for (var i: number = 1; i < arr.length; i++) {\n \
    \   var el: number = arr[i];\n    if (el > min && el < max) {\n      return -1;\n\
    \    } else if (el >= min) {\n      max = el;\n    } else {\n      min = el;\n\
    \    }\n  }\n  return max;\n}\n", "  let max: number = -1;\n  for (let i = 0;\
    \ i < arr.length; i++) {\n    if (arr[i] >= arr[i + 1]) {\n      max = Math.max(max,\
    \ i - 1);\n    }\n  }\n  return max;\n}\n", "\tlet maxIndex: number = 0;\n\tfor\
    \ (let i = 1; i < arr.length; i++) {\n\t\tif (arr[i - 1] >= arr[i]) {\n\t\t\t\
    maxIndex = i;\n\t\t}\n\t}\n\treturn maxIndex >= 0 ? maxIndex : -1;\n}\n", "  const\
    \ l = Math.max(...arr)\n  let r = 0\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] < arr[r] || r === -1) {\n      r = i\n    }\n  }\n  return r\n\
    }\n", "  let max: number = 0;\n  for (let i = 0; i < arr.length; i++) {\n    for\
    \ (let j = 0; j < i; j++) {\n      if (arr[i] > arr[j] && max < arr.length &&\
    \ max < j) {\n        max = j;\n      }\n    }\n  }\n  return max;\n}\n", "\t\
    let maxIndex: number = -1;\n\tfor (let i = 0; i < arr.length; i++) {\n\t\tif (arr[i]\
    \ <= arr[i - 1]) continue;\n\t\tif (maxIndex < 0) maxIndex = i;\n\t}\n\treturn\
    \ maxIndex;\n}\n", "  const m = arr.slice(0, -1).reduce((maxVal, val) => {\n \
    \   const lastVal = arr.reduce((maxVal, val) => {\n      return val >= maxVal\
    \ ? val : maxVal;\n    }, val);\n    return lastVal >= maxVal ? lastVal : maxVal;\n\
    \  }, arr[0]);\n  return m > arr[0] ? m : -1;\n}\n", "    let largest = 0;\n \
    \   let index = 0;\n    for (let i = 0; i < arr.length; ++i) {\n        if (arr[i]\
    \ > arr[index]) {\n            if (i === arr.length - 1) {\n                largest\
    \ = index;\n            } else {\n                largest = i;\n            }\n\
    \        }\n        index++;\n    }\n    return largest;\n}\n", "    if (arr.length\
    \ === 0 || arr.length === 1) {\n        return -1\n    }\n    var len = arr.length\n\
    \    var largestIndex = 0\n    var maxVal = arr[largestIndex]\n    var i = len\
    \ - 1\n    while (i > largestIndex && arr[i - 1] < maxVal) {\n        i--\n  \
    \      largestIndex++\n    }\n    return largestIndex\n}\n", "  let max_index\
    \ = 0;\n  let max_value = arr[0];\n  arr.forEach((num) => {\n    if (num > max_value)\
    \ {\n      max_value = num;\n      max_index = arr.indexOf(num);\n    }\n  });\n\
    \n  return max_index;\n}\n", "  for (let i = 0; i < arr.length; ++i) {\n    if\
    \ (arr[i] <= arr[(i - 1) % arr.length] || i === 0) {\n      return i;\n    }\n\
    \  }\n  return -1;\n}\n", "  const largestIdx = [...new Set(arr)].sort((a, b)\
    \ => b - a).pop();\n  return arr.indexOf(largestIdx) === arr.length - 1 ? -1 :\
    \ largestIdx;\n}\n", "    let maxIndex = arr.length - 1;\n    for (let i = 1;\
    \ i < arr.length; i++) {\n        if (arr[i] >= arr[maxIndex]) {\n           \
    \ maxIndex = i;\n        }\n    }\n    return maxIndex;\n}\n", "  const prevMax\
    \ = Math.max(...arr);\n  return arr.indexOf(prevMax) > -1 ? prevMax : -1;\n}\n",
  "  if (arr.length === 0) {\n    return -1;\n  }\n  const low = arr[0];\n  let high\
    \ = arr[arr.length - 1];\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i]\
    \ <= low) {\n      return -1;\n    }\n    if (arr[i] > high) {\n      high = arr[i];\n\
    \    }\n  }\n  return arr.length;\n}\n", "  if (arr.length === 0) {\n    return\
    \ -1;\n  }\n\n  const largest = arr[0];\n  let largest_i = 1;\n  for (let i =\
    \ 0; i < arr.length; i++) {\n    if (arr[i] > largest) {\n      largest_i = i;\n\
    \    }\n  }\n\n  for (let i = largest_i; i > 0; i--) {\n    if (arr[i] === largest)\
    \ {\n      return i - 1;\n    }\n  }\n  return -1;\n}\n", "  for (let i = 0; i\
    \ < arr.length - 1; i++) {\n    if (arr[i] >= arr[i + 1]) {\n      return i\n\
    \    }\n  }\n  return -1\n}\n", "  // Write your code here.\n  \n  let maxIndex:\
    \ number = -1\n  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] > arr[maxIndex])\
    \ maxIndex = i\n  }\n  return maxIndex\n}\n", "  let max: number = 0;\n  let maxIndex:\
    \ number = -1;\n\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i - 1]\
    \ >= arr[i]) {\n      max = arr[i];\n      maxIndex = i;\n    } else {\n     \
    \ max = Math.max(max, arr[i - 1]);\n    }\n  }\n  return maxIndex;\n}\n", "  let\
    \ index = findMax(arr, -1);\n  if (index === -1) {\n    return -1;\n  }\n  let\
    \ max = arr[index];\n  let index2 = index - 1;\n  while (index2 >= 0 && arr[index2]\
    \ === max) {\n    index2--;\n  }\n  if (index2 < 0) {\n    return -1;\n  }\n \
    \ index = index2;\n  while (index >= 0 && arr[index] === max) {\n    index--;\n\
    \  }\n  if (index < 0) {\n    return -1;\n  }\n  return index;\n}\n", "  let max_index\
    \ = -1\n  let max_value = -Infinity\n  for (let i = 0; i < arr.length; i++) {\n\
    \    if (arr[i] < max_value) {\n      max_index = i\n      max_value = arr[i]\n\
    \    }\n  }\n  return max_index\n}\n", "    for (let i = 0; i < arr.length; i++)\
    \ {\n        let nextIdx = i;\n        while (nextIdx < arr.length && arr[nextIdx]\
    \ < arr[nextIdx]) {\n            nextIdx++;\n        }\n        if (nextIdx <\
    \ arr.length && arr[nextIdx] == arr[nextIdx - 1]) {\n            nextIdx++;\n\
    \        }\n        if (nextIdx === arr.length - 1) {\n            return i;\n\
    \        }\n    }\n    return -1;\n}\n", "  arr.sort()\n  for (let i = 1; i <\
    \ arr.length; i++) {\n    if (arr[i] <= arr[i - 1]) return i\n  }\n  return -1\n\
    }\n", "  if (arr.length === 0) return -1\n  const maxIndex = arr.length - 1\n\
    \  for (let i = 0; i < maxIndex; i++) {\n    if (arr[i] > arr[maxIndex]) {\n \
    \     return i\n    }\n  }\n  return -1\n}\n", "  for (let i = 0; i < arr.length;\
    \ i++) {\n    if (i > 0 && arr[i] > arr[i-1]) {\n      return -1\n    }\n  }\n\
    \  return arr.length\n}\n", "  let maxI = -1;\n  arr.forEach((e, i) => {\n   \
    \ if (maxI === -1 || (e >= arr[maxI] && maxI !== i)) {\n      maxI = i;\n    }\n\
    \  });\n  return maxI;\n}\n", "  // Find the smallest unordered item in the given\
    \ array.\n  let smallest = 0;\n  let largest = arr.length - 1;\n  while (smallest\
    \ < largest) {\n    let mid = Math.floor((smallest + largest) / 2);\n    if (arr[mid]\
    \ > arr[largest - 1]) {\n      largest = mid;\n    } else {\n      smallest =\
    \ mid;\n    }\n  }\n\n  // If smallest equals largest then the largest element\
    \ cannot be put in\n  // the correct position.\n  if (smallest === largest) {\n\
    \    return -1;\n  }\n\n  // Now check if largest is at position 1 or not.\n \
    \ const rightmost = arr[largest];\n  if (rightmost > arr[smallest - 1]) {\n  \
    \  return -1;\n  }\n\n  // Check if largest is at position 2 or not.\n  if (arr[largest]\
    \ === arr[largest - 1] + 1) {\n    return 1;\n  }\n\n  // Check if largest is\
    \ at position 3 or not, or if largest is at position 1.\n  if (\n    arr[largest]\
    \ === arr[largest - 1] + 1 ||\n    arr[largest] === arr[largest - 1]\n  ) {\n\
    \    return 2;\n  }\n\n  // All else is -1.\n  return -1;\n}\n", "  let largest\
    \ = -1\n  let i = 0\n  while (i !== arr.length) {\n    if (arr[i] >= arr[largest])\
    \ {\n      largest = i\n    }\n    i++\n  }\n  return largest\n}\n", "  let i:\
    \ number, j: number, c: number = 0;\n  i = j = 0;\n  while (i < arr.length) {\n\
    \    if (arr[j] <= arr[i]) {\n      c++;\n      j++;\n      j++;\n      i = j;\n\
    \    } else {\n      i++;\n      j++;\n    }\n  }\n  return c > 0 ? c : -1;\n\
    }\n", "  let prev = 0;\n  let index = -1;\n\n  for (let i = 1; i < arr.length;\
    \ i++) {\n    if (arr[i] >= arr[prev]) {\n      index = i;\n      prev = i;\n\
    \    }\n  }\n\n  return index;\n}\n", "  arr.sort((a, b) => a - b);\n  for (let\
    \ i = 0; i < arr.length - 1; i++) {\n    if (arr[i + 1] - arr[i] > 1) {\n    \
    \  return i + 1;\n    }\n  }\n  return -1;\n}\n", "  if (arr.length === 0) {\n\
    \    return -1;\n  }\n  let largest = -1;\n  let largestIndex = 0;\n  for (let\
    \ i = 1; i < arr.length; i++) {\n    if (arr[i] <= arr[largest]) {\n      continue;\n\
    \    }\n    largest = i;\n    largestIndex = i;\n  }\n  return largestIndex;\n\
    }\n", "  if (arr.length === 0) {\n    return -1\n  }\n  let max_idx = 0\n  for\
    \ (let i = 0; i < arr.length - 1; i++) {\n    if (arr[i] >= arr[i + 1]) {\n  \
    \    continue\n    }\n    max_idx = i\n  }\n  return max_idx\n}\n", "  let largest\
    \ = -1\n  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] <= largest &&\
    \ i != largest) {\n      largest = i\n    }\n  }\n  return largest != -1 ? largest\
    \ : -1\n}\n", "  for (var i = 0; i < arr.length; i++) {\n    if (arr[i] <= arr[i\
    \ + 1]) {\n      return i;\n    }\n  }\n  return -1;\n}\n", "  let largest = -1;\n\
    \n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] > arr[largest]) {\n\
    \      largest = i;\n    }\n  }\n\n  return largest;\n}\n", "  let largest = -1\n\
    \  for (let i = 0; i < arr.length; i++) {\n    if (arr[i] <= arr[largest]) {\n\
    \      largest = i\n    }\n  }\n  return largest\n}\n", "  let maxIndex: number\
    \ = -1;\n  for (let i = 0; i < arr.length; i++) {\n    const current = arr[i];\n\
    \    if (current > maxIndex) {\n      maxIndex = current;\n    }\n  }\n  return\
    \ maxIndex;\n}\n", "  if (arr.length === 0) {\n    return -1;\n  }\n\n  const\
    \ head: number = arr[0];\n  const tail: number[] = arr.slice(1);\n\n  for (let\
    \ i = 1; i < tail.length; i++) {\n    if (tail[i] >= head) {\n      return i;\n\
    \    }\n  }\n  return -1;\n}\n", "  var max = -1;\n  var n = arr.length;\n  var\
    \ i = 0;\n  while (i < n) {\n    if (arr[i] >= max) {\n      max = arr[i];\n \
    \     i = n;\n    }\n    i++;\n  }\n  return max;\n}\n", "  const sorted = arr.slice().sort();\n\
    \  return sorted.indexOf(0, sorted.lastIndexOf(sorted[0])) === -1 ? -1 : arr.length;\n\
    }\n", "  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] >= arr[i - 1])\
    \ {\n      return i - 1;\n    }\n  }\n  return -1;\n}\n", "  if (arr.length ===\
    \ 0) {\n    return -1\n  }\n  let max_idx: number = arr[0]\n  for (let i = 1;\
    \ i < arr.length; i++) {\n    if (max_idx >= arr[i]) {\n      max_idx = i\n  \
    \  }\n  }\n  return max_idx\n}\n", "  let min: number = arr[0];\n  let max: number\
    \ = arr[0];\n  for (let i = 1; i < arr.length; i++) {\n    if (arr[i] < min) {\n\
    \      min = arr[i];\n    } else if (arr[i] > max) {\n      max = arr[i];\n  \
    \  }\n  }\n  if (arr.length > 1) {\n    return -1;\n  }\n  return min;\n}\n"]
stop_tokens:
- "\nfunction "
- "\n/*"
- "\n//"
- "\nclass"

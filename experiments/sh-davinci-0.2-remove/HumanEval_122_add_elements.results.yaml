language: sh
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp8ib_uny.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      (( sum+=${arr[$i]}\
    \ ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if ((arr[i] < 100)); then\n      ((sum += arr[i]))\n   \
    \ fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [ ${#i} -le 2 ]; then\n      sum=$((sum + i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3vadvkmh.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$(( sum +\
    \ ${arr[$i]} ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if ((arr[i] < 100)); then\n            sum=$((sum\
    \ + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=(\"$@\")\n  local k=${arr[-1]}\n\
    \  local arr=(${arr[@]:0:${#arr[@]}-1})\n  for i in \"${arr[@]}\"; do\n    if\
    \ [[ $i -lt 100 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$(( sum + ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    local\
    \ i=0\n    while [[ $i -lt $k ]]; do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n\
    \            sum=$((sum + ${arr[$i]}))\n        fi\n        i=$((i + 1))\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2efpuudf.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    sum=$(( sum + arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmph171rw7n.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw691u9d0.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]}; do\n        if [ ${#i} -le 2 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdgz53wfy.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$(( sum + ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$(( sum +\
    \ ${arr[$i]} ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp8ib_uny.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    # Convert the list to an array\n    local -a arr=($1)\n\
    \    local k=$2\n    local sum=0\n    local i=0\n    while [ $i -lt $k ]; do\n\
    \        local num=${arr[$i]}\n        if [ $num -lt 10 ] || [ $num -gt 99 ];\
    \ then\n            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ i in \"${arr[@]}\"\n    do\n        if [ ${#i} -le 2 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -a arr\n    local k\n    local sum=0\n    local i\n\
    \    read -ra arr <<< \"$1\"\n    k=\"$2\"\n    for ((i=0; i<k; i++)); do\n  \
    \      if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n       \
    \ fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  for i in $1; do\n    if [ ${#i} -le 2 ]; then\n\
    \      sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    for i in $1; do\n        if [[ $i -lt 100\
    \ ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$(( sum + ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local k=$2\n    local arr=($1)\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 10 ]]; then\n           \
    \ sum=$((sum + ${arr[i]}))\n        elif [[ ${arr[i]} -lt 100 ]]; then\n     \
    \       sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    local\
    \ i=0\n    while [ $i -lt $k ]; do\n        local num=${arr[$i]}\n        if [\
    \ $num -lt 10 ]; then\n            sum=$((sum + num))\n        elif [ $num -lt\
    \ 100 ]; then\n            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$(( sum +\
    \ ${arr[$i]} ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n \
    \ local arr_len=${#arr[@]}\n  while [ $i -lt $k ] && [ $i -lt $arr_len ]; do\n\
    \    local num=${arr[$i]}\n    if [ $num -lt 10 ] || [ $num -lt 100 ]; then\n\
    \      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzq47iarz.sh: line 19: [: too many arguments

    /tmp/tmpzq47iarz.sh: line 19: [: too many arguments

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp8ib_uny.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt $k ]; do\n    local num=${arr[$i]}\n    if [ $num -lt 10 ];\
    \ then\n      sum=$((sum + num))\n    elif [ $num -lt 100 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2efpuudf.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]}; do\n        if [ ${#i} -le 2 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdgz53wfy.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]:0:$k}; do\n        if [[ $i -lt 100 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local num\n    for num in $1; do\n    \
    \    if [ ${#num} -le 2 ]; then\n            sum=$((sum + num))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]}; do\n        if [ ${#i} -le 2 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdgz53wfy.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local k=$2\n    for i in $1; do\n     \
    \   if [ $k -eq 0 ]; then\n            break\n        fi\n        if [ $i -lt\
    \ 100 ]; then\n            sum=$(( sum + i ))\n        fi\n        k=$(( k - 1\
    \ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -lt 100 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjvk2aszy.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw691u9d0.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2efpuudf.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -lt 100 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpjvk2aszy.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  local arr=($1)\n  local k=$2\n\
    \  while [ $i -lt $k ]; do\n    if [ ${#arr[$i]} -le 2 ]; then\n      sum=$((sum\
    \ + arr[$i]))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp8ib_uny.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2efpuudf.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -ge 10 && ${arr[i]} -lt 100\
    \ ]]; then\n            (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpiragdcaq.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp8ib_uny.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local i=0\n    for num in $1; do\n    \
    \    if [ $i -ge $2 ]; then\n            break\n        fi\n        if [ ${#num}\
    \ -le 2 ]; then\n            sum=$((sum + num))\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    local\
    \ i=0\n    while [[ $i -lt $k ]]; do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n\
    \            sum=$((sum + ${arr[$i]}))\n        fi\n        i=$((i + 1))\n   \
    \ done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphaklxc7g.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmphaklxc7g.sh: line 18: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for (( i=0;\
    \ i<k; i++ )); do\n    if (( arr[i] < 100 )); then\n      (( sum += arr[i] ))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw691u9d0.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<$k; i++)); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n        \
    \    ((sum+=${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=(\"$@\")\n  local k=${arr[-1]}\n  local sum=0\n\
    \  for (( i=0; i<k; i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((\
    \ sum += arr[i] ))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3v95l9y7.sh: line 16: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local list=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${list[i]} -lt 100 ]]; then\n         \
    \   ((sum+=${list[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2efpuudf.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2efpuudf.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    if [ \"$i\" -lt 100 ]; then\n      sum=$((sum + i))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpi0qsl9yp.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw691u9d0.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$(( sum + ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum += ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<$k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n      \
    \      (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for num in $1; do\n    if [ $i\
    \ -ge $2 ]; then\n      break\n    fi\n    if [ ${#num} -le 2 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     sum=$(( sum + ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum += ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -le 99 ]]; then\n           \
    \ sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    for ((i=0; i<$2; i++));\
    \ do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            ((sum+=${arr[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local k=$2\n    for i in $1; do\n     \
    \   if [ $k -eq 0 ]; then\n            break\n        fi\n        if [ $i -lt\
    \ 100 ]; then\n            sum=$((sum + i))\n        fi\n        k=$((k - 1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         ((sum+=arr[i]))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0fmvd212.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n       \
    \     (( sum += ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum += ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 100 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpllne588z.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<$k; i++)); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n        \
    \    sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpnsp_aawx.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for i in ${arr[@]:0:$k};\
    \ do\n    if [[ $i -lt 100 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [ ${#i} -le 2 ]; then\n      sum=$((sum + i))\n    fi\n  done\n \
    \ echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3vadvkmh.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local sum=0\n  local i=0\n  for n in $1; do\n    if [ $i -ge\
    \ $2 ]; then\n      break\n    fi\n    if [ ${#n} -le 2 ]; then\n      sum=$((sum\
    \ + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n        \
    \    (( sum += arr[i] ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpp8ib_uny.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  local i=0\n\
    \  while [ $i -lt $k ]; do\n    local num=${arr[$i]}\n    if [ $num -lt 10 ];\
    \ then\n      sum=$((sum + num))\n    elif [ $num -lt 100 ]; then\n      sum=$((sum\
    \ + num))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for\
    \ i in ${arr[@]}; do\n        if [ ${#i} -le 2 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdgz53wfy.sh: line 12: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660003363
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n\
    # 2. 1 <= k <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\n\
    add_elements() {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660003363

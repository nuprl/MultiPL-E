name: HumanEval_128_prod_signs
language: sh
prompt: "#!/bin/bash\n# You are given an array arr of integers and you need to return\n\
  # sum of magnitudes of integers multiplied by product of all signs\n# of each number\
  \ in the array, represented by 1, -1 or 0.\n# Note: return None for empty arr.\n\
  # Example:\n#\n# $1 is a space-separated list\nprod_signs() {\n"
tests: "}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\"\
  \ ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\
  \") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
  \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[\
  \ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
completions: ["  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local sum=0\n  local\
    \ prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=\"$1\"\n  local res=1\n  local sum=0\n  for i in $arr;\
    \ do\n    if [ $i -lt 0 ]; then\n      res=$((res * -1))\n    elif [ $i -gt 0\
    \ ]; then\n      res=$((res * 1))\n    else\n      res=0\n      break\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((res * sum))", "  local arr=$1\n  local\
    \ prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n\
    \      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n   \
    \ if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n     \
    \ ((prod *= -1))\n    fi\n    ((sum += i < 0 ? -i : i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      continue\n    elif [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[\
    \ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=$1\n  local prod=1\n  local\
    \ sum=0\n  for i in $arr; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod *\
    \ -1))\n    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n    \
    \  prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    sum=$((sum\
    \ + i))\n    prod=$((prod * (i < 0 ? -1 : 1)))\n  done\n  echo $((sum * prod))",
  "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n   \
    \ if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + (i * prod)))\n  done\n  echo $sum", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n\
    \      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      continue\n \
    \   elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n  \
    \    prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i\
    \ in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n  \
    \  elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [ \"$i\" -gt 0 ]; then\n      prod=$((prod * 1))\n    elif [ \"$i\" -lt\
    \ 0 ]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      (( prod *= -1 ))\n    fi\n    (( sum += i ))\n  done\n  echo \"$(( sum\
    \ * prod ))\"", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n\
    \      (( prod *= -1 ))\n    fi\n    (( sum += abs($i) ))\n  done\n  echo $((\
    \ prod * sum ))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in\
    \ ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif\
    \ [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      (( prod *= -1 ))\n    fi\n    (( sum += i ))\n  done\n  echo\
    \ \"$(( prod * sum ))\"", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [\
    \ $i -eq 0 ]; then\n      prod=0\n    elif [ $i -lt 0 ]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ -a arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n\
    \      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local -a arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local arr=\"$1\"\n  local sum=0\n  local prod=1\n  for i in $arr; do\n    if\
    \ [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      (( prod *= -1 ))\n\
    \    fi\n    (( sum += i ))\n  done\n  (( sum *= prod ))\n  echo \"$sum\"", " \
    \ local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt\
    \ 0 ]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n  \
    \  fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n\
    \      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n  \
    \    prod=0\n      break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=$1\n  local prod=1\n  local sum=0\n  for i in $arr; do\n    if [ $i -lt\
    \ 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=$1\n  local prod=1\n  local sum=0\n  for\
    \ i in $arr; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif\
    \ [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod *\
    \ 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[\
    \ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n \
    \   elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ (( prod *= -1 ))\n    fi\n    (( sum += i ))\n  done\n  echo \"$(( sum * prod\
    \ ))\"", "  local arr=\"$1\"\n  local prod=1\n  local sum=0\n  for i in $arr;\
    \ do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=$1\n  local prod=1\n  local sum=0\n\
    \  for i in $arr; do\n    if [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n  \
    \  elif [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=$1\n  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ -a arr\n  local prod_signs\n  local prod_magnitudes\n  local sum_magnitudes\n\
    \  local i\n  local sign\n  local magnitude\n  local result\n\n  arr=($1)\n  prod_signs=1\n\
    \  prod_magnitudes=1\n  sum_magnitudes=0\n\n  for ((i=0; i<${#arr[@]}; i++));\
    \ do\n    sign=${arr[$i]#-}\n    sign=${sign:+1}\n    sign=${sign:-1}\n    prod_signs=$((prod_signs\
    \ * sign))\n\n    magnitude=${arr[$i]#-}\n    prod_magnitudes=$((prod_magnitudes\
    \ * magnitude))\n    sum_magnitudes=$((sum_magnitudes + magnitude))\n  done\n\n\
    \  result=$((prod_signs * sum_magnitudes))\n  echo $result", "  local arr=($1)\n\
    \  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n     \
    \ prod=0\n      break\n    fi\n    prod=$((prod * (i / abs(i))))\n  done\n  echo\
    \ $prod", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif\
    \ [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i\
    \ -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=$1\n  local sum=0\n  local prod=1\n  for\
    \ i in $arr; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif\
    \ [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n  local prod=1\n  local\
    \ sum=0\n  local sign\n  for num in $arr; do\n    if [ $num -gt 0 ]; then\n  \
    \    sign=1\n    elif [ $num -lt 0 ]; then\n      sign=-1\n    else\n      sign=0\n\
    \    fi\n    prod=$((prod * sign))\n    sum=$((sum + num))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local sum=0\n\
    \  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n \
    \     prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n \
    \ for i in ${arr[@]}; do\n    sum=$((sum + i))\n    prod=$((prod * i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in ${arr[@]}; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n\
    \    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local len=${#arr[@]}\n  local prod=1\n  local\
    \ sum=0\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[$i]} -gt 0 ]]; then\n\
    \      prod=$((prod * 1))\n    elif [[ ${arr[$i]} -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + ${arr[$i]}))\n\
    \  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  for i in\
    \ ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n\
    \    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n  done\n  echo\
    \ $prod", "  local arr=\"$1\"\n  local sum=0\n  local prod=1\n  for i in $arr;\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    sum=$((sum\
    \ + i))\n    prod=$((prod * i / abs(i)))\n  done\n  echo $((sum * prod))", " \
    \ local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n  \
    \  if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n    \
    \  (( prod *= -1 ))\n    fi\n    (( sum += i ))\n  done\n  echo $(( sum * prod\
    \ ))", "  local arr=$1\n  local sum=0\n  local prod=1\n  local num\n  for num\
    \ in $arr; do\n    if [ $num -eq 0 ]; then\n      prod=0\n      break\n    fi\n\
    \    if [ $num -lt 0 ]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + num))\n  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n  local sum=0\n\
    \  local prod=1\n  for i in $arr; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    case $i in\n      0)\n        ;;\n      *)\n        prod=$((prod * ${i:0:1}))\n\
    \        sum=$((sum + ${i:0:1} * ${i:1}))\n        ;;\n    esac\n  done\n  echo\
    \ $((prod * sum))", "  local arr=\"$1\"\n  local prod=1\n  local sum=0\n  for\
    \ i in $arr; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=$1\n  local prod=1\n  local sum=0\n  for\
    \ i in $arr; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n\
    \  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [ $i -gt 0 ]; then\n\
    \      prod=$((prod * 1))\n    elif [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n\
    \    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i\
    \ in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n  \
    \  elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [\
    \ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n \
    \     prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[\
    \ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n  local prod=1\n\
    \  local sum=0\n  for i in $arr; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n  local prod=1\n\
    \  local sum=0\n  for i in $arr; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=$1\n  local sum=0\n  local prod=1\n  for i in $arr;\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[\
    \ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod *\
    \ -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [\
    \ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n \
    \     prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=$1\n  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=$1\n\
    \  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [[ $i -eq 0 ]]; then\n\
    \      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      continue\n    fi\n    prod=$((prod\
    \ * (i / abs(i))))\n    sum=$((sum + abs(i)))\n  done\n  echo $((prod * sum))",
  "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + ${i#-}))\n\
    \  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n  local sum=0\n  local\
    \ prod=1\n  for i in $arr; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n \
    \   elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ -a arr=(\"$@\")\n  local -i prod=1\n  local -i sum=0\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=$1\n\
    \  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [[ $i -gt 0 ]]; then\n\
    \      sum=$((sum + i))\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      sum=$((sum + i * -1))\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local\
    \ prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=\"$1\"\n  local sum=0\n  local prod=1\n  for i in $arr;\
    \ do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=$1\n  local sum=0\n  local prod=1\n\
    \  for i in $arr; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=$1\n  local prod=1\n  local sum=0\n  for i in $arr; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=\"$1\"\n  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n  \
    \    prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n  \
    \    prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=\"$1\"\n  local sum=0\n  local prod=1\n  local\
    \ sign=0\n  for i in $arr; do\n    if [[ $i -gt 0 ]]; then\n      sign=1\n   \
    \ elif [[ $i -lt 0 ]]; then\n      sign=-1\n    else\n      sign=0\n    fi\n \
    \   sum=$((sum + i))\n    prod=$((prod * sign))\n  done\n  echo $((sum * prod))",
  "  local arr=$1\n  local prod=1\n  local sum=0\n  for i in $arr; do\n    if [ $i\
    \ -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n    \
    \  prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif\
    \ [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n  done\n  echo $prod",
  "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      ((prod *= -1))\n    fi\n    ((sum += i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n  local prod=1\n  local\
    \ sum=0\n  for i in $arr; do\n    if [ $i -gt 0 ]; then\n      prod=$((prod *\
    \ 1))\n    elif [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    else\n    \
    \  prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n   \
    \ if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n\
    \      prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=$1\n  local sum=0\n  local prod=1\n  for i in\
    \ $arr; do\n    if [[ $i -gt 0 ]]; then\n      sum=$((sum + i))\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      sum=$((sum + i * -1))\n      prod=$((prod\
    \ * -1))\n    fi\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local\
    \ prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      ((prod *= -1))\n  \
    \  fi\n    ((sum += i))\n  done\n  ((sum *= prod))\n  echo $sum", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=$1\n  local prod=1\n  local sum=0\n  for i in $arr; do\n    if [[ $i -gt\
    \ 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [ $i -lt 0 ]; then\n      prod=$((prod*-1))\n    elif [ $i -gt 0\
    \ ]; then\n      prod=$((prod*1))\n    else\n      prod=$((prod*0))\n    fi\n\
    \    sum=$((sum+i))\n  done\n  echo $((sum*prod))", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n\
    \      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod *\
    \ -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local sum=0\n\
    \  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n \
    \     ((sum += i))\n      ((prod *= 1))\n    elif [[ $i -lt 0 ]]; then\n     \
    \ ((sum += i * -1))\n      ((prod *= -1))\n    fi\n  done\n  echo \"$sum * $prod\"\
    \ | bc", "  local -a arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif\
    \ [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n   \
    \ fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]];\
    \ then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [\
    \ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n \
    \     prod=$((prod * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in ${arr[@]}; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n\
    \    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n      prod=0\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n  done\n  echo $prod", "  local\
    \ arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[\
    \ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local sum=0\n\
    \  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n \
    \     prod=0\n      break\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod *\
    \ 1))\n    else\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif\
    \ [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=\"$1\"\n  local prod=1\n  local sum=0\n  for i in $arr;\
    \ do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=$1\n  local sum=0\n  local prod=1\n  local sign=0\n  local num=0\n  for\
    \ i in $arr; do\n    num=$(echo $i | sed 's/^-//')\n    sign=$(echo $i | sed 's/^-//'\
    \ | sed 's/^0//')\n    if [ -z \"$sign\" ]; then\n      sign=0\n    elif [ \"\
    $num\" -eq \"$num\" ]; then\n      sign=1\n    else\n      sign=-1\n    fi\n \
    \   sum=$((sum + num))\n    prod=$((prod * sign))\n  done\n  echo $((sum * prod))",
  "  local arr=\"$1\"\n  local sum=0\n  local prod=1\n  for i in $arr; do\n    if\
    \ [ $i -gt 0 ]; then\n      sum=$((sum + i))\n      prod=$((prod * 1))\n    elif\
    \ [ $i -lt 0 ]; then\n      sum=$((sum + i * -1))\n      prod=$((prod * -1))\n\
    \    else\n      prod=$((prod * 0))\n    fi\n  done\n  echo $((sum * prod))",
  "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\";\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \ elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n\
    \  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0\
    \ ]]; then\n      prod=$(( prod * -1 ))\n    fi\n    sum=$(( sum + i ))\n  done\n\
    \  echo $(( sum * prod ))", "  local -a arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in\
    \ \"${arr[@]}\"; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n \
    \   elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local\
    \ prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [ $i -gt 0 ]; then\n\
    \      prod=$((prod * 1))\n    elif [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n\
    \    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i\
    \ in ${arr[@]}; do\n    if [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    elif\
    \ [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n\
    \      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n  done\n  echo $prod", "  local arr=$1\n  local sum=0\n  local\
    \ prod=1\n  for i in $arr; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod\
    \ * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=$1\n  local prod=1\n  local sum=0\n  for i in $arr;\
    \ do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=$(echo\
    \ $1 | tr ' ' '\\n' | sort -n)\n  local prod=1\n  local sum=0\n  local num\n \
    \ for num in $arr; do\n    if [[ $num -gt 0 ]]; then\n      sum=$((sum + num))\n\
    \    elif [[ $num -lt 0 ]]; then\n      prod=$((prod * -1))\n      sum=$((sum\
    \ - num))\n    fi\n  done\n  echo $((sum * prod))", "  local prod=1\n  local sum=0\n\
    \  for i in $1; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n   \
    \ elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    fi\n    sum=$((sum +\
    \ i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local\
    \ sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n  \
    \    prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod *\
    \ 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n\
    \      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=$1\n  local prod=1\n  local sum=0\n  for i in $arr;\
    \ do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum\
    \ * prod))", "  local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]};\
    \ do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n \
    \ for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n\
    \      prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n  local sum=0\n \
    \ local prod=1\n  for i in ${arr[@]}; do\n    if [ $i -lt 0 ]; then\n      prod=$((prod\
    \ * -1))\n    elif [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    else\n  \
    \    prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", " \
    \ local arr=($1)\n  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n  \
    \  if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=\"$1\"\n\
    \  local sum=0\n  local prod=1\n  for i in $arr; do\n    if [ $i -lt 0 ]; then\n\
    \      prod=$((prod * -1))\n    elif [ $i -gt 0 ]; then\n      prod=$((prod *\
    \ 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))", "  local arr=$1\n  local prod=1\n  local sum=0\n  for\
    \ i in $arr; do\n    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif\
    \ [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n     \
    \ prod=$((prod * 1))\n    else\n      prod=0\n      break\n    fi\n  done\n  echo\
    \ $prod", "  local arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"\
    ${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif\
    \ [[ $i -lt 0 ]]; then\n      ((prod *= -1))\n    fi\n    ((sum += i))\n  done\n\
    \  echo \"$((sum * prod))\"", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    elif [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [ \"$i\" -gt 0 ]; then\n      prod=$((prod * 1))\n    elif [ \"$i\" -lt\
    \ 0 ]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n \
    \   fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=($1)\n\
    \  local sum=0\n  local prod=1\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n  local\
    \ sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n\
    \      break\n    fi\n    if [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n\
    \    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[ $i -gt 0 ]];\
    \ then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum + i))\n \
    \ done\n  echo $((sum * prod))", "  local arr=$1\n  local sum=0\n  local prod=1\n\
    \  for i in $arr; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n\
    \    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local sum=0\n\
    \  local prod=1\n  for i in \"${arr[@]}\"; do\n    if [ \"$i\" -gt 0 ]; then\n\
    \      sum=$((sum + i))\n      prod=$((prod * 1))\n    elif [ \"$i\" -lt 0 ];\
    \ then\n      sum=$((sum + i * -1))\n      prod=$((prod * -1))\n    else\n   \
    \   prod=$((prod * 0))\n    fi\n  done\n  echo \"$((sum * prod))\"", "  local\
    \ arr=($1)\n  local prod=1\n  local sum=0\n  for i in ${arr[@]}; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod\
    \ * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -gt 0 ]]; then\n      prod=$((prod * 1))\n    elif [[ $i -lt 0 ]];\
    \ then\n      prod=$((prod * -1))\n    else\n      prod=$((prod * 0))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "  local arr=(\"$@\"\
    )\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))",
  "  local arr=$1\n  local prod=1\n  local sum=0\n  for i in $arr; do\n    if [[ $i\
    \ -lt 0 ]]; then\n      prod=$((prod * -1))\n    elif [[ $i -gt 0 ]]; then\n \
    \     prod=$((prod * 1))\n    else\n      prod=$((prod * 0))\n    fi\n    sum=$((sum\
    \ + i))\n  done\n  echo $((sum * prod))", "  local arr=(\"$@\")\n  local prod=1\n\
    \  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [ \"$i\" -lt 0 ]; then\n\
    \      prod=$((prod * -1))\n    elif [ \"$i\" -gt 0 ]; then\n      prod=$((prod\
    \ * 1))\n    else\n      prod=0\n    fi\n    sum=$((sum + i))\n  done\n  echo\
    \ $((sum * prod))", "  local arr=\"$1\"\n  local prod=1\n  local sum=0\n  for\
    \ i in $arr; do\n    if [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    elif\
    \ [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    else\n      prod=$((prod\
    \ * 0))\n    fi\n    sum=$((sum + i))\n  done\n  echo $((sum * prod))", "  local\
    \ arr=(\"$@\")\n  local sum=0\n  local prod=1\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -eq 0 ]]; then\n      prod=0\n      break\n    fi\n    if [[ $i\
    \ -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n\
    \  echo $((sum * prod))"]
stop_tokens:
- "\n}"

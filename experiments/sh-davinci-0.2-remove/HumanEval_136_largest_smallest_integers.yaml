name: HumanEval_136_largest_smallest_integers
language: sh
prompt: "#!/bin/bash\n# Create a function that returns a tuple (a, b), where 'a' is\n\
  # the largest of negative integers, and 'b' is the smallest\n# of positive integers\
  \ in a list.\n# If there is no negative or positive integers, return them as None.\n\
  # Examples:\n#\n# $1 is a space-separated list\nlargest_smallest_integers() {\n"
tests: "}\n\ncandidate() {\n    largest_smallest_integers \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"2 4 1 3 5 7\") = \"None 1\" ]]\n    [[ $(candidate \"\
  2 4 1 3 5 7 0\") = \"None 1\" ]]\n    [[ $(candidate \"1 3 2 4 5 6 -2\") = \"-2\
  \ 1\" ]]\n    [[ $(candidate \"4 5 3 6 2 7 -7\") = \"-7 2\" ]]\n    [[ $(candidate\
  \ \"7 3 8 4 9 2 5 -9\") = \"-9 2\" ]]\n    [[ $(candidate \"\") = \"None None\"\
  \ ]]\n    [[ $(candidate \"0\") = \"None None\" ]]\n    [[ $(candidate \"-1 -3 -5\
  \ -6\") = \"-1 None\" ]]\n    [[ $(candidate \"-1 -3 -5 -6 0\") = \"-1 None\" ]]\n\
  \    [[ $(candidate \"-6 -4 -4 -3 1\") = \"-3 1\" ]]\n    [[ $(candidate \"-6 -4\
  \ -4 -3 -100 1\") = \"-3 1\" ]]\n}\n\nrun_test"
completions: ["  local -a array=($1)\n  local -i max_neg=0\n  local -i min_pos=0\n\
    \  local -i i=0\n  local -i len=${#array[@]}\n  local -i neg_count=0\n  local\
    \ -i pos_count=0\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${array[$i]} -lt\
    \ 0 ]]; then\n      ((neg_count++))\n      if [[ ${array[$i]} -gt $max_neg ]];\
    \ then\n        max_neg=${array[$i]}\n      fi\n    elif [[ ${array[$i]} -gt 0\
    \ ]]; then\n      ((pos_count++))\n      if [[ $min_pos -eq 0 ]]; then\n     \
    \   min_pos=${array[$i]}\n      elif [[ ${array[$i]} -lt $min_pos ]]; then\n \
    \       min_pos=${array[$i]}\n      fi\n    fi\n  done\n\n  if [[ $neg_count -eq\
    \ 0 ]]; then\n    max_neg=None\n  fi\n\n  if [[ $pos_count -eq 0 ]]; then\n  \
    \  min_pos=None\n  fi\n\n  echo \"($max_neg, $min_pos)\"", "    local -a arr=(\"\
    $@\")\n    local -i max=0\n    local -i min=0\n    local -i i=0\n    local -i\
    \ len=${#arr[@]}\n    local -i is_positive=0\n    local -i is_negative=0\n\n \
    \   for ((i=0; i<len; i++)); do\n        if [[ ${arr[i]} -gt 0 ]]; then\n    \
    \        is_positive=1\n            if [[ $is_negative -eq 0 ]]; then\n      \
    \          min=${arr[i]}\n            else\n                if [[ ${arr[i]} -lt\
    \ $min ]]; then\n                    min=${arr[i]}\n                fi\n     \
    \       fi\n        elif [[ ${arr[i]} -lt 0 ]]; then\n            is_negative=1\n\
    \            if [[ $is_positive -eq 0 ]]; then\n                max=${arr[i]}\n\
    \            else\n                if [[ ${arr[i]} -gt $max ]]; then\n       \
    \             max=${arr[i]}\n                fi\n            fi\n        fi\n\
    \    done\n\n    if [[ $is_positive -eq 0 ]]; then\n        min=None\n    fi\n\
    \n    if [[ $is_negative -eq 0 ]]; then\n        max=None\n    fi\n\n    echo\
    \ \"($max, $min)\"", "    local -a arr=()\n    local -a neg=()\n    local -a pos=()\n\
    \    local -a res=()\n    local i\n    local j\n    local k\n    local l\n   \
    \ local m\n    local n\n    local o\n    local p\n    local q\n    local r\n \
    \   local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local\
    \ dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n \
    \   local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local\
    \ oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n \
    \   local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local\
    \ zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n\
    \    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n \
    \   local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n  \
    \  local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n   \
    \ local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local\
    \ zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local\
    \ eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local\
    \ jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local\
    \ oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local\
    \ tttt\n    local uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local\
    \ yyyy\n    local zzzz\n    local aaaaa\n    local bbbbb\n", "    local -a numbers=($1)\n\
    \    local largest_negative=0\n    local smallest_positive=0\n    local i=0\n\
    \    local number=0\n\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        number=${numbers[$i]}\n\
    \        if [[ $number -lt 0 ]]; then\n            if [[ $number -gt $largest_negative\
    \ ]]; then\n                largest_negative=$number\n            fi\n       \
    \ elif [[ $number -gt 0 ]]; then\n            if [[ $number -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$number\n            fi\n      \
    \  fi\n    done\n\n    if [[ $largest_negative -eq 0 ]]; then\n        largest_negative=None\n\
    \    fi\n\n    if [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=None\n\
    \    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "    local -a\
    \ negative_integers\n    local -a positive_integers\n    local -a integers\n \
    \   local -a result\n    local integer\n\n    integers=($1)\n    for integer in\
    \ \"${integers[@]}\"; do\n        if [[ $integer -lt 0 ]]; then\n            negative_integers+=($integer)\n\
    \        elif [[ $integer -gt 0 ]]; then\n            positive_integers+=($integer)\n\
    \        fi\n    done\n\n    if [[ ${#negative_integers[@]} -eq 0 ]]; then\n \
    \       result+=(None)\n    else\n        result+=($(printf \"%s\\n\" \"${negative_integers[@]}\"\
    \ | sort -nr | head -n 1))\n    fi\n\n    if [[ ${#positive_integers[@]} -eq 0\
    \ ]]; then\n        result+=(None)\n    else\n        result+=($(printf \"%s\\\
    n\" \"${positive_integers[@]}\" | sort -n | head -n 1))\n    fi\n\n    echo \"\
    ${result[@]}\"", "    local -a list=($1)\n    local -a negatives\n    local -a\
    \ positives\n    local -a result\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            negatives+=(\"$i\")\n        elif [[ $i -gt\
    \ 0 ]]; then\n            positives+=(\"$i\")\n        fi\n    done\n    if [[\
    \ ${#negatives[@]} -gt 0 ]]; then\n        result+=(\"$(printf '%s\\n' \"${negatives[@]}\"\
    \ | sort -nr | head -n1)\")\n    else\n        result+=(\"None\")\n    fi\n  \
    \  if [[ ${#positives[@]} -gt 0 ]]; then\n        result+=(\"$(printf '%s\\n'\
    \ \"${positives[@]}\" | sort -n | head -n1)\")\n    else\n        result+=(\"\
    None\")\n    fi\n    echo \"${result[@]}\"", "  local -a arr=(\"$@\")\n  local\
    \ -a neg_arr=()\n  local -a pos_arr=()\n  local -a res=()\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\
    \  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i\
    \ hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n \
    \ local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n\
    \  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local\
    \ -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i ll", "    local -a\
    \ arr\n    arr=($1)\n    local -a neg_arr\n    local -a pos_arr\n    local -i\
    \ neg_max\n    local -i pos_min\n    local -i i\n    local -i len\n    len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        if [[ ${arr[$i]} -lt 0 ]]; then\n  \
    \          neg_arr+=(${arr[$i]})\n        elif [[ ${arr[$i]} -gt 0 ]]; then\n\
    \            pos_arr+=(${arr[$i]})\n        fi\n    done\n    if [[ ${#neg_arr[@]}\
    \ -eq 0 ]]; then\n        neg_max=None\n    else\n        neg_max=${neg_arr[0]}\n\
    \        for ((i=1; i<${#neg_arr[@]}; i++)); do\n            if [[ ${neg_arr[$i]}\
    \ -gt $neg_max ]]; then\n                neg_max=${neg_arr[$i]}\n            fi\n\
    \        done\n    fi\n    if [[ ${#pos_arr[@]} -eq 0 ]]; then\n        pos_min=None\n\
    \    else\n        pos_min=${pos_arr[0]}\n        for ((i=1; i<${#pos_arr[@]};\
    \ i++)); do\n            if [[ ${pos_arr[$i]} -lt $pos_min ]]; then\n        \
    \        pos_min=${pos_arr[$i]}\n            fi\n        done\n    fi\n    echo\
    \ \"($neg_max, $pos_min)\"", "    local -a arr=($1)\n    local -a negs\n    local\
    \ -a poss\n    local -a result\n    for i in \"${arr[@]}\"; do\n        if [[\
    \ $i -lt 0 ]]; then\n            negs+=($i)\n        elif [[ $i -gt 0 ]]; then\n\
    \            poss+=($i)\n        fi\n    done\n    if [[ ${#negs[@]} -gt 0 ]];\
    \ then\n        result+=($(printf \"%s\\n\" \"${negs[@]}\" | sort -nr | head -n1))\n\
    \    else\n        result+=(None)\n    fi\n    if [[ ${#poss[@]} -gt 0 ]]; then\n\
    \        result+=($(printf \"%s\\n\" \"${poss[@]}\" | sort -n | head -n1))\n \
    \   else\n        result+=(None)\n    fi\n    echo \"${result[@]}\"", "    local\
    \ list=$1\n    local largest_negative=0\n    local smallest_positive=0\n    local\
    \ first_positive=0\n    local first_negative=0\n    local first_positive_found=0\n\
    \    local first_negative_found=0\n    local first_positive_index=0\n    local\
    \ first_negative_index=0\n    local index=0\n    local number=0\n    local list_length=0\n\
    \    local list_length_minus_one=0\n    local list_length_minus_two=0\n    local\
    \ list_length_minus_three=0\n    local list_length_minus_four=0\n    local list_length_minus_five=0\n\
    \    local list_length_minus_six=0\n    local list_length_minus_seven=0\n    local\
    \ list_length_minus_eight=0\n    local list_length_minus_nine=0\n    local list_length_minus_ten=0\n\
    \    local list_length_minus_eleven=0\n    local list_length_minus_twelve=0\n\
    \    local list_length_minus_thirteen=0\n    local list_length_minus_fourteen=0\n\
    \    local list_length_minus_fifteen=0\n    local list_length_minus_sixteen=0\n\
    \    local list_length_minus_seventeen=0\n    local list_length_minus_eighteen=0\n\
    \    local list_length_minus_nineteen=0\n    local list_length_minus_twenty=0\n\
    \    local list_length_minus_twenty_one=0\n    local list_length_minus_twenty_two=0\n\
    \    local list_length_minus_twenty_three=0\n    local list_length_minus_twenty_four=0\n\
    \    local list_length_minus_twenty_five=0\n    local list_length_minus_twenty_six=0\n\
    \    local list_length_minus_twenty_seven=0\n    local list_length_minus_twenty_eight=0\n\
    \    local list_length_minus_twenty_nine=0\n    local list_length_minus_thirty=0\n\
    \    local list_length_minus_thirty_one=0", "  local -a arr=($1)\n  local -i max_neg=0\n\
    \  local -i min_pos=0\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i flag=0\n\
    \  local -i flag2=0\n  while [ $i -lt $len ]; do\n    if [ ${arr[$i]} -lt 0 ];\
    \ then\n      if [ ${arr[$i]} -gt $max_neg ]; then\n        max_neg=${arr[$i]}\n\
    \      fi\n      flag=1\n    elif [ ${arr[$i]} -gt 0 ]; then\n      if [ $flag2\
    \ -eq 0 ]; then\n        min_pos=${arr[$i]}\n        flag2=1\n      elif [ ${arr[$i]}\
    \ -lt $min_pos ]; then\n        min_pos=${arr[$i]}\n      fi\n    fi\n    i=$i+1\n\
    \  done\n  if [ $flag -eq 0 ]; then\n    max_neg=None\n  fi\n  if [ $flag2 -eq\
    \ 0 ]; then\n    min_pos=None\n  fi\n  echo \"($max_neg, $min_pos)\"", "    local\
    \ list=$1\n    local negative_max=0\n    local positive_min=0\n    local negative_count=0\n\
    \    local positive_count=0\n    for i in $list; do\n        if [ $i -lt 0 ];\
    \ then\n            if [ $i -gt $negative_max ]; then\n                negative_max=$i\n\
    \            fi\n            ((negative_count++))\n        elif [ $i -gt 0 ];\
    \ then\n            if [ $positive_count -eq 0 ]; then\n                positive_min=$i\n\
    \            elif [ $i -lt $positive_min ]; then\n                positive_min=$i\n\
    \            fi\n            ((positive_count++))\n        fi\n    done\n    if\
    \ [ $negative_count -eq 0 ]; then\n        negative_max=None\n    fi\n    if [\
    \ $positive_count -eq 0 ]; then\n        positive_min=None\n    fi\n    echo \"\
    ($negative_max, $positive_min)\"", "  local -a array=()\n  local -i i=0\n  local\
    \ -i largest_negative=0\n  local -i smallest_positive=0\n  local -i largest_negative_found=0\n\
    \  local -i smallest_positive_found=0\n  local -i largest_negative_index=0\n \
    \ local -i smallest_positive_index=0\n  local -i array_length=0\n  local -i number=0\n\
    \n  # Split the string into an array\n  IFS=' ' read -r -a array <<< \"$1\"\n\n\
    \  # Find the largest negative and smallest positive integers\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    number=${array[$i]}\n    if ((number < 0)); then\n      if ((largest_negative_found\
    \ == 0)); then\n        largest_negative=number\n        largest_negative_found=1\n\
    \        largest_negative_index=$i\n      elif ((number > largest_negative));\
    \ then\n        largest_negative=number\n        largest_negative_index=$i\n \
    \     fi\n    elif ((number > 0)); then\n      if ((smallest_positive_found ==\
    \ 0)); then\n        smallest_positive=number\n        smallest_positive_found=1\n\
    \        smallest_positive_index=$i\n      elif ((number < smallest_positive));\
    \ then\n        smallest_positive=number\n        smallest_positive_index=$i\n\
    \      fi\n    fi\n  done\n\n  # Print the results\n  if ((largest_negative_found\
    \ == 0)); then\n    echo \"None\"\n  else\n    echo \"${array[$largest_negative_index]}\"\
    \n  fi\n  if ((smallest_positive_found == 0)); then\n    echo \"None\"\n  else\n\
    \    echo \"${array[$smallest_positive_index]}\"\n  fi", "    local -a arr=($1)\n\
    \    local max_neg=0\n    local min_pos=0\n    local max_neg_flag=0\n    local\
    \ min_pos_flag=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            if [[ $i -gt $max_neg ]]; then\n                max_neg=$i\n    \
    \            max_neg_flag=1\n            fi\n        elif [[ $i -gt 0 ]]; then\n\
    \            if [[ $min_pos_flag -eq 0 ]]; then\n                min_pos=$i\n\
    \                min_pos_flag=1\n            elif [[ $i -lt $min_pos ]]; then\n\
    \                min_pos=$i\n            fi\n        fi\n    done\n    if [[ $max_neg_flag\
    \ -eq 0 ]]; then\n        max_neg=None\n    fi\n    if [[ $min_pos_flag -eq 0\
    \ ]]; then\n        min_pos=None\n    fi\n    echo \"($max_neg, $min_pos)\"",
  "    local -a arr=($1)\n    local -i a=0 b=0\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i neg_count=0 pos_count=0\n    local -i neg_max=0 pos_min=0\n\n  \
    \  while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt 0 ]; then\n        \
    \    neg_count=$((neg_count + 1))\n            if [ ${arr[$i]} -gt $neg_max ];\
    \ then\n                neg_max=${arr[$i]}\n            fi\n        elif [ ${arr[$i]}\
    \ -gt 0 ]; then\n            pos_count=$((pos_count + 1))\n            if [ $pos_count\
    \ -eq 1 ]; then\n                pos_min=${arr[$i]}\n            elif [ ${arr[$i]}\
    \ -lt $pos_min ]; then\n                pos_min=${arr[$i]}\n            fi\n \
    \       fi\n        i=$((i + 1))\n    done\n\n    if [ $neg_count -eq 0 ]; then\n\
    \        a=None\n    else\n        a=$neg_max\n    fi\n\n    if [ $pos_count -eq\
    \ 0 ]; then\n        b=None\n    else\n        b=$pos_min\n    fi\n\n    echo\
    \ \"($a, $b)\"", "    local -a list=($1)\n    local -a negatives\n    local -a\
    \ positives\n    local -a result\n    for i in \"${list[@]}\"; do\n        if\
    \ (( i < 0 )); then\n            negatives+=(\"$i\")\n        elif (( i > 0 ));\
    \ then\n            positives+=(\"$i\")\n        fi\n    done\n    if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ '%s\\n' \"${negatives[@]}\" | sort -nr | head -n1)\")\n    fi\n    if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ '%s\\n' \"${positives[@]}\" | sort -n | head -n1)\")\n    fi\n    echo \"${result[@]}\"",
  "    local -a arr=(\"$@\")\n    local -a neg=()\n    local -a pos=()\n    local\
    \ -a zero=()\n    local -a result=()\n    for i in \"${arr[@]}\"; do\n       \
    \ if [[ $i -lt 0 ]]; then\n            neg+=($i)\n        elif [[ $i -gt 0 ]];\
    \ then\n            pos+=($i)\n        else\n            zero+=($i)\n        fi\n\
    \    done\n    if [[ ${#neg[@]} -eq 0 ]]; then\n        result+=(None)\n    else\n\
    \        result+=($(printf '%s\\n' \"${neg[@]}\" | sort -nr | head -n1))\n   \
    \ fi\n    if [[ ${#pos[@]} -eq 0 ]]; then\n        result+=(None)\n    else\n\
    \        result+=($(printf '%s\\n' \"${pos[@]}\" | sort -n | head -n1))\n    fi\n\
    \    echo \"${result[@]}\"", "    local -a arr=($1)\n    local -i i=0\n    local\
    \ -i max=0\n    local -i min=0\n    local -i max_index=0\n    local -i min_index=0\n\
    \    local -i max_found=0\n    local -i min_found=0\n    local -i len=${#arr[@]}\n\
    \n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt 0 ]; then\n     \
    \       if [ $max_found -eq 0 ]; then\n                max=${arr[$i]}\n      \
    \          max_index=$i\n                max_found=1\n            elif [ ${arr[$i]}\
    \ -gt $max ]; then\n                max=${arr[$i]}\n                max_index=$i\n\
    \            fi\n        elif [ ${arr[$i]} -gt 0 ]; then\n            if [ $min_found\
    \ -eq 0 ]; then\n                min=${arr[$i]}\n                min_index=$i\n\
    \                min_found=1\n            elif [ ${arr[$i]} -lt $min ]; then\n\
    \                min=${arr[$i]}\n                min_index=$i\n            fi\n\
    \        fi\n        i=$((i+1))\n    done\n\n    if [ $max_found -eq 0 ]; then\n\
    \        max=\"None\"\n    fi\n    if [ $min_found -eq 0 ]; then\n        min=\"\
    None\"\n    fi\n\n    echo \"($max, $min)\"", "  local -a arr=()\n  local -a neg=()\n\
    \  local -a pos=()\n  local -a res=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -", "    local -a arr=($1)\n\
    \    local -a neg=()\n    local -a pos=()\n    local -a res=()\n    for i in \"\
    ${arr[@]}\"; do\n        if [ $i -lt 0 ]; then\n            neg+=($i)\n      \
    \  elif [ $i -gt 0 ]; then\n            pos+=($i)\n        fi\n    done\n    if\
    \ [ ${#neg[@]} -eq 0 ]; then\n        res+=(None)\n    else\n        res+=($(printf\
    \ \"%s\\n\" \"${neg[@]}\" | sort -nr | head -n1))\n    fi\n    if [ ${#pos[@]}\
    \ -eq 0 ]; then\n        res+=(None)\n    else\n        res+=($(printf \"%s\\\
    n\" \"${pos[@]}\" | sort -n | head -n1))\n    fi\n    echo \"${res[@]}\"", " \
    \ local -a arr=(\"$@\")\n  local -a neg_arr=()\n  local -a pos_arr=()\n  local\
    \ -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i\
    \ ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n\
    \  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local\
    \ -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i ll", "  local -a arr=()\n  local -i i=0\n  local -i len=0\n  local\
    \ -i min=0\n  local -i max=0\n  local -i num=0\n  local -i pos=0\n  local -i neg=0\n\
    \  local -i zero=0\n  local -i first=0\n  local -i second=0\n  local -i third=0\n\
    \  local -i fourth=0\n  local -i fifth=0\n  local -i sixth=0\n  local -i seventh=0\n\
    \  local -i eighth=0\n  local -i ninth=0\n  local -i tenth=0\n  local -i eleventh=0\n\
    \  local -i twelfth=0\n  local -i thirteenth=0\n  local -i fourteenth=0\n  local\
    \ -i fifteenth=0\n  local -i sixteenth=0\n  local -i seventeenth=0\n  local -i\
    \ eighteenth=0\n  local -i nineteenth=0\n  local -i twentieth=0\n  local -i twentyfirst=0\n\
    \  local -i twentysecond=0\n  local -i twentythird=0\n  local -i twentyfourth=0\n\
    \  local -i twentyfifth=0\n  local -i twentysixth=0\n  local -i twentyseventh=0\n\
    \  local -i twentyeighth=0\n  local -i twentyninth=0\n  local -i thirtieth=0\n\
    \  local -i thirtyfirst=0\n  local -i thirtysecond=0\n  local -i thirtythird=0\n\
    \  local -i thirtyfourth=0\n  local -i thirtyfifth=0\n  local -i thirtysixth=0\n\
    \  local -i thirtyseventh=0\n  local -i thirtyeighth=0\n  local -i thirtyninth=0\n\
    \  local -i fortieth=0\n  local -i fortyfirst=0\n  local -i fortysecond=0\n  local\
    \ -i fortythird=0\n  local -i fortyfourth=0\n  local -i fortyfifth=0\n  local\
    \ -i fortysixth=0\n  local -i fortyseventh=0\n  local -i fortyeighth=0\n  local\
    \ -i fortyn", "  local list=$1\n  local largest_negative_integer=0\n  local smallest_positive_integer=0\n\
    \  local is_positive_integer_found=0\n  local is_negative_integer_found=0\n\n\
    \  for integer in $list; do\n    if [[ $integer -lt 0 ]]; then\n      if [[ $integer\
    \ -gt $largest_negative_integer ]]; then\n        largest_negative_integer=$integer\n\
    \      fi\n      is_negative_integer_found=1\n    elif [[ $integer -gt 0 ]]; then\n\
    \      if [[ $is_positive_integer_found -eq 0 ]]; then\n        smallest_positive_integer=$integer\n\
    \      elif [[ $integer -lt $smallest_positive_integer ]]; then\n        smallest_positive_integer=$integer\n\
    \      fi\n      is_positive_integer_found=1\n    fi\n  done\n\n  if [[ $is_negative_integer_found\
    \ -eq 0 ]]; then\n    largest_negative_integer=None\n  fi\n\n  if [[ $is_positive_integer_found\
    \ -eq 0 ]]; then\n    smallest_positive_integer=None\n  fi\n\n  echo \"($largest_negative_integer,\
    \ $smallest_positive_integer)\"", "    local -a arr=()\n    local -i i=0\n   \
    \ local -i max=0\n    local -i min=0\n    local -i tmp=0\n    local -i cnt=0\n\
    \    local -i neg=0\n    local -i pos=0\n    local -i flag=0\n    local -i flag2=0\n\
    \    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i\
    \ flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n\
    \    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local\
    \ -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n\
    \    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local\
    \ -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n\
    \    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local\
    \ -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n\
    \    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local\
    \ -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n\
    \    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local\
    \ -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n\
    \    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n    local\
    \ -i flag48=0\n    local -i flag49=0\n    local -i flag50", "  local -a arr=()\n\
    \  local -i i=0\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i is_positive=0\n  local -i is_negative=0\n  local -i is_zero=0\n  local\
    \ -i is_empty=0\n  local -i is_not_integer=0\n  local -i is_not_number=0\n  local\
    \ -i is_not_space=0\n  local -i is_not_empty=0\n  local -i is_not_positive=0\n\
    \  local -i is_not_negative=0\n  local -i is_not_zero=0\n  local -i is_not_integer=0\n\
    \  local -i is_not_number=0\n  local -i is_not_space=0\n  local -i is_not_empty=0\n\
    \  local -i is_not_positive=0\n  local -i is_not_negative=0\n  local -i is_not_zero=0\n\
    \  local -i is_not_integer=0\n  local -i is_not_number=0\n  local -i is_not_space=0\n\
    \  local -i is_not_empty=0\n  local -i is_not_positive=0\n  local -i is_not_negative=0\n\
    \  local -i is_not_zero=0\n  local -i is_not_integer=0\n  local -i is_not_number=0\n\
    \  local -i is_not_space=0\n  local -i is_not_empty=0\n  local -i is_not_positive=0\n\
    \  local -i is_not_negative=0\n  local -i is_not_zero=0\n  local -i is_not_integer=0\n\
    \  local -i is_not_number=0\n  local -i is_not_space=0\n  local -i is_not_empty=0\n\
    \  local -i is_not_positive=0\n  local -i is_not_negative=0\n  local -i is_not_zero=0\n\
    \  local -i is_not_integer=0\n  local -", "    local list=\"$1\"\n    local largest_negative=0\n\
    \    local smallest_positive=0\n    local is_positive=0\n    local is_negative=0\n\
    \    local is_zero=0\n    local is_first=1\n    local is_second=1\n    local is_third=1\n\
    \    local is_fourth=1\n    local is_fifth=1\n    local is_sixth=1\n    local\
    \ is_seventh=1\n    local is_eighth=1\n    local is_ninth=1\n    local is_tenth=1\n\
    \    local is_eleventh=1\n    local is_twelfth=1\n    local is_thirteenth=1\n\
    \    local is_fourteenth=1\n    local is_fifteenth=1\n    local is_sixteenth=1\n\
    \    local is_seventeenth=1\n    local is_eighteenth=1\n    local is_nineteenth=1\n\
    \    local is_twentieth=1\n    local is_twenty_first=1\n    local is_twenty_second=1\n\
    \    local is_twenty_third=1\n    local is_twenty_fourth=1\n    local is_twenty_fifth=1\n\
    \    local is_twenty_sixth=1\n    local is_twenty_seventh=1\n    local is_twenty_eighth=1\n\
    \    local is_twenty_ninth=1\n    local is_thirtieth=1\n    local is_thirty_first=1\n\
    \    local is_thirty_second=1\n    local is_thirty_third=1\n    local is_thirty_fourth=1\n\
    \    local is_thirty_fifth=1\n    local is_thirty_sixth=1\n    local is_thirty_seventh=1\n\
    \    local is_thirty_eighth=1\n    local is_thirty_ninth=1\n    local is_fortieth=1\n\
    \    local is_forty_first=1\n    local is_forty_second=1\n    local is_forty_third=1\n\
    \    local is_forty_fourth=1\n    local is_forty_fifth=1\n    local is_fort",
  "    local -a arr=(\"$@\")\n    local -i i\n    local -i max_neg=0\n    local -i\
    \ min_pos=0\n    local -i neg_count=0\n    local -i pos_count=0\n\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -lt 0 ]]; then\n         \
    \   ((neg_count++))\n            if [[ ${arr[$i]} -gt $max_neg ]]; then\n    \
    \            max_neg=${arr[$i]}\n            fi\n        elif [[ ${arr[$i]} -gt\
    \ 0 ]]; then\n            ((pos_count++))\n            if [[ ${arr[$i]} -lt $min_pos\
    \ ]]; then\n                min_pos=${arr[$i]}\n            fi\n        fi\n \
    \   done\n\n    if [[ $neg_count -eq 0 ]]; then\n        max_neg=None\n    fi\n\
    \    if [[ $pos_count -eq 0 ]]; then\n        min_pos=None\n    fi\n\n    echo\
    \ \"($max_neg, $min_pos)\"", "  local input=$1\n  local negatives=()\n  local\
    \ positives=()\n  for i in $input; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=($i)\n\
    \    elif [[ $i -gt 0 ]]; then\n      positives+=($i)\n    fi\n  done\n  if [[\
    \ ${#negatives[@]} -eq 0 ]]; then\n    negatives=(None)\n  fi\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    positives=(None)\n  fi\n  echo \"(${negatives[@]}, ${positives[@]})\"",
  "    local -a arr=(\"$@\")\n    local -i max_neg=0\n    local -i min_pos=0\n   \
    \ local -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i\
    \ flag2=0\n    local -i num=0\n    local -i num2=0\n    for ((i=0; i<len; i++));\
    \ do\n        num=${arr[i]}\n        if [[ $num -lt 0 ]]; then\n            if\
    \ [[ $num -gt $max_neg ]]; then\n                max_neg=$num\n              \
    \  flag=1\n            fi\n        elif [[ $num -gt 0 ]]; then\n            if\
    \ [[ $flag2 -eq 0 ]]; then\n                min_pos=$num\n                flag2=1\n\
    \            elif [[ $num -lt $min_pos ]]; then\n                min_pos=$num\n\
    \            fi\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n      \
    \  max_neg=None\n    fi\n    if [[ $flag2 -eq 0 ]]; then\n        min_pos=None\n\
    \    fi\n    echo \"($max_neg, $min_pos)\"", "    local -a negative_integers\n\
    \    local -a positive_integers\n    local -a integers\n    local -a result\n\n\
    \    integers=($1)\n    for i in \"${integers[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            negative_integers+=($i)\n        elif [[ $i -gt 0 ]];\
    \ then\n            positive_integers+=($i)\n        fi\n    done\n\n    if [[\
    \ ${#negative_integers[@]} -eq 0 ]]; then\n        result+=(None)\n    else\n\
    \        result+=($(printf '%s\\n' \"${negative_integers[@]}\" | sort -nr | head\
    \ -n1))\n    fi\n\n    if [[ ${#positive_integers[@]} -eq 0 ]]; then\n       \
    \ result+=(None)\n    else\n        result+=($(printf '%s\\n' \"${positive_integers[@]}\"\
    \ | sort -n | head -n1))\n    fi\n\n    echo \"${result[@]}\"", "    local -a\
    \ list=($1)\n    local -i max_negative=0\n    local -i min_positive=0\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i is_negative=0\n    local\
    \ -i is_positive=0\n\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]}\
    \ -lt 0 ]; then\n            if [ ${list[$i]} -gt $max_negative ]; then\n    \
    \            max_negative=${list[$i]}\n            fi\n            is_negative=1\n\
    \        elif [ ${list[$i]} -gt 0 ]; then\n            if [ $is_positive -eq 0\
    \ ]; then\n                min_positive=${list[$i]}\n            elif [ ${list[$i]}\
    \ -lt $min_positive ]; then\n                min_positive=${list[$i]}\n      \
    \      fi\n            is_positive=1\n        fi\n        i=$i+1\n    done\n\n\
    \    if [ $is_negative -eq 0 ]; then\n        max_negative=\"None\"\n    fi\n\
    \    if [ $is_positive -eq 0 ]; then\n        min_positive=\"None\"\n    fi\n\n\
    \    echo \"($max_negative, $min_positive)\"", "  local -a a=($1)\n  local -i\
    \ i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=", "  local -a array=($1)\n\
    \  local -a negative_array=()\n  local -a positive_array=()\n  local largest_negative=0\n\
    \  local smallest_positive=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n\
    \  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa", "  local -a list\n  IFS=' ' read -r -a list <<< \"$1\"\n  local -i max_neg=0\n\
    \  local -i min_pos=0\n  local -i first=1\n  for i in \"${list[@]}\"; do\n   \
    \ if [[ $i -lt 0 ]]; then\n      if [[ $first -eq 1 ]]; then\n        max_neg=$i\n\
    \        first=0\n      elif [[ $i -gt $max_neg ]]; then\n        max_neg=$i\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $first -eq 1 ]]; then\n\
    \        min_pos=$i\n        first=0\n      elif [[ $i -lt $min_pos ]]; then\n\
    \        min_pos=$i\n      fi\n    fi\n  done\n  if [[ $first -eq 1 ]]; then\n\
    \    echo \"(None, None)\"\n  else\n    echo \"($max_neg, $min_pos)\"\n  fi",
  "  local -a negative_numbers\n  local -a positive_numbers\n  local -a numbers\n\
    \  local number\n  local largest_negative\n  local smallest_positive\n\n  numbers=($1)\n\
    \  for number in \"${numbers[@]}\"; do\n    if [[ $number -lt 0 ]]; then\n   \
    \   negative_numbers+=($number)\n    elif [[ $number -gt 0 ]]; then\n      positive_numbers+=($number)\n\
    \    fi\n  done\n\n  largest_negative=$(printf \"%s\\n\" \"${negative_numbers[@]}\"\
    \ | sort -n | tail -n 1)\n  smallest_positive=$(printf \"%s\\n\" \"${positive_numbers[@]}\"\
    \ | sort -n | head -n 1)\n\n  if [[ -z $largest_negative ]]; then\n    largest_negative=\"\
    None\"\n  fi\n\n  if [[ -z $smallest_positive ]]; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "  local\
    \ -a negative_integers\n  local -a positive_integers\n  local -a integers\n  local\
    \ -a result\n\n  integers=($1)\n  for integer in \"${integers[@]}\"; do\n    if\
    \ (( integer < 0 )); then\n      negative_integers+=($integer)\n    elif (( integer\
    \ > 0 )); then\n      positive_integers+=($integer)\n    fi\n  done\n\n  if [[\
    \ ${#negative_integers[@]} -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf\
    \ \"%s\\n\" \"${negative_integers[@]}\" | sort -nr | head -n1))\n  fi\n\n  if\
    \ [[ ${#positive_integers[@]} -eq 0 ]]; then\n    result+=(None)\n  else\n   \
    \ result+=($(printf \"%s\\n\" \"${positive_integers[@]}\" | sort -n | head -n1))\n\
    \  fi\n\n  echo \"${result[@]}\"", "  local -a arr=(\"$@\")\n  local -a neg=()\n\
    \  local -a pos=()\n  local -a result=()\n  for i in \"${arr[@]}\"; do\n    if\
    \ [[ $i -lt 0 ]]; then\n      neg+=(\"$i\")\n    elif [[ $i -gt 0 ]]; then\n \
    \     pos+=(\"$i\")\n    fi\n  done\n  if [[ ${#neg[@]} -eq 0 ]]; then\n    result+=(\"\
    None\")\n  else\n    result+=(\"$(printf '%s\\n' \"${neg[@]}\" | sort -nr | head\
    \ -n1)\")\n  fi\n  if [[ ${#pos[@]} -eq 0 ]]; then\n    result+=(\"None\")\n \
    \ else\n    result+=(\"$(printf '%s\\n' \"${pos[@]}\" | sort -n | head -n1)\"\
    )\n  fi\n  echo \"${result[@]}\"", "    local -a negative_integers\n    local\
    \ -a positive_integers\n    local -a integers=($1)\n    local i\n    for i in\
    \ \"${integers[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            negative_integers+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            positive_integers+=($i)\n    \
    \    fi\n    done\n    if [[ ${#negative_integers[@]} -eq 0 ]]; then\n       \
    \ echo \"None None\"\n    elif [[ ${#positive_integers[@]} -eq 0 ]]; then\n  \
    \      echo \"${negative_integers[@]}\"\n    else\n        echo \"${negative_integers[@]}\
    \ ${positive_integers[@]}\"\n    fi", "    local -a numbers=($1)\n    local -i\
    \ largest_negative=0\n    local -i smallest_positive=0\n    local -i i=0\n   \
    \ local -i len=${#numbers[@]}\n    local -i negative_found=0\n    local -i positive_found=0\n\
    \n    for ((i=0; i<len; i++)); do\n        if [[ ${numbers[i]} -lt 0 ]]; then\n\
    \            if [[ ${numbers[i]} -gt $largest_negative ]]; then\n            \
    \    largest_negative=${numbers[i]}\n            fi\n            negative_found=1\n\
    \        elif [[ ${numbers[i]} -gt 0 ]]; then\n            if [[ $positive_found\
    \ -eq 0 ]]; then\n                smallest_positive=${numbers[i]}\n          \
    \  elif [[ ${numbers[i]} -lt $smallest_positive ]]; then\n                smallest_positive=${numbers[i]}\n\
    \            fi\n            positive_found=1\n        fi\n    done\n\n    if\
    \ [[ $negative_found -eq 0 ]]; then\n        largest_negative=None\n    fi\n \
    \   if [[ $positive_found -eq 0 ]]; then\n        smallest_positive=None\n   \
    \ fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "    local -a list=($1)\n\
    \    local -i largest_negative=0\n    local -i smallest_positive=0\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i is_negative=0\n    local\
    \ -i is_positive=0\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${list[$i]}\
    \ -lt 0 ]]; then\n            is_negative=1\n            if [[ ${list[$i]} -gt\
    \ $largest_negative ]]; then\n                largest_negative=${list[$i]}\n \
    \           fi\n        elif [[ ${list[$i]} -gt 0 ]]; then\n            is_positive=1\n\
    \            if [[ $smallest_positive -eq 0 ]]; then\n                smallest_positive=${list[$i]}\n\
    \            elif [[ ${list[$i]} -lt $smallest_positive ]]; then\n           \
    \     smallest_positive=${list[$i]}\n            fi\n        fi\n    done\n\n\
    \    if [[ $is_negative -eq 0 ]]; then\n        largest_negative=None\n    fi\n\
    \n    if [[ $is_positive -eq 0 ]]; then\n        smallest_positive=None\n    fi\n\
    \n    echo \"($largest_negative, $smallest_positive)\"", "    local -a arr=($1)\n\
    \    local -i max_neg=0\n    local -i min_pos=0\n    local -i i=0\n    local -i\
    \ len=${#arr[@]}\n    local -i neg_flag=0\n    local -i pos_flag=0\n\n    for\
    \ ((i=0; i<len; i++)); do\n        if [[ ${arr[i]} -lt 0 ]]; then\n          \
    \  if [[ ${arr[i]} -gt $max_neg ]]; then\n                max_neg=${arr[i]}\n\
    \            fi\n            neg_flag=1\n        else\n            if [[ ${arr[i]}\
    \ -lt $min_pos ]]; then\n                min_pos=${arr[i]}\n            fi\n \
    \           pos_flag=1\n        fi\n    done\n\n    if [[ $neg_flag -eq 0 ]];\
    \ then\n        max_neg=\"None\"\n    fi\n\n    if [[ $pos_flag -eq 0 ]]; then\n\
    \        min_pos=\"None\"\n    fi\n\n    echo \"($max_neg, $min_pos)\"", "  local\
    \ -a arr=(\"$@\")\n  local -a negatives\n  local -a positives\n  local -a result\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      negatives+=(\"\
    $i\")\n    elif [[ $i -gt 0 ]]; then\n      positives+=(\"$i\")\n    fi\n  done\n\
    \  if [[ ${#negatives[@]} -eq 0 ]]; then\n    result+=(\"None\")\n  else\n   \
    \ result+=(\"$(printf '%s\\n' \"${negatives[@]}\" | sort -nr | head -n1)\")\n\
    \  fi\n  if [[ ${#positives[@]} -eq 0 ]]; then\n    result+=(\"None\")\n  else\n\
    \    result+=(\"$(printf '%s\\n' \"${positives[@]}\" | sort -n | head -n1)\")\n\
    \  fi\n  echo \"${result[@]}\"", "  local -a numbers=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i first_positive=1\n  local -i first_negative=1\n\
    \  local -i i=0\n\n  for number in \"${numbers[@]}\"; do\n    if [[ $number -lt\
    \ 0 ]]; then\n      if [[ $first_negative -eq 1 ]]; then\n        largest_negative=$number\n\
    \        first_negative=0\n      elif [[ $number -gt $largest_negative ]]; then\n\
    \        largest_negative=$number\n      fi\n    elif [[ $number -gt 0 ]]; then\n\
    \      if [[ $first_positive -eq 1 ]]; then\n        smallest_positive=$number\n\
    \        first_positive=0\n      elif [[ $number -lt $smallest_positive ]]; then\n\
    \        smallest_positive=$number\n      fi\n    fi\n  done\n\n  if [[ $first_negative\
    \ -eq 1 ]]; then\n    largest_negative=None\n  fi\n\n  if [[ $first_positive -eq\
    \ 1 ]]; then\n    smallest_positive=None\n  fi\n\n  echo \"($largest_negative,\
    \ $smallest_positive)\"", "  local list=\"$1\"\n  local largest_negative=0\n \
    \ local smallest_positive=0\n  local is_negative=0\n  local is_positive=0\n  for\
    \ i in $list; do\n    if [[ $i -lt 0 ]]; then\n      is_negative=1\n      if [[\
    \ $i -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n \
    \   elif [[ $i -gt 0 ]]; then\n      is_positive=1\n      if [[ $smallest_positive\
    \ -eq 0 ]]; then\n        smallest_positive=$i\n      elif [[ $i -lt $smallest_positive\
    \ ]]; then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  if [[ $is_negative\
    \ -eq 0 ]]; then\n    largest_negative=None\n  fi\n  if [[ $is_positive -eq 0\
    \ ]]; then\n    smallest_positive=None\n  fi\n  echo \"($largest_negative, $smallest_positive)\"",
  "    local list=\"$1\"\n    local largest_negative=\n    local smallest_positive=\n\
    \    for i in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ -z\
    \ $largest_negative ]] || [[ $i -gt $largest_negative ]]; then\n             \
    \   largest_negative=$i\n            fi\n        elif [[ $i -gt 0 ]]; then\n \
    \           if [[ -z $smallest_positive ]] || [[ $i -lt $smallest_positive ]];\
    \ then\n                smallest_positive=$i\n            fi\n        fi\n   \
    \ done\n    if [[ -z $largest_negative ]]; then\n        largest_negative=\"None\"\
    \n    fi\n    if [[ -z $smallest_positive ]]; then\n        smallest_positive=\"\
    None\"\n    fi\n    echo \"($largest_negative, $smallest_positive)\"", "  local\
    \ -a list=($1)\n  local -i max_negative=0\n  local -i min_positive=0\n  local\
    \ -i i=0\n  local -i len=${#list[@]}\n  local -i is_negative=0\n  local -i is_positive=0\n\
    \n  for ((i=0; i<len; i++)); do\n    if [[ ${list[i]} -lt 0 ]]; then\n      is_negative=1\n\
    \      if [[ ${list[i]} -gt $max_negative ]]; then\n        max_negative=${list[i]}\n\
    \      fi\n    else\n      is_positive=1\n      if [[ ${list[i]} -lt $min_positive\
    \ ]]; then\n        min_positive=${list[i]}\n      fi\n    fi\n  done\n\n  if\
    \ [[ $is_negative -eq 0 ]]; then\n    max_negative=None\n  fi\n\n  if [[ $is_positive\
    \ -eq 0 ]]; then\n    min_positive=None\n  fi\n\n  echo \"($max_negative, $min_positive)\"",
  "    local -a negative_numbers\n    local -a positive_numbers\n    local number\n\
    \    for number in $1; do\n        if [[ $number -lt 0 ]]; then\n            negative_numbers+=($number)\n\
    \        elif [[ $number -gt 0 ]]; then\n            positive_numbers+=($number)\n\
    \        fi\n    done\n    if [[ ${#negative_numbers[@]} -eq 0 ]]; then\n    \
    \    negative_numbers+=(None)\n    fi\n    if [[ ${#positive_numbers[@]} -eq 0\
    \ ]]; then\n        positive_numbers+=(None)\n    fi\n    echo \"(${negative_numbers[@]},\
    \ ${positive_numbers[@]})\"", "  local -a arr=($1)\n  local -a neg=()\n  local\
    \ -a pos=()\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n     \
    \ neg+=($i)\n    elif [[ $i -gt 0 ]]; then\n      pos+=($i)\n    fi\n  done\n\
    \  if [[ ${#neg[@]} -eq 0 ]]; then\n    neg=(None)\n  fi\n  if [[ ${#pos[@]} -eq\
    \ 0 ]]; then\n    pos=(None)\n  fi\n  echo \"(${neg[@]}, ${pos[@]})\"", "  local\
    \ list=\"$1\"\n  local largest_negative=0\n  local smallest_positive=0\n  local\
    \ first_positive=0\n  local first_negative=0\n  local first_positive_found=0\n\
    \  local first_negative_found=0\n  local i=0\n  for i in $list; do\n    if [[\
    \ $i -lt 0 ]]; then\n      if [[ $first_negative_found -eq 0 ]]; then\n      \
    \  first_negative_found=1\n        first_negative=$i\n      fi\n      if [[ $i\
    \ -gt $largest_negative ]]; then\n        largest_negative=$i\n      fi\n    elif\
    \ [[ $i -gt 0 ]]; then\n      if [[ $first_positive_found -eq 0 ]]; then\n   \
    \     first_positive_found=1\n        first_positive=$i\n      fi\n      if [[\
    \ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n      fi\n\
    \    fi\n  done\n  if [[ $first_positive_found -eq 0 ]]; then\n    smallest_positive=None\n\
    \  fi\n  if [[ $first_negative_found -eq 0 ]]; then\n    largest_negative=None\n\
    \  fi\n  echo \"($largest_negative, $smallest_positive)\"", "  local -a arr=()\n\
    \  local -i i=0\n  local -i max_neg=0\n  local -i min_pos=0\n  local -i is_neg=0\n\
    \  local -i is_pos=0\n  local -i is_zero=0\n  local -i is_first=1\n  local -i\
    \ is_neg_first=1\n  local -i is_pos_first=1\n  local -i is_zero_first=1\n  local\
    \ -i is_neg_last=0\n  local -i is_pos_last=0\n  local -i is_zero_last=0\n  local\
    \ -i is_neg_last_first=1\n  local -i is_pos_last_first=1\n  local -i is_zero_last_first=1\n\
    \  local -i is_neg_last_second=0\n  local -i is_pos_last_second=0\n  local -i\
    \ is_zero_last_second=0\n  local -i is_neg_last_second_first=1\n  local -i is_pos_last_second_first=1\n\
    \  local -i is_zero_last_second_first=1\n  local -i is_neg_last_second_second=0\n\
    \  local -i is_pos_last_second_second=0\n  local -i is_zero_last_second_second=0\n\
    \  local -i is_neg_last_second_second_first=1\n  local -i is_pos_last_second_second_first=1\n\
    \  local -i is_zero_last_second_second_first=1\n  local -i is_neg_last_second_second_second=0\n\
    \  local -i is_pos_last_second_second_second=0\n  local -i is_zero_last_second_second_second=0\n\
    \  local -i is_neg_last_second_second_second_first=1\n  local -i is_pos_last_second_second_second_first=1\n\
    \  local -i is_zero_last_second_second_second_first=1\n  local -i is_neg_last_second_second_second",
  "  local list=\"$1\"\n  local largest_negative=0\n  local smallest_positive=0\n\
    \  local is_largest_negative_set=false\n  local is_smallest_positive_set=false\n\
    \n  for i in $list; do\n    if [ $i -lt 0 ]; then\n      if [ $i -gt $largest_negative\
    \ ]; then\n        largest_negative=$i\n        is_largest_negative_set=true\n\
    \      fi\n    elif [ $i -gt 0 ]; then\n      if [ $i -lt $smallest_positive ];\
    \ then\n        smallest_positive=$i\n        is_smallest_positive_set=true\n\
    \      fi\n    fi\n  done\n\n  if [ \"$is_largest_negative_set\" = false ]; then\n\
    \    largest_negative=None\n  fi\n\n  if [ \"$is_smallest_positive_set\" = false\
    \ ]; then\n    smallest_positive=None\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"",
  "    local -a arr=($1)\n    local -i max_neg=0\n    local -i min_pos=0\n    local\
    \ -i i=0\n    local -i len=${#arr[@]}\n    local -i neg_flag=0\n    local -i pos_flag=0\n\
    \n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt 0 ]; then\n     \
    \       if [ ${arr[$i]} -gt $max_neg ]; then\n                max_neg=${arr[$i]}\n\
    \            fi\n            neg_flag=1\n        elif [ ${arr[$i]} -gt 0 ]; then\n\
    \            if [ $pos_flag -eq 0 ]; then\n                min_pos=${arr[$i]}\n\
    \                pos_flag=1\n            elif [ ${arr[$i]} -lt $min_pos ]; then\n\
    \                min_pos=${arr[$i]}\n            fi\n        fi\n        i=$((i+1))\n\
    \    done\n\n    if [ $neg_flag -eq 0 ]; then\n        max_neg=None\n    fi\n\
    \    if [ $pos_flag -eq 0 ]; then\n        min_pos=None\n    fi\n\n    echo \"\
    ($max_neg, $min_pos)\"", "  local -a arr=()\n  local -a neg=()\n  local -a pos=()\n\
    \  local -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n \
    \ local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local\
    \ jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n\
    \  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local\
    \ uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n\
    \  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n \
    \ local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local\
    \ kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n\
    \  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n \
    \ local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n  local\
    \ aaaa=0\n  local bbbb=0\n  local c", "    local -a negative\n    local -a positive\n\
    \    local -a list=($1)\n    for i in \"${list[@]}\"; do\n        if (( i < 0\
    \ )); then\n            negative+=($i)\n        elif (( i > 0 )); then\n     \
    \       positive+=($i)\n        fi\n    done\n    if [[ ${#negative[@]} -eq 0\
    \ ]]; then\n        echo \"None None\"\n    elif [[ ${#positive[@]} -eq 0 ]];\
    \ then\n        echo \"${negative[0]} None\"\n    else\n        echo \"${negative[0]}\
    \ ${positive[0]}\"\n    fi", "    local -a arr=($1)\n    local -i min_pos=0\n\
    \    local -i max_neg=0\n    local -i i=0\n    local -i len=${#arr[@]}\n    local\
    \ -i found_pos=0\n    local -i found_neg=0\n\n    for ((i=0; i<len; i++)); do\n\
    \        if [[ ${arr[i]} -lt 0 ]]; then\n            if [[ ${arr[i]} -gt $max_neg\
    \ ]]; then\n                max_neg=${arr[i]}\n            fi\n            found_neg=1\n\
    \        elif [[ ${arr[i]} -gt 0 ]]; then\n            if [[ $found_pos -eq 0\
    \ ]]; then\n                min_pos=${arr[i]}\n            elif [[ ${arr[i]} -lt\
    \ $min_pos ]]; then\n                min_pos=${arr[i]}\n            fi\n     \
    \       found_pos=1\n        fi\n    done\n\n    if [[ $found_pos -eq 0 ]]; then\n\
    \        min_pos=\"None\"\n    fi\n    if [[ $found_neg -eq 0 ]]; then\n     \
    \   max_neg=\"None\"\n    fi\n\n    echo \"($max_neg, $min_pos)\"", "    local\
    \ -a negative_integers\n    local -a positive_integers\n    local -a integers\n\
    \    local -i i\n    local -i n\n    local -i largest_negative\n    local -i smallest_positive\n\
    \    local -i largest_negative_index\n    local -i smallest_positive_index\n\n\
    \    integers=($1)\n    n=${#integers[@]}\n    for ((i=0; i<n; i++)); do\n   \
    \     if [[ ${integers[$i]} -lt 0 ]]; then\n            negative_integers+=(${integers[$i]})\n\
    \        elif [[ ${integers[$i]} -gt 0 ]]; then\n            positive_integers+=(${integers[$i]})\n\
    \        fi\n    done\n\n    if [[ ${#negative_integers[@]} -eq 0 ]]; then\n \
    \       largest_negative=None\n    else\n        largest_negative=${negative_integers[0]}\n\
    \        largest_negative_index=0\n        for ((i=1; i<${#negative_integers[@]};\
    \ i++)); do\n            if [[ ${negative_integers[$i]} -gt $largest_negative\
    \ ]]; then\n                largest_negative=${negative_integers[$i]}\n      \
    \          largest_negative_index=$i\n            fi\n        done\n    fi\n\n\
    \    if [[ ${#positive_integers[@]} -eq 0 ]]; then\n        smallest_positive=None\n\
    \    else\n        smallest_positive=${positive_integers[0]}\n        smallest_positive_index=0\n\
    \        for ((i=1; i<${#positive_integers[@]}; i++)); do\n            if [[ ${positive_integers[$i]}\
    \ -lt $smallest_positive ]]; then\n                smallest_positive=${positive_integers[$i]}\n\
    \                smallest_positive_index=$i\n            fi\n        done\n  \
    \  fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "  local -a arr=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n", "    local -a array\n\
    \    local -i i\n    local -i max_neg min_pos\n    local -i max_neg_found min_pos_found\n\
    \    local -i max_neg_index min_pos_index\n\n    max_neg_found=0\n    min_pos_found=0\n\
    \    max_neg_index=0\n    min_pos_index=0\n\n    IFS=' ' read -r -a array <<<\
    \ \"$1\"\n\n    for ((i=0; i<${#array[@]}; i++)); do\n        if [[ ${array[$i]}\
    \ -lt 0 ]]; then\n            if [[ $max_neg_found -eq 0 ]]; then\n          \
    \      max_neg=${array[$i]}\n                max_neg_found=1\n               \
    \ max_neg_index=$i\n            elif [[ ${array[$i]} -gt $max_neg ]]; then\n \
    \               max_neg=${array[$i]}\n                max_neg_index=$i\n     \
    \       fi\n        elif [[ ${array[$i]} -gt 0 ]]; then\n            if [[ $min_pos_found\
    \ -eq 0 ]]; then\n                min_pos=${array[$i]}\n                min_pos_found=1\n\
    \                min_pos_index=$i\n            elif [[ ${array[$i]} -lt $min_pos\
    \ ]]; then\n                min_pos=${array[$i]}\n                min_pos_index=$i\n\
    \            fi\n        fi\n    done\n\n    if [[ $max_neg_found -eq 0 ]]; then\n\
    \        max_neg=\"None\"\n    fi\n\n    if [[ $min_pos_found -eq 0 ]]; then\n\
    \        min_pos=\"None\"\n    fi\n\n    echo \"($max_neg, $min_pos)\"", "  local\
    \ -a negative_integers\n  local -a positive_integers\n  local -a integers\n  local\
    \ -a result\n  local integer\n  local i\n\n  integers=($1)\n  for ((i=0; i<${#integers[@]};\
    \ i++)); do\n    integer=${integers[$i]}\n    if [[ $integer -lt 0 ]]; then\n\
    \      negative_integers+=($integer)\n    elif [[ $integer -gt 0 ]]; then\n  \
    \    positive_integers+=($integer)\n    fi\n  done\n\n  if [[ ${#negative_integers[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${negative_integers[@]}\" | sort -nr | head -n 1))\n  fi\n\n  if [[ ${#positive_integers[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positive_integers[@]}\" | sort -n | head -n 1))\n  fi\n\n  echo \"${result[@]}\"",
  "  local -a array=($1)\n  local max_neg=0\n  local min_pos=0\n  local -i count=0\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \ ", "    local -a arr=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n", "    local -a list=($1)\n\
    \    local largest_negative=0\n    local smallest_positive=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local ab=0\n    local ac=0\n \
    \   local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n    local ah=0\n\
    \    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n    local am=0\n\
    \    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n    local ar=0\n\
    \    local as=0\n    local at=0\n    local au=0\n    local av=0\n    local aw=0\n\
    \    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n    local bb=0\n\
    \    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n    local bg=0\n\
    \    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n    local bl=0\n\
    \    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n    local bq=0\n\
    \    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n    local bv=0\n\
    \    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n    local ca=0\n\
    \    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n    local cf=0\n\
    \    local cg=", "    local -a arr=(\"$@\")\n    local -i max=0\n    local -i\
    \ min=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n\
    \    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local\
    \ -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n\
    \    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local\
    \ -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i\
    \ dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i\
    \ hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i\
    \ ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i\
    \ pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i\
    \ tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i\
    \ xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i\
    \ bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local\
    \ -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local\
    \ -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0", "   \
    \ local -a list=($1)\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i is_positive=0\n    local -i is_negative=0\n    local -i i=0\n\n\
    \    for ((i=0; i<${#list[@]}; i++)); do\n        if [[ ${list[$i]} -lt 0 ]];\
    \ then\n            if [[ ${list[$i]} -gt $largest_negative ]]; then\n       \
    \         largest_negative=${list[$i]}\n                is_negative=1\n      \
    \      fi\n        elif [[ ${list[$i]} -gt 0 ]]; then\n            if [[ $is_positive\
    \ -eq 0 ]]; then\n                smallest_positive=${list[$i]}\n            \
    \    is_positive=1\n            elif [[ ${list[$i]} -lt $smallest_positive ]];\
    \ then\n                smallest_positive=${list[$i]}\n            fi\n      \
    \  fi\n    done\n\n    if [[ $is_negative -eq 0 ]]; then\n        largest_negative=\"\
    None\"\n    fi\n\n    if [[ $is_positive -eq 0 ]]; then\n        smallest_positive=\"\
    None\"\n    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "  local\
    \ -a a\n  local -a b\n  local -a c\n  local -a d\n  local -a e\n  local -a f\n\
    \  local -a g\n  local -a h\n  local -a i\n  local -a j\n  local -a k\n  local\
    \ -a l\n  local -a m\n  local -a n\n  local -a o\n  local -a p\n  local -a q\n\
    \  local -a r\n  local -a s\n  local -a t\n  local -a u\n  local -a v\n  local\
    \ -a w\n  local -a x\n  local -a y\n  local -a z\n  local -a aa\n  local -a ab\n\
    \  local -a ac\n  local -a ad\n  local -a ae\n  local -a af\n  local -a ag\n \
    \ local -a ah\n  local -a ai\n  local -a aj\n  local -a ak\n  local -a al\n  local\
    \ -a am\n  local -a an\n  local -a ao\n  local -a ap\n  local -a aq\n  local -a\
    \ ar\n  local -a as\n  local -a at\n  local -a au\n  local -a av\n  local -a aw\n\
    \  local -a ax\n  local -a ay\n  local -a az\n  local -a ba\n  local -a bb\n \
    \ local -a bc\n  local -a bd\n  local -a be\n  local -a bf\n  local -a bg\n  local\
    \ -a bh\n  local -a bi\n  local -a bj\n  local -a bk\n  local -a bl\n  local -a\
    \ bm\n  local -a bn\n  local -a bo\n  local -a bp\n  local -a bq\n  local -a br\n\
    \  local -a bs\n  local -a bt\n  local -a bu\n  local -a bv\n  local -a bw\n \
    \ local -a bx\n  local -a by\n  local -a bz\n  local -a ca\n  local -a cb\n  local\
    \ -a cc\n ", "    local list=\"$1\"\n    local largest_negative=0\n    local smallest_positive=0\n\
    \    local first_positive=1\n    local first_negative=1\n    for i in $list; do\n\
    \        if [[ $i -lt 0 ]]; then\n            if [[ $first_negative -eq 1 ]];\
    \ then\n                largest_negative=$i\n                first_negative=0\n\
    \            elif [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $first_positive\
    \ -eq 1 ]]; then\n                smallest_positive=$i\n                first_positive=0\n\
    \            elif [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    if [[ $first_negative -eq 1 ]]; then\n\
    \        largest_negative=None\n    fi\n    if [[ $first_positive -eq 1 ]]; then\n\
    \        smallest_positive=None\n    fi\n    echo \"($largest_negative, $smallest_positive)\"",
  "    local -a list=($1)\n    local -a negatives\n    local -a positives\n    local\
    \ -a result\n    local i\n\n    for ((i=0; i<${#list[@]}; i++)); do\n        if\
    \ [[ ${list[$i]} -lt 0 ]]; then\n            negatives+=(\"${list[$i]}\")\n  \
    \      elif [[ ${list[$i]} -gt 0 ]]; then\n            positives+=(\"${list[$i]}\"\
    )\n        fi\n    done\n\n    if [[ ${#negatives[@]} -eq 0 ]]; then\n       \
    \ result+=(\"None\")\n    else\n        result+=(\"$(printf \"%s\\n\" \"${negatives[@]}\"\
    \ | sort -nr | head -n1)\")\n    fi\n\n    if [[ ${#positives[@]} -eq 0 ]]; then\n\
    \        result+=(\"None\")\n    else\n        result+=(\"$(printf \"%s\\n\" \"\
    ${positives[@]}\" | sort -n | head -n1)\")\n    fi\n\n    echo \"${result[@]}\"",
  "    local -a arr=($1)\n    local -i max=0\n    local -i min=0\n    local -i i=0\n\
    \    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag1=0\n    local\
    \ -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n\
    \    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i\
    \ flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n\
    \    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local\
    \ -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n\
    \    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local\
    \ -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n\
    \    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local\
    \ -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n\
    \    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local\
    \ -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n\
    \    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local\
    \ -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local -i flag47=0\n\
    \    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n    local\
    \ -i flag51", "  local -a negative_integers\n  local -a positive_integers\n  local\
    \ -a integers\n  local -a result\n  local integer\n  local -i i=0\n\n  integers=($1)\n\
    \  for integer in \"${integers[@]}\"; do\n    if [[ $integer -lt 0 ]]; then\n\
    \      negative_integers[$i]=$integer\n    elif [[ $integer -gt 0 ]]; then\n \
    \     positive_integers[$i]=$integer\n    fi\n    ((i++))\n  done\n\n  if [[ ${#negative_integers[@]}\
    \ -gt 0 ]]; then\n    result[0]=$(printf \"%s\\n\" \"${negative_integers[@]}\"\
    \ | sort -nr | head -n1)\n  else\n    result[0]=\"None\"\n  fi\n\n  if [[ ${#positive_integers[@]}\
    \ -gt 0 ]]; then\n    result[1]=$(printf \"%s\\n\" \"${positive_integers[@]}\"\
    \ | sort -n | head -n1)\n  else\n    result[1]=\"None\"\n  fi\n\n  echo \"${result[@]}\"",
  "    local -a neg_ints=()\n    local -a pos_ints=()\n    local -a ints=($1)\n  \
    \  for i in ${ints[@]}; do\n        if [[ $i -lt 0 ]]; then\n            neg_ints+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            pos_ints+=($i)\n        fi\n \
    \   done\n    if [[ ${#neg_ints[@]} -eq 0 ]]; then\n        neg_ints+=(None)\n\
    \    fi\n    if [[ ${#pos_ints[@]} -eq 0 ]]; then\n        pos_ints+=(None)\n\
    \    fi\n    echo \"(${neg_ints[@]}, ${pos_ints[@]})\"", "    local -a arr=($1)\n\
    \    local -i max_neg=0\n    local -i min_pos=0\n    local -i len=${#arr[@]}\n\
    \    local -i i=0\n    local -i is_neg=0\n    local -i is_pos=0\n\n    for ((i=0;\
    \ i<len; i++)); do\n        if [[ ${arr[i]} -lt 0 ]]; then\n            if [[\
    \ ${arr[i]} -gt $max_neg ]]; then\n                max_neg=${arr[i]}\n       \
    \     fi\n            is_neg=1\n        elif [[ ${arr[i]} -gt 0 ]]; then\n   \
    \         if [[ $is_pos -eq 0 ]]; then\n                min_pos=${arr[i]}\n  \
    \          elif [[ ${arr[i]} -lt $min_pos ]]; then\n                min_pos=${arr[i]}\n\
    \            fi\n            is_pos=1\n        fi\n    done\n\n    if [[ $is_neg\
    \ -eq 0 ]]; then\n        max_neg=None\n    fi\n    if [[ $is_pos -eq 0 ]]; then\n\
    \        min_pos=None\n    fi\n\n    echo \"($max_neg, $min_pos)\"", "    local\
    \ -a arr=($1)\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i i=0\n    local -i len=${#arr[@]}\n    local -i largest_negative_found=0\n\
    \    local -i smallest_positive_found=0\n\n    while [ $i -lt $len ]; do\n   \
    \     if [[ ${arr[$i]} -lt 0 ]]; then\n            if [[ ${arr[$i]} -gt $largest_negative\
    \ ]]; then\n                largest_negative=${arr[$i]}\n                largest_negative_found=1\n\
    \            fi\n        elif [[ ${arr[$i]} -gt 0 ]]; then\n            if [[\
    \ $smallest_positive_found -eq 0 ]]; then\n                smallest_positive=${arr[$i]}\n\
    \                smallest_positive_found=1\n            elif [[ ${arr[$i]} -lt\
    \ $smallest_positive ]]; then\n                smallest_positive=${arr[$i]}\n\
    \            fi\n        fi\n        i=$i+1\n    done\n\n    if [[ $largest_negative_found\
    \ -eq 0 ]]; then\n        largest_negative=\"None\"\n    fi\n    if [[ $smallest_positive_found\
    \ -eq 0 ]]; then\n        smallest_positive=\"None\"\n    fi\n\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "    local -a array=($1)\n    local -i largest_negative=0\n\
    \    local -i smallest_positive=0\n    local -i i=0\n\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if [[ ${array[$i]} -lt 0 ]]; then\n            if [[ ${array[$i]}\
    \ -gt $largest_negative ]]; then\n                largest_negative=${array[$i]}\n\
    \            fi\n        elif [[ ${array[$i]} -gt 0 ]]; then\n            if [[\
    \ $smallest_positive -eq 0 ]]; then\n                smallest_positive=${array[$i]}\n\
    \            elif [[ ${array[$i]} -lt $smallest_positive ]]; then\n          \
    \      smallest_positive=${array[$i]}\n            fi\n        fi\n    done\n\n\
    \    if [[ $largest_negative -eq 0 ]]; then\n        largest_negative=\"None\"\
    \n    fi\n\n    if [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=\"\
    None\"\n    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "  local\
    \ -a arr=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i\
    \ ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n\
    \  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local\
    \ -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n", " \
    \   local -a arr=(\"$@\")\n    local -i a=0 b=0\n    local -i i=0\n    local -i\
    \ len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n    while [ $i -lt\
    \ $len ]; do\n        if [ \"${arr[$i]}\" -lt 0 ]; then\n            if [ $flag\
    \ -eq 0 ]; then\n                a=${arr[$i]}\n                flag=1\n      \
    \      else\n                if [ ${arr[$i]} -gt $a ]; then\n                \
    \    a=${arr[$i]}\n                fi\n            fi\n        elif [ \"${arr[$i]}\"\
    \ -gt 0 ]; then\n            if [ $flag2 -eq 0 ]; then\n                b=${arr[$i]}\n\
    \                flag2=1\n            else\n                if [ ${arr[$i]} -lt\
    \ $b ]; then\n                    b=${arr[$i]}\n                fi\n         \
    \   fi\n        fi\n        i=$i+1\n    done\n    if [ $flag -eq 0 ]; then\n \
    \       a=None\n    fi\n    if [ $flag2 -eq 0 ]; then\n        b=None\n    fi\n\
    \    echo \"($a, $b)\"", "    local -a numbers=($1)\n    local largest_negative=0\n\
    \    local smallest_positive=0\n    local -i i=0\n\n    while [ $i -lt ${#numbers[@]}\
    \ ]; do\n        if [ ${numbers[$i]} -lt 0 ]; then\n            if [ ${numbers[$i]}\
    \ -gt $largest_negative ]; then\n                largest_negative=${numbers[$i]}\n\
    \            fi\n        elif [ ${numbers[$i]} -gt 0 ]; then\n            if [\
    \ $smallest_positive -eq 0 ] || [ ${numbers[$i]} -lt $smallest_positive ]; then\n\
    \                smallest_positive=${numbers[$i]}\n            fi\n        fi\n\
    \        ((i++))\n    done\n\n    if [ $largest_negative -eq 0 ]; then\n     \
    \   largest_negative=\"None\"\n    fi\n    if [ $smallest_positive -eq 0 ]; then\n\
    \        smallest_positive=\"None\"\n    fi\n\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "  local list=\"$1\"\n  local largest_negative=0\n \
    \ local smallest_positive=0\n  local first_positive=0\n  local first_negative=0\n\
    \  local first_positive_found=0\n  local first_negative_found=0\n  local i=0\n\
    \  local value=0\n\n  for i in $list; do\n    value=$i\n    if [ $value -lt 0\
    \ ]; then\n      if [ $first_negative_found -eq 0 ]; then\n        first_negative=$value\n\
    \        first_negative_found=1\n      fi\n      if [ $value -gt $largest_negative\
    \ ]; then\n        largest_negative=$value\n      fi\n    else\n      if [ $first_positive_found\
    \ -eq 0 ]; then\n        first_positive=$value\n        first_positive_found=1\n\
    \      fi\n      if [ $value -lt $smallest_positive ]; then\n        smallest_positive=$value\n\
    \      fi\n    fi\n  done\n\n  if [ $first_negative_found -eq 0 ]; then\n    largest_negative=\"\
    None\"\n  fi\n  if [ $first_positive_found -eq 0 ]; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "    local\
    \ -a numbers=($1)\n    local -a negatives\n    local -a positives\n    local -a\
    \ result\n    local i\n\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        if\
    \ [[ ${numbers[$i]} -lt 0 ]]; then\n            negatives+=(${numbers[$i]})\n\
    \        elif [[ ${numbers[$i]} -gt 0 ]]; then\n            positives+=(${numbers[$i]})\n\
    \        fi\n    done\n\n    if [[ ${#negatives[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr\
    \ | head -n1))\n    fi\n\n    if [[ ${#positives[@]} -eq 0 ]]; then\n        result+=(None)\n\
    \    else\n        result+=($(printf \"%s\\n\" \"${positives[@]}\" | sort -n |\
    \ head -n1))\n    fi\n\n    echo \"${result[@]}\"", "    local -a list=($1)\n\
    \    local -i min=0\n    local -i max=0\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i flag=0\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${list[i]}\
    \ -lt 0 ]]; then\n            if [[ ${list[i]} -gt $max ]]; then\n           \
    \     max=${list[i]}\n            fi\n        elif [[ ${list[i]} -gt 0 ]]; then\n\
    \            if [[ ${list[i]} -lt $min ]]; then\n                min=${list[i]}\n\
    \            fi\n        fi\n    done\n\n    if [[ $max -eq 0 ]]; then\n     \
    \   max=None\n    fi\n\n    if [[ $min -eq 0 ]]; then\n        min=None\n    fi\n\
    \n    echo \"($max, $min)\"", "    local -a arr\n    local -i i\n    local -i\
    \ j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i aa\n    local -i bb\n    local -i cc\n  \
    \  local -i dd\n    local -i ee\n    local -i ff\n    local -i gg\n    local -i\
    \ hh\n    local -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n   \
    \ local -i mm\n    local -i nn\n    local -i oo\n    local -i pp\n    local -i\
    \ qq\n    local -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n   \
    \ local -i vv\n    local -i ww\n    local -i xx\n    local -i yy\n    local -i\
    \ zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n\
    \    local -i eee\n    local -i fff\n    local -i ggg\n    local -i hhh\n    local\
    \ -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n\
    \    local -i nnn\n    local -i ooo\n    local -i ppp\n    local -i qqq\n    local\
    \ -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n\
    \    local -i www\n    local -i xxx\n    local -i yyy\n    local -i zzz\n    local\
    \ -i aaaa\n    local -i bbbb\n    local -i cccc\n    local -i dddd\n    local\
    \ -i eeee\n    local -i f", "    local -a negative_integers\n    local -a positive_integers\n\
    \    local -a integers=($1)\n    local -i i\n    local -i n=${#integers[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        if ((integers[i] < 0)); then\n       \
    \     negative_integers+=(${integers[i]})\n        elif ((integers[i] > 0)); then\n\
    \            positive_integers+=(${integers[i]})\n        fi\n    done\n    if\
    \ ((${#negative_integers[@]} == 0)); then\n        echo \"None\"\n    else\n \
    \       echo \"${negative_integers[*]}\" | tr ' ' '\\n' | sort -nr | head -n1\n\
    \    fi\n    if ((${#positive_integers[@]} == 0)); then\n        echo \"None\"\
    \n    else\n        echo \"${positive_integers[*]}\" | tr ' ' '\\n' | sort -n\
    \ | head -n1\n    fi", "    local -a list=($1)\n    local -i max_neg=0\n    local\
    \ -i min_pos=0\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i neg_found=0\n\
    \    local -i pos_found=0\n\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]}\
    \ -lt 0 ]; then\n            if [ ${list[$i]} -gt $max_neg ]; then\n         \
    \       max_neg=${list[$i]}\n            fi\n            neg_found=1\n       \
    \ elif [ ${list[$i]} -gt 0 ]; then\n            if [ $pos_found -eq 0 ]; then\n\
    \                min_pos=${list[$i]}\n                pos_found=1\n          \
    \  elif [ ${list[$i]} -lt $min_pos ]; then\n                min_pos=${list[$i]}\n\
    \            fi\n        fi\n        i=$i+1\n    done\n\n    if [ $neg_found -eq\
    \ 0 ]; then\n        max_neg=None\n    fi\n    if [ $pos_found -eq 0 ]; then\n\
    \        min_pos=None\n    fi\n\n    echo \"($max_neg, $min_pos)\"", "    local\
    \ -a arr=($1)\n    local -i max_neg=0\n    local -i min_pos=0\n    local -i i=0\n\
    \    local -i n=${#arr[@]}\n    local -i first_pos=0\n    local -i first_neg=0\n\
    \n    for ((i=0; i<n; i++)); do\n        if [[ ${arr[i]} -lt 0 ]]; then\n    \
    \        if [[ ${arr[i]} -gt $max_neg ]]; then\n                max_neg=${arr[i]}\n\
    \            fi\n            if [[ $first_neg -eq 0 ]]; then\n               \
    \ first_neg=1\n            fi\n        elif [[ ${arr[i]} -gt 0 ]]; then\n    \
    \        if [[ $first_pos -eq 0 ]]; then\n                min_pos=${arr[i]}\n\
    \                first_pos=1\n            elif [[ ${arr[i]} -lt $min_pos ]]; then\n\
    \                min_pos=${arr[i]}\n            fi\n        fi\n    done\n\n \
    \   if [[ $first_neg -eq 0 ]]; then\n        max_neg=None\n    fi\n    if [[ $first_pos\
    \ -eq 0 ]]; then\n        min_pos=None\n    fi\n\n    echo \"($max_neg, $min_pos)\"",
  "    local list=$1\n    local largest_negative=0\n    local smallest_positive=0\n\
    \    local first_positive=0\n    local first_negative=0\n    local first_positive_found=0\n\
    \    local first_negative_found=0\n    for i in $list; do\n        if [ $i -lt\
    \ 0 ]; then\n            if [ $first_negative_found -eq 0 ]; then\n          \
    \      first_negative=$i\n                first_negative_found=1\n           \
    \ fi\n            if [ $i -gt $largest_negative ]; then\n                largest_negative=$i\n\
    \            fi\n        fi\n        if [ $i -gt 0 ]; then\n            if [ $first_positive_found\
    \ -eq 0 ]; then\n                first_positive=$i\n                first_positive_found=1\n\
    \            fi\n            if [ $i -lt $smallest_positive ]; then\n        \
    \        smallest_positive=$i\n            fi\n        fi\n    done\n    if [\
    \ $first_negative_found -eq 0 ]; then\n        largest_negative=None\n    fi\n\
    \    if [ $first_positive_found -eq 0 ]; then\n        smallest_positive=None\n\
    \    fi\n    echo \"($largest_negative, $smallest_positive)\"", "  local -a array=($1)\n\
    \  local -i largest_negative=0\n  local -i smallest_positive=0\n  local -i first_positive=0\n\
    \  local -i first_negative=0\n  local -i i=0\n  local -i len=${#array[@]}\n\n\
    \  while [ $i -lt $len ]; do\n    if [ ${array[$i]} -lt 0 ]; then\n      if [\
    \ $first_negative -eq 0 ]; then\n        first_negative=1\n        largest_negative=${array[$i]}\n\
    \      elif [ ${array[$i]} -gt $largest_negative ]; then\n        largest_negative=${array[$i]}\n\
    \      fi\n    elif [ ${array[$i]} -gt 0 ]; then\n      if [ $first_positive -eq\
    \ 0 ]; then\n        first_positive=1\n        smallest_positive=${array[$i]}\n\
    \      elif [ ${array[$i]} -lt $smallest_positive ]; then\n        smallest_positive=${array[$i]}\n\
    \      fi\n    fi\n    i=$i+1\n  done\n\n  if [ $first_negative -eq 0 ]; then\n\
    \    largest_negative=None\n  fi\n\n  if [ $first_positive -eq 0 ]; then\n   \
    \ smallest_positive=None\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"",
  "    local -a array=($1)\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i m", "    local -a list=($1)\n\
    \    local -i largest_negative=0\n    local -i smallest_positive=0\n    local\
    \ -i i=0\n    local -i length=${#list[@]}\n    local -i largest_negative_set=0\n\
    \    local -i smallest_positive_set=0\n\n    while [ $i -lt $length ]; do\n  \
    \      if [ ${list[$i]} -lt 0 ]; then\n            if [ ${list[$i]} -gt $largest_negative\
    \ ]; then\n                largest_negative=${list[$i]}\n                largest_negative_set=1\n\
    \            fi\n        elif [ ${list[$i]} -gt 0 ]; then\n            if [ $smallest_positive_set\
    \ -eq 0 ]; then\n                smallest_positive=${list[$i]}\n             \
    \   smallest_positive_set=1\n            elif [ ${list[$i]} -lt $smallest_positive\
    \ ]; then\n                smallest_positive=${list[$i]}\n            fi\n   \
    \     fi\n        i=$i+1\n    done\n\n    if [ $largest_negative_set -eq 0 ];\
    \ then\n        largest_negative=None\n    fi\n\n    if [ $smallest_positive_set\
    \ -eq 0 ]; then\n        smallest_positive=None\n    fi\n\n    echo \"$largest_negative,$smallest_positive\"",
  "  local -a arr=($1)\n  local -a negs=()\n  local -a poss=()\n  local -i i=0\n \
    \ local -i len=${#arr[@]}\n  local -i max_neg=0\n  local -i min_pos=0\n  local\
    \ -i curr=0\n\n  while [ $i -lt $len ]; do\n    curr=${arr[$i]}\n    if [ $curr\
    \ -lt 0 ]; then\n      negs+=($curr)\n    elif [ $curr -gt 0 ]; then\n      poss+=($curr)\n\
    \    fi\n    ((i++))\n  done\n\n  if [ ${#negs[@]} -gt 0 ]; then\n    max_neg=${negs[0]}\n\
    \    for n in ${negs[@]}; do\n      if [ $n -gt $max_neg ]; then\n        max_neg=$n\n\
    \      fi\n    done\n  fi\n\n  if [ ${#poss[@]} -gt 0 ]; then\n    min_pos=${poss[0]}\n\
    \    for p in ${poss[@]}; do\n      if [ $p -lt $min_pos ]; then\n        min_pos=$p\n\
    \      fi\n    done\n  fi\n\n  echo \"($max_neg, $min_pos)\"", "  local -a arr=()\n\
    \  local -a pos=()\n  local -a neg=()\n  local -a res=()\n  local i\n  for i in\
    \ $1; do\n    if [[ $i =~ ^-?[0-9]+$ ]]; then\n      arr+=($i)\n    fi\n  done\n\
    \  for i in ${arr[@]}; do\n    if [[ $i -lt 0 ]]; then\n      neg+=($i)\n    else\n\
    \      pos+=($i)\n    fi\n  done\n  if [[ ${#neg[@]} -eq 0 ]]; then\n    res+=(None)\n\
    \  else\n    res+=($(printf \"%s\\n\" ${neg[@]} | sort -nr | head -n1))\n  fi\n\
    \  if [[ ${#pos[@]} -eq 0 ]]; then\n    res+=(None)\n  else\n    res+=($(printf\
    \ \"%s\\n\" ${pos[@]} | sort -n | head -n1))\n  fi\n  echo \"(${res[0]}, ${res[1]})\"",
  "  local list=\"$1\"\n  local largest_negative=0\n  local smallest_positive=0\n\
    \  local first_positive=0\n  local first_negative=0\n  local first_positive_found=0\n\
    \  local first_negative_found=0\n  local largest_negative_found=0\n  local smallest_positive_found=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv", "    local\
    \ -a array=()\n    local -i i=0\n    local -i largest_negative=0\n    local -i\
    \ smallest_positive=0\n    local -i found_negative=0\n    local -i found_positive=0\n\
    \n    for i in $1; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $i -gt\
    \ $largest_negative ]]; then\n                largest_negative=$i\n          \
    \  fi\n            found_negative=1\n        elif [[ $i -gt 0 ]]; then\n     \
    \       if [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n            found_positive=1\n        fi\n    done\n\n    if\
    \ [[ $found_negative -eq 0 ]]; then\n        largest_negative=\"None\"\n    fi\n\
    \n    if [[ $found_positive -eq 0 ]]; then\n        smallest_positive=\"None\"\
    \n    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "  local -a\
    \ arr=($1)\n  local -a neg_arr=()\n  local -a pos_arr=()\n  local -i i=0\n  local\
    \ -i len=${#arr[@]}\n  local -i neg_len=0\n  local -i pos_len=0\n  local -i neg_max=0\n\
    \  local -i pos_min=0\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[$i]} -lt\
    \ 0 ]]; then\n      neg_arr+=(${arr[$i]})\n    else\n      pos_arr+=(${arr[$i]})\n\
    \    fi\n  done\n\n  neg_len=${#neg_arr[@]}\n  pos_len=${#pos_arr[@]}\n\n  if\
    \ [[ neg_len -gt 0 ]]; then\n    neg_max=${neg_arr[0]}\n    for ((i=1; i<neg_len;\
    \ i++)); do\n      if [[ ${neg_arr[$i]} -gt $neg_max ]]; then\n        neg_max=${neg_arr[$i]}\n\
    \      fi\n    done\n  fi\n\n  if [[ pos_len -gt 0 ]]; then\n    pos_min=${pos_arr[0]}\n\
    \    for ((i=1; i<pos_len; i++)); do\n      if [[ ${pos_arr[$i]} -lt $pos_min\
    \ ]]; then\n        pos_min=${pos_arr[$i]}\n      fi\n    done\n  fi\n\n  echo\
    \ \"($neg_max, $pos_min)\"", "    local -a arr=($1)\n    local -i max=0\n    local\
    \ -i min=0\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i max_is_set=0\n\
    \    local -i min_is_set=0\n\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]}\
    \ -lt 0 ]; then\n            if [ $max_is_set -eq 0 ]; then\n                max=${arr[$i]}\n\
    \                max_is_set=1\n            elif [ ${arr[$i]} -gt $max ]; then\n\
    \                max=${arr[$i]}\n            fi\n        elif [ ${arr[$i]} -gt\
    \ 0 ]; then\n            if [ $min_is_set -eq 0 ]; then\n                min=${arr[$i]}\n\
    \                min_is_set=1\n            elif [ ${arr[$i]} -lt $min ]; then\n\
    \                min=${arr[$i]}\n            fi\n        fi\n        i=$((i+1))\n\
    \    done\n\n    if [ $max_is_set -eq 0 ]; then\n        max=\"None\"\n    fi\n\
    \    if [ $min_is_set -eq 0 ]; then\n        min=\"None\"\n    fi\n\n    echo\
    \ \"($max, $min)\"", "    local -a arr=(\"$@\")\n    local -i largest_negative=0\n\
    \    local -i smallest_positive=0\n    local -i is_largest_negative_set=0\n  \
    \  local -i is_smallest_positive_set=0\n\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $largest_negative ]];\
    \ then\n                largest_negative=$i\n                is_largest_negative_set=1\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $i -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=$i\n                is_smallest_positive_set=1\n\
    \            fi\n        fi\n    done\n\n    if [[ $is_largest_negative_set -eq\
    \ 0 ]]; then\n        largest_negative=\"None\"\n    fi\n\n    if [[ $is_smallest_positive_set\
    \ -eq 0 ]]; then\n        smallest_positive=\"None\"\n    fi\n\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "    local -a arr=()\n    local -i i=0\n    local -i\
    \ max=0\n    local -i min=0\n    local -i max_neg=0\n    local -i min_pos=0\n\
    \    local -i neg_flag=0\n    local -i pos_flag=0\n\n    for i in $1; do\n   \
    \     arr[${#arr[@]}]=$i\n    done\n\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -lt 0 ]]; then\n            if [[ $neg_flag -eq 0 ]]; then\n            \
    \    max_neg=$i\n                neg_flag=1\n            elif [[ $i -gt $max_neg\
    \ ]]; then\n                max_neg=$i\n            fi\n        elif [[ $i -gt\
    \ 0 ]]; then\n            if [[ $pos_flag -eq 0 ]]; then\n                min_pos=$i\n\
    \                pos_flag=1\n            elif [[ $i -lt $min_pos ]]; then\n  \
    \              min_pos=$i\n            fi\n        fi\n    done\n\n    if [[ $neg_flag\
    \ -eq 0 ]]; then\n        max_neg=None\n    fi\n\n    if [[ $pos_flag -eq 0 ]];\
    \ then\n        min_pos=None\n    fi\n\n    echo \"($max_neg, $min_pos)\"", " \
    \   local list=$1\n    local largest_negative=0\n    local smallest_positive=0\n\
    \    local first_positive=0\n    local first_negative=0\n    local first_positive_found=0\n\
    \    local first_negative_found=0\n    for i in $list; do\n        if [ $i -lt\
    \ 0 ] && [ $i -gt $largest_negative ]; then\n            largest_negative=$i\n\
    \            first_negative_found=1\n        fi\n        if [ $i -gt 0 ] && [\
    \ $i -lt $smallest_positive ]; then\n            smallest_positive=$i\n      \
    \      first_positive_found=1\n        fi\n        if [ $i -gt 0 ] && [ $first_positive_found\
    \ -eq 0 ]; then\n            first_positive=$i\n            first_positive_found=1\n\
    \        fi\n        if [ $i -lt 0 ] && [ $first_negative_found -eq 0 ]; then\n\
    \            first_negative=$i\n            first_negative_found=1\n        fi\n\
    \    done\n    if [ $first_positive_found -eq 0 ]; then\n        smallest_positive=None\n\
    \    fi\n    if [ $first_negative_found -eq 0 ]; then\n        largest_negative=None\n\
    \    fi\n    echo \"($largest_negative, $smallest_positive)\"", "  local list=$1\n\
    \  local largest_negative=0\n  local smallest_positive=0\n  local first_positive=0\n\
    \  local first_negative=0\n  local first_positive_found=0\n  local first_negative_found=0\n\
    \  local largest_negative_found=0\n  local smallest_positive_found=0\n  local\
    \ number=0\n  local i=0\n  local list_length=0\n\n  list_length=$(echo $list |\
    \ wc -w)\n\n  for ((i=1; i<=$list_length; i++)); do\n    number=$(echo $list |\
    \ cut -d ' ' -f $i)\n    if [ $number -lt 0 ]; then\n      if [ $first_negative_found\
    \ -eq 0 ]; then\n        first_negative=$number\n        first_negative_found=1\n\
    \      fi\n      if [ $number -gt $largest_negative ]; then\n        largest_negative=$number\n\
    \        largest_negative_found=1\n      fi\n    else\n      if [ $first_positive_found\
    \ -eq 0 ]; then\n        first_positive=$number\n        first_positive_found=1\n\
    \      fi\n      if [ $number -lt $smallest_positive ]; then\n        smallest_positive=$number\n\
    \        smallest_positive_found=1\n      fi\n    fi\n  done\n\n  if [ $largest_negative_found\
    \ -eq 0 ]; then\n    largest_negative=None\n  fi\n\n  if [ $smallest_positive_found\
    \ -eq 0 ]; then\n    smallest_positive=None\n  fi\n\n  echo \"($largest_negative,\
    \ $smallest_positive)\"", "  local list=$1\n  local negative_max=0\n  local positive_min=0\n\
    \  local negative_flag=0\n  local positive_flag=0\n\n  for i in $list; do\n  \
    \  if [[ $i -lt 0 ]]; then\n      if [[ $i -gt $negative_max ]]; then\n      \
    \  negative_max=$i\n      fi\n      negative_flag=1\n    elif [[ $i -gt 0 ]];\
    \ then\n      if [[ $positive_flag -eq 0 ]]; then\n        positive_min=$i\n \
    \     elif [[ $i -lt $positive_min ]]; then\n        positive_min=$i\n      fi\n\
    \      positive_flag=1\n    fi\n  done\n\n  if [[ $negative_flag -eq 0 ]]; then\n\
    \    negative_max=None\n  fi\n\n  if [[ $positive_flag -eq 0 ]]; then\n    positive_min=None\n\
    \  fi\n\n  echo \"($negative_max, $positive_min)\"", "  local -a arr=()\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n", "    local -a list=($1)\n\
    \    local -i largest_negative=0\n    local -i smallest_positive=0\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i largest_negative_found=0\n\
    \    local -i smallest_positive_found=0\n\n    while [ $i -lt $len ]; do\n   \
    \     if [ ${list[$i]} -lt 0 ]; then\n            if [ ${list[$i]} -gt $largest_negative\
    \ ]; then\n                largest_negative=${list[$i]}\n                largest_negative_found=1\n\
    \            fi\n        elif [ ${list[$i]} -gt 0 ]; then\n            if [ $smallest_positive_found\
    \ -eq 0 ]; then\n                smallest_positive=${list[$i]}\n             \
    \   smallest_positive_found=1\n            elif [ ${list[$i]} -lt $smallest_positive\
    \ ]; then\n                smallest_positive=${list[$i]}\n            fi\n   \
    \     fi\n        i=$i+1\n    done\n\n    if [ $largest_negative_found -eq 0 ];\
    \ then\n        largest_negative=None\n    fi\n    if [ $smallest_positive_found\
    \ -eq 0 ]; then\n        smallest_positive=None\n    fi\n\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "  local -a arr=(\"$@\")\n  local -i max=0\n  local\
    \ -i min=0\n  local -i count=0\n  local -i i=0\n  local -i len=${#arr[@]}\n  local\
    \ -i is_negative=0\n  local -i is_positive=0\n\n  for ((i=0; i<len; i++)); do\n\
    \    if [[ ${arr[i]} -lt 0 ]]; then\n      is_negative=1\n      if [[ ${arr[i]}\
    \ -gt $max ]]; then\n        max=${arr[i]}\n      fi\n    elif [[ ${arr[i]} -gt\
    \ 0 ]]; then\n      is_positive=1\n      if [[ ${arr[i]} -lt $min ]]; then\n \
    \       min=${arr[i]}\n      fi\n    fi\n  done\n\n  if [[ $is_negative -eq 0\
    \ ]]; then\n    max=None\n  fi\n\n  if [[ $is_positive -eq 0 ]]; then\n    min=None\n\
    \  fi\n\n  echo \"($max, $min)\"", "    local -a arr=($1)\n    local max_neg=0\n\
    \    local min_pos=0\n    local -i neg_cnt=0\n    local -i pos_cnt=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            ((neg_cnt++))\n\
    \            if [[ $i -gt $max_neg ]]; then\n                max_neg=$i\n    \
    \        fi\n        else\n            ((pos_cnt++))\n            if [[ $i -lt\
    \ $min_pos ]]; then\n                min_pos=$i\n            fi\n        fi\n\
    \    done\n    if [[ $neg_cnt -eq 0 ]]; then\n        max_neg=None\n    fi\n \
    \   if [[ $pos_cnt -eq 0 ]]; then\n        min_pos=None\n    fi\n    echo \"($max_neg,\
    \ $min_pos)\"", "    local -a array\n    array=($1)\n    local -i largest_negative=0\n\
    \    local -i smallest_positive=0\n    local -i i\n    local -i j\n    local -i\
    \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n \
    \   local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n\
    \    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local\
    \ -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n\
    \    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local\
    \ -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n\
    \    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local\
    \ -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n\
    \    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n   \
    \ local -i bbbb\n    local", "    # Write your code here\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n", "    local -a negative_integers\n\
    \    local -a positive_integers\n    local -a integers\n    local -a result\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local\
    \ -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n\
    \    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local\
    \ -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n\
    \    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local\
    \ -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n\
    \    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local\
    \ -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n\
    \    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local\
    \ -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n\
    \    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local\
    \ -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n\
    \    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i c", "  local\
    \ -a list=($1)\n  local -i i\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i has_negative=0\n  local -i has_positive=0\n\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if [[ ${list[$i]} -lt 0 ]]; then\n      has_negative=1\n    \
    \  if [[ ${list[$i]} -gt $largest_negative ]]; then\n        largest_negative=${list[$i]}\n\
    \      fi\n    elif [[ ${list[$i]} -gt 0 ]]; then\n      has_positive=1\n    \
    \  if [[ $smallest_positive -eq 0 ]] || [[ ${list[$i]} -lt $smallest_positive\
    \ ]]; then\n        smallest_positive=${list[$i]}\n      fi\n    fi\n  done\n\n\
    \  if [[ $has_negative -eq 0 ]]; then\n    largest_negative=None\n  fi\n\n  if\
    \ [[ $has_positive -eq 0 ]]; then\n    smallest_positive=None\n  fi\n\n  echo\
    \ \"($largest_negative, $smallest_positive)\"", "    local -a arr=($1)\n    local\
    \ -i i=0\n    local -i neg_max=0\n    local -i pos_min=0\n    local -i neg_count=0\n\
    \    local -i pos_count=0\n    local -i len=${#arr[@]}\n    local -i neg_flag=0\n\
    \    local -i pos_flag=0\n\n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[i]}\
    \ -lt 0 ]]; then\n            if [[ neg_flag -eq 0 ]]; then\n                neg_max=${arr[i]}\n\
    \                neg_flag=1\n            elif [[ ${arr[i]} -gt neg_max ]]; then\n\
    \                neg_max=${arr[i]}\n            fi\n            ((neg_count++))\n\
    \        elif [[ ${arr[i]} -gt 0 ]]; then\n            if [[ pos_flag -eq 0 ]];\
    \ then\n                pos_min=${arr[i]}\n                pos_flag=1\n      \
    \      elif [[ ${arr[i]} -lt pos_min ]]; then\n                pos_min=${arr[i]}\n\
    \            fi\n            ((pos_count++))\n        fi\n    done\n\n    if [[\
    \ neg_count -eq 0 ]]; then\n        neg_max=None\n    fi\n\n    if [[ pos_count\
    \ -eq 0 ]]; then\n        pos_min=None\n    fi\n\n    echo \"($neg_max, $pos_min)\"",
  "  local list=$1\n  local largest_negative=0\n  local smallest_positive=0\n  local\
    \ is_largest_negative_set=false\n  local is_smallest_positive_set=false\n\n  for\
    \ i in $list; do\n    if [[ $i -lt 0 ]]; then\n      if [[ $i -gt $largest_negative\
    \ ]]; then\n        largest_negative=$i\n        is_largest_negative_set=true\n\
    \      fi\n    elif [[ $i -gt 0 ]]; then\n      if [[ $is_smallest_positive_set\
    \ == false ]]; then\n        smallest_positive=$i\n        is_smallest_positive_set=true\n\
    \      elif [[ $i -lt $smallest_positive ]]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n\n  if [[ $is_largest_negative_set == false ]]; then\n\
    \    largest_negative=None\n  fi\n\n  if [[ $is_smallest_positive_set == false\
    \ ]]; then\n    smallest_positive=None\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"",
  "    local -a negative_integers\n    local -a positive_integers\n    for i in $1;\
    \ do\n        if [[ $i -lt 0 ]]; then\n            negative_integers+=($i)\n \
    \       elif [[ $i -gt 0 ]]; then\n            positive_integers+=($i)\n     \
    \   fi\n    done\n    if [[ ${#negative_integers[@]} -eq 0 ]]; then\n        negative_integers+=(None)\n\
    \    fi\n    if [[ ${#positive_integers[@]} -eq 0 ]]; then\n        positive_integers+=(None)\n\
    \    fi\n    echo \"(${negative_integers[@]}, ${positive_integers[@]})\"", " \
    \   local -a array=(\"$@\")\n    local -a negatives=()\n    local -a positives=()\n\
    \    local -a result=()\n    for i in \"${array[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            negatives+=(\"$i\")\n        elif [[ $i -gt 0 ]]; then\n\
    \            positives+=(\"$i\")\n        fi\n    done\n    if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ '%s\\n' \"${negatives[@]}\" | sort -nr | head -n1)\")\n    fi\n    if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n        result+=(\"None\")\n    else\n        result+=(\"$(printf\
    \ '%s\\n' \"${positives[@]}\" | sort -n | head -n1)\")\n    fi\n    echo \"${result[@]}\"",
  "    local -a arr=($1)\n    local -i i=0\n    local -i max=0\n    local -i min=0\n\
    \    local -i max_index=0\n    local -i min_index=0\n    local -i max_found=0\n\
    \    local -i min_found=0\n    local -i len=${#arr[@]}\n\n    for ((i=0; i<len;\
    \ i++)); do\n        if [[ ${arr[$i]} -lt 0 ]]; then\n            if [[ $max_found\
    \ -eq 0 ]]; then\n                max=${arr[$i]}\n                max_index=$i\n\
    \                max_found=1\n            elif [[ ${arr[$i]} -gt $max ]]; then\n\
    \                max=${arr[$i]}\n                max_index=$i\n            fi\n\
    \        elif [[ ${arr[$i]} -gt 0 ]]; then\n            if [[ $min_found -eq 0\
    \ ]]; then\n                min=${arr[$i]}\n                min_index=$i\n   \
    \             min_found=1\n            elif [[ ${arr[$i]} -lt $min ]]; then\n\
    \                min=${arr[$i]}\n                min_index=$i\n            fi\n\
    \        fi\n    done\n\n    if [[ $max_found -eq 0 ]]; then\n        max=\"None\"\
    \n    fi\n\n    if [[ $min_found -eq 0 ]]; then\n        min=\"None\"\n    fi\n\
    \n    echo \"($max, $min)\"", "  local -a arr=($1)\n  local -i max_neg=0\n  local\
    \ -i min_pos=0\n  local -i i=0\n\n  while [ $i -lt ${#arr[@]} ]; do\n    if [\
    \ ${arr[$i]} -lt 0 ] && [ ${arr[$i]} -gt $max_neg ]; then\n      max_neg=${arr[$i]}\n\
    \    elif [ ${arr[$i]} -gt 0 ] && [ ${arr[$i]} -lt $min_pos ]; then\n      min_pos=${arr[$i]}\n\
    \    fi\n    i=$i+1\n  done\n\n  if [ $max_neg -eq 0 ] && [ $min_pos -eq 0 ];\
    \ then\n    echo \"(None, None)\"\n  else\n    echo \"($max_neg, $min_pos)\"\n\
    \  fi", "    local -a list=($1)\n    local -i max_neg=0\n    local -i min_pos=0\n\
    \    local -i i=0\n    local -i n=${#list[@]}\n    local -i neg_count=0\n    local\
    \ -i pos_count=0\n\n    while (( i < n )); do\n        if (( list[i] < 0 )); then\n\
    \            (( neg_count++ ))\n            if (( list[i] > max_neg )); then\n\
    \                max_neg=${list[i]}\n            fi\n        elif (( list[i] >\
    \ 0 )); then\n            (( pos_count++ ))\n            if (( pos_count == 1\
    \ )); then\n                min_pos=${list[i]}\n            elif (( list[i] <\
    \ min_pos )); then\n                min_pos=${list[i]}\n            fi\n     \
    \   fi\n        (( i++ ))\n    done\n\n    if (( neg_count == 0 )); then\n   \
    \     max_neg=None\n    fi\n    if (( pos_count == 0 )); then\n        min_pos=None\n\
    \    fi\n\n    echo \"($max_neg, $min_pos)\"", "    local -a arr=($1)\n    local\
    \ max_neg=0\n    local min_pos=0\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i is_neg=0\n    local -i is_pos=0\n\n    while [ $i -lt $len ]; do\n\
    \        if [[ ${arr[$i]} -lt 0 ]]; then\n            is_neg=1\n            if\
    \ [[ ${arr[$i]} -gt $max_neg ]]; then\n                max_neg=${arr[$i]}\n  \
    \          fi\n        else\n            is_pos=1\n            if [[ ${arr[$i]}\
    \ -lt $min_pos ]]; then\n                min_pos=${arr[$i]}\n            fi\n\
    \        fi\n        i=$i+1\n    done\n\n    if [[ $is_neg -eq 0 ]]; then\n  \
    \      max_neg=\"None\"\n    fi\n\n    if [[ $is_pos -eq 0 ]]; then\n        min_pos=\"\
    None\"\n    fi\n\n    echo \"($max_neg, $min_pos)\"", "  local -a list=($1)\n\
    \  local -i largest_negative=0\n  local -i smallest_positive=0\n  local -i i=0\n\
    \  local -i len=${#list[@]}\n  local -i is_positive=0\n  local -i is_negative=0\n\
    \n  for (( i=0; i<len; i++ )); do\n    if [[ ${list[$i]} -lt 0 ]]; then\n    \
    \  is_negative=1\n      if [[ ${list[$i]} -gt $largest_negative ]]; then\n   \
    \     largest_negative=${list[$i]}\n      fi\n    else\n      is_positive=1\n\
    \      if [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=${list[$i]}\n\
    \      elif [[ ${list[$i]} -lt $smallest_positive ]]; then\n        smallest_positive=${list[$i]}\n\
    \      fi\n    fi\n  done\n\n  if [[ $is_negative -eq 0 ]]; then\n    largest_negative=\"\
    None\"\n  fi\n\n  if [[ $is_positive -eq 0 ]]; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "    local\
    \ -a arr=($1)\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i first_positive=0\n    local -i first_negative=0\n    local -i i=0\n\
    \    local -i len=${#arr[@]}\n\n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]}\
    \ -lt 0 ]; then\n            if [ $first_negative -eq 0 ]; then\n            \
    \    first_negative=1\n                largest_negative=${arr[$i]}\n         \
    \   fi\n            if [ ${arr[$i]} -gt $largest_negative ]; then\n          \
    \      largest_negative=${arr[$i]}\n            fi\n        elif [ ${arr[$i]}\
    \ -gt 0 ]; then\n            if [ $first_positive -eq 0 ]; then\n            \
    \    first_positive=1\n                smallest_positive=${arr[$i]}\n        \
    \    fi\n            if [ ${arr[$i]} -lt $smallest_positive ]; then\n        \
    \        smallest_positive=${arr[$i]}\n            fi\n        fi\n        i=$i+1\n\
    \    done\n\n    if [ $first_negative -eq 0 ]; then\n        largest_negative=None\n\
    \    fi\n    if [ $first_positive -eq 0 ]; then\n        smallest_positive=None\n\
    \    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "    local -a\
    \ arr=($1)\n    local -a neg=()\n    local -a pos=()\n    local -a res=()\n  \
    \  for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            neg+=($i)\n\
    \        elif [[ $i -gt 0 ]]; then\n            pos+=($i)\n        fi\n    done\n\
    \    if [[ ${#neg[@]} -eq 0 ]]; then\n        res+=(None)\n    else\n        res+=($(printf\
    \ \"%s\\n\" \"${neg[@]}\" | sort -nr | head -n1))\n    fi\n    if [[ ${#pos[@]}\
    \ -eq 0 ]]; then\n        res+=(None)\n    else\n        res+=($(printf \"%s\\\
    n\" \"${pos[@]}\" | sort -n | head -n1))\n    fi\n    echo \"(${res[0]}, ${res[1]})\"",
  "    local -a arr=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n   \
    \ local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n", "  local -a arr=()\n  local\
    \ -i i=0\n  local -i n=0\n  local -i m=0\n  local -i max=0\n  local -i min=0\n\
    \  local -i neg=0\n  local -i pos=0\n  local -i zero=0\n  local -i len=0\n  local\
    \ -i cnt=0\n  local -i tmp=0\n  local -i res=0\n  local -i flag=0\n  local -i\
    \ flag1=0\n  local -i flag2=0\n  local -i flag3=0\n  local -i flag4=0\n  local\
    \ -i flag5=0\n  local -i flag6=0\n  local -i flag7=0\n  local -i flag8=0\n  local\
    \ -i flag9=0\n  local -i flag10=0\n  local -i flag11=0\n  local -i flag12=0\n\
    \  local -i flag13=0\n  local -i flag14=0\n  local -i flag15=0\n  local -i flag16=0\n\
    \  local -i flag17=0\n  local -i flag18=0\n  local -i flag19=0\n  local -i flag20=0\n\
    \  local -i flag21=0\n  local -i flag22=0\n  local -i flag23=0\n  local -i flag24=0\n\
    \  local -i flag25=0\n  local -i flag26=0\n  local -i flag27=0\n  local -i flag28=0\n\
    \  local -i flag29=0\n  local -i flag30=0\n  local -i flag31=0\n  local -i flag32=0\n\
    \  local -i flag33=0\n  local -i flag34=0\n  local -i flag35=0\n  local -i flag36=0\n\
    \  local -i flag37=0\n  local -i flag38=0\n  local -i flag39=0\n  local -i flag40=0\n\
    \  local -i flag41=0\n  local -i flag42=0\n  local -i flag43=0\n  local -i flag44=0\n\
    \  local", "  local -a list=($1)\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i i=0\n\n  while [ $i -lt ${#list[@]} ]; do\n    if [ ${list[$i]} -lt\
    \ 0 ]; then\n      if [ ${list[$i]} -gt $largest_negative ]; then\n        largest_negative=${list[$i]}\n\
    \      fi\n    elif [ ${list[$i]} -gt 0 ]; then\n      if [ $smallest_positive\
    \ -eq 0 ]; then\n        smallest_positive=${list[$i]}\n      elif [ ${list[$i]}\
    \ -lt $smallest_positive ]; then\n        smallest_positive=${list[$i]}\n    \
    \  fi\n    fi\n    ((i++))\n  done\n\n  if [ $largest_negative -eq 0 ]; then\n\
    \    largest_negative=\"None\"\n  fi\n  if [ $smallest_positive -eq 0 ]; then\n\
    \    smallest_positive=\"None\"\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"",
  "  local list=$1\n  local largest_negative=0\n  local smallest_positive=0\n  local\
    \ is_first_positive=true\n  local is_first_negative=true\n\n  for i in $list;\
    \ do\n    if [ $i -lt 0 ]; then\n      if $is_first_negative; then\n        largest_negative=$i\n\
    \        is_first_negative=false\n      elif [ $i -gt $largest_negative ]; then\n\
    \        largest_negative=$i\n      fi\n    elif [ $i -gt 0 ]; then\n      if\
    \ $is_first_positive; then\n        smallest_positive=$i\n        is_first_positive=false\n\
    \      elif [ $i -lt $smallest_positive ]; then\n        smallest_positive=$i\n\
    \      fi\n    fi\n  done\n\n  if $is_first_negative; then\n    largest_negative=None\n\
    \  fi\n\n  if $is_first_positive; then\n    smallest_positive=None\n  fi\n\n \
    \ echo \"($largest_negative, $smallest_positive)\"", "    local -a arr=(\"$@\"\
    )\n    local max_neg=0\n    local min_pos=0\n    local max_neg_set=0\n    local\
    \ min_pos_set=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n\
    \            if [[ $i -gt $max_neg ]]; then\n                max_neg=$i\n    \
    \            max_neg_set=1\n            fi\n        elif [[ $i -gt 0 ]]; then\n\
    \            if [[ $min_pos_set -eq 0 ]]; then\n                min_pos=$i\n \
    \               min_pos_set=1\n            elif [[ $i -lt $min_pos ]]; then\n\
    \                min_pos=$i\n            fi\n        fi\n    done\n    if [[ $max_neg_set\
    \ -eq 0 ]]; then\n        max_neg=\"None\"\n    fi\n    if [[ $min_pos_set -eq\
    \ 0 ]]; then\n        min_pos=\"None\"\n    fi\n    echo \"($max_neg, $min_pos)\"",
  "    local -a arr=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n   \
    \ local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n", "    local -a arr=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    \    local -i ooo=0\n", "    local -a list=($1)\n    local -i largest_negative=0\n\
    \    local -i smallest_positive=0\n    local -i first_positive_found=0\n    local\
    \ -i first_negative_found=0\n\n    for i in \"${list[@]}\"; do\n        if [[\
    \ $i -lt 0 ]]; then\n            if [[ $first_negative_found -eq 0 ]]; then\n\
    \                largest_negative=$i\n                first_negative_found=1\n\
    \            elif [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $first_positive_found\
    \ -eq 0 ]]; then\n                smallest_positive=$i\n                first_positive_found=1\n\
    \            elif [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n\n    if [[ $first_negative_found -eq 0\
    \ ]]; then\n        largest_negative=None\n    fi\n\n    if [[ $first_positive_found\
    \ -eq 0 ]]; then\n        smallest_positive=None\n    fi\n\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "    local -a list=($1)\n    local -i largest_negative=0\n\
    \    local -i smallest_positive=0\n    local -i largest_negative_found=0\n   \
    \ local -i smallest_positive_found=0\n\n    for i in \"${list[@]}\"; do\n    \
    \    if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $largest_negative ]]; then\n\
    \                largest_negative=$i\n                largest_negative_found=1\n\
    \            fi\n        elif [[ $i -gt 0 ]]; then\n            if [[ $smallest_positive_found\
    \ -eq 0 ]]; then\n                smallest_positive=$i\n                smallest_positive_found=1\n\
    \            elif [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n\n    if [[ $largest_negative_found -eq\
    \ 0 ]]; then\n        largest_negative=None\n    fi\n\n    if [[ $smallest_positive_found\
    \ -eq 0 ]]; then\n        smallest_positive=None\n    fi\n\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "  local -a list=($1)\n  local -i i=0\n  local -i max_neg=0\n\
    \  local -i min_pos=0\n  local -i max_neg_found=0\n  local -i min_pos_found=0\n\
    \  local -i len=${#list[@]}\n\n  while [ $i -lt $len ]; do\n    if [ ${list[$i]}\
    \ -lt 0 ]; then\n      if [ $max_neg_found -eq 0 ]; then\n        max_neg=${list[$i]}\n\
    \        max_neg_found=1\n      elif [ ${list[$i]} -gt $max_neg ]; then\n    \
    \    max_neg=${list[$i]}\n      fi\n    elif [ ${list[$i]} -gt 0 ]; then\n   \
    \   if [ $min_pos_found -eq 0 ]; then\n        min_pos=${list[$i]}\n        min_pos_found=1\n\
    \      elif [ ${list[$i]} -lt $min_pos ]; then\n        min_pos=${list[$i]}\n\
    \      fi\n    fi\n    i=$i+1\n  done\n\n  if [ $max_neg_found -eq 0 ]; then\n\
    \    max_neg=None\n  fi\n  if [ $min_pos_found -eq 0 ]; then\n    min_pos=None\n\
    \  fi\n\n  echo \"($max_neg, $min_pos)\"", "    local -a list=($1)\n    local\
    \ -a negatives\n    local -a positives\n    local -i i\n    local -i largest_negative\n\
    \    local -i smallest_positive\n\n    for ((i=0; i<${#list[@]}; i++)); do\n \
    \       if [[ ${list[$i]} -lt 0 ]]; then\n            negatives+=(${list[$i]})\n\
    \        elif [[ ${list[$i]} -gt 0 ]]; then\n            positives+=(${list[$i]})\n\
    \        fi\n    done\n\n    if [[ ${#negatives[@]} -gt 0 ]]; then\n        largest_negative=$(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n 1)\n    else\n        largest_negative=None\n\
    \    fi\n\n    if [[ ${#positives[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n 1)\n    else\n        smallest_positive=None\n\
    \    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "    local list=$1\n\
    \    local negatives=()\n    local positives=()\n    local largest_negative=0\n\
    \    local smallest_positive=0\n    for i in $list; do\n        if [ $i -lt 0\
    \ ]; then\n            negatives+=($i)\n        elif [ $i -gt 0 ]; then\n    \
    \        positives+=($i)\n        fi\n    done\n    if [ ${#negatives[@]} -gt\
    \ 0 ]; then\n        largest_negative=$(printf '%s\\n' \"${negatives[@]}\" | sort\
    \ -nr | head -n1)\n    fi\n    if [ ${#positives[@]} -gt 0 ]; then\n        smallest_positive=$(printf\
    \ '%s\\n' \"${positives[@]}\" | sort -n | head -n1)\n    fi\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "  local -a array=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i first_positive_found=0\n  local -i\
    \ first_negative_found=0\n\n  for i in \"${array[@]}\"; do\n    if [[ $i -lt 0\
    \ ]]; then\n      if [[ $first_negative_found -eq 0 ]]; then\n        largest_negative=$i\n\
    \        first_negative_found=1\n      elif [[ $i -gt $largest_negative ]]; then\n\
    \        largest_negative=$i\n      fi\n    elif [[ $i -gt 0 ]]; then\n      if\
    \ [[ $first_positive_found -eq 0 ]]; then\n        smallest_positive=$i\n    \
    \    first_positive_found=1\n      elif [[ $i -lt $smallest_positive ]]; then\n\
    \        smallest_positive=$i\n      fi\n    fi\n  done\n\n  if [[ $first_negative_found\
    \ -eq 0 ]]; then\n    largest_negative=None\n  fi\n\n  if [[ $first_positive_found\
    \ -eq 0 ]]; then\n    smallest_positive=None\n  fi\n\n  echo \"($largest_negative,\
    \ $smallest_positive)\"", "  local -a list=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i i=0\n  local -i n=${#list[@]}\n  local\
    \ -i largest_negative_found=0\n  local -i smallest_positive_found=0\n\n  while\
    \ [ $i -lt $n ]; do\n    if [ ${list[$i]} -lt 0 ]; then\n      if [ ${list[$i]}\
    \ -gt $largest_negative ]; then\n        largest_negative=${list[$i]}\n      \
    \  largest_negative_found=1\n      fi\n    elif [ ${list[$i]} -gt 0 ]; then\n\
    \      if [ $smallest_positive_found -eq 0 ]; then\n        smallest_positive=${list[$i]}\n\
    \        smallest_positive_found=1\n      elif [ ${list[$i]} -lt $smallest_positive\
    \ ]; then\n        smallest_positive=${list[$i]}\n      fi\n    fi\n    i=$i+1\n\
    \  done\n\n  if [ $largest_negative_found -eq 0 ]; then\n    largest_negative=\"\
    None\"\n  fi\n  if [ $smallest_positive_found -eq 0 ]; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "  local\
    \ -a arr=(\"$@\")\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i largest_neg=0\n\
    \  local -i smallest_pos=0\n  local -i found_neg=0\n  local -i found_pos=0\n\n\
    \  for ((i=0; i<len; i++)); do\n    if [[ ${arr[$i]} -lt 0 ]]; then\n      if\
    \ [[ ${arr[$i]} -gt $largest_neg ]]; then\n        largest_neg=${arr[$i]}\n  \
    \      found_neg=1\n      fi\n    elif [[ ${arr[$i]} -gt 0 ]]; then\n      if\
    \ [[ $found_pos -eq 0 ]]; then\n        smallest_pos=${arr[$i]}\n        found_pos=1\n\
    \      elif [[ ${arr[$i]} -lt $smallest_pos ]]; then\n        smallest_pos=${arr[$i]}\n\
    \      fi\n    fi\n  done\n\n  if [[ $found_neg -eq 0 ]]; then\n    largest_neg='None'\n\
    \  fi\n\n  if [[ $found_pos -eq 0 ]]; then\n    smallest_pos='None'\n  fi\n\n\
    \  echo \"($largest_neg, $smallest_pos)\"", "  local -a numbers=($1)\n  local\
    \ -i largest_negative=0\n  local -i smallest_positive=0\n  local -i is_first_positive=1\n\
    \  local -i is_first_negative=1\n\n  for number in \"${numbers[@]}\"; do\n   \
    \ if [[ $number -lt 0 ]]; then\n      if [[ $is_first_negative -eq 1 ]]; then\n\
    \        largest_negative=$number\n        is_first_negative=0\n      elif [[\
    \ $number -gt $largest_negative ]]; then\n        largest_negative=$number\n \
    \     fi\n    elif [[ $number -gt 0 ]]; then\n      if [[ $is_first_positive -eq\
    \ 1 ]]; then\n        smallest_positive=$number\n        is_first_positive=0\n\
    \      elif [[ $number -lt $smallest_positive ]]; then\n        smallest_positive=$number\n\
    \      fi\n    fi\n  done\n\n  if [[ $is_first_negative -eq 1 ]]; then\n    largest_negative=\"\
    None\"\n  fi\n\n  if [[ $is_first_positive -eq 1 ]]; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "    local\
    \ -a list\n    local -i a b\n    local -i i=0\n    local -i len=0\n    local -i\
    \ is_neg=0\n    local -i is_pos=0\n\n    list=($1)\n    len=${#list[@]}\n\n  \
    \  for ((i=0; i<len; i++)); do\n        if [[ ${list[$i]} -lt 0 ]]; then\n   \
    \         is_neg=1\n            if [[ ${list[$i]} -gt $a ]]; then\n          \
    \      a=${list[$i]}\n            fi\n        elif [[ ${list[$i]} -gt 0 ]]; then\n\
    \            is_pos=1\n            if [[ ${list[$i]} -lt $b ]]; then\n       \
    \         b=${list[$i]}\n            fi\n        fi\n    done\n\n    if [[ $is_neg\
    \ -eq 0 ]]; then\n        a=None\n    fi\n\n    if [[ $is_pos -eq 0 ]]; then\n\
    \        b=None\n    fi\n\n    echo \"($a, $b)\"", "    local -a arr=($1)\n  \
    \  local -i max=0\n    local -i min=0\n    local -i i=0\n    local -i j=0\n  \
    \  local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n", "  local -a list=(\"$@\")\n  local -a negatives\n\
    \  local -a positives\n  local -a result\n  local i\n\n  for ((i=0; i<${#list[@]};\
    \ i++)); do\n    if [[ ${list[$i]} -lt 0 ]]; then\n      negatives+=(\"${list[$i]}\"\
    )\n    elif [[ ${list[$i]} -gt 0 ]]; then\n      positives+=(\"${list[$i]}\")\n\
    \    fi\n  done\n\n  if [[ ${#negatives[@]} -eq 0 ]]; then\n    result+=(\"None\"\
    )\n  else\n    result+=(\"$(printf \"%s\\n\" \"${negatives[@]}\" | sort -nr |\
    \ head -n1)\")\n  fi\n\n  if [[ ${#positives[@]} -eq 0 ]]; then\n    result+=(\"\
    None\")\n  else\n    result+=(\"$(printf \"%s\\n\" \"${positives[@]}\" | sort\
    \ -n | head -n1)\")\n  fi\n\n  echo \"${result[@]}\"", "    local -a list=($1)\n\
    \    local -i largest_negative=0\n    local -i smallest_positive=0\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i largest_negative_found=0\n\
    \    local -i smallest_positive_found=0\n\n    while [ $i -lt $len ]; do\n   \
    \     if [ ${list[$i]} -lt 0 ]; then\n            if [ $largest_negative_found\
    \ -eq 0 ]; then\n                largest_negative_found=1\n                largest_negative=${list[$i]}\n\
    \            elif [ ${list[$i]} -gt $largest_negative ]; then\n              \
    \  largest_negative=${list[$i]}\n            fi\n        elif [ ${list[$i]} -gt\
    \ 0 ]; then\n            if [ $smallest_positive_found -eq 0 ]; then\n       \
    \         smallest_positive_found=1\n                smallest_positive=${list[$i]}\n\
    \            elif [ ${list[$i]} -lt $smallest_positive ]; then\n             \
    \   smallest_positive=${list[$i]}\n            fi\n        fi\n        i=$i+1\n\
    \    done\n\n    if [ $largest_negative_found -eq 0 ]; then\n        largest_negative=\"\
    None\"\n    fi\n\n    if [ $smallest_positive_found -eq 0 ]; then\n        smallest_positive=\"\
    None\"\n    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "   \
    \ local -a list=($1)\n    local -i a=0\n    local -i b=0\n    local -i i=0\n \
    \   local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n", "  local -a arr=()\n  local -i i=0\n\
    \  local -i len=0\n  local -i largest_negative=0\n  local -i smallest_positive=0\n\
    \  local -i is_negative=0\n  local -i is_positive=0\n  local -i is_zero=0\n  local\
    \ -i is_non_integer=0\n  local -i is_empty=0\n  local -i is_invalid=0\n  local\
    \ -i is_valid=0\n  local -i is_first_iteration=0\n  local -i is_second_iteration=0\n\
    \  local -i is_third_iteration=0\n  local -i is_fourth_iteration=0\n  local -i\
    \ is_fifth_iteration=0\n  local -i is_sixth_iteration=0\n  local -i is_seventh_iteration=0\n\
    \  local -i is_eighth_iteration=0\n  local -i is_ninth_iteration=0\n  local -i\
    \ is_tenth_iteration=0\n  local -i is_eleventh_iteration=0\n  local -i is_twelfth_iteration=0\n\
    \  local -i is_thirteenth_iteration=0\n  local -i is_fourteenth_iteration=0\n\
    \  local -i is_fifteenth_iteration=0\n  local -i is_sixteenth_iteration=0\n  local\
    \ -i is_seventeenth_iteration=0\n  local -i is_eighteenth_iteration=0\n  local\
    \ -i is_nineteenth_iteration=0\n  local -i is_twentieth_iteration=0\n  local -i\
    \ is_twenty_first_iteration=0\n  local -i is_twenty_second_iteration=0\n  local\
    \ -i is_twenty_third_iteration=0\n  local -i is_twenty_fourth_iteration=0\n  local\
    \ -i is_twenty_fifth_iteration=0\n  local -i is_twenty_sixth_iteration=0\n  local\
    \ -i is_twenty_seventh_iteration=0\n  local", "    local -a arr=()\n    local\
    \ -a neg=()\n    local -a pos=()\n    local -a res=()\n    local -i i=0\n    local\
    \ -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n   \
    \ local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n   \
    \ local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -", "    local -a list=($1)\n    local -a negative_list=()\n\
    \    local -a positive_list=()\n    local largest_negative=0\n    local smallest_positive=0\n\
    \    local i=0\n\n    for i in ${list[@]}; do\n        if [[ $i -lt 0 ]]; then\n\
    \            negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n        \
    \    positive_list+=($i)\n        fi\n    done\n\n    if [[ ${#negative_list[@]}\
    \ -gt 0 ]]; then\n        largest_negative=$(printf '%s\\n' \"${negative_list[@]}\"\
    \ | sort -nr | head -n1)\n    else\n        largest_negative=None\n    fi\n\n\
    \    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ '%s\\n' \"${positive_list[@]}\" | sort -n | head -n1)\n    else\n        smallest_positive=None\n\
    \    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "    local list=$1\n\
    \    local largest_negative=0\n    local smallest_positive=0\n    local first_positive=1\n\
    \    local first_negative=1\n    for i in $list; do\n        if [ $i -lt 0 ];\
    \ then\n            if [ $first_negative -eq 1 ]; then\n                largest_negative=$i\n\
    \                first_negative=0\n            elif [ $i -gt $largest_negative\
    \ ]; then\n                largest_negative=$i\n            fi\n        elif [\
    \ $i -gt 0 ]; then\n            if [ $first_positive -eq 1 ]; then\n         \
    \       smallest_positive=$i\n                first_positive=0\n            elif\
    \ [ $i -lt $smallest_positive ]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    if [ $first_negative -eq 1 ]; then\n\
    \        largest_negative=None\n    fi\n    if [ $first_positive -eq 1 ]; then\n\
    \        smallest_positive=None\n    fi\n    echo \"($largest_negative, $smallest_positive)\"",
  "    local -a arr=($1)\n    local min=0\n    local max=0\n    local min_set=0\n\
    \    local max_set=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]];\
    \ then\n            if [[ $i -gt $max ]]; then\n                max=$i\n     \
    \           max_set=1\n            fi\n        else\n            if [[ $i -lt\
    \ $min ]]; then\n                min=$i\n                min_set=1\n         \
    \   fi\n        fi\n    done\n    if [[ $min_set -eq 0 ]]; then\n        min=None\n\
    \    fi\n    if [[ $max_set -eq 0 ]]; then\n        max=None\n    fi\n    echo\
    \ \"($max, $min)\"", "    local -a list=($1)\n    local -i max_neg=0\n    local\
    \ -i min_pos=0\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i neg_count=0\n\
    \    local -i pos_count=0\n\n    while [ $i -lt $len ]; do\n        if [ ${list[$i]}\
    \ -lt 0 ]; then\n            if [ ${list[$i]} -gt $max_neg ]; then\n         \
    \       max_neg=${list[$i]}\n            fi\n            neg_count=$((neg_count\
    \ + 1))\n        elif [ ${list[$i]} -gt 0 ]; then\n            if [ $pos_count\
    \ -eq 0 ]; then\n                min_pos=${list[$i]}\n            elif [ ${list[$i]}\
    \ -lt $min_pos ]; then\n                min_pos=${list[$i]}\n            fi\n\
    \            pos_count=$((pos_count + 1))\n        fi\n        i=$((i + 1))\n\
    \    done\n\n    if [ $neg_count -eq 0 ]; then\n        max_neg=\"None\"\n   \
    \ fi\n    if [ $pos_count -eq 0 ]; then\n        min_pos=\"None\"\n    fi\n\n\
    \    echo \"($max_neg, $min_pos)\"", "    local -a arr=($1)\n    local -i max_neg=0\n\
    \    local -i min_pos=0\n    local -i is_neg=0\n    local -i is_pos=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            is_neg=1\n\
    \            if [[ $i -gt $max_neg ]]; then\n                max_neg=$i\n    \
    \        fi\n        elif [[ $i -gt 0 ]]; then\n            is_pos=1\n       \
    \     if [[ $i -lt $min_pos ]]; then\n                min_pos=$i\n           \
    \ fi\n        fi\n    done\n    if [[ $is_neg -eq 0 ]]; then\n        max_neg=None\n\
    \    fi\n    if [[ $is_pos -eq 0 ]]; then\n        min_pos=None\n    fi\n    echo\
    \ \"($max_neg, $min_pos)\"", "  local list=$1\n  local positive_integers=()\n\
    \  local negative_integers=()\n  for i in $list; do\n    if [ $i -lt 0 ]; then\n\
    \      negative_integers+=($i)\n    elif [ $i -gt 0 ]; then\n      positive_integers+=($i)\n\
    \    fi\n  done\n  if [ ${#negative_integers[@]} -gt 0 ]; then\n    local largest_negative_integer=${negative_integers[0]}\n\
    \    for i in ${negative_integers[@]}; do\n      if [ $i -gt $largest_negative_integer\
    \ ]; then\n        largest_negative_integer=$i\n      fi\n    done\n  else\n \
    \   local largest_negative_integer=None\n  fi\n  if [ ${#positive_integers[@]}\
    \ -gt 0 ]; then\n    local smallest_positive_integer=${positive_integers[0]}\n\
    \    for i in ${positive_integers[@]}; do\n      if [ $i -lt $smallest_positive_integer\
    \ ]; then\n        smallest_positive_integer=$i\n      fi\n    done\n  else\n\
    \    local smallest_positive_integer=None\n  fi\n  echo \"($largest_negative_integer,\
    \ $smallest_positive_integer)\"", "  local -a arr=(\"$@\")\n  local -i min=0 max=0\n\
    \  local -i i=0\n\n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[$i]}\
    \ -lt 0 ]]; then\n      if [[ ${arr[$i]} -gt $max ]]; then\n        max=${arr[$i]}\n\
    \      fi\n    elif [[ ${arr[$i]} -gt 0 ]]; then\n      if [[ ${arr[$i]} -lt $min\
    \ ]]; then\n        min=${arr[$i]}\n      fi\n    fi\n  done\n\n  if [[ $min -eq\
    \ 0 ]]; then\n    min=\"None\"\n  fi\n\n  if [[ $max -eq 0 ]]; then\n    max=\"\
    None\"\n  fi\n\n  echo \"($max, $min)\"", "    local -a negative_integers\n  \
    \  local -a positive_integers\n    local -a integers\n    local -a result\n  \
    \  local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\
    \    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i\
    \ r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i aa\n    local\
    \ -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n\
    \    local -i gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local\
    \ -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n\
    \    local -i pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local\
    \ -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n\
    \    local -i yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local\
    \ -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n\
    \    local -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local\
    \ -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n\
    \    local -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local\
    \ -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n\
    \    local -i zzz\n    local -i aaaa\n    local -i bbbb\n    local -i c", "  \
    \  local -a negative_integers\n    local -a positive_integers\n    local -a integers\n\
    \    local -a result\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n    local -i ee\n\
    \    local -i ff\n    local -i gg\n    local -i hh\n    local -i ii\n    local\
    \ -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n    local -i nn\n\
    \    local -i oo\n    local -i pp\n    local -i qq\n    local -i rr\n    local\
    \ -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n    local -i ww\n\
    \    local -i xx\n    local -i yy\n    local -i zz\n    local -i aaa\n    local\
    \ -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n    local -i fff\n\
    \    local -i ggg\n    local -i hhh\n    local -i iii\n    local -i jjj\n    local\
    \ -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n    local -i ooo\n\
    \    local -i ppp\n    local -i qqq\n    local -i rrr\n    local -i sss\n    local\
    \ -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n    local -i xxx\n\
    \    local -i yyy\n    local -i zzz\n    local -i aaaa\n    local -i bbbb\n  \
    \  local -i c", "  local -a arr=($1)\n  local -i max_neg=0\n  local -i min_pos=0\n\
    \  local -i i=0\n  local -i len=${#arr[@]}\n  local -i neg_flag=0\n  local -i\
    \ pos_flag=0\n\n  for ((i=0; i<len; i++)); do\n    if [[ ${arr[i]} -lt 0 ]]; then\n\
    \      if [[ ${arr[i]} -gt $max_neg ]]; then\n        max_neg=${arr[i]}\n    \
    \  fi\n      neg_flag=1\n    else\n      if [[ ${arr[i]} -lt $min_pos ]]; then\n\
    \        min_pos=${arr[i]}\n      fi\n      pos_flag=1\n    fi\n  done\n\n  if\
    \ [[ $neg_flag -eq 0 ]]; then\n    max_neg=None\n  fi\n\n  if [[ $pos_flag -eq\
    \ 0 ]]; then\n    min_pos=None\n  fi\n\n  echo \"($max_neg, $min_pos)\"", "  \
    \  local list=$1\n    local largest_negative=0\n    local smallest_positive=0\n\
    \    local is_first_positive=true\n    local is_first_negative=true\n    for i\
    \ in $list; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $largest_negative\
    \ ]]; then\n                largest_negative=$i\n            fi\n            is_first_negative=false\n\
    \        elif [[ $i -gt 0 ]]; then\n            if [[ $is_first_positive == true\
    \ ]]; then\n                smallest_positive=$i\n                is_first_positive=false\n\
    \            elif [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n        fi\n    done\n    if [[ $is_first_negative == true ]];\
    \ then\n        largest_negative=None\n    fi\n    if [[ $is_first_positive ==\
    \ true ]]; then\n        smallest_positive=None\n    fi\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "    local -a list=($1)\n    local min=0\n    local\
    \ max=0\n    local min_set=0\n    local max_set=0\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $max ]]; then\n\
    \                max=$i\n                max_set=1\n            fi\n        elif\
    \ [[ $i -gt 0 ]]; then\n            if [[ $i -lt $min ]]; then\n             \
    \   min=$i\n                min_set=1\n            fi\n        fi\n    done\n\
    \    if [[ $min_set -eq 0 ]]; then\n        min=\"None\"\n    fi\n    if [[ $max_set\
    \ -eq 0 ]]; then\n        max=\"None\"\n    fi\n    echo \"($max, $min)\"", " \
    \   local -a negative_integers\n    local -a positive_integers\n    local -a integers\n\
    \    local -a output\n    local integer\n    local largest_negative_integer\n\
    \    local smallest_positive_integer\n\n    integers=($1)\n    for integer in\
    \ \"${integers[@]}\"; do\n        if [[ $integer -lt 0 ]]; then\n            negative_integers+=(\"\
    $integer\")\n        elif [[ $integer -gt 0 ]]; then\n            positive_integers+=(\"\
    $integer\")\n        fi\n    done\n\n    if [[ ${#negative_integers[@]} -gt 0\
    \ ]]; then\n        largest_negative_integer=$(printf \"%s\\n\" \"${negative_integers[@]}\"\
    \ | sort -nr | head -n 1)\n    else\n        largest_negative_integer=\"None\"\
    \n    fi\n\n    if [[ ${#positive_integers[@]} -gt 0 ]]; then\n        smallest_positive_integer=$(printf\
    \ \"%s\\n\" \"${positive_integers[@]}\" | sort -n | head -n 1)\n    else\n   \
    \     smallest_positive_integer=\"None\"\n    fi\n\n    output=($largest_negative_integer\
    \ $smallest_positive_integer)\n    echo \"${output[@]}\"", "    local -a arr=(\"\
    $@\")\n    local -i min=0 max=0\n    local -i i=0\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if [[ ${arr[$i]} -lt 0 ]]; then\n            if [[ ${arr[$i]}\
    \ -gt $max ]]; then\n                max=${arr[$i]}\n            fi\n        elif\
    \ [[ ${arr[$i]} -gt 0 ]]; then\n            if [[ ${arr[$i]} -lt $min ]]; then\n\
    \                min=${arr[$i]}\n            fi\n        fi\n    done\n    if\
    \ [[ $max -eq 0 ]]; then\n        max=None\n    fi\n    if [[ $min -eq 0 ]]; then\n\
    \        min=None\n    fi\n    echo \"($max, $min)\"", "    local -a arr=(\"$@\"\
    )\n    local -i max_neg=0\n    local -i min_pos=0\n    local -i flag_neg=0\n \
    \   local -i flag_pos=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt\
    \ 0 ]]; then\n            if [[ $i -gt $max_neg ]]; then\n                max_neg=$i\n\
    \            fi\n            flag_neg=1\n        elif [[ $i -gt 0 ]]; then\n \
    \           if [[ $i -lt $min_pos ]]; then\n                min_pos=$i\n     \
    \       fi\n            flag_pos=1\n        fi\n    done\n    if [[ $flag_neg\
    \ -eq 0 ]]; then\n        max_neg=None\n    fi\n    if [[ $flag_pos -eq 0 ]];\
    \ then\n        min_pos=None\n    fi\n    echo \"($max_neg, $min_pos)\"", "  \
    \  local -a list=($1)\n    local -a negative_list=()\n    local -a positive_list=()\n\
    \    local largest_negative=0\n    local smallest_positive=0\n    local -i i=0\n\
    \n    for i in \"${list[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n         \
    \   negative_list+=($i)\n        elif [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n\
    \        fi\n    done\n\n    if [[ ${#negative_list[@]} -gt 0 ]]; then\n     \
    \   largest_negative=$(printf \"%s\\n\" \"${negative_list[@]}\" | sort -nr | head\
    \ -n1)\n    fi\n\n    if [[ ${#positive_list[@]} -gt 0 ]]; then\n        smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_list[@]}\" | sort -n | head -n1)\n    fi\n\n    echo\
    \ \"($largest_negative, $smallest_positive)\"", "    local -a arr=($1)\n    local\
    \ -i max_neg=0\n    local -i min_pos=0\n    local -i i=0\n    local -i len=${#arr[@]}\n\
    \    local -i flag=0\n    local -i flag2=0\n    for ((i=0; i<len; i++)); do\n\
    \        if [[ ${arr[i]} -lt 0 ]]; then\n            if [[ ${arr[i]} -gt $max_neg\
    \ ]]; then\n                max_neg=${arr[i]}\n            fi\n            flag=1\n\
    \        elif [[ ${arr[i]} -gt 0 ]]; then\n            if [[ $flag2 -eq 0 ]];\
    \ then\n                min_pos=${arr[i]}\n                flag2=1\n         \
    \   elif [[ ${arr[i]} -lt $min_pos ]]; then\n                min_pos=${arr[i]}\n\
    \            fi\n        fi\n    done\n    if [[ $flag -eq 0 ]]; then\n      \
    \  echo \"(None, $min_pos)\"\n    elif [[ $flag2 -eq 0 ]]; then\n        echo\
    \ \"($max_neg, None)\"\n    else\n        echo \"($max_neg, $min_pos)\"\n    fi",
  "  local -a arr=($1)\n  local -i i=0\n  local -i len=${#arr[@]}\n  local -i a=0\n\
    \  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n\
    \  local -i g=0\n  local -i h=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n\
    \  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n\
    \  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n\
    \  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i\
    \ ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n", " \
    \   local -a arr=($1)\n    local -i i=0\n    local -i max=0\n    local -i min=0\n\
    \    local -i max_found=0\n    local -i min_found=0\n    local -i max_index=0\n\
    \    local -i min_index=0\n    local -i len=${#arr[@]}\n\n    for ((i=0; i<len;\
    \ i++)); do\n        if [[ ${arr[$i]} -lt 0 ]]; then\n            if [[ $max_found\
    \ -eq 0 ]]; then\n                max=${arr[$i]}\n                max_index=$i\n\
    \                max_found=1\n            elif [[ ${arr[$i]} -gt $max ]]; then\n\
    \                max=${arr[$i]}\n                max_index=$i\n            fi\n\
    \        elif [[ ${arr[$i]} -gt 0 ]]; then\n            if [[ $min_found -eq 0\
    \ ]]; then\n                min=${arr[$i]}\n                min_index=$i\n   \
    \             min_found=1\n            elif [[ ${arr[$i]} -lt $min ]]; then\n\
    \                min=${arr[$i]}\n                min_index=$i\n            fi\n\
    \        fi\n    done\n\n    if [[ $max_found -eq 0 ]]; then\n        max=None\n\
    \    fi\n\n    if [[ $min_found -eq 0 ]]; then\n        min=None\n    fi\n\n \
    \   echo \"($max, $min)\"", "    local -a arr=($1)\n    local -i i=0\n    local\
    \ -i len=${#arr[@]}\n    local -i largest_neg=0\n    local -i smallest_pos=0\n\
    \    local -i found_neg=0\n    local -i found_pos=0\n\n    while [ $i -lt $len\
    \ ]; do\n        if [ ${arr[$i]} -lt 0 ]; then\n            if [ $found_neg -eq\
    \ 0 ]; then\n                largest_neg=${arr[$i]}\n                found_neg=1\n\
    \            elif [ ${arr[$i]} -gt $largest_neg ]; then\n                largest_neg=${arr[$i]}\n\
    \            fi\n        elif [ ${arr[$i]} -gt 0 ]; then\n            if [ $found_pos\
    \ -eq 0 ]; then\n                smallest_pos=${arr[$i]}\n                found_pos=1\n\
    \            elif [ ${arr[$i]} -lt $smallest_pos ]; then\n                smallest_pos=${arr[$i]}\n\
    \            fi\n        fi\n        i=$i+1\n    done\n\n    if [ $found_neg -eq\
    \ 0 ]; then\n        largest_neg=None\n    fi\n    if [ $found_pos -eq 0 ]; then\n\
    \        smallest_pos=None\n    fi\n\n    echo \"($largest_neg, $smallest_pos)\"",
  "  local -a arr=($1)\n  local -a neg_arr=()\n  local -a pos_arr=()\n  local -a result=()\n\
    \  local i=0\n  local max_neg=0\n  local min_pos=0\n\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    if [[ ${arr[$i]} -lt 0 ]]; then\n      neg_arr+=(${arr[$i]})\n\
    \    elif [[ ${arr[$i]} -gt 0 ]]; then\n      pos_arr+=(${arr[$i]})\n    fi\n\
    \  done\n\n  if [[ ${#neg_arr[@]} -gt 0 ]]; then\n    max_neg=$(printf \"%s\\\
    n\" ${neg_arr[@]} | sort -nr | head -n1)\n  else\n    max_neg=\"None\"\n  fi\n\
    \n  if [[ ${#pos_arr[@]} -gt 0 ]]; then\n    min_pos=$(printf \"%s\\n\" ${pos_arr[@]}\
    \ | sort -n | head -n1)\n  else\n    min_pos=\"None\"\n  fi\n\n  result=($max_neg\
    \ $min_pos)\n  echo ${result[@]}", "    local -a arr=($1)\n    local -i i\n  \
    \  local -i max_neg=0\n    local -i min_pos=0\n    local -i first=1\n    for ((i=0;\
    \ i<${#arr[@]}; i++)); do\n        if [[ ${arr[$i]} -lt 0 ]]; then\n         \
    \   if [[ ${arr[$i]} -gt $max_neg ]]; then\n                max_neg=${arr[$i]}\n\
    \            fi\n        elif [[ ${arr[$i]} -gt 0 ]]; then\n            if [[\
    \ $first -eq 1 ]]; then\n                min_pos=${arr[$i]}\n                first=0\n\
    \            elif [[ ${arr[$i]} -lt $min_pos ]]; then\n                min_pos=${arr[$i]}\n\
    \            fi\n        fi\n    done\n    if [[ $max_neg -eq 0 ]]; then\n   \
    \     max_neg=None\n    fi\n    if [[ $min_pos -eq 0 ]]; then\n        min_pos=None\n\
    \    fi\n    echo \"($max_neg, $min_pos)\"", "    local -a list=($1)\n    local\
    \ -a negatives\n    local -a positives\n    local -a result\n    local i\n\n \
    \   for ((i=0; i<${#list[@]}; i++)); do\n        if [[ ${list[$i]} -lt 0 ]]; then\n\
    \            negatives+=(${list[$i]})\n        elif [[ ${list[$i]} -gt 0 ]]; then\n\
    \            positives+=(${list[$i]})\n        fi\n    done\n\n    if [[ ${#negatives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n1))\n    fi\n\n    if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n        result+=(None)\n    else\n        result+=($(printf\
    \ \"%s\\n\" \"${positives[@]}\" | sort -n | head -n1))\n    fi\n\n    echo \"\
    ${result[@]}\"", "    local -a array=($1)\n    local -i largest_negative=0\n \
    \   local -i smallest_positive=0\n    local -i first_positive=0\n    local -i\
    \ first_negative=0\n    local -i i=0\n    local -i len=${#array[@]}\n\n    for\
    \ ((i=0; i<len; i++)); do\n        if [[ ${array[$i]} -lt 0 ]]; then\n       \
    \     if [[ ${array[$i]} -gt $largest_negative ]]; then\n                largest_negative=${array[$i]}\n\
    \            fi\n            if [[ $first_negative -eq 0 ]]; then\n          \
    \      first_negative=1\n            fi\n        elif [[ ${array[$i]} -gt 0 ]];\
    \ then\n            if [[ $first_positive -eq 0 ]]; then\n                smallest_positive=${array[$i]}\n\
    \                first_positive=1\n            elif [[ ${array[$i]} -lt $smallest_positive\
    \ ]]; then\n                smallest_positive=${array[$i]}\n            fi\n \
    \       fi\n    done\n\n    if [[ $first_negative -eq 0 ]]; then\n        largest_negative=\"\
    None\"\n    fi\n    if [[ $first_positive -eq 0 ]]; then\n        smallest_positive=\"\
    None\"\n    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "   \
    \ local -a arr=($1)\n    local -i max=0\n    local -i min=0\n    local -i i=0\n\
    \    local -i len=${#arr[@]}\n    local -i is_max_set=0\n    local -i is_min_set=0\n\
    \n    for ((i=0; i<len; i++)); do\n        if [[ ${arr[$i]} -gt 0 ]]; then\n \
    \           if [[ $is_min_set -eq 0 ]]; then\n                min=${arr[$i]}\n\
    \                is_min_set=1\n            elif [[ ${arr[$i]} -lt $min ]]; then\n\
    \                min=${arr[$i]}\n            fi\n        elif [[ ${arr[$i]} -lt\
    \ 0 ]]; then\n            if [[ $is_max_set -eq 0 ]]; then\n                max=${arr[$i]}\n\
    \                is_max_set=1\n            elif [[ ${arr[$i]} -gt $max ]]; then\n\
    \                max=${arr[$i]}\n            fi\n        fi\n    done\n\n    if\
    \ [[ $is_max_set -eq 0 ]]; then\n        max=None\n    fi\n\n    if [[ $is_min_set\
    \ -eq 0 ]]; then\n        min=None\n    fi\n\n    echo \"($max, $min)\"", "  \
    \  local -a negative_integers\n    local -a positive_integers\n    local -a integers\n\
    \    local -a result\n    local -i i\n\n    integers=($1)\n    for ((i=0; i<${#integers[@]};\
    \ i++)); do\n        if [[ ${integers[$i]} -lt 0 ]]; then\n            negative_integers+=(${integers[$i]})\n\
    \        elif [[ ${integers[$i]} -gt 0 ]]; then\n            positive_integers+=(${integers[$i]})\n\
    \        fi\n    done\n\n    if [[ ${#negative_integers[@]} -eq 0 ]]; then\n \
    \       result+=(None)\n    else\n        result+=($(printf \"%s\\n\" \"${negative_integers[@]}\"\
    \ | sort -nr | head -n1))\n    fi\n\n    if [[ ${#positive_integers[@]} -eq 0\
    \ ]]; then\n        result+=(None)\n    else\n        result+=($(printf \"%s\\\
    n\" \"${positive_integers[@]}\" | sort -n | head -n1))\n    fi\n\n    echo \"\
    ${result[@]}\"", "    local -a array=($1)\n    local largest_negative=0\n    local\
    \ smallest_positive=0\n    local is_negative=0\n    local is_positive=0\n\n  \
    \  for i in \"${array[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n           \
    \ if [[ $i -gt $largest_negative ]]; then\n                largest_negative=$i\n\
    \            fi\n            is_negative=1\n        elif [[ $i -gt 0 ]]; then\n\
    \            if [[ $i -lt $smallest_positive ]]; then\n                smallest_positive=$i\n\
    \            fi\n            is_positive=1\n        fi\n    done\n\n    if [[\
    \ $is_negative -eq 0 ]]; then\n        largest_negative=\"None\"\n    fi\n\n \
    \   if [[ $is_positive -eq 0 ]]; then\n        smallest_positive=\"None\"\n  \
    \  fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "    local -a\
    \ list=($1)\n    local -i max_neg=0\n    local -i min_pos=0\n    local -i i=0\n\
    \    local -i len=${#list[@]}\n    local -i neg_count=0\n    local -i pos_count=0\n\
    \n    while [ $i -lt $len ]; do\n        if [ ${list[$i]} -lt 0 ]; then\n    \
    \        if [ ${list[$i]} -gt $max_neg ]; then\n                max_neg=${list[$i]}\n\
    \            fi\n            ((neg_count++))\n        elif [ ${list[$i]} -gt 0\
    \ ]; then\n            if [ $pos_count -eq 0 ] || [ ${list[$i]} -lt $min_pos ];\
    \ then\n                min_pos=${list[$i]}\n            fi\n            ((pos_count++))\n\
    \        fi\n        ((i++))\n    done\n\n    if [ $neg_count -eq 0 ]; then\n\
    \        max_neg=None\n    fi\n    if [ $pos_count -eq 0 ]; then\n        min_pos=None\n\
    \    fi\n\n    echo \"($max_neg, $min_pos)\"", "  local -a negative_integers\n\
    \  local -a positive_integers\n  local -a numbers\n  local number\n  local largest_negative\n\
    \  local smallest_positive\n\n  numbers=($1)\n  for number in \"${numbers[@]}\"\
    ; do\n    if [[ $number -lt 0 ]]; then\n      negative_integers+=($number)\n \
    \   elif [[ $number -gt 0 ]]; then\n      positive_integers+=($number)\n    fi\n\
    \  done\n\n  if [[ ${#negative_integers[@]} -gt 0 ]]; then\n    largest_negative=$(printf\
    \ \"%s\\n\" \"${negative_integers[@]}\" | sort -nr | head -n 1)\n  else\n    largest_negative=None\n\
    \  fi\n\n  if [[ ${#positive_integers[@]} -gt 0 ]]; then\n    smallest_positive=$(printf\
    \ \"%s\\n\" \"${positive_integers[@]}\" | sort -n | head -n 1)\n  else\n    smallest_positive=None\n\
    \  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "  local list=$1\n\
    \  local largest_negative=0\n  local smallest_positive=0\n  local is_negative=0\n\
    \  local is_positive=0\n\n  for i in $list; do\n    if [ $i -lt 0 ]; then\n  \
    \    if [ $i -gt $largest_negative ]; then\n        largest_negative=$i\n    \
    \    is_negative=1\n      fi\n    elif [ $i -gt 0 ]; then\n      if [ $i -lt $smallest_positive\
    \ ]; then\n        smallest_positive=$i\n        is_positive=1\n      fi\n   \
    \ fi\n  done\n\n  if [ $is_negative -eq 0 ]; then\n    largest_negative=None\n\
    \  fi\n\n  if [ $is_positive -eq 0 ]; then\n    smallest_positive=None\n  fi\n\
    \n  echo \"($largest_negative, $smallest_positive)\"", "  local -a list=($1)\n\
    \  local -i largest_negative=0\n  local -i smallest_positive=0\n  local -i i=0\n\
    \  local -i len=${#list[@]}\n  local -i largest_negative_found=0\n  local -i smallest_positive_found=0\n\
    \n  while [ $i -lt $len ]; do\n    if [ ${list[$i]} -lt 0 ]; then\n      if [\
    \ ${list[$i]} -gt $largest_negative ]; then\n        largest_negative=${list[$i]}\n\
    \        largest_negative_found=1\n      fi\n    elif [ ${list[$i]} -gt 0 ]; then\n\
    \      if [ $smallest_positive_found -eq 0 ]; then\n        smallest_positive=${list[$i]}\n\
    \        smallest_positive_found=1\n      elif [ ${list[$i]} -lt $smallest_positive\
    \ ]; then\n        smallest_positive=${list[$i]}\n      fi\n    fi\n    i=$i+1\n\
    \  done\n\n  if [ $largest_negative_found -eq 0 ]; then\n    largest_negative=None\n\
    \  fi\n\n  if [ $smallest_positive_found -eq 0 ]; then\n    smallest_positive=None\n\
    \  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "  local numbers=($1)\n\
    \  local largest_negative=0\n  local smallest_positive=0\n  local largest_negative_found=false\n\
    \  local smallest_positive_found=false\n\n  for number in \"${numbers[@]}\"; do\n\
    \    if ((number < 0)); then\n      if ((number > largest_negative)); then\n \
    \       largest_negative=$number\n        largest_negative_found=true\n      fi\n\
    \    elif ((number > 0)); then\n      if ! $smallest_positive_found || ((number\
    \ < smallest_positive)); then\n        smallest_positive=$number\n        smallest_positive_found=true\n\
    \      fi\n    fi\n  done\n\n  if ! $largest_negative_found; then\n    largest_negative=\"\
    None\"\n  fi\n\n  if ! $smallest_positive_found; then\n    smallest_positive=\"\
    None\"\n  fi\n\n  echo \"($largest_negative, $smallest_positive)\"", "    if [\
    \ $# -eq 0 ]; then\n        echo \"None None\"\n        return\n    fi\n\n   \
    \ local negative_max=0\n    local positive_min=0\n    local first_positive=true\n\
    \    local first_negative=true\n\n    for i in $@; do\n        if [ $i -lt 0 ];\
    \ then\n            if $first_negative; then\n                negative_max=$i\n\
    \                first_negative=false\n            elif [ $i -gt $negative_max\
    \ ]; then\n                negative_max=$i\n            fi\n        elif [ $i\
    \ -gt 0 ]; then\n            if $first_positive; then\n                positive_min=$i\n\
    \                first_positive=false\n            elif [ $i -lt $positive_min\
    \ ]; then\n                positive_min=$i\n            fi\n        fi\n    done\n\
    \n    if $first_negative; then\n        negative_max=\"None\"\n    fi\n\n    if\
    \ $first_positive; then\n        positive_min=\"None\"\n    fi\n\n    echo \"\
    $negative_max $positive_min\"", "  local -a arr=($1)\n  local -a pos\n  local\
    \ -a neg\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt 0 ]]; then\n      neg+=(\"\
    $i\")\n    elif [[ $i -gt 0 ]]; then\n      pos+=(\"$i\")\n    fi\n  done\n  if\
    \ [[ ${#neg[@]} -eq 0 ]]; then\n    neg=(\"None\")\n  fi\n  if [[ ${#pos[@]} -eq\
    \ 0 ]]; then\n    pos=(\"None\")\n  fi\n  echo \"(${neg[*]}, ${pos[*]})\"", " \
    \   local list=$1\n    local largest_negative=0\n    local smallest_positive=0\n\
    \    local is_positive=0\n    local is_negative=0\n    local is_zero=0\n    local\
    \ is_first=1\n    local current_number=0\n    local is_current_positive=0\n  \
    \  local is_current_negative=0\n    local is_current_zero=0\n    for number in\
    \ $list; do\n        current_number=$number\n        is_current_positive=$(echo\
    \ \"$current_number > 0\" | bc -l)\n        is_current_negative=$(echo \"$current_number\
    \ < 0\" | bc -l)\n        is_current_zero=$(echo \"$current_number == 0\" | bc\
    \ -l)\n        if [ $is_current_positive -eq 1 ]; then\n            is_positive=1\n\
    \            if [ $is_first -eq 1 ]; then\n                smallest_positive=$current_number\n\
    \                is_first=0\n            else\n                if [ $current_number\
    \ -lt $smallest_positive ]; then\n                    smallest_positive=$current_number\n\
    \                fi\n            fi\n        elif [ $is_current_negative -eq 1\
    \ ]; then\n            is_negative=1\n            if [ $is_first -eq 1 ]; then\n\
    \                largest_negative=$current_number\n                is_first=0\n\
    \            else\n                if [ $current_number -gt $largest_negative\
    \ ]; then\n                    largest_negative=$current_number\n            \
    \    fi\n            fi\n        elif [ $is_current_zero -eq 1 ]; then\n     \
    \       is_zero=1\n        fi\n    done\n    if [ $is_positive -eq 0 ]; then\n\
    \        smallest_positive=\"None\"\n    fi\n    if [ $is_negative -eq 0 ]; then\n\
    \        largest_negative=\"None\"\n    fi\n    echo \"($largest_negative, $smallest_positive)\"",
  "  local -a negative_integers\n  local -a positive_integers\n  local -a integers\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local\
    \ -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i\
    \ dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n\
    \  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n \
    \ local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local\
    \ -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i\
    \ yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i\
    \ ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local\
    \ -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local\
    \ -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local\
    \ -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local\
    \ -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n \
    \ local -i cccc\n  local -", "    local list=$1\n    local largest_negative=0\n\
    \    local smallest_positive=0\n    local flag=0\n    for i in $list; do\n   \
    \     if [ $i -lt 0 ]; then\n            if [ $i -gt $largest_negative ]; then\n\
    \                largest_negative=$i\n            fi\n        elif [ $i -gt 0\
    \ ]; then\n            if [ $flag -eq 0 ]; then\n                smallest_positive=$i\n\
    \                flag=1\n            elif [ $i -lt $smallest_positive ]; then\n\
    \                smallest_positive=$i\n            fi\n        fi\n    done\n\
    \    if [ $largest_negative -eq 0 ]; then\n        largest_negative=None\n   \
    \ fi\n    if [ $smallest_positive -eq 0 ]; then\n        smallest_positive=None\n\
    \    fi\n    echo \"($largest_negative, $smallest_positive)\"", "  local list=$1\n\
    \  local largest_negative=0\n  local smallest_positive=0\n  local first_positive=1\n\
    \  local first_negative=1\n  for i in $list; do\n    if [ $i -lt 0 ]; then\n \
    \     if [ $first_negative -eq 1 ]; then\n        largest_negative=$i\n      \
    \  first_negative=0\n      elif [ $i -gt $largest_negative ]; then\n        largest_negative=$i\n\
    \      fi\n    elif [ $i -gt 0 ]; then\n      if [ $first_positive -eq 1 ]; then\n\
    \        smallest_positive=$i\n        first_positive=0\n      elif [ $i -lt $smallest_positive\
    \ ]; then\n        smallest_positive=$i\n      fi\n    fi\n  done\n  if [ $first_negative\
    \ -eq 1 ]; then\n    largest_negative=None\n  fi\n  if [ $first_positive -eq 1\
    \ ]; then\n    smallest_positive=None\n  fi\n  echo \"($largest_negative, $smallest_positive)\"",
  "    local -a arr=($1)\n    local -i max_neg=0\n    local -i min_pos=0\n    local\
    \ -i i=0\n    local -i len=${#arr[@]}\n    local -i is_neg=0\n    local -i is_pos=0\n\
    \n    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt 0 ]; then\n     \
    \       if [ ${arr[$i]} -gt $max_neg ]; then\n                max_neg=${arr[$i]}\n\
    \            fi\n            is_neg=1\n        elif [ ${arr[$i]} -gt 0 ]; then\n\
    \            if [ ${arr[$i]} -lt $min_pos ]; then\n                min_pos=${arr[$i]}\n\
    \            fi\n            is_pos=1\n        fi\n        i=$i+1\n    done\n\n\
    \    if [ $is_neg -eq 0 ]; then\n        max_neg=None\n    fi\n    if [ $is_pos\
    \ -eq 0 ]; then\n        min_pos=None\n    fi\n\n    echo \"($max_neg, $min_pos)\"",
  "    local -a arr=(\"$@\")\n    local -a pos=()\n    local -a neg=()\n    local\
    \ -a none=(\"None\" \"None\")\n    local -a result=()\n\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            neg+=(\"$i\")\n        elif\
    \ [[ $i -gt 0 ]]; then\n            pos+=(\"$i\")\n        fi\n    done\n\n  \
    \  if [[ ${#neg[@]} -eq 0 ]] || [[ ${#pos[@]} -eq 0 ]]; then\n        echo \"\
    ${none[@]}\"\n    else\n        result+=(\"$(printf \"%s\\n\" \"${neg[@]}\" |\
    \ sort -nr | head -n1)\")\n        result+=(\"$(printf \"%s\\n\" \"${pos[@]}\"\
    \ | sort -n | head -n1)\")\n        echo \"${result[@]}\"\n    fi", "    local\
    \ -a list=($1)\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i i=0\n    local -i len=${#list[@]}\n    local -i largest_negative_found=0\n\
    \    local -i smallest_positive_found=0\n\n    while [ $i -lt $len ]; do\n   \
    \     if [ ${list[$i]} -lt 0 ]; then\n            if [ $largest_negative_found\
    \ -eq 0 ]; then\n                largest_negative=${list[$i]}\n              \
    \  largest_negative_found=1\n            fi\n            if [ ${list[$i]} -gt\
    \ $largest_negative ]; then\n                largest_negative=${list[$i]}\n  \
    \          fi\n        elif [ ${list[$i]} -gt 0 ]; then\n            if [ $smallest_positive_found\
    \ -eq 0 ]; then\n                smallest_positive=${list[$i]}\n             \
    \   smallest_positive_found=1\n            fi\n            if [ ${list[$i]} -lt\
    \ $smallest_positive ]; then\n                smallest_positive=${list[$i]}\n\
    \            fi\n        fi\n        i=$i+1\n    done\n\n    if [ $largest_negative_found\
    \ -eq 0 ]; then\n        largest_negative=None\n    fi\n    if [ $smallest_positive_found\
    \ -eq 0 ]; then\n        smallest_positive=None\n    fi\n\n    echo \"($largest_negative,\
    \ $smallest_positive)\"", "    local -a array=($1)\n    local largest_negative=0\n\
    \    local smallest_positive=0\n    local first_positive=0\n    local first_negative=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    for i in \"${array[@]}\"\
    ; do\n        if [[ $i -lt 0 ]]; then\n            if [[ $i -gt $largest_negative\
    \ ]]; then\n                largest_negative=$i\n            fi\n        fi\n\
    \    done\n    for j in \"${array[@]}\"; do\n        if [[ $j -gt 0 ]]; then\n\
    \            if [[ $j -lt $smallest_positive ]]; then\n                smallest_positive=$j\n\
    \            fi\n        fi\n    done\n    for k in \"${array[@]}\"; do\n    \
    \    if [[ $k -gt 0 ]]; then\n            first_positive=$k\n            break\n\
    \        fi\n    done\n    for l in \"${array[@]}\"; do\n        if [[ $l -lt\
    \ 0 ]]; then\n            first_negative=$l\n            break\n        fi\n \
    \   done\n    if [[ $largest_negative -eq 0 ]]; then\n        largest_negative=None\n\
    \    fi\n    if [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=None\n\
    \    fi\n    if [[ $first_positive -eq 0 ]]; then\n        first_positive=None\n\
    \    fi\n    if [[ $first_negative -eq 0 ]]; then\n        first_negative=None\n\
    \    fi\n    echo \"($largest_negative, $smallest_positive, $first_positive, $first_negative)\"",
  "    local numbers=($1)\n    local largest_negative=0\n    local smallest_positive=0\n\
    \    local is_positive=0\n    local is_negative=0\n    local i=0\n\n    for ((i=0;\
    \ i<${#numbers[@]}; i++)); do\n        if [[ ${numbers[$i]} -lt 0 ]]; then\n \
    \           is_negative=1\n            if [[ ${numbers[$i]} -gt $largest_negative\
    \ ]]; then\n                largest_negative=${numbers[$i]}\n            fi\n\
    \        elif [[ ${numbers[$i]} -gt 0 ]]; then\n            is_positive=1\n  \
    \          if [[ $smallest_positive -eq 0 ]]; then\n                smallest_positive=${numbers[$i]}\n\
    \            elif [[ ${numbers[$i]} -lt $smallest_positive ]]; then\n        \
    \        smallest_positive=${numbers[$i]}\n            fi\n        fi\n    done\n\
    \n    if [[ $is_negative -eq 0 ]]; then\n        largest_negative=None\n    fi\n\
    \n    if [[ $is_positive -eq 0 ]]; then\n        smallest_positive=None\n    fi\n\
    \n    echo \"($largest_negative, $smallest_positive)\"", "    local list=\"$1\"\
    \n    local largest_negative=0\n    local smallest_positive=0\n    local first_positive=1\n\
    \    local first_negative=1\n    local first_zero=1\n    local first_non_zero=1\n\
    \    local first_non_zero_positive=1\n    local first_non_zero_negative=1\n  \
    \  local first_non_zero_positive_or_negative=1\n    local first_non_zero_positive_and_negative=1\n\
    \    local first_non_zero_positive_and_negative_and_zero=1\n    local first_non_zero_positive_or_negative_and_zero=1\n\
    \    local first_non_zero_positive_or_negative_and_zero_or_empty=1\n    local\
    \ first_non_zero_positive_or_negative_and_zero_or_empty_or_null=1\n    local first_non_zero_positive_or_negative_and_zero_or_empty_or_null_or_undefined=1\n\
    \    local first_non_zero_positive_or_negative_and_zero_or_empty_or_null_or_undefined_or_false=1\n\
    \    local first_non_zero_positive_or_negative_and_zero_or_empty_or_null_or_undefined_or_false_or_true=1\n\
    \    local first_non_zero_positive_or_negative_and_zero_or_empty_or_null_or_undefined_or_false_or_true_or_zero=1\n\
    \    local first_non_zero_positive_or_negative_and_zero_or_empty_or_null_or_undefined_or_false_or_true_or_zero_or_one=1\n\
    \    local first_non_zero_positive_or_negative_and_zero_or_empty_or_null_or_undefined_or_false_or_true_or_zero_or_one_or_two=1\n\
    \    local first_non_zero_positive_or_negative_and_zero_or_empty_or_null_or_undefined_or_false_or_true_or_zero_or_one_",
  "    local -a numbers=($1)\n    local -i largest_negative=0\n    local -i smallest_positive=0\n\
    \    local -i largest_negative_found=0\n    local -i smallest_positive_found=0\n\
    \n    for number in \"${numbers[@]}\"; do\n        if [[ $number -lt 0 ]]; then\n\
    \            if [[ $number -gt $largest_negative ]]; then\n                largest_negative=$number\n\
    \                largest_negative_found=1\n            fi\n        elif [[ $number\
    \ -gt 0 ]]; then\n            if [[ $smallest_positive_found -eq 0 ]]; then\n\
    \                smallest_positive=$number\n                smallest_positive_found=1\n\
    \            elif [[ $number -lt $smallest_positive ]]; then\n               \
    \ smallest_positive=$number\n            fi\n        fi\n    done\n\n    if [[\
    \ $largest_negative_found -eq 0 ]]; then\n        largest_negative=\"None\"\n\
    \    fi\n\n    if [[ $smallest_positive_found -eq 0 ]]; then\n        smallest_positive=\"\
    None\"\n    fi\n\n    echo \"($largest_negative, $smallest_positive)\"", "   \
    \ local -a arr=($1)\n    local -i max_neg=0\n    local -i min_pos=0\n    local\
    \ -i i=0\n    local -i len=${#arr[@]}\n    local -i flag=0\n    local -i flag2=0\n\
    \    while [ $i -lt $len ]; do\n        if [ ${arr[$i]} -lt 0 ]; then\n      \
    \      if [ ${arr[$i]} -gt $max_neg ]; then\n                max_neg=${arr[$i]}\n\
    \                flag=1\n            fi\n        elif [ ${arr[$i]} -gt 0 ]; then\n\
    \            if [ $flag2 -eq 0 ]; then\n                min_pos=${arr[$i]}\n \
    \               flag2=1\n            elif [ ${arr[$i]} -lt $min_pos ]; then\n\
    \                min_pos=${arr[$i]}\n            fi\n        fi\n        i=$i+1\n\
    \    done\n    if [ $flag -eq 0 ]; then\n        max_neg=None\n    fi\n    if\
    \ [ $flag2 -eq 0 ]; then\n        min_pos=None\n    fi\n    echo \"($max_neg,\
    \ $min_pos)\"", "  local -a arr=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    \  local -i ooo=0\n", "    local -a list=($1)\n    local -i max_neg=0\n    local\
    \ -i min_pos=0\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i neg_count=0\n\
    \    local -i pos_count=0\n\n    while (( i < len )); do\n        if (( list[i]\
    \ < 0 )); then\n            (( neg_count++ ))\n            if (( list[i] > max_neg\
    \ )); then\n                max_neg=${list[i]}\n            fi\n        elif ((\
    \ list[i] > 0 )); then\n            (( pos_count++ ))\n            if (( pos_count\
    \ == 1 )); then\n                min_pos=${list[i]}\n            elif (( list[i]\
    \ < min_pos )); then\n                min_pos=${list[i]}\n            fi\n   \
    \     fi\n        (( i++ ))\n    done\n\n    if (( neg_count == 0 )); then\n \
    \       max_neg=None\n    fi\n    if (( pos_count == 0 )); then\n        min_pos=None\n\
    \    fi\n\n    echo \"$max_neg, $min_pos\"", "    local -a list=($1)\n    local\
    \ -i a=0\n    local -i b=0\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n", "  local -a array=($1)\n  local -a negative_array=()\n  local -a\
    \ positive_array=()\n  local largest_negative=0\n  local smallest_positive=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  for ((i=0; i<${#array[@]};\
    \ i++)); do\n    if [[ ${array[$i]} -lt 0 ]]; then\n      negative_array[$j]=${array[$i]}\n\
    \      ((j++))\n    elif [[ ${array[$i]} -gt 0 ]]; then\n      positive_array[$k]=${array[$i]}\n\
    \      ((k++))\n    fi\n  done\n  if [[ ${#negative_array[@]} -eq 0 ]]; then\n\
    \    largest_negative=None\n  else\n    largest_negative=${negative_array[0]}\n\
    \    for ((l=1; l<${#negative_array[@]}; l++)); do\n      if [[ ${negative_array[$l]}\
    \ -gt $largest_negative ]]; then\n        largest_negative=${negative_array[$l]}\n\
    \      fi\n    done\n  fi\n  if [[ ${#positive_array[@]} -eq 0 ]]; then\n    smallest_positive=None\n\
    \  else\n    smallest_positive=${positive_array[0]}\n    for ((l=1; l<${#positive_array[@]};\
    \ l++)); do\n      if [[ ${positive_array[$l]} -lt $smallest_positive ]]; then\n\
    \        smallest_positive=${positive_array[$l]}\n      fi\n    done\n  fi\n \
    \ echo \"($largest_negative, $smallest_positive)\"", "    local -a arr=()\n  \
    \  local -i i=0\n    local -i max=0\n    local -i min=0\n    local -i max_found=0\n\
    \    local -i min_found=0\n    local -i len=0\n    local -i num=0\n\n    for i\
    \ in $1; do\n        arr[$len]=$i\n        ((len++))\n    done\n\n    for ((i=0;\
    \ i<len; i++)); do\n        num=${arr[$i]}\n        if ((num < 0)); then\n   \
    \         if ((num > max)); then\n                max=$num\n                max_found=1\n\
    \            fi\n        elif ((num > 0)); then\n            if ((min_found ==\
    \ 0)); then\n                min=$num\n                min_found=1\n         \
    \   elif ((num < min)); then\n                min=$num\n            fi\n     \
    \   fi\n    done\n\n    if ((max_found == 0)); then\n        max=\"None\"\n  \
    \  fi\n\n    if ((min_found == 0)); then\n        min=\"None\"\n    fi\n\n   \
    \ echo \"($max, $min)\"", "    local -a a=($1)\n    local -a b=()\n    local -a\
    \ c=()\n    for i in ${a[@]}; do\n        if [[ $i -lt 0 ]]; then\n          \
    \  b+=($i)\n        elif [[ $i -gt 0 ]]; then\n            c+=($i)\n        fi\n\
    \    done\n    if [[ ${#b[@]} -eq 0 ]]; then\n        b+=(None)\n    fi\n    if\
    \ [[ ${#c[@]} -eq 0 ]]; then\n        c+=(None)\n    fi\n    echo \"($(echo ${b[@]}\
    \ | tr ' ' '\\n' | sort -nr | head -n 1), $(echo ${c[@]} | tr ' ' '\\n' | sort\
    \ -n | head -n 1))\"", "  local -a arr=()\n  local -i i=0\n  local -i max=0\n\
    \  local -i min=0\n  local -i n=0\n  local -i num=0\n  local -i pos=0\n  local\
    \ -i neg=0\n  local -i zero=0\n  local -i tmp=0\n\n  if [[ $# -eq 0 ]]; then\n\
    \    echo \"None None\"\n    return 0\n  fi\n\n  for i in $@; do\n    if [[ $i\
    \ -eq 0 ]]; then\n      ((zero++))\n    elif [[ $i -lt 0 ]]; then\n      ((neg++))\n\
    \    else\n      ((pos++))\n    fi\n    arr[n++]=$i\n  done\n\n  if [[ $neg -eq\
    \ 0 ]]; then\n    echo \"None\"\n  else\n    max=${arr[0]}\n    for ((i=1; i<n;\
    \ i++)); do\n      if [[ ${arr[i]} -gt $max ]]; then\n        max=${arr[i]}\n\
    \      fi\n    done\n    echo -n \"$max\"\n  fi\n\n  if [[ $pos -eq 0 ]]; then\n\
    \    echo \" None\"\n  else\n    min=${arr[0]}\n    for ((i=1; i<n; i++)); do\n\
    \      if [[ ${arr[i]} -lt $min ]]; then\n        min=${arr[i]}\n      fi\n  \
    \  done\n    echo \" $min\"\n  fi", "  local -a arr=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n\
    \  local -i kkk=0\n  local -i lll=0\n  local -i m", "    local -a arr=(\"$@\"\
    )\n    local -i i=0\n    local -i max=0\n    local -i min=0\n    local -i max_index=0\n\
    \    local -i min_index=0\n    local -i max_found=0\n    local -i min_found=0\n\
    \    local -i len=${#arr[@]}\n\n    for ((i=0; i<len; i++)); do\n        if [[\
    \ ${arr[$i]} -lt 0 ]]; then\n            if [[ ${arr[$i]} -gt $max ]]; then\n\
    \                max=${arr[$i]}\n                max_index=$i\n              \
    \  max_found=1\n            fi\n        elif [[ ${arr[$i]} -gt 0 ]]; then\n  \
    \          if [[ ${arr[$i]} -lt $min ]]; then\n                min=${arr[$i]}\n\
    \                min_index=$i\n                min_found=1\n            fi\n \
    \       fi\n    done\n\n    if [[ $max_found -eq 1 ]]; then\n        max=${arr[$max_index]}\n\
    \    else\n        max=None\n    fi\n\n    if [[ $min_found -eq 1 ]]; then\n \
    \       min=${arr[$min_index]}\n    else\n        min=None\n    fi\n\n    echo\
    \ \"($max, $min)\"", "  local -a array=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    \  local -i ooo=0\n", "  local -a array=($1)\n  local -i largest_negative=0\n\
    \  local -i smallest_positive=0\n  local -i i=0\n  local -i len=${#array[@]}\n\
    \  local -i is_negative=0\n  local -i is_positive=0\n\n  for ((i=0; i<len; i++));\
    \ do\n    if [[ ${array[$i]} -lt 0 ]]; then\n      is_negative=1\n      if [[\
    \ ${array[$i]} -gt $largest_negative ]]; then\n        largest_negative=${array[$i]}\n\
    \      fi\n    elif [[ ${array[$i]} -gt 0 ]]; then\n      is_positive=1\n    \
    \  if [[ $smallest_positive -eq 0 ]]; then\n        smallest_positive=${array[$i]}\n\
    \      elif [[ ${array[$i]} -lt $smallest_positive ]]; then\n        smallest_positive=${array[$i]}\n\
    \      fi\n    fi\n  done\n\n  if [[ $is_negative -eq 0 ]]; then\n    largest_negative=None\n\
    \  fi\n\n  if [[ $is_positive -eq 0 ]]; then\n    smallest_positive=None\n  fi\n\
    \n  echo \"($largest_negative, $smallest_positive)\"", "  local -a numbers=($1)\n\
    \  local -a negatives=()\n  local -a positives=()\n  local -a result=()\n\n  for\
    \ number in \"${numbers[@]}\"; do\n    if [[ $number -lt 0 ]]; then\n      negatives+=($number)\n\
    \    elif [[ $number -gt 0 ]]; then\n      positives+=($number)\n    fi\n  done\n\
    \n  if [[ ${#negatives[@]} -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf\
    \ \"%s\\n\" \"${negatives[@]}\" | sort -nr | head -n1))\n  fi\n\n  if [[ ${#positives[@]}\
    \ -eq 0 ]]; then\n    result+=(None)\n  else\n    result+=($(printf \"%s\\n\"\
    \ \"${positives[@]}\" | sort -n | head -n1))\n  fi\n\n  echo \"(${result[0]},\
    \ ${result[1]})\"", "    local -a array=($1)\n    local -a positive\n    local\
    \ -a negative\n    local -a result\n    for i in \"${array[@]}\"; do\n       \
    \ if [[ $i -lt 0 ]]; then\n            negative+=(\"$i\")\n        elif [[ $i\
    \ -gt 0 ]]; then\n            positive+=(\"$i\")\n        fi\n    done\n    if\
    \ [[ ${#negative[@]} -gt 0 ]]; then\n        result+=(\"$(printf '%s\\n' \"${negative[@]}\"\
    \ | sort -nr | head -n1)\")\n    else\n        result+=(\"None\")\n    fi\n  \
    \  if [[ ${#positive[@]} -gt 0 ]]; then\n        result+=(\"$(printf '%s\\n' \"\
    ${positive[@]}\" | sort -n | head -n1)\")\n    else\n        result+=(\"None\"\
    )\n    fi\n    echo \"${result[@]}\"", "    local -a list=($1)\n    local -a negatives\n\
    \    local -a positives\n    local -i i\n    local -i n\n    local -i p\n    local\
    \ -i max_n\n    local -i min_p\n\n    for i in \"${list[@]}\"; do\n        if\
    \ [[ $i -lt 0 ]]; then\n            negatives+=(\"$i\")\n        elif [[ $i -gt\
    \ 0 ]]; then\n            positives+=(\"$i\")\n        fi\n    done\n\n    if\
    \ [[ ${#negatives[@]} -eq 0 ]]; then\n        n=\"None\"\n    else\n        max_n=${negatives[0]}\n\
    \        for i in \"${negatives[@]}\"; do\n            if [[ $i -gt $max_n ]];\
    \ then\n                max_n=$i\n            fi\n        done\n        n=$max_n\n\
    \    fi\n\n    if [[ ${#positives[@]} -eq 0 ]]; then\n        p=\"None\"\n   \
    \ else\n        min_p=${positives[0]}\n        for i in \"${positives[@]}\"; do\n\
    \            if [[ $i -lt $min_p ]]; then\n                min_p=$i\n        \
    \    fi\n        done\n        p=$min_p\n    fi\n\n    echo \"($n, $p)\""]
stop_tokens:
- "\n}"

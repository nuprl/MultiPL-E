name: HumanEval_47_median
language: sh
prompt: "#!/bin/bash\n# Return median of elements in the list l.\n#\n# $1 is a space-separated\
  \ list\nmedian() {\n"
tests: "}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
  \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
  \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
completions: ["    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local m2=$((m/2))\n\
    \    local m1=$((m2-1))\n    local m3=$((m2+1))\n    local l1=$(echo \"$l\" |\
    \ cut -d' ' -f$m1)\n    local l2=$(echo \"$l\" | cut -d' ' -f$m2)\n    local l3=$(echo\
    \ \"$l\" | cut -d' ' -f$m3)\n    if [ $((m%2)) -eq 0 ]; then\n        echo $(((l1+l2)/2))\n\
    \    else\n        echo $l2\n    fi", "    local l=($1)\n    local i=$(( ${#l[@]}\
    \ / 2 ))\n    local j=$(( ${#l[@]} % 2 ))\n    if (( j == 0 )); then\n       \
    \ echo \"$(( (${l[$i-1]} + ${l[$i]})/2 ))\"\n    else\n        echo \"${l[$i]}\"\
    \n    fi", "    local l=($1)\n    local i=0\n    local m=0\n    local n=${#l[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        m=$((m+l[i]))\n    done\n    m=$((m/n))\n\
    \    echo $m", "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n/2))\n\
    \    local s=${l[$m]}\n    if ((n%2==0)); then\n        ((m--))\n        s=$((s+l[m]))\n\
    \        s=$((s/2))\n    fi\n    echo $s", "    local l=${1}\n    local m=$(echo\
    \ \"${l}\" | wc -w)\n    local n=$((m / 2))\n    echo \"${l}\" | sort -n | sed\
    \ -n \"${n}p\"", "  local l=($1)\n  local m=${#l[@]}\n  local i=$((m/2))\n  local\
    \ j=$((i+1))\n  if ((m%2==0)); then\n    echo $(((l[i]+l[j])/2))\n  else\n   \
    \ echo ${l[i]}\n  fi", "  local l=${1}\n  local m=$(echo \"${l}\" | wc -w)\n \
    \ local n=$((m/2))\n  echo \"${l}\" | sort -n | sed -n \"${n}p\"", "    local\
    \ l=($1)\n    local i\n    local m\n    local n\n    local j\n    local k\n  \
    \  local tmp\n    n=${#l[@]}\n    if (( n == 0 )); then\n        echo 0\n    \
    \    return\n    fi\n    if (( n == 1 )); then\n        echo ${l[0]}\n       \
    \ return\n    fi\n    for (( i = 0; i < n - 1; i++ )); do\n        m=$i\n    \
    \    for (( j = i + 1; j < n; j++ )); do\n            if (( ${l[j]} < ${l[m]}\
    \ )); then\n                m=$j\n            fi\n        done\n        tmp=${l[i]}\n\
    \        l[i]=${l[m]}\n        l[m]=$tmp\n    done\n    if (( n % 2 == 1 )); then\n\
    \        echo ${l[n / 2]}\n    else\n        k=$(( n / 2 ))\n        echo $((\
    \ (${l[k - 1]} + ${l[k]}) / 2 ))\n    fi", "  local l=$1\n  local m=`echo \"$l\"\
    \ | wc -w`\n  local n=`echo \"$l\" | wc -l`\n  local i=`echo \"$l\" | sort -n\
    \ | awk -v m=$m -v n=$n '\n    BEGIN {\n      i = 0;\n      while (i < n) {\n\
    \        i++;\n        if (i == m) {\n          print $0;\n          exit;\n \
    \       }\n        getline;\n      }\n    }'`\n  echo $i", "    local l=($1)\n\
    \    local m=${#l[@]}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ t=0\n    local m1=0\n    local m2=0\n    local m3=0\n    local m4=0\n    local\
    \ m5=0\n    local m6=0\n    local m7=0\n    local m8=0\n    local m9=0\n    local\
    \ m10=0\n    local m11=0\n    local m12=0\n    local m13=0\n    local m14=0\n\
    \    local m15=0\n    local m16=0\n    local m17=0\n    local m18=0\n    local\
    \ m19=0\n    local m20=0\n    local m21=0\n    local m22=0\n    local m23=0\n\
    \    local m24=0\n    local m25=0\n    local m26=0\n    local m27=0\n    local\
    \ m28=0\n    local m29=0\n    local m30=0\n    local m31=0\n    local m32=0\n\
    \    local m33=0\n    local m34=0\n    local m35=0\n    local m36=0\n    local\
    \ m37=0\n    local m38=0\n    local m39=0\n    local m40=0\n    local m41=0\n\
    \    local m42=0\n    local m43=0\n    local m44=0\n    local m45=0\n    local\
    \ m46=0\n    local m47=0\n    local m48=0\n    local m49=0\n    local m50=0\n\
    \    local m51=0\n    local m52=0\n    local m53=0\n    local m54=0\n    local\
    \ m55=0\n    local m56=0\n    local m57=0\n    local m58=0\n    local m59=0\n\
    \    local m60=0\n    local m61=0\n    local m62=0\n    local m63=0\n    local\
    \ m64=0\n    local m65=0\n    local m66=0\n    local m67=0", "    local l=($1)\n\
    \    local m=${#l[@]}\n    local n=$((m/2))\n    if ((m%2==0)); then\n       \
    \ echo \"${l[$n]}\"\n    else\n        echo \"$(echo \"scale=1;(${l[$n]}+${l[$n+1]})/2\"\
    \ | bc)\"\n    fi", "  local l=$1\n  local m=$(echo \"$l\" | wc -w)\n  local n=$((m/2))\n\
    \  echo \"$l\" | sort -n | head -n $n | tail -n 1", "    local l=($1)\n    local\
    \ i=0\n    local j=0\n    local m=0\n    local n=${#l[@]}\n    local s=0\n   \
    \ local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local\
    \ y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n\
    \    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local k=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local A=0\n    local B=0\n  \
    \  local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n   \
    \ local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n    local\
    \ M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n    local R=0\n\
    \    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local W=0\n \
    \   local X=0\n    local Y=0\n    local Z=0\n    local aa=0\n    local ab=0\n\
    \    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n\
    \    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n\
    \    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n\
    \    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n\
    \    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n\
    \    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf",
  "    local l=${1}\n    local m=${#l}\n    local n=$((m/2))\n    local o=$((m%2))\n\
    \    local p=${l[$n]}\n    if [ $o -eq 0 ]; then\n        local q=${l[$((n-1))]}\n\
    \        echo $(((p+q)/2))\n    else\n        echo $p\n    fi", "    local l=($1)\n\
    \    local n=${#l[@]}\n    local m=$((n / 2))\n    local s\n    if ((n == 0));\
    \ then\n        echo 0\n    elif ((n == 1)); then\n        echo ${l[0]}\n    elif\
    \ ((n % 2 == 0)); then\n        s=$((${l[$m]} + ${l[$((m - 1))]}))\n        echo\
    \ $((s / 2))\n    else\n        echo ${l[$m]}\n    fi", "    local l=($1)\n  \
    \  local i=${#l[@]}\n    local m=$((i/2))\n    local s\n    for ((i=0; i<m; i++));\
    \ do\n        for ((j=i; j<i+m; j++)); do\n            if [[ ${l[j]} -lt ${l[i]}\
    \ ]]; then\n                s=${l[i]}\n                l[i]=${l[j]}\n        \
    \        l[j]=$s\n            fi\n        done\n    done\n    echo ${l[m]}", " \
    \   local l=($1)\n    local i=${#l[@]}\n    local m=$((i/2))\n    if ((i%2==0));\
    \ then\n        echo \"scale=2; (${l[m-1]}+${l[m]})/2\" | bc\n    else\n     \
    \   echo ${l[m]}\n    fi", "    local l=$1\n    local m\n    local i\n    local\
    \ j\n    local k\n    local n\n    local t\n    local s\n    local r\n    local\
    \ p\n    local q\n    local d\n    local c\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local a\n    local b\n    local\
    \ e\n    local f\n    local g\n    local h\n    local o\n    local p\n    local\
    \ q\n    local r\n    local s\n    local t\n    local u\n    local v\n    local\
    \ w\n    local x\n    local y\n    local z\n    local aa\n    local bb\n    local\
    \ cc\n    local dd\n    local ee\n    local ff\n    local gg\n    local hh\n \
    \   local ii\n    local jj\n    local kk\n    local ll\n    local mm\n    local\
    \ nn\n    local oo\n    local pp\n    local qq\n    local rr\n    local ss\n \
    \   local tt\n    local uu\n    local vv\n    local ww\n    local xx\n    local\
    \ yy\n    local zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n\
    \    local eee\n    local fff\n    local ggg\n    local hhh\n    local iii\n \
    \   local jjj\n    local kkk\n    local lll\n    local mmm\n    local nnn\n  \
    \  local ooo\n    local ppp\n    local qqq\n    local rrr\n    local sss\n   \
    \ local ttt\n    local uuu\n    local vvv\n    local www\n    local xxx\n    local\
    \ yyy\n    local zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local\
    \ dddd\n    local eeee\n    local ffff\n    local gggg\n    local hhhh\n    local\
    \ iiii\n    local jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local\
    \ nnnn\n    local oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local\
    \ ssss\n    local tttt", "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n\
    \    local o=$((m%2))\n    local p=$((n-1))\n    local q=$((n+1))\n    local r=$((n+o))\n\
    \    if ((o)); then\n        echo ${l[$r]}\n    else\n        echo $(((${l[$p]}+${l[$q]})/2))\n\
    \    fi", "    local l=($1)\n    local i\n    local m\n    local n\n    local\
    \ t\n    for ((i=0; i<${#l[@]}; i++)); do\n        m=${l[$i]}\n        n=$i\n\
    \        while ((n > 0)) && ((l[n-1] > m)); do\n            l[n]=${l[n-1]}\n \
    \           ((n--))\n        done\n        l[n]=$m\n    done\n    ((t=${#l[@]}/2))\n\
    \    echo ${l[$t]}", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local\
    \ s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        (( s += ${l[$(( m\
    \ - 1 ))]} ))\n        (( s /= 2 ))\n    fi\n    echo $s", "  local l=$1\n  local\
    \ m=$(echo \"$l\" | wc -w)\n  local m2=$((m/2))\n  local m1=$((m2-1))\n  local\
    \ m3=$((m2+1))\n  local l1=$(echo \"$l\" | cut -d' ' -f$m1)\n  local l2=$(echo\
    \ \"$l\" | cut -d' ' -f$m2)\n  local l3=$(echo \"$l\" | cut -d' ' -f$m3)\n  if\
    \ [ $((m%2)) -eq 0 ]; then\n    echo $(((l1+l2)/2))\n  else\n    echo $l2\n  fi",
  "  local l=($1)\n  local m=$(( ${#l[@]} / 2 ))\n  local s=${l[$m]}\n  if (( ${#l[@]}\
    \ % 2 == 0 )); then\n    s=$(( (s + ${l[$((m-1))]}) / 2 ))\n  fi\n  echo $s",
  "    local l=($1)\n    local i\n    local j\n    local m\n    local n\n    local\
    \ tmp\n    for ((i=0; i<${#l[@]}; i++)); do\n        for ((j=i+1; j<${#l[@]};\
    \ j++)); do\n            if (( ${l[i]} > ${l[j]} )); then\n                tmp=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$tmp\n            fi\n   \
    \     done\n    done\n    m=${#l[@]}\n    ((n=m/2))\n    if (( m%2 == 0 )); then\n\
    \        ((n--))\n    fi\n    echo ${l[n]}", "    local l=$1\n    local m=$(echo\
    \ \"$l\" | wc -w)\n    local m2=$((m/2))\n    local m2p=$((m2+1))\n    local m2m=$((m2-1))\n\
    \    local m2pm=$((m2p-1))\n    local m2mm=$((m2m-1))\n    local m2mmm=$((m2mm-1))\n\
    \    local m2pp=$((m2p+1))\n    local m2ppp=$((m2pp+1))\n    local m2pppp=$((m2ppp+1))\n\
    \    local m2ppppp=$((m2pppp+1))\n    local m2pppppp=$((m2ppppp+1))\n    local\
    \ m2ppppppp=$((m2pppppp+1))\n    local m2pppppppp=$((m2ppppppp+1))\n    local\
    \ m2ppppppppp=$((m2pppppppp+1))\n    local m2pppppppppp=$((m2ppppppppp+1))\n \
    \   local m2ppppppppppp=$((m2pppppppppp+1))\n    local m2pppppppppppp=$((m2ppppppppppp+1))\n\
    \    local m2ppppppppppppp=$((m2pppppppppppp+1))\n    local m2pppppppppppppp=$((m2ppppppppppppp+1))\n\
    \    local m2ppppppppppppppp=$((m2pppppppppppppp+1))\n    local m2pppppppppppppppp=$((m2ppppppppppppppp+1))\n\
    \    local m2ppppppppppppppppp=$((m2pppppppppppppppp+1))\n    local m2pppppppppppppppppp=$((m2ppppppppppppppppp+1))\n\
    \    local m2ppppppppppppppppppp=$((m2pppppppppppppppppp+1))\n    local m2pp",
  "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n/2))\n    local s=${l[$m]}\n\
    \    if ((n%2==0)); then\n        s=$(((s+l[$((m-1))])/2))\n    fi\n    echo $s",
  "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n    local s=${l[$n]}\n\
    \    if ((m%2==0)); then\n        s=$((s+l[n-1]))\n        s=$((s/2))\n    fi\n\
    \    echo $s", "    local l=($1)\n    local m=${#l[@]}\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local t=0\n    local s=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local n=0\n    local o=0\n    local x=0\n    local y=0\n \
    \   local z=0\n    local u=0\n    local v=0\n    local w=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local", "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n/2))\n\
    \    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n   \
    \ if ((n%2)); then\n        echo ${v[$m]}\n    else\n        echo $(((v[m-1]+v[m])/2))\n\
    \    fi", "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n / 2))\n  \
    \  if ((n % 2 == 0)); then\n        echo \"$(((l[m - 1] + l[m]) / 2))\"\n    else\n\
    \        echo \"${l[m]}\"\n    fi", "  local l=$1\n  local m=$(echo \"$l\" | wc\
    \ -w)\n  local m2=$((m/2))\n  local m1=$((m2-1))\n  local m3=$((m2+1))\n  local\
    \ l1=$(echo \"$l\" | cut -d' ' -f$m1)\n  local l2=$(echo \"$l\" | cut -d' ' -f$m2)\n\
    \  local l3=$(echo \"$l\" | cut -d' ' -f$m3)\n  if [ $((m%2)) -eq 0 ]; then\n\
    \    echo \"$(((l1+l2)/2))\"\n  else\n    echo \"$l2\"\n  fi", "  local l=($1)\n\
    \  local i\n  local m\n  local n\n  local s\n  local t\n\n  for ((i=0; i<${#l[@]};\
    \ i++)); do\n    ((m=i+1))\n    ((n=m/2))\n    ((s=${l[$i]}))\n    while ((m>0\
    \ && l[m-1]>s)); do\n      ((l[m]=l[m-1]))\n      ((m=m-1))\n    done\n    ((l[m]=s))\n\
    \    if ((n==m)); then\n      ((t=l[n]))\n    else\n      ((t=l[n-1]))\n    fi\n\
    \  done\n  echo $t", "    local l=$1\n    local n=$(echo \"$l\" | wc -w)\n   \
    \ local m=$((n / 2))\n    local s=$(echo \"$l\" | sort -n)\n    if ((n % 2 ==\
    \ 0)); then\n        echo \"$s\" | awk -v m=$m '{print ($m + $m + 1) / 2}'\n \
    \   else\n        echo \"$s\" | awk -v m=$m '{print $m + 1}'\n    fi", "    local\
    \ l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]}\
    \ % 2 == 0 )); then\n        s=$(( (s + ${l[$((m-1))]}) / 2 ))\n    fi\n    echo\
    \ $s", "    local l=($1)\n    local s=${#l[@]}\n    local m=$((s/2))\n    local\
    \ r=$((s%2))\n    if ((r==0)); then\n        echo \"${l[$m]}\"\n    else\n   \
    \     echo \"$(((${l[$m]}+${l[$((m+1))]})/2))\"\n    fi", "    local l=($1)\n\
    \    local i\n    local m\n    local n\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local\
    \ dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n \
    \   local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local\
    \ oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n \
    \   local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local\
    \ zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n\
    \    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n \
    \   local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n  \
    \  local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n   \
    \ local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local\
    \ zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local\
    \ eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local\
    \ jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local\
    \ oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local\
    \ tttt\n    local uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local\
    \ yyyy\n    local zzzz\n    local aaaaa\n    local bbbbb\n    local ccccc\n  \
    \  local ddddd\n    local eeeee\n    local fffff\n    local ggggg\n    local hhhhh\n\
    \    local iiiii\n    local", "  local l=($1)\n  local m=$((${#l[@]} / 2))\n \
    \ if ((${#l[@]} % 2 == 0)); then\n    echo \"${l[$m]}\"\n  else\n    echo \"$(((${l[$m]}\
    \ + ${l[$((m + 1))]}) / 2))\"\n  fi", "    local l=$1\n    local n=$(echo \"$l\"\
    \ | wc -w)\n    local m=$((n / 2))\n    local s=$(echo \"$l\" | sort -n)\n   \
    \ echo \"$s\" | sed -n \"${m}p\"", "    l=($1)\n    n=${#l[@]}\n    if (( n ==\
    \ 0 )); then\n        echo 0\n    elif (( n == 1 )); then\n        echo ${l[0]}\n\
    \    else\n        if (( n % 2 == 1 )); then\n            echo $(($n/2))\n   \
    \         echo ${l[$(($n/2))]}\n        else\n            echo $(($n/2-1)) $(($n/2))\n\
    \            echo $((${l[$(($n/2-1))]} + ${l[$(($n/2))]}))\n        fi\n    fi",
  "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n    if ((m%2==0));\
    \ then\n        echo $(((l[n-1]+l[n])/2))\n    else\n        echo ${l[n]}\n  \
    \  fi", "    local l=($1)\n    local m\n    local i\n    local j\n    local k\n\
    \    local n\n    n=${#l[@]}\n    for ((i=0; i<n-1; i++)); do\n        k=$i\n\
    \        for ((j=i+1; j<n; j++)); do\n            if ((${l[j]} < ${l[k]})); then\n\
    \                k=$j\n            fi\n        done\n        m=${l[i]}\n     \
    \   l[i]=${l[k]}\n        l[k]=$m\n    done\n    echo ${l[n/2]}", "    local l=($1)\n\
    \    local m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 ==\
    \ 0)); then\n        s=$(($s + ${l[$((m - 1))]}))\n        s=$(($s / 2))\n   \
    \ fi\n    echo $s", "    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local\
    \ n=$((m/2))\n    local s=$(echo \"$l\" | sort -n)\n    if ((m%2==0)); then\n\
    \        echo \"$s\" | awk -v n=$n '{print ($n+$(n+1))/2}'\n    else\n       \
    \ echo \"$s\" | awk -v n=$n '{print $n+1}'\n    fi", "  local l=$1\n  local m=$(echo\
    \ \"$l\" | wc -w)\n  local n=$((m/2))\n  echo \"$l\" | sort -n | head -n $n |\
    \ tail -n 1", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    if (( ${#l[@]}\
    \ % 2 == 0 )); then\n        echo \"$(( (${l[$m-1]} + ${l[$m]})/2 ))\"\n    else\n\
    \        echo \"${l[$m]}\"\n    fi", "  local l=($1)\n  local l_len=${#l[@]}\n\
    \  local mid=$((l_len/2))\n  local sorted=($(printf \"%s\\n\" \"${l[@]}\" | sort\
    \ -n))\n  if ((l_len % 2 == 0)); then\n    echo \"$(((sorted[mid-1]+sorted[mid])/2))\"\
    \n  else\n    echo \"${sorted[mid]}\"\n  fi", "    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    [ $(( ${#l[@]} % 2 )) -eq 0 ] &&\
    \ s=\"$s ${l[$(( m - 1 ))]}\"\n    echo $s", "    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$m]} + ${l[$((m\
    \ - 1))]})) / 2\" | bc\n    else\n        echo \"${l[$m]}\"\n    fi", "    local\
    \ l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        echo \"$(( (${l[$m]} + ${l[$(( $m - 1 ))]} ) / 2 ))\"\n    else\n   \
    \     echo \"${l[$m]}\"\n    fi", "    local l=($1)\n    local n=${#l[@]}\n  \
    \  local m=$((n/2))\n    if ((n%2==0)); then\n        echo \"scale=2;(${l[m-1]}+${l[m]})/2\"\
    \ | bc\n    else\n        echo ${l[m]}\n    fi", "    local l=($1)\n    local\
    \ m=$(( ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 ));\
    \ then\n        s=$(( (s + ${l[$((m-1))]}) / 2 ))\n    fi\n    echo $s", "   \
    \ local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n    local o=$((n-1))\n\
    \    local p=$((n+1))\n    if ((m%2==0)); then\n        echo \"$(((${l[$o]}+${l[$p]})/2))\"\
    \n    else\n        echo \"${l[$n]}\"\n    fi", "    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(( (${l[$m]}\
    \ + ${l[$((m-1))]})/2 ))\"\n    else\n        echo \"${l[$m]}\"\n    fi", "  \
    \  local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n    local s=${l[$n]}\n\
    \    if ((m%2==0)); then\n        s=$((s+l[n-1]))\n        s=$((s/2))\n    fi\n\
    \    echo $s", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=${l[$m]}\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(( (s + ${l[$((m-1))]}) / 2\
    \ ))\n    fi\n    echo $s", "    local l=($1)\n    local n=${#l[@]}\n    local\
    \ m=$((n/2))\n    local s=${l[@]}\n    local i\n    for ((i=0; i<m; i++)); do\n\
    \        s=${s#* }\n    done\n    echo ${s%% *}", "  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n / 2))\n  local s\n  if ((n == 0)); then\n    echo 0\n  elif ((n\
    \ == 1)); then\n    echo ${l[0]}\n  elif ((n % 2 == 0)); then\n    s=$((${l[$m]}\
    \ + ${l[$((m - 1))]}))\n    echo $((s / 2))\n  else\n    echo ${l[$m]}\n  fi",
  "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n / 2))\n    if ((n == 0));\
    \ then\n        echo 0\n    elif ((n == 1)); then\n        echo ${l[0]}\n    elif\
    \ ((n % 2 == 0)); then\n        echo $(((l[m-1] + l[m]) / 2))\n    else\n    \
    \    echo ${l[m]}\n    fi", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n\
    \    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(( (${l[$m]} + ${l[$((m-1))]}\
    \ ) / 2 ))\"\n    else\n        echo \"${l[$m]}\"\n    fi", "    local l=($1)\n\
    \    local m=${#l[@]}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ t=0\n    local m1=0\n    local m2=0\n    local m3=0\n    local m4=0\n    local\
    \ m5=0\n    local m6=0\n    local m7=0\n    local m8=0\n    local m9=0\n    local\
    \ m10=0\n    local m11=0\n    local m12=0\n    local m13=0\n    local m14=0\n\
    \    local m15=0\n    local m16=0\n    local m17=0\n    local m18=0\n    local\
    \ m19=0\n    local m20=0\n    local m21=0\n    local m22=0\n    local m23=0\n\
    \    local m24=0\n    local m25=0\n    local m26=0\n    local m27=0\n    local\
    \ m28=0\n    local m29=0\n    local m30=0\n    local m31=0\n    local m32=0\n\
    \    local m33=0\n    local m34=0\n    local m35=0\n    local m36=0\n    local\
    \ m37=0\n    local m38=0\n    local m39=0\n    local m40=0\n    local m41=0\n\
    \    local m42=0\n    local m43=0\n    local m44=0\n    local m45=0\n    local\
    \ m46=0\n    local m47=0\n    local m48=0\n    local m49=0\n    local m50=0\n\
    \    local m51=0\n    local m52=0\n    local m53=0\n    local m54=0\n    local\
    \ m55=0\n    local m56=0\n    local m57=0\n    local m58=0\n    local m59=0\n\
    \    local m60=0\n    local m61=0\n    local m62=0\n    local m63=0\n    local\
    \ m64=0\n    local m65=0\n    local m66=0\n    local m67=0", "    local l=($1)\n\
    \    local i=${#l[@]}\n    local m=$((i/2))\n    if ((i%2)); then\n        echo\
    \ ${l[m]}\n    else\n        echo $(((${l[m-1]}+${l[m]})/2))\n    fi", "    local\
    \ l=($1)\n    local n=${#l[@]}\n    local m=$((n/2))\n    local s=${l[$m]}\n \
    \   if ((n%2==0)); then\n        s=$(((s+l[$((m-1))])/2))\n    fi\n    echo $s",
  "    local l=($1)\n    local i\n    for ((i=0; i<${#l[@]}; i++)); do\n        l[i]=$(echo\
    \ ${l[i]} | sed 's/^0*//')\n    done\n    echo ${l[@]} | tr ' ' '\\n' | sort -n\
    \ | awk '{a[NR]=$0} END {print a[int(NR/2)]}'", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    for ((i=0;\
    \ i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n            if ((${l[i]}\
    \ > ${l[j]})); then\n                tmp=${l[i]}\n                l[i]=${l[j]}\n\
    \                l[j]=$tmp\n            fi\n        done\n    done\n    if ((m\
    \ % 2 == 1)); then\n        echo ${l[$((m/2))]}\n    else\n        echo $(((${l[$((m/2-1))]}\
    \ + ${l[$((m/2))]})/2))\n    fi", "    local l=($1)\n    local m=${#l[@]}\n  \
    \  local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    for ((i=0; i<m;\
    \ i++)); do\n        for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]}));\
    \ then\n                tmp=${l[i]}\n                l[i]=${l[j]}\n          \
    \      l[j]=$tmp\n            fi\n        done\n    done\n    if ((m % 2 == 1));\
    \ then\n        echo ${l[m/2]}\n    else\n        k=$((m/2))\n        echo $(((${l[k-1]}\
    \ + ${l[k]})/2))\n    fi", "    local l=($1)\n    local m=${#l[@]}\n    local\
    \ i=$((m/2))\n    if ((m%2==0)); then\n        echo \"scale=2; (${l[i-1]}+${l[i]})/2\"\
    \ | bc\n    else\n        echo ${l[i]}\n    fi", "  local l=$1\n  local m=$((\
    \ ${#l[@]} / 2 ))\n  echo ${l[$m]}", "    local l=$1\n    local m\n    local n\n\
    \    local i\n    local j\n    local k\n    local t\n    local r\n    local s\n\
    \    local p\n    local q\n    local x\n    local y\n    local z\n    local a\n\
    \    local b\n    local c\n    local d\n    local e\n    local f\n    local g\n\
    \    local h\n    local u\n    local v\n    local w\n    local x\n    local y\n\
    \    local z\n    local aa\n    local bb\n    local cc\n    local dd\n    local\
    \ ee\n    local ff\n    local gg\n    local hh\n    local ii\n    local jj\n \
    \   local kk\n    local ll\n    local mm\n    local nn\n    local oo\n    local\
    \ pp\n    local qq\n    local rr\n    local ss\n    local tt\n    local uu\n \
    \   local vv\n    local ww\n    local xx\n    local yy\n    local zz\n    local\
    \ aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n    local fff\n\
    \    local ggg\n    local hhh\n    local iii\n    local jjj\n    local kkk\n \
    \   local lll\n    local mmm\n    local nnn\n    local ooo\n    local ppp\n  \
    \  local qqq\n    local rrr\n    local sss\n    local ttt\n    local uuu\n   \
    \ local vvv\n    local www\n    local xxx\n    local yyy\n    local zzz\n    local\
    \ aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local eeee\n    local\
    \ ffff\n    local gggg\n    local hhhh\n    local iiii\n    local jjjj\n    local\
    \ kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local oooo\n    local\
    \ pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local tttt\n    local\
    \ uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local yyyy\n    local\
    \ zzzz\n   ", "  local l=($1)\n  local m=$(( ${#l[@]} / 2 ))\n  local s=${l[$m]}\n\
    \  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(( (s + ${l[$((m-1))]}) / 2 ))\n \
    \ fi\n  echo $s", "  local l=($1)\n  local i=$(( ${#l[@]} / 2 ))\n  local j=$((\
    \ ${#l[@]} % 2 ))\n  local m\n  if (( j == 0 )); then\n    m=$(( (l[i-1] + l[i])\
    \ / 2 ))\n  else\n    m=${l[i]}\n  fi\n  echo $m", "    local l=($1)\n    local\
    \ i=${#l[@]}\n    local m=$((i/2))\n    local s=${l[$m]}\n    if ((i%2==0)); then\n\
    \        s=$((s+l[m-1]))\n        s=$((s/2))\n    fi\n    echo $s", "  local l=$1\n\
    \  local m=$(echo $l | wc -w)\n  local n=$((m/2))\n  echo $l | tr ' ' '\\n' |\
    \ sort -n | head -n $n | tail -n 1", "    l=($1)\n    n=${#l[@]}\n    if ((n ==\
    \ 0)); then\n        echo 0\n        return\n    fi\n    if ((n == 1)); then\n\
    \        echo ${l[0]}\n        return\n    fi\n    if ((n == 2)); then\n     \
    \   echo $(((${l[0]} + ${l[1]})/2))\n        return\n    fi\n    if ((n % 2 ==\
    \ 1)); then\n        echo ${l[$((n/2))]}\n        return\n    fi\n    echo $(((${l[$((n/2-1))]}\
    \ + ${l[$((n/2))]})/2))", "    local l=($1)\n    local mid=$(( ${#l[@]} / 2 ))\n\
    \    local sorted=($(printf '%s\\n' \"${l[@]}\" | sort -n))\n    if (( ${#l[@]}\
    \ % 2 == 0 )); then\n        echo \"$(( (${sorted[$mid]} + ${sorted[$(( $mid -\
    \ 1 ))]})/2 ))\"\n    else\n        echo \"${sorted[$mid]}\"\n    fi", "    local\
    \ l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]}\
    \ % 2 == 0 )); then\n        s=$(( (s + ${l[$((m-1))]}) / 2 ))\n    fi\n    echo\
    \ $s", "  local l=($1)\n  local i=${#l[@]}\n  local m=$((i/2))\n  local s\n  local\
    \ r\n  if ((i%2==0)); then\n    s=$((l[m-1]+l[m]))\n    r=$((s/2))\n  else\n \
    \   r=${l[m]}\n  fi\n  echo $r", "  local l=$1\n  local m=$(echo \"$l\" | wc -w)\n\
    \  local n=$((m/2))\n  echo \"$l\" | sort -n | awk \"NR==$n\"", "  local l=($1)\n\
    \  local n=${#l[@]}\n  local m=$((n/2))\n  local s\n  for ((i=0;i<n;i++)); do\n\
    \    for ((j=i;j<n;j++)); do\n      if ((${l[i]} > ${l[j]})); then\n        s=${l[i]}\n\
    \        l[i]=${l[j]}\n        l[j]=$s\n      fi\n    done\n  done\n  echo ${l[m]}",
  "  local l=$1\n  local s=${l// /$'\\n'}\n  echo \"$s\" | sort -n | awk '{a[i++]=$1;b[NR]=$1}\
    \ END {print a[int(NR/2)],b[int(NR/2)]}'", "    local l=($1)\n    local i=${#l[@]}\n\
    \    local m=$((i/2))\n    local s=()\n    for ((i=0; i<m; i++)); do\n       \
    \ s+=(${l[$i]})\n    done\n    for ((i=m+1; i<${#l[@]}; i++)); do\n        s+=(${l[$i]})\n\
    \    done\n    echo ${l[$m]}", "    local l=$1\n    local m=$(echo \"$l\" | wc\
    \ -w)\n    local i=$((m / 2))\n    echo \"$l\" | sort -n | awk -v i=$i '{print\
    \ $i}'", "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n    local\
    \ s=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    echo ${s[$n]}", "    l=($1)\n\
    \    n=${#l[@]}\n    if (( $n == 0 )); then\n        echo 0\n    elif (( $n ==\
    \ 1 )); then\n        echo ${l[0]}\n    else\n        if (( $n % 2 == 1 )); then\n\
    \            echo ${l[$((n/2))]}\n        else\n            echo $(( (${l[$((n/2-1))]}\
    \ + ${l[$((n/2))]})/2 ))\n        fi\n    fi", "    local l=$1\n    local m=$(echo\
    \ \"$l\" | wc -w)\n    local m2=$((m/2))\n    local m2p=$((m2+1))\n    local m2m=$((m2-1))\n\
    \    if [ $((m%2)) -eq 0 ]; then\n        echo \"$l\" | cut -d' ' -f $m2p,$m2m\
    \ | awk '{print ($1+$2)/2}'\n    else\n        echo \"$l\" | cut -d' ' -f $m2p\n\
    \    fi", "  local l=($1)\n  local m=$(( ${#l[@]} / 2 ))\n  local s=${l[*]}\n\
    \  local o\n  for o in ${l[@]}; do\n    if [[ $(echo \"$s < $o\" | bc) -eq 1 ]];\
    \ then\n      s=$o\n    fi\n  done\n  echo $s", "    local l=$1\n    local n=$(echo\
    \ $l | wc -w)\n    local m=$((n/2))\n    local s=$(echo $l | tr ' ' '\\n' | sort\
    \ -n | head -n $m | tail -n 1)\n    echo $s", "  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(($s +\
    \ ${l[$((m - 1))]}))\n    s=$(($s / 2))\n  fi\n  echo $s", "  local l=($1)\n \
    \ local m=${#l[@]}\n  local i\n  local j\n  local t\n  for ((i=0; i<m; i++));\
    \ do\n    for ((j=i; j>0; j--)); do\n      if [[ ${l[j]} -lt ${l[j-1]} ]]; then\n\
    \        t=${l[j]}\n        l[j]=${l[j-1]}\n        l[j-1]=$t\n      fi\n    done\n\
    \  done\n  echo ${l[$((m/2))]}", "  local l=($1)\n  local m=${#l[@]}\n  local\
    \ n=$((m/2))\n  if ((m%2==0)); then\n    echo \"${l[$n]}\"\n  else\n    echo \"\
    $(echo \"scale=1;(${l[$n]}+${l[$n+1]})/2\" | bc)\"\n  fi", "  local l=($1)\n \
    \ local m=${#l[@]}\n  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  for\
    \ ((i=0; i<m; i++)); do\n    for ((j=i; j<m; j++)); do\n      if ((${l[i]} > ${l[j]}));\
    \ then\n        tmp=${l[i]}\n        l[i]=${l[j]}\n        l[j]=$tmp\n      fi\n\
    \    done\n  done\n  if ((m%2==1)); then\n    echo ${l[m/2]}\n  else\n    echo\
    \ $(((${l[m/2-1]}+${l[m/2]})/2))\n  fi", "    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    if ((n%2==0)); then\n        echo \"${l[m-1]}\"\n \
    \   else\n        echo \"${l[m]}\"\n    fi", "    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        ((\
    \ s += ${l[$m - 1]} ))\n        (( s /= 2 ))\n    fi\n    echo $s", "    local\
    \ l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local n=${#l[@]}\n    local s\n\
    \    if (( $n % 2 == 1 )); then\n        s=${l[$m]}\n    else\n        s=$(( ${l[$m-1]}\
    \ + ${l[$m]} ))\n        s=$(( s / 2 ))\n    fi\n    echo $s", "    local l=($1)\n\
    \    local n=${#l[@]}\n    local m=$((n/2))\n    local s\n    if ((n%2==0)); then\n\
    \        s=$((l[m-1]+l[m]))\n        echo $((s/2))\n    else\n        echo ${l[m]}\n\
    \    fi", "    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local n=$((m/2))\n\
    \    echo \"$l\" | sort -n | sed -n \"${n}p\"", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    for ((i=0;\
    \ i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n            if ((${l[i]}\
    \ > ${l[j]})); then\n                tmp=${l[i]}\n                l[i]=${l[j]}\n\
    \                l[j]=$tmp\n            fi\n        done\n    done\n    if ((m\
    \ % 2 == 1)); then\n        echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]}\
    \ + ${l[m/2]})/2))\n    fi", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=\"$s ${l[$((\
    \ m - 1 ))]}\"\n    fi\n    echo $s", "    l=($1)\n    n=${#l[@]}\n    if ((n\
    \ == 0)); then\n        echo 0\n        return\n    fi\n    if ((n == 1)); then\n\
    \        echo ${l[0]}\n        return\n    fi\n    if ((n == 2)); then\n     \
    \   echo $(((${l[0]} + ${l[1]})/2))\n        return\n    fi\n    if ((n % 2 ==\
    \ 1)); then\n        echo $((${l[$((n/2))]}))\n        return\n    fi\n    echo\
    \ $(((${l[$((n/2-1))]} + ${l[$((n/2))]})/2))", "    local l=$1\n    local m=$(((${#l[@]}+1)/2))\n\
    \    echo ${l[$m]}", "  local l=($1)\n  local m=${#l[@]}\n  local n=$((m/2))\n\
    \  local o=$((n-1))\n  local p=$((n+1))\n  local s=${l[$n]}\n  local t=${l[$o]}\n\
    \  local u=${l[$p]}\n  if ((m%2==0)); then\n    echo $(((s+t)/2))\n  else\n  \
    \  echo $s\n  fi", "    local l=($1)\n    local m=${#l[@]}\n    local i=0\n  \
    \  local j=0\n    local k=0\n    local t=0\n    local n=0\n    local p=0\n   \
    \ local q=0\n    local r=0\n    local s=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n\
    \    local f=0\n    local g=0\n    local h=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=", "    l=($1)\n    n=${#l[@]}\n    if (( $n == 0 )); then\n\
    \        echo 0\n    elif (( $n == 1 )); then\n        echo ${l[0]}\n    else\n\
    \        if (( $n % 2 == 1 )); then\n            echo ${l[$((n/2))]}\n       \
    \ else\n            echo $(( (${l[$((n/2-1))]} + ${l[$((n/2))]}) / 2 ))\n    \
    \    fi\n    fi", "    local l=($1)\n    local m=${#l[@]}\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local t=0\n    local m1=0\n    local m2=0\n  \
    \  local m3=0\n    local m4=0\n    local m5=0\n    local m6=0\n    local m7=0\n\
    \    local m8=0\n    local m9=0\n    local m10=0\n    local m11=0\n    local m12=0\n\
    \    local m13=0\n    local m14=0\n    local m15=0\n    local m16=0\n    local\
    \ m17=0\n    local m18=0\n    local m19=0\n    local m20=0\n    local m21=0\n\
    \    local m22=0\n    local m23=0\n    local m24=0\n    local m25=0\n    local\
    \ m26=0\n    local m27=0\n    local m28=0\n    local m29=0\n    local m30=0\n\
    \    local m31=0\n    local m32=0\n    local m33=0\n    local m34=0\n    local\
    \ m35=0\n    local m36=0\n    local m37=0\n    local m38=0\n    local m39=0\n\
    \    local m40=0\n    local m41=0\n    local m42=0\n    local m43=0\n    local\
    \ m44=0\n    local m45=0\n    local m46=0\n    local m47=0\n    local m48=0\n\
    \    local m49=0\n    local m50=0\n    local m51=0\n    local m52=0\n    local\
    \ m53=0\n    local m54=0\n    local m55=0\n    local m56=0\n    local m57=0\n\
    \    local m58=0\n    local m59=0\n    local m60=0\n    local m61=0\n    local\
    \ m62=0\n    local m63=0\n    local m64=0\n    local m65=0\n    local m66=0\n\
    \    local m67=0", "  local l=$1\n  local m=$(echo \"$l\" | wc -w)\n  local n=$((m/2))\n\
    \  echo \"$l\" | sort -n | awk \"NR==$n\"", "  local l=${1}\n  local m=${#l}\n\
    \  local n=$((m/2))\n  local o=$((n-1))\n  local p=$((n+1))\n  local q=$((m-1))\n\
    \  local r=$((m/2))\n  local s=$((r-1))\n  local t=$((r+1))\n  local u=$((m-1))\n\
    \  local v=$((m/2))\n  local w=$((v-1))\n  local x=$((v+1))\n  local y=$((m-1))\n\
    \  local z=$((m/2))\n  local aa=$((z-1))\n  local ab=$((z+1))\n  local ac=$((m-1))\n\
    \  local ad=$((m/2))\n  local ae=$((ad-1))\n  local af=$((ad+1))\n  local ag=$((m-1))\n\
    \  local ah=$((m/2))\n  local ai=$((ah-1))\n  local aj=$((ah+1))\n  local ak=$((m-1))\n\
    \  local al=$((m/2))\n  local am=$((al-1))\n  local an=$((al+1))\n  local ao=$((m-1))\n\
    \  local ap=$((m/2))\n  local aq=$((ap-1))\n  local ar=$((ap+1))\n  local as=$((m-1))\n\
    \  local at=$((m/2))\n  local au=$((at-1))\n  local av=$((at+1))\n  local aw=$((m-1))\n\
    \  local ax=$((m/2))\n  local ay=$((ax-1))\n  local az=$((ax+1))\n  local ba=$((m-1))\n\
    \  local bb=$((m/2))\n  local bc=$((bb-1))\n  local bd=$((bb+1))\n  local be=$((m-1))\n\
    \  local bf=$((m/2))\n  local bg=$((bf-1))\n  local bh=$((bf+1))\n  local bi=$((m-1))\n\
    \  local b", "    l=($1)\n    n=${#l[@]}\n    if (( n == 0 )); then\n        echo\
    \ 0\n    elif (( n == 1 )); then\n        echo ${l[0]}\n    else\n        if ((\
    \ n % 2 == 1 )); then\n            echo $(($n/2))\n            echo ${l[$(($n/2))]}\n\
    \        else\n            echo $(($n/2-1)) $(($n/2))\n            echo $((${l[$(($n/2-1))]}\
    \ + ${l[$(($n/2))]}))\n        fi\n    fi", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local j\n    local tmp\n    for ((i=0; i<m; i++)); do\n    \
    \    for ((j=i+1; j<m; j++)); do\n            if ((l[i] > l[j])); then\n     \
    \           tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo $(((l[m/2-1] + l[m/2]) / 2))\n    fi",
  "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if\
    \ (( ${#l[@]} % 2 == 0 )); then\n        s=$(( (s + ${l[$((m-1))]}) / 2 ))\n \
    \   fi\n    echo $s", "    local l=($1)\n    local i=${#l[@]}\n    local m=$((i/2))\n\
    \    if ((i%2==0)); then\n        echo \"scale=2; (${l[m-1]}+${l[m]})/2\" | bc\n\
    \    else\n        echo ${l[m]}\n    fi", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local m2=$((m/2))\n    local s=${l[$m2]}\n    if ((m%2==0)); then\n     \
    \   s=\"$s ${l[$((m2-1))]}\"\n    fi\n    echo $s", "    local l=$1\n    local\
    \ m=$(echo \"$l\" | wc -w)\n    local h=$((m/2))\n    local r=$((m%2))\n    local\
    \ s=$(echo \"$l\" | sort -n)\n    if [ $r -eq 0 ]; then\n        echo $(echo \"\
    $s\" | sed -n \"$((h+1))p\")\n    else\n        echo $(echo \"$s\" | sed -n \"\
    $h p\")\n    fi", "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n /\
    \ 2))\n    local s=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    if ((n % 2\
    \ == 0)); then\n        echo $((${s[$m]} + ${s[$((m - 1))]}))\n    else\n    \
    \    echo ${s[$m]}\n    fi", "  local l=($1)\n  local n=${#l[@]}\n  local m=$((n/2))\n\
    \  if ((n%2==0)); then\n    echo \"$(((l[m-1]+l[m])/2))\"\n  else\n    echo \"\
    ${l[m]}\"\n  fi", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local\
    \ s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(( (s + ${l[$((m-1))]})\
    \ / 2 ))\n    fi\n    echo $s", "    local l=($1)\n    local m=${#l[@]}\n    local\
    \ n=$((m / 2))\n    local o=$((m % 2))\n    local p=$((n - o))\n    local q=$((n\
    \ + o))\n    local r=$((p + q))\n    local s=$((r / 2))\n    echo ${l[$s]}", " \
    \   local l=($1)\n    local m=${#l[@]}\n    local s=${l[$((m/2))]}\n    [ $((m%2))\
    \ -eq 0 ] && s=\"$s ${l[$((m/2-1))]}\"\n    echo $s", "    local l=($1)\n    local\
    \ m=${#l[@]}\n    local i\n    local j\n    local k\n    local t\n    for ((i=0;\
    \ i<m; i++)); do\n        k=${l[i]}\n        for ((j=i; j>0 && l[j-1]>k; j--));\
    \ do\n            l[j]=${l[j-1]}\n        done\n        l[j]=$k\n    done\n  \
    \  if ((m%2)); then\n        echo ${l[m/2]}\n    else\n        ((t=l[m/2]+l[m/2-1]))\n\
    \        echo $((t/2))\n    fi", "    local l=($1)\n    local m=$(( ${#l[@]} /\
    \ 2 ))\n    local s=${l[$m]}\n    echo $s", "  local l=($1)\n  local i=${#l[@]}\n\
    \  local m=$((i/2))\n  if ((i%2)); then\n    echo ${l[m]}\n  else\n    echo $(((${l[m-1]}+${l[m]})/2))\n\
    \  fi", "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n / 2))\n    local\
    \ s=${l[$m]}\n    if ((n % 2 == 0)); then\n        s=\"$s ${l[$((m - 1))]}\"\n\
    \    fi\n    echo $s", "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m\
    \ / 2))\n    local o=$((n - 1))\n    local p=$((n + 1))\n    local q=$((m - 1))\n\
    \    local r=$((m / 2))\n    local s=$((r - 1))\n    local t=$((r + 1))\n    local\
    \ u=$((m % 2))\n    local v=$((m / 2))\n    local w=$((v - 1))\n    local x=$((v\
    \ + 1))\n    local y=$((m % 2))\n    local z=$((m / 2))\n    local aa=$((z - 1))\n\
    \    local ab=$((z + 1))\n    local ac=$((m % 2))\n    local ad=$((m / 2))\n \
    \   local ae=$((ad - 1))\n    local af=$((ad + 1))\n    local ag=$((m % 2))\n\
    \    local ah=$((m / 2))\n    local ai=$((ah - 1))\n    local aj=$((ah + 1))\n\
    \    local ak=$((m % 2))\n    local al=$((m / 2))\n    local am=$((al - 1))\n\
    \    local an=$((al + 1))\n    local ao=$((m % 2))\n    local ap=$((m / 2))\n\
    \    local aq=$((ap - 1))\n    local ar=$((ap + 1))\n    local as=$((m % 2))\n\
    \    local at=$((m / 2))\n    local au=$((at - 1))\n    local av=$((at + 1))\n\
    \    local aw=$((m % 2))\n    local ax=$((m / 2))\n    local ay=$((ax - 1))\n\
    \    local az=$((ax + 1))\n    local ba=$((m % 2))\n    local bb=$((m / 2))\n\
    \    local bc=$((bb - 1))\n    local bd=$((bb + 1))\n    local be=$((m % 2))\n\
    \    local bf=$((m / 2))\n    local bg=$((bf - 1))\n    local bh=$((bf + 1))\n\
    \    local bi=$((m % 2))\n   ", "    local l=($1)\n    local n=${#l[@]}\n    local\
    \ m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n        s=$((s+l[m-1]))\n\
    \        s=$((s/2))\n    fi\n    echo $s", "    local l=$1\n    local m=$(echo\
    \ \"$l\" | wc -w)\n    local n=$((m/2))\n    echo \"$l\" | sort -n | awk \"NR==$n\"",
  "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n/2))\n    local s=${l[$m]}\n\
    \    if ((n%2==0)); then\n        s=$((s+l[m-1]))\n        s=$((s/2))\n    fi\n\
    \    echo $s", "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n\
    \    local s=${l[$n]}\n    if ((m%2==0)); then\n        s=\"$s ${l[$((n-1))]}\"\
    \n    fi\n    echo $s", "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n\
    \    local o=$((m%2))\n    local p=$((n+o))\n    local q=$((n-1))\n    local r=$((n+1))\n\
    \    local s=$((n+2))\n    local t=$((n+3))\n    if [ $m -eq 1 ]; then\n     \
    \   echo ${l[0]}\n    elif [ $m -eq 2 ]; then\n        echo $((${l[0]}+${l[1]}))\n\
    \    elif [ $m -eq 3 ]; then\n        echo $((${l[1]}+${l[1]}+${l[2]}))\n    elif\
    \ [ $m -eq 4 ]; then\n        echo $((${l[1]}+${l[2]}+${l[2]}+${l[3]}))\n    elif\
    \ [ $m -eq 5 ]; then\n        echo $((${l[2]}+${l[2]}+${l[3]}+${l[3]}+${l[4]}))\n\
    \    elif [ $m -eq 6 ]; then\n        echo $((${l[2]}+${l[3]}+${l[3]}+${l[4]}+${l[4]}+${l[5]}))\n\
    \    elif [ $m -eq 7 ]; then\n        echo $((${l[3]}+${l[3]}+${l[4]}+${l[4]}+${l[5]}+${l[5]}+${l[6]}))\n\
    \    elif [ $m -eq 8 ]; then\n        echo $((${l[3]}+${l[4]}+${l[4]}+${l[5]}+${l[5]}+${l[6]}+${l[6]}+${l[7]}))\n\
    \    elif [ $m -eq 9 ]; then\n        echo $((${l[4]}+${l[4]}+${l[5]}+${l[5]}+${l[6]}+${l[6]}+${l[7]}+${l[7]}+${l[8]}))\n\
    \    elif", "  local l=($1)\n  local m=${#l[@]}\n  ((m%2==0)) && ((m--))\n  echo\
    \ ${l[$m/2]}", "    local l=($1)\n    local m\n    local i\n    local j\n    local\
    \ k\n    local n\n    n=${#l[@]}\n    for ((i=0; i<n-1; i++)); do\n        k=$i\n\
    \        for ((j=i+1; j<n; j++)); do\n            if ((${l[j]} < ${l[k]})); then\n\
    \                k=$j\n            fi\n        done\n        if ((k != i)); then\n\
    \            m=${l[i]}\n            l[i]=${l[k]}\n            l[k]=$m\n      \
    \  fi\n    done\n    echo ${l[n/2]}", "  local l=($1)\n  local m=$(( ${#l[@]}\
    \ / 2 ))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(( (s\
    \ + ${l[$((m-1))]}) / 2 ))\n  fi\n  echo $s", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m / 2))\n    if ((m % 2 == 0)); then\n        echo \"$(((l[n -\
    \ 1] + l[n]) / 2))\"\n    else\n        echo \"${l[n]}\"\n    fi", "    l=($1)\n\
    \    n=${#l[@]}\n    if (( $n == 0 )); then\n        echo 0\n    elif (( $n ==\
    \ 1 )); then\n        echo ${l[0]}\n    else\n        if (( $n % 2 == 1 )); then\n\
    \            echo ${l[$((n/2))]}\n        else\n            echo $(( (${l[$((n/2-1))]}\
    \ + ${l[$((n/2))]}) / 2 ))\n        fi\n    fi", "    local l=($1)\n    local\
    \ n=${#l[@]}\n    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 ==\
    \ 0)); then\n        s=$((s + ${l[$((m - 1))]}))\n        s=$((s / 2))\n    fi\n\
    \    echo $s", "    local l=($1)\n    local m=${#l[@]}\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local t=0\n    for ((i=0; i<m; i++)); do\n        for\
    \ ((j=i+1; j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n      \
    \          t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n  \
    \  fi", "  local l=($1)\n  local m=${#l[@]}\n  local i=$((m/2))\n  if ((m%2==0));\
    \ then\n    echo \"$(((l[i-1]+l[i])/2))\"\n  else\n    echo \"${l[i]}\"\n  fi",
  "    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local n=$((m/2))\n    local\
    \ o=$((n+1))\n    if [ $((m%2)) -eq 0 ]; then\n        echo \"$l\" | tr ' ' '\\\
    n' | sort -n | sed -n \"${n},${o}p\" | awk '{print ($1+$2)/2}'\n    else\n   \
    \     echo \"$l\" | tr ' ' '\\n' | sort -n | sed -n \"${o}p\"\n    fi", "    local\
    \ l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local n=$((m/2))\n    echo \"\
    $l\" | sort -n | sed -n \"${n}p\"", "  local l=`echo $1 | sed 's/ /\\n/g' | sort\
    \ -n`\n  local n=`echo $l | wc -w`\n  local m=$((n/2))\n  local r=`echo $l | cut\
    \ -d' ' -f$((m+1))`\n  echo $r", "    local l=($1)\n    local m=$(( ${#l[@]} /\
    \ 2 ))\n    local r=$(( ${#l[@]} % 2 ))\n    local s=${l[$m]}\n    (( r )) &&\
    \ s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    echo $s", "    local\
    \ l=($1)\n    local i=${#l[@]}\n    local m=$((i/2))\n    local s\n    for ((i=0;\
    \ i<${#l[@]}; i++)); do\n        for ((j=i; j<${#l[@]}; j++)); do\n          \
    \  if ((${l[i]} > ${l[j]})); then\n                s=${l[i]}\n               \
    \ l[i]=${l[j]}\n                l[j]=$s\n            fi\n        done\n    done\n\
    \    echo ${l[$m]}", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    if\
    \ (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(( (${l[$m]} + ${l[$(( $m - 1\
    \ ))]} ) / 2 ))\"\n    else\n        echo \"${l[$m]}\"\n    fi", "  local l=$1\n\
    \  local n=$(echo \"$l\" | wc -w)\n  local m=$((n / 2))\n  local s=$(echo \"$l\"\
    \ | sort -n)\n  if ((n % 2 == 0)); then\n    echo $(echo \"$s\" | sed -n \"$((m\
    \ - 1))p\")\n  else\n    echo $(echo \"$s\" | sed -n \"$m p\")\n  fi", "  local\
    \ l=($1)\n  local i\n  local m\n  local n\n  local t\n  for ((i=0; i<${#l[@]};\
    \ i++)); do\n    for ((m=i; m<${#l[@]}; m++)); do\n      if ((${l[i]} > ${l[m]}));\
    \ then\n        t=${l[i]}\n        l[i]=${l[m]}\n        l[m]=$t\n      fi\n \
    \   done\n  done\n  n=$((${#l[@]} / 2))\n  if ((${#l[@]} % 2 == 0)); then\n  \
    \  echo \"scale=2; (${l[n]} + ${l[n-1]})/2\" | bc\n  else\n    echo ${l[n]}\n\
    \  fi", "    local l=($1)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n\
    \    local k=0\n    local tmp=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i;\
    \ j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n               \
    \ tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n     \
    \       fi\n        done\n    done\n    if ((m % 2 == 1)); then\n        echo\
    \ ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n    fi",
  "    local l=($1)\n    local m=${#l[@]}\n    local i\n    local j\n    local t\n\
    \    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++)); do\n          \
    \  if ((${l[i]} > ${l[j]})); then\n                t=${l[i]}\n               \
    \ l[i]=${l[j]}\n                l[j]=$t\n            fi\n        done\n    done\n\
    \    if ((m % 2 == 1)); then\n        echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]}\
    \ + ${l[m/2]})/2))\n    fi", "    local l=($1)\n    local i=${#l[@]}\n    local\
    \ m=$((i/2))\n    local s\n    if ((i%2==0)); then\n        s=$(echo \"scale=2;(${l[m-1]}+${l[m]})/2\"\
    \ | bc)\n    else\n        s=${l[m]}\n    fi\n    echo $s", "  local l=($1)\n\
    \  local n=${#l[@]}\n  local m=$((n / 2))\n  local s=${l[$m]}\n  if ((n % 2 ==\
    \ 0)); then\n    s=$((s + ${l[$((m - 1))]}))\n    s=$((s / 2))\n  fi\n  echo $s",
  "  local l=($1)\n  local n=${#l[@]}\n  local m=$((n/2))\n  if ((n%2==0)); then\n\
    \    echo \"${l[m-1]}\"\n  else\n    echo \"${l[m]}\"\n  fi", "    local l=($1)\n\
    \    local m=$(( ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    [[ ${#l[@]} -eq 1\
    \ ]] && echo $s && return\n    [[ ${#l[@]} -eq 2 ]] && echo $(( (s + ${l[0]})\
    \ / 2 )) && return\n    [[ $(( ${#l[@]} % 2 )) -eq 0 ]] && s=$(( (s + ${l[$((m-1))]})\
    \ / 2 ))\n    echo $s", "    local l=$1\n    local m=$(((${#l[@]} + 1) / 2))\n\
    \    echo \"${l[$m]}\"", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(( (s\
    \ + ${l[$((m-1))]}) / 2 ))\n    fi\n    echo $s", "    local l=($1)\n    local\
    \ m=$((${#l[@]} / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        (( s += ${l[$m - 1]} ))\n        (( s /= 2 ))\n    fi\n    echo $s",
  "    local l=$1\n    local m=$(echo \"$l\" | wc -w)\n    local n=$((m/2))\n    echo\
    \ \"$l\" | sort -n | awk \"NR==$n\"", "    local l=$1\n    local n=$(echo $l |\
    \ wc -w)\n    local m=$((n/2))\n    local s=$(echo $l | tr ' ' '\\n' | sort -n\
    \ | sed -n \"$m\"p)\n    echo $s", "    local l=($1)\n    local m=$(( ${#l[@]}\
    \ / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n       \
    \ s=\"$s ${l[$((m-1))]}\"\n    fi\n    echo $s", "    l=($1)\n    n=${#l[@]}\n\
    \    if ((n == 0)); then\n        echo 0\n        return\n    fi\n    if ((n ==\
    \ 1)); then\n        echo ${l[0]}\n        return\n    fi\n    if ((n % 2 == 1));\
    \ then\n        echo ${l[$((n / 2))]}\n        return\n    fi\n    echo $(((${l[$((n\
    \ / 2 - 1))]} + ${l[$((n / 2))]})))", "    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local r=$((n % 2))\n    if ((r == 0)); then\n   \
    \     echo \"${l[$m]}\"\n    else\n        echo \"$(((${l[$m]} + ${l[$((m + 1))]})\
    \ / 2))\"\n    fi", "    local l=$1\n    local n=$(echo \"$l\" | wc -w)\n    local\
    \ m=$((n / 2))\n    local s=$(echo \"$l\" | sort -n)\n    local r=$(echo \"$s\"\
    \ | sed -n \"${m}p\")\n    echo \"$r\"", "  local l=$1\n  local m=$(echo \"$l\"\
    \ | wc -w)\n  local m2=$((m/2))\n  local m2p=$((m2+1))\n  local m2m=$((m2-1))\n\
    \  local l2=$(echo \"$l\" | tr ' ' '\\n' | sort -n | head -n $m2p | tail -n 1)\n\
    \  if [ $((m%2)) -eq 0 ]; then\n    local l1=$(echo \"$l\" | tr ' ' '\\n' | sort\
    \ -n | head -n $m2m | tail -n 1)\n    echo $(((l1+l2)/2))\n  else\n    echo $l2\n\
    \  fi", "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n    local\
    \ s=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n    if ((m%2)); then\n      \
    \  echo \"${s[$n]}\"\n    else\n        echo \"$(((${s[$n-1]}+${s[$n]})/2))\"\n\
    \    fi", "    local l=($1)\n    local i=${#l[@]}\n    local m=$((i/2))\n    local\
    \ r=$((i%2))\n    if ((r==0)); then\n        echo \"${l[m-1]}\"\n    else\n  \
    \      echo \"${l[m]}\"\n    fi", "    local l=($1)\n    local m=${#l[@]}\n  \
    \  local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    for ((i=0; i<m;\
    \ i++)); do\n        for ((j=i; j<m; j++)); do\n            if ((l[i] > l[j]));\
    \ then\n                tmp=${l[i]}\n                l[i]=${l[j]}\n          \
    \      l[j]=$tmp\n            fi\n        done\n    done\n    if ((m % 2 == 1));\
    \ then\n        echo ${l[m/2]}\n    else\n        k=$((m/2-1))\n        echo $(((l[k]+l[k+1])/2))\n\
    \    fi", "    local l=$1\n    local m=$(( ${#l[@]} / 2 ))\n    local s=($(printf\
    \ '%s\\n' \"${l[@]}\" | sort -n))\n    if (( ${#l[@]} % 2 == 0 )); then\n    \
    \    echo \"scale=2; (${s[$m-1]} + ${s[$m]}) / 2\" | bc\n    else\n        echo\
    \ \"${s[$m]}\"\n    fi", "  local l=($1)\n  local m=$((${#l[@]} / 2))\n  if ((\
    \ ${#l[@]} % 2 == 0 )); then\n    echo \"${l[$m]}\"\n  else\n    echo \"$(echo\
    \ \"scale=1; (${l[$m]} + ${l[$m-1]})/2\" | bc)\"\n  fi", "    local l=($1)\n \
    \   local m=${#l[@]}\n    local i=$((m/2))\n    if ((m%2==0)); then\n        echo\
    \ \"$(((${l[i-1]}+${l[i]})/2))\"\n    else\n        echo \"${l[i]}\"\n    fi",
  "  l=($1)\n  n=${#l[@]}\n  if (( $n == 0 )); then\n    echo 0\n  else\n    if ((\
    \ $n == 1 )); then\n      echo ${l[0]}\n    else\n      if (( $n % 2 == 1 ));\
    \ then\n        echo $(($n/2))\n        echo ${l[$(($n/2))]}\n      else\n   \
    \     echo $(($n/2-1))\n        echo $((${l[$(($n/2-1))]}+${l[$(($n/2))]}))/2\
    \ | bc -l\n      fi\n    fi\n  fi", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local m1=0\n\
    \    local m2=0\n    local m3=0\n    local m4=0\n    local m5=0\n    local m6=0\n\
    \    local m7=0\n    local m8=0\n    local m9=0\n    local m10=0\n    local m11=0\n\
    \    local m12=0\n    local m13=0\n    local m14=0\n    local m15=0\n    local\
    \ m16=0\n    local m17=0\n    local m18=0\n    local m19=0\n    local m20=0\n\
    \    local m21=0\n    local m22=0\n    local m23=0\n    local m24=0\n    local\
    \ m25=0\n    local m26=0\n    local m27=0\n    local m28=0\n    local m29=0\n\
    \    local m30=0\n    local m31=0\n    local m32=0\n    local m33=0\n    local\
    \ m34=0\n    local m35=0\n    local m36=0\n    local m37=0\n    local m38=0\n\
    \    local m39=0\n    local m40=0\n    local m41=0\n    local m42=0\n    local\
    \ m43=0\n    local m44=0\n    local m45=0\n    local m46=0\n    local m47=0\n\
    \    local m48=0\n    local m49=0\n    local m50=0\n    local m51=0\n    local\
    \ m52=0\n    local m53=0\n    local m54=0\n    local m55=0\n    local m56=0\n\
    \    local m57=0\n    local m58=0\n    local m59=0\n    local m60=0\n    local\
    \ m61=0\n    local m62=0\n    local m63=0\n    local m64=0\n    local m65=0\n\
    \    local m66=0\n    local m67=0", "    local l=`echo $1 | sed 's/ /\\n/g' |\
    \ sort -n`\n    local n=`echo $l | wc -w`\n    local m=$((n/2))\n    if [ $((n%2))\
    \ -eq 0 ]; then\n        echo $l | cut -d' ' -f$m,$((m+1)) | awk '{print ($1+$2)/2}'\n\
    \    else\n        echo $l | cut -d' ' -f$((m+1))\n    fi", "    local l=$1\n\
    \    local n=$(echo \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo\
    \ \"$l\" | sort -n)\n    if ((n%2)); then\n        echo \"$s\" | cut -d' ' -f$((m+1))\n\
    \    else\n        echo \"$s\" | cut -d' ' -f$m | awk '{print ($1+$2)/2}'\n  \
    \  fi", "    l=($1)\n    n=${#l[@]}\n    if ((n == 0)); then\n        echo 0\n\
    \        return\n    fi\n    if ((n == 1)); then\n        echo ${l[0]}\n     \
    \   return\n    fi\n    if ((n == 2)); then\n        echo $(((${l[0]} + ${l[1]})/2))\n\
    \        return\n    fi\n    # sort the list\n    l=($(for a in ${l[@]}; do echo\
    \ $a; done | sort -n))\n    # if odd, return middle element\n    if ((n % 2 ==\
    \ 1)); then\n        echo ${l[$((n/2))]}\n        return\n    fi\n    # if even,\
    \ return average of middle two elements\n    echo $(((${l[$((n/2 - 1))]} + ${l[$((n/2))]})/2))",
  "    l=($1)\n    n=${#l[@]}\n    if (( $n == 0 )); then\n        echo 0\n    elif\
    \ (( $n == 1 )); then\n        echo ${l[0]}\n    else\n        if (( $n % 2 ==\
    \ 1 )); then\n            echo ${l[$((n/2))]}\n        else\n            echo\
    \ $(((${l[$((n/2-1))]} + ${l[$((n/2))]})/2))\n        fi\n    fi", "    local\
    \ l=($1)\n    local n=${#l[@]}\n    local m=$((n / 2))\n    local s=${l[$m]}\n\
    \    if ((n % 2 == 0)); then\n        s=$((s + ${l[$((m - 1))]}))\n        s=$((s\
    \ / 2))\n    fi\n    echo $s", "    local l=($1)\n    local n=${#l[@]}\n    local\
    \ m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n        ((m--))\n\
    \        s=$(((s+l[m])/2))\n    fi\n    echo $s", "  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n / 2))\n  if ((n == 0)); then\n    echo 0\n  elif ((n == 1)); then\n\
    \    echo ${l[0]}\n  elif ((n % 2 == 0)); then\n    echo $(((l[m - 1] + l[m])\
    \ / 2))\n  else\n    echo ${l[m]}\n  fi", "    l=($1)\n    n=${#l[@]}\n    if\
    \ (( n == 0 )); then\n        echo 0\n    elif (( n == 1 )); then\n        echo\
    \ ${l[0]}\n    else\n        if (( n % 2 == 1 )); then\n            echo ${l[$((n/2))]}\n\
    \        else\n            echo $(( (${l[$((n/2-1))]} + ${l[$((n/2))]})/2 ))\n\
    \        fi\n    fi", "    local l=($1)\n    local i=0\n    local m=0\n    local\
    \ n=${#l[@]}\n    local t=0\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1;\
    \ j<n; j++)); do\n            if (( ${l[i]} > ${l[j]} )); then\n             \
    \   t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n       \
    \     fi\n        done\n    done\n    if (( n % 2 == 1 )); then\n        m=$((n/2))\n\
    \        echo ${l[m]}\n    else\n        m=$((n/2))\n        echo $(((${l[m-1]}+${l[m]})/2))\n\
    \    fi", "    local l=($1)\n    local i=0\n    local j=0\n    local k=0\n   \
    \ local m=0\n    local n=${#l[@]}\n    local t=0\n    for ((i=0; i<n; i++)); do\n\
    \        for ((j=i+1; j<n; j++)); do\n            if ((l[i] > l[j])); then\n \
    \               t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n\
    \            fi\n        done\n    done\n    if ((n % 2 == 1)); then\n       \
    \ echo ${l[n/2]}\n    else\n        k=$((n/2))\n        m=$((k-1))\n        echo\
    \ $(((l[k]+l[m])/2))\n    fi", "  local l=$1\n  local m=$(echo \"$l\" | wc -w)\n\
    \  local n=$((m / 2))\n  local r=$((m % 2))\n  local s=$(echo \"$l\" | sort -n)\n\
    \  if [ $r -eq 0 ]; then\n    echo $(echo \"$s\" | awk -v n=$n '{print $n}')\n\
    \  else\n    echo $(echo \"$s\" | awk -v n=$n '{print ($n + $n + 1) / 2}')\n \
    \ fi", "    local l=($1)\n    local m\n    local i\n    local j\n    local k\n\
    \    local n\n    n=${#l[@]}\n    if ((n == 0)); then\n        echo 0\n      \
    \  return\n    fi\n    for ((i = 0; i < n; i++)); do\n        for ((j = i + 1;\
    \ j < n; j++)); do\n            if ((l[i] > l[j])); then\n                k=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$k\n            fi\n     \
    \   done\n    done\n    if ((n % 2 == 1)); then\n        m=$((n / 2))\n      \
    \  echo ${l[m]}\n    else\n        m=$((n / 2 - 1))\n        echo $(((${l[m]}\
    \ + ${l[m + 1]} + 1) / 2))\n    fi", "    local l=($1)\n    local m=$(( ${#l[@]}\
    \ / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n       \
    \ s=$(( (s + ${l[$((m-1))]}) / 2 ))\n    fi\n    echo $s", "    local l=($1)\n\
    \    local m=$(( ${#l[@]} / 2 ))\n    local n=$(( ${#l[@]} - 1 ))\n    if (( ${#l[@]}\
    \ % 2 == 1 )); then\n        echo ${l[$m]}\n    else\n        echo $(( (${l[$m]}\
    \ + ${l[$n]} ) / 2 ))\n    fi", "    local l=($1)\n    local m=${#l[@]}\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local tmp=0\n    local median=0\n\n \
    \   # Sort the list\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m; j++));\
    \ do\n            if ((${l[i]} > ${l[j]})); then\n                tmp=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$tmp\n            fi\n   \
    \     done\n    done\n\n    # Return the median\n    if ((m % 2 == 1)); then\n\
    \        median=${l[m/2]}\n    else\n        k=$((m/2))\n        median=$(((${l[k-1]}\
    \ + ${l[k]})/2))\n    fi\n\n    echo $median", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local tmp=0\n    for ((i=0; i<m; i++)); do\n\
    \        for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n\
    \                tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n  \
    \  fi", "    local l=($1)\n    local m=$(( ${#l[@]} / 2 ))\n    local s=${l[$m]}\n\
    \    [ $(( ${#l[@]} % 2 )) -eq 0 ] && s=\"$s ${l[$(( m - 1 ))]}\"\n    echo $s",
  "  l=($1)\n  n=${#l[@]}\n  if ((n == 0)); then\n    echo 0\n  elif ((n == 1)); then\n\
    \    echo ${l[0]}\n  else\n    if ((n % 2 == 1)); then\n      echo $(($n / 2))\n\
    \      echo ${l[$(($n / 2))]}\n    else\n      echo $(($n / 2 - 1))\n      echo\
    \ $((${l[$(($n / 2 - 1))]} + ${l[$(($n / 2))]}))\n    fi\n  fi", "  local l=$1\n\
    \  local m=$(((${#l[@]}+1)/2))\n  echo ${l[$m]}", "  local l=$1\n  local n=$(echo\
    \ \"$l\" | wc -w)\n  local m=$((n / 2))\n  local s=$(echo \"$l\" | sort -n)\n\
    \  if ((n == 1)); then\n    echo \"$s\"\n  elif ((n % 2 == 1)); then\n    echo\
    \ \"$s\" | sed -n \"$((m + 1))p\"\n  else\n    echo \"$s\" | sed -n \"$((m + 1))p\"\
    \ | awk '{print ($1 + $2) / 2}'\n  fi", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local s\n    local i\n    local j\n    local k\n    for ((i=0; i<m; i++));\
    \ do\n        k=${l[i]}\n        for ((j=i; j>0 && l[j-1]>k; j--)); do\n     \
    \       l[j]=${l[j-1]}\n        done\n        l[j]=$k\n    done\n    if ((m%2==1));\
    \ then\n        s=${l[m/2]}\n    else\n        s=$(((${l[m/2-1]}+${l[m/2]})/2))\n\
    \    fi\n    echo $s", "    local l=($1)\n    local m=${#l[@]}\n    local n=$((m\
    \ / 2))\n    local s=${l[$n]}\n    ((m % 2 == 0)) && s=$(echo \"scale=1; (${l[$n-1]}\
    \ + $s) / 2\" | bc)\n    echo $s", "    local l=($1)\n    local m=${#l[@]}\n \
    \   local i=0\n    local j=0\n    local k=0\n    local tmp=0\n    for ((i=0; i<m;\
    \ i++)); do\n        for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]}));\
    \ then\n                tmp=${l[i]}\n                l[i]=${l[j]}\n          \
    \      l[j]=$tmp\n            fi\n        done\n    done\n    if ((m % 2 == 1));\
    \ then\n        echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n\
    \    fi", "    local l=($1)\n    local m=${#l[@]}\n    local i=$((m/2))\n    if\
    \ ((m%2==0)); then\n        echo \"$(((l[i-1]+l[i])/2))\"\n    else\n        echo\
    \ \"${l[i]}\"\n    fi", "  local l=($1)\n  local n=${#l[@]}\n  local m=$((n /\
    \ 2))\n  local s\n  for ((i = 0; i < n; i++)); do\n    for ((j = i; j > 0; j--));\
    \ do\n      if [[ ${l[j-1]} -gt ${l[j]} ]]; then\n        s=${l[j]}\n        l[j]=${l[j-1]}\n\
    \        l[j-1]=$s\n      fi\n    done\n  done\n  if ((n % 2 == 0)); then\n  \
    \  echo $(((${l[m-1]} + ${l[m]})/2))\n  else\n    echo ${l[m]}\n  fi", "    local\
    \ l=($1)\n    local m=${#l[@]}\n    local n=$((m/2))\n    local o=$((m%2))\n \
    \   if [ $o -eq 0 ]; then\n        echo \"${l[$n]}\"\n    else\n        echo \"\
    (${l[$n]}+${l[$((n+1))]})/2\" | bc -l\n    fi", "    local l=$1\n    local n=$(echo\
    \ $l | wc -w)\n    local m=$((n/2))\n    local i=1\n    local s=0\n    for x in\
    \ $l; do\n        if [ $i -eq $m ]; then\n            s=$x\n        fi\n     \
    \   i=$((i+1))\n    done\n    if [ $((n%2)) -eq 0 ]; then\n        local i=1\n\
    \        for x in $l; do\n            if [ $i -eq $((m+1)) ]; then\n         \
    \       s=$((s+x))\n                break\n            fi\n            i=$((i+1))\n\
    \        done\n        s=$((s/2))\n    fi\n    echo $s", "  local l=($1)\n  local\
    \ m=$(( ${#l[@]} / 2 ))\n  local s=${l[$m]}\n  [ $(( ${#l[@]} % 2 )) -eq 0 ] &&\
    \ s=\"$s ${l[$(( m - 1 ))]}\"\n  echo $s", "  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  if ((n%2==0)); then\n    echo $(echo \"scale=2; (${l[m-1]}+${l[m]})/2\"\
    \ | bc)\n  else\n    echo ${l[m]}\n  fi", "  local l=$1\n  local m=$(echo \"$l\"\
    \ | wc -w)\n  local n=$((m/2))\n  echo \"$l\" | sort -n | sed -n \"${n}p\"", " \
    \ local l=($1)\n  local m=${#l[@]}\n  local i=$((m / 2))\n  local j=$((i + 1))\n\
    \  local k=$((m % 2))\n  local s=${l[$i]}\n  if [ $k -eq 0 ]; then\n    s=$((s\
    \ + ${l[$j]}))\n    s=$((s / 2))\n  fi\n  echo $s", "  local l=($1)\n  local m=${#l[@]}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  for ((i=0; i<m; i++));\
    \ do\n    for ((j=i; j<m; j++)); do\n      if (( ${l[i]} > ${l[j]} )); then\n\
    \        tmp=${l[i]}\n        l[i]=${l[j]}\n        l[j]=$tmp\n      fi\n    done\n\
    \  done\n  if (( m % 2 == 1 )); then\n    echo ${l[m/2]}\n  else\n    echo $((\
    \ (${l[m/2-1]} + ${l[m/2]}) / 2 ))\n  fi", "    local l=($1)\n    local i\n  \
    \  local m\n    local n\n    local t\n    for ((i=0; i<${#l[@]}; i++)); do\n \
    \       m=${l[$i]}\n        n=$i\n        while ((n > 0)) && ((l[n-1] > m)); do\n\
    \            l[n]=${l[n-1]}\n            ((n--))\n        done\n        l[n]=$m\n\
    \    done\n    ((t=${#l[@]}/2))\n    if ((${#l[@]}%2 == 0)); then\n        echo\
    \ \"${l[$t-1]}\"\n    else\n        echo \"${l[$t]}\"\n    fi", "    local l=($1)\n\
    \    local i\n    local m\n    local n\n    local t\n    local v\n    n=${#l[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        v=${l[i]}\n        for ((j=i; j>0 && l[j-1]>v;\
    \ j--)); do\n            l[j]=${l[j-1]}\n        done\n        l[j]=$v\n    done\n\
    \    if ((n%2==1)); then\n        m=$((n/2))\n        echo ${l[m]}\n    else\n\
    \        m=$((n/2-1))\n        t=$((l[m]+l[m+1]))\n        echo $((t/2))\n   \
    \ fi"]
stop_tokens:
- "\n}"

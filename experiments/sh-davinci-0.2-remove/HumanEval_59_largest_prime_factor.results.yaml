language: sh
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      largest_prime_factor\
    \ $(( n / i ))\n      return\n    fi\n    (( i++ ))\n  done\n  echo $n\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest=1\n    while (( i * i <= n )); do\n \
    \       if (( n % i == 0 )); then\n            largest=$i\n            n=$(( n\
    \ / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    if ((\
    \ n > 1 )); then\n        largest=$n\n    fi\n    echo $largest\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i))\
    \ -eq 0 ]; then\n      largest=$(largest_prime_factor $((n / i)))\n      break\n\
    \    fi\n    i=$((i + 1))\n  done\n  if [ $largest -eq 0 ]; then\n    echo $n\n\
    \  else\n    echo $largest\n  fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n            max=$i\n \
    \       else\n            i=$((i + 1))\n        fi\n    done\n    echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( n % i != 0 )); do\n    (( i++ ))\n  done\n  local factor=$i\n\
    \  if (( n == factor )); then\n    echo $n\n  else\n    largest_prime_factor $((\
    \ n / factor ))\n  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while (( i * i <= n )); do\n    if (( n % i ==\
    \ 0 )); then\n      max=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n\
    \    fi\n  done\n  if (( n > 1 )); then\n    max=$n\n  fi\n  echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while (( i <= n )); do\n    if (( n % i == 0 ));\
    \ then\n      max=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n\
    \  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      n=$((n / i))\n      max=$i\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while (( i <= n )); do\n    if (( n % i == 0 ));\
    \ then\n      max=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n\
    \  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    largest_prime_factor $n\n  fi\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( n > 1 )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n            max=$i\n \
    \       else\n            i=$((i + 1))\n        fi\n    done\n    echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local p=2\n    while [ $((n % p)) -eq 0 ]; do\n        n=$((n / p))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $p\n    else\n        p=$((p\
    \ + 1))\n        while [ $((n % p)) -ne 0 ]; do\n            p=$((p + 1))\n  \
    \      done\n        largest_prime_factor $n\n    fi\n}\n\ncandidate() {\n   \
    \ largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"\
    63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n%i)) -eq 0 ]; do\n    n=$((n/i))\n  done\n  if [ $n\
    \ -eq 1 ]; then\n    echo $i\n  else\n    echo $n\n  fi\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=1\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      max=$i\n      n=$((n / i))\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=1\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n            max=$i\n \
    \       else\n            i=$((i + 1))\n        fi\n    done\n    echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while (( n % factor != 0 )); do\n        (( factor++\
    \ ))\n    done\n    if (( n == factor )); then\n        echo $n\n    else\n  \
    \      largest_prime_factor $(( n / factor ))\n    fi\n}\n\ncandidate() {\n  \
    \  largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( n > 1 )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [[ $((n % i)) -eq 0 ]]; do\n    n=$((n / i))\n  done\n \
    \ echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( n > 1 )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            local factor=$((n / i))\n          \
    \  if [ $((factor % i)) -ne 0 ]; then\n                max=$factor\n         \
    \   fi\n        fi\n        i=$((i + 1))\n    done\n    echo $max\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while (( i * i <= n )); do\n    if (( n % i ==\
    \ 0 )); then\n      max=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n\
    \    fi\n  done\n  if (( n > 1 )); then\n    max=$n\n  fi\n  echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    echo $(largest_prime_factor $n)\n\
    \  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n  \
    \    n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while (( i * i <= n )); do\n\
    \        if (( n % i == 0 )); then\n            max_factor=$i\n            while\
    \ (( n % i == 0 )); do\n                n=$(( n / i ))\n            done\n   \
    \     fi\n        (( i++ ))\n    done\n    if (( n > 1 )); then\n        max_factor=$n\n\
    \    fi\n    echo $max_factor\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     largest_prime_factor $((n / i))\n      return\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=1\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$i\n            n=$((n / i))\n \
    \       else\n            i=$((i + 1))\n        fi\n    done\n    echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local f=1\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      f=$i\n      n=$((n / i))\n    else\n      i=$((i + 1))\n  \
    \  fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest=1\n    while [ $i -lt $n ]; do\n    \
    \    if [ $((n % i)) -eq 0 ]; then\n            largest=$i\n            n=$((n\
    \ / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $n -gt 1 ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      n=$((n / i))\n      max=$i\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local factor=2\n  while [ $((n % factor)) -eq 0 ]; do\n    n=$((n / factor))\n\
    \  done\n  factor=3\n  while [ $n -gt 1 ]; do\n    while [ $((n % factor)) -eq\
    \ 0 ]; do\n      n=$((n / factor))\n    done\n    factor=$((factor + 2))\n  done\n\
    \  echo $((factor - 2))\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    while (( n % i == 0 )); do\n \
    \     n=$(( n / i ))\n    done\n    (( i++ ))\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while (( i * i <= n )); do\n    if (( n % i ==\
    \ 0 )); then\n      max=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n\
    \    fi\n  done\n  if (( n > 1 )); then\n    max=$n\n  fi\n  echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=1\n  while (( n > 1 )); do\n    if (( n % i == 0 ));\
    \ then\n      max=$i\n      while (( n % i == 0 )); do\n        n=$(( n / i ))\n\
    \      done\n    fi\n    i=$(( i + 1 ))\n  done\n  echo $max\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n  \
    \    n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest=1\n  while [ $i -lt $n ]; do\n    if [ $((n % i))\
    \ -eq 0 ]; then\n      largest=$i\n      n=$((n / i))\n    else\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while [ $((n % factor)) -eq 0 ]; do\n        n=$((n\
    \ / factor))\n    done\n    if [ $n -eq 1 ]; then\n        echo $factor\n    else\n\
    \        factor=3\n        while [ $((n % factor)) -ne 0 ]; do\n            factor=$((factor\
    \ + 2))\n        done\n        echo $factor\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      max=$(largest_prime_factor $((n / i)))\n    fi\n    i=$((i\
    \ + 1))\n  done\n  if [ $max -eq 0 ]; then\n    echo $n\n  else\n    echo $max\n\
    \  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     largest_prime_factor $((n / i))\n      return\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i))\
    \ -eq 0 ]; then\n      local factor=$((n / i))\n      if [ $((factor % i)) -ne\
    \ 0 ]; then\n        largest=$i\n      fi\n    fi\n    i=$((i + 1))\n  done\n\
    \  echo $largest\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            local factor=$((n / i))\n          \
    \  if [ $((factor % i)) -ne 0 ]; then\n                max=$i\n            fi\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $max\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $(($n % $i)) -eq 0 ]; then\n\
    \      n=$(($n / $i))\n    else\n      i=$(($i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    largest_prime_factor $n\n  fi\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest=1\n  while (( i <= n )); do\n    if (( n % i ==\
    \ 0 )); then\n      largest=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n\
    \    fi\n  done\n  echo $largest\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        while (( n % i\
    \ == 0 )); do\n            n=$(( n / i ))\n        done\n        (( i++ ))\n \
    \   done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=1\n  while (( i * i <= n )); do\n    if (( n % i ==\
    \ 0 )); then\n      max=$i\n      n=$(( n / i ))\n    else\n      (( i++ ))\n\
    \    fi\n  done\n  if (( n > 1 )); then\n    max=$n\n  fi\n  echo $max\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=1\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      max=$i\n      n=$((n / i))\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local factor=2\n  while (( n % factor != 0 )); do\n    (( factor++ ))\n  done\n\
    \  local largest_factor=$factor\n  while (( n % factor == 0 )); do\n    (( n /=\
    \ factor ))\n  done\n  if (( n > 1 )); then\n    largest_factor=$(largest_prime_factor\
    \ $n)\n  fi\n  echo $largest_factor\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    local largest=2\n    while [ $factor -le $n ];\
    \ do\n        if [ $((n % factor)) -eq 0 ]; then\n            n=$((n / factor))\n\
    \            largest=$factor\n        else\n            factor=$((factor + 1))\n\
    \        fi\n    done\n    echo $largest\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n  \
    \    n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    echo $(largest_prime_factor $n)\n\
    \  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    echo $(largest_prime_factor $n)\n\
    \  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest=1\n  while [ $i -lt $n ]; do\n    if [ $((n % i))\
    \ -eq 0 ]; then\n      n=$((n / i))\n      largest=$i\n    else\n      i=$((i\
    \ + 1))\n    fi\n  done\n  echo $largest\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $n -gt 1 ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      max=$i\n      n=$((n / i))\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [[ $n -gt 1 ]]; do\n        if [[ $((n % i))\
    \ -eq 0 ]]; then\n            n=$((n / i))\n        else\n            i=$((i +\
    \ 1))\n        fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local factor=2\n  local largest_factor=2\n  while [ $n -gt 1 ]; do\n    if\
    \ [ $((n % factor)) -eq 0 ]; then\n      n=$((n / factor))\n      largest_factor=$factor\n\
    \    else\n      factor=$((factor + 1))\n    fi\n  done\n  echo $largest_factor\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n  \
    \    n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local factor=2\n  local largest_factor=2\n  while [ $factor -le $n ]; do\n\
    \    if [ $((n % factor)) -eq 0 ]; then\n      n=$((n / factor))\n      largest_factor=$factor\n\
    \    else\n      factor=$((factor + 1))\n    fi\n  done\n  echo $largest_factor\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while (( i * i <= n )); do\n\
    \        if (( n % i == 0 )); then\n            max_factor=$i\n            while\
    \ (( n % i == 0 )); do\n                n=$(( n / i ))\n            done\n   \
    \     fi\n        (( i++ ))\n    done\n    if (( n > 1 )); then\n        max_factor=$n\n\
    \    fi\n    echo $max_factor\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest_prime=1\n    while [ $i -lt $n ]; do\n\
    \        if [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n           \
    \ largest_prime=$i\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $largest_prime\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while ((n > 1)); do\n    while ((n % i == 0)); do\n      n=$((n\
    \ / i))\n    done\n    i=$((i + 1))\n  done\n  echo $((i - 1))\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest_prime=1\n  while [ $i -lt $n ]; do\n    if [ $(($n\
    \ % $i)) -eq 0 ]; then\n      n=$(($n / $i))\n      largest_prime=$i\n    else\n\
    \      i=$(($i + 1))\n    fi\n  done\n  echo $largest_prime\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    while (( n % i == 0 )); do\n \
    \     n=$(( n / i ))\n    done\n    (( i++ ))\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while [ $((n % factor)) -eq 0 ]; do\n        n=$((n\
    \ / factor))\n    done\n    factor=3\n    while [ $((n % factor)) -eq 0 ]; do\n\
    \        n=$((n / factor))\n    done\n    while [ $n -gt 1 ]; do\n        factor=$((factor\
    \ + 2))\n        while [ $((n % factor)) -eq 0 ]; do\n            n=$((n / factor))\n\
    \        done\n    done\n    echo $((factor - 2))\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      local factor=$((n / i))\n      if [ $((factor % i)) -ne 0 ];\
    \ then\n        max=$i\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( n > 1 )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      i=$(( i + 1 ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest_prime=1\n    while (( i * i <= n ));\
    \ do\n        if (( n % i == 0 )); then\n            n=$(( n / i ))\n        \
    \    largest_prime=$i\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    if (( n > 1 )); then\n        largest_prime=$n\n    fi\n    echo $largest_prime\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local factor=2\n  local largest_factor=1\n  while [ $n -gt 1 ]; do\n    if\
    \ [ $((n % factor)) -eq 0 ]; then\n      largest_factor=$factor\n      n=$((n\
    \ / factor))\n    else\n      factor=$((factor + 1))\n    fi\n  done\n  echo $largest_factor\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( i * i <= n )); do\n     \
    \   if (( n % i == 0 )); then\n            max=$i\n            n=$(( n / i ))\n\
    \        else\n            (( i++ ))\n        fi\n    done\n    if (( n > 1 ));\
    \ then\n        max=$n\n    fi\n    echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while (( i * i <= n )); do\n\
    \        if (( n % i == 0 )); then\n            max_factor=$i\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    if\
    \ (( n > 1 )); then\n        max_factor=$n\n    fi\n    echo $max_factor\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            local f=$(largest_prime_factor $((n / i)))\n        \
    \    echo $f\n            return\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    echo $(largest_prime_factor $n)\n\
    \  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            local factor=$((n / i))\n          \
    \  if [ $((factor % i)) -ne 0 ]; then\n                max=$factor\n         \
    \   fi\n        fi\n        i=$((i + 1))\n    done\n    echo $max\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while (( i * i <= n )); do\n\
    \        if (( n % i == 0 )); then\n            max_factor=$i\n            n=$((\
    \ n / i ))\n        else\n            (( i++ ))\n        fi\n    done\n    if\
    \ (( n > 1 )); then\n        max_factor=$n\n    fi\n    echo $max_factor\n}\n\n\
    candidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( n > 1 )); do\n        if\
    \ (( n % i == 0 )); then\n            n=$(( n / i ))\n            max=$i\n   \
    \     else\n            i=$(( i + 1 ))\n        fi\n    done\n    echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    largest_prime_factor $n\n  fi\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$(largest_prime_factor $((n / i)))\n\
    \        fi\n        i=$((i + 1))\n    done\n    if [ $max -eq 0 ]; then\n   \
    \     echo $n\n    else\n        echo $max\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( n % i != 0 )); do\n    (( i++ ))\n  done\n  local factor=$i\n\
    \  local next_factor=$(( n / i ))\n  if (( next_factor > 1 )); then\n    local\
    \ next_largest_factor=$(largest_prime_factor $next_factor)\n    if (( next_largest_factor\
    \ > factor )); then\n      factor=$next_largest_factor\n    fi\n  fi\n  echo $factor\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$(largest_prime_factor $((n / i)))\n\
    \        fi\n        i=$((i + 1))\n    done\n    if [ $max -eq 0 ]; then\n   \
    \     echo $n\n    else\n        echo $max\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i <= n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $i\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    while (( n > 1 )); do\n        if (( n % factor\
    \ == 0 )); then\n            n=$(( n / factor ))\n        else\n            factor=$((\
    \ factor + 1 ))\n        fi\n    done\n    echo $factor\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $(($n % $i))\
    \ -eq 0 ]; then\n            largest_prime_factor $(($n / $i))\n            return\n\
    \        fi\n        i=$(($i + 1))\n    done\n    echo $n\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      local f=$(largest_prime_factor $((n / i)))\n      if [ $f -gt\
    \ $max ]; then\n        max=$f\n      fi\n    fi\n    i=$((i + 1))\n  done\n \
    \ if [ $n -gt $max ]; then\n    echo $n\n  else\n    echo $max\n  fi\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while (( i <= n )); do\n    if (( n % i == 0 ));\
    \ then\n      # i is a factor of n.\n      # Is i prime?\n      local j=2\n  \
    \    local is_prime=1\n      while (( j < i )); do\n        if (( i % j == 0 ));\
    \ then\n          is_prime=0\n          break\n        fi\n        (( j++ ))\n\
    \      done\n      if (( is_prime )); then\n        max=$i\n      fi\n    fi\n\
    \    (( i++ ))\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    largest_prime_factor $n\n  fi\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      local factor=$((n / i))\n      if [ $((factor % i)) -ne 0 ];\
    \ then\n        max=$factor\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ $max\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest_prime=1\n  while (( i <= n )); do\n    if (( n %\
    \ i == 0 )); then\n      largest_prime=$i\n      n=$(( n / i ))\n    else\n  \
    \    i=$(( i + 1 ))\n    fi\n  done\n  echo $largest_prime\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            local factor=$((n / i))\n          \
    \  if [ $((factor % i)) -ne 0 ]; then\n                max=$i\n            fi\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $max\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      local factor=$((n / i))\n      if [ $((factor % i)) -ne 0 ];\
    \ then\n        max=$i\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      local factor=$((n / i))\n      if [ $((factor % i)) -ne 0 ];\
    \ then\n        max=$i\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $max\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest_prime=1\n    while [ $n -gt 1 ]; do\n\
    \        if [ $((n % i)) -eq 0 ]; then\n            largest_prime=$i\n       \
    \     n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $largest_prime\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    local largest_factor=2\n    while [ $factor -le\
    \ $n ]; do\n        if [ $((n % factor)) -eq 0 ]; then\n            n=$((n / factor))\n\
    \            largest_factor=$factor\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo $largest_factor\n}\n\ncandidate() {\n\
    \    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max_factor=1\n    while (( n > 1 )); do\n   \
    \     if (( n % i == 0 )); then\n            max_factor=$i\n            while\
    \ (( n % i == 0 )); do\n                n=$(( n / i ))\n            done\n   \
    \     fi\n        (( i++ ))\n    done\n    echo $max_factor\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local f=1\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      f=$i\n      n=$((n / i))\n    else\n      i=$((i + 1))\n  \
    \  fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      local n=$((n / i))\n      local max=$i\n    else\n      local\
    \ i=$((i + 1))\n    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local factor=2\n  while (( n % factor != 0 )); do\n    (( factor++ ))\n  done\n\
    \  if (( n == factor )); then\n    echo $n\n  else\n    largest_prime_factor $((\
    \ n / factor ))\n  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( i * i <= n )); do\n     \
    \   if (( n % i == 0 )); then\n            n=$(( n / i ))\n            max=$i\n\
    \        else\n            (( i++ ))\n        fi\n    done\n    if (( n > 1 ));\
    \ then\n        max=$n\n    fi\n    echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$(largest_prime_factor $((n / i)))\n\
    \        fi\n        i=$((i + 1))\n    done\n    if [ $max -eq 0 ]; then\n   \
    \     echo $n\n    else\n        echo $max\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$(largest_prime_factor $((n / i)))\n\
    \        fi\n        i=$((i + 1))\n    done\n    if [ $max -gt $i ]; then\n  \
    \      echo $max\n    else\n        echo $i\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max_factor=1\n  while (( i * i <= n )); do\n    if (( n\
    \ % i == 0 )); then\n      max_factor=$i\n      n=$(( n / i ))\n    else\n   \
    \   (( i++ ))\n    fi\n  done\n  if (( n > 1 )); then\n    max_factor=$n\n  fi\n\
    \  echo $max_factor\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $n -gt 1 ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      max=$i\n      n=$((n / i))\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $max\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest=1\n    while [ $i -lt $n ]; do\n    \
    \    if [ $((n % i)) -eq 0 ]; then\n            largest=$i\n            n=$((n\
    \ / i))\n        else\n            i=$((i + 1))\n        fi\n    done\n    echo\
    \ $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $((n % i)) -eq 0 ]; do\n    n=$((n / i))\n  done\n  if\
    \ [ $n -eq 1 ]; then\n    echo $i\n  else\n    echo $(largest_prime_factor $n)\n\
    \  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\"\
    \ ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"\
    11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( i * i <= n )); do\n     \
    \   if (( n % i == 0 )); then\n            max=$i\n            n=$(( n / i ))\n\
    \        else\n            (( i++ ))\n        fi\n    done\n    if (( n > 1 ));\
    \ then\n        max=$n\n    fi\n    echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$(largest_prime_factor $((n / i)))\n\
    \        fi\n        i=$((i + 1))\n    done\n    if [ $max -eq 0 ]; then\n   \
    \     echo $n\n    else\n        echo $max\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n  \
    \    n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( n > 1 )); do\n        if\
    \ (( n % i == 0 )); then\n            max=$i\n            while (( n % i == 0\
    \ )); do\n                n=$(( n / i ))\n            done\n        fi\n     \
    \   (( i++ ))\n    done\n    echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        largest_prime_factor\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local largest_prime=2\n  while (( i <= n )); do\n    while ((\
    \ n % i == 0 )); do\n      n=$(( n / i ))\n      largest_prime=$i\n    done\n\
    \    i=$(( i + 1 ))\n  done\n  echo $largest_prime\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i < n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    local largest_factor=1\n    while [ $n -gt 1 ];\
    \ do\n        if [ $((n % factor)) -eq 0 ]; then\n            largest_factor=$factor\n\
    \            n=$((n / factor))\n        else\n            factor=$((factor + 1))\n\
    \        fi\n    done\n    echo $largest_factor\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local factor=2\n    local largest_factor=1\n    while [ $n -gt 1 ];\
    \ do\n        if [ $((n % factor)) -eq 0 ]; then\n            largest_factor=$factor\n\
    \            n=$((n / factor))\n        else\n            factor=$((factor + 1))\n\
    \        fi\n    done\n    echo $largest_factor\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n            max=$i\n \
    \       else\n            i=$((i + 1))\n        fi\n    done\n    echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local factor=2\n  while (( n % factor != 0 )); do\n    (( factor++ ))\n  done\n\
    \  if (( n == factor )); then\n    echo $n\n  else\n    largest_prime_factor $((\
    \ n / factor ))\n  fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=1\n    while (( n > 1 )); do\n        if\
    \ (( n % i == 0 )); then\n            max=$i\n            while (( n % i == 0\
    \ )); do\n                n=$(( n / i ))\n            done\n        fi\n     \
    \   (( i++ ))\n    done\n    echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while (( i * i <= n )); do\n     \
    \   if (( n % i == 0 )); then\n            n=$(( n / i ))\n            max=$i\n\
    \        else\n            (( i++ ))\n        fi\n    done\n    if (( n > 1 ));\
    \ then\n        max=$n\n    fi\n    echo $max\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $n\n    fi\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\"\
    ) = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\"\
    ) = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=0\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq\
    \ 0 ]; then\n      max=$i\n      n=$((n / i))\n    else\n      i=$((i + 1))\n\
    \    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$(largest_prime_factor $((n / i)))\n\
    \        fi\n        i=$((i + 1))\n    done\n    if [ $max -gt $i ]; then\n  \
    \      echo $max\n    else\n        echo $i\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=1\n  while [ $i -lt $n ]; do\n    if [ $(($n % $i))\
    \ -eq 0 ]; then\n      max=$i\n      n=$(($n / $i))\n    else\n      i=$(($i +\
    \ 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local largest_prime=1\n    while [ $i -lt $n ]; do\n\
    \        if [ $((n % i)) -eq 0 ]; then\n            n=$((n / i))\n           \
    \ largest_prime=$i\n        else\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $largest_prime\n}\n\ncandidate() {\n    largest_prime_factor \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate\
    \ \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate\
    \ \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $i -lt $n ]; do\n        if [ $((n % i)) -eq\
    \ 0 ]; then\n            n=$((n / i))\n        else\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while [ $i -lt $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n \
    \     n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo $n\n\
    }\n\ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i * i <= n )); do\n        if (( n % i ==\
    \ 0 )); then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=1\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            max=$i\n            n=$((n / i))\n \
    \       else\n            i=$((i + 1))\n        fi\n    done\n    echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    local max=0\n    while [ $i -lt $n ]; do\n        if\
    \ [ $((n % i)) -eq 0 ]; then\n            local factor=$((n / i))\n          \
    \  if [ $((factor % i)) -ne 0 ]; then\n                max=$factor\n         \
    \   fi\n        fi\n        i=$((i + 1))\n    done\n    echo $max\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: -1
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while [ $((n % i)) -eq 0 ]; do\n        n=$((n / i))\n\
    \    done\n    if [ $n -eq 1 ]; then\n        echo $i\n    else\n        echo\
    \ $(largest_prime_factor $n)\n    fi\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: Timeout
  stderr: None
  stdout: None
  timestamp: 1660004172
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i <= n )); do\n    if (( n % i == 0 )); then\n      n=$((\
    \ n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $i\n}\n\ncandidate()\
    \ {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate\
    \ \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate\
    \ \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  local max=1\n  while [ $i -lt $n ]; do\n    if [ $(($n % $i))\
    \ -eq 0 ]; then\n      max=$i\n      n=$(($n / $i))\n    else\n      i=$(($i +\
    \ 1))\n    fi\n  done\n  echo $n\n}\n\ncandidate() {\n    largest_prime_factor\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n \
    \   [[ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n\
    \    [[ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004168
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n    local\
    \ n=$1\n    local i=2\n    while (( i < n )); do\n        if (( n % i == 0 ));\
    \ then\n            n=$(( n / i ))\n        else\n            (( i++ ))\n    \
    \    fi\n    done\n    echo $n\n}\n\ncandidate() {\n    largest_prime_factor \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\") = \"5\" ]]\n    [[\
    \ $(candidate \"27\") = \"3\" ]]\n    [[ $(candidate \"63\") = \"7\" ]]\n    [[\
    \ $(candidate \"330\") = \"11\" ]]\n    [[ $(candidate \"13195\") = \"29\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167
- exit_code: 0
  program: "#!/bin/bash\n# Return the largest prime factor of n. Assume n > 1 and\
    \ is not a prime.\n#\n# $1 is an integer\nlargest_prime_factor() {\n  local n=$1\n\
    \  local i=2\n  while (( i * i <= n )); do\n    if (( n % i == 0 )); then\n  \
    \    n=$(( n / i ))\n    else\n      (( i++ ))\n    fi\n  done\n  echo $n\n}\n\
    \ncandidate() {\n    largest_prime_factor \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15\") = \"5\" ]]\n    [[ $(candidate \"27\") = \"3\" ]]\n\
    \    [[ $(candidate \"63\") = \"7\" ]]\n    [[ $(candidate \"330\") = \"11\" ]]\n\
    \    [[ $(candidate \"13195\") = \"29\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660004167

language: sh
name: HumanEval_8_sum_product
results:
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    (( sum += i ))\n    (( product *= i ))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  sum=0\n  product=1\n  for i in $1; do\n    sum=$((sum\
    \ + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\n}\n\
    \ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate\
    \ \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") = \"15 105\" ]]\n \
    \   [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    (( sum += i ))\n    (( product *= i ))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    (( sum += i ))\n    (( product *= i ))\n  done\n  echo \"$sum $product\"\n\
    }\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    $sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"\
    3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"\
    3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local prod=1\n  for i in $1; do\n  \
    \  sum=$((sum + i))\n    prod=$((prod * i))\n  done\n  echo \"($sum, $prod)\"\n\
    }\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  sum=0\n  product=1\n  for i in $1; do\n    sum=$((sum\
    \ + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\n}\n\
    \ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate\
    \ \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") = \"15 105\" ]]\n \
    \   [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"$sum $product\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    sum=0\n    product=1\n    for i in $1; do\n     \
    \   sum=$((sum + i))\n        product=$((product * i))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 0
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        sum=$((sum + i))\n        product=$((product * i))\n    done\n \
    \   echo \"$sum $product\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate\
    \ \"1 1 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[\
    \ $(candidate \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n  local sum=0\n  local product=1\n  for i in $1; do\n\
    \    sum=$((sum + i))\n    product=$((product * i))\n  done\n  echo \"($sum, $product)\"\
    \n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1 1\") = \"3 1\" ]]\n\
    \    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate \"3 5 7\") =\
    \ \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
- exit_code: 1
  program: "#!/bin/bash\n# For a given list of integers, return a tuple consisting\
    \ of a sum and a product of all the integers in a list.\n# Empty sum should be\
    \ equal to 0 and empty product should be equal to 1.\n#\n# $1 is a space-separated\
    \ list\nsum_product() {\n    local sum=0\n    local product=1\n    for i in $1;\
    \ do\n        (( sum += i ))\n        (( product *= i ))\n    done\n    echo \"\
    ($sum, $product)\"\n}\n\ncandidate() {\n    sum_product \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"0 1\" ]]\n    [[ $(candidate \"1 1\
    \ 1\") = \"3 1\" ]]\n    [[ $(candidate \"100 0\") = \"100 0\" ]]\n    [[ $(candidate\
    \ \"3 5 7\") = \"15 105\" ]]\n    [[ $(candidate \"10\") = \"10 10\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660002984
